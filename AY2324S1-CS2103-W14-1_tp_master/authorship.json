[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"zhanyang01"},"content":"[![CI Status](https://github.com/AY2324S1-CS2103-W14-1/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2324S1-CS2103-W14-1/tp/actions)","lastModifiedDate":"2023-10-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":6,"author":{"gitId":"zhanyang01"},"content":"* This is **a desktop application for managing contacts, that is optimised for Command Line Interface(CLI) usage with the benefits of a Graphical User Interface(GUI), Insurahub aims to improve the productivity of financial advisors who prefers typing.**.\u003cbr\u003e","lastModifiedDate":"2023-09-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"  Example usages:","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"zhanyang01"},"content":"  * Keep track of daily tasks(to be added soon)","lastModifiedDate":"2023-09-27"},{"lineNumber":9,"author":{"gitId":"zhanyang01"},"content":"  * Manage clients efficiently(in progress)","lastModifiedDate":"2023-09-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"* The project simulates an ongoing software project for a desktop application (called _AddressBook_) used for managing contact details.","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  * It is **written in OOP fashion**. It provides a **reasonably well-written** code base **bigger** (around 6 KLoC) than what students usually write in beginner-level SE modules, without being overwhelmingly big.","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  * It comes with a **reasonable level of user and developer documentation**.","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"zhanyang01"},"content":"* It is named `Insurahub` because it allows financial advisors a way to manage their large client base and appointments.","lastModifiedDate":"2023-09-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"* For the detailed documentation of this project, see the **[Address Book Product Website](https://se-education.org/addressbook-level3)**.","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"zhanyang01"},"content":" ### Original Source","lastModifiedDate":"2023-09-26"},{"lineNumber":16,"author":{"gitId":"zhanyang01"},"content":"* This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org)","lastModifiedDate":"2023-09-26"}],"authorContributionMap":{"zhanyang01":7,"-":9}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  layout: default.md","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  title: \"About Us\"","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"# About Us","lastModifiedDate":"2023-09-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"You can reach us at the email `seer[at]comp.nus.edu.sg`","lastModifiedDate":"2020-06-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"zhanyang01"},"content":"### Zhan Yang","lastModifiedDate":"2023-09-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"zhanyang01"},"content":"\u003cimg src\u003d\"images/zhanyang01.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-09-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"[[homepage](http://www.comp.nus.edu.sg/~damithch)]","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"zhanyang01"},"content":"[[github](https://github.com/zhanyang01)]","lastModifiedDate":"2023-09-26"},{"lineNumber":20,"author":{"gitId":"zhanyang01"},"content":"[[portfolio](team/zhanyang01.md)]","lastModifiedDate":"2023-09-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"* Role: Project Advisor","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"aarontxz"},"content":"### Teng Xin Zhuan","lastModifiedDate":"2023-09-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"aarontxz"},"content":"\u003cimg src\u003d\"images/aarontxz.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-09-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"aarontxz"},"content":"[[github](http://github.com/aarontxz)]","lastModifiedDate":"2023-09-26"},{"lineNumber":30,"author":{"gitId":"aarontxz"},"content":"[[portfolio](team/aarontxz.md)]","lastModifiedDate":"2023-10-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"* Role: Team Lead","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"* Responsibilities: UI","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":36,"author":{"gitId":"johnnythesnake12"},"content":"### Chang Ji-xuan","lastModifiedDate":"2023-09-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"johnnythesnake12"},"content":"\u003cimg src\u003d\"images/johnnythesnake12.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-09-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"aarontxz"},"content":"[[github](http://github.com/johnnythesnake12)]","lastModifiedDate":"2023-10-06"},{"lineNumber":41,"author":{"gitId":"aarontxz"},"content":"[[portfolio](team/johnnythesnake12.md)]","lastModifiedDate":"2023-10-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"* Responsibilities: Data","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"LuahJunYang"},"content":"### Luah Jun Yang","lastModifiedDate":"2023-09-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"zhanyang01"},"content":"\u003cimg src\u003d\"images/luahjunyang.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-10-06"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"zhanyang01"},"content":"[[github](http://github.com/luahjunyang)]","lastModifiedDate":"2023-10-06"},{"lineNumber":52,"author":{"gitId":"zhanyang01"},"content":"[[portfolio](team/luahjunyang.md)]","lastModifiedDate":"2023-10-06"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"* Responsibilities: UI","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"LuahJunYang":1,"aarontxz":6,"johnnythesnake12":2,"zhanyang01":7,"-":39}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  layout: default.md","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  title: \"Developer Guide\"","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"  pageNav: 3","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":7,"author":{"gitId":"zhanyang01"},"content":"# Insurahub Developer Guide","lastModifiedDate":"2023-09-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c!-- * Table of Contents --\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003cpage-nav-print /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"zhanyang01"},"content":"---","lastModifiedDate":"2023-10-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":14,"author":{"gitId":"zhanyang01"},"content":"# **Table of contents**","lastModifiedDate":"2023-10-01"},{"lineNumber":15,"author":{"gitId":"zhanyang01"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":16,"author":{"gitId":"zhanyang01"},"content":"1. [Setting up, getting started](#setting-up-getting-started)","lastModifiedDate":"2023-10-01"},{"lineNumber":17,"author":{"gitId":"zhanyang01"},"content":"2. [Design](#design)","lastModifiedDate":"2023-10-01"},{"lineNumber":18,"author":{"gitId":"zhanyang01"},"content":"   1. [Architecture](#architecture)","lastModifiedDate":"2023-10-01"},{"lineNumber":19,"author":{"gitId":"zhanyang01"},"content":"   2. [UI Component](#ui-component)","lastModifiedDate":"2023-10-01"},{"lineNumber":20,"author":{"gitId":"zhanyang01"},"content":"   3. [Logic Component](#logic-component)","lastModifiedDate":"2023-10-01"},{"lineNumber":21,"author":{"gitId":"zhanyang01"},"content":"   4. [Model Component](#model-component)","lastModifiedDate":"2023-10-04"},{"lineNumber":22,"author":{"gitId":"zhanyang01"},"content":"   5. [Storage Component](#storage-component)","lastModifiedDate":"2023-10-01"},{"lineNumber":23,"author":{"gitId":"zhanyang01"},"content":"   6. [Common Classes](#common-classes)","lastModifiedDate":"2023-10-01"},{"lineNumber":24,"author":{"gitId":"zhanyang01"},"content":"3. [Implementation](#implementation)","lastModifiedDate":"2023-10-04"},{"lineNumber":25,"author":{"gitId":"zhanyang01"},"content":"4. [Acknowledgements](#acknowledgements)","lastModifiedDate":"2023-10-04"},{"lineNumber":26,"author":{"gitId":"zhanyang01"},"content":"5. [Appendix Requirements](#appendix-requirements)","lastModifiedDate":"2023-10-04"},{"lineNumber":27,"author":{"gitId":"zhanyang01"},"content":"   1. [Product Scope](#product-scope)","lastModifiedDate":"2023-10-01"},{"lineNumber":28,"author":{"gitId":"zhanyang01"},"content":"   2. [User Stories](#user-stories)","lastModifiedDate":"2023-10-01"},{"lineNumber":29,"author":{"gitId":"zhanyang01"},"content":"   3. [Use Cases](#use-cases)","lastModifiedDate":"2023-10-01"},{"lineNumber":30,"author":{"gitId":"zhanyang01"},"content":"      1. [Adding more tags to clients records](#use-case-1---adding-more-tags-to-clients-records)","lastModifiedDate":"2023-10-05"},{"lineNumber":31,"author":{"gitId":"zhanyang01"},"content":"      2. Quick access of contact detail of clients","lastModifiedDate":"2023-10-01"},{"lineNumber":32,"author":{"gitId":"zhanyang01"},"content":"      3. Adding new clients information","lastModifiedDate":"2023-10-01"},{"lineNumber":33,"author":{"gitId":"zhanyang01"},"content":"      4. Filtering client information using tags","lastModifiedDate":"2023-10-01"},{"lineNumber":34,"author":{"gitId":"zhanyang01"},"content":"      5. Storing client documents neatly in a folder","lastModifiedDate":"2023-10-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":36,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"zhanyang01"},"content":"Return to [Table Of Contents](#table-of-contents)","lastModifiedDate":"2023-10-04"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"zhanyang01"},"content":"---","lastModifiedDate":"2023-10-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ArchitectureDiagram.puml\" width\u003d\"280\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"zhanyang01"},"content":"The **_Architecture Diagram_** given above explains the high-level design of the App.","lastModifiedDate":"2023-10-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":54,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"**`Main`** (consisting of classes [`Main`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/MainApp.java)) is in charge of the app launch and shut down.","lastModifiedDate":"2023-09-03"},{"lineNumber":57,"author":{"gitId":"zhanyang01"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":58,"author":{"gitId":"zhanyang01"},"content":"- At app launch, it initializes the other components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2023-10-04"},{"lineNumber":59,"author":{"gitId":"zhanyang01"},"content":"- At shut down, it shuts down the other components and invokes cleanup methods where necessary.","lastModifiedDate":"2023-10-04"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"The bulk of the app\u0027s work is done by the following four components:","lastModifiedDate":"2023-09-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"zhanyang01"},"content":"- [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2023-10-04"},{"lineNumber":64,"author":{"gitId":"zhanyang01"},"content":"- [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2023-10-04"},{"lineNumber":65,"author":{"gitId":"zhanyang01"},"content":"- [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2023-10-04"},{"lineNumber":66,"author":{"gitId":"zhanyang01"},"content":"- [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2023-10-04"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2023-09-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"zhanyang01"},"content":"The _Sequence Diagram_ below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2023-10-04"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ArchitectureSequenceDiagram.puml\" width\u003d\"574\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":78,"author":{"gitId":"zhanyang01"},"content":"- defines its _API_ in an `interface` with the same name as the Component.","lastModifiedDate":"2023-10-04"},{"lineNumber":79,"author":{"gitId":"zhanyang01"},"content":"- implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2023-10-04"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":81,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":83,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ComponentManagers.puml\" width\u003d\"300\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":85,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"zhanyang01"},"content":"Return to [Table Of Contents](#table-of-contents)","lastModifiedDate":"2023-10-04"},{"lineNumber":88,"author":{"gitId":"zhanyang01"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":89,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UiClassDiagram.puml\" alt\u003d\"Structure of the UI Component\"/\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2021-07-31"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2021-07-31"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"zhanyang01"},"content":"- executes user commands using the `Logic` component.","lastModifiedDate":"2023-10-04"},{"lineNumber":102,"author":{"gitId":"zhanyang01"},"content":"- listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2023-10-04"},{"lineNumber":103,"author":{"gitId":"zhanyang01"},"content":"- keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2023-10-04"},{"lineNumber":104,"author":{"gitId":"zhanyang01"},"content":"- depends on some classes in the `Model` component, as it displays `Person` object residing in the `Model`.","lastModifiedDate":"2023-10-04"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"zhanyang01"},"content":"Return to [Table Of Contents](#table-of-contents)","lastModifiedDate":"2023-10-04"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":108,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"**API** : [`Logic.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/LogicClassDiagram.puml\" width\u003d\"550\"/\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"The sequence diagram below illustrates the interactions within the `Logic` component, taking `execute(\"delete 1\")` API call as an example.","lastModifiedDate":"2023-09-03"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/DeleteSequenceDiagram.puml\" alt\u003d\"Interactions Inside the Logic Component for the `delete 1` Command\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":120,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"**Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2023-09-12"},{"lineNumber":123,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2023-09-03"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":127,"author":{"gitId":"-"},"content":"1. When `Logic` is called upon to execute a command, it is passed to an `AddressBookParser` object which in turn creates a parser that matches the command (e.g., `DeleteCommandParser`) and uses it to parse the command.","lastModifiedDate":"2023-09-03"},{"lineNumber":128,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `DeleteCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2023-09-03"},{"lineNumber":129,"author":{"gitId":"-"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to delete a person).","lastModifiedDate":"2023-09-03"},{"lineNumber":130,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2023-09-03"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":132,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":134,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ParserClasses.puml\" width\u003d\"600\"/\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":137,"author":{"gitId":"zhanyang01"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":138,"author":{"gitId":"zhanyang01"},"content":"- When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `AddressBookParser` returns back as a `Command` object.","lastModifiedDate":"2023-10-04"},{"lineNumber":139,"author":{"gitId":"zhanyang01"},"content":"- All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2023-10-04"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"zhanyang01"},"content":"Return to [Table Of Contents](#table-of-contents)","lastModifiedDate":"2023-10-04"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":143,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":144,"author":{"gitId":"zhanyang01"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":145,"author":{"gitId":"-"},"content":"**API** : [`Model.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ModelClassDiagram.puml\" width\u003d\"450\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"zhanyang01"},"content":"- stores the address book data i.e., all `Person` objects (which are contained in a `UniquePersonList` object).","lastModifiedDate":"2023-10-04"},{"lineNumber":152,"author":{"gitId":"zhanyang01"},"content":"- stores the currently \u0027selected\u0027 `Person` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2023-10-04"},{"lineNumber":153,"author":{"gitId":"zhanyang01"},"content":"- stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2023-10-04"},{"lineNumber":154,"author":{"gitId":"zhanyang01"},"content":"- does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2023-10-04"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":156,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":158,"author":{"gitId":"-"},"content":"**Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `AddressBook`, which `Person` references. This allows `AddressBook` to only require one `Tag` object per unique tag, instead of each `Person` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":160,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/BetterModelClassDiagram.puml\" width\u003d\"450\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"zhanyang01"},"content":"Return to [Table Of Contents](#table-of-contents)","lastModifiedDate":"2023-10-04"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"**API** : [`Storage.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/StorageClassDiagram.puml\" width\u003d\"550\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":172,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"zhanyang01"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":174,"author":{"gitId":"zhanyang01"},"content":"- can save both address book data and user preference data in JSON format, and read them back into corresponding objects.","lastModifiedDate":"2023-10-04"},{"lineNumber":175,"author":{"gitId":"zhanyang01"},"content":"- inherits from both `AddressBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2023-10-04"},{"lineNumber":176,"author":{"gitId":"zhanyang01"},"content":"- depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2023-10-04"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"zhanyang01"},"content":"Return to [Table Of Contents](#table-of-contents)","lastModifiedDate":"2023-10-04"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":180,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.addressbook.commons` package.","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"zhanyang01"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-10-04"},{"lineNumber":185,"author":{"gitId":"zhanyang01"},"content":"Return to [Table Of Contents](#table-of-contents)","lastModifiedDate":"2023-10-04"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"zhanyang01"},"content":"---","lastModifiedDate":"2023-10-04"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2020-06-07"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedAddressBook`. It extends `AddressBook` with an undo/redo history, stored internally as an `addressBookStateList` and `currentStatePointer`. Additionally, it implements the following operations:","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"zhanyang01"},"content":"- `VersionedAddressBook#commit()` — Saves the current address book state in its history.","lastModifiedDate":"2023-10-04"},{"lineNumber":200,"author":{"gitId":"zhanyang01"},"content":"- `VersionedAddressBook#undo()` — Restores the previous address book state from its history.","lastModifiedDate":"2023-10-04"},{"lineNumber":201,"author":{"gitId":"zhanyang01"},"content":"- `VersionedAddressBook#redo()` — Restores a previously undone address book state from its history.","lastModifiedDate":"2023-10-04"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()` and `Model#redoAddressBook()` respectively.","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the initial address book state, and the `currentStatePointer` pointing to that single address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState0.puml\" alt\u003d\"UndoRedoState0\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"Step 2. The user executes `delete 5` command to delete the 5th person in the address book. The `delete` command calls `Model#commitAddressBook()`, causing the modified state of the address book after the `delete 5` command executes to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState1.puml\" alt\u003d\"UndoRedoState1\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"Step 3. The user executes `add n/David …​` to add a new person. The `add` command also calls `Model#commitAddressBook()`, causing another modified address book state to be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState2.puml\" alt\u003d\"UndoRedoState2\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"**Note:** If a command fails its execution, it will not call `Model#commitAddressBook()`, so the address book state will not be saved into the `addressBookStateList`.","lastModifiedDate":"2023-09-12"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":223,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"Step 4. The user now decides that adding the person was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous address book state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState3.puml\" alt\u003d\"UndoRedoState3\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":229,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"**Note:** If the `currentStatePointer` is at index 0, pointing to the initial AddressBook state, then there are no previous AddressBook states to restore. The `undo` command uses `Model#canUndoAddressBook()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2023-09-12"},{"lineNumber":232,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"The following sequence diagram shows how the undo operation works:","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoSequenceDiagram.puml\" alt\u003d\"UndoSequenceDiagram\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"**Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2023-09-12"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":244,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"The `redo` command does the opposite — it calls `Model#redoAddressBook()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":250,"author":{"gitId":"-"},"content":"**Note:** If the `currentStatePointer` is at index `addressBookStateList.size() - 1`, pointing to the latest address book state, then there are no undone AddressBook states to restore. The `redo` command uses `Model#canRedoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2023-09-12"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the address book, such as `list`, will usually not call `Model#commitAddressBook()`, `Model#undoAddressBook()` or `Model#redoAddressBook()`. Thus, the `addressBookStateList` remains unchanged.","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState4.puml\" alt\u003d\"UndoRedoState4\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"Step 6. The user executes `clear`, which calls `Model#commitAddressBook()`. Since the `currentStatePointer` is not pointing at the end of the `addressBookStateList`, all address book states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `add n/David …​` command. This is the behavior that most modern desktop applications follow.","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState5.puml\" alt\u003d\"UndoRedoState5\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":261,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/CommitActivityDiagram.puml\" width\u003d\"250\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2021-07-31"},{"lineNumber":267,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2021-07-31"},{"lineNumber":269,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"zhanyang01"},"content":"- **Alternative 1 (current choice):** Saves the entire address book.","lastModifiedDate":"2023-10-04"},{"lineNumber":271,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":272,"author":{"gitId":"zhanyang01"},"content":"  - Pros: Easy to implement.","lastModifiedDate":"2023-10-04"},{"lineNumber":273,"author":{"gitId":"zhanyang01"},"content":"  - Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2023-10-04"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":275,"author":{"gitId":"zhanyang01"},"content":"- **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2023-10-04"},{"lineNumber":276,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2020-05-23"},{"lineNumber":277,"author":{"gitId":"zhanyang01"},"content":"  - Pros: Will use less memory (e.g. for `delete`, just save the person being deleted).","lastModifiedDate":"2023-10-04"},{"lineNumber":278,"author":{"gitId":"zhanyang01"},"content":"  - Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2023-10-04"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":280,"author":{"gitId":"-"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2020-05-23"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":282,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Data archiving","lastModifiedDate":"2020-05-23"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":284,"author":{"gitId":"-"},"content":"_{Explain here how the data archiving feature will be implemented}_","lastModifiedDate":"2020-05-23"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":286,"author":{"gitId":"zhanyang01"},"content":"---","lastModifiedDate":"2023-10-04"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":288,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":290,"author":{"gitId":"zhanyang01"},"content":"- [Documentation guide](Documentation.md)","lastModifiedDate":"2023-10-04"},{"lineNumber":291,"author":{"gitId":"zhanyang01"},"content":"- [Testing guide](Testing.md)","lastModifiedDate":"2023-10-04"},{"lineNumber":292,"author":{"gitId":"zhanyang01"},"content":"- [Logging guide](Logging.md)","lastModifiedDate":"2023-10-04"},{"lineNumber":293,"author":{"gitId":"zhanyang01"},"content":"- [Configuration guide](Configuration.md)","lastModifiedDate":"2023-10-04"},{"lineNumber":294,"author":{"gitId":"zhanyang01"},"content":"- [DevOps guide](DevOps.md)","lastModifiedDate":"2023-10-04"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":296,"author":{"gitId":"zhanyang01"},"content":"Return to [Table Of Contents](#table-of-contents)","lastModifiedDate":"2023-10-04"},{"lineNumber":297,"author":{"gitId":"zhanyang01"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":298,"author":{"gitId":"zhanyang01"},"content":"---","lastModifiedDate":"2023-10-04"},{"lineNumber":299,"author":{"gitId":"zhanyang01"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":300,"author":{"gitId":"zhanyang01"},"content":"## **Acknowledgements**","lastModifiedDate":"2023-10-01"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":302,"author":{"gitId":"zhanyang01"},"content":"This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2023-10-01"},{"lineNumber":303,"author":{"gitId":"zhanyang01"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":304,"author":{"gitId":"zhanyang01"},"content":"Return to [Table Of Contents](#table-of-contents)","lastModifiedDate":"2023-10-04"},{"lineNumber":305,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":306,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":307,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":308,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":309,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":310,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":311,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":312,"author":{"gitId":"zhanyang01"},"content":"- has a need to manage a significant number of client\u0027s contacts","lastModifiedDate":"2023-10-04"},{"lineNumber":313,"author":{"gitId":"zhanyang01"},"content":"- prefer desktop apps over other types","lastModifiedDate":"2023-10-04"},{"lineNumber":314,"author":{"gitId":"zhanyang01"},"content":"- can type fast","lastModifiedDate":"2023-10-04"},{"lineNumber":315,"author":{"gitId":"zhanyang01"},"content":"- prefers typing to mouse interactions","lastModifiedDate":"2023-10-04"},{"lineNumber":316,"author":{"gitId":"zhanyang01"},"content":"- is reasonably comfortable using CLI apps","lastModifiedDate":"2023-10-04"},{"lineNumber":317,"author":{"gitId":"zhanyang01"},"content":"- has a need to be able to easily find different clients contacts","lastModifiedDate":"2023-10-04"},{"lineNumber":318,"author":{"gitId":"zhanyang01"},"content":"- remembers some of their client\u0027s only by their firstname,lastname,nickname or initials","lastModifiedDate":"2023-10-04"},{"lineNumber":319,"author":{"gitId":"zhanyang01"},"content":"- needs to handle a large amount of documents that are stored for different clients","lastModifiedDate":"2023-10-04"},{"lineNumber":320,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":321,"author":{"gitId":"aarontxz"},"content":"**Value proposition**: manage client\u0027s contacts faster than a typical mouse/GUI driven app while providing ways to efficiently find/store specific client and their documents","lastModifiedDate":"2023-10-03"},{"lineNumber":322,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":323,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":324,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":325,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":326,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":327,"author":{"gitId":"-"},"content":"| Priority | As a …​                                    | I want to …​                                                       | So that I can…​                                                          |","lastModifiedDate":"2020-05-23"},{"lineNumber":328,"author":{"gitId":"zhanyang01"},"content":"| -------- | ------------------------------------------ | ------------------------------------------------------------------ | ------------------------------------------------------------------------ |","lastModifiedDate":"2023-10-04"},{"lineNumber":329,"author":{"gitId":"-"},"content":"| `* * *`  | new user                                   | see usage instructions                                             | refer to instructions when I forget how to use the App                   |","lastModifiedDate":"2020-05-23"},{"lineNumber":330,"author":{"gitId":"-"},"content":"| `* * *`  | user                                       | add a new person                                                   |                                                                          |","lastModifiedDate":"2020-05-23"},{"lineNumber":331,"author":{"gitId":"-"},"content":"| `* * *`  | user                                       | delete a person                                                    | remove entries that I no longer need                                     |","lastModifiedDate":"2020-05-23"},{"lineNumber":332,"author":{"gitId":"-"},"content":"| `* * *`  | user                                       | find a person by name                                              | locate details of persons without having to go through the entire list   |","lastModifiedDate":"2020-05-23"},{"lineNumber":333,"author":{"gitId":"-"},"content":"| `* *`    | user                                       | hide private contact details                                       | minimize chance of someone else seeing them by accident                  |","lastModifiedDate":"2020-05-23"},{"lineNumber":334,"author":{"gitId":"-"},"content":"| `*`      | user with many persons in the address book | sort persons by name                                               | locate a person easily                                                   |","lastModifiedDate":"2020-05-23"},{"lineNumber":335,"author":{"gitId":"aarontxz"},"content":"| `* * *`  | insurance agent                            | Add more tags to my clients                                        | easily find them later                                                   |","lastModifiedDate":"2023-10-03"},{"lineNumber":336,"author":{"gitId":"aarontxz"},"content":"| `* * *`  | insurance agent with multiple documents    | Store documents along with client contact information              | in an orderly manner                                                     |","lastModifiedDate":"2023-10-03"},{"lineNumber":337,"author":{"gitId":"aarontxz"},"content":"| `* * *`  | insurance agent                            | Highlight the preferred contact details of my clients              | quickly contact them for any matters                                     |","lastModifiedDate":"2023-10-03"},{"lineNumber":338,"author":{"gitId":"aarontxz"},"content":"| `* * *`  | insurance agent using the CLI              | Input and update client information through text commands          | provide personalized and efficient service without a graphical interface |","lastModifiedDate":"2023-10-03"},{"lineNumber":339,"author":{"gitId":"aarontxz"},"content":"| `* * *`  | insurance agent                            | Filter interested clients                                          | focus my time on providing value to their lives                          |","lastModifiedDate":"2023-10-03"},{"lineNumber":340,"author":{"gitId":"aarontxz"},"content":"| `* *`    | insurance agent                            | Organize my clients’ records based on tags                         | filter for specific groups of clients                                    |","lastModifiedDate":"2023-10-03"},{"lineNumber":341,"author":{"gitId":"aarontxz"},"content":"| `* *`    | insurance agent                            | Cluster my clients into areas they want to meet                    | set up meetings that minimize my travel time                             |","lastModifiedDate":"2023-10-03"},{"lineNumber":342,"author":{"gitId":"aarontxz"},"content":"| `* *`    | busy insurance agent                       | Load client data quickly                                           | use the app even with high traffic and not waste time waiting            |","lastModifiedDate":"2023-10-03"},{"lineNumber":343,"author":{"gitId":"aarontxz"},"content":"| `* *`    | insurance agent                            | Sort client priorities                                             | attend to their needs first                                              |","lastModifiedDate":"2023-10-03"},{"lineNumber":344,"author":{"gitId":"aarontxz"},"content":"| `* *`    | insurance agent prioritizing data security | Create secure log-in passwords and authentication                  | protect client data integrity                                            |","lastModifiedDate":"2023-10-03"},{"lineNumber":345,"author":{"gitId":"aarontxz"},"content":"| `* *`    | non-technical insurance agent              | Access comprehensive help documentation or a built-in help command | understand available commands, their syntax, and purpose in CLI          |","lastModifiedDate":"2023-10-03"},{"lineNumber":346,"author":{"gitId":"aarontxz"},"content":"| `* *`    | forgetful insurance agent                  | Have important todos in the homepage                               | not forget to do them, such as client meetings and applying for claims   |","lastModifiedDate":"2023-10-03"},{"lineNumber":347,"author":{"gitId":"aarontxz"},"content":"| `* *`    | life insurance agent                       | Easily filter clients with policy updates                          | inform them more timely on the updates                                   |","lastModifiedDate":"2023-10-03"},{"lineNumber":348,"author":{"gitId":"aarontxz"},"content":"| `* *`    | insurance agent                            | Track progress of insurance claims through text-based commands     | provide timely updates and ensure a smooth claims process via CLI        |","lastModifiedDate":"2023-10-03"},{"lineNumber":349,"author":{"gitId":"aarontxz"},"content":"| `* *`    | insurance agent                            | Receive alerts for expiring insurance policies                     | prioritize meeting clients with expiring policies                        |","lastModifiedDate":"2023-10-03"},{"lineNumber":350,"author":{"gitId":"aarontxz"},"content":"| `*`      | insurance agent with traditional clients   | Export a client’s policy summary to a spreadsheet                  | print it out for clients                                                 |","lastModifiedDate":"2023-10-03"},{"lineNumber":351,"author":{"gitId":"aarontxz"},"content":"| `*`      | artistic insurance agent                   | Customize the UI                                                   | feel better using a more unique UI                                       |","lastModifiedDate":"2023-10-03"},{"lineNumber":352,"author":{"gitId":"aarontxz"},"content":"| `*`      | insurance agent                            | Create new insurance policies for my clients                       | accommodate changes or updates requested by clients                      |","lastModifiedDate":"2023-10-03"},{"lineNumber":353,"author":{"gitId":"aarontxz"},"content":"| `*`      | insurance agent working with others        | Send and receive client details with other users                   | take over/hand over clients from other agents                            |","lastModifiedDate":"2023-10-03"},{"lineNumber":354,"author":{"gitId":"aarontxz"},"content":"| `*`      | data-driven insurance agent                | Access a variety of reports and analytics                          | make informed decisions to improve my business                           |","lastModifiedDate":"2023-10-03"},{"lineNumber":355,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":356,"author":{"gitId":"zhanyang01"},"content":"_{More to be added}_","lastModifiedDate":"2023-10-04"},{"lineNumber":357,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":358,"author":{"gitId":"zhanyang01"},"content":"Return to [Table Of Contents](#table-of-contents)","lastModifiedDate":"2023-10-04"},{"lineNumber":359,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":360,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":361,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":362,"author":{"gitId":"zhanyang01"},"content":"If not explicitly mentioned, the actor will be a Financial Advisor as the User and InsuraHub as the System.","lastModifiedDate":"2023-10-01"},{"lineNumber":363,"author":{"gitId":"zhanyang01"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":364,"author":{"gitId":"zhanyang01"},"content":"Use Case 1 - Adding more tags to clients records","lastModifiedDate":"2023-10-04"},{"lineNumber":365,"author":{"gitId":"zhanyang01"},"content":"Precondition: User already open up the application  ","lastModifiedDate":"2023-10-01"},{"lineNumber":366,"author":{"gitId":"zhanyang01"},"content":"MSS:","lastModifiedDate":"2023-10-01"},{"lineNumber":367,"author":{"gitId":"zhanyang01"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":368,"author":{"gitId":"zhanyang01"},"content":"1. User keys in `addTag` and the corresponding tags for the particular client identifier or index","lastModifiedDate":"2023-10-01"},{"lineNumber":369,"author":{"gitId":"zhanyang01"},"content":"2. Systems displays the tags that have been added to the particular client","lastModifiedDate":"2023-10-01"},{"lineNumber":370,"author":{"gitId":"zhanyang01"},"content":"   Use case ends","lastModifiedDate":"2023-10-01"},{"lineNumber":371,"author":{"gitId":"zhanyang01"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":372,"author":{"gitId":"zhanyang01"},"content":"** Extensions: **","lastModifiedDate":"2023-10-01"},{"lineNumber":373,"author":{"gitId":"zhanyang01"},"content":"1a. User keys in invalid client identifier","lastModifiedDate":"2023-10-01"},{"lineNumber":374,"author":{"gitId":"zhanyang01"},"content":"1a1. System displays an error message indicating that the process of adding tags have failed","lastModifiedDate":"2023-10-01"},{"lineNumber":375,"author":{"gitId":"zhanyang01"},"content":"Use case ends","lastModifiedDate":"2023-10-01"},{"lineNumber":376,"author":{"gitId":"zhanyang01"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":377,"author":{"gitId":"zhanyang01"},"content":"1b. User keys in invalid index","lastModifiedDate":"2023-10-01"},{"lineNumber":378,"author":{"gitId":"zhanyang01"},"content":"1b1. System displays an error message indicating that the process of adding tags have failed","lastModifiedDate":"2023-10-01"},{"lineNumber":379,"author":{"gitId":"zhanyang01"},"content":"Use case ends","lastModifiedDate":"2023-10-01"},{"lineNumber":380,"author":{"gitId":"zhanyang01"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":381,"author":{"gitId":"zhanyang01"},"content":"Use Case 2 - Quick access of contact detail of clients  ","lastModifiedDate":"2023-10-04"},{"lineNumber":382,"author":{"gitId":"zhanyang01"},"content":"Precondition: User opens up the application  ","lastModifiedDate":"2023-10-01"},{"lineNumber":383,"author":{"gitId":"zhanyang01"},"content":"MSS:","lastModifiedDate":"2023-10-01"},{"lineNumber":384,"author":{"gitId":"zhanyang01"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":385,"author":{"gitId":"zhanyang01"},"content":"1. User keys in `highlight` followed by index or client identifier and the client preferred form of contact","lastModifiedDate":"2023-10-01"},{"lineNumber":386,"author":{"gitId":"zhanyang01"},"content":"2. System updates with the preferred form of contact highlighted","lastModifiedDate":"2023-10-01"},{"lineNumber":387,"author":{"gitId":"zhanyang01"},"content":"   Use case ends","lastModifiedDate":"2023-10-01"},{"lineNumber":388,"author":{"gitId":"zhanyang01"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":389,"author":{"gitId":"zhanyang01"},"content":"** Extensions **","lastModifiedDate":"2023-10-01"},{"lineNumber":390,"author":{"gitId":"zhanyang01"},"content":"1a. User keys in invalid client identifier","lastModifiedDate":"2023-10-01"},{"lineNumber":391,"author":{"gitId":"zhanyang01"},"content":"1a1. System displays an error message indicating that the process of selecting preferred form of contact have failed","lastModifiedDate":"2023-10-01"},{"lineNumber":392,"author":{"gitId":"zhanyang01"},"content":"Use case ends","lastModifiedDate":"2023-10-01"},{"lineNumber":393,"author":{"gitId":"zhanyang01"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":394,"author":{"gitId":"zhanyang01"},"content":"1b. User keys in invalid index","lastModifiedDate":"2023-10-01"},{"lineNumber":395,"author":{"gitId":"zhanyang01"},"content":"1b1. System displays an error message indicating that the process of selecting preferred form of contact have failed","lastModifiedDate":"2023-10-01"},{"lineNumber":396,"author":{"gitId":"zhanyang01"},"content":"Use case ends","lastModifiedDate":"2023-10-01"},{"lineNumber":397,"author":{"gitId":"zhanyang01"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":398,"author":{"gitId":"zhanyang01"},"content":"1c. User keys in multiple forms of contacts","lastModifiedDate":"2023-10-01"},{"lineNumber":399,"author":{"gitId":"zhanyang01"},"content":"1c1. System displays an error message to tell the user to select only one form of preferred contact and that the","lastModifiedDate":"2023-10-01"},{"lineNumber":400,"author":{"gitId":"zhanyang01"},"content":"process of selecting preferred form of contact have failed","lastModifiedDate":"2023-10-01"},{"lineNumber":401,"author":{"gitId":"zhanyang01"},"content":"Use case ends","lastModifiedDate":"2023-10-01"},{"lineNumber":402,"author":{"gitId":"zhanyang01"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":403,"author":{"gitId":"zhanyang01"},"content":"Use Case 3 - Adding new clients information  ","lastModifiedDate":"2023-10-04"},{"lineNumber":404,"author":{"gitId":"zhanyang01"},"content":"Precondition: User opens up the application  ","lastModifiedDate":"2023-10-01"},{"lineNumber":405,"author":{"gitId":"zhanyang01"},"content":"MSS:","lastModifiedDate":"2023-10-01"},{"lineNumber":406,"author":{"gitId":"zhanyang01"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":407,"author":{"gitId":"zhanyang01"},"content":"1. User keys in `addNewClient` followed by client details","lastModifiedDate":"2023-10-01"},{"lineNumber":408,"author":{"gitId":"zhanyang01"},"content":"2. System updates with new client at the bottom of the list","lastModifiedDate":"2023-10-01"},{"lineNumber":409,"author":{"gitId":"zhanyang01"},"content":"   Use case ends","lastModifiedDate":"2023-10-01"},{"lineNumber":410,"author":{"gitId":"zhanyang01"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":411,"author":{"gitId":"zhanyang01"},"content":"** Extensions **","lastModifiedDate":"2023-10-01"},{"lineNumber":412,"author":{"gitId":"zhanyang01"},"content":"1a. User keys in wrong input format","lastModifiedDate":"2023-10-01"},{"lineNumber":413,"author":{"gitId":"zhanyang01"},"content":"1a1. System displays an error message indicating the supposed format to be changed","lastModifiedDate":"2023-10-01"},{"lineNumber":414,"author":{"gitId":"zhanyang01"},"content":"Use case ends","lastModifiedDate":"2023-10-01"},{"lineNumber":415,"author":{"gitId":"zhanyang01"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":416,"author":{"gitId":"zhanyang01"},"content":"1b. User keys in wrong format for details","lastModifiedDate":"2023-10-05"},{"lineNumber":417,"author":{"gitId":"zhanyang01"},"content":"1b1. System displays an error message indicating that a particular detail is in the wrong format","lastModifiedDate":"2023-10-01"},{"lineNumber":418,"author":{"gitId":"zhanyang01"},"content":"Use case ends","lastModifiedDate":"2023-10-01"},{"lineNumber":419,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":420,"author":{"gitId":"zhanyang01"},"content":"Use Case 4 - Filtering client information using tags  ","lastModifiedDate":"2023-10-04"},{"lineNumber":421,"author":{"gitId":"zhanyang01"},"content":"Precondition: User opens up the application  ","lastModifiedDate":"2023-10-01"},{"lineNumber":422,"author":{"gitId":"zhanyang01"},"content":"MSS:","lastModifiedDate":"2023-10-01"},{"lineNumber":423,"author":{"gitId":"zhanyang01"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":424,"author":{"gitId":"zhanyang01"},"content":"1. User keys in `filter` followed by tags","lastModifiedDate":"2023-10-01"},{"lineNumber":425,"author":{"gitId":"zhanyang01"},"content":"2. System updates with a list of clients that fulfills the tags to be filtered","lastModifiedDate":"2023-10-01"},{"lineNumber":426,"author":{"gitId":"zhanyang01"},"content":"   Use case ends","lastModifiedDate":"2023-10-01"},{"lineNumber":427,"author":{"gitId":"zhanyang01"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":428,"author":{"gitId":"zhanyang01"},"content":"** Extensions **","lastModifiedDate":"2023-10-01"},{"lineNumber":429,"author":{"gitId":"zhanyang01"},"content":"1a. User keys in invalid tags","lastModifiedDate":"2023-10-01"},{"lineNumber":430,"author":{"gitId":"zhanyang01"},"content":"1a1. System displays an error message to remind user to check their tags that is keyed in","lastModifiedDate":"2023-10-01"},{"lineNumber":431,"author":{"gitId":"zhanyang01"},"content":"Use case ends","lastModifiedDate":"2023-10-01"},{"lineNumber":432,"author":{"gitId":"zhanyang01"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":433,"author":{"gitId":"zhanyang01"},"content":"Use Case 5 - Storing client documents neatly in a folder  ","lastModifiedDate":"2023-10-04"},{"lineNumber":434,"author":{"gitId":"zhanyang01"},"content":"Precondition: User opens up the application  ","lastModifiedDate":"2023-10-01"},{"lineNumber":435,"author":{"gitId":"zhanyang01"},"content":"MSS:","lastModifiedDate":"2023-10-01"},{"lineNumber":436,"author":{"gitId":"zhanyang01"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":437,"author":{"gitId":"zhanyang01"},"content":"1. User keys in `file` followed by index or client identifier","lastModifiedDate":"2023-10-01"},{"lineNumber":438,"author":{"gitId":"zhanyang01"},"content":"2. System opens up the folder of the particular client with the relevant files inside the folder","lastModifiedDate":"2023-10-01"},{"lineNumber":439,"author":{"gitId":"zhanyang01"},"content":"   Use case ends","lastModifiedDate":"2023-10-01"},{"lineNumber":440,"author":{"gitId":"zhanyang01"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":441,"author":{"gitId":"zhanyang01"},"content":"** Extensions **","lastModifiedDate":"2023-10-01"},{"lineNumber":442,"author":{"gitId":"zhanyang01"},"content":"1a. User keys in invalid client identifier","lastModifiedDate":"2023-10-01"},{"lineNumber":443,"author":{"gitId":"zhanyang01"},"content":"1a1. System displays an error message indicating that the process of adding tags have failed","lastModifiedDate":"2023-10-01"},{"lineNumber":444,"author":{"gitId":"zhanyang01"},"content":"Use case ends","lastModifiedDate":"2023-10-01"},{"lineNumber":445,"author":{"gitId":"zhanyang01"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":446,"author":{"gitId":"zhanyang01"},"content":"1b. User keys in invalid index","lastModifiedDate":"2023-10-01"},{"lineNumber":447,"author":{"gitId":"zhanyang01"},"content":"1b1. System displays an error message indicating that the process of adding tags have failed","lastModifiedDate":"2023-10-01"},{"lineNumber":448,"author":{"gitId":"zhanyang01"},"content":"Use case ends","lastModifiedDate":"2023-10-01"},{"lineNumber":449,"author":{"gitId":"zhanyang01"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":450,"author":{"gitId":"zhanyang01"},"content":"### Example Use Case","lastModifiedDate":"2023-10-04"},{"lineNumber":451,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":452,"author":{"gitId":"-"},"content":"**Use case: Delete a person**","lastModifiedDate":"2020-05-23"},{"lineNumber":453,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":454,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":455,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":456,"author":{"gitId":"-"},"content":"1.  User requests to list persons","lastModifiedDate":"2020-05-23"},{"lineNumber":457,"author":{"gitId":"-"},"content":"2.  AddressBook shows a list of persons","lastModifiedDate":"2020-05-23"},{"lineNumber":458,"author":{"gitId":"-"},"content":"3.  User requests to delete a specific person in the list","lastModifiedDate":"2020-05-23"},{"lineNumber":459,"author":{"gitId":"-"},"content":"4.  AddressBook deletes the person","lastModifiedDate":"2020-05-23"},{"lineNumber":460,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":461,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":462,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":463,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":464,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":465,"author":{"gitId":"zhanyang01"},"content":"- 2a. The list is empty.","lastModifiedDate":"2023-10-04"},{"lineNumber":466,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":467,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":468,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":469,"author":{"gitId":"zhanyang01"},"content":"- 3a. The given index is invalid.","lastModifiedDate":"2023-10-04"},{"lineNumber":470,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":471,"author":{"gitId":"zhanyang01"},"content":"  - 3a1. AddressBook shows an error message.","lastModifiedDate":"2023-10-04"},{"lineNumber":472,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":473,"author":{"gitId":"-"},"content":"    Use case resumes at step 2.","lastModifiedDate":"2020-05-23"},{"lineNumber":474,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":475,"author":{"gitId":"zhanyang01"},"content":"_{More to be added}_","lastModifiedDate":"2023-10-04"},{"lineNumber":476,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":477,"author":{"gitId":"zhanyang01"},"content":"Return to [Table Of Contents](#table-of-contents)","lastModifiedDate":"2023-10-04"},{"lineNumber":478,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":479,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":480,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":481,"author":{"gitId":"johnnythesnake12"},"content":"1.  The application should be compatible with mainstream operating systems such as Windows, Linux, Unix, and macOS, as long as they have Java 11 or above installed.","lastModifiedDate":"2023-10-05"},{"lineNumber":482,"author":{"gitId":"-"},"content":"2.  Should be able to hold up to 1000 persons without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":483,"author":{"gitId":"-"},"content":"3.  A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2020-05-23"},{"lineNumber":484,"author":{"gitId":"johnnythesnake12"},"content":"4.  The application should ensure the integrity and consistency of data stored in the address book. Data should not be lost or corrupted during normal usage or unexpected errors.","lastModifiedDate":"2023-10-05"},{"lineNumber":485,"author":{"gitId":"johnnythesnake12"},"content":"5.  Any commands should be executed within 1s.","lastModifiedDate":"2023-10-05"},{"lineNumber":486,"author":{"gitId":"johnnythesnake12"},"content":"6.  The address book should be able to store 2000 clients\u0027 information.","lastModifiedDate":"2023-10-05"},{"lineNumber":487,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":488,"author":{"gitId":"zhanyang01"},"content":"_{More to be added}_","lastModifiedDate":"2023-10-04"},{"lineNumber":489,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":490,"author":{"gitId":"zhanyang01"},"content":"_{More to be added}_","lastModifiedDate":"2023-10-04"},{"lineNumber":491,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":492,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":493,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":494,"author":{"gitId":"zhanyang01"},"content":"- **Mainstream OS**: Windows, Linux, Unix, OS-X","lastModifiedDate":"2023-10-04"},{"lineNumber":495,"author":{"gitId":"zhanyang01"},"content":"- **Private contact detail**: A contact detail that is not meant to be shared with others","lastModifiedDate":"2023-10-04"},{"lineNumber":496,"author":{"gitId":"zhanyang01"},"content":"- **Tag**: A tag object assigned to a contact that is a categorical description of the contact","lastModifiedDate":"2023-10-04"},{"lineNumber":497,"author":{"gitId":"zhanyang01"},"content":"- **Client Priorities**: Priority of the client that the insurance agent has to attend to, where each priority is its own tag","lastModifiedDate":"2023-10-04"},{"lineNumber":498,"author":{"gitId":"zhanyang01"},"content":"- **Usage Instructions**: A quickstart guide with a short list of basic commands for users\u0027 reference within the App.","lastModifiedDate":"2023-10-04"},{"lineNumber":499,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":500,"author":{"gitId":"zhanyang01"},"content":"Return to [Table Of Contents](#table-of-contents)","lastModifiedDate":"2023-10-04"},{"lineNumber":501,"author":{"gitId":"zhanyang01"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":502,"author":{"gitId":"zhanyang01"},"content":"---","lastModifiedDate":"2023-10-04"},{"lineNumber":503,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":504,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":505,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":506,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":507,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":508,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":509,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":510,"author":{"gitId":"-"},"content":"**Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2023-09-12"},{"lineNumber":511,"author":{"gitId":"zhanyang01"},"content":"testers are expected to do more _exploratory_ testing.","lastModifiedDate":"2023-10-04"},{"lineNumber":512,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":513,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":514,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":515,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":516,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":517,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":518,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":519,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":520,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":521,"author":{"gitId":"-"},"content":"   1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2020-05-23"},{"lineNumber":522,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":523,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":524,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":525,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":526,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":527,"author":{"gitId":"-"},"content":"   1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":528,"author":{"gitId":"-"},"content":"      Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":529,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":530,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":531,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":532,"author":{"gitId":"-"},"content":"### Deleting a person","lastModifiedDate":"2020-05-23"},{"lineNumber":533,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":534,"author":{"gitId":"-"},"content":"1. Deleting a person while all persons are being shown","lastModifiedDate":"2020-05-23"},{"lineNumber":535,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":536,"author":{"gitId":"-"},"content":"   1. Prerequisites: List all persons using the `list` command. Multiple persons in the list.","lastModifiedDate":"2020-05-23"},{"lineNumber":537,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":538,"author":{"gitId":"-"},"content":"   1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":539,"author":{"gitId":"-"},"content":"      Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2020-05-23"},{"lineNumber":540,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":541,"author":{"gitId":"-"},"content":"   1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":542,"author":{"gitId":"-"},"content":"      Expected: No person is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2020-05-23"},{"lineNumber":543,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":544,"author":{"gitId":"-"},"content":"   1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":545,"author":{"gitId":"-"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":546,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":547,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":548,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":549,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":550,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":551,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":552,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":553,"author":{"gitId":"-"},"content":"   1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23"},{"lineNumber":554,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":555,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":556,"author":{"gitId":"zhanyang01"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":557,"author":{"gitId":"zhanyang01"},"content":"Return to [Table Of Contents](#table-of-contents)","lastModifiedDate":"2023-10-04"}],"authorContributionMap":{"aarontxz":21,"johnnythesnake12":4,"zhanyang01":201,"-":331}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  layout: default.md","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  title: \"User Guide\"","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"  pageNav: 3","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"zhanyang01"},"content":"# Insurahub User Guide","lastModifiedDate":"2023-10-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"zhanyang01"},"content":"Insurahub is a **desktop app for managing clients, optimized for use via a Command Line Interface** (CLI) while still having the benefits of a Graphical User Interface (GUI). If you can type fast, Insurahub can get your contact management tasks done faster than traditional GUI apps. This app is mainly used by insurance agents who have many clients and tasks such as appointments to keep track of on a daily basis.","lastModifiedDate":"2023-10-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c!-- * Table of Contents --\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003cpage-nav-print /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"## Quick start","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"1. Ensure you have Java `11` or above installed in your Computer.","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"zhanyang01"},"content":"1. Download the latest `insurahub.jar` from [here](https://github.com//AY2324S1-CS2103-W14-1/tp).","lastModifiedDate":"2023-10-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"zhanyang01"},"content":"1. Copy the file to the folder you want to use as the _home folder_ for your App.","lastModifiedDate":"2023-10-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"zhanyang01"},"content":"1. Open a command terminal, `cd` into the folder you put the jar file in, and use the `java -jar insurahub.jar` command to run the application.\u003cbr\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"   A GUI similar to the below should appear in a few seconds. Note how the app contains some sample data.\u003cbr\u003e","lastModifiedDate":"2023-01-01"},{"lineNumber":26,"author":{"gitId":"-"},"content":"   ![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"1. Type the command in the command box and press Enter to execute it. e.g. typing **`help`** and pressing Enter will open the help window.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"   Some example commands you can try:","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"   * `list` : Lists all contacts.","lastModifiedDate":"2023-01-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"zhanyang01"},"content":"   * `add n/John Doe p/98765432 e/johnd@example.com a/John street, block 123, #01-01` : Adds a contact named `John Doe` to the application.","lastModifiedDate":"2023-10-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     ","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"johnnythesnake12"},"content":"   * `addTag 1 t/classmate` : Adds a \"classmate\" tag to the first user in the address book.","lastModifiedDate":"2023-10-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"   * `delete 3` : Deletes the 3rd contact shown in the current list.","lastModifiedDate":"2023-01-01"},{"lineNumber":38,"author":{"gitId":"-"},"content":"  ","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"johnnythesnake12"},"content":"   * `deleteTag 1 t/classmate` : Deletes the \"classmate\" tag from the first user in the address book if the \"classmate\" tag currently exists","lastModifiedDate":"2023-10-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"   * `clear` : Deletes all contacts.","lastModifiedDate":"2023-01-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"   * `exit` : Exits the app.","lastModifiedDate":"2023-01-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     ","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"johnnythesnake12"},"content":"   * `file 1`: Creates a folder for the first person in the address book with the person\u0027s information","lastModifiedDate":"2023-10-16"},{"lineNumber":46,"author":{"gitId":"johnnythesnake12"},"content":"  ","lastModifiedDate":"2023-10-16"},{"lineNumber":47,"author":{"gitId":"zhanyang01"},"content":"   * `highlight 1/phonenumber` : Highlight/Bold to show that that is the main form of contact that the client in the first index prefers. ","lastModifiedDate":"2023-09-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"1. Refer to the [Features](#features) below for details of each command.","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"**Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"* Words in `UPPER_CASE` are the parameters to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"  e.g. in `add n/NAME`, `NAME` is a parameter which can be used as `add n/John Doe`.","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"* Items in square brackets are optional.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"  e.g `n/NAME [t/TAG]` can be used as `n/John Doe t/friend` or as `n/John Doe`.","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"* Items with `…`​ after them can be used multiple times including zero times.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"  e.g. `[t/TAG]…​` can be used as ` ` (i.e. 0 times), `t/friend`, `t/friend t/family` etc.","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"* Parameters can be in any order.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `n/NAME p/PHONE_NUMBER`, `p/PHONE_NUMBER n/NAME` is also acceptable.","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"* Extraneous parameters for commands that do not take in parameters (such as `help`, `list`, `exit` and `clear`) will be ignored.\u003cbr\u003e","lastModifiedDate":"2021-02-03"},{"lineNumber":72,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `help 123`, it will be interpreted as `help`.","lastModifiedDate":"2021-02-03"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03"},{"lineNumber":74,"author":{"gitId":"-"},"content":"* If you are using a PDF version of this document, be careful when copying and pasting commands that span multiple lines as space characters surrounding line-breaks may be omitted when copied over to the application.","lastModifiedDate":"2023-06-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"### Viewing help : `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"Shows a message explaning how to access the help page.","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"![help message](images/helpMessage.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"Format: `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"johnnythesnake12"},"content":"### Adding a new client: `addNewClient`","lastModifiedDate":"2023-10-05"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"johnnythesnake12"},"content":"Adds a new client to the address book.","lastModifiedDate":"2023-10-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"johnnythesnake12"},"content":"Format: `addNewClient/FIRSTNAME/LASTNAME/PRIMARYPHONENUMBER/ADDRESS/EMAIL`","lastModifiedDate":"2023-10-05"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"tip\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":94,"author":{"gitId":"johnnythesnake12"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"johnnythesnake12"},"content":"* `addNewClient/Johnny/Snake/91234567/Blk 69 Geylang Street 12, #12-69/johnnythesnake12@gmail.com`","lastModifiedDate":"2023-10-05"},{"lineNumber":98,"author":{"gitId":"johnnythesnake12"},"content":"* `addNewClient/Betsy/Crowe/92222222/Newgate Prison/betsycrowe@example.com`","lastModifiedDate":"2023-10-05"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"### Listing all persons : `list`","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"Shows a list of all persons in the address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"Format: `list`","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"### Editing a person : `edit`","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"Edits an existing person in the address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"Format: `edit INDEX [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [t/TAG]…​`","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"* Edits the person at the specified `INDEX`. The index refers to the index number shown in the displayed person list. The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"* At least one of the optional fields must be provided.","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"* Existing values will be updated to the input values.","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"* When editing tags, the existing tags of the person will be removed i.e adding of tags is not cumulative.","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"* You can remove all the person’s tags by typing `t/` without","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    specifying any tags after it.","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"*  `edit 1 p/91234567 e/johndoe@example.com` Edits the phone number and email address of the 1st person to be `91234567` and `johndoe@example.com` respectively.","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"*  `edit 2 n/Betsy Crower t/` Edits the name of the 2nd person to be `Betsy Crower` and clears all existing tags.","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"### Locating persons by name: `find`","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"Finds persons whose names contain any of the given keywords.","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"Format: `find KEYWORD [MORE_KEYWORDS]`","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"* The search is case-insensitive. e.g `hans` will match `Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"* The order of the keywords does not matter. e.g. `Hans Bo` will match `Bo Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"* Only the name is searched.","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"* Only full words will be matched e.g. `Han` will not match `Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"* Persons matching at least one keyword will be returned (i.e. `OR` search).","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"  e.g. `Hans Bo` will return `Hans Gruber`, `Bo Yang`","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"* `find John` returns `john` and `John Doe`","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"* `find alex david` returns `Alex Yeoh`, `David Li`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"  ![result for \u0027find alex david\u0027](images/findAlexDavidResult.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"zhanyang01"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":142,"author":{"gitId":"-"},"content":"### Deleting a person : `delete`","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"Deletes the specified person from the address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"Format: `delete INDEX`","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"* Deletes the person at the specified `INDEX`.","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"* The index refers to the index number shown in the displayed person list.","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"* `list` followed by `delete 2` deletes the 2nd person in the address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"* `find Betsy` followed by `delete 1` deletes the 1st person in the results of the `find` command.","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"### Clearing all entries : `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"Clears all entries from the address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"Format: `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"### Exiting the program : `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"Exits the program.","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"Format: `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"### Saving the data","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"AddressBook data are saved in the hard disk automatically after any command that changes the data. There is no need to save manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"### Editing the data file","lastModifiedDate":"2021-02-04"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":174,"author":{"gitId":"-"},"content":"AddressBook data are saved automatically as a JSON file `[JAR file location]/data/addressbook.json`. Advanced users are welcome to update data directly by editing that data file.","lastModifiedDate":"2023-09-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":176,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"warning\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":178,"author":{"gitId":"-"},"content":"**Caution:**","lastModifiedDate":"2023-09-12"},{"lineNumber":179,"author":{"gitId":"-"},"content":"If your changes to the data file makes its format invalid, AddressBook will discard all data and start with an empty data file at the next run.  Hence, it is recommended to take a backup of the file before editing it.","lastModifiedDate":"2023-09-08"},{"lineNumber":180,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":182,"author":{"gitId":"zhanyang01"},"content":"## In Progress","lastModifiedDate":"2023-09-27"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"LuahJunYang"},"content":"### Adding tags to a client object: `addTag`","lastModifiedDate":"2023-10-04"},{"lineNumber":185,"author":{"gitId":"LuahJunYang"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":186,"author":{"gitId":"LuahJunYang"},"content":"Adds any number of new tags to a client object without deleting the pre-exisiting tags.","lastModifiedDate":"2023-10-04"},{"lineNumber":187,"author":{"gitId":"LuahJunYang"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":188,"author":{"gitId":"LuahJunYang"},"content":"Format 1: `addTag \u003ctag1\u003e/\u003ctag2\u003e /\u003cINDEX\u003e`","lastModifiedDate":"2023-10-04"},{"lineNumber":189,"author":{"gitId":"LuahJunYang"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":190,"author":{"gitId":"LuahJunYang"},"content":"Format 2:  `addTag \u003ctag1\u003e/\u003ctag2\u003e /\u003cclient identifier\u003e`","lastModifiedDate":"2023-10-04"},{"lineNumber":191,"author":{"gitId":"LuahJunYang"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":192,"author":{"gitId":"zhanyang01"},"content":"* **INDEX** must be a positive integer less than or equals to the number of clients currently shown on Insurahub.","lastModifiedDate":"2023-10-05"},{"lineNumber":193,"author":{"gitId":"LuahJunYang"},"content":"* **client identifier** must be one of the unique identifier of the clients in the entire client list","lastModifiedDate":"2023-10-04"},{"lineNumber":194,"author":{"gitId":"LuahJunYang"},"content":"* **tag**: must be a valid tag in the pre-defined list implemented in the app","lastModifiedDate":"2023-10-04"},{"lineNumber":195,"author":{"gitId":"LuahJunYang"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":196,"author":{"gitId":"LuahJunYang"},"content":"Examples:","lastModifiedDate":"2023-10-04"},{"lineNumber":197,"author":{"gitId":"LuahJunYang"},"content":"* `addTag friend 1` will add the tag \u0027friend\u0027 to the first client on the current list.","lastModifiedDate":"2023-10-04"},{"lineNumber":198,"author":{"gitId":"LuahJunYang"},"content":"* `addTag friend/North JohnDoe` will add the tags \u0027friend\u0027, \u0027North\u0027 to the client identified by John Doe.","lastModifiedDate":"2023-10-04"},{"lineNumber":199,"author":{"gitId":"LuahJunYang"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":200,"author":{"gitId":"LuahJunYang"},"content":"### Deleting tags from a client object: `deleteTag`","lastModifiedDate":"2023-10-04"},{"lineNumber":201,"author":{"gitId":"LuahJunYang"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":202,"author":{"gitId":"LuahJunYang"},"content":"Removes any number of pre-existing tags from a client object.","lastModifiedDate":"2023-10-04"},{"lineNumber":203,"author":{"gitId":"LuahJunYang"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":204,"author":{"gitId":"LuahJunYang"},"content":"Format 1: `deleteTag \u003ctag1\u003e/\u003ctag2\u003e /\u003cINDEX\u003e`","lastModifiedDate":"2023-10-04"},{"lineNumber":205,"author":{"gitId":"LuahJunYang"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":206,"author":{"gitId":"LuahJunYang"},"content":"Format 2:  `deleteTag \u003ctag1\u003e/\u003ctag2\u003e /\u003cclient identifier\u003e`","lastModifiedDate":"2023-10-04"},{"lineNumber":207,"author":{"gitId":"LuahJunYang"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":208,"author":{"gitId":"zhanyang01"},"content":"* **INDEX** must be a positive integer less than or equals to the number of clients currently shown on Insurahub.","lastModifiedDate":"2023-10-05"},{"lineNumber":209,"author":{"gitId":"LuahJunYang"},"content":"* **client identifier** must be one of the unique identifier of the clients in the entire client list","lastModifiedDate":"2023-10-04"},{"lineNumber":210,"author":{"gitId":"LuahJunYang"},"content":"* * **tag**: must be a valid tag in the pre-defined list implemented in the app","lastModifiedDate":"2023-10-04"},{"lineNumber":211,"author":{"gitId":"LuahJunYang"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":212,"author":{"gitId":"LuahJunYang"},"content":"Examples:","lastModifiedDate":"2023-10-04"},{"lineNumber":213,"author":{"gitId":"LuahJunYang"},"content":"* `deleteTag friend 1` will remove the tag \u0027friend\u0027 from the first client on the current list.","lastModifiedDate":"2023-10-04"},{"lineNumber":214,"author":{"gitId":"LuahJunYang"},"content":"* `deleteTag friend/North JohnDoe` will remove the tags \u0027friend\u0027, \u0027North\u0027 from the client identified by John Doe.","lastModifiedDate":"2023-10-04"},{"lineNumber":215,"author":{"gitId":"LuahJunYang"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":216,"author":{"gitId":"zhanyang01"},"content":"### Highlighting contact of a client: `highlight`  ","lastModifiedDate":"2023-09-27"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":218,"author":{"gitId":"zhanyang01"},"content":"Highlight the specific contact details of the particular client from the application.","lastModifiedDate":"2023-09-27"},{"lineNumber":219,"author":{"gitId":"zhanyang01"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":220,"author":{"gitId":"zhanyang01"},"content":"Format 1: `highlight \u003cINDEX\u003e/\u003cpreferred contact method\u003e`  ","lastModifiedDate":"2023-09-27"},{"lineNumber":221,"author":{"gitId":"zhanyang01"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":222,"author":{"gitId":"zhanyang01"},"content":"Format 2:  `highlight \u003cclient identifier\u003e/\u003cpreferred contact method\u003e`","lastModifiedDate":"2023-09-27"},{"lineNumber":223,"author":{"gitId":"zhanyang01"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":224,"author":{"gitId":"zhanyang01"},"content":"* **INDEX** must be a positive integer less than or equals to the number of clients currently shown on Insurahub.","lastModifiedDate":"2023-10-05"},{"lineNumber":225,"author":{"gitId":"zhanyang01"},"content":"* **client identifier** must be one of the unique identifier of the clients in the entire client list","lastModifiedDate":"2023-09-27"},{"lineNumber":226,"author":{"gitId":"zhanyang01"},"content":"* **preferred contact method** either Phone number or Email currently","lastModifiedDate":"2023-09-27"},{"lineNumber":227,"author":{"gitId":"zhanyang01"},"content":"* Name: Contact name of the person that is saved in the app.","lastModifiedDate":"2023-09-27"},{"lineNumber":228,"author":{"gitId":"zhanyang01"},"content":"* Preferred contact method(expandable as project progresses):","lastModifiedDate":"2023-09-27"},{"lineNumber":229,"author":{"gitId":"zhanyang01"},"content":"    * Phone number","lastModifiedDate":"2023-09-27"},{"lineNumber":230,"author":{"gitId":"zhanyang01"},"content":"    * Email","lastModifiedDate":"2023-09-27"},{"lineNumber":231,"author":{"gitId":"zhanyang01"},"content":" ","lastModifiedDate":"2023-09-27"},{"lineNumber":232,"author":{"gitId":"zhanyang01"},"content":"Examples:","lastModifiedDate":"2023-09-27"},{"lineNumber":233,"author":{"gitId":"zhanyang01"},"content":"* `highlight 1/phone number` will highlight the phone number of the first person in the current list shown","lastModifiedDate":"2023-09-27"},{"lineNumber":234,"author":{"gitId":"zhanyang01"},"content":"* `highlight John Doe/phone number` will highlight John Doe phone number","lastModifiedDate":"2023-09-27"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"LuahJunYang"},"content":"### Filtering for clients based on tags: `filter`","lastModifiedDate":"2023-10-04"},{"lineNumber":237,"author":{"gitId":"LuahJunYang"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":238,"author":{"gitId":"LuahJunYang"},"content":"Filters and displays all clients that correspond to a specific combination/query of tags","lastModifiedDate":"2023-10-04"},{"lineNumber":239,"author":{"gitId":"LuahJunYang"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":240,"author":{"gitId":"LuahJunYang"},"content":"Format 1: `filter \u003ctag1\u003e/\u003ctag2\u003e/ … /\u003ctagn\u003e` ","lastModifiedDate":"2023-10-04"},{"lineNumber":241,"author":{"gitId":"LuahJunYang"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":242,"author":{"gitId":"LuahJunYang"},"content":"* **tag**: must be a valid tag in the pre-defined list implemented in the app","lastModifiedDate":"2023-10-04"},{"lineNumber":243,"author":{"gitId":"LuahJunYang"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":244,"author":{"gitId":"LuahJunYang"},"content":"Examples:","lastModifiedDate":"2023-10-04"},{"lineNumber":245,"author":{"gitId":"LuahJunYang"},"content":"* `filter friend/south/60+` will filter for all clients with the tags \u0027friend\u0027, \u0027south\u0027, \u002760+\u0027","lastModifiedDate":"2023-10-04"},{"lineNumber":246,"author":{"gitId":"LuahJunYang"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":247,"author":{"gitId":"aarontxz"},"content":"### Storing documents of a client: `file`","lastModifiedDate":"2023-10-03"},{"lineNumber":248,"author":{"gitId":"aarontxz"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":249,"author":{"gitId":"aarontxz"},"content":"Creates/opens up a folder specific to a client for storing of their documents","lastModifiedDate":"2023-10-03"},{"lineNumber":250,"author":{"gitId":"aarontxz"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":251,"author":{"gitId":"aarontxz"},"content":"Format 1: `file \u003cINDEX\u003e`","lastModifiedDate":"2023-10-03"},{"lineNumber":252,"author":{"gitId":"aarontxz"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":253,"author":{"gitId":"aarontxz"},"content":"Format 2:  `file \u003cclient identifier\u003e`","lastModifiedDate":"2023-10-03"},{"lineNumber":254,"author":{"gitId":"aarontxz"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":255,"author":{"gitId":"zhanyang01"},"content":"* **INDEX** must be a positive integer less than or equals to the number of clients currently shown on Insurahub.","lastModifiedDate":"2023-10-05"},{"lineNumber":256,"author":{"gitId":"aarontxz"},"content":"* **client identifier** must be one of the unique identifier of the clients in the entire client list","lastModifiedDate":"2023-10-03"},{"lineNumber":257,"author":{"gitId":"aarontxz"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":258,"author":{"gitId":"aarontxz"},"content":"Examples:","lastModifiedDate":"2023-10-03"},{"lineNumber":259,"author":{"gitId":"aarontxz"},"content":"* `file 1` will open up a folder that is named after the first client currently on the list","lastModifiedDate":"2023-10-03"},{"lineNumber":260,"author":{"gitId":"aarontxz"},"content":"* `file John Doe` will open up the folder that is used to store John Doe\u0027s documents","lastModifiedDate":"2023-10-03"},{"lineNumber":261,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":262,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another Computer?\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"**A**: Install the app in the other computer and overwrite the empty data file it creates with the file that contains the data of your previous AddressBook home folder.","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"## Known issues","lastModifiedDate":"2023-09-08"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":273,"author":{"gitId":"-"},"content":"1. **When using multiple screens**, if you move the application to a secondary screen, and later switch to using only the primary screen, the GUI will open off-screen. The remedy is to delete the `preferences.json` file created by the application before running the application again.","lastModifiedDate":"2023-09-08"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":275,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-09-08"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":277,"author":{"gitId":"-"},"content":"## Command summary","lastModifiedDate":"2020-05-23"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":279,"author":{"gitId":"-"},"content":"Action     | Format, Examples","lastModifiedDate":"2020-05-23"},{"lineNumber":280,"author":{"gitId":"-"},"content":"-----------|----------------------------------------------------------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-09-12"},{"lineNumber":281,"author":{"gitId":"-"},"content":"**Add**    | `add n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS [t/TAG]…​` \u003cbr\u003e e.g., `add n/James Ho p/22224444 e/jamesho@example.com a/123, Clementi Rd, 1234665 t/friend t/colleague`","lastModifiedDate":"2020-05-23"},{"lineNumber":282,"author":{"gitId":"-"},"content":"**Clear**  | `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":283,"author":{"gitId":"-"},"content":"**Delete** | `delete INDEX`\u003cbr\u003e e.g., `delete 3`","lastModifiedDate":"2020-05-23"},{"lineNumber":284,"author":{"gitId":"-"},"content":"**Edit**   | `edit INDEX [n/NAME] [p/PHONE_NUMBER] [e/EMAIL] [a/ADDRESS] [t/TAG]…​`\u003cbr\u003e e.g.,`edit 2 n/James Lee e/jameslee@example.com`","lastModifiedDate":"2020-05-23"},{"lineNumber":285,"author":{"gitId":"-"},"content":"**Find**   | `find KEYWORD [MORE_KEYWORDS]`\u003cbr\u003e e.g., `find James Jake`","lastModifiedDate":"2020-05-23"},{"lineNumber":286,"author":{"gitId":"-"},"content":"**List**   | `list`","lastModifiedDate":"2020-05-23"},{"lineNumber":287,"author":{"gitId":"-"},"content":"**Help**   | `help`","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"LuahJunYang":41,"aarontxz":13,"johnnythesnake12":10,"zhanyang01":30,"-":193}},{"path":"docs/team/aarontxz.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"aarontxz"},"content":"---","lastModifiedDate":"2023-10-05"},{"lineNumber":2,"author":{"gitId":"aarontxz"},"content":"  layout: default.md","lastModifiedDate":"2023-10-05"},{"lineNumber":3,"author":{"gitId":"aarontxz"},"content":"  title: \"aarontxz\u0027s Project Portfolio Page\"","lastModifiedDate":"2023-10-05"},{"lineNumber":4,"author":{"gitId":"aarontxz"},"content":"---","lastModifiedDate":"2023-10-05"},{"lineNumber":5,"author":{"gitId":"aarontxz"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":6,"author":{"gitId":"aarontxz"},"content":"### Project: Insurahub","lastModifiedDate":"2023-10-05"},{"lineNumber":7,"author":{"gitId":"aarontxz"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":8,"author":{"gitId":"aarontxz"},"content":"Insurahub - Insurahub is a CLI application that targets financial advisors that type fast and prefers CLI over GUI to use the app.","lastModifiedDate":"2023-10-05"},{"lineNumber":9,"author":{"gitId":"aarontxz"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":10,"author":{"gitId":"aarontxz"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-10-05"},{"lineNumber":11,"author":{"gitId":"aarontxz"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":12,"author":{"gitId":"aarontxz"},"content":"* **New Feature**: Added the ability to undo/redo previous commands.","lastModifiedDate":"2023-10-05"},{"lineNumber":13,"author":{"gitId":"aarontxz"},"content":"  * What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed by using the redo command.","lastModifiedDate":"2023-10-05"},{"lineNumber":14,"author":{"gitId":"aarontxz"},"content":"  * Justification: This feature improves the product significantly because a user can make mistakes in commands and the app should provide a convenient way to rectify them.","lastModifiedDate":"2023-10-05"},{"lineNumber":15,"author":{"gitId":"aarontxz"},"content":"  * Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.","lastModifiedDate":"2023-10-05"},{"lineNumber":16,"author":{"gitId":"aarontxz"},"content":"  * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2023-10-05"},{"lineNumber":17,"author":{"gitId":"aarontxz"},"content":"  * to be added soon","lastModifiedDate":"2023-10-05"},{"lineNumber":18,"author":{"gitId":"aarontxz"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":19,"author":{"gitId":"aarontxz"},"content":"* **New Feature**: Added a history command that allows the user to navigate to previous commands using up/down keys.","lastModifiedDate":"2023-10-05"},{"lineNumber":20,"author":{"gitId":"aarontxz"},"content":"  * to be added soon","lastModifiedDate":"2023-10-05"},{"lineNumber":21,"author":{"gitId":"aarontxz"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":22,"author":{"gitId":"aarontxz"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2023-10-05"},{"lineNumber":23,"author":{"gitId":"aarontxz"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":24,"author":{"gitId":"aarontxz"},"content":"* **Project management**:","lastModifiedDate":"2023-10-05"},{"lineNumber":25,"author":{"gitId":"aarontxz"},"content":"  * Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2023-10-05"},{"lineNumber":26,"author":{"gitId":"aarontxz"},"content":"  * to be added soon","lastModifiedDate":"2023-10-05"},{"lineNumber":27,"author":{"gitId":"aarontxz"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":28,"author":{"gitId":"aarontxz"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2023-10-05"},{"lineNumber":29,"author":{"gitId":"aarontxz"},"content":"  * Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2023-10-05"},{"lineNumber":30,"author":{"gitId":"aarontxz"},"content":"  * Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]())","lastModifiedDate":"2023-10-05"},{"lineNumber":31,"author":{"gitId":"aarontxz"},"content":"  * to be added soon","lastModifiedDate":"2023-10-05"},{"lineNumber":32,"author":{"gitId":"aarontxz"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":33,"author":{"gitId":"aarontxz"},"content":"* **Documentation**:","lastModifiedDate":"2023-10-05"},{"lineNumber":34,"author":{"gitId":"aarontxz"},"content":"  * User Guide:","lastModifiedDate":"2023-10-05"},{"lineNumber":35,"author":{"gitId":"aarontxz"},"content":"    * Added documentation for the features `delete` and `find` [\\#72]()","lastModifiedDate":"2023-10-05"},{"lineNumber":36,"author":{"gitId":"aarontxz"},"content":"    * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2023-10-05"},{"lineNumber":37,"author":{"gitId":"aarontxz"},"content":"    * to be added soon","lastModifiedDate":"2023-10-05"},{"lineNumber":38,"author":{"gitId":"aarontxz"},"content":"  * Developer Guide:","lastModifiedDate":"2023-10-05"},{"lineNumber":39,"author":{"gitId":"aarontxz"},"content":"    * Added implementation details of the `delete` feature.","lastModifiedDate":"2023-10-05"},{"lineNumber":40,"author":{"gitId":"aarontxz"},"content":"    * to be added soon","lastModifiedDate":"2023-10-05"},{"lineNumber":41,"author":{"gitId":"aarontxz"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":42,"author":{"gitId":"aarontxz"},"content":"* **Community**:","lastModifiedDate":"2023-10-05"},{"lineNumber":43,"author":{"gitId":"aarontxz"},"content":"  * PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2023-10-05"},{"lineNumber":44,"author":{"gitId":"aarontxz"},"content":"  * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2023-10-05"},{"lineNumber":45,"author":{"gitId":"aarontxz"},"content":"  * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2023-10-05"},{"lineNumber":46,"author":{"gitId":"aarontxz"},"content":"  * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2023-10-05"},{"lineNumber":47,"author":{"gitId":"aarontxz"},"content":"  * to be added soon","lastModifiedDate":"2023-10-05"},{"lineNumber":48,"author":{"gitId":"aarontxz"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":49,"author":{"gitId":"aarontxz"},"content":"* **Tools**:","lastModifiedDate":"2023-10-05"},{"lineNumber":50,"author":{"gitId":"aarontxz"},"content":"  * Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2023-10-05"},{"lineNumber":51,"author":{"gitId":"aarontxz"},"content":"  * Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2023-10-05"},{"lineNumber":52,"author":{"gitId":"aarontxz"},"content":"  * to be added soon","lastModifiedDate":"2023-10-05"},{"lineNumber":53,"author":{"gitId":"aarontxz"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":54,"author":{"gitId":"aarontxz"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2023-10-05"}],"authorContributionMap":{"aarontxz":54}},{"path":"docs/team/johnnythesnake12.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"johnnythesnake12"},"content":"---","lastModifiedDate":"2023-10-05"},{"lineNumber":2,"author":{"gitId":"johnnythesnake12"},"content":"  layout: default.md","lastModifiedDate":"2023-10-05"},{"lineNumber":3,"author":{"gitId":"johnnythesnake12"},"content":"  title: Ji-xuan\u0027s Project Portfolio Page\"","lastModifiedDate":"2023-10-05"},{"lineNumber":4,"author":{"gitId":"johnnythesnake12"},"content":"---","lastModifiedDate":"2023-10-05"},{"lineNumber":5,"author":{"gitId":"johnnythesnake12"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":6,"author":{"gitId":"johnnythesnake12"},"content":"### Project: Insurahub","lastModifiedDate":"2023-10-05"},{"lineNumber":7,"author":{"gitId":"johnnythesnake12"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":8,"author":{"gitId":"johnnythesnake12"},"content":"Insurahub - Insurahub is a CLI application that targets financial advisors that type fast and prefers CLI over GUI to use the app.","lastModifiedDate":"2023-10-05"},{"lineNumber":9,"author":{"gitId":"johnnythesnake12"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":10,"author":{"gitId":"johnnythesnake12"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-10-05"},{"lineNumber":11,"author":{"gitId":"johnnythesnake12"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":12,"author":{"gitId":"johnnythesnake12"},"content":"* **New Feature**: To be added soon","lastModifiedDate":"2023-10-05"},{"lineNumber":13,"author":{"gitId":"johnnythesnake12"},"content":"    * What it does: To be added soon","lastModifiedDate":"2023-10-05"},{"lineNumber":14,"author":{"gitId":"johnnythesnake12"},"content":"    * Justification: To be added soon","lastModifiedDate":"2023-10-05"},{"lineNumber":15,"author":{"gitId":"johnnythesnake12"},"content":"    * Highlights: To be added soon","lastModifiedDate":"2023-10-05"},{"lineNumber":16,"author":{"gitId":"johnnythesnake12"},"content":"    * Credits: To be added soon","lastModifiedDate":"2023-10-05"},{"lineNumber":17,"author":{"gitId":"johnnythesnake12"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":18,"author":{"gitId":"johnnythesnake12"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":19,"author":{"gitId":"johnnythesnake12"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":20,"author":{"gitId":"johnnythesnake12"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2324s1.github.io/tp-dashboard/?search\u003djohnnythesnake12\u0026breakdown\u003dfalse\u0026sort\u003dgroupTitle%20dsc\u0026sortWithin\u003dtitle\u0026since\u003d2023-09-22\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos)","lastModifiedDate":"2023-10-05"},{"lineNumber":21,"author":{"gitId":"johnnythesnake12"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":22,"author":{"gitId":"johnnythesnake12"},"content":"* **Project management**:","lastModifiedDate":"2023-10-05"},{"lineNumber":23,"author":{"gitId":"johnnythesnake12"},"content":"    * Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2023-10-05"},{"lineNumber":24,"author":{"gitId":"johnnythesnake12"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":25,"author":{"gitId":"johnnythesnake12"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2023-10-05"},{"lineNumber":26,"author":{"gitId":"johnnythesnake12"},"content":"    * Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2023-10-05"},{"lineNumber":27,"author":{"gitId":"johnnythesnake12"},"content":"    * Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]())","lastModifiedDate":"2023-10-05"},{"lineNumber":28,"author":{"gitId":"johnnythesnake12"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":29,"author":{"gitId":"johnnythesnake12"},"content":"* **Documentation**:","lastModifiedDate":"2023-10-05"},{"lineNumber":30,"author":{"gitId":"johnnythesnake12"},"content":"    * User Guide:","lastModifiedDate":"2023-10-05"},{"lineNumber":31,"author":{"gitId":"johnnythesnake12"},"content":"        * Added documentation for the features `addNewClient` and `find` [\\#72]()","lastModifiedDate":"2023-10-05"},{"lineNumber":32,"author":{"gitId":"johnnythesnake12"},"content":"        * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2023-10-05"},{"lineNumber":33,"author":{"gitId":"johnnythesnake12"},"content":"    * Developer Guide:","lastModifiedDate":"2023-10-05"},{"lineNumber":34,"author":{"gitId":"johnnythesnake12"},"content":"        * Added the Non-functional requirements of the project","lastModifiedDate":"2023-10-05"},{"lineNumber":35,"author":{"gitId":"johnnythesnake12"},"content":"    * Images:","lastModifiedDate":"2023-10-05"},{"lineNumber":36,"author":{"gitId":"johnnythesnake12"},"content":"        * Added preliminary UI mockup","lastModifiedDate":"2023-10-05"},{"lineNumber":37,"author":{"gitId":"johnnythesnake12"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":38,"author":{"gitId":"johnnythesnake12"},"content":"* **Community**:","lastModifiedDate":"2023-10-05"},{"lineNumber":39,"author":{"gitId":"johnnythesnake12"},"content":"    * To be added soon","lastModifiedDate":"2023-10-05"},{"lineNumber":40,"author":{"gitId":"johnnythesnake12"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":41,"author":{"gitId":"johnnythesnake12"},"content":"* **Tools**:","lastModifiedDate":"2023-10-05"},{"lineNumber":42,"author":{"gitId":"johnnythesnake12"},"content":"    * Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2023-10-05"},{"lineNumber":43,"author":{"gitId":"johnnythesnake12"},"content":"    * Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2023-10-05"},{"lineNumber":44,"author":{"gitId":"johnnythesnake12"},"content":"","lastModifiedDate":"2023-10-05"}],"authorContributionMap":{"johnnythesnake12":44}},{"path":"docs/team/luahjunyang.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"LuahJunYang"},"content":"---","lastModifiedDate":"2023-10-05"},{"lineNumber":2,"author":{"gitId":"LuahJunYang"},"content":"  layout: page","lastModifiedDate":"2023-10-05"},{"lineNumber":3,"author":{"gitId":"LuahJunYang"},"content":"  title: \"Luah Jun Yang\u0027s Project Portfolio Page\"","lastModifiedDate":"2023-10-05"},{"lineNumber":4,"author":{"gitId":"LuahJunYang"},"content":"---","lastModifiedDate":"2023-10-05"},{"lineNumber":5,"author":{"gitId":"LuahJunYang"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":6,"author":{"gitId":"LuahJunYang"},"content":"### Project: Insurahub","lastModifiedDate":"2023-10-05"},{"lineNumber":7,"author":{"gitId":"LuahJunYang"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":8,"author":{"gitId":"LuahJunYang"},"content":"Insurahub - Insurahub is a CLI application that targets financial advisors that type fast and prefers CLI over GUI to use the app.  ","lastModifiedDate":"2023-10-05"},{"lineNumber":9,"author":{"gitId":"LuahJunYang"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":10,"author":{"gitId":"LuahJunYang"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-10-05"},{"lineNumber":11,"author":{"gitId":"LuahJunYang"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":12,"author":{"gitId":"LuahJunYang"},"content":"* **New Feature**: Added the ability to add and delete tags from client objects without altering the pre-existing tags.","lastModifiedDate":"2023-10-05"},{"lineNumber":13,"author":{"gitId":"LuahJunYang"},"content":"  * to be added soon","lastModifiedDate":"2023-10-05"},{"lineNumber":14,"author":{"gitId":"LuahJunYang"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":15,"author":{"gitId":"LuahJunYang"},"content":"* **New Feature**: Added the ability filter for client objects based on any number of tags.","lastModifiedDate":"2023-10-05"},{"lineNumber":16,"author":{"gitId":"LuahJunYang"},"content":"  * to be added soon","lastModifiedDate":"2023-10-05"},{"lineNumber":17,"author":{"gitId":"LuahJunYang"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":18,"author":{"gitId":"LuahJunYang"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2324s1.github.io/tp-dashboard/?search\u003dzhanyang01\u0026breakdown\u003dtrue)","lastModifiedDate":"2023-10-05"},{"lineNumber":19,"author":{"gitId":"LuahJunYang"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":20,"author":{"gitId":"LuahJunYang"},"content":"* **Project management**:","lastModifiedDate":"2023-10-05"},{"lineNumber":21,"author":{"gitId":"LuahJunYang"},"content":"  * to be added soon","lastModifiedDate":"2023-10-05"},{"lineNumber":22,"author":{"gitId":"LuahJunYang"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":23,"author":{"gitId":"LuahJunYang"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2023-10-05"},{"lineNumber":24,"author":{"gitId":"LuahJunYang"},"content":"  * to be added soon","lastModifiedDate":"2023-10-05"},{"lineNumber":25,"author":{"gitId":"LuahJunYang"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":26,"author":{"gitId":"LuahJunYang"},"content":"* **Documentation**:","lastModifiedDate":"2023-10-05"},{"lineNumber":27,"author":{"gitId":"LuahJunYang"},"content":"  * User Guide:","lastModifiedDate":"2023-10-05"},{"lineNumber":28,"author":{"gitId":"LuahJunYang"},"content":"    * Added documentation for the features `addTag` and `deleteTag`","lastModifiedDate":"2023-10-05"},{"lineNumber":29,"author":{"gitId":"LuahJunYang"},"content":"    * Added documentation for the features `filter` ","lastModifiedDate":"2023-10-05"},{"lineNumber":30,"author":{"gitId":"LuahJunYang"},"content":"  * Developer Guide:","lastModifiedDate":"2023-10-05"},{"lineNumber":31,"author":{"gitId":"LuahJunYang"},"content":"    * Added terms Tag, Client Priority, Usage Instructions to the Glossary","lastModifiedDate":"2023-10-05"},{"lineNumber":32,"author":{"gitId":"LuahJunYang"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":33,"author":{"gitId":"LuahJunYang"},"content":"* **Community**:","lastModifiedDate":"2023-10-05"},{"lineNumber":34,"author":{"gitId":"LuahJunYang"},"content":"  * to be added soon","lastModifiedDate":"2023-10-05"},{"lineNumber":35,"author":{"gitId":"LuahJunYang"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":36,"author":{"gitId":"LuahJunYang"},"content":"* **Tools**:","lastModifiedDate":"2023-10-05"},{"lineNumber":37,"author":{"gitId":"LuahJunYang"},"content":"  * to be added soon","lastModifiedDate":"2023-10-05"},{"lineNumber":38,"author":{"gitId":"LuahJunYang"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":39,"author":{"gitId":"LuahJunYang"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2023-10-05"}],"authorContributionMap":{"LuahJunYang":39}},{"path":"docs/team/zhanyang01.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"zhanyang01"},"content":"---","lastModifiedDate":"2023-09-26"},{"lineNumber":2,"author":{"gitId":"zhanyang01"},"content":"  layout: page","lastModifiedDate":"2023-09-26"},{"lineNumber":3,"author":{"gitId":"zhanyang01"},"content":"  title: \"Ng Zhan Yang\u0027s Project Portfolio Page\"","lastModifiedDate":"2023-09-26"},{"lineNumber":4,"author":{"gitId":"zhanyang01"},"content":"---","lastModifiedDate":"2023-09-26"},{"lineNumber":5,"author":{"gitId":"zhanyang01"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":6,"author":{"gitId":"zhanyang01"},"content":"### Project: Insurahub","lastModifiedDate":"2023-09-26"},{"lineNumber":7,"author":{"gitId":"zhanyang01"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":8,"author":{"gitId":"zhanyang01"},"content":"Insurahub - Insurahub is a CLI application that targets financial advisors that type fast and prefers CLI over GUI to use the app.  ","lastModifiedDate":"2023-09-26"},{"lineNumber":9,"author":{"gitId":"zhanyang01"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":10,"author":{"gitId":"zhanyang01"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-09-26"},{"lineNumber":11,"author":{"gitId":"zhanyang01"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":12,"author":{"gitId":"zhanyang01"},"content":"* **New Feature**: Added the ability to undo/redo previous commands.","lastModifiedDate":"2023-09-26"},{"lineNumber":13,"author":{"gitId":"zhanyang01"},"content":"  * to be added soon","lastModifiedDate":"2023-09-26"},{"lineNumber":14,"author":{"gitId":"zhanyang01"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":15,"author":{"gitId":"zhanyang01"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2324s1.github.io/tp-dashboard/?search\u003dzhanyang01\u0026breakdown\u003dtrue)","lastModifiedDate":"2023-09-26"},{"lineNumber":16,"author":{"gitId":"zhanyang01"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":17,"author":{"gitId":"zhanyang01"},"content":"* **Project management**:","lastModifiedDate":"2023-09-26"},{"lineNumber":18,"author":{"gitId":"zhanyang01"},"content":"  * to be added soon","lastModifiedDate":"2023-09-26"},{"lineNumber":19,"author":{"gitId":"zhanyang01"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":20,"author":{"gitId":"zhanyang01"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2023-09-26"},{"lineNumber":21,"author":{"gitId":"zhanyang01"},"content":"  * to be added soon","lastModifiedDate":"2023-09-26"},{"lineNumber":22,"author":{"gitId":"zhanyang01"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":23,"author":{"gitId":"zhanyang01"},"content":"* **Documentation**:","lastModifiedDate":"2023-09-26"},{"lineNumber":24,"author":{"gitId":"zhanyang01"},"content":"  * User Guide:","lastModifiedDate":"2023-09-26"},{"lineNumber":25,"author":{"gitId":"zhanyang01"},"content":"    * Added documentation for the features `delete` and `find` [\\#72]()","lastModifiedDate":"2023-09-26"},{"lineNumber":26,"author":{"gitId":"zhanyang01"},"content":"    * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2023-09-26"},{"lineNumber":27,"author":{"gitId":"zhanyang01"},"content":"  * Developer Guide:","lastModifiedDate":"2023-09-26"},{"lineNumber":28,"author":{"gitId":"zhanyang01"},"content":"    * Added implementation details of the `delete` feature.","lastModifiedDate":"2023-09-26"},{"lineNumber":29,"author":{"gitId":"zhanyang01"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":30,"author":{"gitId":"zhanyang01"},"content":"* **Community**:","lastModifiedDate":"2023-09-26"},{"lineNumber":31,"author":{"gitId":"zhanyang01"},"content":"  * to be added soon","lastModifiedDate":"2023-09-26"},{"lineNumber":32,"author":{"gitId":"zhanyang01"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":33,"author":{"gitId":"zhanyang01"},"content":"* **Tools**:","lastModifiedDate":"2023-09-26"},{"lineNumber":34,"author":{"gitId":"zhanyang01"},"content":"  * Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2023-09-26"},{"lineNumber":35,"author":{"gitId":"zhanyang01"},"content":"  * Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2023-09-26"},{"lineNumber":36,"author":{"gitId":"zhanyang01"},"content":"  * to be added soon","lastModifiedDate":"2023-09-26"},{"lineNumber":37,"author":{"gitId":"zhanyang01"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":38,"author":{"gitId":"zhanyang01"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2023-09-26"}],"authorContributionMap":{"zhanyang01":38}},{"path":"src/main/java/seedu/address/MainApp.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Config;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Version;","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-06-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ConfigUtil;","lastModifiedDate":"2016-10-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.LogicManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-01-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-01-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-01-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-01-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-01-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2016-12-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.storage.AddressBookStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.storage.UserPrefsStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.ui.Ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.ui.UiManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":" * Runs the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"public class MainApp extends Application {","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final Version VERSION \u003d new Version(0, 2, 2, true);","lastModifiedDate":"2023-08-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(MainApp.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    protected Ui ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    protected Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    protected Storage storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    protected Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    protected Config config;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void init() throws Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d[ Initializing AddressBook ]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2016-09-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        super.init();","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d AppParameters.parse(getParameters());","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        config \u003d initConfig(appParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        initLogging(config);","lastModifiedDate":"2023-07-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        UserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(config.getUserPrefsFilePath());","lastModifiedDate":"2017-02-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d initPrefs(userPrefsStorage);","lastModifiedDate":"2018-12-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        AddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(userPrefs.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2017-02-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        model \u003d initModelManager(storage, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"LuahJunYang"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        ui \u003d new UiManager(logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Returns a {@code ModelManager} with the data from {@code storage}\u0027s address book and {@code userPrefs}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * The data from the sample address book will be used instead if {@code storage}\u0027s address book is not found,","lastModifiedDate":"2017-08-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * or an empty address book will be used instead if errors occur when reading {@code storage}\u0027s address book.","lastModifiedDate":"2017-08-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    private Model initModelManager(Storage storage, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        logger.info(\"Using data file : \" + storage.getAddressBookFilePath());","lastModifiedDate":"2023-07-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        Optional\u003cReadOnlyAddressBook\u003e addressBookOptional;","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook initialData;","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            addressBookOptional \u003d storage.readAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            if (!addressBookOptional.isPresent()) {","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"                logger.info(\"Creating a new data file \" + storage.getAddressBookFilePath()","lastModifiedDate":"2023-05-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"                        + \" populated with a sample AddressBook.\");","lastModifiedDate":"2023-05-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            initialData \u003d addressBookOptional.orElseGet(SampleDataUtil::getSampleAddressBook);","lastModifiedDate":"2016-12-20"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        } catch (DataLoadingException e) {","lastModifiedDate":"2023-06-14"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            logger.warning(\"Data file at \" + storage.getAddressBookFilePath() + \" could not be loaded.\"","lastModifiedDate":"2023-06-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"                    + \" Will be starting with an empty AddressBook.\");","lastModifiedDate":"2023-05-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            initialData \u003d new AddressBook();","lastModifiedDate":"2016-09-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        return new ModelManager(initialData, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    private void initLogging(Config config) {","lastModifiedDate":"2016-09-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        LogsCenter.init(config);","lastModifiedDate":"2016-09-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * Returns a {@code Config} using the file at {@code configFilePath}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * The default file path {@code Config#DEFAULT_CONFIG_FILE} will be used instead","lastModifiedDate":"2017-08-16"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * if {@code configFilePath} is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    protected Config initConfig(Path configFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        Config initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        Path configFilePathUsed;","lastModifiedDate":"2018-04-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        configFilePathUsed \u003d Config.DEFAULT_CONFIG_FILE;","lastModifiedDate":"2016-09-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        if (configFilePath !\u003d null) {","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            logger.info(\"Custom Config file specified \" + configFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            configFilePathUsed \u003d configFilePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        logger.info(\"Using config file : \" + configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            Optional\u003cConfig\u003e configOptional \u003d ConfigUtil.readConfig(configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"            if (!configOptional.isPresent()) {","lastModifiedDate":"2023-01-03"},{"lineNumber":122,"author":{"gitId":"-"},"content":"                logger.info(\"Creating new config file \" + configFilePathUsed);","lastModifiedDate":"2023-05-15"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2023-01-03"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            initializedConfig \u003d configOptional.orElse(new Config());","lastModifiedDate":"2016-09-24"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        } catch (DataLoadingException e) {","lastModifiedDate":"2023-06-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"            logger.warning(\"Config file at \" + configFilePathUsed + \" could not be loaded.\"","lastModifiedDate":"2023-06-15"},{"lineNumber":127,"author":{"gitId":"-"},"content":"                    + \" Using default config properties.\");","lastModifiedDate":"2023-05-15"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            initializedConfig \u003d new Config();","lastModifiedDate":"2016-09-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        //Update config file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            ConfigUtil.saveConfig(initializedConfig, configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        return initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * Returns a {@code UserPrefs} using the file at {@code storage}\u0027s user prefs file path,","lastModifiedDate":"2017-08-16"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     * or a new {@code UserPrefs} with default configuration if errors occur when","lastModifiedDate":"2017-08-16"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     * reading from the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    protected UserPrefs initPrefs(UserPrefsStorage storage) {","lastModifiedDate":"2017-02-25"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d storage.getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        logger.info(\"Using preference file : \" + prefsFilePath);","lastModifiedDate":"2023-05-15"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        UserPrefs initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            Optional\u003cUserPrefs\u003e prefsOptional \u003d storage.readUserPrefs();","lastModifiedDate":"2016-09-25"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            if (!prefsOptional.isPresent()) {","lastModifiedDate":"2023-01-03"},{"lineNumber":153,"author":{"gitId":"-"},"content":"                logger.info(\"Creating new preference file \" + prefsFilePath);","lastModifiedDate":"2023-05-15"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2023-01-03"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d prefsOptional.orElse(new UserPrefs());","lastModifiedDate":"2016-09-24"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        } catch (DataLoadingException e) {","lastModifiedDate":"2023-06-14"},{"lineNumber":157,"author":{"gitId":"-"},"content":"            logger.warning(\"Preference file at \" + prefsFilePath + \" could not be loaded.\"","lastModifiedDate":"2023-06-15"},{"lineNumber":158,"author":{"gitId":"-"},"content":"                    + \" Using default preferences.\");","lastModifiedDate":"2023-05-15"},{"lineNumber":159,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        //Update prefs file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":164,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(initializedPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":166,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        return initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-08-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        logger.info(\"Starting AddressBook \" + MainApp.VERSION);","lastModifiedDate":"2016-09-29"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        ui.start(primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    public void stop() {","lastModifiedDate":"2016-08-08"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d [ Stopping Address Book ] \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2016-09-29"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":182,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(model.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":184,"author":{"gitId":"-"},"content":"            logger.severe(\"Failed to save preferences \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":187,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"LuahJunYang":1,"-":186}},{"path":"src/main/java/seedu/address/logic/commands/AddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-10-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-01-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Adds a person to the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2023-10-17"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a person to the address book. \"","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            + \"Parameters: \"","lastModifiedDate":"2017-06-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2017-06-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"PHONE \"","lastModifiedDate":"2017-05-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"EMAIL \"","lastModifiedDate":"2017-05-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"ADDRESS \"","lastModifiedDate":"2023-10-18"},{"lineNumber":29,"author":{"gitId":"johnnythesnake12"},"content":"            + PREFIX_TAG + \"TAGS \\n\"","lastModifiedDate":"2023-10-18"},{"lineNumber":30,"author":{"gitId":"johnnythesnake12"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2017-06-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"98765432 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johnd@example.com \"","lastModifiedDate":"2017-05-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"311, Clementi Ave 2, #02-25 \"","lastModifiedDate":"2023-10-18"},{"lineNumber":36,"author":{"gitId":"johnnythesnake12"},"content":"            + PREFIX_TAG + \"friends\";","lastModifiedDate":"2023-10-18"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New person added: %1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book\";","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private final Person toAdd;","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Creates an AddCommand to add the specified {@code Person}","lastModifiedDate":"2018-01-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public AddCommand(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        toAdd \u003d person;","lastModifiedDate":"2018-01-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        if (model.hasPerson(toAdd)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        model.addPerson(toAdd);","lastModifiedDate":"2016-09-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, Messages.format(toAdd)));","lastModifiedDate":"2019-02-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        if (!(other instanceof AddCommand)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        AddCommand otherAddCommand \u003d (AddCommand) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return toAdd.equals(otherAddCommand.toAdd);","lastModifiedDate":"2023-07-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"                .add(\"toAdd\", toAdd)","lastModifiedDate":"2019-02-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"johnnythesnake12":3,"-":81}},{"path":"src/main/java/seedu/address/logic/commands/AddTagCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LuahJunYang"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"LuahJunYang"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":3,"author":{"gitId":"johnnythesnake12"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-14"},{"lineNumber":4,"author":{"gitId":"johnnythesnake12"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-10-14"},{"lineNumber":5,"author":{"gitId":"johnnythesnake12"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2023-10-14"},{"lineNumber":6,"author":{"gitId":"johnnythesnake12"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":7,"author":{"gitId":"johnnythesnake12"},"content":"import java.util.Collections;","lastModifiedDate":"2023-10-14"},{"lineNumber":8,"author":{"gitId":"johnnythesnake12"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-10-14"},{"lineNumber":9,"author":{"gitId":"johnnythesnake12"},"content":"import java.util.List;","lastModifiedDate":"2023-10-14"},{"lineNumber":10,"author":{"gitId":"johnnythesnake12"},"content":"import java.util.Objects;","lastModifiedDate":"2023-10-14"},{"lineNumber":11,"author":{"gitId":"johnnythesnake12"},"content":"import java.util.Optional;","lastModifiedDate":"2023-10-14"},{"lineNumber":12,"author":{"gitId":"johnnythesnake12"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-14"},{"lineNumber":13,"author":{"gitId":"johnnythesnake12"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":14,"author":{"gitId":"LuahJunYang"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"johnnythesnake12"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-14"},{"lineNumber":16,"author":{"gitId":"johnnythesnake12"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-14"},{"lineNumber":17,"author":{"gitId":"LuahJunYang"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"LuahJunYang"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-13"},{"lineNumber":19,"author":{"gitId":"johnnythesnake12"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2023-10-14"},{"lineNumber":20,"author":{"gitId":"johnnythesnake12"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2023-10-14"},{"lineNumber":21,"author":{"gitId":"johnnythesnake12"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-10-14"},{"lineNumber":22,"author":{"gitId":"LuahJunYang"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-13"},{"lineNumber":23,"author":{"gitId":"johnnythesnake12"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2023-10-14"},{"lineNumber":24,"author":{"gitId":"zhanyang01"},"content":"import seedu.address.model.person.PreferredContact;","lastModifiedDate":"2023-10-17"},{"lineNumber":25,"author":{"gitId":"zhanyang01"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-10-17"},{"lineNumber":26,"author":{"gitId":"johnnythesnake12"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":27,"author":{"gitId":"zhanyang01"},"content":"/**","lastModifiedDate":"2023-10-17"},{"lineNumber":28,"author":{"gitId":"zhanyang01"},"content":" * Adds a tag to an existing person in the address book.","lastModifiedDate":"2023-10-17"},{"lineNumber":29,"author":{"gitId":"zhanyang01"},"content":" */","lastModifiedDate":"2023-10-17"},{"lineNumber":30,"author":{"gitId":"johnnythesnake12"},"content":"public class AddTagCommand extends Command {","lastModifiedDate":"2023-10-14"},{"lineNumber":31,"author":{"gitId":"LuahJunYang"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":32,"author":{"gitId":"LuahJunYang"},"content":"    public static final String COMMAND_WORD \u003d \"addTag\";","lastModifiedDate":"2023-10-13"},{"lineNumber":33,"author":{"gitId":"LuahJunYang"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":34,"author":{"gitId":"johnnythesnake12"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds to the tag of the person identified \"","lastModifiedDate":"2023-10-14"},{"lineNumber":35,"author":{"gitId":"johnnythesnake12"},"content":"            + \"by the index number used in the displayed person list. \"","lastModifiedDate":"2023-10-14"},{"lineNumber":36,"author":{"gitId":"johnnythesnake12"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2023-10-14"},{"lineNumber":37,"author":{"gitId":"johnnythesnake12"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2023-10-14"},{"lineNumber":38,"author":{"gitId":"johnnythesnake12"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2023-10-14"},{"lineNumber":39,"author":{"gitId":"zhanyang01"},"content":"            + PREFIX_TAG + \"Friends\";","lastModifiedDate":"2023-10-17"},{"lineNumber":40,"author":{"gitId":"johnnythesnake12"},"content":"    public static final String MESSAGE_ADD_TAG_SUCCESS \u003d \"Added tags successfully for person %1$s\";","lastModifiedDate":"2023-10-14"},{"lineNumber":41,"author":{"gitId":"johnnythesnake12"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":42,"author":{"gitId":"johnnythesnake12"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"One tag must be provided.\";","lastModifiedDate":"2023-10-14"},{"lineNumber":43,"author":{"gitId":"johnnythesnake12"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":44,"author":{"gitId":"johnnythesnake12"},"content":"    private final Index index;","lastModifiedDate":"2023-10-14"},{"lineNumber":45,"author":{"gitId":"johnnythesnake12"},"content":"    private final AddTagDescriptor addTagDescriptor;","lastModifiedDate":"2023-10-15"},{"lineNumber":46,"author":{"gitId":"johnnythesnake12"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":47,"author":{"gitId":"johnnythesnake12"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":48,"author":{"gitId":"johnnythesnake12"},"content":"     * @param index            of the person in the filtered person list to edit","lastModifiedDate":"2023-10-14"},{"lineNumber":49,"author":{"gitId":"johnnythesnake12"},"content":"     * @param addTagDescriptor details to edit the person with","lastModifiedDate":"2023-10-14"},{"lineNumber":50,"author":{"gitId":"johnnythesnake12"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":51,"author":{"gitId":"johnnythesnake12"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":52,"author":{"gitId":"johnnythesnake12"},"content":"    public AddTagCommand(Index index, AddTagDescriptor addTagDescriptor) {","lastModifiedDate":"2023-10-14"},{"lineNumber":53,"author":{"gitId":"johnnythesnake12"},"content":"        requireNonNull(index);","lastModifiedDate":"2023-10-14"},{"lineNumber":54,"author":{"gitId":"johnnythesnake12"},"content":"        requireNonNull(addTagDescriptor);","lastModifiedDate":"2023-10-14"},{"lineNumber":55,"author":{"gitId":"johnnythesnake12"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-10-14"},{"lineNumber":56,"author":{"gitId":"johnnythesnake12"},"content":"        this.addTagDescriptor \u003d new AddTagDescriptor(addTagDescriptor);","lastModifiedDate":"2023-10-14"},{"lineNumber":57,"author":{"gitId":"johnnythesnake12"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":58,"author":{"gitId":"zhanyang01"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":59,"author":{"gitId":"johnnythesnake12"},"content":"    @Override","lastModifiedDate":"2023-10-14"},{"lineNumber":60,"author":{"gitId":"johnnythesnake12"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-14"},{"lineNumber":61,"author":{"gitId":"johnnythesnake12"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-14"},{"lineNumber":62,"author":{"gitId":"johnnythesnake12"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2023-10-14"},{"lineNumber":63,"author":{"gitId":"johnnythesnake12"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-10-14"},{"lineNumber":64,"author":{"gitId":"johnnythesnake12"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-14"},{"lineNumber":65,"author":{"gitId":"johnnythesnake12"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":66,"author":{"gitId":"johnnythesnake12"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":67,"author":{"gitId":"johnnythesnake12"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2023-10-14"},{"lineNumber":68,"author":{"gitId":"johnnythesnake12"},"content":"        Person personWithAddedTag \u003d createPersonWithAddedTag(personToEdit, addTagDescriptor);","lastModifiedDate":"2023-10-14"},{"lineNumber":69,"author":{"gitId":"johnnythesnake12"},"content":"        personWithAddedTag.addTags(personToEdit.getTags());","lastModifiedDate":"2023-10-14"},{"lineNumber":70,"author":{"gitId":"johnnythesnake12"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":71,"author":{"gitId":"johnnythesnake12"},"content":"        model.setPerson(personToEdit, personWithAddedTag);","lastModifiedDate":"2023-10-14"},{"lineNumber":72,"author":{"gitId":"johnnythesnake12"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2023-10-14"},{"lineNumber":73,"author":{"gitId":"johnnythesnake12"},"content":"        return new CommandResult(String.format(MESSAGE_ADD_TAG_SUCCESS, Messages.format(personWithAddedTag)));","lastModifiedDate":"2023-10-14"},{"lineNumber":74,"author":{"gitId":"johnnythesnake12"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":75,"author":{"gitId":"johnnythesnake12"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":76,"author":{"gitId":"johnnythesnake12"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":77,"author":{"gitId":"johnnythesnake12"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":78,"author":{"gitId":"johnnythesnake12"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToEdit}","lastModifiedDate":"2023-10-14"},{"lineNumber":79,"author":{"gitId":"johnnythesnake12"},"content":"     * edited with {@code addTagDescriptor}.","lastModifiedDate":"2023-10-14"},{"lineNumber":80,"author":{"gitId":"johnnythesnake12"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":81,"author":{"gitId":"johnnythesnake12"},"content":"    private static Person createPersonWithAddedTag(Person personToEdit, AddTagDescriptor addTagDescriptor) {","lastModifiedDate":"2023-10-14"},{"lineNumber":82,"author":{"gitId":"johnnythesnake12"},"content":"        assert personToEdit !\u003d null;","lastModifiedDate":"2023-10-14"},{"lineNumber":83,"author":{"gitId":"johnnythesnake12"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":84,"author":{"gitId":"johnnythesnake12"},"content":"        Name updatedName \u003d addTagDescriptor.getName().orElse(personToEdit.getName());","lastModifiedDate":"2023-10-14"},{"lineNumber":85,"author":{"gitId":"johnnythesnake12"},"content":"        Phone updatedPhone \u003d addTagDescriptor.getPhone().orElse(personToEdit.getPhone());","lastModifiedDate":"2023-10-14"},{"lineNumber":86,"author":{"gitId":"johnnythesnake12"},"content":"        Email updatedEmail \u003d addTagDescriptor.getEmail().orElse(personToEdit.getEmail());","lastModifiedDate":"2023-10-14"},{"lineNumber":87,"author":{"gitId":"johnnythesnake12"},"content":"        Address updatedAddress \u003d addTagDescriptor.getAddress().orElse(personToEdit.getAddress());","lastModifiedDate":"2023-10-14"},{"lineNumber":88,"author":{"gitId":"johnnythesnake12"},"content":"        Set\u003cTag\u003e updatedTags \u003d addTagDescriptor.getTags().orElse(personToEdit.getTags());","lastModifiedDate":"2023-10-14"},{"lineNumber":89,"author":{"gitId":"zhanyang01"},"content":"        PreferredContact updatePreferredContact \u003d addTagDescriptor.getPreferredContact()","lastModifiedDate":"2023-10-17"},{"lineNumber":90,"author":{"gitId":"zhanyang01"},"content":"                .orElse(personToEdit.getPreferredContact());","lastModifiedDate":"2023-10-17"},{"lineNumber":91,"author":{"gitId":"LuahJunYang"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":92,"author":{"gitId":"zhanyang01"},"content":"        return new Person(updatedName, updatedPhone, updatedEmail, updatedAddress, updatedTags, updatePreferredContact);","lastModifiedDate":"2023-10-17"},{"lineNumber":93,"author":{"gitId":"johnnythesnake12"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":94,"author":{"gitId":"johnnythesnake12"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":95,"author":{"gitId":"zhanyang01"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":96,"author":{"gitId":"zhanyang01"},"content":"     * Checks for duplicates in the set","lastModifiedDate":"2023-10-17"},{"lineNumber":97,"author":{"gitId":"zhanyang01"},"content":"     * @param set set to be checked","lastModifiedDate":"2023-10-17"},{"lineNumber":98,"author":{"gitId":"zhanyang01"},"content":"     * @param \u003cT\u003e this describes my type parameter","lastModifiedDate":"2023-10-17"},{"lineNumber":99,"author":{"gitId":"zhanyang01"},"content":"     * @return true if at least one field is duplicated","lastModifiedDate":"2023-10-17"},{"lineNumber":100,"author":{"gitId":"zhanyang01"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":101,"author":{"gitId":"johnnythesnake12"},"content":"    public static \u003cT\u003e boolean hasDuplicates(Set\u003cT\u003e set) {","lastModifiedDate":"2023-10-14"},{"lineNumber":102,"author":{"gitId":"johnnythesnake12"},"content":"        Set\u003cT\u003e tempSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-10-14"},{"lineNumber":103,"author":{"gitId":"johnnythesnake12"},"content":"        for (T element : set) {","lastModifiedDate":"2023-10-14"},{"lineNumber":104,"author":{"gitId":"johnnythesnake12"},"content":"            if (tempSet.contains(element)) {","lastModifiedDate":"2023-10-14"},{"lineNumber":105,"author":{"gitId":"johnnythesnake12"},"content":"                return true;","lastModifiedDate":"2023-10-14"},{"lineNumber":106,"author":{"gitId":"johnnythesnake12"},"content":"            }","lastModifiedDate":"2023-10-14"},{"lineNumber":107,"author":{"gitId":"johnnythesnake12"},"content":"            tempSet.add(element);","lastModifiedDate":"2023-10-14"},{"lineNumber":108,"author":{"gitId":"johnnythesnake12"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":109,"author":{"gitId":"johnnythesnake12"},"content":"        return false;","lastModifiedDate":"2023-10-14"},{"lineNumber":110,"author":{"gitId":"johnnythesnake12"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":111,"author":{"gitId":"johnnythesnake12"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":112,"author":{"gitId":"zhanyang01"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":113,"author":{"gitId":"zhanyang01"},"content":"     * Compares this object with another object","lastModifiedDate":"2023-10-17"},{"lineNumber":114,"author":{"gitId":"zhanyang01"},"content":"     * @param other object to be compared","lastModifiedDate":"2023-10-17"},{"lineNumber":115,"author":{"gitId":"zhanyang01"},"content":"     * @return true if other is equal to this","lastModifiedDate":"2023-10-17"},{"lineNumber":116,"author":{"gitId":"zhanyang01"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":117,"author":{"gitId":"johnnythesnake12"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-14"},{"lineNumber":118,"author":{"gitId":"johnnythesnake12"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-14"},{"lineNumber":119,"author":{"gitId":"johnnythesnake12"},"content":"            return true;","lastModifiedDate":"2023-10-14"},{"lineNumber":120,"author":{"gitId":"johnnythesnake12"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":121,"author":{"gitId":"johnnythesnake12"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":122,"author":{"gitId":"johnnythesnake12"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-14"},{"lineNumber":123,"author":{"gitId":"johnnythesnake12"},"content":"        if (!(other instanceof AddTagCommand)) {","lastModifiedDate":"2023-10-14"},{"lineNumber":124,"author":{"gitId":"johnnythesnake12"},"content":"            return false;","lastModifiedDate":"2023-10-14"},{"lineNumber":125,"author":{"gitId":"johnnythesnake12"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":126,"author":{"gitId":"johnnythesnake12"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":127,"author":{"gitId":"johnnythesnake12"},"content":"        AddTagCommand otherAddTagCommand \u003d (AddTagCommand) other;","lastModifiedDate":"2023-10-14"},{"lineNumber":128,"author":{"gitId":"johnnythesnake12"},"content":"        return index.equals(otherAddTagCommand.index)","lastModifiedDate":"2023-10-14"},{"lineNumber":129,"author":{"gitId":"johnnythesnake12"},"content":"                \u0026\u0026 addTagDescriptor.equals(otherAddTagCommand.addTagDescriptor);","lastModifiedDate":"2023-10-14"},{"lineNumber":130,"author":{"gitId":"johnnythesnake12"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":131,"author":{"gitId":"johnnythesnake12"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":132,"author":{"gitId":"johnnythesnake12"},"content":"    @Override","lastModifiedDate":"2023-10-14"},{"lineNumber":133,"author":{"gitId":"johnnythesnake12"},"content":"    public String toString() {","lastModifiedDate":"2023-10-14"},{"lineNumber":134,"author":{"gitId":"johnnythesnake12"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-10-14"},{"lineNumber":135,"author":{"gitId":"johnnythesnake12"},"content":"                .add(\"index\", index)","lastModifiedDate":"2023-10-14"},{"lineNumber":136,"author":{"gitId":"johnnythesnake12"},"content":"                .toString();","lastModifiedDate":"2023-10-14"},{"lineNumber":137,"author":{"gitId":"johnnythesnake12"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":138,"author":{"gitId":"johnnythesnake12"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":139,"author":{"gitId":"johnnythesnake12"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":140,"author":{"gitId":"zhanyang01"},"content":"     * Stores the details to add the tag with. Added tag will be added to current","lastModifiedDate":"2023-10-17"},{"lineNumber":141,"author":{"gitId":"zhanyang01"},"content":"     * list of tag.","lastModifiedDate":"2023-10-17"},{"lineNumber":142,"author":{"gitId":"johnnythesnake12"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":143,"author":{"gitId":"LuahJunYang"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":144,"author":{"gitId":"johnnythesnake12"},"content":"    public static class AddTagDescriptor {","lastModifiedDate":"2023-10-14"},{"lineNumber":145,"author":{"gitId":"johnnythesnake12"},"content":"        private Name name;","lastModifiedDate":"2023-10-14"},{"lineNumber":146,"author":{"gitId":"johnnythesnake12"},"content":"        private Phone phone;","lastModifiedDate":"2023-10-14"},{"lineNumber":147,"author":{"gitId":"johnnythesnake12"},"content":"        private Email email;","lastModifiedDate":"2023-10-14"},{"lineNumber":148,"author":{"gitId":"johnnythesnake12"},"content":"        private Address address;","lastModifiedDate":"2023-10-14"},{"lineNumber":149,"author":{"gitId":"johnnythesnake12"},"content":"        private Set\u003cTag\u003e tags;","lastModifiedDate":"2023-10-14"},{"lineNumber":150,"author":{"gitId":"zhanyang01"},"content":"        private PreferredContact preferredContact;","lastModifiedDate":"2023-10-17"},{"lineNumber":151,"author":{"gitId":"LuahJunYang"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":152,"author":{"gitId":"zhanyang01"},"content":"        public AddTagDescriptor() {","lastModifiedDate":"2023-10-17"},{"lineNumber":153,"author":{"gitId":"zhanyang01"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":154,"author":{"gitId":"johnnythesnake12"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":155,"author":{"gitId":"johnnythesnake12"},"content":"        /**","lastModifiedDate":"2023-10-14"},{"lineNumber":156,"author":{"gitId":"johnnythesnake12"},"content":"         * Copy constructor.s","lastModifiedDate":"2023-10-14"},{"lineNumber":157,"author":{"gitId":"johnnythesnake12"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2023-10-14"},{"lineNumber":158,"author":{"gitId":"johnnythesnake12"},"content":"         */","lastModifiedDate":"2023-10-14"},{"lineNumber":159,"author":{"gitId":"johnnythesnake12"},"content":"        public AddTagDescriptor(AddTagDescriptor toCopy) {","lastModifiedDate":"2023-10-14"},{"lineNumber":160,"author":{"gitId":"johnnythesnake12"},"content":"            setName(toCopy.name);","lastModifiedDate":"2023-10-14"},{"lineNumber":161,"author":{"gitId":"johnnythesnake12"},"content":"            setPhone(toCopy.phone);","lastModifiedDate":"2023-10-14"},{"lineNumber":162,"author":{"gitId":"johnnythesnake12"},"content":"            setEmail(toCopy.email);","lastModifiedDate":"2023-10-14"},{"lineNumber":163,"author":{"gitId":"johnnythesnake12"},"content":"            setAddress(toCopy.address);","lastModifiedDate":"2023-10-14"},{"lineNumber":164,"author":{"gitId":"johnnythesnake12"},"content":"            setTags(toCopy.tags);","lastModifiedDate":"2023-10-14"},{"lineNumber":165,"author":{"gitId":"zhanyang01"},"content":"            setPreferredContact(toCopy.preferredContact);","lastModifiedDate":"2023-10-17"},{"lineNumber":166,"author":{"gitId":"LuahJunYang"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":167,"author":{"gitId":"johnnythesnake12"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":168,"author":{"gitId":"johnnythesnake12"},"content":"        public void setName(Name name) {","lastModifiedDate":"2023-10-14"},{"lineNumber":169,"author":{"gitId":"johnnythesnake12"},"content":"            this.name \u003d name;","lastModifiedDate":"2023-10-14"},{"lineNumber":170,"author":{"gitId":"johnnythesnake12"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":171,"author":{"gitId":"johnnythesnake12"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":172,"author":{"gitId":"johnnythesnake12"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2023-10-14"},{"lineNumber":173,"author":{"gitId":"johnnythesnake12"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2023-10-14"},{"lineNumber":174,"author":{"gitId":"johnnythesnake12"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":175,"author":{"gitId":"johnnythesnake12"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":176,"author":{"gitId":"johnnythesnake12"},"content":"        public void setPhone(Phone phone) {","lastModifiedDate":"2023-10-14"},{"lineNumber":177,"author":{"gitId":"johnnythesnake12"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2023-10-14"},{"lineNumber":178,"author":{"gitId":"johnnythesnake12"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":179,"author":{"gitId":"johnnythesnake12"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":180,"author":{"gitId":"johnnythesnake12"},"content":"        public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2023-10-14"},{"lineNumber":181,"author":{"gitId":"johnnythesnake12"},"content":"            return Optional.ofNullable(phone);","lastModifiedDate":"2023-10-14"},{"lineNumber":182,"author":{"gitId":"johnnythesnake12"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":183,"author":{"gitId":"johnnythesnake12"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":184,"author":{"gitId":"johnnythesnake12"},"content":"        public void setEmail(Email email) {","lastModifiedDate":"2023-10-14"},{"lineNumber":185,"author":{"gitId":"johnnythesnake12"},"content":"            this.email \u003d email;","lastModifiedDate":"2023-10-14"},{"lineNumber":186,"author":{"gitId":"johnnythesnake12"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":187,"author":{"gitId":"johnnythesnake12"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":188,"author":{"gitId":"johnnythesnake12"},"content":"        public Optional\u003cEmail\u003e getEmail() {","lastModifiedDate":"2023-10-14"},{"lineNumber":189,"author":{"gitId":"johnnythesnake12"},"content":"            return Optional.ofNullable(email);","lastModifiedDate":"2023-10-14"},{"lineNumber":190,"author":{"gitId":"johnnythesnake12"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":191,"author":{"gitId":"johnnythesnake12"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":192,"author":{"gitId":"johnnythesnake12"},"content":"        public void setAddress(Address address) {","lastModifiedDate":"2023-10-14"},{"lineNumber":193,"author":{"gitId":"johnnythesnake12"},"content":"            this.address \u003d address;","lastModifiedDate":"2023-10-14"},{"lineNumber":194,"author":{"gitId":"johnnythesnake12"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":195,"author":{"gitId":"johnnythesnake12"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":196,"author":{"gitId":"johnnythesnake12"},"content":"        public Optional\u003cAddress\u003e getAddress() {","lastModifiedDate":"2023-10-14"},{"lineNumber":197,"author":{"gitId":"johnnythesnake12"},"content":"            return Optional.ofNullable(address);","lastModifiedDate":"2023-10-14"},{"lineNumber":198,"author":{"gitId":"johnnythesnake12"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":199,"author":{"gitId":"johnnythesnake12"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":200,"author":{"gitId":"johnnythesnake12"},"content":"        /**","lastModifiedDate":"2023-10-14"},{"lineNumber":201,"author":{"gitId":"johnnythesnake12"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2023-10-14"},{"lineNumber":202,"author":{"gitId":"johnnythesnake12"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2023-10-14"},{"lineNumber":203,"author":{"gitId":"johnnythesnake12"},"content":"         */","lastModifiedDate":"2023-10-14"},{"lineNumber":204,"author":{"gitId":"johnnythesnake12"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2023-10-14"},{"lineNumber":205,"author":{"gitId":"johnnythesnake12"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2023-10-14"},{"lineNumber":206,"author":{"gitId":"johnnythesnake12"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":207,"author":{"gitId":"johnnythesnake12"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":208,"author":{"gitId":"johnnythesnake12"},"content":"        /**","lastModifiedDate":"2023-10-14"},{"lineNumber":209,"author":{"gitId":"zhanyang01"},"content":"         * Sets {@code preferredContact} to this object\u0027s {@code preferredContact}.","lastModifiedDate":"2023-10-17"},{"lineNumber":210,"author":{"gitId":"zhanyang01"},"content":"         *","lastModifiedDate":"2023-10-17"},{"lineNumber":211,"author":{"gitId":"zhanyang01"},"content":"         * @param preferredContact","lastModifiedDate":"2023-10-17"},{"lineNumber":212,"author":{"gitId":"zhanyang01"},"content":"         */","lastModifiedDate":"2023-10-17"},{"lineNumber":213,"author":{"gitId":"zhanyang01"},"content":"        public void setPreferredContact(PreferredContact preferredContact) {","lastModifiedDate":"2023-10-17"},{"lineNumber":214,"author":{"gitId":"zhanyang01"},"content":"            this.preferredContact \u003d preferredContact;","lastModifiedDate":"2023-10-17"},{"lineNumber":215,"author":{"gitId":"zhanyang01"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":216,"author":{"gitId":"zhanyang01"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":217,"author":{"gitId":"zhanyang01"},"content":"        /**","lastModifiedDate":"2023-10-17"},{"lineNumber":218,"author":{"gitId":"zhanyang01"},"content":"         * Returns an optional preferred contact method of a person","lastModifiedDate":"2023-10-17"},{"lineNumber":219,"author":{"gitId":"zhanyang01"},"content":"         *","lastModifiedDate":"2023-10-17"},{"lineNumber":220,"author":{"gitId":"zhanyang01"},"content":"         * @return","lastModifiedDate":"2023-10-17"},{"lineNumber":221,"author":{"gitId":"zhanyang01"},"content":"         */","lastModifiedDate":"2023-10-17"},{"lineNumber":222,"author":{"gitId":"zhanyang01"},"content":"        public Optional\u003cPreferredContact\u003e getPreferredContact() {","lastModifiedDate":"2023-10-17"},{"lineNumber":223,"author":{"gitId":"zhanyang01"},"content":"            return Optional.ofNullable(preferredContact);","lastModifiedDate":"2023-10-17"},{"lineNumber":224,"author":{"gitId":"zhanyang01"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":225,"author":{"gitId":"zhanyang01"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":226,"author":{"gitId":"zhanyang01"},"content":"        /**","lastModifiedDate":"2023-10-17"},{"lineNumber":227,"author":{"gitId":"zhanyang01"},"content":"         * Returns an unmodifiable tag set, which throws","lastModifiedDate":"2023-10-17"},{"lineNumber":228,"author":{"gitId":"zhanyang01"},"content":"         * {@code UnsupportedOperationException}","lastModifiedDate":"2023-10-17"},{"lineNumber":229,"author":{"gitId":"johnnythesnake12"},"content":"         * if modification is attempted.","lastModifiedDate":"2023-10-14"},{"lineNumber":230,"author":{"gitId":"johnnythesnake12"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2023-10-14"},{"lineNumber":231,"author":{"gitId":"johnnythesnake12"},"content":"         */","lastModifiedDate":"2023-10-14"},{"lineNumber":232,"author":{"gitId":"johnnythesnake12"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2023-10-14"},{"lineNumber":233,"author":{"gitId":"johnnythesnake12"},"content":"            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2023-10-14"},{"lineNumber":234,"author":{"gitId":"johnnythesnake12"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":235,"author":{"gitId":"johnnythesnake12"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":236,"author":{"gitId":"johnnythesnake12"},"content":"        @Override","lastModifiedDate":"2023-10-14"},{"lineNumber":237,"author":{"gitId":"johnnythesnake12"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2023-10-14"},{"lineNumber":238,"author":{"gitId":"johnnythesnake12"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-14"},{"lineNumber":239,"author":{"gitId":"johnnythesnake12"},"content":"                return true;","lastModifiedDate":"2023-10-14"},{"lineNumber":240,"author":{"gitId":"johnnythesnake12"},"content":"            }","lastModifiedDate":"2023-10-14"},{"lineNumber":241,"author":{"gitId":"johnnythesnake12"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":242,"author":{"gitId":"johnnythesnake12"},"content":"            // instanceof handles nulls","lastModifiedDate":"2023-10-14"},{"lineNumber":243,"author":{"gitId":"johnnythesnake12"},"content":"            if (!(other instanceof AddTagCommand.AddTagDescriptor)) {","lastModifiedDate":"2023-10-14"},{"lineNumber":244,"author":{"gitId":"johnnythesnake12"},"content":"                return false;","lastModifiedDate":"2023-10-14"},{"lineNumber":245,"author":{"gitId":"johnnythesnake12"},"content":"            }","lastModifiedDate":"2023-10-14"},{"lineNumber":246,"author":{"gitId":"johnnythesnake12"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":247,"author":{"gitId":"johnnythesnake12"},"content":"            AddTagCommand.AddTagDescriptor otherAddTagDescriptor \u003d (AddTagCommand.AddTagDescriptor) other;","lastModifiedDate":"2023-10-14"},{"lineNumber":248,"author":{"gitId":"johnnythesnake12"},"content":"            return Objects.equals(name, otherAddTagDescriptor.name)","lastModifiedDate":"2023-10-14"},{"lineNumber":249,"author":{"gitId":"johnnythesnake12"},"content":"                    \u0026\u0026 Objects.equals(phone, otherAddTagDescriptor.phone)","lastModifiedDate":"2023-10-14"},{"lineNumber":250,"author":{"gitId":"johnnythesnake12"},"content":"                    \u0026\u0026 Objects.equals(email, otherAddTagDescriptor.email)","lastModifiedDate":"2023-10-14"},{"lineNumber":251,"author":{"gitId":"johnnythesnake12"},"content":"                    \u0026\u0026 Objects.equals(address, otherAddTagDescriptor.address)","lastModifiedDate":"2023-10-14"},{"lineNumber":252,"author":{"gitId":"johnnythesnake12"},"content":"                    \u0026\u0026 Objects.equals(tags, otherAddTagDescriptor.tags);","lastModifiedDate":"2023-10-14"},{"lineNumber":253,"author":{"gitId":"johnnythesnake12"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":254,"author":{"gitId":"johnnythesnake12"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":255,"author":{"gitId":"johnnythesnake12"},"content":"        @Override","lastModifiedDate":"2023-10-14"},{"lineNumber":256,"author":{"gitId":"johnnythesnake12"},"content":"        public String toString() {","lastModifiedDate":"2023-10-14"},{"lineNumber":257,"author":{"gitId":"johnnythesnake12"},"content":"            return new ToStringBuilder(this)","lastModifiedDate":"2023-10-14"},{"lineNumber":258,"author":{"gitId":"johnnythesnake12"},"content":"                    .add(\"name\", name)","lastModifiedDate":"2023-10-14"},{"lineNumber":259,"author":{"gitId":"johnnythesnake12"},"content":"                    .add(\"phone\", phone)","lastModifiedDate":"2023-10-14"},{"lineNumber":260,"author":{"gitId":"johnnythesnake12"},"content":"                    .add(\"email\", email)","lastModifiedDate":"2023-10-14"},{"lineNumber":261,"author":{"gitId":"johnnythesnake12"},"content":"                    .add(\"address\", address)","lastModifiedDate":"2023-10-14"},{"lineNumber":262,"author":{"gitId":"johnnythesnake12"},"content":"                    .add(\"tags\", tags)","lastModifiedDate":"2023-10-14"},{"lineNumber":263,"author":{"gitId":"johnnythesnake12"},"content":"                    .toString();","lastModifiedDate":"2023-10-14"},{"lineNumber":264,"author":{"gitId":"johnnythesnake12"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":265,"author":{"gitId":"johnnythesnake12"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":266,"author":{"gitId":"johnnythesnake12"},"content":"}","lastModifiedDate":"2023-10-14"}],"authorContributionMap":{"LuahJunYang":13,"johnnythesnake12":206,"zhanyang01":47}},{"path":"src/main/java/seedu/address/logic/commands/DeleteTagCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"johnnythesnake12"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-15"},{"lineNumber":2,"author":{"gitId":"johnnythesnake12"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":3,"author":{"gitId":"johnnythesnake12"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-15"},{"lineNumber":4,"author":{"gitId":"johnnythesnake12"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-10-15"},{"lineNumber":5,"author":{"gitId":"johnnythesnake12"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2023-10-15"},{"lineNumber":6,"author":{"gitId":"johnnythesnake12"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":7,"author":{"gitId":"johnnythesnake12"},"content":"import java.util.Collections;","lastModifiedDate":"2023-10-15"},{"lineNumber":8,"author":{"gitId":"johnnythesnake12"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-10-15"},{"lineNumber":9,"author":{"gitId":"johnnythesnake12"},"content":"import java.util.List;","lastModifiedDate":"2023-10-15"},{"lineNumber":10,"author":{"gitId":"johnnythesnake12"},"content":"import java.util.Objects;","lastModifiedDate":"2023-10-15"},{"lineNumber":11,"author":{"gitId":"johnnythesnake12"},"content":"import java.util.Optional;","lastModifiedDate":"2023-10-15"},{"lineNumber":12,"author":{"gitId":"johnnythesnake12"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-15"},{"lineNumber":13,"author":{"gitId":"johnnythesnake12"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":14,"author":{"gitId":"johnnythesnake12"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-15"},{"lineNumber":15,"author":{"gitId":"johnnythesnake12"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-15"},{"lineNumber":16,"author":{"gitId":"johnnythesnake12"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-15"},{"lineNumber":17,"author":{"gitId":"johnnythesnake12"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-15"},{"lineNumber":18,"author":{"gitId":"johnnythesnake12"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-15"},{"lineNumber":19,"author":{"gitId":"johnnythesnake12"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2023-10-15"},{"lineNumber":20,"author":{"gitId":"johnnythesnake12"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2023-10-15"},{"lineNumber":21,"author":{"gitId":"johnnythesnake12"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-10-15"},{"lineNumber":22,"author":{"gitId":"johnnythesnake12"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-15"},{"lineNumber":23,"author":{"gitId":"johnnythesnake12"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2023-10-15"},{"lineNumber":24,"author":{"gitId":"zhanyang01"},"content":"import seedu.address.model.person.PreferredContact;","lastModifiedDate":"2023-10-17"},{"lineNumber":25,"author":{"gitId":"zhanyang01"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-10-17"},{"lineNumber":26,"author":{"gitId":"johnnythesnake12"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":27,"author":{"gitId":"zhanyang01"},"content":"/**","lastModifiedDate":"2023-10-17"},{"lineNumber":28,"author":{"gitId":"zhanyang01"},"content":" * Deletes a tag from an existing person in the address book.","lastModifiedDate":"2023-10-17"},{"lineNumber":29,"author":{"gitId":"zhanyang01"},"content":" */","lastModifiedDate":"2023-10-17"},{"lineNumber":30,"author":{"gitId":"johnnythesnake12"},"content":"public class DeleteTagCommand extends Command {","lastModifiedDate":"2023-10-15"},{"lineNumber":31,"author":{"gitId":"johnnythesnake12"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":32,"author":{"gitId":"johnnythesnake12"},"content":"    public static final String COMMAND_WORD \u003d \"deleteTag\";","lastModifiedDate":"2023-10-15"},{"lineNumber":33,"author":{"gitId":"johnnythesnake12"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":34,"author":{"gitId":"johnnythesnake12"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2023-10-15"},{"lineNumber":35,"author":{"gitId":"johnnythesnake12"},"content":"            + \": Deletes the tags of the person identified by the index number used in the displayed person list.\\n\"","lastModifiedDate":"2023-10-15"},{"lineNumber":36,"author":{"gitId":"johnnythesnake12"},"content":"            + \"Parameters: INDEX(must be a positive integer)\"","lastModifiedDate":"2023-10-15"},{"lineNumber":37,"author":{"gitId":"johnnythesnake12"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2023-10-15"},{"lineNumber":38,"author":{"gitId":"johnnythesnake12"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2023-10-15"},{"lineNumber":39,"author":{"gitId":"johnnythesnake12"},"content":"            + PREFIX_TAG + \"friend\";","lastModifiedDate":"2023-10-15"},{"lineNumber":40,"author":{"gitId":"johnnythesnake12"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":41,"author":{"gitId":"johnnythesnake12"},"content":"    public static final String MESSAGE_DELETE_TAG_SUCCESS \u003d \"Deleted tags successfully for person %1$s\";","lastModifiedDate":"2023-10-15"},{"lineNumber":42,"author":{"gitId":"johnnythesnake12"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":43,"author":{"gitId":"johnnythesnake12"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"One tag must be provided.\";","lastModifiedDate":"2023-10-15"},{"lineNumber":44,"author":{"gitId":"johnnythesnake12"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":45,"author":{"gitId":"zhanyang01"},"content":"    public static final String MESSAGE_INVALID_TAGS_PROVIDED \u003d","lastModifiedDate":"2023-10-17"},{"lineNumber":46,"author":{"gitId":"zhanyang01"},"content":"            \"Tags provided do not exist. Please provide an existing tag.\";","lastModifiedDate":"2023-10-17"},{"lineNumber":47,"author":{"gitId":"johnnythesnake12"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":48,"author":{"gitId":"johnnythesnake12"},"content":"    private final Index index;","lastModifiedDate":"2023-10-15"},{"lineNumber":49,"author":{"gitId":"johnnythesnake12"},"content":"    private final DeleteTagDescriptor deleteTagDescriptor;","lastModifiedDate":"2023-10-15"},{"lineNumber":50,"author":{"gitId":"johnnythesnake12"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":51,"author":{"gitId":"johnnythesnake12"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":52,"author":{"gitId":"johnnythesnake12"},"content":"     * @param index               of the person in the filtered person list to edit","lastModifiedDate":"2023-10-15"},{"lineNumber":53,"author":{"gitId":"johnnythesnake12"},"content":"     * @param deleteTagDescriptor details the tags to delete from the person","lastModifiedDate":"2023-10-15"},{"lineNumber":54,"author":{"gitId":"johnnythesnake12"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":55,"author":{"gitId":"johnnythesnake12"},"content":"    public DeleteTagCommand(Index index, DeleteTagDescriptor deleteTagDescriptor) {","lastModifiedDate":"2023-10-15"},{"lineNumber":56,"author":{"gitId":"johnnythesnake12"},"content":"        requireNonNull(index);","lastModifiedDate":"2023-10-15"},{"lineNumber":57,"author":{"gitId":"johnnythesnake12"},"content":"        requireNonNull(deleteTagDescriptor);","lastModifiedDate":"2023-10-15"},{"lineNumber":58,"author":{"gitId":"johnnythesnake12"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-10-15"},{"lineNumber":59,"author":{"gitId":"johnnythesnake12"},"content":"        this.deleteTagDescriptor \u003d new DeleteTagDescriptor(deleteTagDescriptor);","lastModifiedDate":"2023-10-15"},{"lineNumber":60,"author":{"gitId":"johnnythesnake12"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":61,"author":{"gitId":"johnnythesnake12"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":62,"author":{"gitId":"johnnythesnake12"},"content":"    @Override","lastModifiedDate":"2023-10-15"},{"lineNumber":63,"author":{"gitId":"johnnythesnake12"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-15"},{"lineNumber":64,"author":{"gitId":"johnnythesnake12"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-15"},{"lineNumber":65,"author":{"gitId":"johnnythesnake12"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2023-10-15"},{"lineNumber":66,"author":{"gitId":"johnnythesnake12"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-10-15"},{"lineNumber":67,"author":{"gitId":"johnnythesnake12"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-15"},{"lineNumber":68,"author":{"gitId":"johnnythesnake12"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":69,"author":{"gitId":"johnnythesnake12"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":70,"author":{"gitId":"johnnythesnake12"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2023-10-15"},{"lineNumber":71,"author":{"gitId":"johnnythesnake12"},"content":"        Person personWithDeletedTag \u003d createPersonWithDeletedTag(personToEdit, deleteTagDescriptor);","lastModifiedDate":"2023-10-15"},{"lineNumber":72,"author":{"gitId":"johnnythesnake12"},"content":"        personWithDeletedTag.deleteTags(personToEdit.getTags());","lastModifiedDate":"2023-10-15"},{"lineNumber":73,"author":{"gitId":"johnnythesnake12"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":74,"author":{"gitId":"johnnythesnake12"},"content":"        if (personWithDeletedTag.getTags().size() \u003d\u003d personToEdit.getTags().size()) {","lastModifiedDate":"2023-10-15"},{"lineNumber":75,"author":{"gitId":"johnnythesnake12"},"content":"            throw new CommandException(MESSAGE_INVALID_TAGS_PROVIDED);","lastModifiedDate":"2023-10-15"},{"lineNumber":76,"author":{"gitId":"johnnythesnake12"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":77,"author":{"gitId":"johnnythesnake12"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":78,"author":{"gitId":"johnnythesnake12"},"content":"        model.setPerson(personToEdit, personWithDeletedTag);","lastModifiedDate":"2023-10-15"},{"lineNumber":79,"author":{"gitId":"johnnythesnake12"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2023-10-15"},{"lineNumber":80,"author":{"gitId":"johnnythesnake12"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_TAG_SUCCESS, Messages.format(personWithDeletedTag)));","lastModifiedDate":"2023-10-15"},{"lineNumber":81,"author":{"gitId":"johnnythesnake12"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":82,"author":{"gitId":"johnnythesnake12"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":83,"author":{"gitId":"johnnythesnake12"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":84,"author":{"gitId":"johnnythesnake12"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":85,"author":{"gitId":"johnnythesnake12"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToEdit}","lastModifiedDate":"2023-10-15"},{"lineNumber":86,"author":{"gitId":"johnnythesnake12"},"content":"     * edited with {@code deleteTagDescriptor}.","lastModifiedDate":"2023-10-15"},{"lineNumber":87,"author":{"gitId":"johnnythesnake12"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":88,"author":{"gitId":"johnnythesnake12"},"content":"    private static Person createPersonWithDeletedTag(Person personToEdit, DeleteTagDescriptor deleteTagDescriptor) {","lastModifiedDate":"2023-10-15"},{"lineNumber":89,"author":{"gitId":"johnnythesnake12"},"content":"        assert personToEdit !\u003d null;","lastModifiedDate":"2023-10-15"},{"lineNumber":90,"author":{"gitId":"johnnythesnake12"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":91,"author":{"gitId":"johnnythesnake12"},"content":"        Name updatedName \u003d deleteTagDescriptor.getName().orElse(personToEdit.getName());","lastModifiedDate":"2023-10-15"},{"lineNumber":92,"author":{"gitId":"johnnythesnake12"},"content":"        Phone updatedPhone \u003d deleteTagDescriptor.getPhone().orElse(personToEdit.getPhone());","lastModifiedDate":"2023-10-15"},{"lineNumber":93,"author":{"gitId":"johnnythesnake12"},"content":"        Email updatedEmail \u003d deleteTagDescriptor.getEmail().orElse(personToEdit.getEmail());","lastModifiedDate":"2023-10-15"},{"lineNumber":94,"author":{"gitId":"johnnythesnake12"},"content":"        Address updatedAddress \u003d deleteTagDescriptor.getAddress().orElse(personToEdit.getAddress());","lastModifiedDate":"2023-10-15"},{"lineNumber":95,"author":{"gitId":"johnnythesnake12"},"content":"        Set\u003cTag\u003e updatedTags \u003d deleteTagDescriptor.getTags().orElse(personToEdit.getTags());","lastModifiedDate":"2023-10-15"},{"lineNumber":96,"author":{"gitId":"zhanyang01"},"content":"        PreferredContact updatePreferredContact \u003d deleteTagDescriptor.getPreferredContact()","lastModifiedDate":"2023-10-17"},{"lineNumber":97,"author":{"gitId":"zhanyang01"},"content":"                .orElse(personToEdit.getPreferredContact());","lastModifiedDate":"2023-10-17"},{"lineNumber":98,"author":{"gitId":"johnnythesnake12"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":99,"author":{"gitId":"zhanyang01"},"content":"        return new Person(updatedName, updatedPhone, updatedEmail, updatedAddress, updatedTags, updatePreferredContact);","lastModifiedDate":"2023-10-17"},{"lineNumber":100,"author":{"gitId":"johnnythesnake12"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":101,"author":{"gitId":"johnnythesnake12"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":102,"author":{"gitId":"zhanyang01"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":103,"author":{"gitId":"zhanyang01"},"content":"     * Compares this with another object.","lastModifiedDate":"2023-10-17"},{"lineNumber":104,"author":{"gitId":"zhanyang01"},"content":"     * @param other object to compare","lastModifiedDate":"2023-10-17"},{"lineNumber":105,"author":{"gitId":"zhanyang01"},"content":"     * @return true if the other object is a DeleteTagCommand with the same index and descriptor","lastModifiedDate":"2023-10-17"},{"lineNumber":106,"author":{"gitId":"zhanyang01"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":107,"author":{"gitId":"johnnythesnake12"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-15"},{"lineNumber":108,"author":{"gitId":"johnnythesnake12"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-15"},{"lineNumber":109,"author":{"gitId":"johnnythesnake12"},"content":"            return true;","lastModifiedDate":"2023-10-15"},{"lineNumber":110,"author":{"gitId":"johnnythesnake12"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":111,"author":{"gitId":"johnnythesnake12"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":112,"author":{"gitId":"johnnythesnake12"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-15"},{"lineNumber":113,"author":{"gitId":"johnnythesnake12"},"content":"        if (!(other instanceof DeleteTagCommand)) {","lastModifiedDate":"2023-10-15"},{"lineNumber":114,"author":{"gitId":"johnnythesnake12"},"content":"            return false;","lastModifiedDate":"2023-10-15"},{"lineNumber":115,"author":{"gitId":"johnnythesnake12"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":116,"author":{"gitId":"johnnythesnake12"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":117,"author":{"gitId":"johnnythesnake12"},"content":"        DeleteTagCommand otherDeleteTagCommand \u003d (DeleteTagCommand) other;","lastModifiedDate":"2023-10-15"},{"lineNumber":118,"author":{"gitId":"johnnythesnake12"},"content":"        return index.equals(otherDeleteTagCommand.index)","lastModifiedDate":"2023-10-15"},{"lineNumber":119,"author":{"gitId":"johnnythesnake12"},"content":"                \u0026\u0026 deleteTagDescriptor.equals(otherDeleteTagCommand.deleteTagDescriptor);","lastModifiedDate":"2023-10-15"},{"lineNumber":120,"author":{"gitId":"johnnythesnake12"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":121,"author":{"gitId":"johnnythesnake12"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":122,"author":{"gitId":"johnnythesnake12"},"content":"    @Override","lastModifiedDate":"2023-10-15"},{"lineNumber":123,"author":{"gitId":"johnnythesnake12"},"content":"    public String toString() {","lastModifiedDate":"2023-10-15"},{"lineNumber":124,"author":{"gitId":"johnnythesnake12"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-10-15"},{"lineNumber":125,"author":{"gitId":"johnnythesnake12"},"content":"                .add(\"index\", index)","lastModifiedDate":"2023-10-15"},{"lineNumber":126,"author":{"gitId":"johnnythesnake12"},"content":"                .toString();","lastModifiedDate":"2023-10-15"},{"lineNumber":127,"author":{"gitId":"johnnythesnake12"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":128,"author":{"gitId":"johnnythesnake12"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":129,"author":{"gitId":"johnnythesnake12"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":130,"author":{"gitId":"zhanyang01"},"content":"     * Stores the details to delete the tag with. Deleted tag will be deleted from","lastModifiedDate":"2023-10-17"},{"lineNumber":131,"author":{"gitId":"zhanyang01"},"content":"     * current list of tag.","lastModifiedDate":"2023-10-17"},{"lineNumber":132,"author":{"gitId":"johnnythesnake12"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":133,"author":{"gitId":"johnnythesnake12"},"content":"    public static class DeleteTagDescriptor {","lastModifiedDate":"2023-10-15"},{"lineNumber":134,"author":{"gitId":"johnnythesnake12"},"content":"        private Name name;","lastModifiedDate":"2023-10-15"},{"lineNumber":135,"author":{"gitId":"johnnythesnake12"},"content":"        private Phone phone;","lastModifiedDate":"2023-10-15"},{"lineNumber":136,"author":{"gitId":"johnnythesnake12"},"content":"        private Email email;","lastModifiedDate":"2023-10-15"},{"lineNumber":137,"author":{"gitId":"johnnythesnake12"},"content":"        private Address address;","lastModifiedDate":"2023-10-15"},{"lineNumber":138,"author":{"gitId":"johnnythesnake12"},"content":"        private Set\u003cTag\u003e tags;","lastModifiedDate":"2023-10-15"},{"lineNumber":139,"author":{"gitId":"zhanyang01"},"content":"        private PreferredContact preferredContact;","lastModifiedDate":"2023-10-17"},{"lineNumber":140,"author":{"gitId":"johnnythesnake12"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":141,"author":{"gitId":"zhanyang01"},"content":"        /**","lastModifiedDate":"2023-10-17"},{"lineNumber":142,"author":{"gitId":"zhanyang01"},"content":"         * Creates an empty {@code DeleteTagDescriptor}.","lastModifiedDate":"2023-10-17"},{"lineNumber":143,"author":{"gitId":"zhanyang01"},"content":"         */","lastModifiedDate":"2023-10-17"},{"lineNumber":144,"author":{"gitId":"zhanyang01"},"content":"        public DeleteTagDescriptor() {","lastModifiedDate":"2023-10-17"},{"lineNumber":145,"author":{"gitId":"zhanyang01"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":146,"author":{"gitId":"johnnythesnake12"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":147,"author":{"gitId":"zhanyang01"},"content":"        /**","lastModifiedDate":"2023-10-17"},{"lineNumber":148,"author":{"gitId":"zhanyang01"},"content":"         * Copy constructor.s","lastModifiedDate":"2023-10-17"},{"lineNumber":149,"author":{"gitId":"zhanyang01"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2023-10-17"},{"lineNumber":150,"author":{"gitId":"zhanyang01"},"content":"         * @param toCopy DeleteTagDescriptor to copy","lastModifiedDate":"2023-10-17"},{"lineNumber":151,"author":{"gitId":"zhanyang01"},"content":"         */","lastModifiedDate":"2023-10-17"},{"lineNumber":152,"author":{"gitId":"johnnythesnake12"},"content":"        public DeleteTagDescriptor(DeleteTagDescriptor toCopy) {","lastModifiedDate":"2023-10-15"},{"lineNumber":153,"author":{"gitId":"johnnythesnake12"},"content":"            setName(toCopy.name);","lastModifiedDate":"2023-10-15"},{"lineNumber":154,"author":{"gitId":"johnnythesnake12"},"content":"            setPhone(toCopy.phone);","lastModifiedDate":"2023-10-15"},{"lineNumber":155,"author":{"gitId":"johnnythesnake12"},"content":"            setEmail(toCopy.email);","lastModifiedDate":"2023-10-15"},{"lineNumber":156,"author":{"gitId":"johnnythesnake12"},"content":"            setAddress(toCopy.address);","lastModifiedDate":"2023-10-15"},{"lineNumber":157,"author":{"gitId":"johnnythesnake12"},"content":"            setTags(toCopy.tags);","lastModifiedDate":"2023-10-15"},{"lineNumber":158,"author":{"gitId":"zhanyang01"},"content":"            setPreferredContact(toCopy.preferredContact);","lastModifiedDate":"2023-10-17"},{"lineNumber":159,"author":{"gitId":"johnnythesnake12"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":160,"author":{"gitId":"johnnythesnake12"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":161,"author":{"gitId":"johnnythesnake12"},"content":"        public void setName(Name name) {","lastModifiedDate":"2023-10-15"},{"lineNumber":162,"author":{"gitId":"johnnythesnake12"},"content":"            this.name \u003d name;","lastModifiedDate":"2023-10-15"},{"lineNumber":163,"author":{"gitId":"johnnythesnake12"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":164,"author":{"gitId":"johnnythesnake12"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":165,"author":{"gitId":"johnnythesnake12"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2023-10-15"},{"lineNumber":166,"author":{"gitId":"johnnythesnake12"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2023-10-15"},{"lineNumber":167,"author":{"gitId":"johnnythesnake12"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":168,"author":{"gitId":"johnnythesnake12"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":169,"author":{"gitId":"johnnythesnake12"},"content":"        public void setPhone(Phone phone) {","lastModifiedDate":"2023-10-15"},{"lineNumber":170,"author":{"gitId":"johnnythesnake12"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2023-10-15"},{"lineNumber":171,"author":{"gitId":"johnnythesnake12"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":172,"author":{"gitId":"johnnythesnake12"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":173,"author":{"gitId":"johnnythesnake12"},"content":"        public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2023-10-15"},{"lineNumber":174,"author":{"gitId":"johnnythesnake12"},"content":"            return Optional.ofNullable(phone);","lastModifiedDate":"2023-10-15"},{"lineNumber":175,"author":{"gitId":"johnnythesnake12"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":176,"author":{"gitId":"johnnythesnake12"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":177,"author":{"gitId":"johnnythesnake12"},"content":"        public void setEmail(Email email) {","lastModifiedDate":"2023-10-15"},{"lineNumber":178,"author":{"gitId":"johnnythesnake12"},"content":"            this.email \u003d email;","lastModifiedDate":"2023-10-15"},{"lineNumber":179,"author":{"gitId":"johnnythesnake12"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":180,"author":{"gitId":"johnnythesnake12"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":181,"author":{"gitId":"johnnythesnake12"},"content":"        public Optional\u003cEmail\u003e getEmail() {","lastModifiedDate":"2023-10-15"},{"lineNumber":182,"author":{"gitId":"johnnythesnake12"},"content":"            return Optional.ofNullable(email);","lastModifiedDate":"2023-10-15"},{"lineNumber":183,"author":{"gitId":"johnnythesnake12"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":184,"author":{"gitId":"johnnythesnake12"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":185,"author":{"gitId":"johnnythesnake12"},"content":"        public void setAddress(Address address) {","lastModifiedDate":"2023-10-15"},{"lineNumber":186,"author":{"gitId":"johnnythesnake12"},"content":"            this.address \u003d address;","lastModifiedDate":"2023-10-15"},{"lineNumber":187,"author":{"gitId":"johnnythesnake12"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":188,"author":{"gitId":"johnnythesnake12"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":189,"author":{"gitId":"johnnythesnake12"},"content":"        public Optional\u003cAddress\u003e getAddress() {","lastModifiedDate":"2023-10-15"},{"lineNumber":190,"author":{"gitId":"johnnythesnake12"},"content":"            return Optional.ofNullable(address);","lastModifiedDate":"2023-10-15"},{"lineNumber":191,"author":{"gitId":"johnnythesnake12"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":192,"author":{"gitId":"johnnythesnake12"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":193,"author":{"gitId":"johnnythesnake12"},"content":"        /**","lastModifiedDate":"2023-10-15"},{"lineNumber":194,"author":{"gitId":"johnnythesnake12"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2023-10-15"},{"lineNumber":195,"author":{"gitId":"johnnythesnake12"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2023-10-15"},{"lineNumber":196,"author":{"gitId":"johnnythesnake12"},"content":"         */","lastModifiedDate":"2023-10-15"},{"lineNumber":197,"author":{"gitId":"johnnythesnake12"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2023-10-15"},{"lineNumber":198,"author":{"gitId":"johnnythesnake12"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2023-10-15"},{"lineNumber":199,"author":{"gitId":"johnnythesnake12"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":200,"author":{"gitId":"johnnythesnake12"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":201,"author":{"gitId":"johnnythesnake12"},"content":"        /**","lastModifiedDate":"2023-10-15"},{"lineNumber":202,"author":{"gitId":"zhanyang01"},"content":"         * Returns an unmodifiable tag set, which throws","lastModifiedDate":"2023-10-17"},{"lineNumber":203,"author":{"gitId":"zhanyang01"},"content":"         * {@code UnsupportedOperationException}","lastModifiedDate":"2023-10-17"},{"lineNumber":204,"author":{"gitId":"johnnythesnake12"},"content":"         * if modification is attempted.","lastModifiedDate":"2023-10-15"},{"lineNumber":205,"author":{"gitId":"johnnythesnake12"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2023-10-15"},{"lineNumber":206,"author":{"gitId":"johnnythesnake12"},"content":"         */","lastModifiedDate":"2023-10-15"},{"lineNumber":207,"author":{"gitId":"johnnythesnake12"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2023-10-15"},{"lineNumber":208,"author":{"gitId":"johnnythesnake12"},"content":"            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2023-10-15"},{"lineNumber":209,"author":{"gitId":"johnnythesnake12"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":210,"author":{"gitId":"johnnythesnake12"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":211,"author":{"gitId":"zhanyang01"},"content":"        /**","lastModifiedDate":"2023-10-17"},{"lineNumber":212,"author":{"gitId":"zhanyang01"},"content":"         * Sets {@code preferredContact} to this object\u0027s {@code preferredContact}.","lastModifiedDate":"2023-10-17"},{"lineNumber":213,"author":{"gitId":"zhanyang01"},"content":"         */","lastModifiedDate":"2023-10-17"},{"lineNumber":214,"author":{"gitId":"zhanyang01"},"content":"        public void setPreferredContact(PreferredContact preferredContact) {","lastModifiedDate":"2023-10-17"},{"lineNumber":215,"author":{"gitId":"zhanyang01"},"content":"            this.preferredContact \u003d preferredContact;","lastModifiedDate":"2023-10-17"},{"lineNumber":216,"author":{"gitId":"zhanyang01"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":217,"author":{"gitId":"zhanyang01"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":218,"author":{"gitId":"zhanyang01"},"content":"        /**","lastModifiedDate":"2023-10-17"},{"lineNumber":219,"author":{"gitId":"zhanyang01"},"content":"         * Returns an optional preferred contact method of a person","lastModifiedDate":"2023-10-17"},{"lineNumber":220,"author":{"gitId":"zhanyang01"},"content":"         */","lastModifiedDate":"2023-10-17"},{"lineNumber":221,"author":{"gitId":"zhanyang01"},"content":"        public Optional\u003cPreferredContact\u003e getPreferredContact() {","lastModifiedDate":"2023-10-17"},{"lineNumber":222,"author":{"gitId":"zhanyang01"},"content":"            return Optional.ofNullable(preferredContact);","lastModifiedDate":"2023-10-17"},{"lineNumber":223,"author":{"gitId":"zhanyang01"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":224,"author":{"gitId":"johnnythesnake12"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":225,"author":{"gitId":"johnnythesnake12"},"content":"        @Override","lastModifiedDate":"2023-10-15"},{"lineNumber":226,"author":{"gitId":"johnnythesnake12"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2023-10-15"},{"lineNumber":227,"author":{"gitId":"johnnythesnake12"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-15"},{"lineNumber":228,"author":{"gitId":"johnnythesnake12"},"content":"                return true;","lastModifiedDate":"2023-10-15"},{"lineNumber":229,"author":{"gitId":"johnnythesnake12"},"content":"            }","lastModifiedDate":"2023-10-15"},{"lineNumber":230,"author":{"gitId":"johnnythesnake12"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":231,"author":{"gitId":"johnnythesnake12"},"content":"            // instanceof handles nulls","lastModifiedDate":"2023-10-15"},{"lineNumber":232,"author":{"gitId":"johnnythesnake12"},"content":"            if (!(other instanceof DeleteTagDescriptor)) {","lastModifiedDate":"2023-10-15"},{"lineNumber":233,"author":{"gitId":"johnnythesnake12"},"content":"                return false;","lastModifiedDate":"2023-10-15"},{"lineNumber":234,"author":{"gitId":"johnnythesnake12"},"content":"            }","lastModifiedDate":"2023-10-15"},{"lineNumber":235,"author":{"gitId":"johnnythesnake12"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":236,"author":{"gitId":"johnnythesnake12"},"content":"            DeleteTagDescriptor otherDeleteTagDescriptor \u003d (DeleteTagDescriptor) other;","lastModifiedDate":"2023-10-15"},{"lineNumber":237,"author":{"gitId":"johnnythesnake12"},"content":"            return Objects.equals(name, otherDeleteTagDescriptor.name)","lastModifiedDate":"2023-10-15"},{"lineNumber":238,"author":{"gitId":"johnnythesnake12"},"content":"                    \u0026\u0026 Objects.equals(phone, otherDeleteTagDescriptor.phone)","lastModifiedDate":"2023-10-15"},{"lineNumber":239,"author":{"gitId":"johnnythesnake12"},"content":"                    \u0026\u0026 Objects.equals(email, otherDeleteTagDescriptor.email)","lastModifiedDate":"2023-10-15"},{"lineNumber":240,"author":{"gitId":"johnnythesnake12"},"content":"                    \u0026\u0026 Objects.equals(address, otherDeleteTagDescriptor.address)","lastModifiedDate":"2023-10-15"},{"lineNumber":241,"author":{"gitId":"johnnythesnake12"},"content":"                    \u0026\u0026 Objects.equals(tags, otherDeleteTagDescriptor.tags);","lastModifiedDate":"2023-10-15"},{"lineNumber":242,"author":{"gitId":"johnnythesnake12"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":243,"author":{"gitId":"johnnythesnake12"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":244,"author":{"gitId":"johnnythesnake12"},"content":"        @Override","lastModifiedDate":"2023-10-15"},{"lineNumber":245,"author":{"gitId":"johnnythesnake12"},"content":"        public String toString() {","lastModifiedDate":"2023-10-15"},{"lineNumber":246,"author":{"gitId":"johnnythesnake12"},"content":"            return new ToStringBuilder(this)","lastModifiedDate":"2023-10-15"},{"lineNumber":247,"author":{"gitId":"johnnythesnake12"},"content":"                    .add(\"name\", name)","lastModifiedDate":"2023-10-15"},{"lineNumber":248,"author":{"gitId":"johnnythesnake12"},"content":"                    .add(\"phone\", phone)","lastModifiedDate":"2023-10-15"},{"lineNumber":249,"author":{"gitId":"johnnythesnake12"},"content":"                    .add(\"email\", email)","lastModifiedDate":"2023-10-15"},{"lineNumber":250,"author":{"gitId":"johnnythesnake12"},"content":"                    .add(\"address\", address)","lastModifiedDate":"2023-10-15"},{"lineNumber":251,"author":{"gitId":"johnnythesnake12"},"content":"                    .add(\"tags\", tags)","lastModifiedDate":"2023-10-15"},{"lineNumber":252,"author":{"gitId":"johnnythesnake12"},"content":"                    .toString();","lastModifiedDate":"2023-10-15"},{"lineNumber":253,"author":{"gitId":"johnnythesnake12"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":254,"author":{"gitId":"johnnythesnake12"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":255,"author":{"gitId":"johnnythesnake12"},"content":"}","lastModifiedDate":"2023-10-15"}],"authorContributionMap":{"johnnythesnake12":211,"zhanyang01":44}},{"path":"src/main/java/seedu/address/logic/commands/EditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-12-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-01-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-01-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2023-07-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-12-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2016-12-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2016-12-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2016-12-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2016-12-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2016-12-26"},{"lineNumber":29,"author":{"gitId":"zhanyang01"},"content":"import seedu.address.model.person.PreferredContact;","lastModifiedDate":"2023-10-17"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":" * Edits the details of an existing person in the address book.","lastModifiedDate":"2016-12-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"public class EditCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2016-12-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the person identified \"","lastModifiedDate":"2016-12-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            + \"by the index number used in the displayed person list. \"","lastModifiedDate":"2018-04-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2016-12-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2017-06-06"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2017-06-06"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_ADDRESS + \"ADDRESS] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":47,"author":{"gitId":"zhanyang01"},"content":"            + \"[\" + PREFIX_TAG + \"TAG] \"","lastModifiedDate":"2023-10-17"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"91234567 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johndoe@example.com\";","lastModifiedDate":"2017-05-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_EDIT_PERSON_SUCCESS \u003d \"Edited Person: %1$s\";","lastModifiedDate":"2016-12-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    private final EditPersonDescriptor editPersonDescriptor;","lastModifiedDate":"2016-12-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * @param index                of the person in the filtered person list to edit","lastModifiedDate":"2017-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * @param editPersonDescriptor details to edit the person with","lastModifiedDate":"2016-12-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public EditCommand(Index index, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2017-05-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        requireNonNull(index);","lastModifiedDate":"2017-05-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        requireNonNull(editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2017-05-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        this.editPersonDescriptor \u003d new EditPersonDescriptor(editPersonDescriptor);","lastModifiedDate":"2016-12-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d createEditedPerson(personToEdit, editPersonDescriptor);","lastModifiedDate":"2018-04-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        if (!personToEdit.isSamePerson(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson)));","lastModifiedDate":"2019-02-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToEdit}","lastModifiedDate":"2016-12-26"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * edited with {@code editPersonDescriptor}.","lastModifiedDate":"2016-12-26"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private static Person createEditedPerson(Person personToEdit, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2018-01-10"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assert personToEdit !\u003d null;","lastModifiedDate":"2016-12-26"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        Name updatedName \u003d editPersonDescriptor.getName().orElse(personToEdit.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        Phone updatedPhone \u003d editPersonDescriptor.getPhone().orElse(personToEdit.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        Email updatedEmail \u003d editPersonDescriptor.getEmail().orElse(personToEdit.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        Address updatedAddress \u003d editPersonDescriptor.getAddress().orElse(personToEdit.getAddress());","lastModifiedDate":"2017-06-21"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e updatedTags \u003d editPersonDescriptor.getTags().orElse(personToEdit.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":104,"author":{"gitId":"zhanyang01"},"content":"        PreferredContact updatedPreferredContact \u003d personToEdit.getPreferredContact();","lastModifiedDate":"2023-10-17"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":106,"author":{"gitId":"zhanyang01"},"content":"        return new Person(updatedName, updatedPhone, updatedEmail, updatedAddress, updatedTags,","lastModifiedDate":"2023-10-17"},{"lineNumber":107,"author":{"gitId":"zhanyang01"},"content":"                updatedPreferredContact);","lastModifiedDate":"2023-10-17"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        if (!(other instanceof EditCommand)) {","lastModifiedDate":"2017-05-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        EditCommand otherEditCommand \u003d (EditCommand) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        return index.equals(otherEditCommand.index)","lastModifiedDate":"2023-07-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"                \u0026\u0026 editPersonDescriptor.equals(otherEditCommand.editPersonDescriptor);","lastModifiedDate":"2023-07-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"                .add(\"index\", index)","lastModifiedDate":"2019-02-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"                .add(\"editPersonDescriptor\", editPersonDescriptor)","lastModifiedDate":"2019-02-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":135,"author":{"gitId":"zhanyang01"},"content":"     * Stores the details to edit the person with. Each non-empty field value will","lastModifiedDate":"2023-10-17"},{"lineNumber":136,"author":{"gitId":"zhanyang01"},"content":"     * replace the","lastModifiedDate":"2023-10-17"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * corresponding field value of the person.","lastModifiedDate":"2016-12-26"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    public static class EditPersonDescriptor {","lastModifiedDate":"2016-12-26"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        private Name name;","lastModifiedDate":"2017-06-21"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        private Phone phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        private Email email;","lastModifiedDate":"2017-06-21"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        private Address address;","lastModifiedDate":"2017-06-21"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-06-21"},{"lineNumber":145,"author":{"gitId":"zhanyang01"},"content":"        private PreferredContact preferredContact;","lastModifiedDate":"2023-10-17"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":147,"author":{"gitId":"zhanyang01"},"content":"        public EditPersonDescriptor() {","lastModifiedDate":"2023-10-17"},{"lineNumber":148,"author":{"gitId":"zhanyang01"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":151,"author":{"gitId":"-"},"content":"         * Copy constructor.","lastModifiedDate":"2018-01-11"},{"lineNumber":152,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":153,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor(EditPersonDescriptor toCopy) {","lastModifiedDate":"2016-12-26"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            setName(toCopy.name);","lastModifiedDate":"2018-01-15"},{"lineNumber":156,"author":{"gitId":"-"},"content":"            setPhone(toCopy.phone);","lastModifiedDate":"2018-01-15"},{"lineNumber":157,"author":{"gitId":"-"},"content":"            setEmail(toCopy.email);","lastModifiedDate":"2018-01-15"},{"lineNumber":158,"author":{"gitId":"-"},"content":"            setAddress(toCopy.address);","lastModifiedDate":"2018-01-15"},{"lineNumber":159,"author":{"gitId":"-"},"content":"            setTags(toCopy.tags);","lastModifiedDate":"2018-01-11"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-12-26"},{"lineNumber":163,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2016-12-26"},{"lineNumber":164,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-26"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2016-12-26"},{"lineNumber":166,"author":{"gitId":"-"},"content":"            return CollectionUtil.isAnyNonNull(name, phone, email, address, tags);","lastModifiedDate":"2018-08-14"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        public void setName(Name name) {","lastModifiedDate":"2017-06-21"},{"lineNumber":170,"author":{"gitId":"-"},"content":"            this.name \u003d name;","lastModifiedDate":"2017-06-21"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2016-12-26"},{"lineNumber":174,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2017-06-21"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        public void setPhone(Phone phone) {","lastModifiedDate":"2017-06-21"},{"lineNumber":178,"author":{"gitId":"-"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2016-12-26"},{"lineNumber":182,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(phone);","lastModifiedDate":"2017-06-21"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        public void setEmail(Email email) {","lastModifiedDate":"2017-06-21"},{"lineNumber":186,"author":{"gitId":"-"},"content":"            this.email \u003d email;","lastModifiedDate":"2017-06-21"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        public Optional\u003cEmail\u003e getEmail() {","lastModifiedDate":"2016-12-26"},{"lineNumber":190,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(email);","lastModifiedDate":"2017-06-21"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        public void setAddress(Address address) {","lastModifiedDate":"2017-06-21"},{"lineNumber":194,"author":{"gitId":"-"},"content":"            this.address \u003d address;","lastModifiedDate":"2017-06-21"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        public Optional\u003cAddress\u003e getAddress() {","lastModifiedDate":"2016-12-26"},{"lineNumber":198,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(address);","lastModifiedDate":"2017-06-21"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":202,"author":{"gitId":"-"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2018-01-11"},{"lineNumber":203,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":204,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2017-06-21"},{"lineNumber":206,"author":{"gitId":"-"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2018-01-11"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":210,"author":{"gitId":"zhanyang01"},"content":"         * Returns an unmodifiable tag set, which throws","lastModifiedDate":"2023-10-17"},{"lineNumber":211,"author":{"gitId":"zhanyang01"},"content":"         * {@code UnsupportedOperationException}","lastModifiedDate":"2023-10-17"},{"lineNumber":212,"author":{"gitId":"-"},"content":"         * if modification is attempted.","lastModifiedDate":"2018-01-11"},{"lineNumber":213,"author":{"gitId":"-"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2018-01-11"},{"lineNumber":214,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":216,"author":{"gitId":"-"},"content":"            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2018-01-11"},{"lineNumber":217,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":219,"author":{"gitId":"aarontxz"},"content":"        public void setPreferredContact(PreferredContact preferredContact) {","lastModifiedDate":"2023-10-18"},{"lineNumber":220,"author":{"gitId":"aarontxz"},"content":"            this.preferredContact \u003d preferredContact;","lastModifiedDate":"2023-10-18"},{"lineNumber":221,"author":{"gitId":"aarontxz"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":222,"author":{"gitId":"aarontxz"},"content":"        public Optional\u003cPreferredContact\u003e getPreferredContact() {","lastModifiedDate":"2023-10-18"},{"lineNumber":223,"author":{"gitId":"aarontxz"},"content":"            return Optional.ofNullable(preferredContact);","lastModifiedDate":"2023-10-18"},{"lineNumber":224,"author":{"gitId":"aarontxz"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":225,"author":{"gitId":"aarontxz"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":226,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-05"},{"lineNumber":227,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2017-05-05"},{"lineNumber":228,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-05"},{"lineNumber":229,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2017-05-05"},{"lineNumber":230,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":232,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2017-05-05"},{"lineNumber":233,"author":{"gitId":"-"},"content":"            if (!(other instanceof EditPersonDescriptor)) {","lastModifiedDate":"2017-05-05"},{"lineNumber":234,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2017-05-05"},{"lineNumber":235,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":237,"author":{"gitId":"-"},"content":"            EditPersonDescriptor otherEditPersonDescriptor \u003d (EditPersonDescriptor) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":238,"author":{"gitId":"-"},"content":"            return Objects.equals(name, otherEditPersonDescriptor.name)","lastModifiedDate":"2023-07-13"},{"lineNumber":239,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(phone, otherEditPersonDescriptor.phone)","lastModifiedDate":"2023-07-13"},{"lineNumber":240,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(email, otherEditPersonDescriptor.email)","lastModifiedDate":"2023-07-13"},{"lineNumber":241,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(address, otherEditPersonDescriptor.address)","lastModifiedDate":"2023-07-13"},{"lineNumber":242,"author":{"gitId":"zhanyang01"},"content":"                    \u0026\u0026 Objects.equals(tags, otherEditPersonDescriptor.tags)","lastModifiedDate":"2023-10-17"},{"lineNumber":243,"author":{"gitId":"zhanyang01"},"content":"                    \u0026\u0026 Objects.equals(preferredContact, otherEditPersonDescriptor.preferredContact);","lastModifiedDate":"2023-10-17"},{"lineNumber":244,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-05"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"        public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"            return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"                    .add(\"name\", name)","lastModifiedDate":"2019-02-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"                    .add(\"phone\", phone)","lastModifiedDate":"2019-02-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"                    .add(\"email\", email)","lastModifiedDate":"2019-02-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"                    .add(\"address\", address)","lastModifiedDate":"2019-02-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"                    .add(\"tags\", tags)","lastModifiedDate":"2019-02-23"},{"lineNumber":254,"author":{"gitId":"zhanyang01"},"content":"                    .add(\"preferredContact\", preferredContact)","lastModifiedDate":"2023-10-17"},{"lineNumber":255,"author":{"gitId":"-"},"content":"                    .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2019-02-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":258,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26"}],"authorContributionMap":{"aarontxz":7,"zhanyang01":15,"-":236}},{"path":"src/main/java/seedu/address/logic/commands/FileCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"aarontxz"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"aarontxz"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"aarontxz"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"aarontxz"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"aarontxz"},"content":"import java.awt.Desktop;","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"aarontxz"},"content":"import java.io.File;","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"aarontxz"},"content":"import java.nio.file.Files;","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"aarontxz"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"aarontxz"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"aarontxz"},"content":"import java.util.List;","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"aarontxz"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"aarontxz"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"aarontxz"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"aarontxz"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"aarontxz"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"aarontxz"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"aarontxz"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"aarontxz"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"aarontxz"},"content":"/**","lastModifiedDate":"2023-10-12"},{"lineNumber":20,"author":{"gitId":"zhanyang01"},"content":" * Create/Opens the folder of a person identified using it\u0027s displayed index","lastModifiedDate":"2023-10-15"},{"lineNumber":21,"author":{"gitId":"zhanyang01"},"content":" * from the address book.","lastModifiedDate":"2023-10-15"},{"lineNumber":22,"author":{"gitId":"aarontxz"},"content":" */","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"aarontxz"},"content":"public class FileCommand extends Command {","lastModifiedDate":"2023-10-12"},{"lineNumber":24,"author":{"gitId":"aarontxz"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":25,"author":{"gitId":"aarontxz"},"content":"    public static final String COMMAND_WORD \u003d \"file\";","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"aarontxz"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":27,"author":{"gitId":"aarontxz"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2023-10-12"},{"lineNumber":28,"author":{"gitId":"aarontxz"},"content":"            + \": Opens a folder for the person identified by the index number used in the displayed person list.\\n\"","lastModifiedDate":"2023-10-12"},{"lineNumber":29,"author":{"gitId":"aarontxz"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2023-10-12"},{"lineNumber":30,"author":{"gitId":"aarontxz"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2023-10-12"},{"lineNumber":31,"author":{"gitId":"aarontxz"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":32,"author":{"gitId":"aarontxz"},"content":"    public static final String OPEN_FILE_PERSON_SUCCESS \u003d \"Created/Opened a folder for Person: %1$s\";","lastModifiedDate":"2023-10-12"},{"lineNumber":33,"author":{"gitId":"aarontxz"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":34,"author":{"gitId":"aarontxz"},"content":"    private final Index targetIndex;","lastModifiedDate":"2023-10-12"},{"lineNumber":35,"author":{"gitId":"aarontxz"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":36,"author":{"gitId":"aarontxz"},"content":"    public FileCommand(Index targetIndex) {","lastModifiedDate":"2023-10-12"},{"lineNumber":37,"author":{"gitId":"aarontxz"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2023-10-12"},{"lineNumber":38,"author":{"gitId":"aarontxz"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":39,"author":{"gitId":"aarontxz"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":40,"author":{"gitId":"aarontxz"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":41,"author":{"gitId":"aarontxz"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-12"},{"lineNumber":42,"author":{"gitId":"aarontxz"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-12"},{"lineNumber":43,"author":{"gitId":"aarontxz"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2023-10-12"},{"lineNumber":44,"author":{"gitId":"aarontxz"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":45,"author":{"gitId":"aarontxz"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-10-12"},{"lineNumber":46,"author":{"gitId":"aarontxz"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-12"},{"lineNumber":47,"author":{"gitId":"aarontxz"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":48,"author":{"gitId":"aarontxz"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":49,"author":{"gitId":"aarontxz"},"content":"        Person personToFile \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2023-10-12"},{"lineNumber":50,"author":{"gitId":"aarontxz"},"content":"        String name \u003d personToFile.getName().toString();","lastModifiedDate":"2023-10-12"},{"lineNumber":51,"author":{"gitId":"aarontxz"},"content":"        int id \u003d personToFile.hashCode();","lastModifiedDate":"2023-10-12"},{"lineNumber":52,"author":{"gitId":"aarontxz"},"content":"        String folderName \u003d name + \" \" + id;","lastModifiedDate":"2023-10-13"},{"lineNumber":53,"author":{"gitId":"aarontxz"},"content":"        createFolder(folderName);","lastModifiedDate":"2023-10-12"},{"lineNumber":54,"author":{"gitId":"aarontxz"},"content":"        return new CommandResult(String.format(OPEN_FILE_PERSON_SUCCESS, Messages.format(personToFile)));","lastModifiedDate":"2023-10-12"},{"lineNumber":55,"author":{"gitId":"aarontxz"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":56,"author":{"gitId":"aarontxz"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":57,"author":{"gitId":"aarontxz"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":58,"author":{"gitId":"aarontxz"},"content":"     * Creates a folder with the name ClientFiles if it does not exist,","lastModifiedDate":"2023-10-12"},{"lineNumber":59,"author":{"gitId":"zhanyang01"},"content":"     * creates a folder within that folder named {@code folderName} if it does not","lastModifiedDate":"2023-10-15"},{"lineNumber":60,"author":{"gitId":"zhanyang01"},"content":"     * exist,","lastModifiedDate":"2023-10-15"},{"lineNumber":61,"author":{"gitId":"aarontxz"},"content":"     * then opens the folder.","lastModifiedDate":"2023-10-12"},{"lineNumber":62,"author":{"gitId":"aarontxz"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":63,"author":{"gitId":"aarontxz"},"content":"    public void createFolder(String folderName) {","lastModifiedDate":"2023-10-12"},{"lineNumber":64,"author":{"gitId":"aarontxz"},"content":"        try {","lastModifiedDate":"2023-10-12"},{"lineNumber":65,"author":{"gitId":"aarontxz"},"content":"            Path folder \u003d Paths.get(\"./ClientFiles/\");","lastModifiedDate":"2023-10-12"},{"lineNumber":66,"author":{"gitId":"aarontxz"},"content":"            if (!Files.exists(folder)) {","lastModifiedDate":"2023-10-12"},{"lineNumber":67,"author":{"gitId":"aarontxz"},"content":"                Files.createDirectory(folder);","lastModifiedDate":"2023-10-12"},{"lineNumber":68,"author":{"gitId":"aarontxz"},"content":"            }","lastModifiedDate":"2023-10-12"},{"lineNumber":69,"author":{"gitId":"aarontxz"},"content":"            Path storageFolder \u003d Paths.get(\"./ClientFiles/\" + folderName);","lastModifiedDate":"2023-10-12"},{"lineNumber":70,"author":{"gitId":"aarontxz"},"content":"            if (!Files.exists(storageFolder)) {","lastModifiedDate":"2023-10-12"},{"lineNumber":71,"author":{"gitId":"aarontxz"},"content":"                Files.createDirectory(storageFolder);","lastModifiedDate":"2023-10-12"},{"lineNumber":72,"author":{"gitId":"aarontxz"},"content":"            }","lastModifiedDate":"2023-10-12"},{"lineNumber":73,"author":{"gitId":"aarontxz"},"content":"            File file \u003d storageFolder.toFile();","lastModifiedDate":"2023-10-12"},{"lineNumber":74,"author":{"gitId":"zhanyang01"},"content":"            Desktop.getDesktop().open(file);","lastModifiedDate":"2023-10-15"},{"lineNumber":75,"author":{"gitId":"aarontxz"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-10-12"},{"lineNumber":76,"author":{"gitId":"aarontxz"},"content":"            System.out.println(\"an error occurred while creating folder: \" + e);","lastModifiedDate":"2023-10-13"},{"lineNumber":77,"author":{"gitId":"aarontxz"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":78,"author":{"gitId":"aarontxz"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":79,"author":{"gitId":"aarontxz"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":80,"author":{"gitId":"aarontxz"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":81,"author":{"gitId":"aarontxz"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-12"},{"lineNumber":82,"author":{"gitId":"aarontxz"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-12"},{"lineNumber":83,"author":{"gitId":"aarontxz"},"content":"            return true;","lastModifiedDate":"2023-10-12"},{"lineNumber":84,"author":{"gitId":"aarontxz"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":85,"author":{"gitId":"aarontxz"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":86,"author":{"gitId":"aarontxz"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-12"},{"lineNumber":87,"author":{"gitId":"aarontxz"},"content":"        if (!(other instanceof FileCommand)) {","lastModifiedDate":"2023-10-12"},{"lineNumber":88,"author":{"gitId":"aarontxz"},"content":"            return false;","lastModifiedDate":"2023-10-12"},{"lineNumber":89,"author":{"gitId":"aarontxz"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":90,"author":{"gitId":"aarontxz"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":91,"author":{"gitId":"aarontxz"},"content":"        FileCommand otherFileCommand \u003d (FileCommand) other;","lastModifiedDate":"2023-10-12"},{"lineNumber":92,"author":{"gitId":"aarontxz"},"content":"        return targetIndex.equals(otherFileCommand.targetIndex);","lastModifiedDate":"2023-10-12"},{"lineNumber":93,"author":{"gitId":"aarontxz"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":94,"author":{"gitId":"aarontxz"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":95,"author":{"gitId":"aarontxz"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":96,"author":{"gitId":"aarontxz"},"content":"    public String toString() {","lastModifiedDate":"2023-10-12"},{"lineNumber":97,"author":{"gitId":"aarontxz"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-10-12"},{"lineNumber":98,"author":{"gitId":"aarontxz"},"content":"                .add(\"targetIndex\", targetIndex)","lastModifiedDate":"2023-10-12"},{"lineNumber":99,"author":{"gitId":"aarontxz"},"content":"                .toString();","lastModifiedDate":"2023-10-12"},{"lineNumber":100,"author":{"gitId":"aarontxz"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":101,"author":{"gitId":"aarontxz"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"aarontxz":96,"zhanyang01":5}},{"path":"src/main/java/seedu/address/logic/commands/FilterCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LuahJunYang"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"LuahJunYang"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":3,"author":{"gitId":"LuahJunYang"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"LuahJunYang"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"LuahJunYang"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"LuahJunYang"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"LuahJunYang"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"LuahJunYang"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"LuahJunYang"},"content":"import seedu.address.model.person.FilterContainsKeywordsPredicate;","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"LuahJunYang"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"zhanyang01"},"content":"/**","lastModifiedDate":"2023-10-18"},{"lineNumber":12,"author":{"gitId":"zhanyang01"},"content":" * Filters the list of persons to show only persons with the target tag.","lastModifiedDate":"2023-10-18"},{"lineNumber":13,"author":{"gitId":"zhanyang01"},"content":" */","lastModifiedDate":"2023-10-18"},{"lineNumber":14,"author":{"gitId":"LuahJunYang"},"content":"public class FilterCommand extends Command {","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"LuahJunYang"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"LuahJunYang"},"content":"    public static final String COMMAND_WORD \u003d \"filter\";","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"LuahJunYang"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"LuahJunYang"},"content":"            + \": Filters for all the persons that have target tag being filtered. \\n\"","lastModifiedDate":"2023-10-13"},{"lineNumber":19,"author":{"gitId":"LuahJunYang"},"content":"            + \"Parameters: TAG (must be a valid tag from the predefined list) \\n\"","lastModifiedDate":"2023-10-13"},{"lineNumber":20,"author":{"gitId":"LuahJunYang"},"content":"            + \"Example: \" + COMMAND_WORD + \" friend\";","lastModifiedDate":"2023-10-13"},{"lineNumber":21,"author":{"gitId":"LuahJunYang"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":22,"author":{"gitId":"LuahJunYang"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Filtered for tags %s successfully\";","lastModifiedDate":"2023-10-16"},{"lineNumber":23,"author":{"gitId":"LuahJunYang"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":24,"author":{"gitId":"LuahJunYang"},"content":"    private final FilterContainsKeywordsPredicate predicate;","lastModifiedDate":"2023-10-17"},{"lineNumber":25,"author":{"gitId":"LuahJunYang"},"content":"    public FilterCommand(FilterContainsKeywordsPredicate predicate) {","lastModifiedDate":"2023-10-17"},{"lineNumber":26,"author":{"gitId":"LuahJunYang"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2023-10-17"},{"lineNumber":27,"author":{"gitId":"LuahJunYang"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":28,"author":{"gitId":"LuahJunYang"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":29,"author":{"gitId":"LuahJunYang"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-13"},{"lineNumber":30,"author":{"gitId":"LuahJunYang"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-13"},{"lineNumber":31,"author":{"gitId":"LuahJunYang"},"content":"        model.updateFilteredPersonList(predicate);","lastModifiedDate":"2023-10-17"},{"lineNumber":32,"author":{"gitId":"zhanyang01"},"content":"        return new CommandResult(","lastModifiedDate":"2023-10-18"},{"lineNumber":33,"author":{"gitId":"zhanyang01"},"content":"                String.format(","lastModifiedDate":"2023-10-18"},{"lineNumber":34,"author":{"gitId":"zhanyang01"},"content":"                        Messages.MESSAGE_PERSONS_LISTED_OVERVIEW,","lastModifiedDate":"2023-10-18"},{"lineNumber":35,"author":{"gitId":"zhanyang01"},"content":"                        model.getFilteredPersonList().size()));","lastModifiedDate":"2023-10-18"},{"lineNumber":36,"author":{"gitId":"LuahJunYang"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":37,"author":{"gitId":"LuahJunYang"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":38,"author":{"gitId":"LuahJunYang"},"content":"    @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":39,"author":{"gitId":"LuahJunYang"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-17"},{"lineNumber":40,"author":{"gitId":"LuahJunYang"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-17"},{"lineNumber":41,"author":{"gitId":"LuahJunYang"},"content":"            return true;","lastModifiedDate":"2023-10-17"},{"lineNumber":42,"author":{"gitId":"LuahJunYang"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":43,"author":{"gitId":"LuahJunYang"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":44,"author":{"gitId":"LuahJunYang"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-17"},{"lineNumber":45,"author":{"gitId":"LuahJunYang"},"content":"        if (!(other instanceof FilterCommand)) {","lastModifiedDate":"2023-10-17"},{"lineNumber":46,"author":{"gitId":"LuahJunYang"},"content":"            return false;","lastModifiedDate":"2023-10-17"},{"lineNumber":47,"author":{"gitId":"LuahJunYang"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":48,"author":{"gitId":"LuahJunYang"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":49,"author":{"gitId":"LuahJunYang"},"content":"        FilterCommand otherFilterCommand \u003d (FilterCommand) other;","lastModifiedDate":"2023-10-17"},{"lineNumber":50,"author":{"gitId":"LuahJunYang"},"content":"        return predicate.equals(otherFilterCommand.predicate);","lastModifiedDate":"2023-10-17"},{"lineNumber":51,"author":{"gitId":"LuahJunYang"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":52,"author":{"gitId":"LuahJunYang"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":53,"author":{"gitId":"LuahJunYang"},"content":"    @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":54,"author":{"gitId":"LuahJunYang"},"content":"    public String toString() {","lastModifiedDate":"2023-10-17"},{"lineNumber":55,"author":{"gitId":"LuahJunYang"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-10-17"},{"lineNumber":56,"author":{"gitId":"LuahJunYang"},"content":"                .add(\"predicate\", predicate)","lastModifiedDate":"2023-10-17"},{"lineNumber":57,"author":{"gitId":"LuahJunYang"},"content":"                .toString();","lastModifiedDate":"2023-10-17"},{"lineNumber":58,"author":{"gitId":"LuahJunYang"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":59,"author":{"gitId":"LuahJunYang"},"content":"}","lastModifiedDate":"2023-10-13"}],"authorContributionMap":{"LuahJunYang":52,"zhanyang01":7}},{"path":"src/main/java/seedu/address/logic/commands/PreferredContactCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zhanyang01"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":2,"author":{"gitId":"zhanyang01"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-17"},{"lineNumber":3,"author":{"gitId":"zhanyang01"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"zhanyang01"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"zhanyang01"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PREFERRED_CONTACT;","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"zhanyang01"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"zhanyang01"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"zhanyang01"},"content":"import java.util.List;","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"zhanyang01"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"zhanyang01"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"zhanyang01"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"zhanyang01"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"zhanyang01"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-17"},{"lineNumber":14,"author":{"gitId":"zhanyang01"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-17"},{"lineNumber":15,"author":{"gitId":"zhanyang01"},"content":"import seedu.address.model.person.PreferredContact;","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"zhanyang01"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"zhanyang01"},"content":"/**","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"zhanyang01"},"content":" * Adds the preferred contact method of the client to the address book.","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"zhanyang01"},"content":" */","lastModifiedDate":"2023-10-17"},{"lineNumber":20,"author":{"gitId":"zhanyang01"},"content":"public class PreferredContactCommand extends Command {","lastModifiedDate":"2023-10-17"},{"lineNumber":21,"author":{"gitId":"zhanyang01"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":22,"author":{"gitId":"zhanyang01"},"content":"    public static final String COMMAND_WORD \u003d \"preferredContact\";","lastModifiedDate":"2023-10-17"},{"lineNumber":23,"author":{"gitId":"zhanyang01"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":24,"author":{"gitId":"zhanyang01"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2023-10-17"},{"lineNumber":25,"author":{"gitId":"zhanyang01"},"content":"            + \": Show the preferred contact details of the person identified \"","lastModifiedDate":"2023-10-17"},{"lineNumber":26,"author":{"gitId":"zhanyang01"},"content":"            + \"by the index number used in the displayed person list. \"","lastModifiedDate":"2023-10-17"},{"lineNumber":27,"author":{"gitId":"zhanyang01"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2023-10-17"},{"lineNumber":28,"author":{"gitId":"zhanyang01"},"content":"            + \"[\" + PREFIX_PREFERRED_CONTACT + \"PREFERRED_CONTACT]...\\n\"","lastModifiedDate":"2023-10-17"},{"lineNumber":29,"author":{"gitId":"zhanyang01"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2023-10-17"},{"lineNumber":30,"author":{"gitId":"zhanyang01"},"content":"            + PREFIX_PREFERRED_CONTACT + \"phone\";","lastModifiedDate":"2023-10-17"},{"lineNumber":31,"author":{"gitId":"zhanyang01"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":32,"author":{"gitId":"zhanyang01"},"content":"    public static final String MESSAGE_PREFERREDCONTACT_PERSON_SUCCESS \u003d","lastModifiedDate":"2023-10-17"},{"lineNumber":33,"author":{"gitId":"zhanyang01"},"content":"            \"Preferred contact: %1$s\";","lastModifiedDate":"2023-10-17"},{"lineNumber":34,"author":{"gitId":"zhanyang01"},"content":"    public static final String MESSAGE_PREFERREDCONTACT_NOT_EDITED \u003d","lastModifiedDate":"2023-10-17"},{"lineNumber":35,"author":{"gitId":"zhanyang01"},"content":"            \"At least one field must be provided.\";","lastModifiedDate":"2023-10-17"},{"lineNumber":36,"author":{"gitId":"zhanyang01"},"content":"    public static final String MESSAGE_PREFERREDCONTACT_INVALID \u003d","lastModifiedDate":"2023-10-17"},{"lineNumber":37,"author":{"gitId":"zhanyang01"},"content":"            \"Preferred contact must be either email or phone, else it is blank.\";","lastModifiedDate":"2023-10-17"},{"lineNumber":38,"author":{"gitId":"zhanyang01"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":39,"author":{"gitId":"zhanyang01"},"content":"    private final Index index;","lastModifiedDate":"2023-10-17"},{"lineNumber":40,"author":{"gitId":"zhanyang01"},"content":"    private final PreferredContact preferredContact;","lastModifiedDate":"2023-10-17"},{"lineNumber":41,"author":{"gitId":"zhanyang01"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":42,"author":{"gitId":"zhanyang01"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":43,"author":{"gitId":"zhanyang01"},"content":"     * Represents a constructor of PreferredContactCommand.","lastModifiedDate":"2023-10-17"},{"lineNumber":44,"author":{"gitId":"zhanyang01"},"content":"     * @param index of the person in the filtered person list to edit","lastModifiedDate":"2023-10-17"},{"lineNumber":45,"author":{"gitId":"zhanyang01"},"content":"     * @param preferredContact details to edit the person with","lastModifiedDate":"2023-10-17"},{"lineNumber":46,"author":{"gitId":"zhanyang01"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":47,"author":{"gitId":"zhanyang01"},"content":"    public PreferredContactCommand(Index index, PreferredContact preferredContact) {","lastModifiedDate":"2023-10-17"},{"lineNumber":48,"author":{"gitId":"zhanyang01"},"content":"        requireAllNonNull(index, preferredContact);","lastModifiedDate":"2023-10-17"},{"lineNumber":49,"author":{"gitId":"zhanyang01"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":50,"author":{"gitId":"zhanyang01"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-10-17"},{"lineNumber":51,"author":{"gitId":"zhanyang01"},"content":"        this.preferredContact \u003d preferredContact;","lastModifiedDate":"2023-10-17"},{"lineNumber":52,"author":{"gitId":"zhanyang01"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":53,"author":{"gitId":"zhanyang01"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":54,"author":{"gitId":"zhanyang01"},"content":"    @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":55,"author":{"gitId":"zhanyang01"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-17"},{"lineNumber":56,"author":{"gitId":"zhanyang01"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2023-10-17"},{"lineNumber":57,"author":{"gitId":"zhanyang01"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":58,"author":{"gitId":"zhanyang01"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-10-17"},{"lineNumber":59,"author":{"gitId":"zhanyang01"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-17"},{"lineNumber":60,"author":{"gitId":"zhanyang01"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":61,"author":{"gitId":"zhanyang01"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":62,"author":{"gitId":"zhanyang01"},"content":"        Person preferredContactPerson \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2023-10-17"},{"lineNumber":63,"author":{"gitId":"zhanyang01"},"content":"        Person editedPreferredContactPerson \u003d new Person(preferredContactPerson.getName(),","lastModifiedDate":"2023-10-17"},{"lineNumber":64,"author":{"gitId":"zhanyang01"},"content":"                preferredContactPerson.getPhone(), preferredContactPerson.getEmail(),","lastModifiedDate":"2023-10-17"},{"lineNumber":65,"author":{"gitId":"zhanyang01"},"content":"                preferredContactPerson.getAddress(), preferredContactPerson.getTags(),","lastModifiedDate":"2023-10-17"},{"lineNumber":66,"author":{"gitId":"zhanyang01"},"content":"                preferredContact);","lastModifiedDate":"2023-10-17"},{"lineNumber":67,"author":{"gitId":"zhanyang01"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":68,"author":{"gitId":"zhanyang01"},"content":"        model.setPerson(preferredContactPerson, editedPreferredContactPerson);","lastModifiedDate":"2023-10-17"},{"lineNumber":69,"author":{"gitId":"zhanyang01"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2023-10-17"},{"lineNumber":70,"author":{"gitId":"zhanyang01"},"content":"        return new CommandResult(String.format(MESSAGE_PREFERREDCONTACT_PERSON_SUCCESS,","lastModifiedDate":"2023-10-17"},{"lineNumber":71,"author":{"gitId":"zhanyang01"},"content":"                Messages.format(editedPreferredContactPerson)));","lastModifiedDate":"2023-10-17"},{"lineNumber":72,"author":{"gitId":"zhanyang01"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":73,"author":{"gitId":"zhanyang01"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":74,"author":{"gitId":"zhanyang01"},"content":"    @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":75,"author":{"gitId":"zhanyang01"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-17"},{"lineNumber":76,"author":{"gitId":"zhanyang01"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-17"},{"lineNumber":77,"author":{"gitId":"zhanyang01"},"content":"            return true;","lastModifiedDate":"2023-10-17"},{"lineNumber":78,"author":{"gitId":"zhanyang01"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":79,"author":{"gitId":"zhanyang01"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":80,"author":{"gitId":"zhanyang01"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-17"},{"lineNumber":81,"author":{"gitId":"zhanyang01"},"content":"        if (!(other instanceof PreferredContactCommand)) {","lastModifiedDate":"2023-10-17"},{"lineNumber":82,"author":{"gitId":"zhanyang01"},"content":"            return false;","lastModifiedDate":"2023-10-17"},{"lineNumber":83,"author":{"gitId":"zhanyang01"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":84,"author":{"gitId":"zhanyang01"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":85,"author":{"gitId":"zhanyang01"},"content":"        PreferredContactCommand otherPreferredContactCommand \u003d (PreferredContactCommand) other;","lastModifiedDate":"2023-10-17"},{"lineNumber":86,"author":{"gitId":"zhanyang01"},"content":"        return index.equals(otherPreferredContactCommand.index)","lastModifiedDate":"2023-10-17"},{"lineNumber":87,"author":{"gitId":"zhanyang01"},"content":"                \u0026\u0026 preferredContact.equals(otherPreferredContactCommand.preferredContact);","lastModifiedDate":"2023-10-17"},{"lineNumber":88,"author":{"gitId":"zhanyang01"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":89,"author":{"gitId":"zhanyang01"},"content":"}","lastModifiedDate":"2023-10-17"}],"authorContributionMap":{"zhanyang01":89}},{"path":"src/main/java/seedu/address/logic/parser/AddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-02-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-02-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-02-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-10-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-03-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-02-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-03-17"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-03-17"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-03-17"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-03-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-03-17"},{"lineNumber":20,"author":{"gitId":"zhanyang01"},"content":"import seedu.address.model.person.PreferredContact;","lastModifiedDate":"2023-10-17"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-10-17"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2017-02-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class AddCommandParser implements Parser\u003cAddCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2017-02-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":31,"author":{"gitId":"zhanyang01"},"content":"     *","lastModifiedDate":"2023-10-17"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public AddCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":35,"author":{"gitId":"zhanyang01"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL,","lastModifiedDate":"2023-10-17"},{"lineNumber":36,"author":{"gitId":"johnnythesnake12"},"content":"                PREFIX_ADDRESS, PREFIX_TAG);","lastModifiedDate":"2023-10-18"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_ADDRESS, PREFIX_PHONE, PREFIX_EMAIL)","lastModifiedDate":"2023-10-17"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2017-12-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-17"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS);","lastModifiedDate":"2023-07-14"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        Email email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Address address \u003d ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2023-10-18"},{"lineNumber":48,"author":{"gitId":"zhanyang01"},"content":"        PreferredContact preferredContact \u003d new PreferredContact(\"\");","lastModifiedDate":"2023-10-17"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":50,"author":{"gitId":"zhanyang01"},"content":"        Person person \u003d new Person(name, phone, email, address, tagList, preferredContact);","lastModifiedDate":"2023-10-17"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return new AddCommand(person);","lastModifiedDate":"2017-03-17"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-17"},{"lineNumber":56,"author":{"gitId":"zhanyang01"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values","lastModifiedDate":"2023-10-17"},{"lineNumber":57,"author":{"gitId":"zhanyang01"},"content":"     * in the given","lastModifiedDate":"2023-10-17"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2017-03-17"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-17"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2017-03-17"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-17"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-17"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"johnnythesnake12":1,"zhanyang01":7,"-":56}},{"path":"src/main/java/seedu/address/logic/parser/AddTagCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"johnnythesnake12"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-14"},{"lineNumber":2,"author":{"gitId":"johnnythesnake12"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":3,"author":{"gitId":"johnnythesnake12"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-14"},{"lineNumber":4,"author":{"gitId":"johnnythesnake12"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-14"},{"lineNumber":5,"author":{"gitId":"johnnythesnake12"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-10-14"},{"lineNumber":6,"author":{"gitId":"johnnythesnake12"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":7,"author":{"gitId":"johnnythesnake12"},"content":"import java.util.Collection;","lastModifiedDate":"2023-10-14"},{"lineNumber":8,"author":{"gitId":"johnnythesnake12"},"content":"import java.util.Collections;","lastModifiedDate":"2023-10-14"},{"lineNumber":9,"author":{"gitId":"johnnythesnake12"},"content":"import java.util.Optional;","lastModifiedDate":"2023-10-14"},{"lineNumber":10,"author":{"gitId":"johnnythesnake12"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-14"},{"lineNumber":11,"author":{"gitId":"johnnythesnake12"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":12,"author":{"gitId":"johnnythesnake12"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-14"},{"lineNumber":13,"author":{"gitId":"johnnythesnake12"},"content":"import seedu.address.logic.commands.AddTagCommand;","lastModifiedDate":"2023-10-14"},{"lineNumber":14,"author":{"gitId":"johnnythesnake12"},"content":"import seedu.address.logic.commands.AddTagCommand.AddTagDescriptor;","lastModifiedDate":"2023-10-14"},{"lineNumber":15,"author":{"gitId":"johnnythesnake12"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-14"},{"lineNumber":16,"author":{"gitId":"johnnythesnake12"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-10-14"},{"lineNumber":17,"author":{"gitId":"johnnythesnake12"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":18,"author":{"gitId":"johnnythesnake12"},"content":"/**","lastModifiedDate":"2023-10-14"},{"lineNumber":19,"author":{"gitId":"johnnythesnake12"},"content":" * Parses input arguments and creates a new AddTagCommand object","lastModifiedDate":"2023-10-14"},{"lineNumber":20,"author":{"gitId":"johnnythesnake12"},"content":" */","lastModifiedDate":"2023-10-14"},{"lineNumber":21,"author":{"gitId":"johnnythesnake12"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":22,"author":{"gitId":"johnnythesnake12"},"content":"public class AddTagCommandParser implements Parser\u003cAddTagCommand\u003e {","lastModifiedDate":"2023-10-14"},{"lineNumber":23,"author":{"gitId":"johnnythesnake12"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":24,"author":{"gitId":"johnnythesnake12"},"content":"     * Parses the given {@code String} of arguments in the context of the AddTagCommand","lastModifiedDate":"2023-10-14"},{"lineNumber":25,"author":{"gitId":"johnnythesnake12"},"content":"     * and returns an AddTagCommand object for execution.","lastModifiedDate":"2023-10-14"},{"lineNumber":26,"author":{"gitId":"johnnythesnake12"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-10-14"},{"lineNumber":27,"author":{"gitId":"johnnythesnake12"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":28,"author":{"gitId":"johnnythesnake12"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":29,"author":{"gitId":"johnnythesnake12"},"content":"    public AddTagCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-14"},{"lineNumber":30,"author":{"gitId":"johnnythesnake12"},"content":"        requireNonNull(args);","lastModifiedDate":"2023-10-14"},{"lineNumber":31,"author":{"gitId":"johnnythesnake12"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-10-14"},{"lineNumber":32,"author":{"gitId":"johnnythesnake12"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_TAG);","lastModifiedDate":"2023-10-14"},{"lineNumber":33,"author":{"gitId":"johnnythesnake12"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":34,"author":{"gitId":"johnnythesnake12"},"content":"        Index index;","lastModifiedDate":"2023-10-14"},{"lineNumber":35,"author":{"gitId":"johnnythesnake12"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":36,"author":{"gitId":"johnnythesnake12"},"content":"        try {","lastModifiedDate":"2023-10-14"},{"lineNumber":37,"author":{"gitId":"johnnythesnake12"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2023-10-14"},{"lineNumber":38,"author":{"gitId":"johnnythesnake12"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-10-14"},{"lineNumber":39,"author":{"gitId":"johnnythesnake12"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddTagCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2023-10-14"},{"lineNumber":40,"author":{"gitId":"johnnythesnake12"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":41,"author":{"gitId":"johnnythesnake12"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":42,"author":{"gitId":"johnnythesnake12"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":43,"author":{"gitId":"johnnythesnake12"},"content":"        AddTagDescriptor addTagDescriptor \u003d new AddTagDescriptor();","lastModifiedDate":"2023-10-14"},{"lineNumber":44,"author":{"gitId":"johnnythesnake12"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":45,"author":{"gitId":"johnnythesnake12"},"content":"        parseTagsForEdit(argMultimap.getAllValues(PREFIX_TAG)).ifPresent(addTagDescriptor::setTags);","lastModifiedDate":"2023-10-14"},{"lineNumber":46,"author":{"gitId":"johnnythesnake12"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":47,"author":{"gitId":"johnnythesnake12"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":48,"author":{"gitId":"johnnythesnake12"},"content":"        return new AddTagCommand(index, addTagDescriptor);","lastModifiedDate":"2023-10-14"},{"lineNumber":49,"author":{"gitId":"johnnythesnake12"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":50,"author":{"gitId":"johnnythesnake12"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":51,"author":{"gitId":"johnnythesnake12"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":52,"author":{"gitId":"johnnythesnake12"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if {@code tags} is non-empty.","lastModifiedDate":"2023-10-14"},{"lineNumber":53,"author":{"gitId":"johnnythesnake12"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2023-10-14"},{"lineNumber":54,"author":{"gitId":"johnnythesnake12"},"content":"     * {@code Set\u003cTag\u003e} containing zero tags.","lastModifiedDate":"2023-10-14"},{"lineNumber":55,"author":{"gitId":"johnnythesnake12"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":56,"author":{"gitId":"johnnythesnake12"},"content":"    private Optional\u003cSet\u003cTag\u003e\u003e parseTagsForEdit(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2023-10-14"},{"lineNumber":57,"author":{"gitId":"johnnythesnake12"},"content":"        assert tags !\u003d null;","lastModifiedDate":"2023-10-14"},{"lineNumber":58,"author":{"gitId":"johnnythesnake12"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":59,"author":{"gitId":"johnnythesnake12"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2023-10-14"},{"lineNumber":60,"author":{"gitId":"johnnythesnake12"},"content":"            throw new ParseException(AddTagCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2023-10-14"},{"lineNumber":61,"author":{"gitId":"johnnythesnake12"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":62,"author":{"gitId":"johnnythesnake12"},"content":"        Collection\u003cString\u003e tagSet \u003d tags.size() \u003d\u003d 1 \u0026\u0026 tags.contains(\"\") ? Collections.emptySet() : tags;","lastModifiedDate":"2023-10-14"},{"lineNumber":63,"author":{"gitId":"johnnythesnake12"},"content":"        return Optional.of(ParserUtil.parseTags(tagSet));","lastModifiedDate":"2023-10-14"},{"lineNumber":64,"author":{"gitId":"johnnythesnake12"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":65,"author":{"gitId":"johnnythesnake12"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":66,"author":{"gitId":"johnnythesnake12"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":67,"author":{"gitId":"johnnythesnake12"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":68,"author":{"gitId":"johnnythesnake12"},"content":"}","lastModifiedDate":"2023-10-14"}],"authorContributionMap":{"johnnythesnake12":68}},{"path":"src/main/java/seedu/address/logic/parser/AddressBookParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-07-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-07-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":12,"author":{"gitId":"johnnythesnake12"},"content":"import seedu.address.logic.commands.AddTagCommand;","lastModifiedDate":"2023-10-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2017-01-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":16,"author":{"gitId":"johnnythesnake12"},"content":"import seedu.address.logic.commands.DeleteTagCommand;","lastModifiedDate":"2023-10-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":19,"author":{"gitId":"aarontxz"},"content":"import seedu.address.logic.commands.FileCommand;","lastModifiedDate":"2023-10-12"},{"lineNumber":20,"author":{"gitId":"LuahJunYang"},"content":"import seedu.address.logic.commands.FilterCommand;","lastModifiedDate":"2023-10-17"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2023-10-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":24,"author":{"gitId":"zhanyang01"},"content":"import seedu.address.logic.commands.PreferredContactCommand;","lastModifiedDate":"2023-10-17"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"public class AddressBookParser {","lastModifiedDate":"2017-07-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(AddressBookParser.class);","lastModifiedDate":"2023-07-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-29"},{"lineNumber":54,"author":{"gitId":"zhanyang01"},"content":"        // Note to developers: Change the log level in config.json to enable lower level","lastModifiedDate":"2023-10-17"},{"lineNumber":55,"author":{"gitId":"zhanyang01"},"content":"        // (i.e., FINE, FINER and lower)","lastModifiedDate":"2023-10-17"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // log messages such as the one below.","lastModifiedDate":"2023-07-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // Lower level log messages are used sparingly to minimize noise in the code.","lastModifiedDate":"2023-07-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        logger.fine(\"Command word: \" + commandWord + \"; Arguments: \" + arguments);","lastModifiedDate":"2023-07-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        case AddCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            return new AddCommandParser().parse(arguments);","lastModifiedDate":"2017-02-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"johnnythesnake12"},"content":"        case AddTagCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-14"},{"lineNumber":65,"author":{"gitId":"johnnythesnake12"},"content":"            return new AddTagCommandParser().parse(arguments);","lastModifiedDate":"2023-10-14"},{"lineNumber":66,"author":{"gitId":"johnnythesnake12"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        case EditCommand.COMMAND_WORD:","lastModifiedDate":"2016-12-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            return new EditCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            return new DeleteCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"johnnythesnake12"},"content":"        case DeleteTagCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-15"},{"lineNumber":74,"author":{"gitId":"johnnythesnake12"},"content":"            return new DeleteTagCommandParser().parse(arguments);","lastModifiedDate":"2023-10-15"},{"lineNumber":75,"author":{"gitId":"johnnythesnake12"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            return new ClearCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            return new FindCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            return new ListCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":91,"author":{"gitId":"aarontxz"},"content":"        case FileCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-12"},{"lineNumber":92,"author":{"gitId":"aarontxz"},"content":"            return new FileCommandParser().parse(arguments);","lastModifiedDate":"2023-10-12"},{"lineNumber":93,"author":{"gitId":"aarontxz"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":94,"author":{"gitId":"LuahJunYang"},"content":"        case FilterCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-17"},{"lineNumber":95,"author":{"gitId":"LuahJunYang"},"content":"            return new FilterCommandParser().parse(arguments);","lastModifiedDate":"2023-10-17"},{"lineNumber":96,"author":{"gitId":"LuahJunYang"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":97,"author":{"gitId":"zhanyang01"},"content":"        case PreferredContactCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-17"},{"lineNumber":98,"author":{"gitId":"zhanyang01"},"content":"            return new PreferredContactCommandParser().parse(arguments);","lastModifiedDate":"2023-10-17"},{"lineNumber":99,"author":{"gitId":"zhanyang01"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            logger.finer(\"This user input caused a ParseException: \" + userInput);","lastModifiedDate":"2023-07-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"LuahJunYang":4,"aarontxz":4,"johnnythesnake12":8,"zhanyang01":6,"-":84}},{"path":"src/main/java/seedu/address/logic/parser/ArgumentMultimap.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2017-03-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-03-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2017-03-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-03-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-07-14"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-07-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Stores mapping of prefixes to their respective arguments.","lastModifiedDate":"2017-03-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Each key may be associated with multiple argument values.","lastModifiedDate":"2017-03-08"},{"lineNumber":16,"author":{"gitId":"zhanyang01"},"content":" * Values for a given key are stored in a list, and the insertion ordering is","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"zhanyang01"},"content":" * maintained.","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"zhanyang01"},"content":" * Keys are unique, but the list of argument values may contain duplicate","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"zhanyang01"},"content":" * argument values, i.e. the same argument value","lastModifiedDate":"2023-10-17"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * can be inserted multiple times for the same prefix.","lastModifiedDate":"2017-03-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class ArgumentMultimap {","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /** Prefixes mapped to their respective arguments **/","lastModifiedDate":"2017-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final Map\u003cPrefix, List\u003cString\u003e\u003e argMultimap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Associates the specified argument value with {@code prefix} key in this map.","lastModifiedDate":"2017-03-08"},{"lineNumber":29,"author":{"gitId":"zhanyang01"},"content":"     * If the map previously contained a mapping for the key, the new value is","lastModifiedDate":"2023-10-17"},{"lineNumber":30,"author":{"gitId":"zhanyang01"},"content":"     * appended to the list of existing values.","lastModifiedDate":"2023-10-17"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":32,"author":{"gitId":"zhanyang01"},"content":"     * @param prefix   Prefix key with which the specified argument value is to be","lastModifiedDate":"2023-10-17"},{"lineNumber":33,"author":{"gitId":"zhanyang01"},"content":"     *                 associated","lastModifiedDate":"2023-10-17"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * @param argValue Argument value to be associated with the specified prefix key","lastModifiedDate":"2017-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void put(Prefix prefix, String argValue) {","lastModifiedDate":"2017-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        List\u003cString\u003e argValues \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        argValues.add(argValue);","lastModifiedDate":"2017-03-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        argMultimap.put(prefix, argValues);","lastModifiedDate":"2017-03-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Returns the last value of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return values.isEmpty() ? Optional.empty() : Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2017-03-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Returns all values of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":52,"author":{"gitId":"zhanyang01"},"content":"     * If the prefix does not exist or has no values, this will return an empty","lastModifiedDate":"2023-10-17"},{"lineNumber":53,"author":{"gitId":"zhanyang01"},"content":"     * list.","lastModifiedDate":"2023-10-17"},{"lineNumber":54,"author":{"gitId":"zhanyang01"},"content":"     * Modifying the returned list will not affect the underlying data structure of","lastModifiedDate":"2023-10-17"},{"lineNumber":55,"author":{"gitId":"zhanyang01"},"content":"     * the ArgumentMultimap.","lastModifiedDate":"2023-10-17"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public List\u003cString\u003e getAllValues(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        if (!argMultimap.containsKey(prefix)) {","lastModifiedDate":"2017-03-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            return new ArrayList\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(argMultimap.get(prefix));","lastModifiedDate":"2017-03-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":65,"author":{"gitId":"zhanyang01"},"content":"     * Returns the preamble (text before the first valid prefix). Trims any","lastModifiedDate":"2023-10-17"},{"lineNumber":66,"author":{"gitId":"zhanyang01"},"content":"     * leading/trailing spaces.","lastModifiedDate":"2023-10-17"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public String getPreamble() {","lastModifiedDate":"2017-03-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return getValue(new Prefix(\"\")).orElse(\"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-07-14"},{"lineNumber":73,"author":{"gitId":"zhanyang01"},"content":"     * Throws a {@code ParseException} if any of the prefixes given in","lastModifiedDate":"2023-10-17"},{"lineNumber":74,"author":{"gitId":"zhanyang01"},"content":"     * {@code prefixes} appeared more than","lastModifiedDate":"2023-10-17"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * once among the arguments.","lastModifiedDate":"2023-07-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-07-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void verifyNoDuplicatePrefixesFor(Prefix... prefixes) throws ParseException {","lastModifiedDate":"2023-07-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        Prefix[] duplicatedPrefixes \u003d Stream.of(prefixes).distinct()","lastModifiedDate":"2023-07-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"                .filter(prefix -\u003e argMultimap.containsKey(prefix) \u0026\u0026 argMultimap.get(prefix).size() \u003e 1)","lastModifiedDate":"2023-07-14"},{"lineNumber":80,"author":{"gitId":"-"},"content":"                .toArray(Prefix[]::new);","lastModifiedDate":"2023-07-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        if (duplicatedPrefixes.length \u003e 0) {","lastModifiedDate":"2023-07-14"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            throw new ParseException(Messages.getErrorMessageForDuplicatePrefixes(duplicatedPrefixes));","lastModifiedDate":"2023-07-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-07-14"},{"lineNumber":86,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-08"}],"authorContributionMap":{"zhanyang01":16,"-":70}},{"path":"src/main/java/seedu/address/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"zhanyang01"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"zhanyang01"},"content":" * commands","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2017-06-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"e/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_ADDRESS \u003d new Prefix(\"a/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"t/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":15,"author":{"gitId":"zhanyang01"},"content":"    public static final Prefix PREFIX_PREFERRED_CONTACT \u003d new Prefix(\"pc/\");","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"zhanyang01":3,"-":13}},{"path":"src/main/java/seedu/address/logic/parser/DeleteTagCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"johnnythesnake12"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-15"},{"lineNumber":2,"author":{"gitId":"johnnythesnake12"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":3,"author":{"gitId":"johnnythesnake12"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-15"},{"lineNumber":4,"author":{"gitId":"johnnythesnake12"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-15"},{"lineNumber":5,"author":{"gitId":"johnnythesnake12"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-10-15"},{"lineNumber":6,"author":{"gitId":"johnnythesnake12"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":7,"author":{"gitId":"johnnythesnake12"},"content":"import java.util.Collection;","lastModifiedDate":"2023-10-15"},{"lineNumber":8,"author":{"gitId":"johnnythesnake12"},"content":"import java.util.Collections;","lastModifiedDate":"2023-10-15"},{"lineNumber":9,"author":{"gitId":"johnnythesnake12"},"content":"import java.util.Optional;","lastModifiedDate":"2023-10-15"},{"lineNumber":10,"author":{"gitId":"johnnythesnake12"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-15"},{"lineNumber":11,"author":{"gitId":"johnnythesnake12"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":12,"author":{"gitId":"johnnythesnake12"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-15"},{"lineNumber":13,"author":{"gitId":"johnnythesnake12"},"content":"import seedu.address.logic.commands.DeleteTagCommand;","lastModifiedDate":"2023-10-15"},{"lineNumber":14,"author":{"gitId":"johnnythesnake12"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-15"},{"lineNumber":15,"author":{"gitId":"johnnythesnake12"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-10-15"},{"lineNumber":16,"author":{"gitId":"johnnythesnake12"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":17,"author":{"gitId":"johnnythesnake12"},"content":"/**","lastModifiedDate":"2023-10-15"},{"lineNumber":18,"author":{"gitId":"johnnythesnake12"},"content":" * Parses input arguments and creates a new AddTagCommand object","lastModifiedDate":"2023-10-15"},{"lineNumber":19,"author":{"gitId":"johnnythesnake12"},"content":" */","lastModifiedDate":"2023-10-15"},{"lineNumber":20,"author":{"gitId":"johnnythesnake12"},"content":"public class DeleteTagCommandParser implements Parser\u003cDeleteTagCommand\u003e {","lastModifiedDate":"2023-10-15"},{"lineNumber":21,"author":{"gitId":"johnnythesnake12"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":22,"author":{"gitId":"johnnythesnake12"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteTagCommand","lastModifiedDate":"2023-10-15"},{"lineNumber":23,"author":{"gitId":"johnnythesnake12"},"content":"     * and returns an DeleteTagCommand object for execution.","lastModifiedDate":"2023-10-15"},{"lineNumber":24,"author":{"gitId":"johnnythesnake12"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-10-15"},{"lineNumber":25,"author":{"gitId":"johnnythesnake12"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":26,"author":{"gitId":"johnnythesnake12"},"content":"    public DeleteTagCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-15"},{"lineNumber":27,"author":{"gitId":"johnnythesnake12"},"content":"        requireNonNull(args);","lastModifiedDate":"2023-10-15"},{"lineNumber":28,"author":{"gitId":"johnnythesnake12"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-10-15"},{"lineNumber":29,"author":{"gitId":"johnnythesnake12"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_TAG);","lastModifiedDate":"2023-10-15"},{"lineNumber":30,"author":{"gitId":"johnnythesnake12"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":31,"author":{"gitId":"johnnythesnake12"},"content":"        Index index;","lastModifiedDate":"2023-10-15"},{"lineNumber":32,"author":{"gitId":"johnnythesnake12"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":33,"author":{"gitId":"johnnythesnake12"},"content":"        try {","lastModifiedDate":"2023-10-15"},{"lineNumber":34,"author":{"gitId":"johnnythesnake12"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2023-10-15"},{"lineNumber":35,"author":{"gitId":"johnnythesnake12"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-10-15"},{"lineNumber":36,"author":{"gitId":"johnnythesnake12"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteTagCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2023-10-15"},{"lineNumber":37,"author":{"gitId":"johnnythesnake12"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":38,"author":{"gitId":"johnnythesnake12"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":39,"author":{"gitId":"johnnythesnake12"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":40,"author":{"gitId":"johnnythesnake12"},"content":"        DeleteTagCommand.DeleteTagDescriptor deleteTagDescriptor \u003d new DeleteTagCommand.DeleteTagDescriptor();","lastModifiedDate":"2023-10-15"},{"lineNumber":41,"author":{"gitId":"johnnythesnake12"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":42,"author":{"gitId":"johnnythesnake12"},"content":"        parseTagsForEdit(argMultimap.getAllValues(PREFIX_TAG)).ifPresent(deleteTagDescriptor::setTags);","lastModifiedDate":"2023-10-15"},{"lineNumber":43,"author":{"gitId":"johnnythesnake12"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":44,"author":{"gitId":"johnnythesnake12"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":45,"author":{"gitId":"johnnythesnake12"},"content":"        return new DeleteTagCommand(index, deleteTagDescriptor);","lastModifiedDate":"2023-10-15"},{"lineNumber":46,"author":{"gitId":"johnnythesnake12"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":47,"author":{"gitId":"johnnythesnake12"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":48,"author":{"gitId":"johnnythesnake12"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":49,"author":{"gitId":"johnnythesnake12"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if {@code tags} is non-empty.","lastModifiedDate":"2023-10-15"},{"lineNumber":50,"author":{"gitId":"johnnythesnake12"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2023-10-15"},{"lineNumber":51,"author":{"gitId":"johnnythesnake12"},"content":"     * {@code Set\u003cTag\u003e} containing zero tags.","lastModifiedDate":"2023-10-15"},{"lineNumber":52,"author":{"gitId":"johnnythesnake12"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":53,"author":{"gitId":"johnnythesnake12"},"content":"    private Optional\u003cSet\u003cTag\u003e\u003e parseTagsForEdit(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2023-10-15"},{"lineNumber":54,"author":{"gitId":"johnnythesnake12"},"content":"        assert tags !\u003d null;","lastModifiedDate":"2023-10-15"},{"lineNumber":55,"author":{"gitId":"johnnythesnake12"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":56,"author":{"gitId":"johnnythesnake12"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2023-10-15"},{"lineNumber":57,"author":{"gitId":"johnnythesnake12"},"content":"            throw new ParseException(DeleteTagCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2023-10-15"},{"lineNumber":58,"author":{"gitId":"johnnythesnake12"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":59,"author":{"gitId":"johnnythesnake12"},"content":"        Collection\u003cString\u003e tagSet \u003d tags.size() \u003d\u003d 1 \u0026\u0026 tags.contains(\"\") ? Collections.emptySet() : tags;","lastModifiedDate":"2023-10-15"},{"lineNumber":60,"author":{"gitId":"johnnythesnake12"},"content":"        return Optional.of(ParserUtil.parseTags(tagSet));","lastModifiedDate":"2023-10-15"},{"lineNumber":61,"author":{"gitId":"johnnythesnake12"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":62,"author":{"gitId":"johnnythesnake12"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":63,"author":{"gitId":"johnnythesnake12"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":64,"author":{"gitId":"johnnythesnake12"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":65,"author":{"gitId":"johnnythesnake12"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":66,"author":{"gitId":"johnnythesnake12"},"content":"}","lastModifiedDate":"2023-10-15"}],"authorContributionMap":{"johnnythesnake12":66}},{"path":"src/main/java/seedu/address/logic/parser/FileCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"aarontxz"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"aarontxz"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"aarontxz"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"aarontxz"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"aarontxz"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"aarontxz"},"content":"import seedu.address.logic.commands.FileCommand;","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"aarontxz"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"aarontxz"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"aarontxz"},"content":"/**","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"aarontxz"},"content":" * Parses input arguments and creates a new FileCommand object","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"aarontxz"},"content":" */","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"aarontxz"},"content":"public class FileCommandParser implements Parser\u003cFileCommand\u003e {","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"aarontxz"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"aarontxz"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"aarontxz"},"content":"     * Parses the given {@code String} of arguments in the context of the FileCommand","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"aarontxz"},"content":"     * and returns a FileCommand object for execution.","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"aarontxz"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"aarontxz"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"LuahJunYang"},"content":"    public FileCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-17"},{"lineNumber":20,"author":{"gitId":"aarontxz"},"content":"        try {","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"aarontxz"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2023-10-12"},{"lineNumber":22,"author":{"gitId":"aarontxz"},"content":"            return new FileCommand(index);","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"aarontxz"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-10-12"},{"lineNumber":24,"author":{"gitId":"aarontxz"},"content":"            throw new ParseException(","lastModifiedDate":"2023-10-12"},{"lineNumber":25,"author":{"gitId":"aarontxz"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FileCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"aarontxz"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":27,"author":{"gitId":"aarontxz"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":28,"author":{"gitId":"aarontxz"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":29,"author":{"gitId":"aarontxz"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"LuahJunYang":1,"aarontxz":28}},{"path":"src/main/java/seedu/address/logic/parser/FilterCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LuahJunYang"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"LuahJunYang"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":3,"author":{"gitId":"zhanyang01"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-18"},{"lineNumber":4,"author":{"gitId":"LuahJunYang"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"LuahJunYang"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"LuahJunYang"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"zhanyang01"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":8,"author":{"gitId":"zhanyang01"},"content":"import seedu.address.logic.commands.FilterCommand;","lastModifiedDate":"2023-10-18"},{"lineNumber":9,"author":{"gitId":"zhanyang01"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-18"},{"lineNumber":10,"author":{"gitId":"zhanyang01"},"content":"import seedu.address.model.person.FilterContainsKeywordsPredicate;","lastModifiedDate":"2023-10-18"},{"lineNumber":11,"author":{"gitId":"LuahJunYang"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"LuahJunYang"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"zhanyang01"},"content":"/**","lastModifiedDate":"2023-10-18"},{"lineNumber":14,"author":{"gitId":"zhanyang01"},"content":" * Parses input arguments and creates a new FilterCommand object","lastModifiedDate":"2023-10-18"},{"lineNumber":15,"author":{"gitId":"zhanyang01"},"content":" */","lastModifiedDate":"2023-10-18"},{"lineNumber":16,"author":{"gitId":"LuahJunYang"},"content":"public class FilterCommandParser implements Parser\u003cFilterCommand\u003e {","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"LuahJunYang"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"LuahJunYang"},"content":"     * Parses {@code userInput} into a command and returns it.","lastModifiedDate":"2023-10-13"},{"lineNumber":19,"author":{"gitId":"LuahJunYang"},"content":"     *","lastModifiedDate":"2023-10-13"},{"lineNumber":20,"author":{"gitId":"LuahJunYang"},"content":"     * @param args","lastModifiedDate":"2023-10-13"},{"lineNumber":21,"author":{"gitId":"LuahJunYang"},"content":"     * @throws ParseException if {@code userInput} does not conform the expected format","lastModifiedDate":"2023-10-13"},{"lineNumber":22,"author":{"gitId":"LuahJunYang"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":23,"author":{"gitId":"LuahJunYang"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":24,"author":{"gitId":"LuahJunYang"},"content":"    public FilterCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-17"},{"lineNumber":25,"author":{"gitId":"LuahJunYang"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2023-10-17"},{"lineNumber":26,"author":{"gitId":"LuahJunYang"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2023-10-17"},{"lineNumber":27,"author":{"gitId":"LuahJunYang"},"content":"            throw new ParseException(","lastModifiedDate":"2023-10-15"},{"lineNumber":28,"author":{"gitId":"LuahJunYang"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FilterCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-17"},{"lineNumber":29,"author":{"gitId":"LuahJunYang"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":30,"author":{"gitId":"johnnythesnake12"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":31,"author":{"gitId":"LuahJunYang"},"content":"        String[] tagKeywords \u003d trimmedArgs.split(String.valueOf(PREFIX_TAG));","lastModifiedDate":"2023-10-17"},{"lineNumber":32,"author":{"gitId":"LuahJunYang"},"content":"        return new FilterCommand(new FilterContainsKeywordsPredicate(Arrays.asList(tagKeywords)));","lastModifiedDate":"2023-10-17"},{"lineNumber":33,"author":{"gitId":"LuahJunYang"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":34,"author":{"gitId":"LuahJunYang"},"content":"}","lastModifiedDate":"2023-10-13"}],"authorContributionMap":{"LuahJunYang":25,"johnnythesnake12":1,"zhanyang01":8}},{"path":"src/main/java/seedu/address/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-02-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-02-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-02-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-02-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":19,"author":{"gitId":"zhanyang01"},"content":" * Contains utility methods used for parsing strings in the various *Parser","lastModifiedDate":"2023-10-17"},{"lineNumber":20,"author":{"gitId":"zhanyang01"},"content":" * classes.","lastModifiedDate":"2023-10-17"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":27,"author":{"gitId":"zhanyang01"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading","lastModifiedDate":"2023-10-17"},{"lineNumber":28,"author":{"gitId":"zhanyang01"},"content":"     * and trailing whitespaces will be","lastModifiedDate":"2023-10-17"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":30,"author":{"gitId":"zhanyang01"},"content":"     *","lastModifiedDate":"2023-10-17"},{"lineNumber":31,"author":{"gitId":"zhanyang01"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero","lastModifiedDate":"2023-10-17"},{"lineNumber":32,"author":{"gitId":"zhanyang01"},"content":"     *                        unsigned integer).","lastModifiedDate":"2023-10-17"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Parses a {@code String address} into an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code address} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public static Address parseAddress(String address) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-30"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        String trimmedAddress \u003d address.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(trimmedAddress)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            throw new ParseException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        return new Address(trimmedAddress);","lastModifiedDate":"2017-05-30"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-30"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2017-05-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public static Tag parseTag(String tag) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2017-05-30"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        return new Tag(trimmedTag);","lastModifiedDate":"2017-05-30"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2017-03-07"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2017-05-15"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2017-02-11"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2017-02-11"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            tagSet.add(parseTag(tagName));","lastModifiedDate":"2017-05-30"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        return tagSet;","lastModifiedDate":"2017-03-07"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":128,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"zhanyang01":7,"-":121}},{"path":"src/main/java/seedu/address/logic/parser/PreferredContactCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zhanyang01"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-17"},{"lineNumber":2,"author":{"gitId":"zhanyang01"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":3,"author":{"gitId":"zhanyang01"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"zhanyang01"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"johnnythesnake12"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PREFERRED_CONTACT;","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"zhanyang01"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"zhanyang01"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"zhanyang01"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"zhanyang01"},"content":"import seedu.address.logic.commands.PreferredContactCommand;","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"zhanyang01"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"zhanyang01"},"content":"import seedu.address.model.person.PreferredContact;","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"zhanyang01"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"zhanyang01"},"content":"/**","lastModifiedDate":"2023-10-17"},{"lineNumber":14,"author":{"gitId":"zhanyang01"},"content":" * Parses input arguments and creates a new EditCommand object","lastModifiedDate":"2023-10-17"},{"lineNumber":15,"author":{"gitId":"zhanyang01"},"content":" */","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"zhanyang01"},"content":"public class PreferredContactCommandParser implements Parser\u003cPreferredContactCommand\u003e {","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"zhanyang01"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"zhanyang01"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"zhanyang01"},"content":"     * Parses the given {@code String} of arguments in the context of the","lastModifiedDate":"2023-10-17"},{"lineNumber":20,"author":{"gitId":"zhanyang01"},"content":"     * EditCommand","lastModifiedDate":"2023-10-17"},{"lineNumber":21,"author":{"gitId":"zhanyang01"},"content":"     * and returns an EditCommand object for execution.","lastModifiedDate":"2023-10-17"},{"lineNumber":22,"author":{"gitId":"zhanyang01"},"content":"     *","lastModifiedDate":"2023-10-17"},{"lineNumber":23,"author":{"gitId":"zhanyang01"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-10-17"},{"lineNumber":24,"author":{"gitId":"zhanyang01"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":25,"author":{"gitId":"zhanyang01"},"content":"    public PreferredContactCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-17"},{"lineNumber":26,"author":{"gitId":"zhanyang01"},"content":"        requireNonNull(args);","lastModifiedDate":"2023-10-17"},{"lineNumber":27,"author":{"gitId":"zhanyang01"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_PREFERRED_CONTACT);","lastModifiedDate":"2023-10-17"},{"lineNumber":28,"author":{"gitId":"zhanyang01"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":29,"author":{"gitId":"zhanyang01"},"content":"        Index index;","lastModifiedDate":"2023-10-17"},{"lineNumber":30,"author":{"gitId":"zhanyang01"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":31,"author":{"gitId":"zhanyang01"},"content":"        try {","lastModifiedDate":"2023-10-17"},{"lineNumber":32,"author":{"gitId":"zhanyang01"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2023-10-17"},{"lineNumber":33,"author":{"gitId":"zhanyang01"},"content":"        } catch (IllegalValueException pe) {","lastModifiedDate":"2023-10-17"},{"lineNumber":34,"author":{"gitId":"zhanyang01"},"content":"            throw new ParseException(","lastModifiedDate":"2023-10-17"},{"lineNumber":35,"author":{"gitId":"zhanyang01"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, PreferredContactCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2023-10-17"},{"lineNumber":36,"author":{"gitId":"zhanyang01"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":37,"author":{"gitId":"zhanyang01"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":38,"author":{"gitId":"zhanyang01"},"content":"        if (argMultimap.getValue(PREFIX_PREFERRED_CONTACT).isEmpty()) {","lastModifiedDate":"2023-10-17"},{"lineNumber":39,"author":{"gitId":"zhanyang01"},"content":"            throw new ParseException(PreferredContactCommand.MESSAGE_PREFERREDCONTACT_NOT_EDITED);","lastModifiedDate":"2023-10-17"},{"lineNumber":40,"author":{"gitId":"zhanyang01"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":41,"author":{"gitId":"zhanyang01"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":42,"author":{"gitId":"johnnythesnake12"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_PREFERRED_CONTACT);","lastModifiedDate":"2023-10-17"},{"lineNumber":43,"author":{"gitId":"johnnythesnake12"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":44,"author":{"gitId":"zhanyang01"},"content":"        if (!argMultimap.getValue(PREFIX_PREFERRED_CONTACT).get().equals(\"email\")","lastModifiedDate":"2023-10-17"},{"lineNumber":45,"author":{"gitId":"zhanyang01"},"content":"                \u0026\u0026 !argMultimap.getValue(PREFIX_PREFERRED_CONTACT).get().equals(\"phone\")","lastModifiedDate":"2023-10-17"},{"lineNumber":46,"author":{"gitId":"zhanyang01"},"content":"                \u0026\u0026 !argMultimap.getValue(PREFIX_PREFERRED_CONTACT).get().equals(\"\")) {","lastModifiedDate":"2023-10-17"},{"lineNumber":47,"author":{"gitId":"zhanyang01"},"content":"            throw new ParseException(PreferredContactCommand.MESSAGE_PREFERREDCONTACT_INVALID);","lastModifiedDate":"2023-10-17"},{"lineNumber":48,"author":{"gitId":"zhanyang01"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":49,"author":{"gitId":"zhanyang01"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":50,"author":{"gitId":"zhanyang01"},"content":"        String preferredContactDescriptor \u003d argMultimap.getValue(PREFIX_PREFERRED_CONTACT).orElse(\"\");","lastModifiedDate":"2023-10-17"},{"lineNumber":51,"author":{"gitId":"zhanyang01"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":52,"author":{"gitId":"zhanyang01"},"content":"        return new PreferredContactCommand(index, new PreferredContact(preferredContactDescriptor));","lastModifiedDate":"2023-10-17"},{"lineNumber":53,"author":{"gitId":"zhanyang01"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":54,"author":{"gitId":"zhanyang01"},"content":"}","lastModifiedDate":"2023-10-17"}],"authorContributionMap":{"johnnythesnake12":3,"zhanyang01":51}},{"path":"src/main/java/seedu/address/model/UserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents User\u0027s preferences.","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class UserPrefs implements ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private GuiSettings guiSettings \u003d new GuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private Path addressBookFilePath \u003d Paths.get(\"data\", \"addressbook.json\");","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with default values.","lastModifiedDate":"2018-12-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":22,"author":{"gitId":"zhanyang01"},"content":"    public UserPrefs() {","lastModifiedDate":"2023-10-17"},{"lineNumber":23,"author":{"gitId":"zhanyang01"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with the prefs in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public UserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2018-12-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code UserPrefs} with {@code newUserPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyUserPrefs newUserPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        requireNonNull(newUserPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        setGuiSettings(newUserPrefs.getGuiSettings());","lastModifiedDate":"2018-12-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        setAddressBookFilePath(newUserPrefs.getAddressBookFilePath());","lastModifiedDate":"2018-12-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return guiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        this.guiSettings \u003d guiSettings;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return addressBookFilePath;","lastModifiedDate":"2017-02-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        this.addressBookFilePath \u003d addressBookFilePath;","lastModifiedDate":"2017-02-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        if (!(other instanceof UserPrefs)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        UserPrefs otherUserPrefs \u003d (UserPrefs) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return guiSettings.equals(otherUserPrefs.guiSettings)","lastModifiedDate":"2023-07-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"                \u0026\u0026 addressBookFilePath.equals(otherUserPrefs.addressBookFilePath);","lastModifiedDate":"2023-07-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        return Objects.hash(guiSettings, addressBookFilePath);","lastModifiedDate":"2018-08-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-02-25"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        sb.append(\"Gui Settings : \" + guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        sb.append(\"\\nLocal data file location : \" + addressBookFilePath);","lastModifiedDate":"2017-02-25"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-02-25"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"zhanyang01":2,"-":87}},{"path":"src/main/java/seedu/address/model/person/FilterContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LuahJunYang"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-10-17"},{"lineNumber":2,"author":{"gitId":"zhanyang01"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":3,"author":{"gitId":"LuahJunYang"},"content":"import java.util.List;","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"LuahJunYang"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"zhanyang01"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":6,"author":{"gitId":"LuahJunYang"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"zhanyang01"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-10-18"},{"lineNumber":8,"author":{"gitId":"LuahJunYang"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"LuahJunYang"},"content":"/**","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"LuahJunYang"},"content":" * Tests that a {@code Person}\u0027s {@code Name} matches any of the keywords given.","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"LuahJunYang"},"content":" */","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"LuahJunYang"},"content":"public class FilterContainsKeywordsPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"LuahJunYang"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2023-10-17"},{"lineNumber":14,"author":{"gitId":"LuahJunYang"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":15,"author":{"gitId":"LuahJunYang"},"content":"    public FilterContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"LuahJunYang"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"LuahJunYang"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"LuahJunYang"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"LuahJunYang"},"content":"    @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":20,"author":{"gitId":"LuahJunYang"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2023-10-17"},{"lineNumber":21,"author":{"gitId":"LuahJunYang"},"content":"        for (Tag tag : person.getTags()) {","lastModifiedDate":"2023-10-17"},{"lineNumber":22,"author":{"gitId":"LuahJunYang"},"content":"            String tagName \u003d tag.getTagName(); // Replace with the actual method to get the tag name","lastModifiedDate":"2023-10-17"},{"lineNumber":23,"author":{"gitId":"LuahJunYang"},"content":"            for (String keyword : keywords) {","lastModifiedDate":"2023-10-17"},{"lineNumber":24,"author":{"gitId":"LuahJunYang"},"content":"                if (keyword.equalsIgnoreCase(tagName)) {","lastModifiedDate":"2023-10-17"},{"lineNumber":25,"author":{"gitId":"LuahJunYang"},"content":"                    return true; // Match found, exit early","lastModifiedDate":"2023-10-17"},{"lineNumber":26,"author":{"gitId":"LuahJunYang"},"content":"                }","lastModifiedDate":"2023-10-17"},{"lineNumber":27,"author":{"gitId":"LuahJunYang"},"content":"            }","lastModifiedDate":"2023-10-17"},{"lineNumber":28,"author":{"gitId":"LuahJunYang"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":29,"author":{"gitId":"LuahJunYang"},"content":"        return false; // No match found after checking all tags and keywords","lastModifiedDate":"2023-10-17"},{"lineNumber":30,"author":{"gitId":"LuahJunYang"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":31,"author":{"gitId":"LuahJunYang"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":32,"author":{"gitId":"LuahJunYang"},"content":"    @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":33,"author":{"gitId":"LuahJunYang"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-17"},{"lineNumber":34,"author":{"gitId":"LuahJunYang"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-17"},{"lineNumber":35,"author":{"gitId":"LuahJunYang"},"content":"            return true;","lastModifiedDate":"2023-10-17"},{"lineNumber":36,"author":{"gitId":"LuahJunYang"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":37,"author":{"gitId":"LuahJunYang"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":38,"author":{"gitId":"LuahJunYang"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-17"},{"lineNumber":39,"author":{"gitId":"LuahJunYang"},"content":"        if (!(other instanceof FilterContainsKeywordsPredicate)) {","lastModifiedDate":"2023-10-17"},{"lineNumber":40,"author":{"gitId":"LuahJunYang"},"content":"            return false;","lastModifiedDate":"2023-10-17"},{"lineNumber":41,"author":{"gitId":"LuahJunYang"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":42,"author":{"gitId":"LuahJunYang"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":43,"author":{"gitId":"LuahJunYang"},"content":"        FilterContainsKeywordsPredicate otherFilterContainsKeywordsPredicate \u003d (FilterContainsKeywordsPredicate) other;","lastModifiedDate":"2023-10-17"},{"lineNumber":44,"author":{"gitId":"LuahJunYang"},"content":"        return keywords.equals(otherFilterContainsKeywordsPredicate.keywords);","lastModifiedDate":"2023-10-17"},{"lineNumber":45,"author":{"gitId":"LuahJunYang"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":46,"author":{"gitId":"LuahJunYang"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":47,"author":{"gitId":"LuahJunYang"},"content":"    @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":48,"author":{"gitId":"LuahJunYang"},"content":"    public String toString() {","lastModifiedDate":"2023-10-17"},{"lineNumber":49,"author":{"gitId":"LuahJunYang"},"content":"        return new ToStringBuilder(this).add(\"keywords\", keywords).toString();","lastModifiedDate":"2023-10-17"},{"lineNumber":50,"author":{"gitId":"LuahJunYang"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":51,"author":{"gitId":"LuahJunYang"},"content":"}","lastModifiedDate":"2023-10-17"}],"authorContributionMap":{"LuahJunYang":48,"zhanyang01":3}},{"path":"src/main/java/seedu/address/model/person/Person.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-03-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-03-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Represents a Person in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"zhanyang01"},"content":" * Guarantees: details are present and not null, field values are validated,","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"zhanyang01"},"content":" * immutable.","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class Person {","lastModifiedDate":"2018-01-10"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    // Data fields","lastModifiedDate":"2018-04-19"},{"lineNumber":26,"author":{"gitId":"zhanyang01"},"content":"    private final PreferredContact preferredContact;","lastModifiedDate":"2023-10-17"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final Address address;","lastModifiedDate":"2018-04-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"zhanyang01"},"content":"    public Person(Name name, Phone phone, Email email, Address address, Set\u003cTag\u003e tags,","lastModifiedDate":"2023-10-17"},{"lineNumber":34,"author":{"gitId":"zhanyang01"},"content":"            PreferredContact preferredContact) {","lastModifiedDate":"2023-10-17"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        requireAllNonNull(name, phone, email, address, tags);","lastModifiedDate":"2023-10-17"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2017-12-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2017-12-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2017-12-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":41,"author":{"gitId":"zhanyang01"},"content":"        this.preferredContact \u003d preferredContact;","lastModifiedDate":"2023-10-17"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public Name getName() {","lastModifiedDate":"2017-07-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2017-12-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public Phone getPhone() {","lastModifiedDate":"2017-07-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public Email getEmail() {","lastModifiedDate":"2017-07-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return email;","lastModifiedDate":"2017-12-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public Address getAddress() {","lastModifiedDate":"2017-07-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return address;","lastModifiedDate":"2017-12-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-07"},{"lineNumber":61,"author":{"gitId":"zhanyang01"},"content":"     * Returns an immutable tag set, which throws","lastModifiedDate":"2023-10-17"},{"lineNumber":62,"author":{"gitId":"zhanyang01"},"content":"     * {@code UnsupportedOperationException}","lastModifiedDate":"2023-10-17"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * if modification is attempted.","lastModifiedDate":"2017-03-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":69,"author":{"gitId":"zhanyang01"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":70,"author":{"gitId":"zhanyang01"},"content":"     * Returns preferred contact method of a person","lastModifiedDate":"2023-10-17"},{"lineNumber":71,"author":{"gitId":"zhanyang01"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":72,"author":{"gitId":"zhanyang01"},"content":"    public PreferredContact getPreferredContact() {","lastModifiedDate":"2023-10-17"},{"lineNumber":73,"author":{"gitId":"zhanyang01"},"content":"        return preferredContact;","lastModifiedDate":"2023-10-17"},{"lineNumber":74,"author":{"gitId":"zhanyang01"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":75,"author":{"gitId":"zhanyang01"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":76,"author":{"gitId":"johnnythesnake12"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":77,"author":{"gitId":"johnnythesnake12"},"content":"     * Adds tags to current tags of a person","lastModifiedDate":"2023-10-14"},{"lineNumber":78,"author":{"gitId":"johnnythesnake12"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":79,"author":{"gitId":"johnnythesnake12"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":80,"author":{"gitId":"johnnythesnake12"},"content":"    public void addTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2023-10-14"},{"lineNumber":81,"author":{"gitId":"johnnythesnake12"},"content":"        if (tags !\u003d null) {","lastModifiedDate":"2023-10-14"},{"lineNumber":82,"author":{"gitId":"johnnythesnake12"},"content":"            this.tags.addAll(tags);","lastModifiedDate":"2023-10-14"},{"lineNumber":83,"author":{"gitId":"johnnythesnake12"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":84,"author":{"gitId":"johnnythesnake12"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":85,"author":{"gitId":"johnnythesnake12"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":86,"author":{"gitId":"johnnythesnake12"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":87,"author":{"gitId":"johnnythesnake12"},"content":"     * Delete tags from current tags of a person","lastModifiedDate":"2023-10-15"},{"lineNumber":88,"author":{"gitId":"johnnythesnake12"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":89,"author":{"gitId":"johnnythesnake12"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":90,"author":{"gitId":"johnnythesnake12"},"content":"    public void deleteTags(Set\u003cTag\u003e originalTags) {","lastModifiedDate":"2023-10-15"},{"lineNumber":91,"author":{"gitId":"johnnythesnake12"},"content":"        Set\u003cTag\u003e newTags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-10-15"},{"lineNumber":92,"author":{"gitId":"johnnythesnake12"},"content":"        for (Tag tag : originalTags) {","lastModifiedDate":"2023-10-15"},{"lineNumber":93,"author":{"gitId":"johnnythesnake12"},"content":"            if (!this.tags.contains(tag)) {","lastModifiedDate":"2023-10-15"},{"lineNumber":94,"author":{"gitId":"johnnythesnake12"},"content":"                newTags.add(tag);","lastModifiedDate":"2023-10-15"},{"lineNumber":95,"author":{"gitId":"johnnythesnake12"},"content":"            }","lastModifiedDate":"2023-10-15"},{"lineNumber":96,"author":{"gitId":"johnnythesnake12"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":97,"author":{"gitId":"johnnythesnake12"},"content":"        this.tags.clear();","lastModifiedDate":"2023-10-15"},{"lineNumber":98,"author":{"gitId":"johnnythesnake12"},"content":"        this.tags.addAll(newTags);","lastModifiedDate":"2023-10-15"},{"lineNumber":99,"author":{"gitId":"johnnythesnake12"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":100,"author":{"gitId":"johnnythesnake12"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":101,"author":{"gitId":"johnnythesnake12"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same name.","lastModifiedDate":"2020-12-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * This defines a weaker notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public boolean isSamePerson(Person otherPerson) {","lastModifiedDate":"2018-04-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        if (otherPerson \u003d\u003d this) {","lastModifiedDate":"2018-04-19"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        return otherPerson !\u003d null","lastModifiedDate":"2018-04-19"},{"lineNumber":112,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getName().equals(getName());","lastModifiedDate":"2020-12-18"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same identity and data fields.","lastModifiedDate":"2018-04-19"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     * This defines a stronger notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        if (!(other instanceof Person)) {","lastModifiedDate":"2018-01-10"},{"lineNumber":127,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        Person otherPerson \u003d (Person) other;","lastModifiedDate":"2018-01-10"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        return name.equals(otherPerson.name)","lastModifiedDate":"2023-07-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"                \u0026\u0026 phone.equals(otherPerson.phone)","lastModifiedDate":"2023-07-13"},{"lineNumber":133,"author":{"gitId":"-"},"content":"                \u0026\u0026 email.equals(otherPerson.email)","lastModifiedDate":"2023-07-13"},{"lineNumber":134,"author":{"gitId":"-"},"content":"                \u0026\u0026 address.equals(otherPerson.address)","lastModifiedDate":"2023-07-13"},{"lineNumber":135,"author":{"gitId":"zhanyang01"},"content":"                \u0026\u0026 tags.equals(otherPerson.tags)","lastModifiedDate":"2023-10-17"},{"lineNumber":136,"author":{"gitId":"zhanyang01"},"content":"                \u0026\u0026 preferredContact.equals(otherPerson.preferredContact);","lastModifiedDate":"2023-10-17"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2016-08-24"},{"lineNumber":142,"author":{"gitId":"zhanyang01"},"content":"        return Objects.hash(name, phone, email, address, tags, preferredContact);","lastModifiedDate":"2023-10-17"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"                .add(\"name\", name)","lastModifiedDate":"2019-02-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"                .add(\"phone\", phone)","lastModifiedDate":"2019-02-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"                .add(\"email\", email)","lastModifiedDate":"2019-02-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"                .add(\"address\", address)","lastModifiedDate":"2019-02-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"                .add(\"tags\", tags)","lastModifiedDate":"2019-02-23"},{"lineNumber":153,"author":{"gitId":"zhanyang01"},"content":"                .add(\"preferredContact\", preferredContact)","lastModifiedDate":"2023-10-17"},{"lineNumber":154,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":155,"author":{"gitId":"johnnythesnake12"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":158,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"johnnythesnake12":27,"zhanyang01":19,"-":112}},{"path":"src/main/java/seedu/address/model/person/Phone.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s phone number in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidPhone(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Phone {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"johnnythesnake12"},"content":"            \"Phone numbers should only should be exactly 8 digits long and begin with 6,8 or 9 in Singapore\u0027s context\";","lastModifiedDate":"2023-10-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\d{3,}\";","lastModifiedDate":"2023-10-18"},{"lineNumber":16,"author":{"gitId":"johnnythesnake12"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Constructs a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @param phone A valid phone number.","lastModifiedDate":"2017-05-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Phone(String phone) {","lastModifiedDate":"2017-05-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        checkArgument(isValidPhone(phone), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        value \u003d phone;","lastModifiedDate":"2018-08-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid phone number.","lastModifiedDate":"2018-04-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static boolean isValidPhone(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        if (!(other instanceof Phone)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        Phone otherPhone \u003d (Phone) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return value.equals(otherPhone.value);","lastModifiedDate":"2023-07-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"johnnythesnake12":2,"-":60}},{"path":"src/main/java/seedu/address/model/person/PreferredContact.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zhanyang01"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-10-17"},{"lineNumber":2,"author":{"gitId":"zhanyang01"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":3,"author":{"gitId":"zhanyang01"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"zhanyang01"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"zhanyang01"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"zhanyang01"},"content":"/**","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"zhanyang01"},"content":" * Represents a Person\u0027s preferred contact method in the address book.","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"zhanyang01"},"content":" */","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"zhanyang01"},"content":"public class PreferredContact {","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"zhanyang01"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"zhanyang01"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"zhanyang01"},"content":"            \"Preferred contact can take either phone or email, else it will be blank\";","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"zhanyang01"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":14,"author":{"gitId":"zhanyang01"},"content":"    public final String value;","lastModifiedDate":"2023-10-17"},{"lineNumber":15,"author":{"gitId":"zhanyang01"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"zhanyang01"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"zhanyang01"},"content":"     * Constructs a {@code Preferred Contact}.","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"zhanyang01"},"content":"     *","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"zhanyang01"},"content":"     * @param preferredContact of client","lastModifiedDate":"2023-10-17"},{"lineNumber":20,"author":{"gitId":"zhanyang01"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":21,"author":{"gitId":"zhanyang01"},"content":"    public PreferredContact(String preferredContact) {","lastModifiedDate":"2023-10-17"},{"lineNumber":22,"author":{"gitId":"zhanyang01"},"content":"        requireNonNull(preferredContact);","lastModifiedDate":"2023-10-17"},{"lineNumber":23,"author":{"gitId":"zhanyang01"},"content":"        checkArgument(isValidPreferredContact(preferredContact), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-17"},{"lineNumber":24,"author":{"gitId":"zhanyang01"},"content":"        value \u003d preferredContact;","lastModifiedDate":"2023-10-17"},{"lineNumber":25,"author":{"gitId":"zhanyang01"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":26,"author":{"gitId":"zhanyang01"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":27,"author":{"gitId":"zhanyang01"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":28,"author":{"gitId":"zhanyang01"},"content":"     * Returns true if a given string is a valid preferred contact.","lastModifiedDate":"2023-10-17"},{"lineNumber":29,"author":{"gitId":"zhanyang01"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":30,"author":{"gitId":"zhanyang01"},"content":"    public static boolean isValidPreferredContact(String test) {","lastModifiedDate":"2023-10-17"},{"lineNumber":31,"author":{"gitId":"zhanyang01"},"content":"        boolean result \u003d test.equals(\"phone\") || test.equals(\"email\") || test.equals(\"\");","lastModifiedDate":"2023-10-17"},{"lineNumber":32,"author":{"gitId":"zhanyang01"},"content":"        return result;","lastModifiedDate":"2023-10-17"},{"lineNumber":33,"author":{"gitId":"zhanyang01"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":34,"author":{"gitId":"zhanyang01"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":35,"author":{"gitId":"zhanyang01"},"content":"    @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":36,"author":{"gitId":"zhanyang01"},"content":"    public String toString() {","lastModifiedDate":"2023-10-17"},{"lineNumber":37,"author":{"gitId":"zhanyang01"},"content":"        return value;","lastModifiedDate":"2023-10-17"},{"lineNumber":38,"author":{"gitId":"zhanyang01"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":39,"author":{"gitId":"zhanyang01"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":40,"author":{"gitId":"zhanyang01"},"content":"    @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":41,"author":{"gitId":"zhanyang01"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-17"},{"lineNumber":42,"author":{"gitId":"zhanyang01"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-17"},{"lineNumber":43,"author":{"gitId":"zhanyang01"},"content":"            return true;","lastModifiedDate":"2023-10-17"},{"lineNumber":44,"author":{"gitId":"zhanyang01"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":45,"author":{"gitId":"zhanyang01"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":46,"author":{"gitId":"zhanyang01"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-17"},{"lineNumber":47,"author":{"gitId":"zhanyang01"},"content":"        if (!(other instanceof PreferredContact)) {","lastModifiedDate":"2023-10-17"},{"lineNumber":48,"author":{"gitId":"zhanyang01"},"content":"            return false;","lastModifiedDate":"2023-10-17"},{"lineNumber":49,"author":{"gitId":"zhanyang01"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":50,"author":{"gitId":"zhanyang01"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":51,"author":{"gitId":"zhanyang01"},"content":"        PreferredContact otherPreferredContact \u003d (PreferredContact) other;","lastModifiedDate":"2023-10-17"},{"lineNumber":52,"author":{"gitId":"zhanyang01"},"content":"        return value.equals(otherPreferredContact.value);","lastModifiedDate":"2023-10-17"},{"lineNumber":53,"author":{"gitId":"zhanyang01"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":54,"author":{"gitId":"zhanyang01"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":55,"author":{"gitId":"zhanyang01"},"content":"    @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":56,"author":{"gitId":"zhanyang01"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-17"},{"lineNumber":57,"author":{"gitId":"zhanyang01"},"content":"        return value.hashCode();","lastModifiedDate":"2023-10-17"},{"lineNumber":58,"author":{"gitId":"zhanyang01"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":59,"author":{"gitId":"zhanyang01"},"content":"}","lastModifiedDate":"2023-10-17"}],"authorContributionMap":{"zhanyang01":59}},{"path":"src/main/java/seedu/address/model/tag/Tag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.tag;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Tag in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; name is valid as declared in {@link #isValidTagName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Tag {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Tags names should be alphanumeric\";","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\p{Alnum}+\";","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public final String tagName;","lastModifiedDate":"2016-10-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Constructs a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @param tagName A valid tag name.","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public Tag(String tagName) {","lastModifiedDate":"2017-05-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        requireNonNull(tagName);","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        checkArgument(isValidTagName(tagName), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.tagName \u003d tagName;","lastModifiedDate":"2017-05-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid tag name.","lastModifiedDate":"2016-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static boolean isValidTagName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"zhanyang01"},"content":"    public String getTagName() {","lastModifiedDate":"2023-10-18"},{"lineNumber":36,"author":{"gitId":"zhanyang01"},"content":"        return this.tagName;","lastModifiedDate":"2023-10-18"},{"lineNumber":37,"author":{"gitId":"zhanyang01"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":38,"author":{"gitId":"LuahJunYang"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        if (!(other instanceof Tag)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        Tag otherTag \u003d (Tag) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return tagName.equals(otherTag.tagName);","lastModifiedDate":"2023-07-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return tagName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Format state as text for viewing.","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return \u0027[\u0027 + tagName + \u0027]\u0027;","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"LuahJunYang":1,"zhanyang01":3,"-":62}},{"path":"src/main/java/seedu/address/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.util;","lastModifiedDate":"2016-12-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2016-12-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2016-12-20"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2016-12-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2016-12-20"},{"lineNumber":14,"author":{"gitId":"zhanyang01"},"content":"import seedu.address.model.person.PreferredContact;","lastModifiedDate":"2023-10-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Contains utility methods for populating {@code AddressBook} with sample data.","lastModifiedDate":"2017-08-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":21,"author":{"gitId":"zhanyang01"},"content":"    public static final PreferredContact EMPTY_PREFERRED_CONTACT \u003d new PreferredContact(\"\");","lastModifiedDate":"2023-10-17"},{"lineNumber":22,"author":{"gitId":"zhanyang01"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static Person[] getSamplePersons() {","lastModifiedDate":"2016-12-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        return new Person[] {","lastModifiedDate":"2016-12-20"},{"lineNumber":25,"author":{"gitId":"zhanyang01"},"content":"            new Person(new Name(\"Alex Yeoh\"), new Phone(\"87438807\"),","lastModifiedDate":"2023-10-17"},{"lineNumber":26,"author":{"gitId":"zhanyang01"},"content":"                    new Email(\"alexyeoh@example.com\"),","lastModifiedDate":"2023-10-17"},{"lineNumber":27,"author":{"gitId":"-"},"content":"                    new Address(\"Blk 30 Geylang Street 29, #06-40\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":28,"author":{"gitId":"zhanyang01"},"content":"                    getTagSet(\"friends\"), EMPTY_PREFERRED_CONTACT),","lastModifiedDate":"2023-10-17"},{"lineNumber":29,"author":{"gitId":"zhanyang01"},"content":"            new Person(new Name(\"Bernice Yu\"), new Phone(\"99272758\"),","lastModifiedDate":"2023-10-17"},{"lineNumber":30,"author":{"gitId":"zhanyang01"},"content":"                    new Email(\"berniceyu@example.com\"),","lastModifiedDate":"2023-10-17"},{"lineNumber":31,"author":{"gitId":"-"},"content":"                    new Address(\"Blk 30 Lorong 3 Serangoon Gardens, #07-18\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":32,"author":{"gitId":"zhanyang01"},"content":"                    getTagSet(\"colleagues\", \"friends\"), EMPTY_PREFERRED_CONTACT),","lastModifiedDate":"2023-10-17"},{"lineNumber":33,"author":{"gitId":"zhanyang01"},"content":"            new Person(new Name(\"Charlotte Oliveiro\"), new Phone(\"93210283\"),","lastModifiedDate":"2023-10-17"},{"lineNumber":34,"author":{"gitId":"zhanyang01"},"content":"                    new Email(\"charlotte@example.com\"),","lastModifiedDate":"2023-10-17"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                    new Address(\"Blk 11 Ang Mo Kio Street 74, #11-04\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":36,"author":{"gitId":"zhanyang01"},"content":"                    getTagSet(\"neighbours\"), EMPTY_PREFERRED_CONTACT),","lastModifiedDate":"2023-10-17"},{"lineNumber":37,"author":{"gitId":"zhanyang01"},"content":"            new Person(new Name(\"David Li\"), new Phone(\"91031282\"),","lastModifiedDate":"2023-10-17"},{"lineNumber":38,"author":{"gitId":"zhanyang01"},"content":"                    new Email(\"lidavid@example.com\"),","lastModifiedDate":"2023-10-17"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                    new Address(\"Blk 436 Serangoon Gardens Street 26, #16-43\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":40,"author":{"gitId":"zhanyang01"},"content":"                    getTagSet(\"family\"), EMPTY_PREFERRED_CONTACT),","lastModifiedDate":"2023-10-17"},{"lineNumber":41,"author":{"gitId":"zhanyang01"},"content":"            new Person(new Name(\"Irfan Ibrahim\"), new Phone(\"92492021\"),","lastModifiedDate":"2023-10-17"},{"lineNumber":42,"author":{"gitId":"zhanyang01"},"content":"                    new Email(\"irfan@example.com\"),","lastModifiedDate":"2023-10-17"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                    new Address(\"Blk 47 Tampines Street 20, #17-35\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":44,"author":{"gitId":"zhanyang01"},"content":"                    getTagSet(\"classmates\"), EMPTY_PREFERRED_CONTACT),","lastModifiedDate":"2023-10-17"},{"lineNumber":45,"author":{"gitId":"zhanyang01"},"content":"            new Person(new Name(\"Roy Balakrishnan\"), new Phone(\"92624417\"),","lastModifiedDate":"2023-10-17"},{"lineNumber":46,"author":{"gitId":"zhanyang01"},"content":"                    new Email(\"royb@example.com\"),","lastModifiedDate":"2023-10-17"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                    new Address(\"Blk 45 Aljunied Street 85, #11-31\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":48,"author":{"gitId":"zhanyang01"},"content":"                    getTagSet(\"colleagues\"), EMPTY_PREFERRED_CONTACT),","lastModifiedDate":"2023-10-17"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            };","lastModifiedDate":"2016-12-20"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static ReadOnlyAddressBook getSampleAddressBook() {","lastModifiedDate":"2016-12-20"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        AddressBook sampleAb \u003d new AddressBook();","lastModifiedDate":"2017-04-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        for (Person samplePerson : getSamplePersons()) {","lastModifiedDate":"2016-12-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            sampleAb.addPerson(samplePerson);","lastModifiedDate":"2017-04-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return sampleAb;","lastModifiedDate":"2017-04-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Returns a tag set containing the list of strings given.","lastModifiedDate":"2017-03-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e getTagSet(String... strings) {","lastModifiedDate":"2017-05-30"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2018-01-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                .map(Tag::new)","lastModifiedDate":"2018-01-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2018-01-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"zhanyang01":21,"-":48}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedPerson.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"zhanyang01"},"content":"import seedu.address.model.person.PreferredContact;","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-10-17"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Person}.","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"class JsonAdaptedPerson {","lastModifiedDate":"2018-12-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Person\u0027s %s field is missing!\";","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final String name;","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final String phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final String email;","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private final String address;","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedTag\u003e tags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-09"},{"lineNumber":34,"author":{"gitId":"zhanyang01"},"content":"    private final String preferredContact;","lastModifiedDate":"2023-10-17"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedPerson} with the given person details.","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(@JsonProperty(\"name\") String name, @JsonProperty(\"phone\") String phone,","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            @JsonProperty(\"email\") String email, @JsonProperty(\"address\") String address,","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"zhanyang01"},"content":"            @JsonProperty(\"tags\") List\u003cJsonAdaptedTag\u003e tags,","lastModifiedDate":"2023-10-17"},{"lineNumber":43,"author":{"gitId":"zhanyang01"},"content":"            @JsonProperty(\"preferredContact\") String preferredContact) {","lastModifiedDate":"2023-10-17"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"zhanyang01"},"content":"        this.preferredContact \u003d preferredContact;","lastModifiedDate":"2023-10-17"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        if (tags !\u003d null) {","lastModifiedDate":"2023-01-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            this.tags.addAll(tags);","lastModifiedDate":"2023-01-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Converts a given {@code Person} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(Person source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        phone \u003d source.getPhone().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        email \u003d source.getEmail().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        address \u003d source.getAddress().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        tags.addAll(source.getTags().stream()","lastModifiedDate":"2023-01-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"zhanyang01"},"content":"        preferredContact \u003d source.getPreferredContact().value;","lastModifiedDate":"2023-10-17"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"zhanyang01"},"content":"     * Converts this Jackson-friendly adapted person object into the model\u0027s","lastModifiedDate":"2023-10-17"},{"lineNumber":70,"author":{"gitId":"zhanyang01"},"content":"     * {@code Person} object.","lastModifiedDate":"2023-10-17"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"zhanyang01"},"content":"     * @throws IllegalValueException if there were any data constraints violated in","lastModifiedDate":"2023-10-17"},{"lineNumber":73,"author":{"gitId":"zhanyang01"},"content":"     *                               the adapted person.","lastModifiedDate":"2023-10-17"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public Person toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        final List\u003cTag\u003e personTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        for (JsonAdaptedTag tag : tags) {","lastModifiedDate":"2023-01-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            personTags.add(tag.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        if (phone \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(phone)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        final Phone modelPhone \u003d new Phone(phone);","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        if (email \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(email)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        final Email modelEmail \u003d new Email(email);","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        if (address \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(address)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        final Address modelAddress \u003d new Address(address);","lastModifiedDate":"2018-08-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(personTags);","lastModifiedDate":"2018-08-13"},{"lineNumber":114,"author":{"gitId":"zhanyang01"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":115,"author":{"gitId":"zhanyang01"},"content":"        if (preferredContact \u003d\u003d null) {","lastModifiedDate":"2023-10-17"},{"lineNumber":116,"author":{"gitId":"zhanyang01"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2023-10-17"},{"lineNumber":117,"author":{"gitId":"zhanyang01"},"content":"                    PreferredContact.class.getSimpleName()));","lastModifiedDate":"2023-10-17"},{"lineNumber":118,"author":{"gitId":"zhanyang01"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":119,"author":{"gitId":"zhanyang01"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":120,"author":{"gitId":"zhanyang01"},"content":"        if (!PreferredContact.isValidPreferredContact(preferredContact)) {","lastModifiedDate":"2023-10-17"},{"lineNumber":121,"author":{"gitId":"zhanyang01"},"content":"            throw new IllegalValueException(PreferredContact.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-17"},{"lineNumber":122,"author":{"gitId":"zhanyang01"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":123,"author":{"gitId":"zhanyang01"},"content":"        final PreferredContact modelPreferredContact \u003d new PreferredContact(preferredContact);","lastModifiedDate":"2023-10-17"},{"lineNumber":124,"author":{"gitId":"zhanyang01"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":125,"author":{"gitId":"zhanyang01"},"content":"        return new Person(modelName, modelPhone, modelEmail, modelAddress, modelTags, modelPreferredContact);","lastModifiedDate":"2023-10-17"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"zhanyang01":22,"-":106}},{"path":"src/main/java/seedu/address/ui/PersonCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Comparator;","lastModifiedDate":"2019-01-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * An UI component that displays information of a {@code Person}.","lastModifiedDate":"2017-08-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class PersonCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"PersonListCard.fxml\";","lastModifiedDate":"2016-09-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25"},{"lineNumber":20,"author":{"gitId":"zhanyang01"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved","lastModifiedDate":"2023-10-17"},{"lineNumber":21,"author":{"gitId":"zhanyang01"},"content":"     * keywords in JavaFX.","lastModifiedDate":"2023-10-17"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2017-03-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2017-03-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-25"},{"lineNumber":25,"author":{"gitId":"zhanyang01"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe","lastModifiedDate":"2023-10-17"},{"lineNumber":26,"author":{"gitId":"zhanyang01"},"content":"     *      issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public final Person person;","lastModifiedDate":"2018-01-10"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Label name;","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private Label id;","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private Label phone;","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private Label address;","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private Label email;","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private FlowPane tags;","lastModifiedDate":"2016-12-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":47,"author":{"gitId":"zhanyang01"},"content":"     * Creates a {@code PersonCode} with the given {@code Person} and index to","lastModifiedDate":"2023-10-17"},{"lineNumber":48,"author":{"gitId":"zhanyang01"},"content":"     * display.","lastModifiedDate":"2023-10-17"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public PersonCard(Person person, int displayedIndex) {","lastModifiedDate":"2018-01-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        this.person \u003d person;","lastModifiedDate":"2017-07-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        name.setText(person.getName().fullName);","lastModifiedDate":"2017-12-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        phone.setText(person.getPhone().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        address.setText(person.getAddress().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        email.setText(person.getEmail().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        person.getTags().stream()","lastModifiedDate":"2019-01-02"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2019-01-02"},{"lineNumber":60,"author":{"gitId":"-"},"content":"                .forEach(tag -\u003e tags.getChildren().add(new Label(tag.tagName)));","lastModifiedDate":"2019-01-02"},{"lineNumber":61,"author":{"gitId":"zhanyang01"},"content":"        if (person.getPreferredContact().toString().equals(\"phone\")) {","lastModifiedDate":"2023-10-17"},{"lineNumber":62,"author":{"gitId":"zhanyang01"},"content":"            phone.setStyle(\"-fx-text-fill: yellow;\");","lastModifiedDate":"2023-10-17"},{"lineNumber":63,"author":{"gitId":"zhanyang01"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":64,"author":{"gitId":"zhanyang01"},"content":"        if (person.getPreferredContact().toString().equals(\"email\")) {","lastModifiedDate":"2023-10-17"},{"lineNumber":65,"author":{"gitId":"zhanyang01"},"content":"            email.setStyle(\"-fx-text-fill: yellow;\");","lastModifiedDate":"2023-10-17"},{"lineNumber":66,"author":{"gitId":"zhanyang01"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"zhanyang01":12,"-":56}},{"path":"src/main/java/seedu/address/ui/PersonListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-08-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2016-08-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Panel containing the list of persons.","lastModifiedDate":"2016-09-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class PersonListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"PersonListPanel.fxml\";","lastModifiedDate":"2016-09-14"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(PersonListPanel.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private ListView\u003cPerson\u003e personListView;","lastModifiedDate":"2018-02-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2020-05-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public PersonListPanel(ObservableList\u003cPerson\u003e personList) {","lastModifiedDate":"2019-01-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        personListView.setItems(personList);","lastModifiedDate":"2018-02-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        personListView.setCellFactory(listView -\u003e new PersonListViewCell());","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":33,"author":{"gitId":"zhanyang01"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Person} using","lastModifiedDate":"2023-10-17"},{"lineNumber":34,"author":{"gitId":"zhanyang01"},"content":"     * a {@code PersonCard}.","lastModifiedDate":"2023-10-17"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    class PersonListViewCell extends ListCell\u003cPerson\u003e {","lastModifiedDate":"2018-02-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        protected void updateItem(Person person, boolean empty) {","lastModifiedDate":"2018-02-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            super.updateItem(person, empty);","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            if (empty || person \u003d\u003d null) {","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                setGraphic(null);","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                setText(null);","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                setGraphic(new PersonCard(person, getIndex() + 1).getRoot());","lastModifiedDate":"2018-02-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"zhanyang01":2,"-":48}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2019-02-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-05-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-05-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class AddCommandTest {","lastModifiedDate":"2017-05-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void constructor_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddCommand(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void execute_personAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2017-05-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        ModelStubAcceptingPersonAdded modelStub \u003d new ModelStubAcceptingPersonAdded();","lastModifiedDate":"2017-05-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new AddCommand(validPerson).execute(modelStub);","lastModifiedDate":"2019-01-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertEquals(String.format(AddCommand.MESSAGE_SUCCESS, Messages.format(validPerson)),","lastModifiedDate":"2019-02-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                commandResult.getFeedbackToUser());","lastModifiedDate":"2019-02-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(validPerson), modelStub.personsAdded);","lastModifiedDate":"2017-05-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        AddCommand addCommand \u003d new AddCommand(validPerson);","lastModifiedDate":"2018-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        ModelStub modelStub \u003d new ModelStubWithPerson(validPerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, AddCommand.MESSAGE_DUPLICATE_PERSON, () -\u003e addCommand.execute(modelStub));","lastModifiedDate":"2019-05-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Person alice \u003d new PersonBuilder().withName(\"Alice\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Person bob \u003d new PersonBuilder().withName(\"Bob\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommand \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        AddCommand addBobCommand \u003d new AddCommand(bob);","lastModifiedDate":"2017-06-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommandCopy \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2017-06-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        AddCommand addCommand \u003d new AddCommand(ALICE);","lastModifiedDate":"2019-02-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        String expected \u003d AddCommand.class.getCanonicalName() + \"{toAdd\u003d\" + ALICE + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":84,"author":{"gitId":"johnnythesnake12"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertEquals(expected, addCommand.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2017-05-12"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2017-05-12"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2018-11-27"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-12"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":139,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-06"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        public void deletePerson(Person target) {","lastModifiedDate":"2018-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":149,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":159,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":164,"author":{"gitId":"-"},"content":"     * A Model stub that contains a single person.","lastModifiedDate":"2018-08-07"},{"lineNumber":165,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    private class ModelStubWithPerson extends ModelStub {","lastModifiedDate":"2018-08-07"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        private final Person person;","lastModifiedDate":"2018-08-07"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        ModelStubWithPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":170,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":171,"author":{"gitId":"-"},"content":"            this.person \u003d person;","lastModifiedDate":"2018-08-07"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":176,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":177,"author":{"gitId":"-"},"content":"            return this.person.isSamePerson(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":182,"author":{"gitId":"-"},"content":"     * A Model stub that always accept the person being added.","lastModifiedDate":"2017-05-12"},{"lineNumber":183,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    private class ModelStubAcceptingPersonAdded extends ModelStub {","lastModifiedDate":"2017-05-12"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        final ArrayList\u003cPerson\u003e personsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2017-05-12"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":189,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":190,"author":{"gitId":"-"},"content":"            return personsAdded.stream().anyMatch(person::isSamePerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-08"},{"lineNumber":195,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":196,"author":{"gitId":"-"},"content":"            personsAdded.add(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-04"},{"lineNumber":201,"author":{"gitId":"-"},"content":"            return new AddressBook();","lastModifiedDate":"2017-05-04"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":205,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"johnnythesnake12":1,"-":204}},{"path":"src/test/java/seedu/address/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-07-20"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2018-01-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-07-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-07-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2017-07-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2017-07-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_AMY \u003d \"11111111\";","lastModifiedDate":"2017-07-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_BOB \u003d \"22222222\";","lastModifiedDate":"2017-07-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_AMY \u003d \"amy@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_BOB \u003d \"bob@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_AMY \u003d \"Block 312, Amy Street 1\";","lastModifiedDate":"2017-07-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_BOB \u003d \"Block 123, Bobby Street 3\";","lastModifiedDate":"2017-07-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_HUSBAND \u003d \"husband\";","lastModifiedDate":"2017-07-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_FRIEND \u003d \"friend\";","lastModifiedDate":"2017-07-05"},{"lineNumber":39,"author":{"gitId":"zhanyang01"},"content":"    public static final String VALID_PREFERRED_CONTACT_AMY \u003d \"phone\";","lastModifiedDate":"2023-10-19"},{"lineNumber":40,"author":{"gitId":"zhanyang01"},"content":"    public static final String VALID_PREFERRED_CONTACT_BOB \u003d \"email\";","lastModifiedDate":"2023-10-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_AMY \u003d \" \" + PREFIX_PHONE + VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_BOB \u003d \" \" + PREFIX_PHONE + VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_AMY \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_BOB \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_AMY \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_BOB \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_FRIEND \u003d \" \" + PREFIX_TAG + VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_HUSBAND \u003d \" \" + PREFIX_TAG + VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2017-07-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static final String INVALID_PHONE_DESC \u003d \" \" + PREFIX_PHONE + \"911a\"; // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2017-07-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static final String INVALID_EMAIL_DESC \u003d \" \" + PREFIX_EMAIL + \"bob!yahoo\"; // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-07-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public static final String INVALID_ADDRESS_DESC \u003d \" \" + PREFIX_ADDRESS; // empty string not allowed for addresses","lastModifiedDate":"2017-07-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static final String INVALID_TAG_DESC \u003d \" \" + PREFIX_TAG + \"hubby*\"; // \u0027*\u0027 not allowed in tags","lastModifiedDate":"2017-07-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        DESC_AMY \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        DESC_BOB \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * - the address book, filtered person list and selected person in {@code actualModel} remain unchanged","lastModifiedDate":"2019-01-25"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        AddressBook expectedAddressBook \u003d new AddressBook(actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredPersonList());","lastModifiedDate":"2018-01-10"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2019-05-03"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddressBook, actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredPersonList());","lastModifiedDate":"2017-06-05"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show only the person at the given {@code targetIndex} in the","lastModifiedDate":"2018-01-31"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2018-01-31"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public static void showPersonAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2018-01-31"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredPersonList().size());","lastModifiedDate":"2018-01-31"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        Person person \u003d model.getFilteredPersonList().get(targetIndex.getZeroBased());","lastModifiedDate":"2018-01-31"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        final String[] splitName \u003d person.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-20"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2017-07-20"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        assertEquals(1, model.getFilteredPersonList().size());","lastModifiedDate":"2018-02-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":130,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"zhanyang01":2,"-":128}},{"path":"src/test/java/seedu/address/logic/commands/EditPersonDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorTest {","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptorWithSameValues \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(descriptorWithSameValues));","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(DESC_AMY));","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(null));","lastModifiedDate":"2017-05-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(5));","lastModifiedDate":"2017-05-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(DESC_BOB));","lastModifiedDate":"2017-05-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2019-02-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        String expected \u003d EditPersonDescriptor.class.getCanonicalName() + \"{name\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                + editPersonDescriptor.getName().orElse(null) + \", phone\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                + editPersonDescriptor.getPhone().orElse(null) + \", email\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                + editPersonDescriptor.getEmail().orElse(null) + \", address\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                + editPersonDescriptor.getAddress().orElse(null) + \", tags\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":68,"author":{"gitId":"aarontxz"},"content":"                + editPersonDescriptor.getTags().orElse(null) + \", preferredContact\u003d\"","lastModifiedDate":"2023-10-18"},{"lineNumber":69,"author":{"gitId":"aarontxz"},"content":"                + editPersonDescriptor.getPreferredContact().orElse(null) + \"}\";","lastModifiedDate":"2023-10-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertEquals(expected, editPersonDescriptor.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"aarontxz":2,"-":70}},{"path":"src/test/java/seedu/address/logic/commands/FileCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"aarontxz"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"aarontxz"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"aarontxz"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"aarontxz"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"aarontxz"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"aarontxz"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"aarontxz"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"aarontxz"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"aarontxz"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"aarontxz"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"aarontxz"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"aarontxz"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"aarontxz"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"aarontxz"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"aarontxz"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"aarontxz"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"aarontxz"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"aarontxz"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"aarontxz"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-10-12"},{"lineNumber":20,"author":{"gitId":"aarontxz"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"aarontxz"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":22,"author":{"gitId":"aarontxz"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"aarontxz"},"content":"/**","lastModifiedDate":"2023-10-12"},{"lineNumber":24,"author":{"gitId":"aarontxz"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2023-10-12"},{"lineNumber":25,"author":{"gitId":"aarontxz"},"content":" * {@code FileCommand}.","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"aarontxz"},"content":" */","lastModifiedDate":"2023-10-12"},{"lineNumber":27,"author":{"gitId":"aarontxz"},"content":"public class FileCommandTest {","lastModifiedDate":"2023-10-12"},{"lineNumber":28,"author":{"gitId":"aarontxz"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":29,"author":{"gitId":"aarontxz"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-12"},{"lineNumber":30,"author":{"gitId":"aarontxz"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":31,"author":{"gitId":"aarontxz"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":32,"author":{"gitId":"aarontxz"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2023-10-12"},{"lineNumber":33,"author":{"gitId":"aarontxz"},"content":"        Person personToFile \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2023-10-12"},{"lineNumber":34,"author":{"gitId":"aarontxz"},"content":"        FileCommand fileCommand \u003d new FileCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2023-10-12"},{"lineNumber":35,"author":{"gitId":"aarontxz"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":36,"author":{"gitId":"aarontxz"},"content":"        String expectedMessage \u003d String.format(FileCommand.OPEN_FILE_PERSON_SUCCESS,","lastModifiedDate":"2023-10-12"},{"lineNumber":37,"author":{"gitId":"aarontxz"},"content":"                Messages.format(personToFile));","lastModifiedDate":"2023-10-12"},{"lineNumber":38,"author":{"gitId":"aarontxz"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":39,"author":{"gitId":"aarontxz"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-12"},{"lineNumber":40,"author":{"gitId":"aarontxz"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":41,"author":{"gitId":"aarontxz"},"content":"        assertCommandSuccess(fileCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-12"},{"lineNumber":42,"author":{"gitId":"aarontxz"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":43,"author":{"gitId":"aarontxz"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":44,"author":{"gitId":"aarontxz"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":45,"author":{"gitId":"aarontxz"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2023-10-12"},{"lineNumber":46,"author":{"gitId":"aarontxz"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2023-10-12"},{"lineNumber":47,"author":{"gitId":"aarontxz"},"content":"        FileCommand fileCommand \u003d new FileCommand(outOfBoundIndex);","lastModifiedDate":"2023-10-12"},{"lineNumber":48,"author":{"gitId":"aarontxz"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":49,"author":{"gitId":"aarontxz"},"content":"        assertCommandFailure(fileCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-12"},{"lineNumber":50,"author":{"gitId":"aarontxz"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":51,"author":{"gitId":"aarontxz"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":52,"author":{"gitId":"aarontxz"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":53,"author":{"gitId":"aarontxz"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2023-10-12"},{"lineNumber":54,"author":{"gitId":"aarontxz"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2023-10-12"},{"lineNumber":55,"author":{"gitId":"aarontxz"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":56,"author":{"gitId":"aarontxz"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2023-10-12"},{"lineNumber":57,"author":{"gitId":"aarontxz"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2023-10-12"},{"lineNumber":58,"author":{"gitId":"aarontxz"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2023-10-12"},{"lineNumber":59,"author":{"gitId":"aarontxz"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":60,"author":{"gitId":"aarontxz"},"content":"        FileCommand fileCommand \u003d new FileCommand(outOfBoundIndex);","lastModifiedDate":"2023-10-12"},{"lineNumber":61,"author":{"gitId":"aarontxz"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":62,"author":{"gitId":"aarontxz"},"content":"        assertCommandFailure(fileCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-12"},{"lineNumber":63,"author":{"gitId":"aarontxz"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":64,"author":{"gitId":"aarontxz"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":65,"author":{"gitId":"aarontxz"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":66,"author":{"gitId":"aarontxz"},"content":"    public void equals() {","lastModifiedDate":"2023-10-12"},{"lineNumber":67,"author":{"gitId":"aarontxz"},"content":"        FileCommand fileFirstCommand \u003d new FileCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2023-10-12"},{"lineNumber":68,"author":{"gitId":"aarontxz"},"content":"        FileCommand fileSecondCommand \u003d new FileCommand(INDEX_SECOND_PERSON);","lastModifiedDate":"2023-10-12"},{"lineNumber":69,"author":{"gitId":"aarontxz"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":70,"author":{"gitId":"aarontxz"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-12"},{"lineNumber":71,"author":{"gitId":"aarontxz"},"content":"        assertTrue(fileFirstCommand.equals(fileFirstCommand));","lastModifiedDate":"2023-10-12"},{"lineNumber":72,"author":{"gitId":"aarontxz"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":73,"author":{"gitId":"aarontxz"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-12"},{"lineNumber":74,"author":{"gitId":"aarontxz"},"content":"        FileCommand fileFirstCommandCopy \u003d new FileCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2023-10-12"},{"lineNumber":75,"author":{"gitId":"aarontxz"},"content":"        assertTrue(fileFirstCommand.equals(fileFirstCommandCopy));","lastModifiedDate":"2023-10-12"},{"lineNumber":76,"author":{"gitId":"aarontxz"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":77,"author":{"gitId":"aarontxz"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-12"},{"lineNumber":78,"author":{"gitId":"aarontxz"},"content":"        assertFalse(fileFirstCommand.equals(1));","lastModifiedDate":"2023-10-12"},{"lineNumber":79,"author":{"gitId":"aarontxz"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":80,"author":{"gitId":"aarontxz"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-12"},{"lineNumber":81,"author":{"gitId":"aarontxz"},"content":"        assertFalse(fileFirstCommand.equals(null));","lastModifiedDate":"2023-10-12"},{"lineNumber":82,"author":{"gitId":"aarontxz"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":83,"author":{"gitId":"aarontxz"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2023-10-12"},{"lineNumber":84,"author":{"gitId":"aarontxz"},"content":"        assertFalse(fileFirstCommand.equals(fileSecondCommand));","lastModifiedDate":"2023-10-12"},{"lineNumber":85,"author":{"gitId":"aarontxz"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":86,"author":{"gitId":"aarontxz"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":87,"author":{"gitId":"aarontxz"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":88,"author":{"gitId":"aarontxz"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-12"},{"lineNumber":89,"author":{"gitId":"aarontxz"},"content":"        Index targetIndex \u003d Index.fromOneBased(1);","lastModifiedDate":"2023-10-12"},{"lineNumber":90,"author":{"gitId":"aarontxz"},"content":"        FileCommand fileCommand \u003d new FileCommand(targetIndex);","lastModifiedDate":"2023-10-12"},{"lineNumber":91,"author":{"gitId":"aarontxz"},"content":"        String expected \u003d FileCommand.class.getCanonicalName() + \"{targetIndex\u003d\" + targetIndex + \"}\";","lastModifiedDate":"2023-10-12"},{"lineNumber":92,"author":{"gitId":"aarontxz"},"content":"        assertEquals(expected, fileCommand.toString());","lastModifiedDate":"2023-10-12"},{"lineNumber":93,"author":{"gitId":"aarontxz"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":94,"author":{"gitId":"aarontxz"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":95,"author":{"gitId":"aarontxz"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"aarontxz":95}},{"path":"src/test/java/seedu/address/logic/commands/PreferredContactCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"zhanyang01"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-19"},{"lineNumber":2,"author":{"gitId":"zhanyang01"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":3,"author":{"gitId":"zhanyang01"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-19"},{"lineNumber":4,"author":{"gitId":"zhanyang01"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-19"},{"lineNumber":5,"author":{"gitId":"zhanyang01"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PREFERRED_CONTACT_AMY;","lastModifiedDate":"2023-10-19"},{"lineNumber":6,"author":{"gitId":"zhanyang01"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PREFERRED_CONTACT_BOB;","lastModifiedDate":"2023-10-19"},{"lineNumber":7,"author":{"gitId":"zhanyang01"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-10-19"},{"lineNumber":8,"author":{"gitId":"zhanyang01"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2023-10-19"},{"lineNumber":9,"author":{"gitId":"zhanyang01"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-10-19"},{"lineNumber":10,"author":{"gitId":"zhanyang01"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2023-10-19"},{"lineNumber":11,"author":{"gitId":"zhanyang01"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2023-10-19"},{"lineNumber":12,"author":{"gitId":"zhanyang01"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":13,"author":{"gitId":"zhanyang01"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-19"},{"lineNumber":14,"author":{"gitId":"zhanyang01"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":15,"author":{"gitId":"zhanyang01"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-19"},{"lineNumber":16,"author":{"gitId":"zhanyang01"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-19"},{"lineNumber":17,"author":{"gitId":"zhanyang01"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-19"},{"lineNumber":18,"author":{"gitId":"zhanyang01"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-10-19"},{"lineNumber":19,"author":{"gitId":"zhanyang01"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-10-19"},{"lineNumber":20,"author":{"gitId":"zhanyang01"},"content":"import seedu.address.model.person.PreferredContact;","lastModifiedDate":"2023-10-19"},{"lineNumber":21,"author":{"gitId":"zhanyang01"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":22,"author":{"gitId":"zhanyang01"},"content":"/**","lastModifiedDate":"2023-10-19"},{"lineNumber":23,"author":{"gitId":"zhanyang01"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2023-10-19"},{"lineNumber":24,"author":{"gitId":"zhanyang01"},"content":" * RemarkCommand.","lastModifiedDate":"2023-10-19"},{"lineNumber":25,"author":{"gitId":"zhanyang01"},"content":" */","lastModifiedDate":"2023-10-19"},{"lineNumber":26,"author":{"gitId":"zhanyang01"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":27,"author":{"gitId":"zhanyang01"},"content":"public class PreferredContactCommandTest {","lastModifiedDate":"2023-10-19"},{"lineNumber":28,"author":{"gitId":"zhanyang01"},"content":"    private static final String PREFERREDCONTACT_STUB \u003d \"\";","lastModifiedDate":"2023-10-19"},{"lineNumber":29,"author":{"gitId":"zhanyang01"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":30,"author":{"gitId":"zhanyang01"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-19"},{"lineNumber":31,"author":{"gitId":"zhanyang01"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":32,"author":{"gitId":"zhanyang01"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":33,"author":{"gitId":"zhanyang01"},"content":"    public void execute_invalidPersonIndexUnfilteredList_failure() {","lastModifiedDate":"2023-10-19"},{"lineNumber":34,"author":{"gitId":"zhanyang01"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2023-10-19"},{"lineNumber":35,"author":{"gitId":"zhanyang01"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":36,"author":{"gitId":"zhanyang01"},"content":"        PreferredContactCommand preferredContactCommand \u003d new PreferredContactCommand(outOfBoundIndex,","lastModifiedDate":"2023-10-19"},{"lineNumber":37,"author":{"gitId":"zhanyang01"},"content":"                new PreferredContact(VALID_PREFERRED_CONTACT_BOB));","lastModifiedDate":"2023-10-19"},{"lineNumber":38,"author":{"gitId":"zhanyang01"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":39,"author":{"gitId":"zhanyang01"},"content":"        assertCommandFailure(preferredContactCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-19"},{"lineNumber":40,"author":{"gitId":"zhanyang01"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":41,"author":{"gitId":"zhanyang01"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":42,"author":{"gitId":"zhanyang01"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":43,"author":{"gitId":"zhanyang01"},"content":"    public void execute_invalidPersonIndexFilteredList_failure() {","lastModifiedDate":"2023-10-19"},{"lineNumber":44,"author":{"gitId":"zhanyang01"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2023-10-19"},{"lineNumber":45,"author":{"gitId":"zhanyang01"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":46,"author":{"gitId":"zhanyang01"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2023-10-19"},{"lineNumber":47,"author":{"gitId":"zhanyang01"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2023-10-19"},{"lineNumber":48,"author":{"gitId":"zhanyang01"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2023-10-19"},{"lineNumber":49,"author":{"gitId":"zhanyang01"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":50,"author":{"gitId":"zhanyang01"},"content":"        PreferredContactCommand preferredContactCommand \u003d new PreferredContactCommand(","lastModifiedDate":"2023-10-19"},{"lineNumber":51,"author":{"gitId":"zhanyang01"},"content":"                outOfBoundIndex,","lastModifiedDate":"2023-10-19"},{"lineNumber":52,"author":{"gitId":"zhanyang01"},"content":"                new PreferredContact(VALID_PREFERRED_CONTACT_BOB));","lastModifiedDate":"2023-10-19"},{"lineNumber":53,"author":{"gitId":"zhanyang01"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":54,"author":{"gitId":"zhanyang01"},"content":"        assertCommandFailure(preferredContactCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-19"},{"lineNumber":55,"author":{"gitId":"zhanyang01"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":56,"author":{"gitId":"zhanyang01"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":57,"author":{"gitId":"zhanyang01"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":58,"author":{"gitId":"zhanyang01"},"content":"    public void equals() {","lastModifiedDate":"2023-10-19"},{"lineNumber":59,"author":{"gitId":"zhanyang01"},"content":"        final PreferredContactCommand standardCommand \u003d new PreferredContactCommand(","lastModifiedDate":"2023-10-19"},{"lineNumber":60,"author":{"gitId":"zhanyang01"},"content":"                INDEX_FIRST_PERSON,","lastModifiedDate":"2023-10-19"},{"lineNumber":61,"author":{"gitId":"zhanyang01"},"content":"                new PreferredContact(VALID_PREFERRED_CONTACT_AMY));","lastModifiedDate":"2023-10-19"},{"lineNumber":62,"author":{"gitId":"zhanyang01"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":63,"author":{"gitId":"zhanyang01"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-19"},{"lineNumber":64,"author":{"gitId":"zhanyang01"},"content":"        PreferredContactCommand commandWithSameValues \u003d new PreferredContactCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2023-10-19"},{"lineNumber":65,"author":{"gitId":"zhanyang01"},"content":"                new PreferredContact(VALID_PREFERRED_CONTACT_AMY));","lastModifiedDate":"2023-10-19"},{"lineNumber":66,"author":{"gitId":"zhanyang01"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2023-10-19"},{"lineNumber":67,"author":{"gitId":"zhanyang01"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":68,"author":{"gitId":"zhanyang01"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-19"},{"lineNumber":69,"author":{"gitId":"zhanyang01"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2023-10-19"},{"lineNumber":70,"author":{"gitId":"zhanyang01"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":71,"author":{"gitId":"zhanyang01"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-19"},{"lineNumber":72,"author":{"gitId":"zhanyang01"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2023-10-19"},{"lineNumber":73,"author":{"gitId":"zhanyang01"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":74,"author":{"gitId":"zhanyang01"},"content":"        // different remark -\u003e returns false","lastModifiedDate":"2023-10-19"},{"lineNumber":75,"author":{"gitId":"zhanyang01"},"content":"        assertFalse(standardCommand.equals(","lastModifiedDate":"2023-10-19"},{"lineNumber":76,"author":{"gitId":"zhanyang01"},"content":"                new PreferredContactCommand(","lastModifiedDate":"2023-10-19"},{"lineNumber":77,"author":{"gitId":"zhanyang01"},"content":"                        INDEX_FIRST_PERSON,","lastModifiedDate":"2023-10-19"},{"lineNumber":78,"author":{"gitId":"zhanyang01"},"content":"                        new PreferredContact(VALID_PREFERRED_CONTACT_BOB))));","lastModifiedDate":"2023-10-19"},{"lineNumber":79,"author":{"gitId":"zhanyang01"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":80,"author":{"gitId":"zhanyang01"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2023-10-19"},{"lineNumber":81,"author":{"gitId":"zhanyang01"},"content":"        assertFalse(standardCommand.equals(","lastModifiedDate":"2023-10-19"},{"lineNumber":82,"author":{"gitId":"zhanyang01"},"content":"                new PreferredContactCommand(","lastModifiedDate":"2023-10-19"},{"lineNumber":83,"author":{"gitId":"zhanyang01"},"content":"                        INDEX_SECOND_PERSON,","lastModifiedDate":"2023-10-19"},{"lineNumber":84,"author":{"gitId":"zhanyang01"},"content":"                        new PreferredContact(VALID_PREFERRED_CONTACT_AMY))));","lastModifiedDate":"2023-10-19"},{"lineNumber":85,"author":{"gitId":"zhanyang01"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":86,"author":{"gitId":"zhanyang01"},"content":"        // different object type -\u003e returns false","lastModifiedDate":"2023-10-19"},{"lineNumber":87,"author":{"gitId":"zhanyang01"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2023-10-19"},{"lineNumber":88,"author":{"gitId":"zhanyang01"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":89,"author":{"gitId":"zhanyang01"},"content":"}","lastModifiedDate":"2023-10-19"}],"authorContributionMap":{"zhanyang01":89}},{"path":"src/test/java/seedu/address/logic/parser/AddressBookParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-07-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-06-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-06-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":22,"author":{"gitId":"aarontxz"},"content":"import seedu.address.logic.commands.FileCommand;","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-06-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonUtil;","lastModifiedDate":"2017-06-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class AddressBookParserTest {","lastModifiedDate":"2017-07-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private final AddressBookParser parser \u003d new AddressBookParser();","lastModifiedDate":"2017-07-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void parseCommand_add() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        AddCommand command \u003d (AddCommand) parser.parseCommand(PersonUtil.getAddCommand(person));","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertEquals(new AddCommand(person), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD) instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD + \" 3\") instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void parseCommand_delete() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        DeleteCommand command \u003d (DeleteCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"                DeleteCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased());","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertEquals(new DeleteCommand(INDEX_FIRST_PERSON), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void parseCommand_edit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(person).build();","lastModifiedDate":"2017-06-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        EditCommand command \u003d (EditCommand) parser.parseCommand(EditCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                + INDEX_FIRST_PERSON.getOneBased() + \" \" + PersonUtil.getEditPersonDescriptorDetails(descriptor));","lastModifiedDate":"2018-03-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertEquals(new EditCommand(INDEX_FIRST_PERSON, descriptor), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void parseCommand_find() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2017-06-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        FindCommand command \u003d (FindCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"                FindCommand.COMMAND_WORD + \" \" + keywords.stream().collect(Collectors.joining(\" \")));","lastModifiedDate":"2017-06-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertEquals(new FindCommand(new NameContainsKeywordsPredicate(keywords)), command);","lastModifiedDate":"2017-06-12"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void parseCommand_list() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD) instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD + \" 3\") instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"aarontxz"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":93,"author":{"gitId":"aarontxz"},"content":"    public void parseCommand_file() throws Exception {","lastModifiedDate":"2023-10-12"},{"lineNumber":94,"author":{"gitId":"aarontxz"},"content":"        FileCommand command \u003d (FileCommand) parser.parseCommand(","lastModifiedDate":"2023-10-12"},{"lineNumber":95,"author":{"gitId":"aarontxz"},"content":"                FileCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased());","lastModifiedDate":"2023-10-12"},{"lineNumber":96,"author":{"gitId":"aarontxz"},"content":"        assertEquals(new FileCommand(INDEX_FIRST_PERSON), command);","lastModifiedDate":"2023-10-12"},{"lineNumber":97,"author":{"gitId":"aarontxz"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":98,"author":{"gitId":"aarontxz"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2019-03-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"aarontxz":8,"-":101}},{"path":"src/test/java/seedu/address/logic/parser/FileCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"aarontxz"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"aarontxz"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"aarontxz"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"aarontxz"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"aarontxz"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"aarontxz"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"aarontxz"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"aarontxz"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"aarontxz"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"aarontxz"},"content":"import seedu.address.logic.commands.FileCommand;","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"aarontxz"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"aarontxz"},"content":"/**","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"aarontxz"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"aarontxz"},"content":" * outside the DeleteCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"aarontxz"},"content":" * same path through the DeleteCommand, and therefore we test only one of them.","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"aarontxz"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"aarontxz"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"aarontxz"},"content":" */","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"aarontxz"},"content":"public class FileCommandParserTest {","lastModifiedDate":"2023-10-12"},{"lineNumber":20,"author":{"gitId":"aarontxz"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"aarontxz"},"content":"    private FileCommandParser parser \u003d new FileCommandParser();","lastModifiedDate":"2023-10-12"},{"lineNumber":22,"author":{"gitId":"aarontxz"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"aarontxz"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":24,"author":{"gitId":"aarontxz"},"content":"    public void parse_validArgs_returnsFileCommand() {","lastModifiedDate":"2023-10-12"},{"lineNumber":25,"author":{"gitId":"aarontxz"},"content":"        assertParseSuccess(parser, \"1\", new FileCommand(INDEX_FIRST_PERSON));","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"aarontxz"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":27,"author":{"gitId":"aarontxz"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":28,"author":{"gitId":"aarontxz"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":29,"author":{"gitId":"aarontxz"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2023-10-12"},{"lineNumber":30,"author":{"gitId":"aarontxz"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT, FileCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-12"},{"lineNumber":31,"author":{"gitId":"aarontxz"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":32,"author":{"gitId":"aarontxz"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"aarontxz":32}},{"path":"src/test/java/seedu/address/logic/parser/PreferredContactCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"zhanyang01"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-19"},{"lineNumber":2,"author":{"gitId":"zhanyang01"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":3,"author":{"gitId":"zhanyang01"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-19"},{"lineNumber":4,"author":{"gitId":"zhanyang01"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PREFERRED_CONTACT;","lastModifiedDate":"2023-10-19"},{"lineNumber":5,"author":{"gitId":"zhanyang01"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-10-19"},{"lineNumber":6,"author":{"gitId":"zhanyang01"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-10-19"},{"lineNumber":7,"author":{"gitId":"zhanyang01"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-10-19"},{"lineNumber":8,"author":{"gitId":"zhanyang01"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":9,"author":{"gitId":"zhanyang01"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-19"},{"lineNumber":10,"author":{"gitId":"zhanyang01"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":11,"author":{"gitId":"zhanyang01"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-19"},{"lineNumber":12,"author":{"gitId":"zhanyang01"},"content":"import seedu.address.logic.commands.PreferredContactCommand;","lastModifiedDate":"2023-10-19"},{"lineNumber":13,"author":{"gitId":"zhanyang01"},"content":"import seedu.address.model.person.PreferredContact;","lastModifiedDate":"2023-10-19"},{"lineNumber":14,"author":{"gitId":"zhanyang01"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":15,"author":{"gitId":"zhanyang01"},"content":"public class PreferredContactCommandParserTest {","lastModifiedDate":"2023-10-19"},{"lineNumber":16,"author":{"gitId":"zhanyang01"},"content":"    private PreferredContactCommandParser parser \u003d new PreferredContactCommandParser();","lastModifiedDate":"2023-10-19"},{"lineNumber":17,"author":{"gitId":"zhanyang01"},"content":"    private final String nonEmptyPreferredContact \u003d \"phone\";","lastModifiedDate":"2023-10-19"},{"lineNumber":18,"author":{"gitId":"zhanyang01"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":19,"author":{"gitId":"zhanyang01"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":20,"author":{"gitId":"zhanyang01"},"content":"    public void parse_indexSpecified_success() {","lastModifiedDate":"2023-10-19"},{"lineNumber":21,"author":{"gitId":"zhanyang01"},"content":"        // have PreferredContact","lastModifiedDate":"2023-10-19"},{"lineNumber":22,"author":{"gitId":"zhanyang01"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2023-10-19"},{"lineNumber":23,"author":{"gitId":"zhanyang01"},"content":"        String userInput \u003d targetIndex.getOneBased() + \" \" + PREFIX_PREFERRED_CONTACT + nonEmptyPreferredContact;","lastModifiedDate":"2023-10-19"},{"lineNumber":24,"author":{"gitId":"zhanyang01"},"content":"        PreferredContactCommand expectedCommand \u003d new PreferredContactCommand(targetIndex,","lastModifiedDate":"2023-10-19"},{"lineNumber":25,"author":{"gitId":"zhanyang01"},"content":"                new PreferredContact(nonEmptyPreferredContact));","lastModifiedDate":"2023-10-19"},{"lineNumber":26,"author":{"gitId":"zhanyang01"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-10-19"},{"lineNumber":27,"author":{"gitId":"zhanyang01"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":28,"author":{"gitId":"zhanyang01"},"content":"        // no PreferredContact","lastModifiedDate":"2023-10-19"},{"lineNumber":29,"author":{"gitId":"zhanyang01"},"content":"        userInput \u003d targetIndex.getOneBased() + \" \" + PREFIX_PREFERRED_CONTACT;","lastModifiedDate":"2023-10-19"},{"lineNumber":30,"author":{"gitId":"zhanyang01"},"content":"        expectedCommand \u003d new PreferredContactCommand(targetIndex, new PreferredContact(\"\"));","lastModifiedDate":"2023-10-19"},{"lineNumber":31,"author":{"gitId":"zhanyang01"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-10-19"},{"lineNumber":32,"author":{"gitId":"zhanyang01"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":33,"author":{"gitId":"zhanyang01"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":34,"author":{"gitId":"zhanyang01"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":35,"author":{"gitId":"zhanyang01"},"content":"    public void parse_missingCompulsoryField_failure() {","lastModifiedDate":"2023-10-19"},{"lineNumber":36,"author":{"gitId":"zhanyang01"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, PreferredContactCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-10-19"},{"lineNumber":37,"author":{"gitId":"zhanyang01"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":38,"author":{"gitId":"zhanyang01"},"content":"        // no parameters","lastModifiedDate":"2023-10-19"},{"lineNumber":39,"author":{"gitId":"zhanyang01"},"content":"        assertParseFailure(parser, PreferredContactCommand.COMMAND_WORD, expectedMessage);","lastModifiedDate":"2023-10-19"},{"lineNumber":40,"author":{"gitId":"zhanyang01"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":41,"author":{"gitId":"zhanyang01"},"content":"        // no index","lastModifiedDate":"2023-10-19"},{"lineNumber":42,"author":{"gitId":"zhanyang01"},"content":"        assertParseFailure(parser, PreferredContactCommand.COMMAND_WORD + \" \" + nonEmptyPreferredContact,","lastModifiedDate":"2023-10-19"},{"lineNumber":43,"author":{"gitId":"zhanyang01"},"content":"                expectedMessage);","lastModifiedDate":"2023-10-19"},{"lineNumber":44,"author":{"gitId":"zhanyang01"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":45,"author":{"gitId":"zhanyang01"},"content":"}","lastModifiedDate":"2023-10-19"}],"authorContributionMap":{"zhanyang01":45}},{"path":"src/test/java/seedu/address/model/person/PersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2018-03-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2018-04-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2018-04-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-03-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class PersonTest {","lastModifiedDate":"2018-03-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2018-03-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e person.getTags().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void isSamePerson() {","lastModifiedDate":"2018-04-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // same name, all other attributes different -\u003e returns true","lastModifiedDate":"2020-12-18"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2020-12-18"},{"lineNumber":37,"author":{"gitId":"-"},"content":"                .withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2020-12-18"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2020-12-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // different name, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // name differs in case, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        Person editedBob \u003d new PersonBuilder(BOB).withName(VALID_NAME_BOB.toLowerCase()).build();","lastModifiedDate":"2020-12-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertFalse(BOB.isSamePerson(editedBob));","lastModifiedDate":"2020-12-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // name has trailing spaces, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        String nameWithTrailingSpaces \u003d VALID_NAME_BOB + \" \";","lastModifiedDate":"2020-12-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        editedBob \u003d new PersonBuilder(BOB).withName(nameWithTrailingSpaces).build();","lastModifiedDate":"2020-12-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertFalse(BOB.isSamePerson(editedBob));","lastModifiedDate":"2020-12-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-04-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        Person aliceCopy \u003d new PersonBuilder(ALICE).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(aliceCopy));","lastModifiedDate":"2018-04-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(5));","lastModifiedDate":"2018-04-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(BOB));","lastModifiedDate":"2018-04-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2018-04-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2018-04-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        String expected \u003d Person.class.getCanonicalName() + \"{name\u003d\" + ALICE.getName() + \", phone\u003d\" + ALICE.getPhone()","lastModifiedDate":"2019-02-23"},{"lineNumber":96,"author":{"gitId":"zhanyang01"},"content":"                + \", email\u003d\" + ALICE.getEmail() + \", address\u003d\" + ALICE.getAddress() + \", tags\u003d\" + ALICE.getTags()","lastModifiedDate":"2023-10-18"},{"lineNumber":97,"author":{"gitId":"zhanyang01"},"content":"                + \", preferredContact\u003d\" + ALICE.getPreferredContact() + \"}\";","lastModifiedDate":"2023-10-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertEquals(expected, ALICE.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"zhanyang01":2,"-":98}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedPersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.storage.JsonAdaptedPerson.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"zhanyang01"},"content":"import seedu.address.model.person.PreferredContact;","lastModifiedDate":"2023-10-17"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class JsonAdaptedPersonTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"zhanyang01"},"content":"    private static final String INVALID_PREFERRED_CONTACT \u003d \"quack\";","lastModifiedDate":"2023-10-17"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d BENSON.getName().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d BENSON.getPhone().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d BENSON.getEmail().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d BENSON.getAddress().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final List\u003cJsonAdaptedTag\u003e VALID_TAGS \u003d BENSON.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"zhanyang01"},"content":"    private static final String VALID_PREFERRED_CONTACT \u003d BENSON.getPreferredContact().toString();","lastModifiedDate":"2023-10-17"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void toModelType_validPersonDetails_returnsPerson() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(BENSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertEquals(BENSON, person.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"zhanyang01"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(INVALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2023-10-17"},{"lineNumber":47,"author":{"gitId":"zhanyang01"},"content":"                VALID_TAGS, VALID_PREFERRED_CONTACT);","lastModifiedDate":"2023-10-17"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"zhanyang01"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(null, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_TAGS,","lastModifiedDate":"2023-10-17"},{"lineNumber":55,"author":{"gitId":"zhanyang01"},"content":"                VALID_PREFERRED_CONTACT);","lastModifiedDate":"2023-10-17"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"zhanyang01"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, INVALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2023-10-17"},{"lineNumber":63,"author":{"gitId":"zhanyang01"},"content":"                VALID_TAGS, VALID_PREFERRED_CONTACT);","lastModifiedDate":"2023-10-17"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Phone.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void toModelType_nullPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"zhanyang01"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, null, VALID_EMAIL, VALID_ADDRESS, VALID_TAGS,","lastModifiedDate":"2023-10-17"},{"lineNumber":71,"author":{"gitId":"zhanyang01"},"content":"                VALID_PREFERRED_CONTACT);","lastModifiedDate":"2023-10-17"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void toModelType_invalidEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"zhanyang01"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, INVALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2023-10-17"},{"lineNumber":79,"author":{"gitId":"zhanyang01"},"content":"                VALID_TAGS, VALID_PREFERRED_CONTACT);","lastModifiedDate":"2023-10-17"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Email.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void toModelType_nullEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"zhanyang01"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, null, VALID_ADDRESS, VALID_TAGS,","lastModifiedDate":"2023-10-17"},{"lineNumber":87,"author":{"gitId":"zhanyang01"},"content":"                VALID_PREFERRED_CONTACT);","lastModifiedDate":"2023-10-17"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void toModelType_invalidAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"zhanyang01"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, INVALID_ADDRESS,","lastModifiedDate":"2023-10-17"},{"lineNumber":95,"author":{"gitId":"zhanyang01"},"content":"                VALID_TAGS, VALID_PREFERRED_CONTACT);","lastModifiedDate":"2023-10-17"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Address.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public void toModelType_nullAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"zhanyang01"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, null, VALID_TAGS,","lastModifiedDate":"2023-10-17"},{"lineNumber":103,"author":{"gitId":"zhanyang01"},"content":"                VALID_PREFERRED_CONTACT);","lastModifiedDate":"2023-10-17"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void toModelType_invalidTags_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        List\u003cJsonAdaptedTag\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        invalidTags.add(new JsonAdaptedTag(INVALID_TAG));","lastModifiedDate":"2018-08-13"},{"lineNumber":112,"author":{"gitId":"zhanyang01"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2023-10-17"},{"lineNumber":113,"author":{"gitId":"zhanyang01"},"content":"                invalidTags, VALID_PREFERRED_CONTACT);","lastModifiedDate":"2023-10-17"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":117,"author":{"gitId":"zhanyang01"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":118,"author":{"gitId":"zhanyang01"},"content":"    public void toModelType_invalidPreferredContact_throwsIllegalValueException() {","lastModifiedDate":"2023-10-17"},{"lineNumber":119,"author":{"gitId":"zhanyang01"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2023-10-17"},{"lineNumber":120,"author":{"gitId":"zhanyang01"},"content":"                VALID_TAGS, INVALID_PREFERRED_CONTACT);","lastModifiedDate":"2023-10-17"},{"lineNumber":121,"author":{"gitId":"zhanyang01"},"content":"        String expectedMessage \u003d PreferredContact.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-10-17"},{"lineNumber":122,"author":{"gitId":"zhanyang01"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2023-10-17"},{"lineNumber":123,"author":{"gitId":"zhanyang01"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":124,"author":{"gitId":"zhanyang01"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":125,"author":{"gitId":"zhanyang01"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":126,"author":{"gitId":"zhanyang01"},"content":"    public void toModelType_nullPreferredContact_throwsIllegalValueException() {","lastModifiedDate":"2023-10-17"},{"lineNumber":127,"author":{"gitId":"zhanyang01"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2023-10-17"},{"lineNumber":128,"author":{"gitId":"zhanyang01"},"content":"                VALID_TAGS, null);","lastModifiedDate":"2023-10-17"},{"lineNumber":129,"author":{"gitId":"zhanyang01"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, PreferredContact.class.getSimpleName());","lastModifiedDate":"2023-10-17"},{"lineNumber":130,"author":{"gitId":"zhanyang01"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2023-10-17"},{"lineNumber":131,"author":{"gitId":"zhanyang01"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":132,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"zhanyang01":36,"-":96}},{"path":"src/test/java/seedu/address/testutil/PersonBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-12-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-04-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-01-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-01-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-01-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-04-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-01-18"},{"lineNumber":11,"author":{"gitId":"zhanyang01"},"content":"import seedu.address.model.person.PreferredContact;","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2017-04-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * A utility class to help with building Person objects.","lastModifiedDate":"2017-04-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class PersonBuilder {","lastModifiedDate":"2016-09-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2020-12-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_PHONE \u003d \"85355255\";","lastModifiedDate":"2017-04-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_EMAIL \u003d \"amy@gmail.com\";","lastModifiedDate":"2020-12-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_ADDRESS \u003d \"123, Jurong West Ave 6, #08-111\";","lastModifiedDate":"2017-04-05"},{"lineNumber":24,"author":{"gitId":"johnnythesnake12"},"content":"    public static final String DEFAULT_PREFERRED_CONTACT \u003d \"\";","lastModifiedDate":"2023-10-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private Address address;","lastModifiedDate":"2017-12-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-12-20"},{"lineNumber":31,"author":{"gitId":"zhanyang01"},"content":"    private PreferredContact preferredContact;","lastModifiedDate":"2023-10-17"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonBuilder} with the default details.","lastModifiedDate":"2020-05-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public PersonBuilder() {","lastModifiedDate":"2017-08-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2017-12-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2017-12-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        email \u003d new Email(DEFAULT_EMAIL);","lastModifiedDate":"2017-12-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        address \u003d new Address(DEFAULT_ADDRESS);","lastModifiedDate":"2017-12-20"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":42,"author":{"gitId":"johnnythesnake12"},"content":"        preferredContact \u003d new PreferredContact(DEFAULT_PREFERRED_CONTACT);","lastModifiedDate":"2023-10-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-11"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Initializes the PersonBuilder with the data of {@code personToCopy}.","lastModifiedDate":"2016-12-11"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public PersonBuilder(Person personToCopy) {","lastModifiedDate":"2018-01-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        name \u003d personToCopy.getName();","lastModifiedDate":"2017-12-20"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        phone \u003d personToCopy.getPhone();","lastModifiedDate":"2017-12-20"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        email \u003d personToCopy.getEmail();","lastModifiedDate":"2017-12-20"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        address \u003d personToCopy.getAddress();","lastModifiedDate":"2017-12-20"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e(personToCopy.getTags());","lastModifiedDate":"2017-12-20"},{"lineNumber":54,"author":{"gitId":"aarontxz"},"content":"        preferredContact \u003d personToCopy.getPreferredContact();","lastModifiedDate":"2023-10-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-11"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-11"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public PersonBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2017-12-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":66,"author":{"gitId":"zhanyang01"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the","lastModifiedDate":"2023-10-17"},{"lineNumber":67,"author":{"gitId":"zhanyang01"},"content":"     * {@code Person} that we are building.","lastModifiedDate":"2023-10-17"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public PersonBuilder withTags(String... tags) {","lastModifiedDate":"2017-08-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2017-12-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * Sets the {@code Address} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public PersonBuilder withAddress(String address) {","lastModifiedDate":"2017-08-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        this.address \u003d new Address(address);","lastModifiedDate":"2017-12-20"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public PersonBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        this.phone \u003d new Phone(phone);","lastModifiedDate":"2017-12-20"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public PersonBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        this.email \u003d new Email(email);","lastModifiedDate":"2017-12-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":98,"author":{"gitId":"zhanyang01"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":99,"author":{"gitId":"zhanyang01"},"content":"     * Sets the {@code PreferredContact} of the {@code Person} that we are building.","lastModifiedDate":"2023-10-17"},{"lineNumber":100,"author":{"gitId":"zhanyang01"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":101,"author":{"gitId":"zhanyang01"},"content":"    public PersonBuilder withPreferredContact(String preferredContact) {","lastModifiedDate":"2023-10-17"},{"lineNumber":102,"author":{"gitId":"zhanyang01"},"content":"        this.preferredContact \u003d new PreferredContact(preferredContact);","lastModifiedDate":"2023-10-17"},{"lineNumber":103,"author":{"gitId":"zhanyang01"},"content":"        return this;","lastModifiedDate":"2023-10-17"},{"lineNumber":104,"author":{"gitId":"zhanyang01"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":105,"author":{"gitId":"zhanyang01"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public Person build() {","lastModifiedDate":"2017-04-05"},{"lineNumber":107,"author":{"gitId":"zhanyang01"},"content":"        return new Person(name, phone, email, address, tags, preferredContact);","lastModifiedDate":"2023-10-17"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":110,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-03"}],"authorContributionMap":{"aarontxz":1,"johnnythesnake12":2,"zhanyang01":13,"-":94}},{"path":"src/test/java/seedu/address/testutil/TypicalPersons.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-08-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-08-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-08-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-08-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-08-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-13"},{"lineNumber":22,"author":{"gitId":"zhanyang01"},"content":" * A utility class containing a list of {@code Person} objects to be used in","lastModifiedDate":"2023-10-18"},{"lineNumber":23,"author":{"gitId":"zhanyang01"},"content":" * tests.","lastModifiedDate":"2023-10-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class TypicalPersons {","lastModifiedDate":"2017-04-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static final Person ALICE \u003d new PersonBuilder().withName(\"Alice Pauline\")","lastModifiedDate":"2018-01-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            .withAddress(\"123, Jurong West Ave 6, #08-111\").withEmail(\"alice@example.com\")","lastModifiedDate":"2017-04-05"},{"lineNumber":29,"author":{"gitId":"zhanyang01"},"content":"            .withPhone(\"94351253\").withTags(\"friends\")","lastModifiedDate":"2023-10-18"},{"lineNumber":30,"author":{"gitId":"johnnythesnake12"},"content":"            .build();","lastModifiedDate":"2023-10-18"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static final Person BENSON \u003d new PersonBuilder().withName(\"Benson Meier\")","lastModifiedDate":"2018-01-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            .withAddress(\"311, Clementi Ave 2, #02-25\")","lastModifiedDate":"2017-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            .withEmail(\"johnd@example.com\").withPhone(\"98765432\")","lastModifiedDate":"2017-04-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            .withTags(\"owesMoney\", \"friends\").build();","lastModifiedDate":"2016-09-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final Person CARL \u003d new PersonBuilder().withName(\"Carl Kurz\").withPhone(\"95352563\")","lastModifiedDate":"2018-01-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            .withEmail(\"heinz@example.com\").withAddress(\"wall street\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final Person DANIEL \u003d new PersonBuilder().withName(\"Daniel Meier\").withPhone(\"87652533\")","lastModifiedDate":"2018-01-10"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            .withEmail(\"cornelia@example.com\").withAddress(\"10th street\").withTags(\"friends\").build();","lastModifiedDate":"2018-03-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final Person ELLE \u003d new PersonBuilder().withName(\"Elle Meyer\").withPhone(\"9482224\")","lastModifiedDate":"2018-01-10"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            .withEmail(\"werner@example.com\").withAddress(\"michegan ave\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static final Person FIONA \u003d new PersonBuilder().withName(\"Fiona Kunz\").withPhone(\"9482427\")","lastModifiedDate":"2018-01-10"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            .withEmail(\"lydia@example.com\").withAddress(\"little tokyo\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static final Person GEORGE \u003d new PersonBuilder().withName(\"George Best\").withPhone(\"9482442\")","lastModifiedDate":"2018-01-10"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            .withEmail(\"anna@example.com\").withAddress(\"4th street\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    // Manually added","lastModifiedDate":"2016-09-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static final Person HOON \u003d new PersonBuilder().withName(\"Hoon Meier\").withPhone(\"8482424\")","lastModifiedDate":"2018-01-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            .withEmail(\"stefan@example.com\").withAddress(\"little india\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static final Person IDA \u003d new PersonBuilder().withName(\"Ida Mueller\").withPhone(\"8482131\")","lastModifiedDate":"2018-01-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            .withEmail(\"hans@example.com\").withAddress(\"chicago ave\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    // Manually added - Person\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2017-08-22"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static final Person AMY \u003d new PersonBuilder().withName(VALID_NAME_AMY).withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2018-01-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            .withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static final Person BOB \u003d new PersonBuilder().withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2018-01-10"},{"lineNumber":56,"author":{"gitId":"zhanyang01"},"content":"            .withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2023-10-18"},{"lineNumber":57,"author":{"gitId":"zhanyang01"},"content":"            .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND)","lastModifiedDate":"2023-10-18"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            .build();","lastModifiedDate":"2017-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2017-09-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":62,"author":{"gitId":"zhanyang01"},"content":"    private TypicalPersons() {","lastModifiedDate":"2023-10-18"},{"lineNumber":63,"author":{"gitId":"zhanyang01"},"content":"    } // prevents instantiation","lastModifiedDate":"2023-10-18"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * Returns an {@code AddressBook} with all the typical persons.","lastModifiedDate":"2017-08-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public static AddressBook getTypicalAddressBook() {","lastModifiedDate":"2017-08-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2017-08-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        for (Person person : getTypicalPersons()) {","lastModifiedDate":"2018-01-10"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            ab.addPerson(person);","lastModifiedDate":"2017-08-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return ab;","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-04"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public static List\u003cPerson\u003e getTypicalPersons() {","lastModifiedDate":"2018-01-10"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));","lastModifiedDate":"2017-08-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-08-04"},{"lineNumber":79,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-13"}],"authorContributionMap":{"johnnythesnake12":1,"zhanyang01":7,"-":71}}]

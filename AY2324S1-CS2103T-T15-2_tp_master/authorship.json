[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"RoeReRe"},"content":"[![CI Status](https://github.com/AY2324S1-CS2103T-T15-2/tp/actions/workflows/gradle.yml/badge.svg)](https://github.com/AY2324S1-CS2103T-T15-2/tp/actions)","lastModifiedDate":"2023-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"ChongWeiJie29"},"content":"# BayMeds v.2103","lastModifiedDate":"2023-10-01"},{"lineNumber":4,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":5,"author":{"gitId":"ChongWeiJie29"},"content":"### UI Mockup","lastModifiedDate":"2023-10-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":9,"author":{"gitId":"ChongWeiJie29"},"content":"### Description","lastModifiedDate":"2023-10-01"},{"lineNumber":10,"author":{"gitId":"RoeReRe"},"content":"* This is **prescription management app for patients**.\u003cbr\u003e","lastModifiedDate":"2023-10-04"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  Example usages:","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"RoeReRe"},"content":"  * Track prescription needs, dosage and related health information.","lastModifiedDate":"2023-10-04"},{"lineNumber":13,"author":{"gitId":"RoeReRe"},"content":"  * Receive reminders to consume and refill medication.","lastModifiedDate":"2023-09-26"},{"lineNumber":14,"author":{"gitId":"ChongWeiJie29"},"content":"* It is named BayMeds v.2103 as it is inspired from the Disney character Baymax, who serves as a personal healthcare companion.","lastModifiedDate":"2023-10-01"},{"lineNumber":15,"author":{"gitId":"RoeReRe"},"content":"* For the detailed documentation of this project, see the **[BayMeds v.2103 Product Website](https://ay2324s1-cs2103t-t15-2.github.io/tp/)**.","lastModifiedDate":"2023-09-25"},{"lineNumber":16,"author":{"gitId":"RoeReRe"},"content":"* This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2023-09-25"}],"authorContributionMap":{"ChongWeiJie29":6,"RoeReRe":6,"-":4}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  layout: default.md","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  title: \"About Us\"","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"# About Us","lastModifiedDate":"2023-09-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"You can reach us at the email `seer[at]comp.nus.edu.sg`","lastModifiedDate":"2020-06-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"RoeReRe"},"content":"### Wei Xiang","lastModifiedDate":"2023-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"RoeReRe"},"content":"\u003cimg src\u003d\"images/roerere.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"RoeReRe"},"content":"[[github](https://github.com/roerere)]","lastModifiedDate":"2023-09-25"},{"lineNumber":19,"author":{"gitId":"RoeReRe"},"content":"[[portfolio](team/roerere.md)]","lastModifiedDate":"2023-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"RoeReRe"},"content":"* Role: Developer","lastModifiedDate":"2023-10-04"},{"lineNumber":22,"author":{"gitId":"RoeReRe"},"content":"* Responsibilities: Code Quality","lastModifiedDate":"2023-10-04"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"TeeRenJing"},"content":"### Ren Jing","lastModifiedDate":"2023-09-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":26,"author":{"gitId":"TeeRenJing"},"content":"\u003cimg src\u003d\"images/teerenjing.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-09-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":28,"author":{"gitId":"TeeRenJing"},"content":"[[github](https://github.com/TeeRenJing)]","lastModifiedDate":"2023-09-26"},{"lineNumber":29,"author":{"gitId":"TeeRenJing"},"content":"[[portfolio](team/teerenjing.md)]","lastModifiedDate":"2023-09-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":31,"author":{"gitId":"TeeRenJing"},"content":"* Role: Developer","lastModifiedDate":"2023-09-26"},{"lineNumber":32,"author":{"gitId":"RoeReRe"},"content":"* Responsibilities: Testing","lastModifiedDate":"2023-10-04"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":34,"author":{"gitId":"shyanyong"},"content":"### Shyan-Yong","lastModifiedDate":"2023-09-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"shyanyong"},"content":"\u003cimg src\u003d\"images/shyanyong.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-09-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"shyanyong"},"content":"[[github](http://github.com/shyanyong)]","lastModifiedDate":"2023-09-27"},{"lineNumber":39,"author":{"gitId":"shyanyong"},"content":"[[portfolio](team/shyanyong.md)]","lastModifiedDate":"2023-09-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"* Role: Team Lead","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"* Responsibilities: UI","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"jingyu987"},"content":"### Jing Yu","lastModifiedDate":"2023-09-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"jingyu987"},"content":"\u003cimg src\u003d\"images/jingyu987.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-09-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"jingyu987"},"content":"[[github](http://github.com/jingyu987)]","lastModifiedDate":"2023-09-27"},{"lineNumber":49,"author":{"gitId":"jingyu987"},"content":"[[portfolio](team/jingyu987.md)]","lastModifiedDate":"2023-09-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"* Responsibilities: Data","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"ChongWeiJie29"},"content":"### Wei Jie","lastModifiedDate":"2023-10-01"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"ChongWeiJie29"},"content":"\u003cimg src\u003d\"images/chongweijie29.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-10-01"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"ChongWeiJie29"},"content":"[[github](http://github.com/chongweijie29)]","lastModifiedDate":"2023-10-01"},{"lineNumber":59,"author":{"gitId":"ChongWeiJie29"},"content":"[[portfolio](team/chongweijie29.md)]","lastModifiedDate":"2023-10-01"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"ChongWeiJie29"},"content":"* Role: Integration, Developer","lastModifiedDate":"2023-10-01"},{"lineNumber":62,"author":{"gitId":"ChongWeiJie29"},"content":"* Responsibilities: Logic","lastModifiedDate":"2023-10-01"}],"authorContributionMap":{"TeeRenJing":5,"jingyu987":4,"shyanyong":4,"ChongWeiJie29":6,"RoeReRe":7,"-":36}},{"path":"docs/DevOps.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  layout: default.md","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  title: \"DevOps guide\"","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"  pageNav: 3","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"# DevOps guide","lastModifiedDate":"2023-09-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c!-- * Table of Contents --\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003cpage-nav-print /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003c!-- -------------------------------------------------------------------------------------------------------------------- --\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"## Build automation","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"This project uses Gradle for **build automation and dependency management**. **You are recommended to read [this Gradle Tutorial from the se-edu/guides](https://se-education.org/guides/tutorials/gradle.html)**.","lastModifiedDate":"2020-06-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Given below are how to use Gradle for some important project tasks.","lastModifiedDate":"2020-05-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"* **`clean`**: Deletes the files created during the previous build tasks (e.g. files in the `build` folder).\u003cbr\u003e","lastModifiedDate":"2020-05-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  e.g. `./gradlew clean`","lastModifiedDate":"2020-05-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"* **`shadowJar`**: Uses the ShadowJar plugin to creat a fat JAR file in the `build/lib` folder, *if the current file is outdated*.\u003cbr\u003e","lastModifiedDate":"2020-05-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  e.g. `./gradlew shadowJar`.","lastModifiedDate":"2020-05-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"* **`run`**: Builds and runs the application.\u003cbr\u003e","lastModifiedDate":"2020-05-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"  **`runShadow`**: Builds the application as a fat JAR, and then runs it.","lastModifiedDate":"2020-05-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"* **`checkstyleMain`**: Runs the code style check for the main code base.\u003cbr\u003e","lastModifiedDate":"2020-05-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  **`checkstyleTest`**: Runs the code style check for the test code base.","lastModifiedDate":"2020-05-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"* **`test`**: Runs all tests.","lastModifiedDate":"2023-01-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"  * `./gradlew test` — Runs all tests","lastModifiedDate":"2020-05-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"  * `./gradlew clean test` — Cleans the project and runs tests","lastModifiedDate":"2020-05-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"## Continuous integration (CI)","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"This project uses GitHub Actions for CI. The project comes with the necessary GitHub Actions configurations files (in the `.github/workflows` folder). No further setting up required.","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"### Code coverage","lastModifiedDate":"2020-08-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"As part of CI, this project uses Codecov to generate coverage reports. When CI runs, it will generate code coverage data (based on the tests run by CI) and upload that data to the CodeCov website, which in turn can provide you more info about the coverage of your tests.","lastModifiedDate":"2023-02-02"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"However, because Codecov is known to run into intermittent problems (e.g., report upload fails) due to issues on the Codecov service side, the CI is configured to pass even if the Codecov task failed. Therefore, developers are advised to check the code coverage levels periodically and take corrective actions if the coverage level falls below desired levels.","lastModifiedDate":"2023-02-02"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"To enable Codecov for forks of this project, follow the steps given in [this se-edu guide](https://se-education.org/guides/tutorials/codecov.html).","lastModifiedDate":"2023-02-02"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-01-01"},{"lineNumber":52,"author":{"gitId":"-"},"content":"### Repository-wide checks","lastModifiedDate":"2020-07-28"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":54,"author":{"gitId":"-"},"content":"In addition to running Gradle checks, CI includes some repository-wide checks. Unlike the Gradle checks which only cover files used in the build process, these repository-wide checks cover all files in the repository. They check for repository rules which are hard to enforce on development machines such as line ending requirements.","lastModifiedDate":"2020-07-28"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":56,"author":{"gitId":"-"},"content":"These checks are implemented as POSIX shell scripts, and thus can only be run on POSIX-compliant operating systems such as macOS and Linux. To run all checks locally on these operating systems, execute the following in the repository root directory:","lastModifiedDate":"2020-07-28"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":58,"author":{"gitId":"-"},"content":"`./config/travis/run-checks.sh`","lastModifiedDate":"2020-07-28"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":60,"author":{"gitId":"-"},"content":"Any warnings or errors will be printed out to the console.","lastModifiedDate":"2020-07-28"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":62,"author":{"gitId":"-"},"content":"**If adding new checks:**","lastModifiedDate":"2020-07-28"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":64,"author":{"gitId":"-"},"content":"* Checks are implemented as executable `check-*` scripts within the `.github` directory. The `run-checks.sh` script will automatically pick up and run files named as such. That is, you can add more such files if you need and the CI will do the rest.","lastModifiedDate":"2020-07-28"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":66,"author":{"gitId":"-"},"content":"* Check scripts should print out errors in the format `SEVERITY:FILENAME:LINE: MESSAGE`","lastModifiedDate":"2020-07-28"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  * SEVERITY is either ERROR or WARN.","lastModifiedDate":"2020-07-28"},{"lineNumber":68,"author":{"gitId":"-"},"content":"  * FILENAME is the path to the file relative to the current directory.","lastModifiedDate":"2020-07-28"},{"lineNumber":69,"author":{"gitId":"-"},"content":"  * LINE is the line of the file where the error occurred and MESSAGE is the message explaining the error.","lastModifiedDate":"2020-07-28"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":71,"author":{"gitId":"-"},"content":"* Check scripts must exit with a non-zero exit code if any errors occur.","lastModifiedDate":"2020-07-28"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":73,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"## Making a release","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"Here are the steps to create a new release.","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"TeeRenJing"},"content":"1. Update the version number in [`MainApp.java`](https://github.com/AY2324S1-CS2103T-T15-2/tp/tree/master/src/main/java/seedu/address/MainApp.java).","lastModifiedDate":"2023-10-03"},{"lineNumber":80,"author":{"gitId":"-"},"content":"1. Generate a fat JAR file using Gradle (i.e., `gradlew shadowJar`).","lastModifiedDate":"2021-08-30"},{"lineNumber":81,"author":{"gitId":"-"},"content":"1. Tag the repo with the version number. e.g. `v0.1`","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"1. [Create a new release using GitHub](https://help.github.com/articles/creating-releases/). Upload the JAR file you created.","lastModifiedDate":"2020-05-26"}],"authorContributionMap":{"TeeRenJing":1,"-":81}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  layout: default.md","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  title: \"Developer Guide\"","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"  pageNav: 3","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":7,"author":{"gitId":"RoeReRe"},"content":"# BayMeds Developer Guide","lastModifiedDate":"2023-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c!-- * Table of Contents --\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003cpage-nav-print /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"_{ list here sources of all reused/adapted ideas, code, documentation, and third-party libraries -- include links to the original source as well }_","lastModifiedDate":"2023-09-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ArchitectureDiagram.puml\" width\u003d\"280\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"TeeRenJing"},"content":"**`Main`** (consisting of classes [`Main`](https://github.com/AY2324S1-CS2103T-T15-2/tp/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/AY2324S1-CS2103T-T15-2/tp/tree/master/src/main/java/seedu/address/MainApp.java)) is in charge of the app launch and shut down.","lastModifiedDate":"2023-10-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"* At app launch, it initializes the other components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2023-09-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"* At shut down, it shuts down the other components and invokes cleanup methods where necessary.","lastModifiedDate":"2023-09-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"The bulk of the app\u0027s work is done by the following four components:","lastModifiedDate":"2023-09-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2023-09-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ArchitectureSequenceDiagram.puml\" width\u003d\"574\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":59,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ComponentManagers.puml\" width\u003d\"300\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"TeeRenJing"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/AY2324S1-CS2103T-T15-2/tp/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2023-10-03"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UiClassDiagram.puml\" alt\u003d\"Structure of the UI Component\"/\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"TeeRenJing"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PrescriptionListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2023-10-03"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"TeeRenJing"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/AY2324S1-CS2103T-T15-2/tp/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/AY2324S1-CS2103T-T15-2/tp/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2023-10-03"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":81,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":82,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":83,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component, as it displays `Person` object residing in the `Model`.","lastModifiedDate":"2021-07-31"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"TeeRenJing"},"content":"**API** : [`Logic.java`](https://github.com/AY2324S1-CS2103T-T15-2/tp/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2023-10-03"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/LogicClassDiagram.puml\" width\u003d\"550\"/\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"The sequence diagram below illustrates the interactions within the `Logic` component, taking `execute(\"delete 1\")` API call as an example.","lastModifiedDate":"2023-09-03"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/DeleteSequenceDiagram.puml\" alt\u003d\"Interactions Inside the Logic Component for the `delete 1` Command\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":97,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"**Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2023-09-12"},{"lineNumber":100,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2023-09-03"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":104,"author":{"gitId":"TeeRenJing"},"content":"1. When `Logic` is called upon to execute a command, it is passed to an `BayMedsParser` object which in turn creates a parser that matches the command (e.g., `DeleteCommandParser`) and uses it to parse the command.","lastModifiedDate":"2023-10-03"},{"lineNumber":105,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `DeleteCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2023-09-03"},{"lineNumber":106,"author":{"gitId":"TeeRenJing"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to delete a medication).","lastModifiedDate":"2023-10-03"},{"lineNumber":107,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2023-09-03"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":109,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ParserClasses.puml\" width\u003d\"600\"/\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":114,"author":{"gitId":"TeeRenJing"},"content":"* When called upon to parse a user command, the `BayMedsParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `BayMedsParser` returns back as a `Command` object.","lastModifiedDate":"2023-10-03"},{"lineNumber":115,"author":{"gitId":"-"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-07-31"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":118,"author":{"gitId":"TeeRenJing"},"content":"**API** : [`Model.java`](https://github.com/AY2324S1-CS2103T-T15-2/tp/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2023-10-03"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ModelClassDiagram.puml\" width\u003d\"450\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"TeeRenJing"},"content":"* stores the BayMeds data i.e., all `Person` objects (which are contained in a `UniquePersonList` object).","lastModifiedDate":"2023-10-03"},{"lineNumber":126,"author":{"gitId":"-"},"content":"* stores the currently \u0027selected\u0027 `Person` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2021-07-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":132,"author":{"gitId":"-"},"content":"**Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `AddressBook`, which `Person` references. This allows `AddressBook` to only require one `Tag` object per unique tag, instead of each `Person` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":134,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/BetterModelClassDiagram.puml\" width\u003d\"450\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"TeeRenJing"},"content":"**API** : [`Storage.java`](https://github.com/AY2324S1-CS2103T-T15-2/tp/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2023-10-03"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/StorageClassDiagram.puml\" width\u003d\"550\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"TeeRenJing"},"content":"* can save both BayMeds data and user preference data in JSON format, and read them back into corresponding objects.","lastModifiedDate":"2023-10-03"},{"lineNumber":147,"author":{"gitId":"TeeRenJing"},"content":"* inherits from both `BayMedsStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2023-10-03"},{"lineNumber":148,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.addressbook.commons` package.","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2020-06-07"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedAddressBook`. It extends `AddressBook` with an undo/redo history, stored internally as an `addressBookStateList` and `currentStatePointer`. Additionally, it implements the following operations:","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#commit()` — Saves the current address book state in its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#undo()` — Restores the previous address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#redo()` — Restores a previously undone address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()` and `Model#redoAddressBook()` respectively.","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the initial address book state, and the `currentStatePointer` pointing to that single address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState0.puml\" alt\u003d\"UndoRedoState0\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"Step 2. The user executes `delete 5` command to delete the 5th person in the address book. The `delete` command calls `Model#commitAddressBook()`, causing the modified state of the address book after the `delete 5` command executes to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState1.puml\" alt\u003d\"UndoRedoState1\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"Step 3. The user executes `add n/David …​` to add a new person. The `add` command also calls `Model#commitAddressBook()`, causing another modified address book state to be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState2.puml\" alt\u003d\"UndoRedoState2\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"**Note:** If a command fails its execution, it will not call `Model#commitAddressBook()`, so the address book state will not be saved into the `addressBookStateList`.","lastModifiedDate":"2023-09-12"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":190,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"Step 4. The user now decides that adding the person was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous address book state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState3.puml\" alt\u003d\"UndoRedoState3\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":197,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"**Note:** If the `currentStatePointer` is at index 0, pointing to the initial AddressBook state, then there are no previous AddressBook states to restore. The `undo` command uses `Model#canUndoAddressBook()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2023-09-12"},{"lineNumber":200,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"The following sequence diagram shows how the undo operation works:","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoSequenceDiagram.puml\" alt\u003d\"UndoSequenceDiagram\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"**Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2023-09-12"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":212,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"The `redo` command does the opposite — it calls `Model#redoAddressBook()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":218,"author":{"gitId":"-"},"content":"**Note:** If the `currentStatePointer` is at index `addressBookStateList.size() - 1`, pointing to the latest address book state, then there are no undone AddressBook states to restore. The `redo` command uses `Model#canRedoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2023-09-12"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the address book, such as `list`, will usually not call `Model#commitAddressBook()`, `Model#undoAddressBook()` or `Model#redoAddressBook()`. Thus, the `addressBookStateList` remains unchanged.","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState4.puml\" alt\u003d\"UndoRedoState4\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"Step 6. The user executes `clear`, which calls `Model#commitAddressBook()`. Since the `currentStatePointer` is not pointing at the end of the `addressBookStateList`, all address book states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `add n/David …​` command. This is the behavior that most modern desktop applications follow.","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState5.puml\" alt\u003d\"UndoRedoState5\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/CommitActivityDiagram.puml\" width\u003d\"250\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2021-07-31"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2021-07-31"},{"lineNumber":237,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Saves the entire address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"  * Pros: Easy to implement.","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"  * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"  * Pros: Will use less memory (e.g. for `delete`, just save the person being deleted).","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"  * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Data archiving","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"_{Explain here how the data archiving feature will be implemented}_","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":259,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":260,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":261,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":262,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"RoeReRe"},"content":"* has a need to manage a significant number of prescriptions","lastModifiedDate":"2023-10-04"},{"lineNumber":273,"author":{"gitId":"RoeReRe"},"content":"* prefers a quick way of tracking medication needs, dosage and related health information","lastModifiedDate":"2023-09-25"},{"lineNumber":274,"author":{"gitId":"RoeReRe"},"content":"* prefers desktop apps over other types","lastModifiedDate":"2023-09-25"},{"lineNumber":275,"author":{"gitId":"-"},"content":"* can type fast","lastModifiedDate":"2020-05-23"},{"lineNumber":276,"author":{"gitId":"-"},"content":"* prefers typing to mouse interactions","lastModifiedDate":"2020-05-26"},{"lineNumber":277,"author":{"gitId":"-"},"content":"* is reasonably comfortable using CLI apps","lastModifiedDate":"2020-05-23"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":279,"author":{"gitId":"RoeReRe"},"content":"**Value proposition**:","lastModifiedDate":"2023-09-25"},{"lineNumber":280,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":281,"author":{"gitId":"RoeReRe"},"content":"* manage prescriptions faster than a typical mouse/GUI driven app","lastModifiedDate":"2023-10-04"},{"lineNumber":282,"author":{"gitId":"RoeReRe"},"content":"* track dosage schedule and instructions","lastModifiedDate":"2023-09-25"},{"lineNumber":283,"author":{"gitId":"RoeReRe"},"content":"* track medical history","lastModifiedDate":"2023-09-25"},{"lineNumber":284,"author":{"gitId":"RoeReRe"},"content":"* log symptoms","lastModifiedDate":"2023-09-25"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":287,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":289,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":291,"author":{"gitId":"-"},"content":"| Priority | As a …​                            | I want to …​                                        | So that I can…​                                                    |","lastModifiedDate":"2020-05-23"},{"lineNumber":292,"author":{"gitId":"RoeReRe"},"content":"|----------|------------------------------------|-----------------------------------------------------|--------------------------------------------------------------------|","lastModifiedDate":"2023-10-04"},{"lineNumber":293,"author":{"gitId":"RoeReRe"},"content":"| `* * *`  | sickly patient                     | add prescriptions                                   | manage additional prescriptions should I be prescribed them        |","lastModifiedDate":"2023-10-04"},{"lineNumber":294,"author":{"gitId":"RoeReRe"},"content":"| `* * *`  | recovering patient                 | remove prescriptions                                | remove prescriptions that the doctor deems unnecessary from now on |","lastModifiedDate":"2023-10-04"},{"lineNumber":295,"author":{"gitId":"RoeReRe"},"content":"| `* * *`  | forgetful patient                  | mark the medication as consumed                     | not accidentally overdose on a certain medication                  |","lastModifiedDate":"2023-09-25"},{"lineNumber":296,"author":{"gitId":"RoeReRe"},"content":"| `* * *`  | forgetful patient                  | list all my prescriptions                           | track all the medications I am currently taking                    |","lastModifiedDate":"2023-10-04"},{"lineNumber":297,"author":{"gitId":"RoeReRe"},"content":"| `* *`    | forgetful patient                  | list all the medications I have not taken today     | follow my prescription accurately                                  |","lastModifiedDate":"2023-09-25"},{"lineNumber":298,"author":{"gitId":"RoeReRe"},"content":"| `* *`    | patient undergoing a tapering plan | edit prescriptions that I have added                | adjust my dosage schedules easily                                  |","lastModifiedDate":"2023-10-04"},{"lineNumber":299,"author":{"gitId":"RoeReRe"},"content":"| `* *`    | forgetful patient                  | get daily reminders of what medications to take     | take my medication on time                                         |","lastModifiedDate":"2023-10-04"},{"lineNumber":300,"author":{"gitId":"RoeReRe"},"content":"| `*`      | forgetful patient                  | get a reminder when a medication is about to expire | premptively stock up before it runs out                            |","lastModifiedDate":"2023-09-25"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":302,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":303,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":304,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":305,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":306,"author":{"gitId":"TeeRenJing"},"content":"(For all use cases below, the **System** is the `BayMeds` and the **Actor** is the `user`, unless specified otherwise)","lastModifiedDate":"2023-10-03"},{"lineNumber":307,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":308,"author":{"gitId":"RoeReRe"},"content":"**Use case: Delete a prescription**","lastModifiedDate":"2023-10-04"},{"lineNumber":309,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":310,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":311,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":312,"author":{"gitId":"RoeReRe"},"content":"1.  User requests to list prescriptions.","lastModifiedDate":"2023-10-04"},{"lineNumber":313,"author":{"gitId":"RoeReRe"},"content":"2.  BayMeds shows a list of prescriptions.","lastModifiedDate":"2023-10-04"},{"lineNumber":314,"author":{"gitId":"RoeReRe"},"content":"3.  User requests to delete a specific prescription in the list.","lastModifiedDate":"2023-10-04"},{"lineNumber":315,"author":{"gitId":"RoeReRe"},"content":"4.  BayMeds deletes the prescription.","lastModifiedDate":"2023-10-04"},{"lineNumber":316,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":317,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":318,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":319,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":320,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":321,"author":{"gitId":"TeeRenJing"},"content":"* 1a. The given command is invalid.","lastModifiedDate":"2023-10-03"},{"lineNumber":322,"author":{"gitId":"TeeRenJing"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":323,"author":{"gitId":"TeeRenJing"},"content":"    * 1a1. BayMeds shows an error message.","lastModifiedDate":"2023-10-03"},{"lineNumber":324,"author":{"gitId":"TeeRenJing"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":325,"author":{"gitId":"TeeRenJing"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2023-10-03"},{"lineNumber":326,"author":{"gitId":"TeeRenJing"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":327,"author":{"gitId":"-"},"content":"* 2a. The list is empty.","lastModifiedDate":"2020-05-23"},{"lineNumber":328,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":329,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":331,"author":{"gitId":"RoeReRe"},"content":"* 3a. The given prescription is not in the list.","lastModifiedDate":"2023-10-04"},{"lineNumber":332,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":333,"author":{"gitId":"TeeRenJing"},"content":"    * 3a1. BayMeds shows an error message.","lastModifiedDate":"2023-10-03"},{"lineNumber":334,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":335,"author":{"gitId":"-"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2020-05-23"},{"lineNumber":336,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":337,"author":{"gitId":"RoeReRe"},"content":"**Use case: List all prescriptions**","lastModifiedDate":"2023-10-04"},{"lineNumber":338,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":339,"author":{"gitId":"RoeReRe"},"content":"**MSS**","lastModifiedDate":"2023-10-04"},{"lineNumber":340,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":341,"author":{"gitId":"RoeReRe"},"content":"1.  User requests to list all prescriptions.","lastModifiedDate":"2023-10-04"},{"lineNumber":342,"author":{"gitId":"RoeReRe"},"content":"2.  BayMeds shows a list of prescriptions together with their details.","lastModifiedDate":"2023-10-04"},{"lineNumber":343,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":344,"author":{"gitId":"RoeReRe"},"content":"    Use case ends.","lastModifiedDate":"2023-10-04"},{"lineNumber":345,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":346,"author":{"gitId":"RoeReRe"},"content":"**Extensions**","lastModifiedDate":"2023-10-04"},{"lineNumber":347,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":348,"author":{"gitId":"RoeReRe"},"content":"* 1a. The given command is invalid.","lastModifiedDate":"2023-10-04"},{"lineNumber":349,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":350,"author":{"gitId":"RoeReRe"},"content":"    * 1a1. BayMeds shows an error message.","lastModifiedDate":"2023-10-04"},{"lineNumber":351,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":352,"author":{"gitId":"RoeReRe"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2023-10-04"},{"lineNumber":353,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":354,"author":{"gitId":"RoeReRe"},"content":"* 2a. The list is empty.","lastModifiedDate":"2023-10-04"},{"lineNumber":355,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":356,"author":{"gitId":"RoeReRe"},"content":"  Use case ends.","lastModifiedDate":"2023-10-04"},{"lineNumber":357,"author":{"gitId":"shyanyong"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":358,"author":{"gitId":"shyanyong"},"content":"**Use case: List medications to be consumed today**","lastModifiedDate":"2023-10-04"},{"lineNumber":359,"author":{"gitId":"shyanyong"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":360,"author":{"gitId":"shyanyong"},"content":"**MSS**","lastModifiedDate":"2023-10-04"},{"lineNumber":361,"author":{"gitId":"shyanyong"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":362,"author":{"gitId":"RoeReRe"},"content":"1.  User requests to list all remaining medications to be consumed today.","lastModifiedDate":"2023-10-04"},{"lineNumber":363,"author":{"gitId":"RoeReRe"},"content":"2.  BayMeds shows a list of medications to be consumed today.","lastModifiedDate":"2023-10-04"},{"lineNumber":364,"author":{"gitId":"shyanyong"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":365,"author":{"gitId":"shyanyong"},"content":"    Use case ends.","lastModifiedDate":"2023-10-04"},{"lineNumber":366,"author":{"gitId":"shyanyong"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":367,"author":{"gitId":"shyanyong"},"content":"**Extensions**","lastModifiedDate":"2023-10-04"},{"lineNumber":368,"author":{"gitId":"shyanyong"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":369,"author":{"gitId":"shyanyong"},"content":"* 1a. The given command is invalid.","lastModifiedDate":"2023-10-04"},{"lineNumber":370,"author":{"gitId":"shyanyong"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":371,"author":{"gitId":"shyanyong"},"content":"    * 1a1. BayMeds shows an error message.","lastModifiedDate":"2023-10-04"},{"lineNumber":372,"author":{"gitId":"shyanyong"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":373,"author":{"gitId":"shyanyong"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2023-10-04"},{"lineNumber":374,"author":{"gitId":"shyanyong"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":375,"author":{"gitId":"shyanyong"},"content":"* 2a. The list is empty.","lastModifiedDate":"2023-10-04"},{"lineNumber":376,"author":{"gitId":"shyanyong"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":377,"author":{"gitId":"shyanyong"},"content":"  Use case ends.","lastModifiedDate":"2023-10-04"},{"lineNumber":378,"author":{"gitId":"shyanyong"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":379,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":380,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":381,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":382,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":383,"author":{"gitId":"-"},"content":"1.  Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2020-05-23"},{"lineNumber":384,"author":{"gitId":"TeeRenJing"},"content":"2.  Should be able to hold up to 1000 prescriptions without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2023-10-03"},{"lineNumber":385,"author":{"gitId":"-"},"content":"3.  A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2020-05-23"},{"lineNumber":386,"author":{"gitId":"RoeReRe"},"content":"4.  Should be able to give a notification to the user when the application is running. (Time to take medication / medication is about to expire)","lastModifiedDate":"2023-10-04"},{"lineNumber":387,"author":{"gitId":"TeeRenJing"},"content":"5.  Should be able to track current date and time when the application is running.","lastModifiedDate":"2023-10-03"},{"lineNumber":388,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":389,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":390,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":391,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":392,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":393,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, OS-X","lastModifiedDate":"2020-05-23"},{"lineNumber":394,"author":{"gitId":"TeeRenJing"},"content":"* **Medication**: A drug identified by a name","lastModifiedDate":"2023-10-03"},{"lineNumber":395,"author":{"gitId":"RoeReRe"},"content":"* **Prescription**: Uniquely identified by a medication, a frequency and a quantity","lastModifiedDate":"2023-10-04"},{"lineNumber":396,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":397,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":398,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":399,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":400,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":401,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":402,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":403,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":404,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":405,"author":{"gitId":"-"},"content":"**Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2023-09-12"},{"lineNumber":406,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":407,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":408,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":409,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":410,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":411,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":412,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":413,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":414,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":415,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":416,"author":{"gitId":"TeeRenJing"},"content":"   1. Double-click the jar file Expected: Shows the GUI with a set of sample prescriptions. The window size may not be optimum.","lastModifiedDate":"2023-10-03"},{"lineNumber":417,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":418,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":419,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":420,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":421,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":422,"author":{"gitId":"-"},"content":"   1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":423,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":424,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":425,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":426,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":427,"author":{"gitId":"TeeRenJing"},"content":"### Deleting a medication","lastModifiedDate":"2023-10-03"},{"lineNumber":428,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":429,"author":{"gitId":"TeeRenJing"},"content":"1. Deleting a medication while all medications are being shown","lastModifiedDate":"2023-10-03"},{"lineNumber":430,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":431,"author":{"gitId":"TeeRenJing"},"content":"   1. Prerequisites: List all medications using the `list` command. Multiple medications in the list.","lastModifiedDate":"2023-10-03"},{"lineNumber":432,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":433,"author":{"gitId":"TeeRenJing"},"content":"   1. Test case: `delete --medication \"Doxazosin\"`\u003cbr\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":434,"author":{"gitId":"TeeRenJing"},"content":"      Expected: Doxazosin is deleted from the list. Details of the deleted medication shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2023-10-03"},{"lineNumber":435,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":436,"author":{"gitId":"TeeRenJing"},"content":"   1. Test case: `delete --medication \"Watsons\"`\u003cbr\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":437,"author":{"gitId":"TeeRenJing"},"content":"      Expected: No medication is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2023-10-03"},{"lineNumber":438,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":439,"author":{"gitId":"TeeRenJing"},"content":"   1. Other incorrect delete commands to try: `delete`, `delete x`, `...`\u003cbr\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":440,"author":{"gitId":"-"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":441,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":442,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":443,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":444,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":445,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":446,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":447,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":448,"author":{"gitId":"-"},"content":"   1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23"},{"lineNumber":449,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":450,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"TeeRenJing":33,"shyanyong":20,"RoeReRe":49,"-":348}},{"path":"docs/Testing.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  layout: default.md","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  title: \"Testing guide\"","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"  pageNav: 3","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"# Testing guide","lastModifiedDate":"2023-09-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c!-- * Table of Contents --\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003cpage-nav-print /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003c!-- -------------------------------------------------------------------------------------------------------------------- --\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"## Running tests","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"There are two ways to run tests.","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"* **Method 1: Using IntelliJ JUnit test runner**","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  * To run all tests, right-click on the `src/test/java` folder and choose `Run \u0027All Tests\u0027`","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  * To run a subset of tests, you can right-click on a test package,","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    test class, or a test and choose `Run \u0027ABC\u0027`","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"* **Method 2: Using Gradle**","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  * Open a console and run the command `gradlew clean test` (Mac/Linux: `./gradlew clean test`)","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"**Link**: Read [this Gradle Tutorial from the se-edu/guides](https://se-education.org/guides/tutorials/gradle.html) to learn more about using Gradle.","lastModifiedDate":"2023-09-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"## Types of tests","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"This project has three types of tests:","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"1. *Unit tests* targeting the lowest level methods/classes.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"   e.g. `seedu.address.commons.StringUtilTest`","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"1. *Integration tests* that are checking the integration of multiple code units (those code units are assumed to be working).\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"TeeRenJing"},"content":"   e.g. `seedu.address.storage.StorageManagerPrescriptionTest`","lastModifiedDate":"2023-10-17"},{"lineNumber":40,"author":{"gitId":"-"},"content":"1. Hybrids of unit and integration tests. These test are checking multiple code units as well as how the are connected together.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"TeeRenJing"},"content":"   e.g. `seedu.address.logic.LogicManagerPrescriptionTest`","lastModifiedDate":"2023-10-17"}],"authorContributionMap":{"TeeRenJing":2,"-":39}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  layout: default.md","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  title: \"User Guide\"","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"  pageNav: 3","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"ChongWeiJie29"},"content":"# BayMeds v.2103 User Guide","lastModifiedDate":"2023-10-02"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"RoeReRe"},"content":"BayMeds v.2103, (a.k.a BayMeds), is a **desktop application for managing your prescriptions**. While it has a GUI (Graphical User Interface), most of the user interactions happen using a CLI (Command Line Interface). If you like to type fast, BayMeds can get your prescription management tasks done faster than traditional GUI apps.","lastModifiedDate":"2023-10-04"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c!-- * Table of Contents --\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003cpage-nav-print /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"## Quick start","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"1. Ensure you have Java `11` or above installed in your Computer.","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"ChongWeiJie29"},"content":"1. Download the latest `BayMeds.jar` from [here](https://github.com/se-edu/addressbook-level3/releases). [coming soon]","lastModifiedDate":"2023-10-02"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"ChongWeiJie29"},"content":"1. Copy the file to the folder you want to use as the _home folder_ for BayMeds.","lastModifiedDate":"2023-10-02"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"ChongWeiJie29"},"content":"1. Open a command terminal, `cd` into the folder you put the jar file in, and use the `java -jar BayMeds.jar` command to run the application.\u003cbr\u003e","lastModifiedDate":"2023-10-02"},{"lineNumber":25,"author":{"gitId":"ChongWeiJie29"},"content":"   A GUI similar to the one below should appear in a few seconds. Note how the app contains some sample data.\u003cbr\u003e","lastModifiedDate":"2023-10-02"},{"lineNumber":26,"author":{"gitId":"-"},"content":"   ![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"ChongWeiJie29"},"content":"1. Type commands in the command box and press Enter to execute it. \u003cbr\u003e e.g. typing the command **`help`** and pressing Enter will open the help window.\u003cbr\u003e","lastModifiedDate":"2023-10-02"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"ChongWeiJie29"},"content":"   Some example commands you can try:","lastModifiedDate":"2023-10-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"ChongWeiJie29"},"content":"   * `list` : Lists all prescriptions.","lastModifiedDate":"2023-10-02"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"RoeReRe"},"content":"   * `add --medication \"Doxazosin\" --frequency \"daily\"` : Adds a prescription `Aspirin` to the list of prescriptions.","lastModifiedDate":"2023-10-04"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"RoeReRe"},"content":"   * `delete \"Aspirin\"` : Deletes the `Aspirin` prescription from the current list of prescriptions.","lastModifiedDate":"2023-10-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"1. Refer to the [Features](#features) below for details of each command.","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"**Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"ChongWeiJie29"},"content":"* Words in `\u003c\u003e` are the parameters to be supplied by the user, and should begin and end with double quotation marks \" \".\u003cbr\u003e","lastModifiedDate":"2023-10-02"},{"lineNumber":49,"author":{"gitId":"ChongWeiJie29"},"content":"  e.g. in `add --medication \u003cmedication_name\u003e`, `\u003cmedication_name\u003e` is a parameter which can be used as `add --medication \"Aspirin\"`.","lastModifiedDate":"2023-10-02"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"* Items in square brackets are optional.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"ChongWeiJie29"},"content":"  e.g. `--frequency \u003cfrequency\u003e [--start \u003cstart_date\u003e]` can be used as `--frequency \"daily\" --start \"20-9-2023\"` or as `--frequency \"daily\"`.","lastModifiedDate":"2023-10-02"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"* Parameters can be in any order.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"ChongWeiJie29"},"content":"  e.g. if the command specifies `--medication \u003cmedication_name\u003e --frequency \u003cfrequency\u003e`, `--frequency \u003cfrequency\u003e --medication \u003cmedication_name\u003e` is also acceptable.","lastModifiedDate":"2023-10-02"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"ChongWeiJie29"},"content":"* Extraneous parameters for commands that do not take in parameters (such as `help`, `list`) will be ignored.\u003cbr\u003e","lastModifiedDate":"2023-10-02"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `help 123`, it will be interpreted as `help`.","lastModifiedDate":"2021-02-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"* If you are using a PDF version of this document, be careful when copying and pasting commands that span multiple lines as space characters surrounding line-breaks may be omitted when copied over to the application.","lastModifiedDate":"2023-06-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"ChongWeiJie29"},"content":"### Viewing help : `help` [coming soon]","lastModifiedDate":"2023-10-02"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":65,"author":{"gitId":"ChongWeiJie29"},"content":"_Details coming soon ..._","lastModifiedDate":"2023-10-02"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":67,"author":{"gitId":"ChongWeiJie29"},"content":"### Adding a prescription : `add`","lastModifiedDate":"2023-10-02"},{"lineNumber":68,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":69,"author":{"gitId":"RoeReRe"},"content":"Adds a prescription to the list of prescriptions.","lastModifiedDate":"2023-10-04"},{"lineNumber":70,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":71,"author":{"gitId":"ChongWeiJie29"},"content":"Format:","lastModifiedDate":"2023-10-02"},{"lineNumber":72,"author":{"gitId":"ChongWeiJie29"},"content":"```","lastModifiedDate":"2023-10-02"},{"lineNumber":73,"author":{"gitId":"ChongWeiJie29"},"content":"add","lastModifiedDate":"2023-10-02"},{"lineNumber":74,"author":{"gitId":"ChongWeiJie29"},"content":"  --medication \u003cmedication_name\u003e","lastModifiedDate":"2023-10-02"},{"lineNumber":75,"author":{"gitId":"ChongWeiJie29"},"content":"  --frequency \u003cfrequency\u003e","lastModifiedDate":"2023-10-02"},{"lineNumber":76,"author":{"gitId":"ChongWeiJie29"},"content":"  [--start \u003cstart_date\u003e]","lastModifiedDate":"2023-10-02"},{"lineNumber":77,"author":{"gitId":"ChongWeiJie29"},"content":"  [--end \u003cend_date\u003e]","lastModifiedDate":"2023-10-02"},{"lineNumber":78,"author":{"gitId":"ChongWeiJie29"},"content":"  [--remarks \u003cremarks\u003e]","lastModifiedDate":"2023-10-02"},{"lineNumber":79,"author":{"gitId":"ChongWeiJie29"},"content":"```","lastModifiedDate":"2023-10-02"},{"lineNumber":80,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":81,"author":{"gitId":"ChongWeiJie29"},"content":"* `\u003cfrequency\u003e` should follow this format `\u003crepetition dosage\u003e`.","lastModifiedDate":"2023-10-02"},{"lineNumber":82,"author":{"gitId":"ChongWeiJie29"},"content":"  * e.g. `--frequency \"daily 2\"`.","lastModifiedDate":"2023-10-02"},{"lineNumber":83,"author":{"gitId":"ChongWeiJie29"},"content":"    * This means take 2 tabs everyday.","lastModifiedDate":"2023-10-02"},{"lineNumber":84,"author":{"gitId":"ChongWeiJie29"},"content":"  * e.g. `--frequency \"daily 4\"`.","lastModifiedDate":"2023-10-02"},{"lineNumber":85,"author":{"gitId":"ChongWeiJie29"},"content":"    * This means take 4 tabs everyday.","lastModifiedDate":"2023-10-02"},{"lineNumber":86,"author":{"gitId":"ChongWeiJie29"},"content":"  * e.g. `--frequency \"weekly 2\"`.","lastModifiedDate":"2023-10-02"},{"lineNumber":87,"author":{"gitId":"ChongWeiJie29"},"content":"    * This means take 2 tabs on a particular day every week. The day is determined by the `\u003cstart_date\u003e` input. If `\u003cstart_date\u003e` is a Wednesday, this means take 2 tabs every Wednesday.","lastModifiedDate":"2023-10-02"},{"lineNumber":88,"author":{"gitId":"RoeReRe"},"content":"* If your prescriptions are to be taken every Wednesday and Sunday, add 2 separate entries into the list of prescriptions.","lastModifiedDate":"2023-10-04"},{"lineNumber":89,"author":{"gitId":"ChongWeiJie29"},"content":"  * `Add --medication \"Accutane 1\" --frequency \"weekly 1\" --start \"27-09-2023\"`.","lastModifiedDate":"2023-10-02"},{"lineNumber":90,"author":{"gitId":"ChongWeiJie29"},"content":"  * `Add --medication \"Accutane 2\" --frequency \"weekly 1\" --start \"01-10-2023\"`.","lastModifiedDate":"2023-10-02"},{"lineNumber":91,"author":{"gitId":"ChongWeiJie29"},"content":"* `\u003cstart_date\u003e` and `\u003cend_date\u003e` should be in dd-mm-yyyy format.","lastModifiedDate":"2023-10-02"},{"lineNumber":92,"author":{"gitId":"ChongWeiJie29"},"content":"  * e.g. \"20-09-2023\".","lastModifiedDate":"2023-10-02"},{"lineNumber":93,"author":{"gitId":"ChongWeiJie29"},"content":"* Since `--start \u003cstart_date\u003e` is an optional input, if there is none given, the input date of the entry will be used as the default start date.","lastModifiedDate":"2023-10-02"},{"lineNumber":94,"author":{"gitId":"ChongWeiJie29"},"content":"* Remarks can consist of any text.","lastModifiedDate":"2023-10-02"},{"lineNumber":95,"author":{"gitId":"ChongWeiJie29"},"content":"  * e.g. \"To be taken after meals\".","lastModifiedDate":"2023-10-02"},{"lineNumber":96,"author":{"gitId":"ChongWeiJie29"},"content":"  * e.g. \"Take after food\".","lastModifiedDate":"2023-10-02"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"ChongWeiJie29"},"content":"Examples:","lastModifiedDate":"2023-10-02"},{"lineNumber":99,"author":{"gitId":"ChongWeiJie29"},"content":"* `add --medication \"Aspirin\" --frequency \"daily\" --start \"20-09-2023\" --end \"03-10-2024\" --remarks \"Take during meals\"`.","lastModifiedDate":"2023-10-02"},{"lineNumber":100,"author":{"gitId":"ChongWeiJie29"},"content":"* `add --medication \"Amoxicillin\" --frequency \"twice daily\" --start \"20-09-2023\" --end \"03-10-2024\"`.","lastModifiedDate":"2023-10-02"},{"lineNumber":101,"author":{"gitId":"ChongWeiJie29"},"content":"* `add --medication \"Doxazosin\" --frequency \"daily\"`.","lastModifiedDate":"2023-10-02"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"ChongWeiJie29"},"content":"Example usage of add command in BayMeds:","lastModifiedDate":"2023-10-02"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"RoeReRe"},"content":"\u003cimg src\u003d\"images/ui/Ui-add.png\" alt\u003d\"Example of add command\" width\u003d\"460\" height\u003d\"330\"\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"RoeReRe"},"content":"### Listing all prescriptions : `list`","lastModifiedDate":"2023-10-03"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"RoeReRe"},"content":"Shows a list of all prescriptions.","lastModifiedDate":"2023-10-03"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"RoeReRe"},"content":"Format:","lastModifiedDate":"2023-10-03"},{"lineNumber":112,"author":{"gitId":"RoeReRe"},"content":"```","lastModifiedDate":"2023-10-03"},{"lineNumber":113,"author":{"gitId":"RoeReRe"},"content":"list","lastModifiedDate":"2023-10-03"},{"lineNumber":114,"author":{"gitId":"RoeReRe"},"content":"```","lastModifiedDate":"2023-10-03"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":116,"author":{"gitId":"RoeReRe"},"content":"Example usage of list command in BayMeds:","lastModifiedDate":"2023-10-03"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":118,"author":{"gitId":"RoeReRe"},"content":"\u003cimg src\u003d\"images/ui/Ui-list.png\" alt\u003d\"Example of list command\" width\u003d\"460\" height\u003d\"330\"\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"### Editing a person : `edit`","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"Edits an existing person in the address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"Format: `edit INDEX [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [t/TAG]…​`","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"* Edits the person at the specified `INDEX`. The index refers to the index number shown in the displayed person list. The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"* At least one of the optional fields must be provided.","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"* Existing values will be updated to the input values.","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"* When editing tags, the existing tags of the person will be removed i.e adding of tags is not cumulative.","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"* You can remove all the person’s tags by typing `t/` without","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    specifying any tags after it.","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"*  `edit 1 p/91234567 e/johndoe@example.com` Edits the phone number and email address of the 1st person to be `91234567` and `johndoe@example.com` respectively.","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"*  `edit 2 n/Betsy Crower t/` Edits the name of the 2nd person to be `Betsy Crower` and clears all existing tags.","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"### Locating persons by name : `find`","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"Finds persons whose names contain any of the given keywords.","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"Format: `find KEYWORD [MORE_KEYWORDS]`","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"* The search is case-insensitive. e.g `hans` will match `Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"* The order of the keywords does not matter. e.g. `Hans Bo` will match `Bo Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"* Only the name is searched.","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"* Only full words will be matched e.g. `Han` will not match `Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"* Persons matching at least one keyword will be returned (i.e. `OR` search).","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"  e.g. `Hans Bo` will return `Hans Gruber`, `Bo Yang`","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"* `find John` returns `john` and `John Doe`","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"* `find alex david` returns `Alex Yeoh`, `David Li`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"  ![result for \u0027find alex david\u0027](images/findAlexDavidResult.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"RoeReRe"},"content":"### Deleting a prescription : `delete`","lastModifiedDate":"2023-10-04"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"RoeReRe"},"content":"Deletes the specified prescription from the list of prescriptions.","lastModifiedDate":"2023-10-04"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"ChongWeiJie29"},"content":"Format:","lastModifiedDate":"2023-10-02"},{"lineNumber":160,"author":{"gitId":"ChongWeiJie29"},"content":"```","lastModifiedDate":"2023-10-02"},{"lineNumber":161,"author":{"gitId":"ChongWeiJie29"},"content":"delete","lastModifiedDate":"2023-10-02"},{"lineNumber":162,"author":{"gitId":"ChongWeiJie29"},"content":"  --medication \u003cmedication_name\u003e","lastModifiedDate":"2023-10-02"},{"lineNumber":163,"author":{"gitId":"ChongWeiJie29"},"content":"```","lastModifiedDate":"2023-10-02"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"TeeRenJing"},"content":"* `\u003cmedication_name\u003e` should not be empty.","lastModifiedDate":"2023-10-02"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"TeeRenJing"},"content":"* `delete --medication \"Aspirin\"`.","lastModifiedDate":"2023-10-02"},{"lineNumber":169,"author":{"gitId":"TeeRenJing"},"content":"* `delete --medication \"Amoxicillin\"`.","lastModifiedDate":"2023-10-02"},{"lineNumber":170,"author":{"gitId":"TeeRenJing"},"content":"* `delete --medication \"Doxazosin\"`.","lastModifiedDate":"2023-10-02"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":172,"author":{"gitId":"TeeRenJing"},"content":"Example usage of delete command in BayMeds:","lastModifiedDate":"2023-10-02"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":174,"author":{"gitId":"RoeReRe"},"content":"\u003cimg src\u003d\"images/ui/Ui-delete.png\" alt\u003d\"Example of delete command\" width\u003d\"460\" height\u003d\"330\"\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"jingyu987"},"content":"### Listing untaken medication : `list today`","lastModifiedDate":"2023-10-03"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":178,"author":{"gitId":"shyanyong"},"content":"Lists all remaining medications to be taken for the day.","lastModifiedDate":"2023-10-03"},{"lineNumber":179,"author":{"gitId":"shyanyong"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":180,"author":{"gitId":"shyanyong"},"content":"Format:","lastModifiedDate":"2023-10-03"},{"lineNumber":181,"author":{"gitId":"shyanyong"},"content":"```","lastModifiedDate":"2023-10-03"},{"lineNumber":182,"author":{"gitId":"shyanyong"},"content":"list today","lastModifiedDate":"2023-10-03"},{"lineNumber":183,"author":{"gitId":"shyanyong"},"content":"```","lastModifiedDate":"2023-10-03"},{"lineNumber":184,"author":{"gitId":"shyanyong"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":185,"author":{"gitId":"shyanyong"},"content":"Examples:","lastModifiedDate":"2023-10-03"},{"lineNumber":186,"author":{"gitId":"shyanyong"},"content":"* `list today`.","lastModifiedDate":"2023-10-03"},{"lineNumber":187,"author":{"gitId":"shyanyong"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":188,"author":{"gitId":"jingyu987"},"content":"Example usage of list today command in BayMeds:","lastModifiedDate":"2023-10-03"},{"lineNumber":189,"author":{"gitId":"shyanyong"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":190,"author":{"gitId":"jingyu987"},"content":"\u003cimg src\u003d\"images/ui/Ui-list_today.png\" alt\u003d\"Example of list today command\" width\u003d\"460\" height\u003d\"330\"\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":191,"author":{"gitId":"shyanyong"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":192,"author":{"gitId":"jingyu987"},"content":"### Marking a medication as taken : `take`","lastModifiedDate":"2023-10-03"},{"lineNumber":193,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":194,"author":{"gitId":"RoeReRe"},"content":"Marks a medication as consumed.","lastModifiedDate":"2023-10-04"},{"lineNumber":195,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":196,"author":{"gitId":"jingyu987"},"content":"Format:","lastModifiedDate":"2023-10-03"},{"lineNumber":197,"author":{"gitId":"jingyu987"},"content":"```","lastModifiedDate":"2023-10-03"},{"lineNumber":198,"author":{"gitId":"jingyu987"},"content":"take","lastModifiedDate":"2023-10-03"},{"lineNumber":199,"author":{"gitId":"jingyu987"},"content":"  --medication \u003cmedication_name\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":200,"author":{"gitId":"jingyu987"},"content":"  [--amount \u003camount_taken\u003e]","lastModifiedDate":"2023-10-03"},{"lineNumber":201,"author":{"gitId":"jingyu987"},"content":"  [--date \u003cdate\u003e]","lastModifiedDate":"2023-10-03"},{"lineNumber":202,"author":{"gitId":"jingyu987"},"content":"```","lastModifiedDate":"2023-10-03"},{"lineNumber":203,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":204,"author":{"gitId":"jingyu987"},"content":"* `\u003cmedication_name\u003e` should not be empty.","lastModifiedDate":"2023-10-03"},{"lineNumber":205,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":206,"author":{"gitId":"jingyu987"},"content":"Examples:","lastModifiedDate":"2023-10-03"},{"lineNumber":207,"author":{"gitId":"jingyu987"},"content":"* `take","lastModifiedDate":"2023-10-03"},{"lineNumber":208,"author":{"gitId":"jingyu987"},"content":"  --medication \"Aspirin\" --amount “1”  --date \"20-09-2023\"`.","lastModifiedDate":"2023-10-03"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":210,"author":{"gitId":"jingyu987"},"content":"Example usage of take command in BayMeds:","lastModifiedDate":"2023-10-03"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":212,"author":{"gitId":"RoeReRe"},"content":"\u003cimg src\u003d\"images/ui/Ui-take.png\" alt\u003d\"Example of take command\" width\u003d\"460\" height\u003d\"330\"\u003e","lastModifiedDate":"2023-10-04"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":214,"author":{"gitId":"-"},"content":"### Saving the data","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"ChongWeiJie29"},"content":"BayMeds data are saved in the hard disk automatically after any command that changes the data. There is no need to save manually.","lastModifiedDate":"2023-10-02"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"### Editing the data file","lastModifiedDate":"2021-02-04"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":220,"author":{"gitId":"ChongWeiJie29"},"content":"BayMeds data are saved automatically as a JSON file `[JAR file location]/data/BayMeds.json`. Advanced users are welcome to update data directly by editing that data file.","lastModifiedDate":"2023-10-02"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":222,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"warning\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":224,"author":{"gitId":"-"},"content":"**Caution:**","lastModifiedDate":"2023-09-12"},{"lineNumber":225,"author":{"gitId":"ChongWeiJie29"},"content":"If your changes to the data file makes its format invalid, BayMeds will discard all data and start with an empty data file at the next run.  Hence, it is recommended to take a backup of the file before editing it.","lastModifiedDate":"2023-10-02"},{"lineNumber":226,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":228,"author":{"gitId":"-"},"content":"### Archiving data files `[coming in v2.0]`","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"_Details coming soon ..._","lastModifiedDate":"2021-02-04"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another Computer?\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"ChongWeiJie29"},"content":"**A**: Install the app in the other computer and overwrite the empty data file it creates with the file that contains the data of your previous BayMeds home folder.","lastModifiedDate":"2023-10-02"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"## Known issues","lastModifiedDate":"2023-09-08"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":243,"author":{"gitId":"-"},"content":"1. **When using multiple screens**, if you move the application to a secondary screen, and later switch to using only the primary screen, the GUI will open off-screen. The remedy is to delete the `preferences.json` file created by the application before running the application again.","lastModifiedDate":"2023-09-08"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":245,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-09-08"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":247,"author":{"gitId":"-"},"content":"## Command summary","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"RoeReRe"},"content":"| Action          | Format, Example                                                                                                                                                                                                                                                 |","lastModifiedDate":"2023-10-04"},{"lineNumber":250,"author":{"gitId":"RoeReRe"},"content":"|-----------------|-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2023-10-04"},{"lineNumber":251,"author":{"gitId":"RoeReRe"},"content":"| **Help**        | `help`                                                                                                                                                                                                                                                          |","lastModifiedDate":"2023-10-04"},{"lineNumber":252,"author":{"gitId":"RoeReRe"},"content":"| **Add**         | `add --medication \u003cmedication_name\u003e --frequency \u003cfrequency\u003e  [--start \u003cstart_date\u003e] [--end \u003cend_date\u003e] [--remarks \u003cremarks\u003e]`, \u003cbr\u003e e.g. `add --medication \"Aspirin\" --frequency \"daily\" --start \"20-09-2023\" --end \"03-10-2024\" --remarks \"Take during meals\"` |","lastModifiedDate":"2023-10-04"},{"lineNumber":253,"author":{"gitId":"RoeReRe"},"content":"| **Delete**      | `delete --medication \u003cmedication_name\u003e`, \u003cbr\u003e e.g. `delete --medication \"Aspirin\"`                                                                                                                                                                              |","lastModifiedDate":"2023-10-04"},{"lineNumber":254,"author":{"gitId":"RoeReRe"},"content":"| **Mark**        | `take --medication \u003cmedication_name\u003e [--amount \u003camount_taken\u003e] [--date \u003cdate\u003e]`, \u003cbr\u003e e.g. `take --medication \"Aspirin\" --amount \"1\" --date \"20-09-2023\"`                                                                                                       |","lastModifiedDate":"2023-10-04"},{"lineNumber":255,"author":{"gitId":"RoeReRe"},"content":"| **List**        | `list`                                                                                                                                                                                                                                                          |","lastModifiedDate":"2023-10-04"},{"lineNumber":256,"author":{"gitId":"RoeReRe"},"content":"|  **List today** | `list today`                                                                                                                                                                                                                                                    |","lastModifiedDate":"2023-10-04"}],"authorContributionMap":{"TeeRenJing":5,"jingyu987":20,"shyanyong":12,"ChongWeiJie29":57,"RoeReRe":27,"-":135}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  layout: default.md","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  title: \"\"","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"RoeReRe"},"content":"# BayMeds v.2103","lastModifiedDate":"2023-09-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":8,"author":{"gitId":"RoeReRe"},"content":"[![CI Status](https://github.com/AY2324S1-CS2103T-T15-2/tp/actions/workflows/gradle.yml/badge.svg)](https://github.com/AY2324S1-CS2103T-T15-2/tp/actions)","lastModifiedDate":"2023-09-25"},{"lineNumber":9,"author":{"gitId":"RoeReRe"},"content":"[![codecov](https://codecov.io/gh/AY2324S1-CS2103T-T15-2/tp/branch/master/graph/badge.svg)](https://codecov.io/gh/AY2324S1-CS2103T-T15-2/tp)","lastModifiedDate":"2023-09-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"RoeReRe"},"content":"**BayMeds is a desktop application for managing your medications.** While it has a GUI (Graphical User Interface), most of the user interactions happen using a CLI (Command Line Interface).","lastModifiedDate":"2023-09-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"RoeReRe"},"content":"* If you are interested in using BayMeds, head over to the [_Quick Start_ section of the **User Guide**](UserGuide.html#quick-start).","lastModifiedDate":"2023-09-25"},{"lineNumber":16,"author":{"gitId":"RoeReRe"},"content":"* If you are interested about developing BayMeds, the [**Developer Guide**](DeveloperGuide.html) is a good place to start.","lastModifiedDate":"2023-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"**Acknowledgements**","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"RoeReRe":6,"-":15}},{"path":"docs/team/chongweijie29.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"ChongWeiJie29"},"content":"---","lastModifiedDate":"2023-10-01"},{"lineNumber":2,"author":{"gitId":"ChongWeiJie29"},"content":"  layout: default.md","lastModifiedDate":"2023-10-01"},{"lineNumber":3,"author":{"gitId":"ChongWeiJie29"},"content":"  title: \"ChongWeiJie29\u0027s Project Portfolio Page\"","lastModifiedDate":"2023-10-01"},{"lineNumber":4,"author":{"gitId":"ChongWeiJie29"},"content":"---","lastModifiedDate":"2023-10-01"},{"lineNumber":5,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":6,"author":{"gitId":"ChongWeiJie29"},"content":"### Project: BayMeds v.2103","lastModifiedDate":"2023-10-01"},{"lineNumber":7,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":8,"author":{"gitId":"ChongWeiJie29"},"content":"BayMeds v.2103 is a desktop application used for tracking medications. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2023-10-01"},{"lineNumber":9,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":10,"author":{"gitId":"ChongWeiJie29"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-10-01"},{"lineNumber":11,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":12,"author":{"gitId":"ChongWeiJie29"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2324s1.github.io/tp-dashboard/?search\u003dchongweijie29\u0026breakdown\u003dtrue)","lastModifiedDate":"2023-10-01"},{"lineNumber":13,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":14,"author":{"gitId":"ChongWeiJie29"},"content":"* **Enhancements implemented**:","lastModifiedDate":"2023-10-01"},{"lineNumber":15,"author":{"gitId":"ChongWeiJie29"},"content":"  * To be added","lastModifiedDate":"2023-10-01"},{"lineNumber":16,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":17,"author":{"gitId":"ChongWeiJie29"},"content":"* **Documentation**:","lastModifiedDate":"2023-10-01"},{"lineNumber":18,"author":{"gitId":"ChongWeiJie29"},"content":"  * User Guide:","lastModifiedDate":"2023-10-01"},{"lineNumber":19,"author":{"gitId":"ChongWeiJie29"},"content":"    * To be added","lastModifiedDate":"2023-10-01"},{"lineNumber":20,"author":{"gitId":"ChongWeiJie29"},"content":"  * Developer Guide:","lastModifiedDate":"2023-10-01"},{"lineNumber":21,"author":{"gitId":"ChongWeiJie29"},"content":"    * To be added","lastModifiedDate":"2023-10-01"},{"lineNumber":22,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":23,"author":{"gitId":"ChongWeiJie29"},"content":"* **Team-based tasks**:","lastModifiedDate":"2023-10-01"},{"lineNumber":24,"author":{"gitId":"ChongWeiJie29"},"content":"  * To be added","lastModifiedDate":"2023-10-01"},{"lineNumber":25,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":26,"author":{"gitId":"ChongWeiJie29"},"content":"* **Review and mentoring**:","lastModifiedDate":"2023-10-01"},{"lineNumber":27,"author":{"gitId":"ChongWeiJie29"},"content":"  * To be added","lastModifiedDate":"2023-10-01"},{"lineNumber":28,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":29,"author":{"gitId":"ChongWeiJie29"},"content":"* **Community**:","lastModifiedDate":"2023-10-01"},{"lineNumber":30,"author":{"gitId":"ChongWeiJie29"},"content":"  * To be added","lastModifiedDate":"2023-10-01"}],"authorContributionMap":{"ChongWeiJie29":30}},{"path":"docs/team/jingyu987.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"jingyu987"},"content":"---","lastModifiedDate":"2023-09-27"},{"lineNumber":2,"author":{"gitId":"jingyu987"},"content":"  layout: default.md","lastModifiedDate":"2023-09-27"},{"lineNumber":3,"author":{"gitId":"jingyu987"},"content":"  title: \"jingyu987\u0027s Project Portfolio Page\"","lastModifiedDate":"2023-09-27"},{"lineNumber":4,"author":{"gitId":"jingyu987"},"content":"---","lastModifiedDate":"2023-09-27"},{"lineNumber":5,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":6,"author":{"gitId":"jingyu987"},"content":"### Project: BayMeds v.2103","lastModifiedDate":"2023-09-27"},{"lineNumber":7,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":8,"author":{"gitId":"jingyu987"},"content":"BayMeds v.2103 is a desktop application used for tracking medications. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2023-09-27"},{"lineNumber":9,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":10,"author":{"gitId":"jingyu987"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-09-27"},{"lineNumber":11,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":12,"author":{"gitId":"jingyu987"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2324s1.github.io/tp-dashboard/?search\u003djingyu987\u0026breakdown\u003dtrue)","lastModifiedDate":"2023-09-27"},{"lineNumber":13,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":14,"author":{"gitId":"jingyu987"},"content":"* **Enhancements implemented**:","lastModifiedDate":"2023-09-27"},{"lineNumber":15,"author":{"gitId":"jingyu987"},"content":"  * To be added","lastModifiedDate":"2023-09-27"},{"lineNumber":16,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":17,"author":{"gitId":"jingyu987"},"content":"* **Documentation**:","lastModifiedDate":"2023-09-27"},{"lineNumber":18,"author":{"gitId":"jingyu987"},"content":"  * User Guide:","lastModifiedDate":"2023-09-27"},{"lineNumber":19,"author":{"gitId":"jingyu987"},"content":"    * To be added","lastModifiedDate":"2023-09-27"},{"lineNumber":20,"author":{"gitId":"jingyu987"},"content":"  * Developer Guide:","lastModifiedDate":"2023-09-27"},{"lineNumber":21,"author":{"gitId":"jingyu987"},"content":"    * To be added","lastModifiedDate":"2023-09-27"},{"lineNumber":22,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":23,"author":{"gitId":"jingyu987"},"content":"* **Team-based tasks**:","lastModifiedDate":"2023-09-27"},{"lineNumber":24,"author":{"gitId":"jingyu987"},"content":"  * To be added","lastModifiedDate":"2023-09-27"},{"lineNumber":25,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":26,"author":{"gitId":"jingyu987"},"content":"* **Review and mentoring**:","lastModifiedDate":"2023-09-27"},{"lineNumber":27,"author":{"gitId":"jingyu987"},"content":"  * To be added","lastModifiedDate":"2023-09-27"},{"lineNumber":28,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":29,"author":{"gitId":"jingyu987"},"content":"* **Community**:","lastModifiedDate":"2023-09-27"},{"lineNumber":30,"author":{"gitId":"jingyu987"},"content":"  * To be added","lastModifiedDate":"2023-09-27"}],"authorContributionMap":{"jingyu987":30}},{"path":"docs/team/roerere.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"RoeReRe"},"content":"---","lastModifiedDate":"2023-09-25"},{"lineNumber":2,"author":{"gitId":"RoeReRe"},"content":"  layout: default.md","lastModifiedDate":"2023-09-25"},{"lineNumber":3,"author":{"gitId":"RoeReRe"},"content":"  title: \"RoeReRe\u0027s Project Portfolio Page\"","lastModifiedDate":"2023-09-25"},{"lineNumber":4,"author":{"gitId":"RoeReRe"},"content":"---","lastModifiedDate":"2023-09-25"},{"lineNumber":5,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":6,"author":{"gitId":"RoeReRe"},"content":"### Project: BayMeds v.2103","lastModifiedDate":"2023-09-25"},{"lineNumber":7,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":8,"author":{"gitId":"RoeReRe"},"content":"BayMeds v.2103 is a desktop application used for tracking medications. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2023-09-25"},{"lineNumber":9,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":10,"author":{"gitId":"RoeReRe"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-09-25"},{"lineNumber":11,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":12,"author":{"gitId":"RoeReRe"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2324s1.github.io/tp-dashboard/?search\u003droerere\u0026breakdown\u003dtrue)","lastModifiedDate":"2023-09-25"},{"lineNumber":13,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":14,"author":{"gitId":"RoeReRe"},"content":"* **Enhancements implemented**:","lastModifiedDate":"2023-09-25"},{"lineNumber":15,"author":{"gitId":"RoeReRe"},"content":"  * To be added","lastModifiedDate":"2023-09-25"},{"lineNumber":16,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":17,"author":{"gitId":"RoeReRe"},"content":"* **Documentation**:","lastModifiedDate":"2023-09-25"},{"lineNumber":18,"author":{"gitId":"RoeReRe"},"content":"  * User Guide:","lastModifiedDate":"2023-09-25"},{"lineNumber":19,"author":{"gitId":"RoeReRe"},"content":"    * To be added","lastModifiedDate":"2023-09-25"},{"lineNumber":20,"author":{"gitId":"RoeReRe"},"content":"  * Developer Guide:","lastModifiedDate":"2023-09-25"},{"lineNumber":21,"author":{"gitId":"RoeReRe"},"content":"    * To be added","lastModifiedDate":"2023-09-25"},{"lineNumber":22,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":23,"author":{"gitId":"RoeReRe"},"content":"* **Team-based tasks**:","lastModifiedDate":"2023-09-25"},{"lineNumber":24,"author":{"gitId":"RoeReRe"},"content":"  * To be added","lastModifiedDate":"2023-09-25"},{"lineNumber":25,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":26,"author":{"gitId":"RoeReRe"},"content":"* **Review and mentoring**:","lastModifiedDate":"2023-09-25"},{"lineNumber":27,"author":{"gitId":"RoeReRe"},"content":"  * To be added","lastModifiedDate":"2023-09-25"},{"lineNumber":28,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":29,"author":{"gitId":"RoeReRe"},"content":"* **Community**:","lastModifiedDate":"2023-09-25"},{"lineNumber":30,"author":{"gitId":"RoeReRe"},"content":"  * To be added","lastModifiedDate":"2023-09-25"}],"authorContributionMap":{"RoeReRe":30}},{"path":"docs/team/shyanyong.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"shyanyong"},"content":"---","lastModifiedDate":"2023-09-27"},{"lineNumber":2,"author":{"gitId":"shyanyong"},"content":"  layout: default.md","lastModifiedDate":"2023-09-27"},{"lineNumber":3,"author":{"gitId":"shyanyong"},"content":"  title: \"shyanyong\u0027s Project Portfolio Page\"","lastModifiedDate":"2023-09-27"},{"lineNumber":4,"author":{"gitId":"shyanyong"},"content":"---","lastModifiedDate":"2023-09-27"},{"lineNumber":5,"author":{"gitId":"shyanyong"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":6,"author":{"gitId":"shyanyong"},"content":"### Project: BayMeds v.2103","lastModifiedDate":"2023-09-27"},{"lineNumber":7,"author":{"gitId":"shyanyong"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":8,"author":{"gitId":"shyanyong"},"content":"BayMeds v.2103 is a desktop application used for tracking medications. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2023-09-27"},{"lineNumber":9,"author":{"gitId":"shyanyong"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":10,"author":{"gitId":"shyanyong"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-09-27"},{"lineNumber":11,"author":{"gitId":"shyanyong"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":12,"author":{"gitId":"shyanyong"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2324s1.github.io/tp-dashboard/?search\u003dshyanyong\u0026breakdown\u003dtrue)","lastModifiedDate":"2023-09-27"},{"lineNumber":13,"author":{"gitId":"shyanyong"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":14,"author":{"gitId":"shyanyong"},"content":"* **Enhancements implemented**:","lastModifiedDate":"2023-09-27"},{"lineNumber":15,"author":{"gitId":"shyanyong"},"content":"  * To be added","lastModifiedDate":"2023-09-27"},{"lineNumber":16,"author":{"gitId":"shyanyong"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":17,"author":{"gitId":"shyanyong"},"content":"* **Documentation**:","lastModifiedDate":"2023-09-27"},{"lineNumber":18,"author":{"gitId":"shyanyong"},"content":"  * User Guide:","lastModifiedDate":"2023-09-27"},{"lineNumber":19,"author":{"gitId":"shyanyong"},"content":"    * To be added","lastModifiedDate":"2023-09-27"},{"lineNumber":20,"author":{"gitId":"shyanyong"},"content":"  * Developer Guide:","lastModifiedDate":"2023-09-27"},{"lineNumber":21,"author":{"gitId":"shyanyong"},"content":"    * To be added","lastModifiedDate":"2023-09-27"},{"lineNumber":22,"author":{"gitId":"shyanyong"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":23,"author":{"gitId":"shyanyong"},"content":"* **Team-based tasks**:","lastModifiedDate":"2023-09-27"},{"lineNumber":24,"author":{"gitId":"shyanyong"},"content":"  * To be added","lastModifiedDate":"2023-09-27"},{"lineNumber":25,"author":{"gitId":"shyanyong"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":26,"author":{"gitId":"shyanyong"},"content":"* **Review and mentoring**:","lastModifiedDate":"2023-09-27"},{"lineNumber":27,"author":{"gitId":"shyanyong"},"content":"  * To be added","lastModifiedDate":"2023-09-27"},{"lineNumber":28,"author":{"gitId":"shyanyong"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":29,"author":{"gitId":"shyanyong"},"content":"* **Community**:","lastModifiedDate":"2023-09-27"},{"lineNumber":30,"author":{"gitId":"shyanyong"},"content":"  * To be added","lastModifiedDate":"2023-09-27"}],"authorContributionMap":{"shyanyong":30}},{"path":"docs/team/teerenjing.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"TeeRenJing"},"content":"---","lastModifiedDate":"2023-09-26"},{"lineNumber":2,"author":{"gitId":"TeeRenJing"},"content":"  layout: default.md","lastModifiedDate":"2023-09-26"},{"lineNumber":3,"author":{"gitId":"TeeRenJing"},"content":"  title: \"TeeRenJing\u0027s Project Portfolio Page\"","lastModifiedDate":"2023-09-26"},{"lineNumber":4,"author":{"gitId":"TeeRenJing"},"content":"---","lastModifiedDate":"2023-09-26"},{"lineNumber":5,"author":{"gitId":"TeeRenJing"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":6,"author":{"gitId":"TeeRenJing"},"content":"### Project: BayMeds v.2103","lastModifiedDate":"2023-09-26"},{"lineNumber":7,"author":{"gitId":"TeeRenJing"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":8,"author":{"gitId":"TeeRenJing"},"content":"BayMeds v.2103 is a desktop application used for tracking medications. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2023-09-26"},{"lineNumber":9,"author":{"gitId":"TeeRenJing"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":10,"author":{"gitId":"TeeRenJing"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-09-26"},{"lineNumber":11,"author":{"gitId":"TeeRenJing"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":12,"author":{"gitId":"TeeRenJing"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2324s1.github.io/tp-dashboard/?search\u003dteerenjing\u0026breakdown\u003dtrue)","lastModifiedDate":"2023-09-26"},{"lineNumber":13,"author":{"gitId":"TeeRenJing"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":14,"author":{"gitId":"TeeRenJing"},"content":"* **Enhancements implemented**:","lastModifiedDate":"2023-09-26"},{"lineNumber":15,"author":{"gitId":"TeeRenJing"},"content":"  * To be added","lastModifiedDate":"2023-09-26"},{"lineNumber":16,"author":{"gitId":"TeeRenJing"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":17,"author":{"gitId":"TeeRenJing"},"content":"* **Documentation**:","lastModifiedDate":"2023-09-26"},{"lineNumber":18,"author":{"gitId":"TeeRenJing"},"content":"  * User Guide:","lastModifiedDate":"2023-09-26"},{"lineNumber":19,"author":{"gitId":"TeeRenJing"},"content":"    * To be added","lastModifiedDate":"2023-09-26"},{"lineNumber":20,"author":{"gitId":"TeeRenJing"},"content":"  * Developer Guide:","lastModifiedDate":"2023-09-26"},{"lineNumber":21,"author":{"gitId":"TeeRenJing"},"content":"    * To be added","lastModifiedDate":"2023-09-26"},{"lineNumber":22,"author":{"gitId":"TeeRenJing"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":23,"author":{"gitId":"TeeRenJing"},"content":"* **Team-based tasks**:","lastModifiedDate":"2023-09-26"},{"lineNumber":24,"author":{"gitId":"TeeRenJing"},"content":"  * To be added","lastModifiedDate":"2023-09-26"},{"lineNumber":25,"author":{"gitId":"TeeRenJing"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":26,"author":{"gitId":"TeeRenJing"},"content":"* **Review and mentoring**:","lastModifiedDate":"2023-09-26"},{"lineNumber":27,"author":{"gitId":"TeeRenJing"},"content":"  * To be added","lastModifiedDate":"2023-09-26"},{"lineNumber":28,"author":{"gitId":"TeeRenJing"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":29,"author":{"gitId":"TeeRenJing"},"content":"* **Community**:","lastModifiedDate":"2023-09-26"},{"lineNumber":30,"author":{"gitId":"TeeRenJing"},"content":"  * To be added","lastModifiedDate":"2023-09-26"}],"authorContributionMap":{"TeeRenJing":30}},{"path":"src/main/java/seedu/address/Main.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address;","lastModifiedDate":"2019-02-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-07-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2019-02-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-07-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2019-02-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * The main entry point to the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * This is a workaround for the following error when MainApp is made the","lastModifiedDate":"2019-02-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * entry point of the application:","lastModifiedDate":"2019-02-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" *     Error: JavaFX runtime components are missing, and are required to run this application","lastModifiedDate":"2019-02-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The reason is that MainApp extends Application. In that case, the","lastModifiedDate":"2019-02-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * LauncherHelper will check for the javafx.graphics module to be present","lastModifiedDate":"2019-02-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * as a named module. We don\u0027t use JavaFX via the module system so it can\u0027t","lastModifiedDate":"2019-02-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * find the javafx.graphics module, and so the launch is aborted.","lastModifiedDate":"2019-02-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * By having a separate main class (Main) that doesn\u0027t extend Application","lastModifiedDate":"2019-02-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * to be the entry point of the application, we avoid this issue.","lastModifiedDate":"2019-02-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2019-02-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class Main {","lastModifiedDate":"2019-02-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static Logger logger \u003d LogsCenter.getLogger(Main.class);","lastModifiedDate":"2023-07-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-02-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // As per https://github.com/openjdk/jfx/blob/master/doc-files/release-notes-16.md","lastModifiedDate":"2023-07-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // JavaFX 16 (or later) runtime logs a warning at startup if JavaFX classes are loaded from","lastModifiedDate":"2023-07-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // the classpath instead of a module.","lastModifiedDate":"2023-07-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // Our application does not use Java modules yet. Even if it did, modules are ignored when","lastModifiedDate":"2023-07-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // packed into a FAT Jar file (as we do), which means this warning will persist even then.","lastModifiedDate":"2023-07-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // The warning however, can be safely ignored. Thus, the following log informs","lastModifiedDate":"2023-07-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // the user (if looking at the log output) that the said warning appearing in the log","lastModifiedDate":"2023-07-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // can be ignored.","lastModifiedDate":"2023-07-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        logger.warning(\"The warning about Unsupported JavaFX configuration below can be ignored.\");","lastModifiedDate":"2023-07-27"},{"lineNumber":39,"author":{"gitId":"ChongWeiJie29"},"content":"        Application.launch(MainAppPrescription.class, args);","lastModifiedDate":"2023-10-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-02-08"}],"authorContributionMap":{"ChongWeiJie29":1,"-":40}},{"path":"src/main/java/seedu/address/MainAppPrescription.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ChongWeiJie29"},"content":"package seedu.address;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"ChongWeiJie29"},"content":"import java.io.IOException;","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"ChongWeiJie29"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"ChongWeiJie29"},"content":"import java.util.Optional;","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"ChongWeiJie29"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"ChongWeiJie29"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"ChongWeiJie29"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"ChongWeiJie29"},"content":"import seedu.address.commons.core.Config;","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"ChongWeiJie29"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"ChongWeiJie29"},"content":"import seedu.address.commons.core.Version;","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"ChongWeiJie29"},"content":"import seedu.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"ChongWeiJie29"},"content":"import seedu.address.commons.util.ConfigUtil;","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"ChongWeiJie29"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"ChongWeiJie29"},"content":"import seedu.address.logic.LogicManagerPrescription;","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"ChongWeiJie29"},"content":"import seedu.address.logic.LogicPrescription;","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"ChongWeiJie29"},"content":"import seedu.address.model.ModelManagerPrescription;","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"ChongWeiJie29"},"content":"import seedu.address.model.ModelPrescription;","lastModifiedDate":"2023-10-12"},{"lineNumber":20,"author":{"gitId":"ChongWeiJie29"},"content":"import seedu.address.model.PrescriptionList;","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"ChongWeiJie29"},"content":"import seedu.address.model.ReadOnlyPrescriptionList;","lastModifiedDate":"2023-10-12"},{"lineNumber":22,"author":{"gitId":"ChongWeiJie29"},"content":"import seedu.address.model.ReadOnlyUserPrefsPrescription;","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"ChongWeiJie29"},"content":"import seedu.address.model.UserPrefsPrescription;","lastModifiedDate":"2023-10-12"},{"lineNumber":24,"author":{"gitId":"ChongWeiJie29"},"content":"import seedu.address.model.util.SampleDataUtilPrescription;","lastModifiedDate":"2023-10-12"},{"lineNumber":25,"author":{"gitId":"ChongWeiJie29"},"content":"import seedu.address.storage.JsonPrescriptionListStorage;","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"ChongWeiJie29"},"content":"import seedu.address.storage.JsonUserPrefsStoragePrescription;","lastModifiedDate":"2023-10-12"},{"lineNumber":27,"author":{"gitId":"ChongWeiJie29"},"content":"import seedu.address.storage.PrescriptionListStorage;","lastModifiedDate":"2023-10-12"},{"lineNumber":28,"author":{"gitId":"ChongWeiJie29"},"content":"import seedu.address.storage.StorageManagerPrescription;","lastModifiedDate":"2023-10-12"},{"lineNumber":29,"author":{"gitId":"ChongWeiJie29"},"content":"import seedu.address.storage.StoragePrescription;","lastModifiedDate":"2023-10-12"},{"lineNumber":30,"author":{"gitId":"ChongWeiJie29"},"content":"import seedu.address.storage.UserPrefsStoragePrescription;","lastModifiedDate":"2023-10-12"},{"lineNumber":31,"author":{"gitId":"ChongWeiJie29"},"content":"import seedu.address.ui.Ui;","lastModifiedDate":"2023-10-12"},{"lineNumber":32,"author":{"gitId":"ChongWeiJie29"},"content":"import seedu.address.ui.UiManagerPrescription;","lastModifiedDate":"2023-10-12"},{"lineNumber":33,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":34,"author":{"gitId":"ChongWeiJie29"},"content":"/**","lastModifiedDate":"2023-10-12"},{"lineNumber":35,"author":{"gitId":"ChongWeiJie29"},"content":" * Runs the application.","lastModifiedDate":"2023-10-12"},{"lineNumber":36,"author":{"gitId":"ChongWeiJie29"},"content":" */","lastModifiedDate":"2023-10-12"},{"lineNumber":37,"author":{"gitId":"ChongWeiJie29"},"content":"public class MainAppPrescription extends Application {","lastModifiedDate":"2023-10-12"},{"lineNumber":38,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":39,"author":{"gitId":"ChongWeiJie29"},"content":"    public static final Version VERSION \u003d new Version(0, 2, 2, true);","lastModifiedDate":"2023-10-12"},{"lineNumber":40,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":41,"author":{"gitId":"ChongWeiJie29"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(MainAppPrescription.class);","lastModifiedDate":"2023-10-12"},{"lineNumber":42,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":43,"author":{"gitId":"ChongWeiJie29"},"content":"    protected Ui ui;","lastModifiedDate":"2023-10-12"},{"lineNumber":44,"author":{"gitId":"ChongWeiJie29"},"content":"    protected LogicPrescription logic;","lastModifiedDate":"2023-10-12"},{"lineNumber":45,"author":{"gitId":"ChongWeiJie29"},"content":"    protected StoragePrescription storage;","lastModifiedDate":"2023-10-12"},{"lineNumber":46,"author":{"gitId":"ChongWeiJie29"},"content":"    protected ModelPrescription model;","lastModifiedDate":"2023-10-12"},{"lineNumber":47,"author":{"gitId":"ChongWeiJie29"},"content":"    protected Config config;","lastModifiedDate":"2023-10-12"},{"lineNumber":48,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":49,"author":{"gitId":"ChongWeiJie29"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":50,"author":{"gitId":"ChongWeiJie29"},"content":"    public void init() throws Exception {","lastModifiedDate":"2023-10-12"},{"lineNumber":51,"author":{"gitId":"ChongWeiJie29"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d[ Initializing PrescriptionList ]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2023-10-12"},{"lineNumber":52,"author":{"gitId":"ChongWeiJie29"},"content":"        super.init();","lastModifiedDate":"2023-10-12"},{"lineNumber":53,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":54,"author":{"gitId":"ChongWeiJie29"},"content":"        AppParameters appParameters \u003d AppParameters.parse(getParameters());","lastModifiedDate":"2023-10-12"},{"lineNumber":55,"author":{"gitId":"ChongWeiJie29"},"content":"        config \u003d initConfig(appParameters.getConfigPath());","lastModifiedDate":"2023-10-12"},{"lineNumber":56,"author":{"gitId":"ChongWeiJie29"},"content":"        initLogging(config);","lastModifiedDate":"2023-10-12"},{"lineNumber":57,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":58,"author":{"gitId":"ChongWeiJie29"},"content":"        UserPrefsStoragePrescription userPrefsStorage \u003d new JsonUserPrefsStoragePrescription(","lastModifiedDate":"2023-10-12"},{"lineNumber":59,"author":{"gitId":"ChongWeiJie29"},"content":"            config.getUserPrefsFilePath());","lastModifiedDate":"2023-10-12"},{"lineNumber":60,"author":{"gitId":"ChongWeiJie29"},"content":"        UserPrefsPrescription userPrefs \u003d initPrefs(userPrefsStorage);","lastModifiedDate":"2023-10-12"},{"lineNumber":61,"author":{"gitId":"ChongWeiJie29"},"content":"        PrescriptionListStorage prescriptionListStorage \u003d new JsonPrescriptionListStorage(","lastModifiedDate":"2023-10-12"},{"lineNumber":62,"author":{"gitId":"ChongWeiJie29"},"content":"            userPrefs.getPrescriptionListFilePath());","lastModifiedDate":"2023-10-12"},{"lineNumber":63,"author":{"gitId":"ChongWeiJie29"},"content":"        storage \u003d new StorageManagerPrescription(prescriptionListStorage, userPrefsStorage);","lastModifiedDate":"2023-10-12"},{"lineNumber":64,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":65,"author":{"gitId":"ChongWeiJie29"},"content":"        model \u003d initModelManager(storage, userPrefs);","lastModifiedDate":"2023-10-12"},{"lineNumber":66,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":67,"author":{"gitId":"ChongWeiJie29"},"content":"        logic \u003d new LogicManagerPrescription(model, storage);","lastModifiedDate":"2023-10-12"},{"lineNumber":68,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":69,"author":{"gitId":"ChongWeiJie29"},"content":"        ui \u003d new UiManagerPrescription(logic);","lastModifiedDate":"2023-10-12"},{"lineNumber":70,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":71,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":72,"author":{"gitId":"ChongWeiJie29"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":73,"author":{"gitId":"ChongWeiJie29"},"content":"     * Returns a {@code ModelManager} with the data from {@code storage}\u0027s address book and {@code userPrefs}. \u003cbr\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":74,"author":{"gitId":"ChongWeiJie29"},"content":"     * The data from the sample address book will be used instead if {@code storage}\u0027s address book is not found,","lastModifiedDate":"2023-10-12"},{"lineNumber":75,"author":{"gitId":"ChongWeiJie29"},"content":"     * or an empty address book will be used instead if errors occur when reading {@code storage}\u0027s address book.","lastModifiedDate":"2023-10-12"},{"lineNumber":76,"author":{"gitId":"ChongWeiJie29"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":77,"author":{"gitId":"ChongWeiJie29"},"content":"    private ModelPrescription initModelManager(StoragePrescription storage, ReadOnlyUserPrefsPrescription userPrefs) {","lastModifiedDate":"2023-10-12"},{"lineNumber":78,"author":{"gitId":"ChongWeiJie29"},"content":"        logger.info(\"Using data file : \" + storage.getPrescriptionListFilePath());","lastModifiedDate":"2023-10-12"},{"lineNumber":79,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":80,"author":{"gitId":"ChongWeiJie29"},"content":"        Optional\u003cReadOnlyPrescriptionList\u003e prescriptionListOptional;","lastModifiedDate":"2023-10-12"},{"lineNumber":81,"author":{"gitId":"ChongWeiJie29"},"content":"        ReadOnlyPrescriptionList initialData;","lastModifiedDate":"2023-10-12"},{"lineNumber":82,"author":{"gitId":"ChongWeiJie29"},"content":"        try {","lastModifiedDate":"2023-10-12"},{"lineNumber":83,"author":{"gitId":"ChongWeiJie29"},"content":"            prescriptionListOptional \u003d storage.readPrescriptionList();","lastModifiedDate":"2023-10-12"},{"lineNumber":84,"author":{"gitId":"ChongWeiJie29"},"content":"            if (!((Optional\u003c?\u003e) prescriptionListOptional).isPresent()) {","lastModifiedDate":"2023-10-12"},{"lineNumber":85,"author":{"gitId":"ChongWeiJie29"},"content":"                logger.info(\"Creating a new data file \" + storage.getPrescriptionListFilePath()","lastModifiedDate":"2023-10-12"},{"lineNumber":86,"author":{"gitId":"ChongWeiJie29"},"content":"                        + \" populated with a sample PrescriptionList.\");","lastModifiedDate":"2023-10-12"},{"lineNumber":87,"author":{"gitId":"ChongWeiJie29"},"content":"            }","lastModifiedDate":"2023-10-12"},{"lineNumber":88,"author":{"gitId":"ChongWeiJie29"},"content":"            initialData \u003d prescriptionListOptional.orElseGet(SampleDataUtilPrescription::getSamplePrescriptionList);","lastModifiedDate":"2023-10-12"},{"lineNumber":89,"author":{"gitId":"ChongWeiJie29"},"content":"        } catch (DataLoadingException e) {","lastModifiedDate":"2023-10-12"},{"lineNumber":90,"author":{"gitId":"ChongWeiJie29"},"content":"            logger.warning(\"Data file at \" + storage.getPrescriptionListFilePath() + \" could not be loaded.\"","lastModifiedDate":"2023-10-12"},{"lineNumber":91,"author":{"gitId":"ChongWeiJie29"},"content":"                    + \" Will be starting with an empty PrescriptionList.\");","lastModifiedDate":"2023-10-12"},{"lineNumber":92,"author":{"gitId":"ChongWeiJie29"},"content":"            initialData \u003d new PrescriptionList();","lastModifiedDate":"2023-10-12"},{"lineNumber":93,"author":{"gitId":"ChongWeiJie29"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":94,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":95,"author":{"gitId":"ChongWeiJie29"},"content":"        return new ModelManagerPrescription(initialData, userPrefs);","lastModifiedDate":"2023-10-12"},{"lineNumber":96,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":97,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":98,"author":{"gitId":"ChongWeiJie29"},"content":"    private void initLogging(Config config) {","lastModifiedDate":"2023-10-12"},{"lineNumber":99,"author":{"gitId":"ChongWeiJie29"},"content":"        LogsCenter.init(config);","lastModifiedDate":"2023-10-12"},{"lineNumber":100,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":101,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":102,"author":{"gitId":"ChongWeiJie29"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":103,"author":{"gitId":"ChongWeiJie29"},"content":"     * Returns a {@code Config} using the file at {@code configFilePath}. \u003cbr\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":104,"author":{"gitId":"ChongWeiJie29"},"content":"     * The default file path {@code Config#DEFAULT_CONFIG_FILE} will be used instead","lastModifiedDate":"2023-10-12"},{"lineNumber":105,"author":{"gitId":"ChongWeiJie29"},"content":"     * if {@code configFilePath} is null.","lastModifiedDate":"2023-10-12"},{"lineNumber":106,"author":{"gitId":"ChongWeiJie29"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":107,"author":{"gitId":"ChongWeiJie29"},"content":"    protected Config initConfig(Path configFilePath) {","lastModifiedDate":"2023-10-12"},{"lineNumber":108,"author":{"gitId":"ChongWeiJie29"},"content":"        Config initializedConfig;","lastModifiedDate":"2023-10-12"},{"lineNumber":109,"author":{"gitId":"ChongWeiJie29"},"content":"        Path configFilePathUsed;","lastModifiedDate":"2023-10-12"},{"lineNumber":110,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":111,"author":{"gitId":"ChongWeiJie29"},"content":"        configFilePathUsed \u003d Config.DEFAULT_CONFIG_FILE;","lastModifiedDate":"2023-10-12"},{"lineNumber":112,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":113,"author":{"gitId":"ChongWeiJie29"},"content":"        if (configFilePath !\u003d null) {","lastModifiedDate":"2023-10-12"},{"lineNumber":114,"author":{"gitId":"ChongWeiJie29"},"content":"            logger.info(\"Custom Config file specified \" + configFilePath);","lastModifiedDate":"2023-10-12"},{"lineNumber":115,"author":{"gitId":"ChongWeiJie29"},"content":"            configFilePathUsed \u003d configFilePath;","lastModifiedDate":"2023-10-12"},{"lineNumber":116,"author":{"gitId":"ChongWeiJie29"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":117,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":118,"author":{"gitId":"ChongWeiJie29"},"content":"        logger.info(\"Using config file : \" + configFilePathUsed);","lastModifiedDate":"2023-10-12"},{"lineNumber":119,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":120,"author":{"gitId":"ChongWeiJie29"},"content":"        try {","lastModifiedDate":"2023-10-12"},{"lineNumber":121,"author":{"gitId":"ChongWeiJie29"},"content":"            Optional\u003cConfig\u003e configOptional \u003d ConfigUtil.readConfig(configFilePathUsed);","lastModifiedDate":"2023-10-12"},{"lineNumber":122,"author":{"gitId":"ChongWeiJie29"},"content":"            if (!configOptional.isPresent()) {","lastModifiedDate":"2023-10-12"},{"lineNumber":123,"author":{"gitId":"ChongWeiJie29"},"content":"                logger.info(\"Creating new config file \" + configFilePathUsed);","lastModifiedDate":"2023-10-12"},{"lineNumber":124,"author":{"gitId":"ChongWeiJie29"},"content":"            }","lastModifiedDate":"2023-10-12"},{"lineNumber":125,"author":{"gitId":"ChongWeiJie29"},"content":"            initializedConfig \u003d configOptional.orElse(new Config());","lastModifiedDate":"2023-10-12"},{"lineNumber":126,"author":{"gitId":"ChongWeiJie29"},"content":"        } catch (DataLoadingException e) {","lastModifiedDate":"2023-10-12"},{"lineNumber":127,"author":{"gitId":"ChongWeiJie29"},"content":"            logger.warning(\"Config file at \" + configFilePathUsed + \" could not be loaded.\"","lastModifiedDate":"2023-10-12"},{"lineNumber":128,"author":{"gitId":"ChongWeiJie29"},"content":"                    + \" Using default config properties.\");","lastModifiedDate":"2023-10-12"},{"lineNumber":129,"author":{"gitId":"ChongWeiJie29"},"content":"            initializedConfig \u003d new Config();","lastModifiedDate":"2023-10-12"},{"lineNumber":130,"author":{"gitId":"ChongWeiJie29"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":131,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":132,"author":{"gitId":"ChongWeiJie29"},"content":"        //Update config file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2023-10-12"},{"lineNumber":133,"author":{"gitId":"ChongWeiJie29"},"content":"        try {","lastModifiedDate":"2023-10-12"},{"lineNumber":134,"author":{"gitId":"ChongWeiJie29"},"content":"            ConfigUtil.saveConfig(initializedConfig, configFilePathUsed);","lastModifiedDate":"2023-10-12"},{"lineNumber":135,"author":{"gitId":"ChongWeiJie29"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-10-12"},{"lineNumber":136,"author":{"gitId":"ChongWeiJie29"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2023-10-12"},{"lineNumber":137,"author":{"gitId":"ChongWeiJie29"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":138,"author":{"gitId":"ChongWeiJie29"},"content":"        return initializedConfig;","lastModifiedDate":"2023-10-12"},{"lineNumber":139,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":140,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":141,"author":{"gitId":"ChongWeiJie29"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":142,"author":{"gitId":"ChongWeiJie29"},"content":"     * Returns a {@code UserPrefs} using the file at {@code storage}\u0027s user prefs file path,","lastModifiedDate":"2023-10-12"},{"lineNumber":143,"author":{"gitId":"ChongWeiJie29"},"content":"     * or a new {@code UserPrefs} with default configuration if errors occur when","lastModifiedDate":"2023-10-12"},{"lineNumber":144,"author":{"gitId":"ChongWeiJie29"},"content":"     * reading from the file.","lastModifiedDate":"2023-10-12"},{"lineNumber":145,"author":{"gitId":"ChongWeiJie29"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":146,"author":{"gitId":"ChongWeiJie29"},"content":"    protected UserPrefsPrescription initPrefs(UserPrefsStoragePrescription storage) {","lastModifiedDate":"2023-10-12"},{"lineNumber":147,"author":{"gitId":"ChongWeiJie29"},"content":"        Path prefsFilePath \u003d storage.getUserPrefsFilePath();","lastModifiedDate":"2023-10-12"},{"lineNumber":148,"author":{"gitId":"ChongWeiJie29"},"content":"        logger.info(\"Using preference file : \" + prefsFilePath);","lastModifiedDate":"2023-10-12"},{"lineNumber":149,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":150,"author":{"gitId":"ChongWeiJie29"},"content":"        UserPrefsPrescription initializedPrefs;","lastModifiedDate":"2023-10-12"},{"lineNumber":151,"author":{"gitId":"ChongWeiJie29"},"content":"        try {","lastModifiedDate":"2023-10-12"},{"lineNumber":152,"author":{"gitId":"ChongWeiJie29"},"content":"            Optional\u003cUserPrefsPrescription\u003e prefsOptional \u003d storage.readUserPrefs();","lastModifiedDate":"2023-10-12"},{"lineNumber":153,"author":{"gitId":"ChongWeiJie29"},"content":"            if (!prefsOptional.isPresent()) {","lastModifiedDate":"2023-10-12"},{"lineNumber":154,"author":{"gitId":"ChongWeiJie29"},"content":"                logger.info(\"Creating new preference file \" + prefsFilePath);","lastModifiedDate":"2023-10-12"},{"lineNumber":155,"author":{"gitId":"ChongWeiJie29"},"content":"            }","lastModifiedDate":"2023-10-12"},{"lineNumber":156,"author":{"gitId":"ChongWeiJie29"},"content":"            initializedPrefs \u003d prefsOptional.orElse(new UserPrefsPrescription());","lastModifiedDate":"2023-10-12"},{"lineNumber":157,"author":{"gitId":"ChongWeiJie29"},"content":"        } catch (DataLoadingException e) {","lastModifiedDate":"2023-10-12"},{"lineNumber":158,"author":{"gitId":"ChongWeiJie29"},"content":"            logger.warning(\"Preference file at \" + prefsFilePath + \" could not be loaded.\"","lastModifiedDate":"2023-10-12"},{"lineNumber":159,"author":{"gitId":"ChongWeiJie29"},"content":"                    + \" Using default preferences.\");","lastModifiedDate":"2023-10-12"},{"lineNumber":160,"author":{"gitId":"ChongWeiJie29"},"content":"            initializedPrefs \u003d new UserPrefsPrescription();","lastModifiedDate":"2023-10-12"},{"lineNumber":161,"author":{"gitId":"ChongWeiJie29"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":162,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":163,"author":{"gitId":"ChongWeiJie29"},"content":"        //Update prefs file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2023-10-12"},{"lineNumber":164,"author":{"gitId":"ChongWeiJie29"},"content":"        try {","lastModifiedDate":"2023-10-12"},{"lineNumber":165,"author":{"gitId":"ChongWeiJie29"},"content":"            storage.saveUserPrefs(initializedPrefs);","lastModifiedDate":"2023-10-12"},{"lineNumber":166,"author":{"gitId":"ChongWeiJie29"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-10-12"},{"lineNumber":167,"author":{"gitId":"ChongWeiJie29"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2023-10-12"},{"lineNumber":168,"author":{"gitId":"ChongWeiJie29"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":169,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":170,"author":{"gitId":"ChongWeiJie29"},"content":"        return initializedPrefs;","lastModifiedDate":"2023-10-12"},{"lineNumber":171,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":172,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":173,"author":{"gitId":"ChongWeiJie29"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":174,"author":{"gitId":"ChongWeiJie29"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2023-10-12"},{"lineNumber":175,"author":{"gitId":"ChongWeiJie29"},"content":"        logger.info(\"Starting PrescriptionList \" + MainAppPrescription.VERSION);","lastModifiedDate":"2023-10-12"},{"lineNumber":176,"author":{"gitId":"ChongWeiJie29"},"content":"        ui.start(primaryStage);","lastModifiedDate":"2023-10-12"},{"lineNumber":177,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":178,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":179,"author":{"gitId":"ChongWeiJie29"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":180,"author":{"gitId":"ChongWeiJie29"},"content":"    public void stop() {","lastModifiedDate":"2023-10-12"},{"lineNumber":181,"author":{"gitId":"ChongWeiJie29"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d [ Stopping Address Book ] \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2023-10-12"},{"lineNumber":182,"author":{"gitId":"ChongWeiJie29"},"content":"        try {","lastModifiedDate":"2023-10-12"},{"lineNumber":183,"author":{"gitId":"ChongWeiJie29"},"content":"            storage.saveUserPrefs(model.getUserPrefs());","lastModifiedDate":"2023-10-12"},{"lineNumber":184,"author":{"gitId":"ChongWeiJie29"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-10-12"},{"lineNumber":185,"author":{"gitId":"ChongWeiJie29"},"content":"            logger.severe(\"Failed to save preferences \" + StringUtil.getDetails(e));","lastModifiedDate":"2023-10-12"},{"lineNumber":186,"author":{"gitId":"ChongWeiJie29"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":187,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":188,"author":{"gitId":"ChongWeiJie29"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"ChongWeiJie29":188}},{"path":"src/main/java/seedu/address/logic/LogicManagerPrescription.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ChongWeiJie29"},"content":"package seedu.address.logic;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"ChongWeiJie29"},"content":"import java.io.IOException;","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"ChongWeiJie29"},"content":"import java.nio.file.AccessDeniedException;","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"ChongWeiJie29"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"ChongWeiJie29"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"ChongWeiJie29"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"ChongWeiJie29"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"ChongWeiJie29"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"ChongWeiJie29"},"content":"import seedu.address.logic.commands.CommandPrescription;","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"ChongWeiJie29"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"ChongWeiJie29"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"ChongWeiJie29"},"content":"import seedu.address.logic.parser.PrescriptionListParser;","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"ChongWeiJie29"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"ChongWeiJie29"},"content":"import seedu.address.model.ModelPrescription;","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"ChongWeiJie29"},"content":"import seedu.address.model.ReadOnlyPrescriptionList;","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"ChongWeiJie29"},"content":"import seedu.address.model.prescription.Prescription;","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"ChongWeiJie29"},"content":"import seedu.address.storage.StoragePrescription;","lastModifiedDate":"2023-10-12"},{"lineNumber":20,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"ChongWeiJie29"},"content":"/**","lastModifiedDate":"2023-10-12"},{"lineNumber":22,"author":{"gitId":"ChongWeiJie29"},"content":" * The main LogicManagerPrescription of the app.","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"ChongWeiJie29"},"content":" */","lastModifiedDate":"2023-10-12"},{"lineNumber":24,"author":{"gitId":"ChongWeiJie29"},"content":"public class LogicManagerPrescription implements LogicPrescription {","lastModifiedDate":"2023-10-12"},{"lineNumber":25,"author":{"gitId":"ChongWeiJie29"},"content":"    public static final String FILE_OPS_ERROR_FORMAT \u003d \"Could not save data due to the following error: %s\";","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":27,"author":{"gitId":"ChongWeiJie29"},"content":"    public static final String FILE_OPS_PERMISSION_ERROR_FORMAT \u003d","lastModifiedDate":"2023-10-12"},{"lineNumber":28,"author":{"gitId":"ChongWeiJie29"},"content":"            \"Could not save data to file %s due to insufficient permissions to write to the file or the folder.\";","lastModifiedDate":"2023-10-12"},{"lineNumber":29,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":30,"author":{"gitId":"ChongWeiJie29"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManagerPrescription.class);","lastModifiedDate":"2023-10-12"},{"lineNumber":31,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":32,"author":{"gitId":"ChongWeiJie29"},"content":"    private final ModelPrescription model;","lastModifiedDate":"2023-10-12"},{"lineNumber":33,"author":{"gitId":"ChongWeiJie29"},"content":"    private final StoragePrescription storage;","lastModifiedDate":"2023-10-12"},{"lineNumber":34,"author":{"gitId":"ChongWeiJie29"},"content":"    private final PrescriptionListParser prescriptionListParser;","lastModifiedDate":"2023-10-12"},{"lineNumber":35,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":36,"author":{"gitId":"ChongWeiJie29"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":37,"author":{"gitId":"ChongWeiJie29"},"content":"     * Constructs a {@code LogicManagerPrescription} with the given {@code Model} and {@code Storage}.","lastModifiedDate":"2023-10-12"},{"lineNumber":38,"author":{"gitId":"ChongWeiJie29"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":39,"author":{"gitId":"ChongWeiJie29"},"content":"    public LogicManagerPrescription(ModelPrescription model, StoragePrescription storage) {","lastModifiedDate":"2023-10-12"},{"lineNumber":40,"author":{"gitId":"ChongWeiJie29"},"content":"        this.model \u003d model;","lastModifiedDate":"2023-10-12"},{"lineNumber":41,"author":{"gitId":"ChongWeiJie29"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2023-10-12"},{"lineNumber":42,"author":{"gitId":"ChongWeiJie29"},"content":"        prescriptionListParser \u003d new PrescriptionListParser();","lastModifiedDate":"2023-10-12"},{"lineNumber":43,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":44,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":45,"author":{"gitId":"ChongWeiJie29"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":46,"author":{"gitId":"ChongWeiJie29"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2023-10-12"},{"lineNumber":47,"author":{"gitId":"ChongWeiJie29"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2023-10-12"},{"lineNumber":48,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":49,"author":{"gitId":"ChongWeiJie29"},"content":"        CommandResult commandResult;","lastModifiedDate":"2023-10-12"},{"lineNumber":50,"author":{"gitId":"ChongWeiJie29"},"content":"        CommandPrescription command \u003d prescriptionListParser.parseCommand(commandText);","lastModifiedDate":"2023-10-12"},{"lineNumber":51,"author":{"gitId":"ChongWeiJie29"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2023-10-12"},{"lineNumber":52,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":53,"author":{"gitId":"ChongWeiJie29"},"content":"        try {","lastModifiedDate":"2023-10-12"},{"lineNumber":54,"author":{"gitId":"ChongWeiJie29"},"content":"            storage.savePrescriptionList(model.getPrescriptionList());","lastModifiedDate":"2023-10-12"},{"lineNumber":55,"author":{"gitId":"ChongWeiJie29"},"content":"        } catch (AccessDeniedException e) {","lastModifiedDate":"2023-10-12"},{"lineNumber":56,"author":{"gitId":"ChongWeiJie29"},"content":"            throw new CommandException(String.format(FILE_OPS_PERMISSION_ERROR_FORMAT, e.getMessage()), e);","lastModifiedDate":"2023-10-12"},{"lineNumber":57,"author":{"gitId":"ChongWeiJie29"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2023-10-12"},{"lineNumber":58,"author":{"gitId":"ChongWeiJie29"},"content":"            throw new CommandException(String.format(FILE_OPS_ERROR_FORMAT, ioe.getMessage()), ioe);","lastModifiedDate":"2023-10-12"},{"lineNumber":59,"author":{"gitId":"ChongWeiJie29"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":60,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":61,"author":{"gitId":"ChongWeiJie29"},"content":"        return commandResult;","lastModifiedDate":"2023-10-12"},{"lineNumber":62,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":63,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":64,"author":{"gitId":"ChongWeiJie29"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":65,"author":{"gitId":"ChongWeiJie29"},"content":"    public ReadOnlyPrescriptionList getPrescriptionList() {","lastModifiedDate":"2023-10-12"},{"lineNumber":66,"author":{"gitId":"ChongWeiJie29"},"content":"        return model.getPrescriptionList();","lastModifiedDate":"2023-10-12"},{"lineNumber":67,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":68,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":69,"author":{"gitId":"ChongWeiJie29"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":70,"author":{"gitId":"ChongWeiJie29"},"content":"    public ObservableList\u003cPrescription\u003e getFilteredPrescriptionList() {","lastModifiedDate":"2023-10-12"},{"lineNumber":71,"author":{"gitId":"ChongWeiJie29"},"content":"        return model.getFilteredPrescriptionList();","lastModifiedDate":"2023-10-12"},{"lineNumber":72,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":73,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":74,"author":{"gitId":"ChongWeiJie29"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":75,"author":{"gitId":"ChongWeiJie29"},"content":"    public Path getPrescriptionListFilePath() {","lastModifiedDate":"2023-10-12"},{"lineNumber":76,"author":{"gitId":"ChongWeiJie29"},"content":"        return model.getPrescriptionListFilePath();","lastModifiedDate":"2023-10-12"},{"lineNumber":77,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":78,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":79,"author":{"gitId":"ChongWeiJie29"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":80,"author":{"gitId":"ChongWeiJie29"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2023-10-12"},{"lineNumber":81,"author":{"gitId":"ChongWeiJie29"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2023-10-12"},{"lineNumber":82,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":83,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":84,"author":{"gitId":"ChongWeiJie29"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":85,"author":{"gitId":"ChongWeiJie29"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2023-10-12"},{"lineNumber":86,"author":{"gitId":"ChongWeiJie29"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2023-10-12"},{"lineNumber":87,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":88,"author":{"gitId":"ChongWeiJie29"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"ChongWeiJie29":88}},{"path":"src/main/java/seedu/address/logic/LogicPrescription.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ChongWeiJie29"},"content":"package seedu.address.logic;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"ChongWeiJie29"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"ChongWeiJie29"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"ChongWeiJie29"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"ChongWeiJie29"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"ChongWeiJie29"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"ChongWeiJie29"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"ChongWeiJie29"},"content":"import seedu.address.model.ReadOnlyPrescriptionList;","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"ChongWeiJie29"},"content":"import seedu.address.model.prescription.Prescription;","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"ChongWeiJie29"},"content":"/**","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"ChongWeiJie29"},"content":" * API of the LogicPrescription component","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"ChongWeiJie29"},"content":" */","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"ChongWeiJie29"},"content":"public interface LogicPrescription {","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"ChongWeiJie29"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"ChongWeiJie29"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"ChongWeiJie29"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2023-10-12"},{"lineNumber":20,"author":{"gitId":"ChongWeiJie29"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"ChongWeiJie29"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2023-10-12"},{"lineNumber":22,"author":{"gitId":"ChongWeiJie29"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"ChongWeiJie29"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":24,"author":{"gitId":"ChongWeiJie29"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2023-10-12"},{"lineNumber":25,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"ChongWeiJie29"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":27,"author":{"gitId":"ChongWeiJie29"},"content":"     * Returns the PrescriptionList.","lastModifiedDate":"2023-10-12"},{"lineNumber":28,"author":{"gitId":"ChongWeiJie29"},"content":"     *","lastModifiedDate":"2023-10-12"},{"lineNumber":29,"author":{"gitId":"ChongWeiJie29"},"content":"     * @see seedu.address.model.Model#getPrescriptionList()","lastModifiedDate":"2023-10-12"},{"lineNumber":30,"author":{"gitId":"ChongWeiJie29"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":31,"author":{"gitId":"ChongWeiJie29"},"content":"    ReadOnlyPrescriptionList getPrescriptionList();","lastModifiedDate":"2023-10-12"},{"lineNumber":32,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":33,"author":{"gitId":"ChongWeiJie29"},"content":"    /** Returns an unmodifiable view of the filtered list of prescriptions */","lastModifiedDate":"2023-10-12"},{"lineNumber":34,"author":{"gitId":"ChongWeiJie29"},"content":"    ObservableList\u003cPrescription\u003e getFilteredPrescriptionList();","lastModifiedDate":"2023-10-12"},{"lineNumber":35,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":36,"author":{"gitId":"ChongWeiJie29"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":37,"author":{"gitId":"ChongWeiJie29"},"content":"     * Returns the user prefs\u0027 prescription list file path.","lastModifiedDate":"2023-10-12"},{"lineNumber":38,"author":{"gitId":"ChongWeiJie29"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":39,"author":{"gitId":"ChongWeiJie29"},"content":"    Path getPrescriptionListFilePath();","lastModifiedDate":"2023-10-12"},{"lineNumber":40,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":41,"author":{"gitId":"ChongWeiJie29"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":42,"author":{"gitId":"ChongWeiJie29"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2023-10-12"},{"lineNumber":43,"author":{"gitId":"ChongWeiJie29"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":44,"author":{"gitId":"ChongWeiJie29"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2023-10-12"},{"lineNumber":45,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":46,"author":{"gitId":"ChongWeiJie29"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":47,"author":{"gitId":"ChongWeiJie29"},"content":"     * Set the user prefs\u0027 GUI settings.","lastModifiedDate":"2023-10-12"},{"lineNumber":48,"author":{"gitId":"ChongWeiJie29"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":49,"author":{"gitId":"ChongWeiJie29"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2023-10-12"},{"lineNumber":50,"author":{"gitId":"ChongWeiJie29"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"ChongWeiJie29":50}},{"path":"src/main/java/seedu/address/logic/MessagesPrescription.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ChongWeiJie29"},"content":"package seedu.address.logic;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"ChongWeiJie29"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"ChongWeiJie29"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"ChongWeiJie29"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"TeeRenJing"},"content":"import seedu.address.logic.parser.Prefix;","lastModifiedDate":"2023-10-16"},{"lineNumber":8,"author":{"gitId":"TeeRenJing"},"content":"import seedu.address.model.prescription.Prescription;","lastModifiedDate":"2023-10-16"},{"lineNumber":9,"author":{"gitId":"TeeRenJing"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":10,"author":{"gitId":"TeeRenJing"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":11,"author":{"gitId":"ChongWeiJie29"},"content":"/**","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"ChongWeiJie29"},"content":" * Container for user visible messages.","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"ChongWeiJie29"},"content":" */","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"ChongWeiJie29"},"content":"public class MessagesPrescription {","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"ChongWeiJie29"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"ChongWeiJie29"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"RoeReRe"},"content":"    public static final String MESSAGE_INVALID_PRESCRIPTION_DISPLAYED_INDEX \u003d \"The prescription index \"","lastModifiedDate":"2023-10-16"},{"lineNumber":19,"author":{"gitId":"RoeReRe"},"content":"            + \"provided is invalid\";","lastModifiedDate":"2023-10-16"},{"lineNumber":20,"author":{"gitId":"RoeReRe"},"content":"    public static final String MESSAGE_PRESCRIPTIONS_LISTED_OVERVIEW \u003d \"%1$d prescriptions listed!\";","lastModifiedDate":"2023-10-16"},{"lineNumber":21,"author":{"gitId":"ChongWeiJie29"},"content":"    public static final String MESSAGE_DUPLICATE_FIELDS \u003d","lastModifiedDate":"2023-10-12"},{"lineNumber":22,"author":{"gitId":"ChongWeiJie29"},"content":"            \"Multiple values specified for the following single-valued field(s): \";","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":24,"author":{"gitId":"ChongWeiJie29"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":25,"author":{"gitId":"ChongWeiJie29"},"content":"     * Returns an error message indicating the duplicate prefixes.","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"ChongWeiJie29"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":27,"author":{"gitId":"ChongWeiJie29"},"content":"    public static String getErrorMessageForDuplicatePrefixes(Prefix... duplicatePrefixes) {","lastModifiedDate":"2023-10-12"},{"lineNumber":28,"author":{"gitId":"ChongWeiJie29"},"content":"        assert duplicatePrefixes.length \u003e 0;","lastModifiedDate":"2023-10-12"},{"lineNumber":29,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":30,"author":{"gitId":"ChongWeiJie29"},"content":"        Set\u003cString\u003e duplicateFields \u003d","lastModifiedDate":"2023-10-12"},{"lineNumber":31,"author":{"gitId":"ChongWeiJie29"},"content":"                Stream.of(duplicatePrefixes).map(Prefix::toString).collect(Collectors.toSet());","lastModifiedDate":"2023-10-12"},{"lineNumber":32,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":33,"author":{"gitId":"ChongWeiJie29"},"content":"        return MESSAGE_DUPLICATE_FIELDS + String.join(\" \", duplicateFields);","lastModifiedDate":"2023-10-12"},{"lineNumber":34,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":35,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":36,"author":{"gitId":"ChongWeiJie29"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":37,"author":{"gitId":"ChongWeiJie29"},"content":"     * Formats the {@code prescription} for display to the user.","lastModifiedDate":"2023-10-12"},{"lineNumber":38,"author":{"gitId":"ChongWeiJie29"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":39,"author":{"gitId":"ChongWeiJie29"},"content":"    public static String format(Prescription prescription) {","lastModifiedDate":"2023-10-12"},{"lineNumber":40,"author":{"gitId":"ChongWeiJie29"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2023-10-12"},{"lineNumber":41,"author":{"gitId":"ChongWeiJie29"},"content":"        builder.append(prescription.getName())","lastModifiedDate":"2023-10-12"},{"lineNumber":42,"author":{"gitId":"ChongWeiJie29"},"content":"                .append(\"; Dosage: \")","lastModifiedDate":"2023-10-12"},{"lineNumber":43,"author":{"gitId":"ChongWeiJie29"},"content":"                .append(prescription.getDosage())","lastModifiedDate":"2023-10-12"},{"lineNumber":44,"author":{"gitId":"ChongWeiJie29"},"content":"                .append(\"; Frequency: \")","lastModifiedDate":"2023-10-12"},{"lineNumber":45,"author":{"gitId":"ChongWeiJie29"},"content":"                .append(prescription.getFrequency())","lastModifiedDate":"2023-10-12"},{"lineNumber":46,"author":{"gitId":"ChongWeiJie29"},"content":"                .append(\"; Start Date: \")","lastModifiedDate":"2023-10-12"},{"lineNumber":47,"author":{"gitId":"ChongWeiJie29"},"content":"                .append(prescription.getStartDate())","lastModifiedDate":"2023-10-12"},{"lineNumber":48,"author":{"gitId":"ChongWeiJie29"},"content":"                .append(\"; End Date: \")","lastModifiedDate":"2023-10-12"},{"lineNumber":49,"author":{"gitId":"ChongWeiJie29"},"content":"                .append(prescription.getEndDate())","lastModifiedDate":"2023-10-12"},{"lineNumber":50,"author":{"gitId":"ChongWeiJie29"},"content":"                .append(\"; Expiry Date: \")","lastModifiedDate":"2023-10-12"},{"lineNumber":51,"author":{"gitId":"ChongWeiJie29"},"content":"                .append(prescription.getExpiryDate())","lastModifiedDate":"2023-10-12"},{"lineNumber":52,"author":{"gitId":"ChongWeiJie29"},"content":"                .append(\"; Total stock: \")","lastModifiedDate":"2023-10-12"},{"lineNumber":53,"author":{"gitId":"ChongWeiJie29"},"content":"                .append(prescription.getTotalStock())","lastModifiedDate":"2023-10-12"},{"lineNumber":54,"author":{"gitId":"ChongWeiJie29"},"content":"                .append(\"; Note: \")","lastModifiedDate":"2023-10-12"},{"lineNumber":55,"author":{"gitId":"ChongWeiJie29"},"content":"                .append(prescription.getNote());","lastModifiedDate":"2023-10-12"},{"lineNumber":56,"author":{"gitId":"ChongWeiJie29"},"content":"        // person.getTags().forEach(builder::append);","lastModifiedDate":"2023-10-12"},{"lineNumber":57,"author":{"gitId":"ChongWeiJie29"},"content":"        return builder.toString();","lastModifiedDate":"2023-10-12"},{"lineNumber":58,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":59,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":60,"author":{"gitId":"ChongWeiJie29"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"TeeRenJing":4,"ChongWeiJie29":53,"RoeReRe":3}},{"path":"src/main/java/seedu/address/logic/commands/AddPrescriptionCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ChongWeiJie29"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"ChongWeiJie29"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"ChongWeiJie29"},"content":"import static seedu.address.logic.parser.CliSyntaxPrescription.PREFIX_DOSAGE;","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"ChongWeiJie29"},"content":"import static seedu.address.logic.parser.CliSyntaxPrescription.PREFIX_END_DATE;","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"ChongWeiJie29"},"content":"import static seedu.address.logic.parser.CliSyntaxPrescription.PREFIX_EXPIRY_DATE;","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"ChongWeiJie29"},"content":"import static seedu.address.logic.parser.CliSyntaxPrescription.PREFIX_FREQUENCY;","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"ChongWeiJie29"},"content":"import static seedu.address.logic.parser.CliSyntaxPrescription.PREFIX_NAME;","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"ChongWeiJie29"},"content":"import static seedu.address.logic.parser.CliSyntaxPrescription.PREFIX_NOTE;","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"ChongWeiJie29"},"content":"import static seedu.address.logic.parser.CliSyntaxPrescription.PREFIX_START_DATE;","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"ChongWeiJie29"},"content":"import static seedu.address.logic.parser.CliSyntaxPrescription.PREFIX_TOTAL_STOCK;","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"ChongWeiJie29"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"ChongWeiJie29"},"content":"import seedu.address.logic.MessagesPrescription;","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"ChongWeiJie29"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"ChongWeiJie29"},"content":"import seedu.address.model.ModelPrescription;","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"ChongWeiJie29"},"content":"import seedu.address.model.prescription.Prescription;","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"ChongWeiJie29"},"content":"/**","lastModifiedDate":"2023-10-12"},{"lineNumber":20,"author":{"gitId":"ChongWeiJie29"},"content":" * Adds a person to the address book.","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"ChongWeiJie29"},"content":" */","lastModifiedDate":"2023-10-12"},{"lineNumber":22,"author":{"gitId":"ChongWeiJie29"},"content":"public class AddPrescriptionCommand extends CommandPrescription {","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":24,"author":{"gitId":"ChongWeiJie29"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2023-10-12"},{"lineNumber":25,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"ChongWeiJie29"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a prescription to the prescription list. \\n\"","lastModifiedDate":"2023-10-12"},{"lineNumber":27,"author":{"gitId":"ChongWeiJie29"},"content":"            + \"Parameters: \"","lastModifiedDate":"2023-10-12"},{"lineNumber":28,"author":{"gitId":"ChongWeiJie29"},"content":"            + PREFIX_NAME + \"medication_name \"","lastModifiedDate":"2023-10-12"},{"lineNumber":29,"author":{"gitId":"ChongWeiJie29"},"content":"            + PREFIX_DOSAGE + \"dosage \"","lastModifiedDate":"2023-10-12"},{"lineNumber":30,"author":{"gitId":"ChongWeiJie29"},"content":"            + PREFIX_FREQUENCY + \"frequency \"","lastModifiedDate":"2023-10-12"},{"lineNumber":31,"author":{"gitId":"ChongWeiJie29"},"content":"            + PREFIX_START_DATE + \"start_date \"","lastModifiedDate":"2023-10-12"},{"lineNumber":32,"author":{"gitId":"ChongWeiJie29"},"content":"            + PREFIX_END_DATE + \"end_date \"","lastModifiedDate":"2023-10-12"},{"lineNumber":33,"author":{"gitId":"ChongWeiJie29"},"content":"            + PREFIX_EXPIRY_DATE + \"expiry_date \"","lastModifiedDate":"2023-10-12"},{"lineNumber":34,"author":{"gitId":"ChongWeiJie29"},"content":"            + PREFIX_TOTAL_STOCK + \"total_stock \"","lastModifiedDate":"2023-10-12"},{"lineNumber":35,"author":{"gitId":"ChongWeiJie29"},"content":"            + PREFIX_NOTE + \"note \\n\"","lastModifiedDate":"2023-10-12"},{"lineNumber":36,"author":{"gitId":"ChongWeiJie29"},"content":"            // + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2023-10-12"},{"lineNumber":37,"author":{"gitId":"ChongWeiJie29"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2023-10-12"},{"lineNumber":38,"author":{"gitId":"ChongWeiJie29"},"content":"            + PREFIX_NAME + \"Aspirin \"","lastModifiedDate":"2023-10-12"},{"lineNumber":39,"author":{"gitId":"ChongWeiJie29"},"content":"            + PREFIX_DOSAGE + \"1 \"","lastModifiedDate":"2023-10-12"},{"lineNumber":40,"author":{"gitId":"ChongWeiJie29"},"content":"            + PREFIX_FREQUENCY + \"Daily \"","lastModifiedDate":"2023-10-12"},{"lineNumber":41,"author":{"gitId":"ChongWeiJie29"},"content":"            + PREFIX_START_DATE + \"01/08/2023 \"","lastModifiedDate":"2023-10-12"},{"lineNumber":42,"author":{"gitId":"ChongWeiJie29"},"content":"            + PREFIX_END_DATE + \"25/12/2023 \"","lastModifiedDate":"2023-10-12"},{"lineNumber":43,"author":{"gitId":"ChongWeiJie29"},"content":"            + PREFIX_EXPIRY_DATE + \"01/01/2024 \"","lastModifiedDate":"2023-10-12"},{"lineNumber":44,"author":{"gitId":"ChongWeiJie29"},"content":"            + PREFIX_TOTAL_STOCK + \"100 \"","lastModifiedDate":"2023-10-12"},{"lineNumber":45,"author":{"gitId":"ChongWeiJie29"},"content":"            + PREFIX_NOTE + \"Test note\";","lastModifiedDate":"2023-10-12"},{"lineNumber":46,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":47,"author":{"gitId":"ChongWeiJie29"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New prescription added: %1$s\";","lastModifiedDate":"2023-10-12"},{"lineNumber":48,"author":{"gitId":"ChongWeiJie29"},"content":"    public static final String MESSAGE_DUPLICATE_PRESCRIPTION \u003d \"This prescription already \"","lastModifiedDate":"2023-10-12"},{"lineNumber":49,"author":{"gitId":"ChongWeiJie29"},"content":"            + \"exists in the prescription list\";","lastModifiedDate":"2023-10-12"},{"lineNumber":50,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":51,"author":{"gitId":"ChongWeiJie29"},"content":"    private final Prescription toAdd;","lastModifiedDate":"2023-10-12"},{"lineNumber":52,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":53,"author":{"gitId":"ChongWeiJie29"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":54,"author":{"gitId":"ChongWeiJie29"},"content":"     * Creates an AddPrescriptionCommand to add the specified {@code Prescription}","lastModifiedDate":"2023-10-12"},{"lineNumber":55,"author":{"gitId":"ChongWeiJie29"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":56,"author":{"gitId":"ChongWeiJie29"},"content":"    public AddPrescriptionCommand(Prescription prescription) {","lastModifiedDate":"2023-10-12"},{"lineNumber":57,"author":{"gitId":"ChongWeiJie29"},"content":"        requireNonNull(prescription);","lastModifiedDate":"2023-10-12"},{"lineNumber":58,"author":{"gitId":"ChongWeiJie29"},"content":"        toAdd \u003d prescription;","lastModifiedDate":"2023-10-12"},{"lineNumber":59,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":60,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":61,"author":{"gitId":"ChongWeiJie29"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":62,"author":{"gitId":"ChongWeiJie29"},"content":"    public CommandResult execute(ModelPrescription model) throws CommandException {","lastModifiedDate":"2023-10-12"},{"lineNumber":63,"author":{"gitId":"ChongWeiJie29"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-12"},{"lineNumber":64,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":65,"author":{"gitId":"ChongWeiJie29"},"content":"        if (model.hasPrescription(toAdd)) {","lastModifiedDate":"2023-10-12"},{"lineNumber":66,"author":{"gitId":"ChongWeiJie29"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PRESCRIPTION);","lastModifiedDate":"2023-10-12"},{"lineNumber":67,"author":{"gitId":"ChongWeiJie29"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":68,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":69,"author":{"gitId":"ChongWeiJie29"},"content":"        model.addPrescription(toAdd);","lastModifiedDate":"2023-10-12"},{"lineNumber":70,"author":{"gitId":"ChongWeiJie29"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, MessagesPrescription.format(toAdd)));","lastModifiedDate":"2023-10-12"},{"lineNumber":71,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":72,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":73,"author":{"gitId":"ChongWeiJie29"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":74,"author":{"gitId":"ChongWeiJie29"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-12"},{"lineNumber":75,"author":{"gitId":"ChongWeiJie29"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-12"},{"lineNumber":76,"author":{"gitId":"ChongWeiJie29"},"content":"            return true;","lastModifiedDate":"2023-10-12"},{"lineNumber":77,"author":{"gitId":"ChongWeiJie29"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":78,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":79,"author":{"gitId":"ChongWeiJie29"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-12"},{"lineNumber":80,"author":{"gitId":"ChongWeiJie29"},"content":"        if (!(other instanceof AddPrescriptionCommand)) {","lastModifiedDate":"2023-10-12"},{"lineNumber":81,"author":{"gitId":"ChongWeiJie29"},"content":"            return false;","lastModifiedDate":"2023-10-12"},{"lineNumber":82,"author":{"gitId":"ChongWeiJie29"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":83,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":84,"author":{"gitId":"ChongWeiJie29"},"content":"        AddPrescriptionCommand otherAddCommand \u003d (AddPrescriptionCommand) other;","lastModifiedDate":"2023-10-12"},{"lineNumber":85,"author":{"gitId":"ChongWeiJie29"},"content":"        return toAdd.equals(otherAddCommand.toAdd);","lastModifiedDate":"2023-10-12"},{"lineNumber":86,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":87,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":88,"author":{"gitId":"ChongWeiJie29"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":89,"author":{"gitId":"ChongWeiJie29"},"content":"    public String toString() {","lastModifiedDate":"2023-10-12"},{"lineNumber":90,"author":{"gitId":"ChongWeiJie29"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-10-12"},{"lineNumber":91,"author":{"gitId":"ChongWeiJie29"},"content":"                .add(\"toAdd\", toAdd)","lastModifiedDate":"2023-10-12"},{"lineNumber":92,"author":{"gitId":"ChongWeiJie29"},"content":"                .toString();","lastModifiedDate":"2023-10-12"},{"lineNumber":93,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":94,"author":{"gitId":"ChongWeiJie29"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"ChongWeiJie29":94}},{"path":"src/main/java/seedu/address/logic/commands/CommandPrescription.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ChongWeiJie29"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"ChongWeiJie29"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"ChongWeiJie29"},"content":"import seedu.address.model.ModelPrescription;","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"ChongWeiJie29"},"content":"/**","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"ChongWeiJie29"},"content":" * Represents a command with hidden internal logic and the ability to be executed.","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"ChongWeiJie29"},"content":" */","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"ChongWeiJie29"},"content":"public abstract class CommandPrescription {","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"ChongWeiJie29"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"ChongWeiJie29"},"content":"     * Executes the command and returns the result message.","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"ChongWeiJie29"},"content":"     *","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"ChongWeiJie29"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"ChongWeiJie29"},"content":"     * @return feedback message of the operation result for display","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"ChongWeiJie29"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"ChongWeiJie29"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"ChongWeiJie29"},"content":"    public abstract CommandResult execute(ModelPrescription model) throws CommandException;","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":20,"author":{"gitId":"ChongWeiJie29"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"ChongWeiJie29":20}},{"path":"src/main/java/seedu/address/logic/commands/DeletePrescriptionCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TeeRenJing"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-16"},{"lineNumber":2,"author":{"gitId":"TeeRenJing"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":3,"author":{"gitId":"TeeRenJing"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-16"},{"lineNumber":4,"author":{"gitId":"TeeRenJing"},"content":"import static seedu.address.logic.parser.CliSyntaxPrescription.PREFIX_INDEX;","lastModifiedDate":"2023-10-16"},{"lineNumber":5,"author":{"gitId":"TeeRenJing"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":6,"author":{"gitId":"TeeRenJing"},"content":"import java.util.List;","lastModifiedDate":"2023-10-16"},{"lineNumber":7,"author":{"gitId":"TeeRenJing"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":8,"author":{"gitId":"TeeRenJing"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-16"},{"lineNumber":9,"author":{"gitId":"TeeRenJing"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-16"},{"lineNumber":10,"author":{"gitId":"TeeRenJing"},"content":"import seedu.address.logic.MessagesPrescription;","lastModifiedDate":"2023-10-16"},{"lineNumber":11,"author":{"gitId":"TeeRenJing"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-16"},{"lineNumber":12,"author":{"gitId":"TeeRenJing"},"content":"import seedu.address.model.ModelPrescription;","lastModifiedDate":"2023-10-16"},{"lineNumber":13,"author":{"gitId":"TeeRenJing"},"content":"import seedu.address.model.prescription.Prescription;","lastModifiedDate":"2023-10-16"},{"lineNumber":14,"author":{"gitId":"TeeRenJing"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":15,"author":{"gitId":"TeeRenJing"},"content":"/**","lastModifiedDate":"2023-10-16"},{"lineNumber":16,"author":{"gitId":"TeeRenJing"},"content":" * Adds a person to the address book.","lastModifiedDate":"2023-10-16"},{"lineNumber":17,"author":{"gitId":"TeeRenJing"},"content":" */","lastModifiedDate":"2023-10-16"},{"lineNumber":18,"author":{"gitId":"TeeRenJing"},"content":"public class DeletePrescriptionCommand extends CommandPrescription {","lastModifiedDate":"2023-10-16"},{"lineNumber":19,"author":{"gitId":"TeeRenJing"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":20,"author":{"gitId":"TeeRenJing"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2023-10-16"},{"lineNumber":21,"author":{"gitId":"TeeRenJing"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":22,"author":{"gitId":"TeeRenJing"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Deletes a prescription from the prescription list. \\n\"","lastModifiedDate":"2023-10-16"},{"lineNumber":23,"author":{"gitId":"TeeRenJing"},"content":"            + \"Parameters: \"","lastModifiedDate":"2023-10-16"},{"lineNumber":24,"author":{"gitId":"TeeRenJing"},"content":"            + PREFIX_INDEX + \"index \\n\"","lastModifiedDate":"2023-10-16"},{"lineNumber":25,"author":{"gitId":"TeeRenJing"},"content":"            // + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2023-10-16"},{"lineNumber":26,"author":{"gitId":"TeeRenJing"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2023-10-16"},{"lineNumber":27,"author":{"gitId":"TeeRenJing"},"content":"            + PREFIX_INDEX + \"1 \";","lastModifiedDate":"2023-10-16"},{"lineNumber":28,"author":{"gitId":"TeeRenJing"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":29,"author":{"gitId":"TeeRenJing"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":30,"author":{"gitId":"TeeRenJing"},"content":"    public static final String MESSAGE_PRESCRIPTION_NOT_FOUND \u003d \"This prescription does not exist in the prescription \"","lastModifiedDate":"2023-10-16"},{"lineNumber":31,"author":{"gitId":"TeeRenJing"},"content":"            + \"list\";","lastModifiedDate":"2023-10-16"},{"lineNumber":32,"author":{"gitId":"TeeRenJing"},"content":"    public static final String MESSAGE_DELETE_PRESCRIPTION_SUCCESS \u003d \"Prescription deleted: %1$s\";","lastModifiedDate":"2023-10-17"},{"lineNumber":33,"author":{"gitId":"TeeRenJing"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":34,"author":{"gitId":"TeeRenJing"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":35,"author":{"gitId":"TeeRenJing"},"content":"    private final Index targetIndex;","lastModifiedDate":"2023-10-16"},{"lineNumber":36,"author":{"gitId":"TeeRenJing"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":37,"author":{"gitId":"TeeRenJing"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":38,"author":{"gitId":"TeeRenJing"},"content":"     * Creates an DeletePrescriptionCommand to delete the specified {@code Prescription}","lastModifiedDate":"2023-10-16"},{"lineNumber":39,"author":{"gitId":"TeeRenJing"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":40,"author":{"gitId":"TeeRenJing"},"content":"    public DeletePrescriptionCommand(Index targetIndex) {","lastModifiedDate":"2023-10-16"},{"lineNumber":41,"author":{"gitId":"TeeRenJing"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2023-10-16"},{"lineNumber":42,"author":{"gitId":"TeeRenJing"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":43,"author":{"gitId":"TeeRenJing"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":44,"author":{"gitId":"TeeRenJing"},"content":"    @Override","lastModifiedDate":"2023-10-16"},{"lineNumber":45,"author":{"gitId":"TeeRenJing"},"content":"    public CommandResult execute(ModelPrescription model) throws CommandException {","lastModifiedDate":"2023-10-16"},{"lineNumber":46,"author":{"gitId":"TeeRenJing"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-16"},{"lineNumber":47,"author":{"gitId":"TeeRenJing"},"content":"        List\u003cPrescription\u003e lastShownList \u003d model.getFilteredPrescriptionList();","lastModifiedDate":"2023-10-16"},{"lineNumber":48,"author":{"gitId":"TeeRenJing"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":49,"author":{"gitId":"TeeRenJing"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-10-16"},{"lineNumber":50,"author":{"gitId":"TeeRenJing"},"content":"            throw new CommandException(MessagesPrescription.MESSAGE_INVALID_PRESCRIPTION_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-16"},{"lineNumber":51,"author":{"gitId":"TeeRenJing"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":52,"author":{"gitId":"TeeRenJing"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":53,"author":{"gitId":"TeeRenJing"},"content":"        Prescription prescriptionToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2023-10-16"},{"lineNumber":54,"author":{"gitId":"TeeRenJing"},"content":"        model.deletePrescription(prescriptionToDelete);","lastModifiedDate":"2023-10-16"},{"lineNumber":55,"author":{"gitId":"TeeRenJing"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_PRESCRIPTION_SUCCESS,","lastModifiedDate":"2023-10-16"},{"lineNumber":56,"author":{"gitId":"TeeRenJing"},"content":"                MessagesPrescription.format(prescriptionToDelete)));","lastModifiedDate":"2023-10-16"},{"lineNumber":57,"author":{"gitId":"TeeRenJing"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":58,"author":{"gitId":"TeeRenJing"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":59,"author":{"gitId":"TeeRenJing"},"content":"    @Override","lastModifiedDate":"2023-10-16"},{"lineNumber":60,"author":{"gitId":"TeeRenJing"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-16"},{"lineNumber":61,"author":{"gitId":"TeeRenJing"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-16"},{"lineNumber":62,"author":{"gitId":"TeeRenJing"},"content":"            return true;","lastModifiedDate":"2023-10-16"},{"lineNumber":63,"author":{"gitId":"TeeRenJing"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":64,"author":{"gitId":"TeeRenJing"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":65,"author":{"gitId":"TeeRenJing"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-16"},{"lineNumber":66,"author":{"gitId":"TeeRenJing"},"content":"        if (!(other instanceof DeletePrescriptionCommand)) {","lastModifiedDate":"2023-10-16"},{"lineNumber":67,"author":{"gitId":"TeeRenJing"},"content":"            return false;","lastModifiedDate":"2023-10-16"},{"lineNumber":68,"author":{"gitId":"TeeRenJing"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":69,"author":{"gitId":"TeeRenJing"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":70,"author":{"gitId":"TeeRenJing"},"content":"        DeletePrescriptionCommand otherAddCommand \u003d (DeletePrescriptionCommand) other;","lastModifiedDate":"2023-10-16"},{"lineNumber":71,"author":{"gitId":"TeeRenJing"},"content":"        return targetIndex.equals(otherAddCommand.targetIndex);","lastModifiedDate":"2023-10-16"},{"lineNumber":72,"author":{"gitId":"TeeRenJing"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":73,"author":{"gitId":"TeeRenJing"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":74,"author":{"gitId":"TeeRenJing"},"content":"    @Override","lastModifiedDate":"2023-10-16"},{"lineNumber":75,"author":{"gitId":"TeeRenJing"},"content":"    public String toString() {","lastModifiedDate":"2023-10-16"},{"lineNumber":76,"author":{"gitId":"TeeRenJing"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-10-16"},{"lineNumber":77,"author":{"gitId":"TeeRenJing"},"content":"                .add(\"toDelete\", targetIndex)","lastModifiedDate":"2023-10-16"},{"lineNumber":78,"author":{"gitId":"TeeRenJing"},"content":"                .toString();","lastModifiedDate":"2023-10-16"},{"lineNumber":79,"author":{"gitId":"TeeRenJing"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":80,"author":{"gitId":"TeeRenJing"},"content":"}","lastModifiedDate":"2023-10-16"}],"authorContributionMap":{"TeeRenJing":80}},{"path":"src/main/java/seedu/address/logic/commands/ListPrescriptionCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"RoeReRe"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-15"},{"lineNumber":2,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":3,"author":{"gitId":"RoeReRe"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-15"},{"lineNumber":4,"author":{"gitId":"RoeReRe"},"content":"import static seedu.address.model.ModelPrescription.PREDICATE_SHOW_ALL_PRESCRIPTIONS;","lastModifiedDate":"2023-10-15"},{"lineNumber":5,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":6,"author":{"gitId":"RoeReRe"},"content":"import seedu.address.model.ModelPrescription;","lastModifiedDate":"2023-10-15"},{"lineNumber":7,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":8,"author":{"gitId":"RoeReRe"},"content":"/**","lastModifiedDate":"2023-10-15"},{"lineNumber":9,"author":{"gitId":"RoeReRe"},"content":" * Lists all prescriptions stored to the user.","lastModifiedDate":"2023-10-15"},{"lineNumber":10,"author":{"gitId":"RoeReRe"},"content":" */","lastModifiedDate":"2023-10-15"},{"lineNumber":11,"author":{"gitId":"RoeReRe"},"content":"public class ListPrescriptionCommand extends CommandPrescription {","lastModifiedDate":"2023-10-15"},{"lineNumber":12,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":13,"author":{"gitId":"RoeReRe"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2023-10-15"},{"lineNumber":14,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":15,"author":{"gitId":"RoeReRe"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Lists all prescriptions stored.\\n\"","lastModifiedDate":"2023-10-15"},{"lineNumber":16,"author":{"gitId":"RoeReRe"},"content":"            + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2023-10-15"},{"lineNumber":17,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":18,"author":{"gitId":"RoeReRe"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all prescriptions\";","lastModifiedDate":"2023-10-15"},{"lineNumber":19,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":20,"author":{"gitId":"RoeReRe"},"content":"    @Override","lastModifiedDate":"2023-10-15"},{"lineNumber":21,"author":{"gitId":"RoeReRe"},"content":"    public CommandResult execute(ModelPrescription model) {","lastModifiedDate":"2023-10-15"},{"lineNumber":22,"author":{"gitId":"RoeReRe"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-15"},{"lineNumber":23,"author":{"gitId":"RoeReRe"},"content":"        model.updateFilteredPrescriptionList(PREDICATE_SHOW_ALL_PRESCRIPTIONS);","lastModifiedDate":"2023-10-15"},{"lineNumber":24,"author":{"gitId":"RoeReRe"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2023-10-15"},{"lineNumber":25,"author":{"gitId":"RoeReRe"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":26,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":27,"author":{"gitId":"RoeReRe"},"content":"    @Override","lastModifiedDate":"2023-10-16"},{"lineNumber":28,"author":{"gitId":"RoeReRe"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-16"},{"lineNumber":29,"author":{"gitId":"RoeReRe"},"content":"        return other instanceof ListPrescriptionCommand;","lastModifiedDate":"2023-10-16"},{"lineNumber":30,"author":{"gitId":"RoeReRe"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":31,"author":{"gitId":"RoeReRe"},"content":"}","lastModifiedDate":"2023-10-15"}],"authorContributionMap":{"RoeReRe":31}},{"path":"src/main/java/seedu/address/logic/commands/ListTodayPrescriptionCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"shyanyong"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-15"},{"lineNumber":2,"author":{"gitId":"shyanyong"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":3,"author":{"gitId":"shyanyong"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-15"},{"lineNumber":4,"author":{"gitId":"shyanyong"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":5,"author":{"gitId":"shyanyong"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-10-15"},{"lineNumber":6,"author":{"gitId":"shyanyong"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":7,"author":{"gitId":"shyanyong"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-10-15"},{"lineNumber":8,"author":{"gitId":"shyanyong"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-15"},{"lineNumber":9,"author":{"gitId":"shyanyong"},"content":"import seedu.address.model.ModelPrescription;","lastModifiedDate":"2023-10-15"},{"lineNumber":10,"author":{"gitId":"shyanyong"},"content":"import seedu.address.model.prescription.IsTodayPredicate;","lastModifiedDate":"2023-10-15"},{"lineNumber":11,"author":{"gitId":"shyanyong"},"content":"import seedu.address.model.prescription.Prescription;","lastModifiedDate":"2023-10-15"},{"lineNumber":12,"author":{"gitId":"shyanyong"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":13,"author":{"gitId":"shyanyong"},"content":"/**","lastModifiedDate":"2023-10-15"},{"lineNumber":14,"author":{"gitId":"shyanyong"},"content":" * Lists all remaining medications to be taken for the day to the user.","lastModifiedDate":"2023-10-15"},{"lineNumber":15,"author":{"gitId":"shyanyong"},"content":" */","lastModifiedDate":"2023-10-15"},{"lineNumber":16,"author":{"gitId":"shyanyong"},"content":"public class ListTodayPrescriptionCommand extends CommandPrescription {","lastModifiedDate":"2023-10-15"},{"lineNumber":17,"author":{"gitId":"shyanyong"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":18,"author":{"gitId":"shyanyong"},"content":"    public static final String COMMAND_WORD \u003d \"listToday\";","lastModifiedDate":"2023-10-15"},{"lineNumber":19,"author":{"gitId":"shyanyong"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":20,"author":{"gitId":"shyanyong"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Lists all medications to be taken today.\\n\"","lastModifiedDate":"2023-10-15"},{"lineNumber":21,"author":{"gitId":"shyanyong"},"content":"            + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2023-10-15"},{"lineNumber":22,"author":{"gitId":"shyanyong"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":23,"author":{"gitId":"shyanyong"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listing all medications to be taken today.\";","lastModifiedDate":"2023-10-15"},{"lineNumber":24,"author":{"gitId":"shyanyong"},"content":"    public static final String MESSAGE_EMPTY_LIST \u003d \"No medications to be taken today.\";","lastModifiedDate":"2023-10-15"},{"lineNumber":25,"author":{"gitId":"shyanyong"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":26,"author":{"gitId":"shyanyong"},"content":"    @Override","lastModifiedDate":"2023-10-15"},{"lineNumber":27,"author":{"gitId":"shyanyong"},"content":"    public CommandResult execute(ModelPrescription model) throws CommandException {","lastModifiedDate":"2023-10-15"},{"lineNumber":28,"author":{"gitId":"shyanyong"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":29,"author":{"gitId":"shyanyong"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-15"},{"lineNumber":30,"author":{"gitId":"shyanyong"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":31,"author":{"gitId":"shyanyong"},"content":"        Predicate\u003cPrescription\u003e isToday \u003d new IsTodayPredicate();","lastModifiedDate":"2023-10-15"},{"lineNumber":32,"author":{"gitId":"shyanyong"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":33,"author":{"gitId":"shyanyong"},"content":"        model.updateFilteredPrescriptionList(isToday);","lastModifiedDate":"2023-10-15"},{"lineNumber":34,"author":{"gitId":"shyanyong"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":35,"author":{"gitId":"shyanyong"},"content":"        ObservableList\u003cPrescription\u003e todayPrescriptions \u003d model.getFilteredPrescriptionList().filtered(isToday);","lastModifiedDate":"2023-10-15"},{"lineNumber":36,"author":{"gitId":"shyanyong"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":37,"author":{"gitId":"shyanyong"},"content":"        if (todayPrescriptions.isEmpty()) {","lastModifiedDate":"2023-10-15"},{"lineNumber":38,"author":{"gitId":"shyanyong"},"content":"            return new CommandResult(MESSAGE_EMPTY_LIST);","lastModifiedDate":"2023-10-15"},{"lineNumber":39,"author":{"gitId":"shyanyong"},"content":"        } else {","lastModifiedDate":"2023-10-15"},{"lineNumber":40,"author":{"gitId":"shyanyong"},"content":"            return new CommandResult(String.format(\"%s\", MESSAGE_SUCCESS));","lastModifiedDate":"2023-10-17"},{"lineNumber":41,"author":{"gitId":"shyanyong"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":42,"author":{"gitId":"shyanyong"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":43,"author":{"gitId":"shyanyong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":44,"author":{"gitId":"shyanyong"},"content":"    @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":45,"author":{"gitId":"shyanyong"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-17"},{"lineNumber":46,"author":{"gitId":"shyanyong"},"content":"        return other instanceof ListTodayPrescriptionCommand;","lastModifiedDate":"2023-10-17"},{"lineNumber":47,"author":{"gitId":"shyanyong"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":48,"author":{"gitId":"shyanyong"},"content":"}","lastModifiedDate":"2023-10-15"}],"authorContributionMap":{"shyanyong":48}},{"path":"src/main/java/seedu/address/logic/commands/TakePrescriptionCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jingyu987"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-16"},{"lineNumber":2,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":3,"author":{"gitId":"jingyu987"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-16"},{"lineNumber":4,"author":{"gitId":"jingyu987"},"content":"import static seedu.address.logic.parser.CliSyntaxPrescription.PREFIX_CONSUMPTION;","lastModifiedDate":"2023-10-16"},{"lineNumber":5,"author":{"gitId":"jingyu987"},"content":"import static seedu.address.logic.parser.CliSyntaxPrescription.PREFIX_NAME;","lastModifiedDate":"2023-10-16"},{"lineNumber":6,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":7,"author":{"gitId":"jingyu987"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-10-16"},{"lineNumber":8,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":9,"author":{"gitId":"jingyu987"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-16"},{"lineNumber":10,"author":{"gitId":"jingyu987"},"content":"import seedu.address.model.ModelPrescription;","lastModifiedDate":"2023-10-16"},{"lineNumber":11,"author":{"gitId":"jingyu987"},"content":"import seedu.address.model.prescription.Name;","lastModifiedDate":"2023-10-16"},{"lineNumber":12,"author":{"gitId":"jingyu987"},"content":"import seedu.address.model.prescription.Prescription;","lastModifiedDate":"2023-10-16"},{"lineNumber":13,"author":{"gitId":"jingyu987"},"content":"import seedu.address.model.prescription.SameNamePredicate;","lastModifiedDate":"2023-10-16"},{"lineNumber":14,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":15,"author":{"gitId":"jingyu987"},"content":"/**","lastModifiedDate":"2023-10-16"},{"lineNumber":16,"author":{"gitId":"jingyu987"},"content":" * Represents a command to take a specified number of doses of a prescription.","lastModifiedDate":"2023-10-16"},{"lineNumber":17,"author":{"gitId":"jingyu987"},"content":" */","lastModifiedDate":"2023-10-16"},{"lineNumber":18,"author":{"gitId":"jingyu987"},"content":"public class TakePrescriptionCommand extends CommandPrescription {","lastModifiedDate":"2023-10-16"},{"lineNumber":19,"author":{"gitId":"jingyu987"},"content":"    public static final String COMMAND_WORD \u003d \"take\";","lastModifiedDate":"2023-10-16"},{"lineNumber":20,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":21,"author":{"gitId":"jingyu987"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2023-10-16"},{"lineNumber":22,"author":{"gitId":"jingyu987"},"content":"            + \": Takes a specified number of doses of a prescription.\\n\"","lastModifiedDate":"2023-10-16"},{"lineNumber":23,"author":{"gitId":"jingyu987"},"content":"            + \"Parameters: \"","lastModifiedDate":"2023-10-16"},{"lineNumber":24,"author":{"gitId":"jingyu987"},"content":"            + PREFIX_NAME + \"medication_name \"","lastModifiedDate":"2023-10-16"},{"lineNumber":25,"author":{"gitId":"jingyu987"},"content":"            + PREFIX_CONSUMPTION + \"number_of_doses \\n\"","lastModifiedDate":"2023-10-16"},{"lineNumber":26,"author":{"gitId":"jingyu987"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2023-10-16"},{"lineNumber":27,"author":{"gitId":"jingyu987"},"content":"            + PREFIX_NAME + \"Aspirin \"","lastModifiedDate":"2023-10-16"},{"lineNumber":28,"author":{"gitId":"jingyu987"},"content":"            + PREFIX_CONSUMPTION + \"2\";","lastModifiedDate":"2023-10-16"},{"lineNumber":29,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":30,"author":{"gitId":"jingyu987"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Doses taken from: %1$s\";","lastModifiedDate":"2023-10-16"},{"lineNumber":31,"author":{"gitId":"jingyu987"},"content":"    public static final String MESSAGE_PRESCRIPTION_NOT_FOUND \u003d \"The specified prescription does not exist.\";","lastModifiedDate":"2023-10-16"},{"lineNumber":32,"author":{"gitId":"jingyu987"},"content":"    public static final String MESSAGE_INVALID_DOSE \u003d \"Please specify a valid number of doses to take.\";","lastModifiedDate":"2023-10-16"},{"lineNumber":33,"author":{"gitId":"jingyu987"},"content":"    public static final String MESSAGE_INSUFFICIENT_STOCK \u003d \"There is insufficient stock for this prescription.\";","lastModifiedDate":"2023-10-16"},{"lineNumber":34,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":35,"author":{"gitId":"jingyu987"},"content":"    private final Name prescriptionName;","lastModifiedDate":"2023-10-16"},{"lineNumber":36,"author":{"gitId":"jingyu987"},"content":"    private final int dosesToTake;","lastModifiedDate":"2023-10-16"},{"lineNumber":37,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":38,"author":{"gitId":"jingyu987"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":39,"author":{"gitId":"jingyu987"},"content":"     * Creates a TakePrescriptionCommand to take the specified number of doses from a prescription.","lastModifiedDate":"2023-10-16"},{"lineNumber":40,"author":{"gitId":"jingyu987"},"content":"     *","lastModifiedDate":"2023-10-16"},{"lineNumber":41,"author":{"gitId":"jingyu987"},"content":"     * @param prescriptionName Name of the prescription.","lastModifiedDate":"2023-10-16"},{"lineNumber":42,"author":{"gitId":"jingyu987"},"content":"     * @param dosesToTake      Number of doses to take.","lastModifiedDate":"2023-10-16"},{"lineNumber":43,"author":{"gitId":"jingyu987"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":44,"author":{"gitId":"jingyu987"},"content":"    public TakePrescriptionCommand(Name prescriptionName, int dosesToTake) {","lastModifiedDate":"2023-10-16"},{"lineNumber":45,"author":{"gitId":"jingyu987"},"content":"        this.prescriptionName \u003d prescriptionName;","lastModifiedDate":"2023-10-16"},{"lineNumber":46,"author":{"gitId":"jingyu987"},"content":"        this.dosesToTake \u003d dosesToTake;","lastModifiedDate":"2023-10-16"},{"lineNumber":47,"author":{"gitId":"jingyu987"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":48,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":49,"author":{"gitId":"jingyu987"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":50,"author":{"gitId":"jingyu987"},"content":"     * Executes the TakePrescriptionCommand to take the specified doses from the prescription.","lastModifiedDate":"2023-10-16"},{"lineNumber":51,"author":{"gitId":"jingyu987"},"content":"     *","lastModifiedDate":"2023-10-16"},{"lineNumber":52,"author":{"gitId":"jingyu987"},"content":"     * @param model The model of the prescription list.","lastModifiedDate":"2023-10-16"},{"lineNumber":53,"author":{"gitId":"jingyu987"},"content":"     * @return A CommandResult with the result of the execution.","lastModifiedDate":"2023-10-16"},{"lineNumber":54,"author":{"gitId":"jingyu987"},"content":"     * @throws CommandException If there are errors in executing the command.","lastModifiedDate":"2023-10-16"},{"lineNumber":55,"author":{"gitId":"jingyu987"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":56,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":57,"author":{"gitId":"jingyu987"},"content":"    @Override","lastModifiedDate":"2023-10-16"},{"lineNumber":58,"author":{"gitId":"jingyu987"},"content":"    public CommandResult execute(ModelPrescription model) throws CommandException {","lastModifiedDate":"2023-10-16"},{"lineNumber":59,"author":{"gitId":"jingyu987"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-16"},{"lineNumber":60,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":61,"author":{"gitId":"jingyu987"},"content":"        Prescription prescription \u003d model.getPrescriptionByName(prescriptionName);","lastModifiedDate":"2023-10-16"},{"lineNumber":62,"author":{"gitId":"jingyu987"},"content":"        int totalStock \u003d Integer.parseInt(prescription.getTotalStock().getFullStock());","lastModifiedDate":"2023-10-16"},{"lineNumber":63,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":64,"author":{"gitId":"jingyu987"},"content":"        if (dosesToTake \u003c\u003d 0) {","lastModifiedDate":"2023-10-16"},{"lineNumber":65,"author":{"gitId":"jingyu987"},"content":"            throw new CommandException(MESSAGE_INVALID_DOSE);","lastModifiedDate":"2023-10-16"},{"lineNumber":66,"author":{"gitId":"jingyu987"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":67,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":68,"author":{"gitId":"jingyu987"},"content":"        if (totalStock - dosesToTake \u003c 0) {","lastModifiedDate":"2023-10-16"},{"lineNumber":69,"author":{"gitId":"jingyu987"},"content":"            throw new CommandException(TakePrescriptionCommand.MESSAGE_INSUFFICIENT_STOCK);","lastModifiedDate":"2023-10-16"},{"lineNumber":70,"author":{"gitId":"jingyu987"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":71,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":72,"author":{"gitId":"jingyu987"},"content":"        Predicate\u003cPrescription\u003e isSameName \u003d new SameNamePredicate(prescriptionName);","lastModifiedDate":"2023-10-16"},{"lineNumber":73,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":74,"author":{"gitId":"jingyu987"},"content":"        model.takePrescription(prescriptionName, dosesToTake);","lastModifiedDate":"2023-10-16"},{"lineNumber":75,"author":{"gitId":"jingyu987"},"content":"        model.updateFilteredPrescriptionList(isSameName);","lastModifiedDate":"2023-10-16"},{"lineNumber":76,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":77,"author":{"gitId":"jingyu987"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, prescriptionName));","lastModifiedDate":"2023-10-16"},{"lineNumber":78,"author":{"gitId":"jingyu987"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":79,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":80,"author":{"gitId":"jingyu987"},"content":"    @Override","lastModifiedDate":"2023-10-18"},{"lineNumber":81,"author":{"gitId":"jingyu987"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-18"},{"lineNumber":82,"author":{"gitId":"jingyu987"},"content":"        if (this \u003d\u003d other) {","lastModifiedDate":"2023-10-18"},{"lineNumber":83,"author":{"gitId":"jingyu987"},"content":"            return true;","lastModifiedDate":"2023-10-18"},{"lineNumber":84,"author":{"gitId":"jingyu987"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":85,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":86,"author":{"gitId":"jingyu987"},"content":"        if (!(other instanceof TakePrescriptionCommand)) {","lastModifiedDate":"2023-10-18"},{"lineNumber":87,"author":{"gitId":"jingyu987"},"content":"            return false;","lastModifiedDate":"2023-10-18"},{"lineNumber":88,"author":{"gitId":"jingyu987"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":89,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":90,"author":{"gitId":"jingyu987"},"content":"        TakePrescriptionCommand otherCommand \u003d (TakePrescriptionCommand) other;","lastModifiedDate":"2023-10-18"},{"lineNumber":91,"author":{"gitId":"jingyu987"},"content":"        return prescriptionName.equals(otherCommand.prescriptionName)","lastModifiedDate":"2023-10-18"},{"lineNumber":92,"author":{"gitId":"jingyu987"},"content":"                \u0026\u0026 dosesToTake \u003d\u003d otherCommand.dosesToTake;","lastModifiedDate":"2023-10-18"},{"lineNumber":93,"author":{"gitId":"jingyu987"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":94,"author":{"gitId":"jingyu987"},"content":"}","lastModifiedDate":"2023-10-16"}],"authorContributionMap":{"jingyu987":94}},{"path":"src/main/java/seedu/address/logic/parser/AddPrescriptionCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ChongWeiJie29"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"ChongWeiJie29"},"content":"import static seedu.address.logic.MessagesPrescription.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"ChongWeiJie29"},"content":"import static seedu.address.logic.parser.CliSyntaxPrescription.PREFIX_DOSAGE;","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"ChongWeiJie29"},"content":"import static seedu.address.logic.parser.CliSyntaxPrescription.PREFIX_END_DATE;","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"ChongWeiJie29"},"content":"import static seedu.address.logic.parser.CliSyntaxPrescription.PREFIX_EXPIRY_DATE;","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"ChongWeiJie29"},"content":"import static seedu.address.logic.parser.CliSyntaxPrescription.PREFIX_FREQUENCY;","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"ChongWeiJie29"},"content":"import static seedu.address.logic.parser.CliSyntaxPrescription.PREFIX_NAME;","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"ChongWeiJie29"},"content":"import static seedu.address.logic.parser.CliSyntaxPrescription.PREFIX_NOTE;","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"ChongWeiJie29"},"content":"import static seedu.address.logic.parser.CliSyntaxPrescription.PREFIX_START_DATE;","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"ChongWeiJie29"},"content":"import static seedu.address.logic.parser.CliSyntaxPrescription.PREFIX_TOTAL_STOCK;","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"ChongWeiJie29"},"content":"// import java.util.Set;","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"ChongWeiJie29"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"ChongWeiJie29"},"content":"import seedu.address.logic.commands.AddPrescriptionCommand;","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"ChongWeiJie29"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"jingyu987"},"content":"import seedu.address.model.prescription.ConsumptionCount;","lastModifiedDate":"2023-10-16"},{"lineNumber":19,"author":{"gitId":"ChongWeiJie29"},"content":"import seedu.address.model.prescription.Date;","lastModifiedDate":"2023-10-12"},{"lineNumber":20,"author":{"gitId":"ChongWeiJie29"},"content":"import seedu.address.model.prescription.Dosage;","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"ChongWeiJie29"},"content":"import seedu.address.model.prescription.Frequency;","lastModifiedDate":"2023-10-12"},{"lineNumber":22,"author":{"gitId":"ChongWeiJie29"},"content":"import seedu.address.model.prescription.Name;","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"ChongWeiJie29"},"content":"import seedu.address.model.prescription.Note;","lastModifiedDate":"2023-10-12"},{"lineNumber":24,"author":{"gitId":"ChongWeiJie29"},"content":"import seedu.address.model.prescription.Prescription;","lastModifiedDate":"2023-10-12"},{"lineNumber":25,"author":{"gitId":"ChongWeiJie29"},"content":"import seedu.address.model.prescription.Stock;","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"ChongWeiJie29"},"content":"// import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-10-12"},{"lineNumber":27,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":28,"author":{"gitId":"ChongWeiJie29"},"content":"/**","lastModifiedDate":"2023-10-12"},{"lineNumber":29,"author":{"gitId":"ChongWeiJie29"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2023-10-12"},{"lineNumber":30,"author":{"gitId":"ChongWeiJie29"},"content":" */","lastModifiedDate":"2023-10-12"},{"lineNumber":31,"author":{"gitId":"ChongWeiJie29"},"content":"public class AddPrescriptionCommandParser implements ParserPrescription\u003cAddPrescriptionCommand\u003e {","lastModifiedDate":"2023-10-12"},{"lineNumber":32,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":33,"author":{"gitId":"ChongWeiJie29"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":34,"author":{"gitId":"ChongWeiJie29"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2023-10-12"},{"lineNumber":35,"author":{"gitId":"ChongWeiJie29"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2023-10-12"},{"lineNumber":36,"author":{"gitId":"ChongWeiJie29"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-10-12"},{"lineNumber":37,"author":{"gitId":"ChongWeiJie29"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":38,"author":{"gitId":"ChongWeiJie29"},"content":"    public AddPrescriptionCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-12"},{"lineNumber":39,"author":{"gitId":"ChongWeiJie29"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-10-12"},{"lineNumber":40,"author":{"gitId":"ChongWeiJie29"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_DOSAGE, PREFIX_FREQUENCY,","lastModifiedDate":"2023-10-12"},{"lineNumber":41,"author":{"gitId":"ChongWeiJie29"},"content":"                    PREFIX_START_DATE, PREFIX_END_DATE, PREFIX_EXPIRY_DATE, PREFIX_TOTAL_STOCK, PREFIX_NOTE);","lastModifiedDate":"2023-10-12"},{"lineNumber":42,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":43,"author":{"gitId":"ChongWeiJie29"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_DOSAGE, PREFIX_FREQUENCY, PREFIX_START_DATE,","lastModifiedDate":"2023-10-12"},{"lineNumber":44,"author":{"gitId":"ChongWeiJie29"},"content":"                PREFIX_END_DATE, PREFIX_EXPIRY_DATE, PREFIX_TOTAL_STOCK, PREFIX_NOTE)","lastModifiedDate":"2023-10-12"},{"lineNumber":45,"author":{"gitId":"ChongWeiJie29"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2023-10-12"},{"lineNumber":46,"author":{"gitId":"ChongWeiJie29"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-10-12"},{"lineNumber":47,"author":{"gitId":"ChongWeiJie29"},"content":"                AddPrescriptionCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-12"},{"lineNumber":48,"author":{"gitId":"ChongWeiJie29"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":49,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":50,"author":{"gitId":"ChongWeiJie29"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_NAME, PREFIX_DOSAGE, PREFIX_FREQUENCY,","lastModifiedDate":"2023-10-12"},{"lineNumber":51,"author":{"gitId":"ChongWeiJie29"},"content":"                PREFIX_START_DATE, PREFIX_END_DATE, PREFIX_EXPIRY_DATE, PREFIX_TOTAL_STOCK, PREFIX_NOTE);","lastModifiedDate":"2023-10-12"},{"lineNumber":52,"author":{"gitId":"ChongWeiJie29"},"content":"        Name name \u003d ParserUtilPrescription.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2023-10-12"},{"lineNumber":53,"author":{"gitId":"ChongWeiJie29"},"content":"        Dosage dosage \u003d ParserUtilPrescription.parseDosage(argMultimap.getValue(PREFIX_DOSAGE).get());","lastModifiedDate":"2023-10-12"},{"lineNumber":54,"author":{"gitId":"ChongWeiJie29"},"content":"        Frequency frequency \u003d ParserUtilPrescription.parseFrequency(argMultimap.getValue(PREFIX_FREQUENCY).get());","lastModifiedDate":"2023-10-12"},{"lineNumber":55,"author":{"gitId":"ChongWeiJie29"},"content":"        Date startDate \u003d ParserUtilPrescription.parseStartDate(argMultimap.getValue(PREFIX_START_DATE).get());","lastModifiedDate":"2023-10-12"},{"lineNumber":56,"author":{"gitId":"ChongWeiJie29"},"content":"        Date endDate \u003d ParserUtilPrescription.parseEndDate(argMultimap.getValue(PREFIX_END_DATE).get());","lastModifiedDate":"2023-10-12"},{"lineNumber":57,"author":{"gitId":"ChongWeiJie29"},"content":"        Date expiryDate \u003d ParserUtilPrescription.parseExpiryDate(argMultimap.getValue(PREFIX_EXPIRY_DATE).get());","lastModifiedDate":"2023-10-12"},{"lineNumber":58,"author":{"gitId":"ChongWeiJie29"},"content":"        Stock totalStock \u003d ParserUtilPrescription.parseTotalStock(argMultimap.getValue(PREFIX_TOTAL_STOCK).get());","lastModifiedDate":"2023-10-12"},{"lineNumber":59,"author":{"gitId":"jingyu987"},"content":"        ConsumptionCount consumptionCount \u003d new ConsumptionCount(\"0\", false);","lastModifiedDate":"2023-10-16"},{"lineNumber":60,"author":{"gitId":"ChongWeiJie29"},"content":"        Note note \u003d ParserUtilPrescription.parseNote(argMultimap.getValue(PREFIX_NOTE).get());","lastModifiedDate":"2023-10-12"},{"lineNumber":61,"author":{"gitId":"ChongWeiJie29"},"content":"        // Set\u003cTag\u003e tagList \u003d ParserUtilPrescription.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2023-10-12"},{"lineNumber":62,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":63,"author":{"gitId":"ChongWeiJie29"},"content":"        Prescription prescription \u003d new Prescription(name, dosage, frequency, startDate, endDate,","lastModifiedDate":"2023-10-12"},{"lineNumber":64,"author":{"gitId":"jingyu987"},"content":"                expiryDate, totalStock, consumptionCount, note);","lastModifiedDate":"2023-10-16"},{"lineNumber":65,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":66,"author":{"gitId":"ChongWeiJie29"},"content":"        return new AddPrescriptionCommand(prescription);","lastModifiedDate":"2023-10-12"},{"lineNumber":67,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":68,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":69,"author":{"gitId":"ChongWeiJie29"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":70,"author":{"gitId":"ChongWeiJie29"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2023-10-12"},{"lineNumber":71,"author":{"gitId":"ChongWeiJie29"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2023-10-12"},{"lineNumber":72,"author":{"gitId":"ChongWeiJie29"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":73,"author":{"gitId":"ChongWeiJie29"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2023-10-12"},{"lineNumber":74,"author":{"gitId":"ChongWeiJie29"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2023-10-12"},{"lineNumber":75,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":76,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":77,"author":{"gitId":"ChongWeiJie29"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"jingyu987":3,"ChongWeiJie29":74}},{"path":"src/main/java/seedu/address/logic/parser/CliSyntaxPrescription.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ChongWeiJie29"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"ChongWeiJie29"},"content":"/**","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"ChongWeiJie29"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"ChongWeiJie29"},"content":" */","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"ChongWeiJie29"},"content":"public class CliSyntaxPrescription {","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"ChongWeiJie29"},"content":"    /* Prefix definitions */","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"ChongWeiJie29"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"mn/\");","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"ChongWeiJie29"},"content":"    // public static final Prefix PREFIX_TAG \u003d new Prefix(\"t/\");","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"ChongWeiJie29"},"content":"    public static final Prefix PREFIX_DOSAGE \u003d new Prefix(\"d/\");","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"ChongWeiJie29"},"content":"    public static final Prefix PREFIX_FREQUENCY \u003d new Prefix(\"f/\");","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"ChongWeiJie29"},"content":"    public static final Prefix PREFIX_START_DATE \u003d new Prefix(\"sd/\");","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"ChongWeiJie29"},"content":"    public static final Prefix PREFIX_END_DATE \u003d new Prefix(\"ed/\");","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"ChongWeiJie29"},"content":"    public static final Prefix PREFIX_EXPIRY_DATE \u003d new Prefix(\"exd/\");","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"ChongWeiJie29"},"content":"    public static final Prefix PREFIX_TOTAL_STOCK \u003d new Prefix(\"ts/\");","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"ChongWeiJie29"},"content":"    public static final Prefix PREFIX_NOTE \u003d new Prefix(\"n/\");","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"jingyu987"},"content":"    public static final Prefix PREFIX_CONSUMPTION \u003d new Prefix(\"c/\");","lastModifiedDate":"2023-10-16"},{"lineNumber":19,"author":{"gitId":"TeeRenJing"},"content":"    public static final Prefix PREFIX_INDEX \u003d new Prefix(\"i/\");","lastModifiedDate":"2023-10-16"},{"lineNumber":20,"author":{"gitId":"ChongWeiJie29"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"TeeRenJing":1,"jingyu987":1,"ChongWeiJie29":18}},{"path":"src/main/java/seedu/address/logic/parser/DeletePrescriptionCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TeeRenJing"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-16"},{"lineNumber":2,"author":{"gitId":"TeeRenJing"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":3,"author":{"gitId":"TeeRenJing"},"content":"import static seedu.address.logic.MessagesPrescription.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-16"},{"lineNumber":4,"author":{"gitId":"TeeRenJing"},"content":"import static seedu.address.logic.parser.CliSyntaxPrescription.PREFIX_INDEX;","lastModifiedDate":"2023-10-16"},{"lineNumber":5,"author":{"gitId":"TeeRenJing"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":6,"author":{"gitId":"TeeRenJing"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-16"},{"lineNumber":7,"author":{"gitId":"TeeRenJing"},"content":"import seedu.address.logic.commands.DeletePrescriptionCommand;","lastModifiedDate":"2023-10-16"},{"lineNumber":8,"author":{"gitId":"TeeRenJing"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-16"},{"lineNumber":9,"author":{"gitId":"TeeRenJing"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":10,"author":{"gitId":"TeeRenJing"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":11,"author":{"gitId":"TeeRenJing"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":12,"author":{"gitId":"TeeRenJing"},"content":"/**","lastModifiedDate":"2023-10-16"},{"lineNumber":13,"author":{"gitId":"TeeRenJing"},"content":" * Parses input arguments and creates a new DeletePrescriptionCommand object","lastModifiedDate":"2023-10-17"},{"lineNumber":14,"author":{"gitId":"TeeRenJing"},"content":" */","lastModifiedDate":"2023-10-16"},{"lineNumber":15,"author":{"gitId":"TeeRenJing"},"content":"public class DeletePrescriptionCommandParser implements ParserPrescription\u003cDeletePrescriptionCommand\u003e {","lastModifiedDate":"2023-10-16"},{"lineNumber":16,"author":{"gitId":"TeeRenJing"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":17,"author":{"gitId":"TeeRenJing"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2023-10-16"},{"lineNumber":18,"author":{"gitId":"TeeRenJing"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2023-10-16"},{"lineNumber":19,"author":{"gitId":"TeeRenJing"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":20,"author":{"gitId":"TeeRenJing"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2023-10-16"},{"lineNumber":21,"author":{"gitId":"TeeRenJing"},"content":"        return java.util.stream.Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2023-10-16"},{"lineNumber":22,"author":{"gitId":"TeeRenJing"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":23,"author":{"gitId":"TeeRenJing"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":24,"author":{"gitId":"TeeRenJing"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":25,"author":{"gitId":"TeeRenJing"},"content":"     * Parses the given {@code String} of arguments in the context of the DeletePrescriptionCommand","lastModifiedDate":"2023-10-17"},{"lineNumber":26,"author":{"gitId":"TeeRenJing"},"content":"     * and returns an DeletePrescriptionCommand object for execution.","lastModifiedDate":"2023-10-17"},{"lineNumber":27,"author":{"gitId":"TeeRenJing"},"content":"     *","lastModifiedDate":"2023-10-16"},{"lineNumber":28,"author":{"gitId":"TeeRenJing"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-10-16"},{"lineNumber":29,"author":{"gitId":"TeeRenJing"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":30,"author":{"gitId":"TeeRenJing"},"content":"    public DeletePrescriptionCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-16"},{"lineNumber":31,"author":{"gitId":"TeeRenJing"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-10-16"},{"lineNumber":32,"author":{"gitId":"TeeRenJing"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_INDEX);","lastModifiedDate":"2023-10-16"},{"lineNumber":33,"author":{"gitId":"TeeRenJing"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":34,"author":{"gitId":"TeeRenJing"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_INDEX)","lastModifiedDate":"2023-10-16"},{"lineNumber":35,"author":{"gitId":"TeeRenJing"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2023-10-16"},{"lineNumber":36,"author":{"gitId":"TeeRenJing"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-10-16"},{"lineNumber":37,"author":{"gitId":"TeeRenJing"},"content":"                    DeletePrescriptionCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-16"},{"lineNumber":38,"author":{"gitId":"TeeRenJing"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":39,"author":{"gitId":"TeeRenJing"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":40,"author":{"gitId":"TeeRenJing"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_INDEX);","lastModifiedDate":"2023-10-16"},{"lineNumber":41,"author":{"gitId":"TeeRenJing"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":42,"author":{"gitId":"TeeRenJing"},"content":"        try {","lastModifiedDate":"2023-10-16"},{"lineNumber":43,"author":{"gitId":"TeeRenJing"},"content":"            Index index \u003d ParserUtilPrescription.parseIndex(argMultimap.getValue(PREFIX_INDEX).get());","lastModifiedDate":"2023-10-16"},{"lineNumber":44,"author":{"gitId":"TeeRenJing"},"content":"            return new DeletePrescriptionCommand(index);","lastModifiedDate":"2023-10-16"},{"lineNumber":45,"author":{"gitId":"TeeRenJing"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-10-16"},{"lineNumber":46,"author":{"gitId":"TeeRenJing"},"content":"            throw new ParseException(","lastModifiedDate":"2023-10-16"},{"lineNumber":47,"author":{"gitId":"TeeRenJing"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeletePrescriptionCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2023-10-16"},{"lineNumber":48,"author":{"gitId":"TeeRenJing"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":49,"author":{"gitId":"TeeRenJing"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":50,"author":{"gitId":"TeeRenJing"},"content":"}","lastModifiedDate":"2023-10-16"}],"authorContributionMap":{"TeeRenJing":50}},{"path":"src/main/java/seedu/address/logic/parser/ListPrescriptionCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"RoeReRe"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-15"},{"lineNumber":2,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":3,"author":{"gitId":"RoeReRe"},"content":"import static seedu.address.logic.MessagesPrescription.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-15"},{"lineNumber":4,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":5,"author":{"gitId":"RoeReRe"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-10-15"},{"lineNumber":6,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":7,"author":{"gitId":"RoeReRe"},"content":"import seedu.address.logic.commands.ListPrescriptionCommand;","lastModifiedDate":"2023-10-15"},{"lineNumber":8,"author":{"gitId":"RoeReRe"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-15"},{"lineNumber":9,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":10,"author":{"gitId":"RoeReRe"},"content":"/**","lastModifiedDate":"2023-10-15"},{"lineNumber":11,"author":{"gitId":"RoeReRe"},"content":" * Parses input arguments and creates a new ListPrescriptionCommand object","lastModifiedDate":"2023-10-15"},{"lineNumber":12,"author":{"gitId":"RoeReRe"},"content":" */","lastModifiedDate":"2023-10-15"},{"lineNumber":13,"author":{"gitId":"RoeReRe"},"content":"public class ListPrescriptionCommandParser implements ParserPrescription\u003cListPrescriptionCommand\u003e {","lastModifiedDate":"2023-10-15"},{"lineNumber":14,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":15,"author":{"gitId":"RoeReRe"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":16,"author":{"gitId":"RoeReRe"},"content":"     * Parses the given {@code String} of arguments in the context of the ListPrescriptionCommand","lastModifiedDate":"2023-10-15"},{"lineNumber":17,"author":{"gitId":"RoeReRe"},"content":"     * and returns a ListPrescriptionCommand object for execution.","lastModifiedDate":"2023-10-15"},{"lineNumber":18,"author":{"gitId":"RoeReRe"},"content":"     *","lastModifiedDate":"2023-10-15"},{"lineNumber":19,"author":{"gitId":"RoeReRe"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-10-15"},{"lineNumber":20,"author":{"gitId":"RoeReRe"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":21,"author":{"gitId":"RoeReRe"},"content":"    public ListPrescriptionCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-15"},{"lineNumber":22,"author":{"gitId":"RoeReRe"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-10-15"},{"lineNumber":23,"author":{"gitId":"RoeReRe"},"content":"            ArgumentTokenizer.tokenize(args);","lastModifiedDate":"2023-10-15"},{"lineNumber":24,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":25,"author":{"gitId":"RoeReRe"},"content":"        if (!argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2023-10-15"},{"lineNumber":26,"author":{"gitId":"RoeReRe"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-10-15"},{"lineNumber":27,"author":{"gitId":"RoeReRe"},"content":"                ListPrescriptionCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-15"},{"lineNumber":28,"author":{"gitId":"RoeReRe"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":29,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":30,"author":{"gitId":"RoeReRe"},"content":"        return new ListPrescriptionCommand();","lastModifiedDate":"2023-10-15"},{"lineNumber":31,"author":{"gitId":"RoeReRe"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":32,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":33,"author":{"gitId":"RoeReRe"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":34,"author":{"gitId":"RoeReRe"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2023-10-15"},{"lineNumber":35,"author":{"gitId":"RoeReRe"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2023-10-15"},{"lineNumber":36,"author":{"gitId":"RoeReRe"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":37,"author":{"gitId":"RoeReRe"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2023-10-15"},{"lineNumber":38,"author":{"gitId":"RoeReRe"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2023-10-15"},{"lineNumber":39,"author":{"gitId":"RoeReRe"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":40,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":41,"author":{"gitId":"RoeReRe"},"content":"}","lastModifiedDate":"2023-10-15"}],"authorContributionMap":{"RoeReRe":41}},{"path":"src/main/java/seedu/address/logic/parser/ListTodayPrescriptionCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"shyanyong"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-15"},{"lineNumber":2,"author":{"gitId":"shyanyong"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":3,"author":{"gitId":"shyanyong"},"content":"import static seedu.address.logic.MessagesPrescription.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-15"},{"lineNumber":4,"author":{"gitId":"shyanyong"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":5,"author":{"gitId":"shyanyong"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-10-15"},{"lineNumber":6,"author":{"gitId":"shyanyong"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":7,"author":{"gitId":"shyanyong"},"content":"import seedu.address.logic.commands.ListTodayPrescriptionCommand;","lastModifiedDate":"2023-10-15"},{"lineNumber":8,"author":{"gitId":"shyanyong"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-15"},{"lineNumber":9,"author":{"gitId":"shyanyong"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":10,"author":{"gitId":"shyanyong"},"content":"/**","lastModifiedDate":"2023-10-15"},{"lineNumber":11,"author":{"gitId":"shyanyong"},"content":" * Parses input arguments and creates a new ListTodayPrescriptionCommand object","lastModifiedDate":"2023-10-15"},{"lineNumber":12,"author":{"gitId":"shyanyong"},"content":" */","lastModifiedDate":"2023-10-15"},{"lineNumber":13,"author":{"gitId":"shyanyong"},"content":"public class ListTodayPrescriptionCommandParser implements ParserPrescription\u003cListTodayPrescriptionCommand\u003e {","lastModifiedDate":"2023-10-15"},{"lineNumber":14,"author":{"gitId":"shyanyong"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":15,"author":{"gitId":"shyanyong"},"content":"     * Parses the given {@code String} of arguments in the context of the ListTodayPrescriptionCommand","lastModifiedDate":"2023-10-15"},{"lineNumber":16,"author":{"gitId":"shyanyong"},"content":"     * and returns a ListTodayPrescriptionCommand object for execution.","lastModifiedDate":"2023-10-15"},{"lineNumber":17,"author":{"gitId":"shyanyong"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-10-15"},{"lineNumber":18,"author":{"gitId":"shyanyong"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":19,"author":{"gitId":"shyanyong"},"content":"    public ListTodayPrescriptionCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-15"},{"lineNumber":20,"author":{"gitId":"shyanyong"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-10-15"},{"lineNumber":21,"author":{"gitId":"shyanyong"},"content":"                ArgumentTokenizer.tokenize(args);","lastModifiedDate":"2023-10-15"},{"lineNumber":22,"author":{"gitId":"shyanyong"},"content":"        if (!argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2023-10-15"},{"lineNumber":23,"author":{"gitId":"shyanyong"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-10-15"},{"lineNumber":24,"author":{"gitId":"shyanyong"},"content":"                    ListTodayPrescriptionCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-15"},{"lineNumber":25,"author":{"gitId":"shyanyong"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":26,"author":{"gitId":"shyanyong"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":27,"author":{"gitId":"shyanyong"},"content":"        return new ListTodayPrescriptionCommand();","lastModifiedDate":"2023-10-15"},{"lineNumber":28,"author":{"gitId":"shyanyong"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":29,"author":{"gitId":"shyanyong"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":30,"author":{"gitId":"shyanyong"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":31,"author":{"gitId":"shyanyong"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2023-10-15"},{"lineNumber":32,"author":{"gitId":"shyanyong"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2023-10-15"},{"lineNumber":33,"author":{"gitId":"shyanyong"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":34,"author":{"gitId":"shyanyong"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2023-10-15"},{"lineNumber":35,"author":{"gitId":"shyanyong"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2023-10-15"},{"lineNumber":36,"author":{"gitId":"shyanyong"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":37,"author":{"gitId":"shyanyong"},"content":"}","lastModifiedDate":"2023-10-15"}],"authorContributionMap":{"shyanyong":37}},{"path":"src/main/java/seedu/address/logic/parser/ParserPrescription.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ChongWeiJie29"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"ChongWeiJie29"},"content":"import seedu.address.logic.commands.CommandPrescription;","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"ChongWeiJie29"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"ChongWeiJie29"},"content":"/**","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"ChongWeiJie29"},"content":" * Represents a Parser that is able to parse user input into a {@code Command} of type {@code T}.","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"ChongWeiJie29"},"content":" */","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"ChongWeiJie29"},"content":"public interface ParserPrescription\u003cT extends CommandPrescription\u003e {","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"ChongWeiJie29"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"ChongWeiJie29"},"content":"     * Parses {@code userInput} into a command and returns it.","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"ChongWeiJie29"},"content":"     * @throws ParseException if {@code userInput} does not conform the expected format","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"ChongWeiJie29"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"ChongWeiJie29"},"content":"    T parse(String userInput) throws ParseException;","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"ChongWeiJie29"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"ChongWeiJie29":16}},{"path":"src/main/java/seedu/address/logic/parser/ParserUtilPrescription.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ChongWeiJie29"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"ChongWeiJie29"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"ChongWeiJie29"},"content":"// import java.util.Collection;","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"ChongWeiJie29"},"content":"// import java.util.HashSet;","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"ChongWeiJie29"},"content":"// import java.util.Set;","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"ChongWeiJie29"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"ChongWeiJie29"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"ChongWeiJie29"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"ChongWeiJie29"},"content":"import seedu.address.model.prescription.Date;","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"ChongWeiJie29"},"content":"import seedu.address.model.prescription.Dosage;","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"ChongWeiJie29"},"content":"import seedu.address.model.prescription.Frequency;","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"ChongWeiJie29"},"content":"import seedu.address.model.prescription.Name;","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"ChongWeiJie29"},"content":"import seedu.address.model.prescription.Note;","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"ChongWeiJie29"},"content":"import seedu.address.model.prescription.Stock;","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"ChongWeiJie29"},"content":"// import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"ChongWeiJie29"},"content":"/**","lastModifiedDate":"2023-10-12"},{"lineNumber":20,"author":{"gitId":"ChongWeiJie29"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"ChongWeiJie29"},"content":" */","lastModifiedDate":"2023-10-12"},{"lineNumber":22,"author":{"gitId":"ChongWeiJie29"},"content":"public class ParserUtilPrescription {","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":24,"author":{"gitId":"ChongWeiJie29"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2023-10-12"},{"lineNumber":25,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"ChongWeiJie29"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":27,"author":{"gitId":"ChongWeiJie29"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2023-10-12"},{"lineNumber":28,"author":{"gitId":"ChongWeiJie29"},"content":"     * trimmed.","lastModifiedDate":"2023-10-12"},{"lineNumber":29,"author":{"gitId":"ChongWeiJie29"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2023-10-12"},{"lineNumber":30,"author":{"gitId":"ChongWeiJie29"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":31,"author":{"gitId":"ChongWeiJie29"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2023-10-12"},{"lineNumber":32,"author":{"gitId":"ChongWeiJie29"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2023-10-12"},{"lineNumber":33,"author":{"gitId":"ChongWeiJie29"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2023-10-12"},{"lineNumber":34,"author":{"gitId":"ChongWeiJie29"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2023-10-12"},{"lineNumber":35,"author":{"gitId":"ChongWeiJie29"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":36,"author":{"gitId":"ChongWeiJie29"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2023-10-12"},{"lineNumber":37,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":38,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":39,"author":{"gitId":"ChongWeiJie29"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":40,"author":{"gitId":"ChongWeiJie29"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2023-10-12"},{"lineNumber":41,"author":{"gitId":"ChongWeiJie29"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-10-12"},{"lineNumber":42,"author":{"gitId":"ChongWeiJie29"},"content":"     *","lastModifiedDate":"2023-10-12"},{"lineNumber":43,"author":{"gitId":"ChongWeiJie29"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2023-10-12"},{"lineNumber":44,"author":{"gitId":"ChongWeiJie29"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":45,"author":{"gitId":"ChongWeiJie29"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2023-10-12"},{"lineNumber":46,"author":{"gitId":"ChongWeiJie29"},"content":"        requireNonNull(name);","lastModifiedDate":"2023-10-12"},{"lineNumber":47,"author":{"gitId":"ChongWeiJie29"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2023-10-12"},{"lineNumber":48,"author":{"gitId":"ChongWeiJie29"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2023-10-12"},{"lineNumber":49,"author":{"gitId":"ChongWeiJie29"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-12"},{"lineNumber":50,"author":{"gitId":"ChongWeiJie29"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":51,"author":{"gitId":"ChongWeiJie29"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2023-10-12"},{"lineNumber":52,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":53,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":54,"author":{"gitId":"ChongWeiJie29"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":55,"author":{"gitId":"ChongWeiJie29"},"content":"     * Parses a {@code String Dosage} into a {@code Dosage}.","lastModifiedDate":"2023-10-12"},{"lineNumber":56,"author":{"gitId":"ChongWeiJie29"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-10-12"},{"lineNumber":57,"author":{"gitId":"ChongWeiJie29"},"content":"     *","lastModifiedDate":"2023-10-12"},{"lineNumber":58,"author":{"gitId":"ChongWeiJie29"},"content":"     * @throws ParseException if the given {@code dosage} is invalid.","lastModifiedDate":"2023-10-12"},{"lineNumber":59,"author":{"gitId":"ChongWeiJie29"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":60,"author":{"gitId":"ChongWeiJie29"},"content":"    public static Dosage parseDosage(String dosage) throws ParseException {","lastModifiedDate":"2023-10-12"},{"lineNumber":61,"author":{"gitId":"ChongWeiJie29"},"content":"        requireNonNull(dosage);","lastModifiedDate":"2023-10-12"},{"lineNumber":62,"author":{"gitId":"ChongWeiJie29"},"content":"        String trimmedDosage \u003d dosage.trim();","lastModifiedDate":"2023-10-12"},{"lineNumber":63,"author":{"gitId":"ChongWeiJie29"},"content":"        if (!Dosage.isValidDosage(trimmedDosage)) {","lastModifiedDate":"2023-10-12"},{"lineNumber":64,"author":{"gitId":"ChongWeiJie29"},"content":"            throw new ParseException(Dosage.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-12"},{"lineNumber":65,"author":{"gitId":"ChongWeiJie29"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":66,"author":{"gitId":"ChongWeiJie29"},"content":"        return new Dosage(trimmedDosage);","lastModifiedDate":"2023-10-12"},{"lineNumber":67,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":68,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":69,"author":{"gitId":"ChongWeiJie29"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":70,"author":{"gitId":"ChongWeiJie29"},"content":"     * Parses a {@code String Frequency} into a {@code Frequency}.","lastModifiedDate":"2023-10-12"},{"lineNumber":71,"author":{"gitId":"ChongWeiJie29"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-10-12"},{"lineNumber":72,"author":{"gitId":"ChongWeiJie29"},"content":"     *","lastModifiedDate":"2023-10-12"},{"lineNumber":73,"author":{"gitId":"ChongWeiJie29"},"content":"     * @throws ParseException if the given {@code frequency} is invalid.","lastModifiedDate":"2023-10-12"},{"lineNumber":74,"author":{"gitId":"ChongWeiJie29"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":75,"author":{"gitId":"ChongWeiJie29"},"content":"    public static Frequency parseFrequency(String frequency) throws ParseException {","lastModifiedDate":"2023-10-12"},{"lineNumber":76,"author":{"gitId":"ChongWeiJie29"},"content":"        requireNonNull(frequency);","lastModifiedDate":"2023-10-12"},{"lineNumber":77,"author":{"gitId":"ChongWeiJie29"},"content":"        String trimmedFrequency \u003d frequency.trim();","lastModifiedDate":"2023-10-12"},{"lineNumber":78,"author":{"gitId":"ChongWeiJie29"},"content":"        if (!Frequency.isValidFrequency(trimmedFrequency)) {","lastModifiedDate":"2023-10-12"},{"lineNumber":79,"author":{"gitId":"ChongWeiJie29"},"content":"            throw new ParseException(Frequency.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-12"},{"lineNumber":80,"author":{"gitId":"ChongWeiJie29"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":81,"author":{"gitId":"ChongWeiJie29"},"content":"        return new Frequency(trimmedFrequency);","lastModifiedDate":"2023-10-12"},{"lineNumber":82,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":83,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":84,"author":{"gitId":"ChongWeiJie29"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":85,"author":{"gitId":"ChongWeiJie29"},"content":"     * Parses a {@code String StartDate} into a {@code Date}.","lastModifiedDate":"2023-10-12"},{"lineNumber":86,"author":{"gitId":"ChongWeiJie29"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-10-12"},{"lineNumber":87,"author":{"gitId":"ChongWeiJie29"},"content":"     *","lastModifiedDate":"2023-10-12"},{"lineNumber":88,"author":{"gitId":"ChongWeiJie29"},"content":"     * @throws ParseException if the given {@code startDate} is invalid.","lastModifiedDate":"2023-10-12"},{"lineNumber":89,"author":{"gitId":"ChongWeiJie29"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":90,"author":{"gitId":"ChongWeiJie29"},"content":"    public static Date parseStartDate(String startDate) throws ParseException {","lastModifiedDate":"2023-10-12"},{"lineNumber":91,"author":{"gitId":"ChongWeiJie29"},"content":"        requireNonNull(startDate);","lastModifiedDate":"2023-10-12"},{"lineNumber":92,"author":{"gitId":"ChongWeiJie29"},"content":"        String trimmedStartDate \u003d startDate.trim();","lastModifiedDate":"2023-10-12"},{"lineNumber":93,"author":{"gitId":"ChongWeiJie29"},"content":"        if (!Date.isValidDate(trimmedStartDate)) {","lastModifiedDate":"2023-10-12"},{"lineNumber":94,"author":{"gitId":"ChongWeiJie29"},"content":"            throw new ParseException(Date.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-12"},{"lineNumber":95,"author":{"gitId":"ChongWeiJie29"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":96,"author":{"gitId":"ChongWeiJie29"},"content":"        return new Date(trimmedStartDate);","lastModifiedDate":"2023-10-12"},{"lineNumber":97,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":98,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":99,"author":{"gitId":"ChongWeiJie29"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":100,"author":{"gitId":"ChongWeiJie29"},"content":"     * Parses a {@code String EndDate} into a {@code Date}.","lastModifiedDate":"2023-10-12"},{"lineNumber":101,"author":{"gitId":"ChongWeiJie29"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-10-12"},{"lineNumber":102,"author":{"gitId":"ChongWeiJie29"},"content":"     *","lastModifiedDate":"2023-10-12"},{"lineNumber":103,"author":{"gitId":"ChongWeiJie29"},"content":"     * @throws ParseException if the given {@code endDate} is invalid.","lastModifiedDate":"2023-10-12"},{"lineNumber":104,"author":{"gitId":"ChongWeiJie29"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":105,"author":{"gitId":"ChongWeiJie29"},"content":"    public static Date parseEndDate(String endDate) throws ParseException {","lastModifiedDate":"2023-10-12"},{"lineNumber":106,"author":{"gitId":"ChongWeiJie29"},"content":"        requireNonNull(endDate);","lastModifiedDate":"2023-10-12"},{"lineNumber":107,"author":{"gitId":"ChongWeiJie29"},"content":"        String trimmedEndDate \u003d endDate.trim();","lastModifiedDate":"2023-10-12"},{"lineNumber":108,"author":{"gitId":"ChongWeiJie29"},"content":"        if (!Date.isValidDate(trimmedEndDate)) {","lastModifiedDate":"2023-10-12"},{"lineNumber":109,"author":{"gitId":"ChongWeiJie29"},"content":"            throw new ParseException(Date.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-12"},{"lineNumber":110,"author":{"gitId":"ChongWeiJie29"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":111,"author":{"gitId":"ChongWeiJie29"},"content":"        return new Date(trimmedEndDate);","lastModifiedDate":"2023-10-12"},{"lineNumber":112,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":113,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":114,"author":{"gitId":"ChongWeiJie29"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":115,"author":{"gitId":"ChongWeiJie29"},"content":"     * Parses a {@code String ExpiryDate} into a {@code Date}.","lastModifiedDate":"2023-10-12"},{"lineNumber":116,"author":{"gitId":"ChongWeiJie29"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-10-12"},{"lineNumber":117,"author":{"gitId":"ChongWeiJie29"},"content":"     *","lastModifiedDate":"2023-10-12"},{"lineNumber":118,"author":{"gitId":"ChongWeiJie29"},"content":"     * @throws ParseException if the given {@code expiryDate} is invalid.","lastModifiedDate":"2023-10-12"},{"lineNumber":119,"author":{"gitId":"ChongWeiJie29"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":120,"author":{"gitId":"ChongWeiJie29"},"content":"    public static Date parseExpiryDate(String expiryDate) throws ParseException {","lastModifiedDate":"2023-10-12"},{"lineNumber":121,"author":{"gitId":"ChongWeiJie29"},"content":"        requireNonNull(expiryDate);","lastModifiedDate":"2023-10-12"},{"lineNumber":122,"author":{"gitId":"ChongWeiJie29"},"content":"        String trimmedExpiryDate \u003d expiryDate.trim();","lastModifiedDate":"2023-10-12"},{"lineNumber":123,"author":{"gitId":"ChongWeiJie29"},"content":"        if (!Date.isValidDate(trimmedExpiryDate)) {","lastModifiedDate":"2023-10-12"},{"lineNumber":124,"author":{"gitId":"ChongWeiJie29"},"content":"            throw new ParseException(Date.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-12"},{"lineNumber":125,"author":{"gitId":"ChongWeiJie29"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":126,"author":{"gitId":"ChongWeiJie29"},"content":"        return new Date(trimmedExpiryDate);","lastModifiedDate":"2023-10-12"},{"lineNumber":127,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":128,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":129,"author":{"gitId":"ChongWeiJie29"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":130,"author":{"gitId":"ChongWeiJie29"},"content":"     * Parses a {@code String TotalStock} into a {@code Stock}.","lastModifiedDate":"2023-10-12"},{"lineNumber":131,"author":{"gitId":"ChongWeiJie29"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-10-12"},{"lineNumber":132,"author":{"gitId":"ChongWeiJie29"},"content":"     *","lastModifiedDate":"2023-10-12"},{"lineNumber":133,"author":{"gitId":"ChongWeiJie29"},"content":"     * @throws ParseException if the given {@code totalStock} is invalid.","lastModifiedDate":"2023-10-12"},{"lineNumber":134,"author":{"gitId":"ChongWeiJie29"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":135,"author":{"gitId":"ChongWeiJie29"},"content":"    public static Stock parseTotalStock(String totalStock) throws ParseException {","lastModifiedDate":"2023-10-12"},{"lineNumber":136,"author":{"gitId":"ChongWeiJie29"},"content":"        requireNonNull(totalStock);","lastModifiedDate":"2023-10-12"},{"lineNumber":137,"author":{"gitId":"ChongWeiJie29"},"content":"        String trimmedTotalStock \u003d totalStock.trim();","lastModifiedDate":"2023-10-12"},{"lineNumber":138,"author":{"gitId":"ChongWeiJie29"},"content":"        if (!Stock.isValidStock(trimmedTotalStock)) {","lastModifiedDate":"2023-10-12"},{"lineNumber":139,"author":{"gitId":"ChongWeiJie29"},"content":"            throw new ParseException(Stock.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-12"},{"lineNumber":140,"author":{"gitId":"ChongWeiJie29"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":141,"author":{"gitId":"ChongWeiJie29"},"content":"        return new Stock(trimmedTotalStock);","lastModifiedDate":"2023-10-12"},{"lineNumber":142,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":143,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":144,"author":{"gitId":"ChongWeiJie29"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":145,"author":{"gitId":"ChongWeiJie29"},"content":"     * Parses a {@code String Note} into a {@code Note}.","lastModifiedDate":"2023-10-12"},{"lineNumber":146,"author":{"gitId":"ChongWeiJie29"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-10-12"},{"lineNumber":147,"author":{"gitId":"ChongWeiJie29"},"content":"     *","lastModifiedDate":"2023-10-12"},{"lineNumber":148,"author":{"gitId":"ChongWeiJie29"},"content":"     * @throws ParseException if the given {@code note} is invalid.","lastModifiedDate":"2023-10-12"},{"lineNumber":149,"author":{"gitId":"ChongWeiJie29"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":150,"author":{"gitId":"ChongWeiJie29"},"content":"    public static Note parseNote(String note) throws ParseException {","lastModifiedDate":"2023-10-12"},{"lineNumber":151,"author":{"gitId":"ChongWeiJie29"},"content":"        requireNonNull(note);","lastModifiedDate":"2023-10-12"},{"lineNumber":152,"author":{"gitId":"ChongWeiJie29"},"content":"        String trimmedNote \u003d note.trim();","lastModifiedDate":"2023-10-12"},{"lineNumber":153,"author":{"gitId":"ChongWeiJie29"},"content":"        if (!Note.isValidNote(trimmedNote)) {","lastModifiedDate":"2023-10-12"},{"lineNumber":154,"author":{"gitId":"ChongWeiJie29"},"content":"            throw new ParseException(Frequency.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-12"},{"lineNumber":155,"author":{"gitId":"ChongWeiJie29"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":156,"author":{"gitId":"ChongWeiJie29"},"content":"        return new Note(trimmedNote);","lastModifiedDate":"2023-10-12"},{"lineNumber":157,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":158,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":159,"author":{"gitId":"ChongWeiJie29"},"content":"    // /**","lastModifiedDate":"2023-10-12"},{"lineNumber":160,"author":{"gitId":"ChongWeiJie29"},"content":"    //  * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2023-10-12"},{"lineNumber":161,"author":{"gitId":"ChongWeiJie29"},"content":"    //  * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-10-12"},{"lineNumber":162,"author":{"gitId":"ChongWeiJie29"},"content":"    //  *","lastModifiedDate":"2023-10-12"},{"lineNumber":163,"author":{"gitId":"ChongWeiJie29"},"content":"    //  * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2023-10-12"},{"lineNumber":164,"author":{"gitId":"ChongWeiJie29"},"content":"    //  */","lastModifiedDate":"2023-10-12"},{"lineNumber":165,"author":{"gitId":"ChongWeiJie29"},"content":"    // public static Tag parseTag(String tag) throws ParseException {","lastModifiedDate":"2023-10-12"},{"lineNumber":166,"author":{"gitId":"ChongWeiJie29"},"content":"    //     requireNonNull(tag);","lastModifiedDate":"2023-10-12"},{"lineNumber":167,"author":{"gitId":"ChongWeiJie29"},"content":"    //     String trimmedTag \u003d tag.trim();","lastModifiedDate":"2023-10-12"},{"lineNumber":168,"author":{"gitId":"ChongWeiJie29"},"content":"    //     if (!Tag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2023-10-12"},{"lineNumber":169,"author":{"gitId":"ChongWeiJie29"},"content":"    //         throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-12"},{"lineNumber":170,"author":{"gitId":"ChongWeiJie29"},"content":"    //     }","lastModifiedDate":"2023-10-12"},{"lineNumber":171,"author":{"gitId":"ChongWeiJie29"},"content":"    //     return new Tag(trimmedTag);","lastModifiedDate":"2023-10-12"},{"lineNumber":172,"author":{"gitId":"ChongWeiJie29"},"content":"    // }","lastModifiedDate":"2023-10-12"},{"lineNumber":173,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":174,"author":{"gitId":"ChongWeiJie29"},"content":"    // /**","lastModifiedDate":"2023-10-12"},{"lineNumber":175,"author":{"gitId":"ChongWeiJie29"},"content":"    //  * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2023-10-12"},{"lineNumber":176,"author":{"gitId":"ChongWeiJie29"},"content":"    //  */","lastModifiedDate":"2023-10-12"},{"lineNumber":177,"author":{"gitId":"ChongWeiJie29"},"content":"    // public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2023-10-12"},{"lineNumber":178,"author":{"gitId":"ChongWeiJie29"},"content":"    //     requireNonNull(tags);","lastModifiedDate":"2023-10-12"},{"lineNumber":179,"author":{"gitId":"ChongWeiJie29"},"content":"    //     final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-10-12"},{"lineNumber":180,"author":{"gitId":"ChongWeiJie29"},"content":"    //     for (String tagName : tags) {","lastModifiedDate":"2023-10-12"},{"lineNumber":181,"author":{"gitId":"ChongWeiJie29"},"content":"    //         tagSet.add(parseTag(tagName));","lastModifiedDate":"2023-10-12"},{"lineNumber":182,"author":{"gitId":"ChongWeiJie29"},"content":"    //     }","lastModifiedDate":"2023-10-12"},{"lineNumber":183,"author":{"gitId":"ChongWeiJie29"},"content":"    //     return tagSet;","lastModifiedDate":"2023-10-12"},{"lineNumber":184,"author":{"gitId":"ChongWeiJie29"},"content":"    // }","lastModifiedDate":"2023-10-12"},{"lineNumber":185,"author":{"gitId":"ChongWeiJie29"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"ChongWeiJie29":185}},{"path":"src/main/java/seedu/address/logic/parser/PrescriptionListParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ChongWeiJie29"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"ChongWeiJie29"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"ChongWeiJie29"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"ChongWeiJie29"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"ChongWeiJie29"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"RoeReRe"},"content":"import seedu.address.logic.commands.AddPrescriptionCommand;","lastModifiedDate":"2023-10-16"},{"lineNumber":11,"author":{"gitId":"RoeReRe"},"content":"import seedu.address.logic.commands.CommandPrescription;","lastModifiedDate":"2023-10-16"},{"lineNumber":12,"author":{"gitId":"RoeReRe"},"content":"import seedu.address.logic.commands.DeletePrescriptionCommand;","lastModifiedDate":"2023-10-16"},{"lineNumber":13,"author":{"gitId":"RoeReRe"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2023-10-16"},{"lineNumber":14,"author":{"gitId":"RoeReRe"},"content":"import seedu.address.logic.commands.ListPrescriptionCommand;","lastModifiedDate":"2023-10-15"},{"lineNumber":15,"author":{"gitId":"shyanyong"},"content":"import seedu.address.logic.commands.ListTodayPrescriptionCommand;","lastModifiedDate":"2023-10-15"},{"lineNumber":16,"author":{"gitId":"jingyu987"},"content":"import seedu.address.logic.commands.TakePrescriptionCommand;","lastModifiedDate":"2023-10-16"},{"lineNumber":17,"author":{"gitId":"ChongWeiJie29"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"TeeRenJing"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":20,"author":{"gitId":"ChongWeiJie29"},"content":"/**","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"ChongWeiJie29"},"content":" * Parses user input.","lastModifiedDate":"2023-10-12"},{"lineNumber":22,"author":{"gitId":"ChongWeiJie29"},"content":" */","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"ChongWeiJie29"},"content":"public class PrescriptionListParser {","lastModifiedDate":"2023-10-12"},{"lineNumber":24,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":25,"author":{"gitId":"ChongWeiJie29"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"ChongWeiJie29"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2023-10-12"},{"lineNumber":27,"author":{"gitId":"ChongWeiJie29"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":28,"author":{"gitId":"ChongWeiJie29"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2023-10-12"},{"lineNumber":29,"author":{"gitId":"TeeRenJing"},"content":"    private static final java.util.logging.Logger logger \u003d LogsCenter.getLogger(PrescriptionListParser.class);","lastModifiedDate":"2023-10-16"},{"lineNumber":30,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":31,"author":{"gitId":"ChongWeiJie29"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":32,"author":{"gitId":"ChongWeiJie29"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2023-10-12"},{"lineNumber":33,"author":{"gitId":"ChongWeiJie29"},"content":"     *","lastModifiedDate":"2023-10-12"},{"lineNumber":34,"author":{"gitId":"ChongWeiJie29"},"content":"     * @param userInput full user input string","lastModifiedDate":"2023-10-12"},{"lineNumber":35,"author":{"gitId":"ChongWeiJie29"},"content":"     * @return the command based on the user input","lastModifiedDate":"2023-10-12"},{"lineNumber":36,"author":{"gitId":"ChongWeiJie29"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-10-12"},{"lineNumber":37,"author":{"gitId":"ChongWeiJie29"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":38,"author":{"gitId":"ChongWeiJie29"},"content":"    public CommandPrescription parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2023-10-12"},{"lineNumber":39,"author":{"gitId":"TeeRenJing"},"content":"        final java.util.regex.Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2023-10-16"},{"lineNumber":40,"author":{"gitId":"ChongWeiJie29"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2023-10-12"},{"lineNumber":41,"author":{"gitId":"ChongWeiJie29"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-12"},{"lineNumber":42,"author":{"gitId":"ChongWeiJie29"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":43,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":44,"author":{"gitId":"ChongWeiJie29"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2023-10-12"},{"lineNumber":45,"author":{"gitId":"ChongWeiJie29"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2023-10-12"},{"lineNumber":46,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":47,"author":{"gitId":"ChongWeiJie29"},"content":"        // Note to developers: Change the log level in config.json to enable lower level (i.e., FINE, FINER and lower)","lastModifiedDate":"2023-10-12"},{"lineNumber":48,"author":{"gitId":"ChongWeiJie29"},"content":"        // log messages such as the one below.","lastModifiedDate":"2023-10-12"},{"lineNumber":49,"author":{"gitId":"ChongWeiJie29"},"content":"        // Lower level log messages are used sparingly to minimize noise in the code.","lastModifiedDate":"2023-10-12"},{"lineNumber":50,"author":{"gitId":"ChongWeiJie29"},"content":"        logger.fine(\"Command word: \" + commandWord + \"; Arguments: \" + arguments);","lastModifiedDate":"2023-10-12"},{"lineNumber":51,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":52,"author":{"gitId":"shyanyong"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":53,"author":{"gitId":"ChongWeiJie29"},"content":"        switch (commandWord) {","lastModifiedDate":"2023-10-12"},{"lineNumber":54,"author":{"gitId":"RoeReRe"},"content":"        case AddPrescriptionCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-16"},{"lineNumber":55,"author":{"gitId":"ChongWeiJie29"},"content":"            return new AddPrescriptionCommandParser().parse(arguments);","lastModifiedDate":"2023-10-12"},{"lineNumber":56,"author":{"gitId":"RoeReRe"},"content":"        case ListPrescriptionCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-16"},{"lineNumber":57,"author":{"gitId":"RoeReRe"},"content":"            return new ListPrescriptionCommandParser().parse(arguments);","lastModifiedDate":"2023-10-15"},{"lineNumber":58,"author":{"gitId":"RoeReRe"},"content":"        case ListTodayPrescriptionCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-16"},{"lineNumber":59,"author":{"gitId":"shyanyong"},"content":"            return new ListTodayPrescriptionCommandParser().parse(arguments);","lastModifiedDate":"2023-10-15"},{"lineNumber":60,"author":{"gitId":"jingyu987"},"content":"        case TakePrescriptionCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-16"},{"lineNumber":61,"author":{"gitId":"jingyu987"},"content":"            return new TakePrescriptionCommandParser().parse(arguments);","lastModifiedDate":"2023-10-16"},{"lineNumber":62,"author":{"gitId":"RoeReRe"},"content":"        case DeletePrescriptionCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-16"},{"lineNumber":63,"author":{"gitId":"TeeRenJing"},"content":"            return new DeletePrescriptionCommandParser().parse(arguments);","lastModifiedDate":"2023-10-16"},{"lineNumber":64,"author":{"gitId":"ChongWeiJie29"},"content":"        default:","lastModifiedDate":"2023-10-12"},{"lineNumber":65,"author":{"gitId":"ChongWeiJie29"},"content":"            logger.finer(\"This user input caused a ParseException: \" + userInput);","lastModifiedDate":"2023-10-12"},{"lineNumber":66,"author":{"gitId":"ChongWeiJie29"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2023-10-12"},{"lineNumber":67,"author":{"gitId":"ChongWeiJie29"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":68,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":69,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":70,"author":{"gitId":"ChongWeiJie29"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"TeeRenJing":4,"jingyu987":3,"shyanyong":3,"ChongWeiJie29":50,"RoeReRe":10}},{"path":"src/main/java/seedu/address/logic/parser/TakePrescriptionCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jingyu987"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-16"},{"lineNumber":2,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":3,"author":{"gitId":"jingyu987"},"content":"import static seedu.address.logic.MessagesPrescription.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-16"},{"lineNumber":4,"author":{"gitId":"jingyu987"},"content":"import static seedu.address.logic.parser.CliSyntaxPrescription.PREFIX_CONSUMPTION;","lastModifiedDate":"2023-10-16"},{"lineNumber":5,"author":{"gitId":"jingyu987"},"content":"import static seedu.address.logic.parser.CliSyntaxPrescription.PREFIX_NAME;","lastModifiedDate":"2023-10-16"},{"lineNumber":6,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":7,"author":{"gitId":"jingyu987"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-10-16"},{"lineNumber":8,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":9,"author":{"gitId":"jingyu987"},"content":"import seedu.address.logic.commands.TakePrescriptionCommand;","lastModifiedDate":"2023-10-16"},{"lineNumber":10,"author":{"gitId":"jingyu987"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-16"},{"lineNumber":11,"author":{"gitId":"jingyu987"},"content":"import seedu.address.model.prescription.Name;","lastModifiedDate":"2023-10-16"},{"lineNumber":12,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":13,"author":{"gitId":"jingyu987"},"content":"/**","lastModifiedDate":"2023-10-16"},{"lineNumber":14,"author":{"gitId":"jingyu987"},"content":" * Parses input arguments and creates a new TakePrescriptionCommand object","lastModifiedDate":"2023-10-16"},{"lineNumber":15,"author":{"gitId":"jingyu987"},"content":" */","lastModifiedDate":"2023-10-16"},{"lineNumber":16,"author":{"gitId":"jingyu987"},"content":"public class TakePrescriptionCommandParser implements ParserPrescription\u003cTakePrescriptionCommand\u003e {","lastModifiedDate":"2023-10-16"},{"lineNumber":17,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":18,"author":{"gitId":"jingyu987"},"content":"    public static final String VALIDATION_REGEX \u003d \"[0-9]+\";","lastModifiedDate":"2023-10-16"},{"lineNumber":19,"author":{"gitId":"jingyu987"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":20,"author":{"gitId":"jingyu987"},"content":"     * Parses the given arguments to create a TakePrescriptionCommand.","lastModifiedDate":"2023-10-16"},{"lineNumber":21,"author":{"gitId":"jingyu987"},"content":"     *","lastModifiedDate":"2023-10-16"},{"lineNumber":22,"author":{"gitId":"jingyu987"},"content":"     * @param args User input representing the command.","lastModifiedDate":"2023-10-16"},{"lineNumber":23,"author":{"gitId":"jingyu987"},"content":"     * @return A TakePrescriptionCommand for taking a specified number of doses from a prescription.","lastModifiedDate":"2023-10-16"},{"lineNumber":24,"author":{"gitId":"jingyu987"},"content":"     * @throws ParseException If the user input does not conform to the expected format.","lastModifiedDate":"2023-10-16"},{"lineNumber":25,"author":{"gitId":"jingyu987"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":26,"author":{"gitId":"jingyu987"},"content":"    @Override","lastModifiedDate":"2023-10-16"},{"lineNumber":27,"author":{"gitId":"jingyu987"},"content":"    public TakePrescriptionCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-16"},{"lineNumber":28,"author":{"gitId":"jingyu987"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_CONSUMPTION);","lastModifiedDate":"2023-10-16"},{"lineNumber":29,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":30,"author":{"gitId":"jingyu987"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_CONSUMPTION)","lastModifiedDate":"2023-10-16"},{"lineNumber":31,"author":{"gitId":"jingyu987"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2023-10-16"},{"lineNumber":32,"author":{"gitId":"jingyu987"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-10-16"},{"lineNumber":33,"author":{"gitId":"jingyu987"},"content":"                    TakePrescriptionCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-16"},{"lineNumber":34,"author":{"gitId":"jingyu987"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":35,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":36,"author":{"gitId":"jingyu987"},"content":"        Name name \u003d ParserUtilPrescription.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2023-10-16"},{"lineNumber":37,"author":{"gitId":"jingyu987"},"content":"        String dosage \u003d argMultimap.getValue(PREFIX_CONSUMPTION).get();","lastModifiedDate":"2023-10-16"},{"lineNumber":38,"author":{"gitId":"jingyu987"},"content":"        if (!isValidDosage(dosage)) {","lastModifiedDate":"2023-10-16"},{"lineNumber":39,"author":{"gitId":"jingyu987"},"content":"            throw new ParseException(TakePrescriptionCommand.MESSAGE_INVALID_DOSE);","lastModifiedDate":"2023-10-16"},{"lineNumber":40,"author":{"gitId":"jingyu987"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":41,"author":{"gitId":"jingyu987"},"content":"        int dosesToTake \u003d Integer.parseInt(dosage);","lastModifiedDate":"2023-10-16"},{"lineNumber":42,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":43,"author":{"gitId":"jingyu987"},"content":"        return new TakePrescriptionCommand(name, dosesToTake);","lastModifiedDate":"2023-10-16"},{"lineNumber":44,"author":{"gitId":"jingyu987"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":45,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":46,"author":{"gitId":"jingyu987"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":47,"author":{"gitId":"jingyu987"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2023-10-16"},{"lineNumber":48,"author":{"gitId":"jingyu987"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2023-10-16"},{"lineNumber":49,"author":{"gitId":"jingyu987"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":50,"author":{"gitId":"jingyu987"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2023-10-16"},{"lineNumber":51,"author":{"gitId":"jingyu987"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2023-10-16"},{"lineNumber":52,"author":{"gitId":"jingyu987"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":53,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":54,"author":{"gitId":"jingyu987"},"content":"    public static boolean isValidDosage(String test) {","lastModifiedDate":"2023-10-16"},{"lineNumber":55,"author":{"gitId":"jingyu987"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-10-16"},{"lineNumber":56,"author":{"gitId":"jingyu987"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":57,"author":{"gitId":"jingyu987"},"content":"}","lastModifiedDate":"2023-10-16"}],"authorContributionMap":{"jingyu987":57}},{"path":"src/main/java/seedu/address/model/ModelManagerPrescription.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ChongWeiJie29"},"content":"package seedu.address.model;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"ChongWeiJie29"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"ChongWeiJie29"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"ChongWeiJie29"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"ChongWeiJie29"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"ChongWeiJie29"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"ChongWeiJie29"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"ChongWeiJie29"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"ChongWeiJie29"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"ChongWeiJie29"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"jingyu987"},"content":"import seedu.address.logic.commands.TakePrescriptionCommand;","lastModifiedDate":"2023-10-16"},{"lineNumber":15,"author":{"gitId":"jingyu987"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-16"},{"lineNumber":16,"author":{"gitId":"jingyu987"},"content":"import seedu.address.model.prescription.ConsumptionCount;","lastModifiedDate":"2023-10-16"},{"lineNumber":17,"author":{"gitId":"jingyu987"},"content":"import seedu.address.model.prescription.Name;","lastModifiedDate":"2023-10-16"},{"lineNumber":18,"author":{"gitId":"ChongWeiJie29"},"content":"import seedu.address.model.prescription.Prescription;","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":20,"author":{"gitId":"ChongWeiJie29"},"content":"/**","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"ChongWeiJie29"},"content":" * Represents the in-memory model of the prescription list data.","lastModifiedDate":"2023-10-12"},{"lineNumber":22,"author":{"gitId":"ChongWeiJie29"},"content":" */","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"ChongWeiJie29"},"content":"public class ModelManagerPrescription implements ModelPrescription {","lastModifiedDate":"2023-10-12"},{"lineNumber":24,"author":{"gitId":"ChongWeiJie29"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManagerPrescription.class);","lastModifiedDate":"2023-10-12"},{"lineNumber":25,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"ChongWeiJie29"},"content":"    private final PrescriptionList prescriptionList;","lastModifiedDate":"2023-10-12"},{"lineNumber":27,"author":{"gitId":"ChongWeiJie29"},"content":"    private final UserPrefsPrescription userPrefs;","lastModifiedDate":"2023-10-12"},{"lineNumber":28,"author":{"gitId":"ChongWeiJie29"},"content":"    private final FilteredList\u003cPrescription\u003e filteredPrescriptions;","lastModifiedDate":"2023-10-12"},{"lineNumber":29,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":30,"author":{"gitId":"ChongWeiJie29"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":31,"author":{"gitId":"ChongWeiJie29"},"content":"     * Initializes a ModelManagerPrescription with the given prescriptionList and userPrefs.","lastModifiedDate":"2023-10-12"},{"lineNumber":32,"author":{"gitId":"ChongWeiJie29"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":33,"author":{"gitId":"ChongWeiJie29"},"content":"    public ModelManagerPrescription(ReadOnlyPrescriptionList prescriptionList,","lastModifiedDate":"2023-10-12"},{"lineNumber":34,"author":{"gitId":"ChongWeiJie29"},"content":"        ReadOnlyUserPrefsPrescription userPrefs) {","lastModifiedDate":"2023-10-12"},{"lineNumber":35,"author":{"gitId":"ChongWeiJie29"},"content":"        requireAllNonNull(prescriptionList, userPrefs);","lastModifiedDate":"2023-10-12"},{"lineNumber":36,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":37,"author":{"gitId":"ChongWeiJie29"},"content":"        logger.fine(\"Initializing with prescription list: \" + prescriptionList + \" and user prefs \" + userPrefs);","lastModifiedDate":"2023-10-12"},{"lineNumber":38,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":39,"author":{"gitId":"ChongWeiJie29"},"content":"        this.prescriptionList \u003d new PrescriptionList(prescriptionList);","lastModifiedDate":"2023-10-12"},{"lineNumber":40,"author":{"gitId":"ChongWeiJie29"},"content":"        this.userPrefs \u003d new UserPrefsPrescription(userPrefs);","lastModifiedDate":"2023-10-12"},{"lineNumber":41,"author":{"gitId":"ChongWeiJie29"},"content":"        filteredPrescriptions \u003d new FilteredList\u003c\u003e(this.prescriptionList.getPrescriptionList());","lastModifiedDate":"2023-10-12"},{"lineNumber":42,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":43,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":44,"author":{"gitId":"ChongWeiJie29"},"content":"    public ModelManagerPrescription() {","lastModifiedDate":"2023-10-12"},{"lineNumber":45,"author":{"gitId":"ChongWeiJie29"},"content":"        this(new PrescriptionList(), new UserPrefsPrescription());","lastModifiedDate":"2023-10-12"},{"lineNumber":46,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":47,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":48,"author":{"gitId":"ChongWeiJie29"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefsPrescription \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-10-12"},{"lineNumber":49,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":50,"author":{"gitId":"ChongWeiJie29"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":51,"author":{"gitId":"ChongWeiJie29"},"content":"    public void setUserPrefs(ReadOnlyUserPrefsPrescription userPrefs) {","lastModifiedDate":"2023-10-12"},{"lineNumber":52,"author":{"gitId":"ChongWeiJie29"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2023-10-12"},{"lineNumber":53,"author":{"gitId":"ChongWeiJie29"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2023-10-12"},{"lineNumber":54,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":55,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":56,"author":{"gitId":"ChongWeiJie29"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":57,"author":{"gitId":"ChongWeiJie29"},"content":"    public ReadOnlyUserPrefsPrescription getUserPrefs() {","lastModifiedDate":"2023-10-12"},{"lineNumber":58,"author":{"gitId":"ChongWeiJie29"},"content":"        return userPrefs;","lastModifiedDate":"2023-10-12"},{"lineNumber":59,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":60,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":61,"author":{"gitId":"ChongWeiJie29"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":62,"author":{"gitId":"ChongWeiJie29"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2023-10-12"},{"lineNumber":63,"author":{"gitId":"ChongWeiJie29"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2023-10-12"},{"lineNumber":64,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":65,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":66,"author":{"gitId":"ChongWeiJie29"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":67,"author":{"gitId":"ChongWeiJie29"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2023-10-12"},{"lineNumber":68,"author":{"gitId":"ChongWeiJie29"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2023-10-12"},{"lineNumber":69,"author":{"gitId":"ChongWeiJie29"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2023-10-12"},{"lineNumber":70,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":71,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":72,"author":{"gitId":"ChongWeiJie29"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":73,"author":{"gitId":"ChongWeiJie29"},"content":"    public Path getPrescriptionListFilePath() {","lastModifiedDate":"2023-10-12"},{"lineNumber":74,"author":{"gitId":"ChongWeiJie29"},"content":"        return userPrefs.getPrescriptionListFilePath();","lastModifiedDate":"2023-10-12"},{"lineNumber":75,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":76,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":77,"author":{"gitId":"ChongWeiJie29"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":78,"author":{"gitId":"ChongWeiJie29"},"content":"    public void setPrescriptionListFilePath(Path prescriptionListFilePath) {","lastModifiedDate":"2023-10-12"},{"lineNumber":79,"author":{"gitId":"ChongWeiJie29"},"content":"        requireNonNull(prescriptionListFilePath);","lastModifiedDate":"2023-10-12"},{"lineNumber":80,"author":{"gitId":"ChongWeiJie29"},"content":"        userPrefs.setPrescriptionListFilePath(prescriptionListFilePath);","lastModifiedDate":"2023-10-12"},{"lineNumber":81,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":82,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":83,"author":{"gitId":"ChongWeiJie29"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d PrescriptionList \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-10-12"},{"lineNumber":84,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":85,"author":{"gitId":"ChongWeiJie29"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":86,"author":{"gitId":"ChongWeiJie29"},"content":"    public void setPrescriptionList(ReadOnlyPrescriptionList prescriptionList) {","lastModifiedDate":"2023-10-12"},{"lineNumber":87,"author":{"gitId":"ChongWeiJie29"},"content":"        this.prescriptionList.resetData(prescriptionList);","lastModifiedDate":"2023-10-12"},{"lineNumber":88,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":89,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":90,"author":{"gitId":"ChongWeiJie29"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":91,"author":{"gitId":"ChongWeiJie29"},"content":"    public ReadOnlyPrescriptionList getPrescriptionList() {","lastModifiedDate":"2023-10-12"},{"lineNumber":92,"author":{"gitId":"ChongWeiJie29"},"content":"        return prescriptionList;","lastModifiedDate":"2023-10-12"},{"lineNumber":93,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":94,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":95,"author":{"gitId":"ChongWeiJie29"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":96,"author":{"gitId":"ChongWeiJie29"},"content":"    public boolean hasPrescription(Prescription prescription) {","lastModifiedDate":"2023-10-12"},{"lineNumber":97,"author":{"gitId":"ChongWeiJie29"},"content":"        requireNonNull(prescription);","lastModifiedDate":"2023-10-12"},{"lineNumber":98,"author":{"gitId":"ChongWeiJie29"},"content":"        return prescriptionList.hasPrescription(prescription);","lastModifiedDate":"2023-10-12"},{"lineNumber":99,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":100,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":101,"author":{"gitId":"ChongWeiJie29"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":102,"author":{"gitId":"ChongWeiJie29"},"content":"    public void deletePrescription(Prescription target) {","lastModifiedDate":"2023-10-12"},{"lineNumber":103,"author":{"gitId":"ChongWeiJie29"},"content":"        prescriptionList.removePrescription(target);","lastModifiedDate":"2023-10-12"},{"lineNumber":104,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":105,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":106,"author":{"gitId":"ChongWeiJie29"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":107,"author":{"gitId":"ChongWeiJie29"},"content":"    public void addPrescription(Prescription prescription) {","lastModifiedDate":"2023-10-12"},{"lineNumber":108,"author":{"gitId":"ChongWeiJie29"},"content":"        prescriptionList.addPrescription(prescription);","lastModifiedDate":"2023-10-12"},{"lineNumber":109,"author":{"gitId":"ChongWeiJie29"},"content":"        updateFilteredPrescriptionList(PREDICATE_SHOW_ALL_PRESCRIPTIONS);","lastModifiedDate":"2023-10-12"},{"lineNumber":110,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":111,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":112,"author":{"gitId":"ChongWeiJie29"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":113,"author":{"gitId":"ChongWeiJie29"},"content":"    public void setPrescription(Prescription target, Prescription editedPrescription) {","lastModifiedDate":"2023-10-12"},{"lineNumber":114,"author":{"gitId":"ChongWeiJie29"},"content":"        requireAllNonNull(target, editedPrescription);","lastModifiedDate":"2023-10-12"},{"lineNumber":115,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":116,"author":{"gitId":"ChongWeiJie29"},"content":"        prescriptionList.setPrescription(target, editedPrescription);","lastModifiedDate":"2023-10-12"},{"lineNumber":117,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":118,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":119,"author":{"gitId":"jingyu987"},"content":"    @Override","lastModifiedDate":"2023-10-16"},{"lineNumber":120,"author":{"gitId":"jingyu987"},"content":"    public Prescription getPrescriptionByName(Name prescriptionName) throws CommandException {","lastModifiedDate":"2023-10-16"},{"lineNumber":121,"author":{"gitId":"jingyu987"},"content":"        requireNonNull(prescriptionName);","lastModifiedDate":"2023-10-16"},{"lineNumber":122,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":123,"author":{"gitId":"jingyu987"},"content":"        for (Prescription prescription : prescriptionList.getPrescriptionList()) {","lastModifiedDate":"2023-10-16"},{"lineNumber":124,"author":{"gitId":"jingyu987"},"content":"            if (prescription.getName().equals(prescriptionName)) {","lastModifiedDate":"2023-10-16"},{"lineNumber":125,"author":{"gitId":"jingyu987"},"content":"                return prescription;","lastModifiedDate":"2023-10-16"},{"lineNumber":126,"author":{"gitId":"jingyu987"},"content":"            }","lastModifiedDate":"2023-10-16"},{"lineNumber":127,"author":{"gitId":"jingyu987"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":128,"author":{"gitId":"jingyu987"},"content":"        throw new CommandException(TakePrescriptionCommand.MESSAGE_PRESCRIPTION_NOT_FOUND);","lastModifiedDate":"2023-10-16"},{"lineNumber":129,"author":{"gitId":"jingyu987"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":130,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":131,"author":{"gitId":"jingyu987"},"content":"    @Override","lastModifiedDate":"2023-10-16"},{"lineNumber":132,"author":{"gitId":"jingyu987"},"content":"    public void takePrescription(Name prescriptionName, int dosesToTake) throws CommandException {","lastModifiedDate":"2023-10-16"},{"lineNumber":133,"author":{"gitId":"jingyu987"},"content":"        requireAllNonNull(prescriptionName, dosesToTake);","lastModifiedDate":"2023-10-16"},{"lineNumber":134,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":135,"author":{"gitId":"jingyu987"},"content":"        Prescription prescription \u003d getPrescriptionByName(prescriptionName);","lastModifiedDate":"2023-10-16"},{"lineNumber":136,"author":{"gitId":"jingyu987"},"content":"        ConsumptionCount consumptionCount \u003d prescription.getConsumptionCount();","lastModifiedDate":"2023-10-16"},{"lineNumber":137,"author":{"gitId":"jingyu987"},"content":"        consumptionCount.incrementCount(dosesToTake);","lastModifiedDate":"2023-10-16"},{"lineNumber":138,"author":{"gitId":"jingyu987"},"content":"        prescription.getTotalStock().decrementCount(dosesToTake);","lastModifiedDate":"2023-10-16"},{"lineNumber":139,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":140,"author":{"gitId":"jingyu987"},"content":"        if (Integer.parseInt(consumptionCount.getConsumptionCount())","lastModifiedDate":"2023-10-16"},{"lineNumber":141,"author":{"gitId":"jingyu987"},"content":"                \u003e\u003d Integer.parseInt(prescription.getDosage().fullDosage)) {","lastModifiedDate":"2023-10-16"},{"lineNumber":142,"author":{"gitId":"jingyu987"},"content":"            consumptionCount.setIsCompleted(true);","lastModifiedDate":"2023-10-16"},{"lineNumber":143,"author":{"gitId":"jingyu987"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":144,"author":{"gitId":"jingyu987"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":145,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":146,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":147,"author":{"gitId":"ChongWeiJie29"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Prescription List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-10-12"},{"lineNumber":148,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":149,"author":{"gitId":"ChongWeiJie29"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":150,"author":{"gitId":"ChongWeiJie29"},"content":"     * Returns an unmodifiable view of the list of {@code Prescription} backed by the internal list of","lastModifiedDate":"2023-10-12"},{"lineNumber":151,"author":{"gitId":"ChongWeiJie29"},"content":"     * {@code versionedPrescriptionList}","lastModifiedDate":"2023-10-12"},{"lineNumber":152,"author":{"gitId":"ChongWeiJie29"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":153,"author":{"gitId":"ChongWeiJie29"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":154,"author":{"gitId":"ChongWeiJie29"},"content":"    public ObservableList\u003cPrescription\u003e getFilteredPrescriptionList() {","lastModifiedDate":"2023-10-12"},{"lineNumber":155,"author":{"gitId":"ChongWeiJie29"},"content":"        return filteredPrescriptions;","lastModifiedDate":"2023-10-12"},{"lineNumber":156,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":157,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":158,"author":{"gitId":"ChongWeiJie29"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":159,"author":{"gitId":"ChongWeiJie29"},"content":"    public void updateFilteredPrescriptionList(Predicate\u003cPrescription\u003e predicate) {","lastModifiedDate":"2023-10-12"},{"lineNumber":160,"author":{"gitId":"ChongWeiJie29"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2023-10-12"},{"lineNumber":161,"author":{"gitId":"ChongWeiJie29"},"content":"        filteredPrescriptions.setPredicate(predicate);","lastModifiedDate":"2023-10-12"},{"lineNumber":162,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":163,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":164,"author":{"gitId":"ChongWeiJie29"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":165,"author":{"gitId":"ChongWeiJie29"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-12"},{"lineNumber":166,"author":{"gitId":"ChongWeiJie29"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-12"},{"lineNumber":167,"author":{"gitId":"ChongWeiJie29"},"content":"            return true;","lastModifiedDate":"2023-10-12"},{"lineNumber":168,"author":{"gitId":"ChongWeiJie29"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":169,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":170,"author":{"gitId":"ChongWeiJie29"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-12"},{"lineNumber":171,"author":{"gitId":"ChongWeiJie29"},"content":"        if (!(other instanceof ModelManagerPrescription)) {","lastModifiedDate":"2023-10-12"},{"lineNumber":172,"author":{"gitId":"ChongWeiJie29"},"content":"            return false;","lastModifiedDate":"2023-10-12"},{"lineNumber":173,"author":{"gitId":"ChongWeiJie29"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":174,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":175,"author":{"gitId":"ChongWeiJie29"},"content":"        ModelManagerPrescription otherModelManager \u003d (ModelManagerPrescription) other;","lastModifiedDate":"2023-10-12"},{"lineNumber":176,"author":{"gitId":"ChongWeiJie29"},"content":"        return prescriptionList.equals(otherModelManager.prescriptionList)","lastModifiedDate":"2023-10-12"},{"lineNumber":177,"author":{"gitId":"ChongWeiJie29"},"content":"                \u0026\u0026 userPrefs.equals(otherModelManager.userPrefs)","lastModifiedDate":"2023-10-12"},{"lineNumber":178,"author":{"gitId":"ChongWeiJie29"},"content":"                \u0026\u0026 filteredPrescriptions.equals(otherModelManager.filteredPrescriptions);","lastModifiedDate":"2023-10-12"},{"lineNumber":179,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":180,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":181,"author":{"gitId":"ChongWeiJie29"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"jingyu987":32,"ChongWeiJie29":149}},{"path":"src/main/java/seedu/address/model/ModelPrescription.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ChongWeiJie29"},"content":"package seedu.address.model;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"ChongWeiJie29"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"ChongWeiJie29"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"ChongWeiJie29"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"ChongWeiJie29"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"jingyu987"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-16"},{"lineNumber":9,"author":{"gitId":"jingyu987"},"content":"import seedu.address.model.prescription.Name;","lastModifiedDate":"2023-10-16"},{"lineNumber":10,"author":{"gitId":"ChongWeiJie29"},"content":"import seedu.address.model.prescription.Prescription;","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"ChongWeiJie29"},"content":"/**","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"ChongWeiJie29"},"content":" * The API of the ModelPrescription component.","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"ChongWeiJie29"},"content":" */","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"ChongWeiJie29"},"content":"public interface ModelPrescription {","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"ChongWeiJie29"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"ChongWeiJie29"},"content":"    Predicate\u003cPrescription\u003e PREDICATE_SHOW_ALL_PRESCRIPTIONS \u003d unused -\u003e true;","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"ChongWeiJie29"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":20,"author":{"gitId":"ChongWeiJie29"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"ChongWeiJie29"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":22,"author":{"gitId":"ChongWeiJie29"},"content":"    void setUserPrefs(ReadOnlyUserPrefsPrescription userPrefs);","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":24,"author":{"gitId":"ChongWeiJie29"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":25,"author":{"gitId":"ChongWeiJie29"},"content":"     * Returns the user prefs.","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"ChongWeiJie29"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":27,"author":{"gitId":"ChongWeiJie29"},"content":"    ReadOnlyUserPrefsPrescription getUserPrefs();","lastModifiedDate":"2023-10-12"},{"lineNumber":28,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":29,"author":{"gitId":"ChongWeiJie29"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":30,"author":{"gitId":"ChongWeiJie29"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2023-10-12"},{"lineNumber":31,"author":{"gitId":"ChongWeiJie29"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":32,"author":{"gitId":"ChongWeiJie29"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2023-10-12"},{"lineNumber":33,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":34,"author":{"gitId":"ChongWeiJie29"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":35,"author":{"gitId":"ChongWeiJie29"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2023-10-12"},{"lineNumber":36,"author":{"gitId":"ChongWeiJie29"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":37,"author":{"gitId":"ChongWeiJie29"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2023-10-12"},{"lineNumber":38,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":39,"author":{"gitId":"ChongWeiJie29"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":40,"author":{"gitId":"ChongWeiJie29"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2023-10-12"},{"lineNumber":41,"author":{"gitId":"ChongWeiJie29"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":42,"author":{"gitId":"ChongWeiJie29"},"content":"    Path getPrescriptionListFilePath();","lastModifiedDate":"2023-10-12"},{"lineNumber":43,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":44,"author":{"gitId":"ChongWeiJie29"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":45,"author":{"gitId":"ChongWeiJie29"},"content":"     * Sets the user prefs\u0027 address book file path.","lastModifiedDate":"2023-10-12"},{"lineNumber":46,"author":{"gitId":"ChongWeiJie29"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":47,"author":{"gitId":"ChongWeiJie29"},"content":"    void setPrescriptionListFilePath(Path prescriptionListFilePath);","lastModifiedDate":"2023-10-12"},{"lineNumber":48,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":49,"author":{"gitId":"ChongWeiJie29"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":50,"author":{"gitId":"ChongWeiJie29"},"content":"     * Replaces prescription list data with the data in {@code prescriptionList}.","lastModifiedDate":"2023-10-12"},{"lineNumber":51,"author":{"gitId":"ChongWeiJie29"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":52,"author":{"gitId":"ChongWeiJie29"},"content":"    void setPrescriptionList(ReadOnlyPrescriptionList prescriptionList);","lastModifiedDate":"2023-10-12"},{"lineNumber":53,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":54,"author":{"gitId":"ChongWeiJie29"},"content":"    /** Returns the PrescriptionList */","lastModifiedDate":"2023-10-12"},{"lineNumber":55,"author":{"gitId":"ChongWeiJie29"},"content":"    ReadOnlyPrescriptionList getPrescriptionList();","lastModifiedDate":"2023-10-12"},{"lineNumber":56,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":57,"author":{"gitId":"ChongWeiJie29"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":58,"author":{"gitId":"ChongWeiJie29"},"content":"     * Returns true if a prescription with the same identity as {@code prescription} exists in the prescription list.","lastModifiedDate":"2023-10-12"},{"lineNumber":59,"author":{"gitId":"ChongWeiJie29"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":60,"author":{"gitId":"ChongWeiJie29"},"content":"    boolean hasPrescription(Prescription prescription);","lastModifiedDate":"2023-10-12"},{"lineNumber":61,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":62,"author":{"gitId":"ChongWeiJie29"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":63,"author":{"gitId":"ChongWeiJie29"},"content":"     * Deletes the given prescription.","lastModifiedDate":"2023-10-12"},{"lineNumber":64,"author":{"gitId":"ChongWeiJie29"},"content":"     * The prescription must exist in the prescription list.","lastModifiedDate":"2023-10-12"},{"lineNumber":65,"author":{"gitId":"ChongWeiJie29"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":66,"author":{"gitId":"ChongWeiJie29"},"content":"    void deletePrescription(Prescription target);","lastModifiedDate":"2023-10-12"},{"lineNumber":67,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":68,"author":{"gitId":"ChongWeiJie29"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":69,"author":{"gitId":"ChongWeiJie29"},"content":"     * Adds the given prescription.","lastModifiedDate":"2023-10-12"},{"lineNumber":70,"author":{"gitId":"ChongWeiJie29"},"content":"     * {@code prescription} must not already exist in the prescription list.","lastModifiedDate":"2023-10-12"},{"lineNumber":71,"author":{"gitId":"ChongWeiJie29"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":72,"author":{"gitId":"ChongWeiJie29"},"content":"    void addPrescription(Prescription prescription);","lastModifiedDate":"2023-10-12"},{"lineNumber":73,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":74,"author":{"gitId":"ChongWeiJie29"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":75,"author":{"gitId":"ChongWeiJie29"},"content":"     * Replaces the given prescription {@code target} with {@code editedPrescription}.","lastModifiedDate":"2023-10-12"},{"lineNumber":76,"author":{"gitId":"ChongWeiJie29"},"content":"     * {@code target} must exist in the prescription list.","lastModifiedDate":"2023-10-12"},{"lineNumber":77,"author":{"gitId":"ChongWeiJie29"},"content":"     * The prescription identity of {@code editedPrescription} must not be the same as another","lastModifiedDate":"2023-10-12"},{"lineNumber":78,"author":{"gitId":"ChongWeiJie29"},"content":"     * existing prescription in the prescription list.","lastModifiedDate":"2023-10-12"},{"lineNumber":79,"author":{"gitId":"ChongWeiJie29"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":80,"author":{"gitId":"ChongWeiJie29"},"content":"    void setPrescription(Prescription target, Prescription editedPrescription);","lastModifiedDate":"2023-10-12"},{"lineNumber":81,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":82,"author":{"gitId":"ChongWeiJie29"},"content":"    /** Returns an unmodifiable view of the filtered prescription list */","lastModifiedDate":"2023-10-12"},{"lineNumber":83,"author":{"gitId":"ChongWeiJie29"},"content":"    ObservableList\u003cPrescription\u003e getFilteredPrescriptionList();","lastModifiedDate":"2023-10-12"},{"lineNumber":84,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":85,"author":{"gitId":"jingyu987"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":86,"author":{"gitId":"jingyu987"},"content":"     * Increments the consumption count of {@code prescription} by {@code dosesToTake}.","lastModifiedDate":"2023-10-16"},{"lineNumber":87,"author":{"gitId":"jingyu987"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":88,"author":{"gitId":"jingyu987"},"content":"    void takePrescription(Name prescription, int dosesToTake) throws CommandException;","lastModifiedDate":"2023-10-16"},{"lineNumber":89,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":90,"author":{"gitId":"jingyu987"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":91,"author":{"gitId":"jingyu987"},"content":"     * Returns a prescription with the same name as {@code prescriptionName}","lastModifiedDate":"2023-10-16"},{"lineNumber":92,"author":{"gitId":"jingyu987"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":93,"author":{"gitId":"jingyu987"},"content":"    Prescription getPrescriptionByName(Name prescriptionName) throws CommandException;","lastModifiedDate":"2023-10-16"},{"lineNumber":94,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":95,"author":{"gitId":"ChongWeiJie29"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":96,"author":{"gitId":"ChongWeiJie29"},"content":"     * Updates the filter of the filtered prescription list to filter by the given {@code predicate}.","lastModifiedDate":"2023-10-12"},{"lineNumber":97,"author":{"gitId":"ChongWeiJie29"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2023-10-12"},{"lineNumber":98,"author":{"gitId":"ChongWeiJie29"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":99,"author":{"gitId":"ChongWeiJie29"},"content":"    void updateFilteredPrescriptionList(Predicate\u003cPrescription\u003e predicate);","lastModifiedDate":"2023-10-12"},{"lineNumber":100,"author":{"gitId":"ChongWeiJie29"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"jingyu987":12,"ChongWeiJie29":88}},{"path":"src/main/java/seedu/address/model/PrescriptionList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ChongWeiJie29"},"content":"package seedu.address.model;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"ChongWeiJie29"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"ChongWeiJie29"},"content":"import java.util.List;","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"ChongWeiJie29"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"ChongWeiJie29"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"ChongWeiJie29"},"content":"import seedu.address.model.prescription.Prescription;","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"ChongWeiJie29"},"content":"import seedu.address.model.prescription.UniquePrescriptionList;","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"ChongWeiJie29"},"content":"/**","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"ChongWeiJie29"},"content":" * Wraps all data at the address-book level","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"ChongWeiJie29"},"content":" * Duplicates are not allowed (by .isSamePrescription comparison)","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"ChongWeiJie29"},"content":" */","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"ChongWeiJie29"},"content":"public class PrescriptionList implements ReadOnlyPrescriptionList {","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"ChongWeiJie29"},"content":"    private final UniquePrescriptionList prescriptions;","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":20,"author":{"gitId":"ChongWeiJie29"},"content":"    /*","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"ChongWeiJie29"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2023-10-12"},{"lineNumber":22,"author":{"gitId":"ChongWeiJie29"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"ChongWeiJie29"},"content":"     *","lastModifiedDate":"2023-10-12"},{"lineNumber":24,"author":{"gitId":"ChongWeiJie29"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2023-10-12"},{"lineNumber":25,"author":{"gitId":"ChongWeiJie29"},"content":"     *   among constructors.","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"ChongWeiJie29"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":27,"author":{"gitId":"ChongWeiJie29"},"content":"    {","lastModifiedDate":"2023-10-12"},{"lineNumber":28,"author":{"gitId":"ChongWeiJie29"},"content":"        prescriptions \u003d new UniquePrescriptionList();","lastModifiedDate":"2023-10-12"},{"lineNumber":29,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":30,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":31,"author":{"gitId":"ChongWeiJie29"},"content":"    public PrescriptionList() {}","lastModifiedDate":"2023-10-12"},{"lineNumber":32,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":33,"author":{"gitId":"ChongWeiJie29"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":34,"author":{"gitId":"ChongWeiJie29"},"content":"     * Creates an PrescriptionList using the Prescriptions in the {@code toBeCopied}","lastModifiedDate":"2023-10-12"},{"lineNumber":35,"author":{"gitId":"ChongWeiJie29"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":36,"author":{"gitId":"ChongWeiJie29"},"content":"    public PrescriptionList(ReadOnlyPrescriptionList toBeCopied) {","lastModifiedDate":"2023-10-12"},{"lineNumber":37,"author":{"gitId":"ChongWeiJie29"},"content":"        this();","lastModifiedDate":"2023-10-12"},{"lineNumber":38,"author":{"gitId":"ChongWeiJie29"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2023-10-12"},{"lineNumber":39,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":40,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":41,"author":{"gitId":"ChongWeiJie29"},"content":"    //// list overwrite operations","lastModifiedDate":"2023-10-12"},{"lineNumber":42,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":43,"author":{"gitId":"ChongWeiJie29"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":44,"author":{"gitId":"ChongWeiJie29"},"content":"     * Replaces the contents of the prescription list with {@code prescriptions}.","lastModifiedDate":"2023-10-12"},{"lineNumber":45,"author":{"gitId":"ChongWeiJie29"},"content":"     * {@code prescriptions} must not contain duplicate prescriptions.","lastModifiedDate":"2023-10-12"},{"lineNumber":46,"author":{"gitId":"ChongWeiJie29"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":47,"author":{"gitId":"ChongWeiJie29"},"content":"    public void setPrescriptions(List\u003cPrescription\u003e prescriptions) {","lastModifiedDate":"2023-10-12"},{"lineNumber":48,"author":{"gitId":"ChongWeiJie29"},"content":"        this.prescriptions.setPrescriptions(prescriptions);","lastModifiedDate":"2023-10-12"},{"lineNumber":49,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":50,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":51,"author":{"gitId":"ChongWeiJie29"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":52,"author":{"gitId":"ChongWeiJie29"},"content":"     * Resets the existing data of this {@code PrescriptionList} with {@code newData}.","lastModifiedDate":"2023-10-12"},{"lineNumber":53,"author":{"gitId":"ChongWeiJie29"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":54,"author":{"gitId":"ChongWeiJie29"},"content":"    public void resetData(ReadOnlyPrescriptionList newData) {","lastModifiedDate":"2023-10-12"},{"lineNumber":55,"author":{"gitId":"ChongWeiJie29"},"content":"        requireNonNull(newData);","lastModifiedDate":"2023-10-12"},{"lineNumber":56,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":57,"author":{"gitId":"ChongWeiJie29"},"content":"        setPrescriptions(newData.getPrescriptionList());","lastModifiedDate":"2023-10-12"},{"lineNumber":58,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":59,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":60,"author":{"gitId":"ChongWeiJie29"},"content":"    //// prescription-level operations","lastModifiedDate":"2023-10-12"},{"lineNumber":61,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":62,"author":{"gitId":"ChongWeiJie29"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":63,"author":{"gitId":"ChongWeiJie29"},"content":"     * Returns true if a prescription with the same identity as {@code prescription} exists in the address book.","lastModifiedDate":"2023-10-12"},{"lineNumber":64,"author":{"gitId":"ChongWeiJie29"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":65,"author":{"gitId":"ChongWeiJie29"},"content":"    public boolean hasPrescription(Prescription prescription) {","lastModifiedDate":"2023-10-12"},{"lineNumber":66,"author":{"gitId":"ChongWeiJie29"},"content":"        requireNonNull(prescription);","lastModifiedDate":"2023-10-12"},{"lineNumber":67,"author":{"gitId":"ChongWeiJie29"},"content":"        return prescriptions.contains(prescription);","lastModifiedDate":"2023-10-12"},{"lineNumber":68,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":69,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":70,"author":{"gitId":"ChongWeiJie29"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":71,"author":{"gitId":"ChongWeiJie29"},"content":"     * Adds a prescription to the address book.","lastModifiedDate":"2023-10-12"},{"lineNumber":72,"author":{"gitId":"ChongWeiJie29"},"content":"     * The prescription must not already exist in the address book.","lastModifiedDate":"2023-10-12"},{"lineNumber":73,"author":{"gitId":"ChongWeiJie29"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":74,"author":{"gitId":"ChongWeiJie29"},"content":"    public void addPrescription(Prescription p) {","lastModifiedDate":"2023-10-12"},{"lineNumber":75,"author":{"gitId":"ChongWeiJie29"},"content":"        prescriptions.add(p);","lastModifiedDate":"2023-10-12"},{"lineNumber":76,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":77,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":78,"author":{"gitId":"ChongWeiJie29"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":79,"author":{"gitId":"ChongWeiJie29"},"content":"     * Replaces the given prescription {@code target} in the list with {@code editedPrescription}.","lastModifiedDate":"2023-10-12"},{"lineNumber":80,"author":{"gitId":"ChongWeiJie29"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2023-10-12"},{"lineNumber":81,"author":{"gitId":"ChongWeiJie29"},"content":"     * The prescription identity of {@code editedPrescription} must not be the same as another","lastModifiedDate":"2023-10-12"},{"lineNumber":82,"author":{"gitId":"ChongWeiJie29"},"content":"     * existing prescription in the address book.","lastModifiedDate":"2023-10-12"},{"lineNumber":83,"author":{"gitId":"ChongWeiJie29"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":84,"author":{"gitId":"ChongWeiJie29"},"content":"    public void setPrescription(Prescription target, Prescription editedPrescription) {","lastModifiedDate":"2023-10-12"},{"lineNumber":85,"author":{"gitId":"ChongWeiJie29"},"content":"        requireNonNull(editedPrescription);","lastModifiedDate":"2023-10-12"},{"lineNumber":86,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":87,"author":{"gitId":"ChongWeiJie29"},"content":"        prescriptions.setPrescription(target, editedPrescription);","lastModifiedDate":"2023-10-12"},{"lineNumber":88,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":89,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":90,"author":{"gitId":"ChongWeiJie29"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":91,"author":{"gitId":"ChongWeiJie29"},"content":"     * Removes {@code key} from this {@code PrescriptionList}.","lastModifiedDate":"2023-10-12"},{"lineNumber":92,"author":{"gitId":"ChongWeiJie29"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2023-10-12"},{"lineNumber":93,"author":{"gitId":"ChongWeiJie29"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":94,"author":{"gitId":"ChongWeiJie29"},"content":"    public void removePrescription(Prescription key) {","lastModifiedDate":"2023-10-12"},{"lineNumber":95,"author":{"gitId":"ChongWeiJie29"},"content":"        prescriptions.remove(key);","lastModifiedDate":"2023-10-12"},{"lineNumber":96,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":97,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":98,"author":{"gitId":"ChongWeiJie29"},"content":"    //// util methods","lastModifiedDate":"2023-10-12"},{"lineNumber":99,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":100,"author":{"gitId":"ChongWeiJie29"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":101,"author":{"gitId":"ChongWeiJie29"},"content":"    public String toString() {","lastModifiedDate":"2023-10-12"},{"lineNumber":102,"author":{"gitId":"ChongWeiJie29"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-10-12"},{"lineNumber":103,"author":{"gitId":"ChongWeiJie29"},"content":"                .add(\"prescriptions\", prescriptions)","lastModifiedDate":"2023-10-12"},{"lineNumber":104,"author":{"gitId":"ChongWeiJie29"},"content":"                .toString();","lastModifiedDate":"2023-10-12"},{"lineNumber":105,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":106,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":107,"author":{"gitId":"ChongWeiJie29"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":108,"author":{"gitId":"ChongWeiJie29"},"content":"    public ObservableList\u003cPrescription\u003e getPrescriptionList() {","lastModifiedDate":"2023-10-12"},{"lineNumber":109,"author":{"gitId":"ChongWeiJie29"},"content":"        return prescriptions.asUnmodifiableObservableList();","lastModifiedDate":"2023-10-12"},{"lineNumber":110,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":111,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":112,"author":{"gitId":"ChongWeiJie29"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":113,"author":{"gitId":"ChongWeiJie29"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-12"},{"lineNumber":114,"author":{"gitId":"ChongWeiJie29"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-12"},{"lineNumber":115,"author":{"gitId":"ChongWeiJie29"},"content":"            return true;","lastModifiedDate":"2023-10-12"},{"lineNumber":116,"author":{"gitId":"ChongWeiJie29"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":117,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":118,"author":{"gitId":"ChongWeiJie29"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-12"},{"lineNumber":119,"author":{"gitId":"ChongWeiJie29"},"content":"        if (!(other instanceof PrescriptionList)) {","lastModifiedDate":"2023-10-12"},{"lineNumber":120,"author":{"gitId":"ChongWeiJie29"},"content":"            return false;","lastModifiedDate":"2023-10-12"},{"lineNumber":121,"author":{"gitId":"ChongWeiJie29"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":122,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":123,"author":{"gitId":"ChongWeiJie29"},"content":"        PrescriptionList otherPrescriptionList \u003d (PrescriptionList) other;","lastModifiedDate":"2023-10-12"},{"lineNumber":124,"author":{"gitId":"ChongWeiJie29"},"content":"        return prescriptions.equals(otherPrescriptionList.prescriptions);","lastModifiedDate":"2023-10-12"},{"lineNumber":125,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":126,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":127,"author":{"gitId":"ChongWeiJie29"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":128,"author":{"gitId":"ChongWeiJie29"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-12"},{"lineNumber":129,"author":{"gitId":"ChongWeiJie29"},"content":"        return prescriptions.hashCode();","lastModifiedDate":"2023-10-12"},{"lineNumber":130,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":131,"author":{"gitId":"ChongWeiJie29"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"ChongWeiJie29":131}},{"path":"src/main/java/seedu/address/model/ReadOnlyPrescriptionList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ChongWeiJie29"},"content":"package seedu.address.model;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"ChongWeiJie29"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"ChongWeiJie29"},"content":"import seedu.address.model.prescription.Prescription;","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"ChongWeiJie29"},"content":"/**","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"ChongWeiJie29"},"content":" * Unmodifiable view of an address book","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"ChongWeiJie29"},"content":" */","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"ChongWeiJie29"},"content":"public interface ReadOnlyPrescriptionList {","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"ChongWeiJie29"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"ChongWeiJie29"},"content":"     * Returns an unmodifiable view of the prescriptions list.","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"ChongWeiJie29"},"content":"     * This list will not contain any duplicate prescriptions.","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"ChongWeiJie29"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"ChongWeiJie29"},"content":"    ObservableList\u003cPrescription\u003e getPrescriptionList();","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"ChongWeiJie29"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"ChongWeiJie29":17}},{"path":"src/main/java/seedu/address/model/ReadOnlyUserPrefsPrescription.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ChongWeiJie29"},"content":"package seedu.address.model;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"ChongWeiJie29"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"ChongWeiJie29"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"ChongWeiJie29"},"content":"/**","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"ChongWeiJie29"},"content":" * Unmodifiable view of user prefs.","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"ChongWeiJie29"},"content":" */","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"ChongWeiJie29"},"content":"public interface ReadOnlyUserPrefsPrescription {","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"ChongWeiJie29"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"ChongWeiJie29"},"content":"    Path getPrescriptionListFilePath();","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"ChongWeiJie29"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"ChongWeiJie29":16}},{"path":"src/main/java/seedu/address/model/UserPrefsPrescription.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ChongWeiJie29"},"content":"package seedu.address.model;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"ChongWeiJie29"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"ChongWeiJie29"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"ChongWeiJie29"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"ChongWeiJie29"},"content":"import java.util.Objects;","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"ChongWeiJie29"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"ChongWeiJie29"},"content":"/**","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"ChongWeiJie29"},"content":" * Represents User\u0027s preferences.","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"ChongWeiJie29"},"content":" */","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"ChongWeiJie29"},"content":"public class UserPrefsPrescription implements ReadOnlyUserPrefsPrescription {","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"ChongWeiJie29"},"content":"    private GuiSettings guiSettings \u003d new GuiSettings();","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"ChongWeiJie29"},"content":"    private Path prescriptionListFilePath \u003d Paths.get(\"data\" , \"prescriptionList.json\");","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"ChongWeiJie29"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":20,"author":{"gitId":"ChongWeiJie29"},"content":"     * Creates a {@code UserPrefsPrescriptionPrescription} with default values.","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"ChongWeiJie29"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":22,"author":{"gitId":"ChongWeiJie29"},"content":"    public UserPrefsPrescription() {}","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":24,"author":{"gitId":"ChongWeiJie29"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":25,"author":{"gitId":"ChongWeiJie29"},"content":"     * Creates a {@code UserPrefsPrescription} with the prefs in {@code userPrefs}.","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"ChongWeiJie29"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":27,"author":{"gitId":"ChongWeiJie29"},"content":"    public UserPrefsPrescription(ReadOnlyUserPrefsPrescription userPrefs) {","lastModifiedDate":"2023-10-12"},{"lineNumber":28,"author":{"gitId":"ChongWeiJie29"},"content":"        this();","lastModifiedDate":"2023-10-12"},{"lineNumber":29,"author":{"gitId":"ChongWeiJie29"},"content":"        resetData(userPrefs);","lastModifiedDate":"2023-10-12"},{"lineNumber":30,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":31,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":32,"author":{"gitId":"ChongWeiJie29"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":33,"author":{"gitId":"ChongWeiJie29"},"content":"     * Resets the existing data of this {@code UserPrefsPrescription} with {@code newUserPrefsPrescription}.","lastModifiedDate":"2023-10-12"},{"lineNumber":34,"author":{"gitId":"ChongWeiJie29"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":35,"author":{"gitId":"ChongWeiJie29"},"content":"    public void resetData(ReadOnlyUserPrefsPrescription newUserPrefsPrescription) {","lastModifiedDate":"2023-10-12"},{"lineNumber":36,"author":{"gitId":"ChongWeiJie29"},"content":"        requireNonNull(newUserPrefsPrescription);","lastModifiedDate":"2023-10-12"},{"lineNumber":37,"author":{"gitId":"ChongWeiJie29"},"content":"        setGuiSettings(newUserPrefsPrescription.getGuiSettings());","lastModifiedDate":"2023-10-12"},{"lineNumber":38,"author":{"gitId":"ChongWeiJie29"},"content":"        setPrescriptionListFilePath(newUserPrefsPrescription.getPrescriptionListFilePath());","lastModifiedDate":"2023-10-12"},{"lineNumber":39,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":40,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":41,"author":{"gitId":"ChongWeiJie29"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2023-10-12"},{"lineNumber":42,"author":{"gitId":"ChongWeiJie29"},"content":"        return guiSettings;","lastModifiedDate":"2023-10-12"},{"lineNumber":43,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":44,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":45,"author":{"gitId":"ChongWeiJie29"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2023-10-12"},{"lineNumber":46,"author":{"gitId":"ChongWeiJie29"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2023-10-12"},{"lineNumber":47,"author":{"gitId":"ChongWeiJie29"},"content":"        this.guiSettings \u003d guiSettings;","lastModifiedDate":"2023-10-12"},{"lineNumber":48,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":49,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":50,"author":{"gitId":"ChongWeiJie29"},"content":"    public Path getPrescriptionListFilePath() {","lastModifiedDate":"2023-10-12"},{"lineNumber":51,"author":{"gitId":"ChongWeiJie29"},"content":"        return prescriptionListFilePath;","lastModifiedDate":"2023-10-12"},{"lineNumber":52,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":53,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":54,"author":{"gitId":"ChongWeiJie29"},"content":"    public void setPrescriptionListFilePath(Path prescriptionListFilePath) {","lastModifiedDate":"2023-10-12"},{"lineNumber":55,"author":{"gitId":"ChongWeiJie29"},"content":"        requireNonNull(prescriptionListFilePath);","lastModifiedDate":"2023-10-12"},{"lineNumber":56,"author":{"gitId":"ChongWeiJie29"},"content":"        this.prescriptionListFilePath \u003d prescriptionListFilePath;","lastModifiedDate":"2023-10-12"},{"lineNumber":57,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":58,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":59,"author":{"gitId":"ChongWeiJie29"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":60,"author":{"gitId":"ChongWeiJie29"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-12"},{"lineNumber":61,"author":{"gitId":"ChongWeiJie29"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-12"},{"lineNumber":62,"author":{"gitId":"ChongWeiJie29"},"content":"            return true;","lastModifiedDate":"2023-10-12"},{"lineNumber":63,"author":{"gitId":"ChongWeiJie29"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":64,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":65,"author":{"gitId":"ChongWeiJie29"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-12"},{"lineNumber":66,"author":{"gitId":"ChongWeiJie29"},"content":"        if (!(other instanceof UserPrefsPrescription)) {","lastModifiedDate":"2023-10-12"},{"lineNumber":67,"author":{"gitId":"ChongWeiJie29"},"content":"            return false;","lastModifiedDate":"2023-10-12"},{"lineNumber":68,"author":{"gitId":"ChongWeiJie29"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":69,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":70,"author":{"gitId":"ChongWeiJie29"},"content":"        UserPrefsPrescription otherUserPrefsPrescription \u003d (UserPrefsPrescription) other;","lastModifiedDate":"2023-10-12"},{"lineNumber":71,"author":{"gitId":"ChongWeiJie29"},"content":"        return guiSettings.equals(otherUserPrefsPrescription.guiSettings)","lastModifiedDate":"2023-10-12"},{"lineNumber":72,"author":{"gitId":"ChongWeiJie29"},"content":"                \u0026\u0026 prescriptionListFilePath.equals(otherUserPrefsPrescription.prescriptionListFilePath);","lastModifiedDate":"2023-10-12"},{"lineNumber":73,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":74,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":75,"author":{"gitId":"ChongWeiJie29"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":76,"author":{"gitId":"ChongWeiJie29"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-12"},{"lineNumber":77,"author":{"gitId":"ChongWeiJie29"},"content":"        return Objects.hash(guiSettings, prescriptionListFilePath);","lastModifiedDate":"2023-10-12"},{"lineNumber":78,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":79,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":80,"author":{"gitId":"ChongWeiJie29"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":81,"author":{"gitId":"ChongWeiJie29"},"content":"    public String toString() {","lastModifiedDate":"2023-10-12"},{"lineNumber":82,"author":{"gitId":"ChongWeiJie29"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-10-12"},{"lineNumber":83,"author":{"gitId":"ChongWeiJie29"},"content":"        sb.append(\"Gui Settings : \" + guiSettings);","lastModifiedDate":"2023-10-12"},{"lineNumber":84,"author":{"gitId":"ChongWeiJie29"},"content":"        sb.append(\"\\nLocal data file location : \" + prescriptionListFilePath);","lastModifiedDate":"2023-10-12"},{"lineNumber":85,"author":{"gitId":"ChongWeiJie29"},"content":"        return sb.toString();","lastModifiedDate":"2023-10-12"},{"lineNumber":86,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":87,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":88,"author":{"gitId":"ChongWeiJie29"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"ChongWeiJie29":88}},{"path":"src/main/java/seedu/address/model/prescription/ConsumptionCount.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jingyu987"},"content":"package seedu.address.model.prescription;","lastModifiedDate":"2023-10-15"},{"lineNumber":2,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":3,"author":{"gitId":"jingyu987"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-18"},{"lineNumber":4,"author":{"gitId":"jingyu987"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-10-18"},{"lineNumber":5,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":6,"author":{"gitId":"jingyu987"},"content":"/**","lastModifiedDate":"2023-10-15"},{"lineNumber":7,"author":{"gitId":"jingyu987"},"content":" * Represents a Prescription\u0027s consumption count in the prescription list.","lastModifiedDate":"2023-10-15"},{"lineNumber":8,"author":{"gitId":"jingyu987"},"content":" */","lastModifiedDate":"2023-10-15"},{"lineNumber":9,"author":{"gitId":"jingyu987"},"content":"public class ConsumptionCount {","lastModifiedDate":"2023-10-15"},{"lineNumber":10,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":11,"author":{"gitId":"jingyu987"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-10-18"},{"lineNumber":12,"author":{"gitId":"jingyu987"},"content":"            \"ConsumptionCount should only contain numeric characters, and it should not be blank.\";","lastModifiedDate":"2023-10-18"},{"lineNumber":13,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":14,"author":{"gitId":"jingyu987"},"content":"    public static final String VALIDATION_REGEX \u003d \"[0-9]+\";","lastModifiedDate":"2023-10-18"},{"lineNumber":15,"author":{"gitId":"jingyu987"},"content":"    private String consumptionCount;","lastModifiedDate":"2023-10-15"},{"lineNumber":16,"author":{"gitId":"jingyu987"},"content":"    private Boolean isCompleted;","lastModifiedDate":"2023-10-15"},{"lineNumber":17,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":18,"author":{"gitId":"jingyu987"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":19,"author":{"gitId":"jingyu987"},"content":"     * Constructs a {@code ConsumptionCount object}.","lastModifiedDate":"2023-10-15"},{"lineNumber":20,"author":{"gitId":"jingyu987"},"content":"     *","lastModifiedDate":"2023-10-15"},{"lineNumber":21,"author":{"gitId":"jingyu987"},"content":"     * @param consumptionCount The initial consumption count as a string.","lastModifiedDate":"2023-10-15"},{"lineNumber":22,"author":{"gitId":"jingyu987"},"content":"     * @param isCompleted      A flag indicating if the prescription is completed.","lastModifiedDate":"2023-10-15"},{"lineNumber":23,"author":{"gitId":"jingyu987"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":24,"author":{"gitId":"jingyu987"},"content":"    public ConsumptionCount(String consumptionCount, Boolean isCompleted) {","lastModifiedDate":"2023-10-15"},{"lineNumber":25,"author":{"gitId":"jingyu987"},"content":"        requireNonNull(isCompleted);","lastModifiedDate":"2023-10-18"},{"lineNumber":26,"author":{"gitId":"jingyu987"},"content":"        checkArgument(isValidConsumptionCount(consumptionCount), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-18"},{"lineNumber":27,"author":{"gitId":"jingyu987"},"content":"        this.consumptionCount \u003d consumptionCount;","lastModifiedDate":"2023-10-15"},{"lineNumber":28,"author":{"gitId":"jingyu987"},"content":"        this.isCompleted \u003d isCompleted;","lastModifiedDate":"2023-10-15"},{"lineNumber":29,"author":{"gitId":"jingyu987"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":30,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":31,"author":{"gitId":"jingyu987"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":32,"author":{"gitId":"jingyu987"},"content":"     * Increments the consumption count by the specified amount.","lastModifiedDate":"2023-10-15"},{"lineNumber":33,"author":{"gitId":"jingyu987"},"content":"     *","lastModifiedDate":"2023-10-15"},{"lineNumber":34,"author":{"gitId":"jingyu987"},"content":"     * @param count The amount to increment the consumption count.","lastModifiedDate":"2023-10-15"},{"lineNumber":35,"author":{"gitId":"jingyu987"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":36,"author":{"gitId":"jingyu987"},"content":"    public void incrementCount(int count) {","lastModifiedDate":"2023-10-15"},{"lineNumber":37,"author":{"gitId":"jingyu987"},"content":"        int currentCount \u003d Integer.parseInt(this.consumptionCount);","lastModifiedDate":"2023-10-15"},{"lineNumber":38,"author":{"gitId":"jingyu987"},"content":"        currentCount +\u003d count;","lastModifiedDate":"2023-10-15"},{"lineNumber":39,"author":{"gitId":"jingyu987"},"content":"        this.consumptionCount \u003d Integer.toString(currentCount);","lastModifiedDate":"2023-10-15"},{"lineNumber":40,"author":{"gitId":"jingyu987"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":41,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":42,"author":{"gitId":"jingyu987"},"content":"    public void setIsCompleted(Boolean completed) {","lastModifiedDate":"2023-10-15"},{"lineNumber":43,"author":{"gitId":"jingyu987"},"content":"        this.isCompleted \u003d completed;","lastModifiedDate":"2023-10-15"},{"lineNumber":44,"author":{"gitId":"jingyu987"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":45,"author":{"gitId":"jingyu987"},"content":"    public void setConsumptionCount(String count) {","lastModifiedDate":"2023-10-18"},{"lineNumber":46,"author":{"gitId":"jingyu987"},"content":"        this.consumptionCount \u003d count;","lastModifiedDate":"2023-10-18"},{"lineNumber":47,"author":{"gitId":"jingyu987"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":48,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":49,"author":{"gitId":"jingyu987"},"content":"    public String getConsumptionCount() {","lastModifiedDate":"2023-10-15"},{"lineNumber":50,"author":{"gitId":"jingyu987"},"content":"        return this.consumptionCount;","lastModifiedDate":"2023-10-15"},{"lineNumber":51,"author":{"gitId":"jingyu987"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":52,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":53,"author":{"gitId":"jingyu987"},"content":"    public Boolean getIsCompleted() {","lastModifiedDate":"2023-10-15"},{"lineNumber":54,"author":{"gitId":"jingyu987"},"content":"        return this.isCompleted;","lastModifiedDate":"2023-10-15"},{"lineNumber":55,"author":{"gitId":"jingyu987"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":56,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":57,"author":{"gitId":"jingyu987"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":58,"author":{"gitId":"jingyu987"},"content":"     * Returns true if a given string is a valid dosage.","lastModifiedDate":"2023-10-18"},{"lineNumber":59,"author":{"gitId":"jingyu987"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":60,"author":{"gitId":"jingyu987"},"content":"    public static boolean isValidConsumptionCount(String test) {","lastModifiedDate":"2023-10-18"},{"lineNumber":61,"author":{"gitId":"jingyu987"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-10-18"},{"lineNumber":62,"author":{"gitId":"jingyu987"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":63,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":64,"author":{"gitId":"jingyu987"},"content":"    @Override","lastModifiedDate":"2023-10-15"},{"lineNumber":65,"author":{"gitId":"jingyu987"},"content":"    public String toString() {","lastModifiedDate":"2023-10-15"},{"lineNumber":66,"author":{"gitId":"jingyu987"},"content":"        return consumptionCount;","lastModifiedDate":"2023-10-15"},{"lineNumber":67,"author":{"gitId":"jingyu987"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":68,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":69,"author":{"gitId":"jingyu987"},"content":"    @Override","lastModifiedDate":"2023-10-15"},{"lineNumber":70,"author":{"gitId":"jingyu987"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-15"},{"lineNumber":71,"author":{"gitId":"jingyu987"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-15"},{"lineNumber":72,"author":{"gitId":"jingyu987"},"content":"            return true;","lastModifiedDate":"2023-10-15"},{"lineNumber":73,"author":{"gitId":"jingyu987"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":74,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":75,"author":{"gitId":"jingyu987"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-15"},{"lineNumber":76,"author":{"gitId":"jingyu987"},"content":"        if (!(other instanceof ConsumptionCount)) {","lastModifiedDate":"2023-10-15"},{"lineNumber":77,"author":{"gitId":"jingyu987"},"content":"            return false;","lastModifiedDate":"2023-10-15"},{"lineNumber":78,"author":{"gitId":"jingyu987"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":79,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":80,"author":{"gitId":"jingyu987"},"content":"        ConsumptionCount otherConsumptionCount \u003d (ConsumptionCount) other;","lastModifiedDate":"2023-10-15"},{"lineNumber":81,"author":{"gitId":"jingyu987"},"content":"        return consumptionCount.equals(otherConsumptionCount.consumptionCount);","lastModifiedDate":"2023-10-15"},{"lineNumber":82,"author":{"gitId":"jingyu987"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":83,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":84,"author":{"gitId":"jingyu987"},"content":"    @Override","lastModifiedDate":"2023-10-15"},{"lineNumber":85,"author":{"gitId":"jingyu987"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-15"},{"lineNumber":86,"author":{"gitId":"jingyu987"},"content":"        return consumptionCount.hashCode();","lastModifiedDate":"2023-10-15"},{"lineNumber":87,"author":{"gitId":"jingyu987"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":88,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":89,"author":{"gitId":"jingyu987"},"content":"}","lastModifiedDate":"2023-10-15"}],"authorContributionMap":{"jingyu987":89}},{"path":"src/main/java/seedu/address/model/prescription/Date.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ChongWeiJie29"},"content":"package seedu.address.model.prescription;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"ChongWeiJie29"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"ChongWeiJie29"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"shyanyong"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-10-15"},{"lineNumber":7,"author":{"gitId":"shyanyong"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-10-15"},{"lineNumber":8,"author":{"gitId":"shyanyong"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":9,"author":{"gitId":"ChongWeiJie29"},"content":"/**","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"ChongWeiJie29"},"content":" * Represents a Prescription\u0027s date in the prescription list.","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"ChongWeiJie29"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidDate(String)}","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"ChongWeiJie29"},"content":" */","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"ChongWeiJie29"},"content":"public class Date {","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"ChongWeiJie29"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"jingyu987"},"content":"            \"Dates should be in the dd/mm/yyyy format, and it should not be blank.\";","lastModifiedDate":"2023-10-18"},{"lineNumber":17,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"ChongWeiJie29"},"content":"    /*","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"ChongWeiJie29"},"content":"     * The first character of the date must not be a whitespace,","lastModifiedDate":"2023-10-12"},{"lineNumber":20,"author":{"gitId":"ChongWeiJie29"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"ChongWeiJie29"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":22,"author":{"gitId":"ChongWeiJie29"},"content":"    public static final String VALIDATION_REGEX \u003d \"([0-9]{2})/([0-9]{2})/([0-9]{4})\";","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":24,"author":{"gitId":"ChongWeiJie29"},"content":"    public final String fullDate;","lastModifiedDate":"2023-10-12"},{"lineNumber":25,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"ChongWeiJie29"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":27,"author":{"gitId":"ChongWeiJie29"},"content":"     * Constructs a {@code Date}.","lastModifiedDate":"2023-10-12"},{"lineNumber":28,"author":{"gitId":"ChongWeiJie29"},"content":"     *","lastModifiedDate":"2023-10-12"},{"lineNumber":29,"author":{"gitId":"ChongWeiJie29"},"content":"     * @param date A valid date.","lastModifiedDate":"2023-10-12"},{"lineNumber":30,"author":{"gitId":"ChongWeiJie29"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":31,"author":{"gitId":"ChongWeiJie29"},"content":"    public Date(String date) {","lastModifiedDate":"2023-10-12"},{"lineNumber":32,"author":{"gitId":"ChongWeiJie29"},"content":"        requireNonNull(date);","lastModifiedDate":"2023-10-12"},{"lineNumber":33,"author":{"gitId":"ChongWeiJie29"},"content":"        checkArgument(isValidDate(date), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-12"},{"lineNumber":34,"author":{"gitId":"ChongWeiJie29"},"content":"        fullDate \u003d date;","lastModifiedDate":"2023-10-12"},{"lineNumber":35,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":36,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":37,"author":{"gitId":"shyanyong"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":38,"author":{"gitId":"shyanyong"},"content":"     * Returns the date in LocalDate format.","lastModifiedDate":"2023-10-15"},{"lineNumber":39,"author":{"gitId":"shyanyong"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":40,"author":{"gitId":"shyanyong"},"content":"    public LocalDate getDate() {","lastModifiedDate":"2023-10-15"},{"lineNumber":41,"author":{"gitId":"shyanyong"},"content":"        return LocalDate.parse(fullDate, DateTimeFormatter.ofPattern(\"dd/MM/yyyy\"));","lastModifiedDate":"2023-10-15"},{"lineNumber":42,"author":{"gitId":"shyanyong"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":43,"author":{"gitId":"shyanyong"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":44,"author":{"gitId":"ChongWeiJie29"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":45,"author":{"gitId":"ChongWeiJie29"},"content":"     * Returns true if a given string is a valid date.","lastModifiedDate":"2023-10-12"},{"lineNumber":46,"author":{"gitId":"ChongWeiJie29"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":47,"author":{"gitId":"ChongWeiJie29"},"content":"    public static boolean isValidDate(String test) {","lastModifiedDate":"2023-10-12"},{"lineNumber":48,"author":{"gitId":"ChongWeiJie29"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-10-12"},{"lineNumber":49,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":50,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":51,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":52,"author":{"gitId":"ChongWeiJie29"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":53,"author":{"gitId":"ChongWeiJie29"},"content":"    public String toString() {","lastModifiedDate":"2023-10-12"},{"lineNumber":54,"author":{"gitId":"ChongWeiJie29"},"content":"        return fullDate;","lastModifiedDate":"2023-10-12"},{"lineNumber":55,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":56,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":57,"author":{"gitId":"ChongWeiJie29"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":58,"author":{"gitId":"ChongWeiJie29"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-12"},{"lineNumber":59,"author":{"gitId":"ChongWeiJie29"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-12"},{"lineNumber":60,"author":{"gitId":"ChongWeiJie29"},"content":"            return true;","lastModifiedDate":"2023-10-12"},{"lineNumber":61,"author":{"gitId":"ChongWeiJie29"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":62,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":63,"author":{"gitId":"ChongWeiJie29"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-12"},{"lineNumber":64,"author":{"gitId":"ChongWeiJie29"},"content":"        if (!(other instanceof Date)) {","lastModifiedDate":"2023-10-12"},{"lineNumber":65,"author":{"gitId":"ChongWeiJie29"},"content":"            return false;","lastModifiedDate":"2023-10-12"},{"lineNumber":66,"author":{"gitId":"ChongWeiJie29"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":67,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":68,"author":{"gitId":"ChongWeiJie29"},"content":"        Date otherDate \u003d (Date) other;","lastModifiedDate":"2023-10-12"},{"lineNumber":69,"author":{"gitId":"ChongWeiJie29"},"content":"        return fullDate.equals(otherDate.fullDate);","lastModifiedDate":"2023-10-12"},{"lineNumber":70,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":71,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":72,"author":{"gitId":"ChongWeiJie29"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":73,"author":{"gitId":"ChongWeiJie29"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-12"},{"lineNumber":74,"author":{"gitId":"ChongWeiJie29"},"content":"        return fullDate.hashCode();","lastModifiedDate":"2023-10-12"},{"lineNumber":75,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":76,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":77,"author":{"gitId":"ChongWeiJie29"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"jingyu987":1,"shyanyong":10,"ChongWeiJie29":66}},{"path":"src/main/java/seedu/address/model/prescription/Dosage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ChongWeiJie29"},"content":"package seedu.address.model.prescription;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"ChongWeiJie29"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"ChongWeiJie29"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"ChongWeiJie29"},"content":"/**","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"ChongWeiJie29"},"content":" * Represents a Person\u0027s dosage in the address book.","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"ChongWeiJie29"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidDosage(String)}","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"ChongWeiJie29"},"content":" */","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"ChongWeiJie29"},"content":"public class Dosage {","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"ChongWeiJie29"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"jingyu987"},"content":"            \"Dosages should only contain numeric characters, and it should not be blank.\";","lastModifiedDate":"2023-10-18"},{"lineNumber":14,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"ChongWeiJie29"},"content":"    /*","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"ChongWeiJie29"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"ChongWeiJie29"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"ChongWeiJie29"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"ChongWeiJie29"},"content":"    public static final String VALIDATION_REGEX \u003d \"[0-9]+\";","lastModifiedDate":"2023-10-12"},{"lineNumber":20,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"ChongWeiJie29"},"content":"    public final String fullDosage;","lastModifiedDate":"2023-10-12"},{"lineNumber":22,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"ChongWeiJie29"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":24,"author":{"gitId":"ChongWeiJie29"},"content":"     * Constructs a {@code Dosage}.","lastModifiedDate":"2023-10-12"},{"lineNumber":25,"author":{"gitId":"ChongWeiJie29"},"content":"     *","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"ChongWeiJie29"},"content":"     * @param dosage A valid dosage.","lastModifiedDate":"2023-10-12"},{"lineNumber":27,"author":{"gitId":"ChongWeiJie29"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":28,"author":{"gitId":"ChongWeiJie29"},"content":"    public Dosage(String dosage) {","lastModifiedDate":"2023-10-12"},{"lineNumber":29,"author":{"gitId":"ChongWeiJie29"},"content":"        requireNonNull(dosage);","lastModifiedDate":"2023-10-12"},{"lineNumber":30,"author":{"gitId":"ChongWeiJie29"},"content":"        checkArgument(isValidDosage(dosage), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-12"},{"lineNumber":31,"author":{"gitId":"ChongWeiJie29"},"content":"        fullDosage \u003d dosage;","lastModifiedDate":"2023-10-12"},{"lineNumber":32,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":33,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":34,"author":{"gitId":"ChongWeiJie29"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":35,"author":{"gitId":"ChongWeiJie29"},"content":"     * Returns true if a given string is a valid dosage.","lastModifiedDate":"2023-10-12"},{"lineNumber":36,"author":{"gitId":"ChongWeiJie29"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":37,"author":{"gitId":"ChongWeiJie29"},"content":"    public static boolean isValidDosage(String test) {","lastModifiedDate":"2023-10-12"},{"lineNumber":38,"author":{"gitId":"ChongWeiJie29"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-10-12"},{"lineNumber":39,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":40,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":41,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":42,"author":{"gitId":"ChongWeiJie29"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":43,"author":{"gitId":"ChongWeiJie29"},"content":"    public String toString() {","lastModifiedDate":"2023-10-12"},{"lineNumber":44,"author":{"gitId":"ChongWeiJie29"},"content":"        return fullDosage;","lastModifiedDate":"2023-10-12"},{"lineNumber":45,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":46,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":47,"author":{"gitId":"ChongWeiJie29"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":48,"author":{"gitId":"ChongWeiJie29"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-12"},{"lineNumber":49,"author":{"gitId":"ChongWeiJie29"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-12"},{"lineNumber":50,"author":{"gitId":"ChongWeiJie29"},"content":"            return true;","lastModifiedDate":"2023-10-12"},{"lineNumber":51,"author":{"gitId":"ChongWeiJie29"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":52,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":53,"author":{"gitId":"ChongWeiJie29"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-12"},{"lineNumber":54,"author":{"gitId":"ChongWeiJie29"},"content":"        if (!(other instanceof Dosage)) {","lastModifiedDate":"2023-10-12"},{"lineNumber":55,"author":{"gitId":"ChongWeiJie29"},"content":"            return false;","lastModifiedDate":"2023-10-12"},{"lineNumber":56,"author":{"gitId":"ChongWeiJie29"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":57,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":58,"author":{"gitId":"ChongWeiJie29"},"content":"        Dosage otherDosage \u003d (Dosage) other;","lastModifiedDate":"2023-10-12"},{"lineNumber":59,"author":{"gitId":"ChongWeiJie29"},"content":"        return fullDosage.equals(otherDosage.fullDosage);","lastModifiedDate":"2023-10-12"},{"lineNumber":60,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":61,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":62,"author":{"gitId":"ChongWeiJie29"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":63,"author":{"gitId":"ChongWeiJie29"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-12"},{"lineNumber":64,"author":{"gitId":"ChongWeiJie29"},"content":"        return fullDosage.hashCode();","lastModifiedDate":"2023-10-12"},{"lineNumber":65,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":66,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":67,"author":{"gitId":"ChongWeiJie29"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"jingyu987":1,"ChongWeiJie29":66}},{"path":"src/main/java/seedu/address/model/prescription/Frequency.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ChongWeiJie29"},"content":"package seedu.address.model.prescription;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"ChongWeiJie29"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"ChongWeiJie29"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"ChongWeiJie29"},"content":"/**","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"ChongWeiJie29"},"content":" * Represents a Person\u0027s frequency in the address book.","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"ChongWeiJie29"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidFrequency(String)}","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"ChongWeiJie29"},"content":" */","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"ChongWeiJie29"},"content":"public class Frequency {","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"ChongWeiJie29"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"jingyu987"},"content":"            \"Frequencies should only be one of the following (Daily / Weekly / Monthly), and it should not be blank.\";","lastModifiedDate":"2023-10-18"},{"lineNumber":14,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"ChongWeiJie29"},"content":"    /*","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"ChongWeiJie29"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"ChongWeiJie29"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"ChongWeiJie29"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"RoeReRe"},"content":"    public static final String VALIDATION_REGEX \u003d \"(Daily|Weekly|Monthly)\";","lastModifiedDate":"2023-10-15"},{"lineNumber":20,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"ChongWeiJie29"},"content":"    public final String fullFrequency;","lastModifiedDate":"2023-10-12"},{"lineNumber":22,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"ChongWeiJie29"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":24,"author":{"gitId":"ChongWeiJie29"},"content":"     * Constructs a {@code Frequency}.","lastModifiedDate":"2023-10-12"},{"lineNumber":25,"author":{"gitId":"ChongWeiJie29"},"content":"     *","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"ChongWeiJie29"},"content":"     * @param frequency A valid frequency.","lastModifiedDate":"2023-10-12"},{"lineNumber":27,"author":{"gitId":"ChongWeiJie29"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":28,"author":{"gitId":"ChongWeiJie29"},"content":"    public Frequency(String frequency) {","lastModifiedDate":"2023-10-12"},{"lineNumber":29,"author":{"gitId":"ChongWeiJie29"},"content":"        requireNonNull(frequency);","lastModifiedDate":"2023-10-12"},{"lineNumber":30,"author":{"gitId":"ChongWeiJie29"},"content":"        checkArgument(isValidFrequency(frequency), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-12"},{"lineNumber":31,"author":{"gitId":"ChongWeiJie29"},"content":"        fullFrequency \u003d frequency;","lastModifiedDate":"2023-10-12"},{"lineNumber":32,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":33,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":34,"author":{"gitId":"ChongWeiJie29"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":35,"author":{"gitId":"ChongWeiJie29"},"content":"     * Returns true if a given string is a valid frequency.","lastModifiedDate":"2023-10-12"},{"lineNumber":36,"author":{"gitId":"ChongWeiJie29"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":37,"author":{"gitId":"ChongWeiJie29"},"content":"    public static boolean isValidFrequency(String test) {","lastModifiedDate":"2023-10-12"},{"lineNumber":38,"author":{"gitId":"ChongWeiJie29"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-10-12"},{"lineNumber":39,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":40,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":41,"author":{"gitId":"shyanyong"},"content":"    public String getFrequency() {","lastModifiedDate":"2023-10-15"},{"lineNumber":42,"author":{"gitId":"shyanyong"},"content":"        return fullFrequency;","lastModifiedDate":"2023-10-15"},{"lineNumber":43,"author":{"gitId":"shyanyong"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":44,"author":{"gitId":"shyanyong"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":45,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":46,"author":{"gitId":"ChongWeiJie29"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":47,"author":{"gitId":"ChongWeiJie29"},"content":"    public String toString() {","lastModifiedDate":"2023-10-12"},{"lineNumber":48,"author":{"gitId":"ChongWeiJie29"},"content":"        return fullFrequency;","lastModifiedDate":"2023-10-12"},{"lineNumber":49,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":50,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":51,"author":{"gitId":"ChongWeiJie29"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":52,"author":{"gitId":"ChongWeiJie29"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-12"},{"lineNumber":53,"author":{"gitId":"ChongWeiJie29"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-12"},{"lineNumber":54,"author":{"gitId":"ChongWeiJie29"},"content":"            return true;","lastModifiedDate":"2023-10-12"},{"lineNumber":55,"author":{"gitId":"ChongWeiJie29"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":56,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":57,"author":{"gitId":"ChongWeiJie29"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-12"},{"lineNumber":58,"author":{"gitId":"ChongWeiJie29"},"content":"        if (!(other instanceof Frequency)) {","lastModifiedDate":"2023-10-12"},{"lineNumber":59,"author":{"gitId":"ChongWeiJie29"},"content":"            return false;","lastModifiedDate":"2023-10-12"},{"lineNumber":60,"author":{"gitId":"ChongWeiJie29"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":61,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":62,"author":{"gitId":"ChongWeiJie29"},"content":"        Frequency otherFrequency \u003d (Frequency) other;","lastModifiedDate":"2023-10-12"},{"lineNumber":63,"author":{"gitId":"ChongWeiJie29"},"content":"        return fullFrequency.equals(otherFrequency.fullFrequency);","lastModifiedDate":"2023-10-12"},{"lineNumber":64,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":65,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":66,"author":{"gitId":"ChongWeiJie29"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":67,"author":{"gitId":"ChongWeiJie29"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-12"},{"lineNumber":68,"author":{"gitId":"ChongWeiJie29"},"content":"        return fullFrequency.hashCode();","lastModifiedDate":"2023-10-12"},{"lineNumber":69,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":70,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":71,"author":{"gitId":"ChongWeiJie29"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"jingyu987":1,"shyanyong":4,"ChongWeiJie29":65,"RoeReRe":1}},{"path":"src/main/java/seedu/address/model/prescription/IsTodayPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"shyanyong"},"content":"package seedu.address.model.prescription;","lastModifiedDate":"2023-10-15"},{"lineNumber":2,"author":{"gitId":"shyanyong"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":3,"author":{"gitId":"shyanyong"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-10-15"},{"lineNumber":4,"author":{"gitId":"shyanyong"},"content":"import java.time.temporal.ChronoUnit;","lastModifiedDate":"2023-10-15"},{"lineNumber":5,"author":{"gitId":"shyanyong"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-10-15"},{"lineNumber":6,"author":{"gitId":"shyanyong"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":7,"author":{"gitId":"shyanyong"},"content":"/**","lastModifiedDate":"2023-10-15"},{"lineNumber":8,"author":{"gitId":"shyanyong"},"content":" * Tests that a {@code Prescription}\u0027s {@code Date} is today.","lastModifiedDate":"2023-10-15"},{"lineNumber":9,"author":{"gitId":"shyanyong"},"content":" */","lastModifiedDate":"2023-10-15"},{"lineNumber":10,"author":{"gitId":"shyanyong"},"content":"public class IsTodayPredicate implements Predicate\u003cPrescription\u003e {","lastModifiedDate":"2023-10-15"},{"lineNumber":11,"author":{"gitId":"shyanyong"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":12,"author":{"gitId":"shyanyong"},"content":"    @Override","lastModifiedDate":"2023-10-15"},{"lineNumber":13,"author":{"gitId":"shyanyong"},"content":"    public boolean test(Prescription prescription) {","lastModifiedDate":"2023-10-15"},{"lineNumber":14,"author":{"gitId":"shyanyong"},"content":"        LocalDate today \u003d LocalDate.now();","lastModifiedDate":"2023-10-15"},{"lineNumber":15,"author":{"gitId":"shyanyong"},"content":"        LocalDate startDate \u003d prescription.getStartDate().getDate();","lastModifiedDate":"2023-10-15"},{"lineNumber":16,"author":{"gitId":"shyanyong"},"content":"        LocalDate endDate \u003d prescription.getEndDate().getDate();","lastModifiedDate":"2023-10-15"},{"lineNumber":17,"author":{"gitId":"shyanyong"},"content":"        long daysBetween \u003d ChronoUnit.DAYS.between(startDate, today);","lastModifiedDate":"2023-10-15"},{"lineNumber":18,"author":{"gitId":"shyanyong"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":19,"author":{"gitId":"shyanyong"},"content":"        if (!(today.isAfter(startDate) \u0026\u0026 today.isBefore(endDate))) {","lastModifiedDate":"2023-10-15"},{"lineNumber":20,"author":{"gitId":"shyanyong"},"content":"            return false;","lastModifiedDate":"2023-10-15"},{"lineNumber":21,"author":{"gitId":"shyanyong"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":22,"author":{"gitId":"shyanyong"},"content":"        Frequency frequency \u003d prescription.getFrequency();","lastModifiedDate":"2023-10-15"},{"lineNumber":23,"author":{"gitId":"shyanyong"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":24,"author":{"gitId":"shyanyong"},"content":"        switch (frequency.getFrequency()) {","lastModifiedDate":"2023-10-15"},{"lineNumber":25,"author":{"gitId":"shyanyong"},"content":"        case \"Daily\":","lastModifiedDate":"2023-10-15"},{"lineNumber":26,"author":{"gitId":"shyanyong"},"content":"            return true;","lastModifiedDate":"2023-10-15"},{"lineNumber":27,"author":{"gitId":"shyanyong"},"content":"        case \"Weekly\":","lastModifiedDate":"2023-10-15"},{"lineNumber":28,"author":{"gitId":"shyanyong"},"content":"            return daysBetween % 7 \u003d\u003d 0;","lastModifiedDate":"2023-10-15"},{"lineNumber":29,"author":{"gitId":"shyanyong"},"content":"        case \"Monthly\":","lastModifiedDate":"2023-10-15"},{"lineNumber":30,"author":{"gitId":"shyanyong"},"content":"            return daysBetween % 30 \u003d\u003d 0;","lastModifiedDate":"2023-10-15"},{"lineNumber":31,"author":{"gitId":"shyanyong"},"content":"        default:","lastModifiedDate":"2023-10-15"},{"lineNumber":32,"author":{"gitId":"shyanyong"},"content":"            return false;","lastModifiedDate":"2023-10-15"},{"lineNumber":33,"author":{"gitId":"shyanyong"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":34,"author":{"gitId":"shyanyong"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":35,"author":{"gitId":"shyanyong"},"content":"}","lastModifiedDate":"2023-10-15"}],"authorContributionMap":{"shyanyong":35}},{"path":"src/main/java/seedu/address/model/prescription/Name.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ChongWeiJie29"},"content":"package seedu.address.model.prescription;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"ChongWeiJie29"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"ChongWeiJie29"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"ChongWeiJie29"},"content":"/**","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"ChongWeiJie29"},"content":" * Represents a Person\u0027s name in the address book.","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"ChongWeiJie29"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidName(String)}","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"ChongWeiJie29"},"content":" */","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"ChongWeiJie29"},"content":"public class Name {","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"ChongWeiJie29"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"jingyu987"},"content":"            \"Names should only contain alphanumeric characters and spaces, and it should not be blank.\";","lastModifiedDate":"2023-10-18"},{"lineNumber":14,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"ChongWeiJie29"},"content":"    /*","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"ChongWeiJie29"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"ChongWeiJie29"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"ChongWeiJie29"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"ChongWeiJie29"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2023-10-12"},{"lineNumber":20,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"ChongWeiJie29"},"content":"    public final String fullName;","lastModifiedDate":"2023-10-12"},{"lineNumber":22,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"ChongWeiJie29"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":24,"author":{"gitId":"ChongWeiJie29"},"content":"     * Constructs a {@code Name}.","lastModifiedDate":"2023-10-12"},{"lineNumber":25,"author":{"gitId":"ChongWeiJie29"},"content":"     *","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"ChongWeiJie29"},"content":"     * @param name A valid name.","lastModifiedDate":"2023-10-12"},{"lineNumber":27,"author":{"gitId":"ChongWeiJie29"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":28,"author":{"gitId":"ChongWeiJie29"},"content":"    public Name(String name) {","lastModifiedDate":"2023-10-12"},{"lineNumber":29,"author":{"gitId":"ChongWeiJie29"},"content":"        requireNonNull(name);","lastModifiedDate":"2023-10-12"},{"lineNumber":30,"author":{"gitId":"ChongWeiJie29"},"content":"        checkArgument(isValidName(name), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-12"},{"lineNumber":31,"author":{"gitId":"ChongWeiJie29"},"content":"        fullName \u003d name;","lastModifiedDate":"2023-10-12"},{"lineNumber":32,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":33,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":34,"author":{"gitId":"ChongWeiJie29"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":35,"author":{"gitId":"ChongWeiJie29"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2023-10-12"},{"lineNumber":36,"author":{"gitId":"ChongWeiJie29"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":37,"author":{"gitId":"ChongWeiJie29"},"content":"    public static boolean isValidName(String test) {","lastModifiedDate":"2023-10-12"},{"lineNumber":38,"author":{"gitId":"ChongWeiJie29"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-10-12"},{"lineNumber":39,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":40,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":41,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":42,"author":{"gitId":"ChongWeiJie29"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":43,"author":{"gitId":"ChongWeiJie29"},"content":"    public String toString() {","lastModifiedDate":"2023-10-12"},{"lineNumber":44,"author":{"gitId":"ChongWeiJie29"},"content":"        return fullName;","lastModifiedDate":"2023-10-12"},{"lineNumber":45,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":46,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":47,"author":{"gitId":"ChongWeiJie29"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":48,"author":{"gitId":"ChongWeiJie29"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-12"},{"lineNumber":49,"author":{"gitId":"ChongWeiJie29"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-12"},{"lineNumber":50,"author":{"gitId":"ChongWeiJie29"},"content":"            return true;","lastModifiedDate":"2023-10-12"},{"lineNumber":51,"author":{"gitId":"ChongWeiJie29"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":52,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":53,"author":{"gitId":"ChongWeiJie29"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-12"},{"lineNumber":54,"author":{"gitId":"ChongWeiJie29"},"content":"        if (!(other instanceof Name)) {","lastModifiedDate":"2023-10-12"},{"lineNumber":55,"author":{"gitId":"ChongWeiJie29"},"content":"            return false;","lastModifiedDate":"2023-10-12"},{"lineNumber":56,"author":{"gitId":"ChongWeiJie29"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":57,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":58,"author":{"gitId":"ChongWeiJie29"},"content":"        Name otherName \u003d (Name) other;","lastModifiedDate":"2023-10-12"},{"lineNumber":59,"author":{"gitId":"ChongWeiJie29"},"content":"        return fullName.equals(otherName.fullName);","lastModifiedDate":"2023-10-12"},{"lineNumber":60,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":61,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":62,"author":{"gitId":"ChongWeiJie29"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":63,"author":{"gitId":"ChongWeiJie29"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-12"},{"lineNumber":64,"author":{"gitId":"ChongWeiJie29"},"content":"        return fullName.hashCode();","lastModifiedDate":"2023-10-12"},{"lineNumber":65,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":66,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":67,"author":{"gitId":"ChongWeiJie29"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"jingyu987":1,"ChongWeiJie29":66}},{"path":"src/main/java/seedu/address/model/prescription/NameContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ChongWeiJie29"},"content":"package seedu.address.model.prescription;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"ChongWeiJie29"},"content":"import java.util.List;","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"ChongWeiJie29"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"ChongWeiJie29"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"ChongWeiJie29"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"ChongWeiJie29"},"content":"/**","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"ChongWeiJie29"},"content":" * Tests that a {@code Prescription}\u0027s {@code Name} matches any of the keywords given.","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"ChongWeiJie29"},"content":" */","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"ChongWeiJie29"},"content":"public class NameContainsKeywordsPredicate implements Predicate\u003cPrescription\u003e {","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"ChongWeiJie29"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"ChongWeiJie29"},"content":"    public NameContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"ChongWeiJie29"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"ChongWeiJie29"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":20,"author":{"gitId":"ChongWeiJie29"},"content":"    public boolean test(Prescription prescription) {","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"ChongWeiJie29"},"content":"        return keywords.stream()","lastModifiedDate":"2023-10-12"},{"lineNumber":22,"author":{"gitId":"ChongWeiJie29"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(prescription.getName().fullName, keyword));","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":24,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":25,"author":{"gitId":"ChongWeiJie29"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"ChongWeiJie29"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-12"},{"lineNumber":27,"author":{"gitId":"ChongWeiJie29"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-12"},{"lineNumber":28,"author":{"gitId":"ChongWeiJie29"},"content":"            return true;","lastModifiedDate":"2023-10-12"},{"lineNumber":29,"author":{"gitId":"ChongWeiJie29"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":30,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":31,"author":{"gitId":"ChongWeiJie29"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-12"},{"lineNumber":32,"author":{"gitId":"ChongWeiJie29"},"content":"        if (!(other instanceof NameContainsKeywordsPredicate)) {","lastModifiedDate":"2023-10-12"},{"lineNumber":33,"author":{"gitId":"ChongWeiJie29"},"content":"            return false;","lastModifiedDate":"2023-10-12"},{"lineNumber":34,"author":{"gitId":"ChongWeiJie29"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":35,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":36,"author":{"gitId":"ChongWeiJie29"},"content":"        NameContainsKeywordsPredicate otherNameContainsKeywordsPredicate \u003d (NameContainsKeywordsPredicate) other;","lastModifiedDate":"2023-10-12"},{"lineNumber":37,"author":{"gitId":"ChongWeiJie29"},"content":"        return keywords.equals(otherNameContainsKeywordsPredicate.keywords);","lastModifiedDate":"2023-10-12"},{"lineNumber":38,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":39,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":40,"author":{"gitId":"ChongWeiJie29"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":41,"author":{"gitId":"ChongWeiJie29"},"content":"    public String toString() {","lastModifiedDate":"2023-10-12"},{"lineNumber":42,"author":{"gitId":"ChongWeiJie29"},"content":"        return new ToStringBuilder(this).add(\"keywords\", keywords).toString();","lastModifiedDate":"2023-10-12"},{"lineNumber":43,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":44,"author":{"gitId":"ChongWeiJie29"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"ChongWeiJie29":44}},{"path":"src/main/java/seedu/address/model/prescription/Note.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ChongWeiJie29"},"content":"package seedu.address.model.prescription;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"ChongWeiJie29"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"ChongWeiJie29"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"ChongWeiJie29"},"content":"/**","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"ChongWeiJie29"},"content":" * Represents a Person\u0027s note in the address book.","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"ChongWeiJie29"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidNote(String)}","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"ChongWeiJie29"},"content":" */","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"ChongWeiJie29"},"content":"public class Note {","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"ChongWeiJie29"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"jingyu987"},"content":"            \"Notes should only contain alphanumeric characters and spaces, and it should not be blank.\";","lastModifiedDate":"2023-10-18"},{"lineNumber":14,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"ChongWeiJie29"},"content":"    /*","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"ChongWeiJie29"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"ChongWeiJie29"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"ChongWeiJie29"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"ChongWeiJie29"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2023-10-12"},{"lineNumber":20,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"ChongWeiJie29"},"content":"    public final String fullNote;","lastModifiedDate":"2023-10-12"},{"lineNumber":22,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"ChongWeiJie29"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":24,"author":{"gitId":"ChongWeiJie29"},"content":"     * Constructs a {@code Note}.","lastModifiedDate":"2023-10-12"},{"lineNumber":25,"author":{"gitId":"ChongWeiJie29"},"content":"     *","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"ChongWeiJie29"},"content":"     * @param note A valid note.","lastModifiedDate":"2023-10-12"},{"lineNumber":27,"author":{"gitId":"ChongWeiJie29"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":28,"author":{"gitId":"ChongWeiJie29"},"content":"    public Note(String note) {","lastModifiedDate":"2023-10-12"},{"lineNumber":29,"author":{"gitId":"ChongWeiJie29"},"content":"        requireNonNull(note);","lastModifiedDate":"2023-10-12"},{"lineNumber":30,"author":{"gitId":"ChongWeiJie29"},"content":"        checkArgument(isValidNote(note), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-12"},{"lineNumber":31,"author":{"gitId":"ChongWeiJie29"},"content":"        fullNote \u003d note;","lastModifiedDate":"2023-10-12"},{"lineNumber":32,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":33,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":34,"author":{"gitId":"ChongWeiJie29"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":35,"author":{"gitId":"ChongWeiJie29"},"content":"     * Returns true if a given string is a valid note.","lastModifiedDate":"2023-10-12"},{"lineNumber":36,"author":{"gitId":"ChongWeiJie29"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":37,"author":{"gitId":"ChongWeiJie29"},"content":"    public static boolean isValidNote(String test) {","lastModifiedDate":"2023-10-12"},{"lineNumber":38,"author":{"gitId":"ChongWeiJie29"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-10-12"},{"lineNumber":39,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":40,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":41,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":42,"author":{"gitId":"ChongWeiJie29"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":43,"author":{"gitId":"ChongWeiJie29"},"content":"    public String toString() {","lastModifiedDate":"2023-10-12"},{"lineNumber":44,"author":{"gitId":"ChongWeiJie29"},"content":"        return fullNote;","lastModifiedDate":"2023-10-12"},{"lineNumber":45,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":46,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":47,"author":{"gitId":"ChongWeiJie29"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":48,"author":{"gitId":"ChongWeiJie29"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-12"},{"lineNumber":49,"author":{"gitId":"ChongWeiJie29"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-12"},{"lineNumber":50,"author":{"gitId":"ChongWeiJie29"},"content":"            return true;","lastModifiedDate":"2023-10-12"},{"lineNumber":51,"author":{"gitId":"ChongWeiJie29"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":52,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":53,"author":{"gitId":"ChongWeiJie29"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-12"},{"lineNumber":54,"author":{"gitId":"ChongWeiJie29"},"content":"        if (!(other instanceof Note)) {","lastModifiedDate":"2023-10-12"},{"lineNumber":55,"author":{"gitId":"ChongWeiJie29"},"content":"            return false;","lastModifiedDate":"2023-10-12"},{"lineNumber":56,"author":{"gitId":"ChongWeiJie29"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":57,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":58,"author":{"gitId":"ChongWeiJie29"},"content":"        Note otherNote \u003d (Note) other;","lastModifiedDate":"2023-10-12"},{"lineNumber":59,"author":{"gitId":"ChongWeiJie29"},"content":"        return fullNote.equals(otherNote.fullNote);","lastModifiedDate":"2023-10-12"},{"lineNumber":60,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":61,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":62,"author":{"gitId":"ChongWeiJie29"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":63,"author":{"gitId":"ChongWeiJie29"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-12"},{"lineNumber":64,"author":{"gitId":"ChongWeiJie29"},"content":"        return fullNote.hashCode();","lastModifiedDate":"2023-10-12"},{"lineNumber":65,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":66,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":67,"author":{"gitId":"ChongWeiJie29"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"jingyu987":1,"ChongWeiJie29":66}},{"path":"src/main/java/seedu/address/model/prescription/Prescription.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ChongWeiJie29"},"content":"package seedu.address.model.prescription;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"ChongWeiJie29"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"ChongWeiJie29"},"content":"// import java.util.Collections;","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"ChongWeiJie29"},"content":"// import java.util.HashSet;","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"ChongWeiJie29"},"content":"import java.util.Objects;","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"ChongWeiJie29"},"content":"// import java.util.Set;","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"ChongWeiJie29"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"ChongWeiJie29"},"content":"// import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"ChongWeiJie29"},"content":"/**","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"ChongWeiJie29"},"content":" * Represents a Prescription in the address book.","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"ChongWeiJie29"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"ChongWeiJie29"},"content":" */","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"ChongWeiJie29"},"content":"public class Prescription {","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"ChongWeiJie29"},"content":"    // Identity fields","lastModifiedDate":"2023-10-12"},{"lineNumber":20,"author":{"gitId":"ChongWeiJie29"},"content":"    private final Name name;","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":22,"author":{"gitId":"ChongWeiJie29"},"content":"    // Data fields","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"ChongWeiJie29"},"content":"    private final Dosage dosage;","lastModifiedDate":"2023-10-12"},{"lineNumber":24,"author":{"gitId":"ChongWeiJie29"},"content":"    private final Frequency frequency;","lastModifiedDate":"2023-10-12"},{"lineNumber":25,"author":{"gitId":"ChongWeiJie29"},"content":"    private final Date startDate;","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"ChongWeiJie29"},"content":"    private final Date endDate;","lastModifiedDate":"2023-10-12"},{"lineNumber":27,"author":{"gitId":"ChongWeiJie29"},"content":"    private final Date expiryDate;","lastModifiedDate":"2023-10-12"},{"lineNumber":28,"author":{"gitId":"ChongWeiJie29"},"content":"    private final Stock totalStock;","lastModifiedDate":"2023-10-12"},{"lineNumber":29,"author":{"gitId":"jingyu987"},"content":"    private final ConsumptionCount consumptionCount;","lastModifiedDate":"2023-10-15"},{"lineNumber":30,"author":{"gitId":"ChongWeiJie29"},"content":"    private final Note note;","lastModifiedDate":"2023-10-12"},{"lineNumber":31,"author":{"gitId":"ChongWeiJie29"},"content":"    // private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-10-12"},{"lineNumber":32,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":33,"author":{"gitId":"ChongWeiJie29"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":34,"author":{"gitId":"ChongWeiJie29"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2023-10-12"},{"lineNumber":35,"author":{"gitId":"ChongWeiJie29"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":36,"author":{"gitId":"ChongWeiJie29"},"content":"    public Prescription(Name name, Dosage dosage, Frequency frequency, Date startDate,","lastModifiedDate":"2023-10-12"},{"lineNumber":37,"author":{"gitId":"jingyu987"},"content":"                        Date endDate, Date expiryDate, Stock totalStock, ConsumptionCount consumptionCount,","lastModifiedDate":"2023-10-16"},{"lineNumber":38,"author":{"gitId":"jingyu987"},"content":"                        Note note) {","lastModifiedDate":"2023-10-16"},{"lineNumber":39,"author":{"gitId":"ChongWeiJie29"},"content":"        requireAllNonNull(name);","lastModifiedDate":"2023-10-12"},{"lineNumber":40,"author":{"gitId":"ChongWeiJie29"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-10-12"},{"lineNumber":41,"author":{"gitId":"ChongWeiJie29"},"content":"        this.dosage \u003d dosage;","lastModifiedDate":"2023-10-12"},{"lineNumber":42,"author":{"gitId":"ChongWeiJie29"},"content":"        this.frequency \u003d frequency;","lastModifiedDate":"2023-10-12"},{"lineNumber":43,"author":{"gitId":"ChongWeiJie29"},"content":"        this.startDate \u003d startDate;","lastModifiedDate":"2023-10-12"},{"lineNumber":44,"author":{"gitId":"ChongWeiJie29"},"content":"        this.endDate \u003d endDate;","lastModifiedDate":"2023-10-12"},{"lineNumber":45,"author":{"gitId":"ChongWeiJie29"},"content":"        this.expiryDate \u003d expiryDate;","lastModifiedDate":"2023-10-12"},{"lineNumber":46,"author":{"gitId":"ChongWeiJie29"},"content":"        this.totalStock \u003d totalStock;","lastModifiedDate":"2023-10-12"},{"lineNumber":47,"author":{"gitId":"jingyu987"},"content":"        this.consumptionCount \u003d consumptionCount;","lastModifiedDate":"2023-10-16"},{"lineNumber":48,"author":{"gitId":"ChongWeiJie29"},"content":"        this.note \u003d note;","lastModifiedDate":"2023-10-12"},{"lineNumber":49,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":50,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":51,"author":{"gitId":"ChongWeiJie29"},"content":"    public Name getName() {","lastModifiedDate":"2023-10-12"},{"lineNumber":52,"author":{"gitId":"ChongWeiJie29"},"content":"        return name;","lastModifiedDate":"2023-10-12"},{"lineNumber":53,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":54,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":55,"author":{"gitId":"ChongWeiJie29"},"content":"    public Dosage getDosage() {","lastModifiedDate":"2023-10-12"},{"lineNumber":56,"author":{"gitId":"ChongWeiJie29"},"content":"        return dosage;","lastModifiedDate":"2023-10-12"},{"lineNumber":57,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":58,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":59,"author":{"gitId":"ChongWeiJie29"},"content":"    public Frequency getFrequency() {","lastModifiedDate":"2023-10-12"},{"lineNumber":60,"author":{"gitId":"ChongWeiJie29"},"content":"        return frequency;","lastModifiedDate":"2023-10-12"},{"lineNumber":61,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":62,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":63,"author":{"gitId":"ChongWeiJie29"},"content":"    public Date getStartDate() {","lastModifiedDate":"2023-10-12"},{"lineNumber":64,"author":{"gitId":"ChongWeiJie29"},"content":"        return startDate;","lastModifiedDate":"2023-10-12"},{"lineNumber":65,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":66,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":67,"author":{"gitId":"ChongWeiJie29"},"content":"    public Date getEndDate() {","lastModifiedDate":"2023-10-12"},{"lineNumber":68,"author":{"gitId":"ChongWeiJie29"},"content":"        return endDate;","lastModifiedDate":"2023-10-12"},{"lineNumber":69,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":70,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":71,"author":{"gitId":"ChongWeiJie29"},"content":"    public Date getExpiryDate() {","lastModifiedDate":"2023-10-12"},{"lineNumber":72,"author":{"gitId":"ChongWeiJie29"},"content":"        return expiryDate;","lastModifiedDate":"2023-10-12"},{"lineNumber":73,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":74,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":75,"author":{"gitId":"ChongWeiJie29"},"content":"    public Stock getTotalStock() {","lastModifiedDate":"2023-10-12"},{"lineNumber":76,"author":{"gitId":"ChongWeiJie29"},"content":"        return totalStock;","lastModifiedDate":"2023-10-12"},{"lineNumber":77,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":78,"author":{"gitId":"jingyu987"},"content":"    public ConsumptionCount getConsumptionCount() {","lastModifiedDate":"2023-10-15"},{"lineNumber":79,"author":{"gitId":"jingyu987"},"content":"        return consumptionCount;","lastModifiedDate":"2023-10-15"},{"lineNumber":80,"author":{"gitId":"jingyu987"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":81,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":82,"author":{"gitId":"ChongWeiJie29"},"content":"    public Note getNote() {","lastModifiedDate":"2023-10-12"},{"lineNumber":83,"author":{"gitId":"ChongWeiJie29"},"content":"        return note;","lastModifiedDate":"2023-10-12"},{"lineNumber":84,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":85,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":86,"author":{"gitId":"jingyu987"},"content":"    // /","lastModifiedDate":"2023-10-15"},{"lineNumber":87,"author":{"gitId":"ChongWeiJie29"},"content":"    //  * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2023-10-12"},{"lineNumber":88,"author":{"gitId":"ChongWeiJie29"},"content":"    //  * if modification is attempted.","lastModifiedDate":"2023-10-12"},{"lineNumber":89,"author":{"gitId":"ChongWeiJie29"},"content":"    //  */","lastModifiedDate":"2023-10-12"},{"lineNumber":90,"author":{"gitId":"ChongWeiJie29"},"content":"    // public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2023-10-12"},{"lineNumber":91,"author":{"gitId":"ChongWeiJie29"},"content":"    //     return Collections.unmodifiableSet(tags);","lastModifiedDate":"2023-10-12"},{"lineNumber":92,"author":{"gitId":"ChongWeiJie29"},"content":"    // }","lastModifiedDate":"2023-10-12"},{"lineNumber":93,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":94,"author":{"gitId":"ChongWeiJie29"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":95,"author":{"gitId":"ChongWeiJie29"},"content":"     * Returns true if both prescriptions have the same name.","lastModifiedDate":"2023-10-12"},{"lineNumber":96,"author":{"gitId":"ChongWeiJie29"},"content":"     * This defines a weaker notion of equality between two prescriptions.","lastModifiedDate":"2023-10-12"},{"lineNumber":97,"author":{"gitId":"ChongWeiJie29"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":98,"author":{"gitId":"ChongWeiJie29"},"content":"    public boolean isSamePrescription(Prescription otherPrescription) {","lastModifiedDate":"2023-10-12"},{"lineNumber":99,"author":{"gitId":"ChongWeiJie29"},"content":"        if (otherPrescription \u003d\u003d this) {","lastModifiedDate":"2023-10-12"},{"lineNumber":100,"author":{"gitId":"ChongWeiJie29"},"content":"            return true;","lastModifiedDate":"2023-10-12"},{"lineNumber":101,"author":{"gitId":"ChongWeiJie29"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":102,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":103,"author":{"gitId":"ChongWeiJie29"},"content":"        return otherPrescription !\u003d null","lastModifiedDate":"2023-10-12"},{"lineNumber":104,"author":{"gitId":"ChongWeiJie29"},"content":"                \u0026\u0026 otherPrescription.getName().equals(getName())","lastModifiedDate":"2023-10-12"},{"lineNumber":105,"author":{"gitId":"ChongWeiJie29"},"content":"                \u0026\u0026 otherPrescription.getStartDate().equals(getStartDate());","lastModifiedDate":"2023-10-12"},{"lineNumber":106,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":107,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":108,"author":{"gitId":"ChongWeiJie29"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":109,"author":{"gitId":"ChongWeiJie29"},"content":"     * Returns true if both prescriptions have the same identity and data fields.","lastModifiedDate":"2023-10-12"},{"lineNumber":110,"author":{"gitId":"ChongWeiJie29"},"content":"     * This defines a stronger notion of equality between two prescriptions.","lastModifiedDate":"2023-10-12"},{"lineNumber":111,"author":{"gitId":"ChongWeiJie29"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":112,"author":{"gitId":"ChongWeiJie29"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":113,"author":{"gitId":"ChongWeiJie29"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-12"},{"lineNumber":114,"author":{"gitId":"ChongWeiJie29"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-12"},{"lineNumber":115,"author":{"gitId":"ChongWeiJie29"},"content":"            return true;","lastModifiedDate":"2023-10-12"},{"lineNumber":116,"author":{"gitId":"ChongWeiJie29"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":117,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":118,"author":{"gitId":"ChongWeiJie29"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-12"},{"lineNumber":119,"author":{"gitId":"ChongWeiJie29"},"content":"        if (!(other instanceof Prescription)) {","lastModifiedDate":"2023-10-12"},{"lineNumber":120,"author":{"gitId":"ChongWeiJie29"},"content":"            return false;","lastModifiedDate":"2023-10-12"},{"lineNumber":121,"author":{"gitId":"ChongWeiJie29"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":122,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":123,"author":{"gitId":"ChongWeiJie29"},"content":"        Prescription otherPrescription \u003d (Prescription) other;","lastModifiedDate":"2023-10-12"},{"lineNumber":124,"author":{"gitId":"ChongWeiJie29"},"content":"        return name.equals(otherPrescription.name)","lastModifiedDate":"2023-10-12"},{"lineNumber":125,"author":{"gitId":"ChongWeiJie29"},"content":"                \u0026\u0026 dosage.equals(otherPrescription.dosage)","lastModifiedDate":"2023-10-12"},{"lineNumber":126,"author":{"gitId":"ChongWeiJie29"},"content":"                \u0026\u0026 frequency.equals(otherPrescription.frequency)","lastModifiedDate":"2023-10-12"},{"lineNumber":127,"author":{"gitId":"ChongWeiJie29"},"content":"                \u0026\u0026 startDate.equals(otherPrescription.startDate)","lastModifiedDate":"2023-10-12"},{"lineNumber":128,"author":{"gitId":"ChongWeiJie29"},"content":"                \u0026\u0026 endDate.equals(otherPrescription.endDate)","lastModifiedDate":"2023-10-12"},{"lineNumber":129,"author":{"gitId":"ChongWeiJie29"},"content":"                \u0026\u0026 expiryDate.equals(otherPrescription.expiryDate)","lastModifiedDate":"2023-10-12"},{"lineNumber":130,"author":{"gitId":"ChongWeiJie29"},"content":"                \u0026\u0026 totalStock.equals(otherPrescription.totalStock)","lastModifiedDate":"2023-10-12"},{"lineNumber":131,"author":{"gitId":"jingyu987"},"content":"                \u0026\u0026 consumptionCount.equals(otherPrescription.consumptionCount)","lastModifiedDate":"2023-10-15"},{"lineNumber":132,"author":{"gitId":"ChongWeiJie29"},"content":"                \u0026\u0026 note.equals(otherPrescription.note);","lastModifiedDate":"2023-10-12"},{"lineNumber":133,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":134,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":135,"author":{"gitId":"ChongWeiJie29"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":136,"author":{"gitId":"ChongWeiJie29"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-12"},{"lineNumber":137,"author":{"gitId":"ChongWeiJie29"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2023-10-12"},{"lineNumber":138,"author":{"gitId":"ChongWeiJie29"},"content":"        return Objects.hash(name, dosage, frequency, startDate,","lastModifiedDate":"2023-10-12"},{"lineNumber":139,"author":{"gitId":"jingyu987"},"content":"                endDate, expiryDate, totalStock, consumptionCount, note);","lastModifiedDate":"2023-10-15"},{"lineNumber":140,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":141,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":142,"author":{"gitId":"ChongWeiJie29"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":143,"author":{"gitId":"ChongWeiJie29"},"content":"    public String toString() {","lastModifiedDate":"2023-10-12"},{"lineNumber":144,"author":{"gitId":"ChongWeiJie29"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-10-12"},{"lineNumber":145,"author":{"gitId":"ChongWeiJie29"},"content":"                .add(\"name\", name)","lastModifiedDate":"2023-10-12"},{"lineNumber":146,"author":{"gitId":"ChongWeiJie29"},"content":"                .add(\"dosage\", dosage)","lastModifiedDate":"2023-10-12"},{"lineNumber":147,"author":{"gitId":"ChongWeiJie29"},"content":"                .add(\"frequency\", frequency)","lastModifiedDate":"2023-10-12"},{"lineNumber":148,"author":{"gitId":"ChongWeiJie29"},"content":"                .add(\"startDate\", startDate)","lastModifiedDate":"2023-10-12"},{"lineNumber":149,"author":{"gitId":"ChongWeiJie29"},"content":"                .add(\"endDate\", endDate)","lastModifiedDate":"2023-10-12"},{"lineNumber":150,"author":{"gitId":"ChongWeiJie29"},"content":"                .add(\"expiryDate\", expiryDate)","lastModifiedDate":"2023-10-12"},{"lineNumber":151,"author":{"gitId":"ChongWeiJie29"},"content":"                .add(\"totalStock\", totalStock)","lastModifiedDate":"2023-10-12"},{"lineNumber":152,"author":{"gitId":"jingyu987"},"content":"                .add(\"consumptionCount\", consumptionCount)","lastModifiedDate":"2023-10-15"},{"lineNumber":153,"author":{"gitId":"ChongWeiJie29"},"content":"                .add(\"note\", note)","lastModifiedDate":"2023-10-12"},{"lineNumber":154,"author":{"gitId":"ChongWeiJie29"},"content":"                .toString();","lastModifiedDate":"2023-10-12"},{"lineNumber":155,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":156,"author":{"gitId":"ChongWeiJie29"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"jingyu987":11,"ChongWeiJie29":145}},{"path":"src/main/java/seedu/address/model/prescription/SameNamePredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jingyu987"},"content":"package seedu.address.model.prescription;","lastModifiedDate":"2023-10-16"},{"lineNumber":2,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":3,"author":{"gitId":"jingyu987"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-10-16"},{"lineNumber":4,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":5,"author":{"gitId":"jingyu987"},"content":"/**","lastModifiedDate":"2023-10-16"},{"lineNumber":6,"author":{"gitId":"jingyu987"},"content":" * Tests that a {@code Prescription}\u0027s {@code Date} is today.","lastModifiedDate":"2023-10-16"},{"lineNumber":7,"author":{"gitId":"jingyu987"},"content":" */","lastModifiedDate":"2023-10-16"},{"lineNumber":8,"author":{"gitId":"jingyu987"},"content":"public class SameNamePredicate implements Predicate\u003cPrescription\u003e {","lastModifiedDate":"2023-10-16"},{"lineNumber":9,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":10,"author":{"gitId":"jingyu987"},"content":"    private final Name targetName;","lastModifiedDate":"2023-10-16"},{"lineNumber":11,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":12,"author":{"gitId":"jingyu987"},"content":"    public SameNamePredicate(Name targetName) {","lastModifiedDate":"2023-10-16"},{"lineNumber":13,"author":{"gitId":"jingyu987"},"content":"        this.targetName \u003d targetName;","lastModifiedDate":"2023-10-16"},{"lineNumber":14,"author":{"gitId":"jingyu987"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":15,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":16,"author":{"gitId":"jingyu987"},"content":"    @Override","lastModifiedDate":"2023-10-16"},{"lineNumber":17,"author":{"gitId":"jingyu987"},"content":"    public boolean test(Prescription prescription) {","lastModifiedDate":"2023-10-16"},{"lineNumber":18,"author":{"gitId":"jingyu987"},"content":"        return prescription.getName().equals(targetName);","lastModifiedDate":"2023-10-16"},{"lineNumber":19,"author":{"gitId":"jingyu987"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":20,"author":{"gitId":"jingyu987"},"content":"}","lastModifiedDate":"2023-10-16"}],"authorContributionMap":{"jingyu987":20}},{"path":"src/main/java/seedu/address/model/prescription/Stock.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ChongWeiJie29"},"content":"package seedu.address.model.prescription;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"ChongWeiJie29"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"ChongWeiJie29"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"ChongWeiJie29"},"content":"/**","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"ChongWeiJie29"},"content":" * Represents a Person\u0027s stock in the address book.","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"ChongWeiJie29"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidStock(String)}","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"ChongWeiJie29"},"content":" */","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"ChongWeiJie29"},"content":"public class Stock {","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"ChongWeiJie29"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"jingyu987"},"content":"            \"Stocks should only contain numeric characters, and it should not be blank.\";","lastModifiedDate":"2023-10-18"},{"lineNumber":14,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"ChongWeiJie29"},"content":"    /*","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"ChongWeiJie29"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"ChongWeiJie29"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"ChongWeiJie29"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"ChongWeiJie29"},"content":"    public static final String VALIDATION_REGEX \u003d \"[0-9]+\";","lastModifiedDate":"2023-10-12"},{"lineNumber":20,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"jingyu987"},"content":"    private String fullStock;","lastModifiedDate":"2023-10-16"},{"lineNumber":22,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"ChongWeiJie29"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":24,"author":{"gitId":"ChongWeiJie29"},"content":"     * Constructs a {@code Stock}.","lastModifiedDate":"2023-10-12"},{"lineNumber":25,"author":{"gitId":"ChongWeiJie29"},"content":"     *","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"ChongWeiJie29"},"content":"     * @param stock A valid stock.","lastModifiedDate":"2023-10-12"},{"lineNumber":27,"author":{"gitId":"ChongWeiJie29"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":28,"author":{"gitId":"ChongWeiJie29"},"content":"    public Stock(String stock) {","lastModifiedDate":"2023-10-12"},{"lineNumber":29,"author":{"gitId":"ChongWeiJie29"},"content":"        requireNonNull(stock);","lastModifiedDate":"2023-10-12"},{"lineNumber":30,"author":{"gitId":"ChongWeiJie29"},"content":"        checkArgument(isValidStock(stock), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-12"},{"lineNumber":31,"author":{"gitId":"ChongWeiJie29"},"content":"        fullStock \u003d stock;","lastModifiedDate":"2023-10-12"},{"lineNumber":32,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":33,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":34,"author":{"gitId":"ChongWeiJie29"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":35,"author":{"gitId":"ChongWeiJie29"},"content":"     * Returns true if a given string is a valid stock.","lastModifiedDate":"2023-10-12"},{"lineNumber":36,"author":{"gitId":"ChongWeiJie29"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":37,"author":{"gitId":"ChongWeiJie29"},"content":"    public static boolean isValidStock(String test) {","lastModifiedDate":"2023-10-12"},{"lineNumber":38,"author":{"gitId":"ChongWeiJie29"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-10-12"},{"lineNumber":39,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":40,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":41,"author":{"gitId":"jingyu987"},"content":"    public String getFullStock() {","lastModifiedDate":"2023-10-16"},{"lineNumber":42,"author":{"gitId":"jingyu987"},"content":"        return fullStock;","lastModifiedDate":"2023-10-16"},{"lineNumber":43,"author":{"gitId":"jingyu987"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":44,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":45,"author":{"gitId":"jingyu987"},"content":"    public void setFullStock(String fullStock) {","lastModifiedDate":"2023-10-16"},{"lineNumber":46,"author":{"gitId":"jingyu987"},"content":"        this.fullStock \u003d fullStock;","lastModifiedDate":"2023-10-16"},{"lineNumber":47,"author":{"gitId":"jingyu987"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":48,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":49,"author":{"gitId":"jingyu987"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":50,"author":{"gitId":"jingyu987"},"content":"     * Decrements the count of stock.","lastModifiedDate":"2023-10-16"},{"lineNumber":51,"author":{"gitId":"jingyu987"},"content":"     * @param count The count to decrement by.","lastModifiedDate":"2023-10-16"},{"lineNumber":52,"author":{"gitId":"jingyu987"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":53,"author":{"gitId":"jingyu987"},"content":"    public void decrementCount(int count) {","lastModifiedDate":"2023-10-16"},{"lineNumber":54,"author":{"gitId":"jingyu987"},"content":"        int newStock \u003d Integer.parseInt(this.fullStock) - count;","lastModifiedDate":"2023-10-16"},{"lineNumber":55,"author":{"gitId":"jingyu987"},"content":"        this.fullStock \u003d Integer.toString(newStock);","lastModifiedDate":"2023-10-16"},{"lineNumber":56,"author":{"gitId":"jingyu987"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":57,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":58,"author":{"gitId":"ChongWeiJie29"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":59,"author":{"gitId":"ChongWeiJie29"},"content":"    public String toString() {","lastModifiedDate":"2023-10-12"},{"lineNumber":60,"author":{"gitId":"ChongWeiJie29"},"content":"        return fullStock;","lastModifiedDate":"2023-10-12"},{"lineNumber":61,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":62,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":63,"author":{"gitId":"ChongWeiJie29"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":64,"author":{"gitId":"ChongWeiJie29"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-12"},{"lineNumber":65,"author":{"gitId":"ChongWeiJie29"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-12"},{"lineNumber":66,"author":{"gitId":"ChongWeiJie29"},"content":"            return true;","lastModifiedDate":"2023-10-12"},{"lineNumber":67,"author":{"gitId":"ChongWeiJie29"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":68,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":69,"author":{"gitId":"ChongWeiJie29"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-12"},{"lineNumber":70,"author":{"gitId":"ChongWeiJie29"},"content":"        if (!(other instanceof Stock)) {","lastModifiedDate":"2023-10-12"},{"lineNumber":71,"author":{"gitId":"ChongWeiJie29"},"content":"            return false;","lastModifiedDate":"2023-10-12"},{"lineNumber":72,"author":{"gitId":"ChongWeiJie29"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":73,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":74,"author":{"gitId":"ChongWeiJie29"},"content":"        Stock otherStock \u003d (Stock) other;","lastModifiedDate":"2023-10-12"},{"lineNumber":75,"author":{"gitId":"ChongWeiJie29"},"content":"        return fullStock.equals(otherStock.fullStock);","lastModifiedDate":"2023-10-12"},{"lineNumber":76,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":77,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":78,"author":{"gitId":"ChongWeiJie29"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":79,"author":{"gitId":"ChongWeiJie29"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-12"},{"lineNumber":80,"author":{"gitId":"ChongWeiJie29"},"content":"        return fullStock.hashCode();","lastModifiedDate":"2023-10-12"},{"lineNumber":81,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":82,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":83,"author":{"gitId":"ChongWeiJie29"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"jingyu987":18,"ChongWeiJie29":65}},{"path":"src/main/java/seedu/address/model/prescription/UniquePrescriptionList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ChongWeiJie29"},"content":"package seedu.address.model.prescription;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"ChongWeiJie29"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"ChongWeiJie29"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"ChongWeiJie29"},"content":"import java.util.Iterator;","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"ChongWeiJie29"},"content":"import java.util.List;","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"ChongWeiJie29"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"ChongWeiJie29"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"ChongWeiJie29"},"content":"import seedu.address.model.prescription.exceptions.DuplicatePrescriptionException;","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"ChongWeiJie29"},"content":"import seedu.address.model.prescription.exceptions.PrescriptionNotFoundException;","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"ChongWeiJie29"},"content":"/**","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"ChongWeiJie29"},"content":" * A list of prescriptions that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"ChongWeiJie29"},"content":" * A prescription is considered unique by comparing using","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"ChongWeiJie29"},"content":" * {@code Prescription#isSamePrescription(Prescription)}. As such, adding and updating of","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"ChongWeiJie29"},"content":" * prescriptions uses Prescription#isSamePrescription(Prescription) for equality so as to ensure","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"ChongWeiJie29"},"content":" * that the prescription being added or updated is unique in terms of identity in the","lastModifiedDate":"2023-10-12"},{"lineNumber":20,"author":{"gitId":"ChongWeiJie29"},"content":" * UniquePrescriptionList. However, the removal of a prescription uses Prescription#equals(Object)","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"ChongWeiJie29"},"content":" * so as to ensure that the prescription with exactly the same fields will be removed.","lastModifiedDate":"2023-10-12"},{"lineNumber":22,"author":{"gitId":"ChongWeiJie29"},"content":" *","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"ChongWeiJie29"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2023-10-12"},{"lineNumber":24,"author":{"gitId":"ChongWeiJie29"},"content":" *","lastModifiedDate":"2023-10-12"},{"lineNumber":25,"author":{"gitId":"ChongWeiJie29"},"content":" * @see Prescription#isSamePrescription(Prescription)","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"ChongWeiJie29"},"content":" */","lastModifiedDate":"2023-10-12"},{"lineNumber":27,"author":{"gitId":"ChongWeiJie29"},"content":"public class UniquePrescriptionList implements Iterable\u003cPrescription\u003e {","lastModifiedDate":"2023-10-12"},{"lineNumber":28,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":29,"author":{"gitId":"ChongWeiJie29"},"content":"    private final ObservableList\u003cPrescription\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2023-10-12"},{"lineNumber":30,"author":{"gitId":"ChongWeiJie29"},"content":"    private final ObservableList\u003cPrescription\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2023-10-12"},{"lineNumber":31,"author":{"gitId":"ChongWeiJie29"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2023-10-12"},{"lineNumber":32,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":33,"author":{"gitId":"ChongWeiJie29"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":34,"author":{"gitId":"ChongWeiJie29"},"content":"     * Returns true if the list contains an equivalent prescription as the given argument.","lastModifiedDate":"2023-10-12"},{"lineNumber":35,"author":{"gitId":"ChongWeiJie29"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":36,"author":{"gitId":"ChongWeiJie29"},"content":"    public boolean contains(Prescription toCheck) {","lastModifiedDate":"2023-10-12"},{"lineNumber":37,"author":{"gitId":"ChongWeiJie29"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2023-10-12"},{"lineNumber":38,"author":{"gitId":"ChongWeiJie29"},"content":"        return internalList.stream().anyMatch(toCheck::isSamePrescription);","lastModifiedDate":"2023-10-12"},{"lineNumber":39,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":40,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":41,"author":{"gitId":"ChongWeiJie29"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":42,"author":{"gitId":"ChongWeiJie29"},"content":"     * Adds a prescription to the list.","lastModifiedDate":"2023-10-12"},{"lineNumber":43,"author":{"gitId":"ChongWeiJie29"},"content":"     * The prescription must not already exist in the list.","lastModifiedDate":"2023-10-12"},{"lineNumber":44,"author":{"gitId":"ChongWeiJie29"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":45,"author":{"gitId":"ChongWeiJie29"},"content":"    public void add(Prescription toAdd) {","lastModifiedDate":"2023-10-12"},{"lineNumber":46,"author":{"gitId":"ChongWeiJie29"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2023-10-12"},{"lineNumber":47,"author":{"gitId":"ChongWeiJie29"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2023-10-12"},{"lineNumber":48,"author":{"gitId":"ChongWeiJie29"},"content":"            throw new DuplicatePrescriptionException();","lastModifiedDate":"2023-10-12"},{"lineNumber":49,"author":{"gitId":"ChongWeiJie29"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":50,"author":{"gitId":"ChongWeiJie29"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2023-10-12"},{"lineNumber":51,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":52,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":53,"author":{"gitId":"ChongWeiJie29"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":54,"author":{"gitId":"ChongWeiJie29"},"content":"     * Replaces the prescription {@code target} in the list with {@code editedPrescription}.","lastModifiedDate":"2023-10-12"},{"lineNumber":55,"author":{"gitId":"ChongWeiJie29"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2023-10-12"},{"lineNumber":56,"author":{"gitId":"ChongWeiJie29"},"content":"     * The prescription identity of {@code editedPrescription} must not be the same as","lastModifiedDate":"2023-10-12"},{"lineNumber":57,"author":{"gitId":"ChongWeiJie29"},"content":"     * another existing prescription in the list.","lastModifiedDate":"2023-10-12"},{"lineNumber":58,"author":{"gitId":"ChongWeiJie29"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":59,"author":{"gitId":"ChongWeiJie29"},"content":"    public void setPrescription(Prescription target, Prescription editedPrescription) {","lastModifiedDate":"2023-10-12"},{"lineNumber":60,"author":{"gitId":"ChongWeiJie29"},"content":"        requireAllNonNull(target, editedPrescription);","lastModifiedDate":"2023-10-12"},{"lineNumber":61,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":62,"author":{"gitId":"ChongWeiJie29"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2023-10-12"},{"lineNumber":63,"author":{"gitId":"ChongWeiJie29"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2023-10-12"},{"lineNumber":64,"author":{"gitId":"ChongWeiJie29"},"content":"            throw new PrescriptionNotFoundException();","lastModifiedDate":"2023-10-12"},{"lineNumber":65,"author":{"gitId":"ChongWeiJie29"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":66,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":67,"author":{"gitId":"ChongWeiJie29"},"content":"        if (!target.isSamePrescription(editedPrescription) \u0026\u0026 contains(editedPrescription)) {","lastModifiedDate":"2023-10-12"},{"lineNumber":68,"author":{"gitId":"ChongWeiJie29"},"content":"            throw new DuplicatePrescriptionException();","lastModifiedDate":"2023-10-12"},{"lineNumber":69,"author":{"gitId":"ChongWeiJie29"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":70,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":71,"author":{"gitId":"ChongWeiJie29"},"content":"        internalList.set(index, editedPrescription);","lastModifiedDate":"2023-10-12"},{"lineNumber":72,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":73,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":74,"author":{"gitId":"ChongWeiJie29"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":75,"author":{"gitId":"ChongWeiJie29"},"content":"     * Removes the equivalent prescription from the list.","lastModifiedDate":"2023-10-12"},{"lineNumber":76,"author":{"gitId":"ChongWeiJie29"},"content":"     * The prescription must exist in the list.","lastModifiedDate":"2023-10-12"},{"lineNumber":77,"author":{"gitId":"ChongWeiJie29"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":78,"author":{"gitId":"ChongWeiJie29"},"content":"    public void remove(Prescription toRemove) {","lastModifiedDate":"2023-10-12"},{"lineNumber":79,"author":{"gitId":"ChongWeiJie29"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2023-10-12"},{"lineNumber":80,"author":{"gitId":"ChongWeiJie29"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2023-10-12"},{"lineNumber":81,"author":{"gitId":"ChongWeiJie29"},"content":"            throw new PrescriptionNotFoundException();","lastModifiedDate":"2023-10-12"},{"lineNumber":82,"author":{"gitId":"ChongWeiJie29"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":83,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":84,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":85,"author":{"gitId":"ChongWeiJie29"},"content":"    public void setPrescriptions(UniquePrescriptionList replacement) {","lastModifiedDate":"2023-10-12"},{"lineNumber":86,"author":{"gitId":"ChongWeiJie29"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2023-10-12"},{"lineNumber":87,"author":{"gitId":"ChongWeiJie29"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2023-10-12"},{"lineNumber":88,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":89,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":90,"author":{"gitId":"ChongWeiJie29"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":91,"author":{"gitId":"ChongWeiJie29"},"content":"     * Replaces the contents of this list with {@code prescriptions}.","lastModifiedDate":"2023-10-12"},{"lineNumber":92,"author":{"gitId":"ChongWeiJie29"},"content":"     * {@code prescriptions} must not contain duplicate prescriptions.","lastModifiedDate":"2023-10-12"},{"lineNumber":93,"author":{"gitId":"ChongWeiJie29"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":94,"author":{"gitId":"ChongWeiJie29"},"content":"    public void setPrescriptions(List\u003cPrescription\u003e prescriptions) {","lastModifiedDate":"2023-10-12"},{"lineNumber":95,"author":{"gitId":"ChongWeiJie29"},"content":"        requireAllNonNull(prescriptions);","lastModifiedDate":"2023-10-12"},{"lineNumber":96,"author":{"gitId":"ChongWeiJie29"},"content":"        if (!prescriptionsAreUnique(prescriptions)) {","lastModifiedDate":"2023-10-12"},{"lineNumber":97,"author":{"gitId":"ChongWeiJie29"},"content":"            throw new DuplicatePrescriptionException();","lastModifiedDate":"2023-10-12"},{"lineNumber":98,"author":{"gitId":"ChongWeiJie29"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":99,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":100,"author":{"gitId":"ChongWeiJie29"},"content":"        internalList.setAll(prescriptions);","lastModifiedDate":"2023-10-12"},{"lineNumber":101,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":102,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":103,"author":{"gitId":"ChongWeiJie29"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":104,"author":{"gitId":"ChongWeiJie29"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2023-10-12"},{"lineNumber":105,"author":{"gitId":"ChongWeiJie29"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":106,"author":{"gitId":"ChongWeiJie29"},"content":"    public ObservableList\u003cPrescription\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2023-10-12"},{"lineNumber":107,"author":{"gitId":"ChongWeiJie29"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2023-10-12"},{"lineNumber":108,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":109,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":110,"author":{"gitId":"ChongWeiJie29"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":111,"author":{"gitId":"ChongWeiJie29"},"content":"    public Iterator\u003cPrescription\u003e iterator() {","lastModifiedDate":"2023-10-12"},{"lineNumber":112,"author":{"gitId":"ChongWeiJie29"},"content":"        return internalList.iterator();","lastModifiedDate":"2023-10-12"},{"lineNumber":113,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":114,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":115,"author":{"gitId":"ChongWeiJie29"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":116,"author":{"gitId":"ChongWeiJie29"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-12"},{"lineNumber":117,"author":{"gitId":"ChongWeiJie29"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-12"},{"lineNumber":118,"author":{"gitId":"ChongWeiJie29"},"content":"            return true;","lastModifiedDate":"2023-10-12"},{"lineNumber":119,"author":{"gitId":"ChongWeiJie29"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":120,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":121,"author":{"gitId":"ChongWeiJie29"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-12"},{"lineNumber":122,"author":{"gitId":"ChongWeiJie29"},"content":"        if (!(other instanceof UniquePrescriptionList)) {","lastModifiedDate":"2023-10-12"},{"lineNumber":123,"author":{"gitId":"ChongWeiJie29"},"content":"            return false;","lastModifiedDate":"2023-10-12"},{"lineNumber":124,"author":{"gitId":"ChongWeiJie29"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":125,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":126,"author":{"gitId":"ChongWeiJie29"},"content":"        UniquePrescriptionList otherUniquePrescriptionList \u003d (UniquePrescriptionList) other;","lastModifiedDate":"2023-10-12"},{"lineNumber":127,"author":{"gitId":"ChongWeiJie29"},"content":"        return internalList.equals(otherUniquePrescriptionList.internalList);","lastModifiedDate":"2023-10-12"},{"lineNumber":128,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":129,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":130,"author":{"gitId":"ChongWeiJie29"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":131,"author":{"gitId":"ChongWeiJie29"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-12"},{"lineNumber":132,"author":{"gitId":"ChongWeiJie29"},"content":"        return internalList.hashCode();","lastModifiedDate":"2023-10-12"},{"lineNumber":133,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":134,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":135,"author":{"gitId":"ChongWeiJie29"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":136,"author":{"gitId":"ChongWeiJie29"},"content":"    public String toString() {","lastModifiedDate":"2023-10-12"},{"lineNumber":137,"author":{"gitId":"ChongWeiJie29"},"content":"        return internalList.toString();","lastModifiedDate":"2023-10-12"},{"lineNumber":138,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":139,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":140,"author":{"gitId":"ChongWeiJie29"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":141,"author":{"gitId":"ChongWeiJie29"},"content":"     * Returns true if {@code prescriptions} contains only unique prescriptions.","lastModifiedDate":"2023-10-12"},{"lineNumber":142,"author":{"gitId":"ChongWeiJie29"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":143,"author":{"gitId":"ChongWeiJie29"},"content":"    private boolean prescriptionsAreUnique(List\u003cPrescription\u003e prescriptions) {","lastModifiedDate":"2023-10-12"},{"lineNumber":144,"author":{"gitId":"ChongWeiJie29"},"content":"        for (int i \u003d 0; i \u003c prescriptions.size() - 1; i++) {","lastModifiedDate":"2023-10-12"},{"lineNumber":145,"author":{"gitId":"ChongWeiJie29"},"content":"            for (int j \u003d i + 1; j \u003c prescriptions.size(); j++) {","lastModifiedDate":"2023-10-12"},{"lineNumber":146,"author":{"gitId":"ChongWeiJie29"},"content":"                if (prescriptions.get(i).isSamePrescription(prescriptions.get(j))) {","lastModifiedDate":"2023-10-12"},{"lineNumber":147,"author":{"gitId":"ChongWeiJie29"},"content":"                    return false;","lastModifiedDate":"2023-10-12"},{"lineNumber":148,"author":{"gitId":"ChongWeiJie29"},"content":"                }","lastModifiedDate":"2023-10-12"},{"lineNumber":149,"author":{"gitId":"ChongWeiJie29"},"content":"            }","lastModifiedDate":"2023-10-12"},{"lineNumber":150,"author":{"gitId":"ChongWeiJie29"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":151,"author":{"gitId":"ChongWeiJie29"},"content":"        return true;","lastModifiedDate":"2023-10-12"},{"lineNumber":152,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":153,"author":{"gitId":"ChongWeiJie29"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"ChongWeiJie29":153}},{"path":"src/main/java/seedu/address/model/prescription/exceptions/DuplicatePrescriptionException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ChongWeiJie29"},"content":"package seedu.address.model.prescription.exceptions;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"ChongWeiJie29"},"content":"/**","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"ChongWeiJie29"},"content":" * Signals that the operation will result in duplicate Prescriptions (Prescriptions","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"ChongWeiJie29"},"content":" * are considered duplicates if they have the same identity).","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"ChongWeiJie29"},"content":" */","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"ChongWeiJie29"},"content":"public class DuplicatePrescriptionException extends RuntimeException {","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"ChongWeiJie29"},"content":"    public DuplicatePrescriptionException() {","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"ChongWeiJie29"},"content":"        super(\"Operation would result in duplicate prescriptions\");","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"ChongWeiJie29"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"ChongWeiJie29":11}},{"path":"src/main/java/seedu/address/model/prescription/exceptions/PrescriptionNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ChongWeiJie29"},"content":"package seedu.address.model.prescription.exceptions;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"ChongWeiJie29"},"content":"/**","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"ChongWeiJie29"},"content":" * Signals that the operation is unable to find the specified prescription.","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"ChongWeiJie29"},"content":" */","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"ChongWeiJie29"},"content":"public class PrescriptionNotFoundException extends RuntimeException {}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"ChongWeiJie29":6}},{"path":"src/main/java/seedu/address/model/util/SampleDataUtilPrescription.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ChongWeiJie29"},"content":"package seedu.address.model.util;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"ChongWeiJie29"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"ChongWeiJie29"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"ChongWeiJie29"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"ChongWeiJie29"},"content":"import seedu.address.model.PrescriptionList;","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"ChongWeiJie29"},"content":"import seedu.address.model.ReadOnlyPrescriptionList;","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"jingyu987"},"content":"import seedu.address.model.prescription.ConsumptionCount;","lastModifiedDate":"2023-10-16"},{"lineNumber":10,"author":{"gitId":"ChongWeiJie29"},"content":"import seedu.address.model.prescription.Date;","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"ChongWeiJie29"},"content":"import seedu.address.model.prescription.Dosage;","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"ChongWeiJie29"},"content":"import seedu.address.model.prescription.Frequency;","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"ChongWeiJie29"},"content":"import seedu.address.model.prescription.Name;","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"ChongWeiJie29"},"content":"import seedu.address.model.prescription.Note;","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"ChongWeiJie29"},"content":"import seedu.address.model.prescription.Prescription;","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"ChongWeiJie29"},"content":"import seedu.address.model.prescription.Stock;","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"ChongWeiJie29"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"ChongWeiJie29"},"content":"/**","lastModifiedDate":"2023-10-12"},{"lineNumber":20,"author":{"gitId":"ChongWeiJie29"},"content":" * Contains utility methods for populating {@code PrescriptionList} with sample data.","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"ChongWeiJie29"},"content":" */","lastModifiedDate":"2023-10-12"},{"lineNumber":22,"author":{"gitId":"ChongWeiJie29"},"content":"public class SampleDataUtilPrescription {","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"ChongWeiJie29"},"content":"    public static Prescription[] getSamplePrescriptions() {","lastModifiedDate":"2023-10-12"},{"lineNumber":24,"author":{"gitId":"ChongWeiJie29"},"content":"        return new Prescription[] {","lastModifiedDate":"2023-10-12"},{"lineNumber":25,"author":{"gitId":"ChongWeiJie29"},"content":"            new Prescription(new Name(\"Aspirin\"), new Dosage(\"1\"), new Frequency(\"Daily\"),","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"ChongWeiJie29"},"content":"                            new Date(\"01/08/2023\"), new Date(\"25/12/2023\"), new Date(\"01/12/2024\"),","lastModifiedDate":"2023-10-12"},{"lineNumber":27,"author":{"gitId":"jingyu987"},"content":"                            new Stock(\"100\"), new ConsumptionCount(\"0\", false),","lastModifiedDate":"2023-10-16"},{"lineNumber":28,"author":{"gitId":"jingyu987"},"content":"                            new Note(\"Test note\")),","lastModifiedDate":"2023-10-16"},{"lineNumber":29,"author":{"gitId":"ChongWeiJie29"},"content":"        };","lastModifiedDate":"2023-10-12"},{"lineNumber":30,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":31,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":32,"author":{"gitId":"ChongWeiJie29"},"content":"    public static ReadOnlyPrescriptionList getSamplePrescriptionList() {","lastModifiedDate":"2023-10-12"},{"lineNumber":33,"author":{"gitId":"ChongWeiJie29"},"content":"        PrescriptionList samplePrescriptionList \u003d new PrescriptionList();","lastModifiedDate":"2023-10-12"},{"lineNumber":34,"author":{"gitId":"ChongWeiJie29"},"content":"        for (Prescription samplePrescription : getSamplePrescriptions()) {","lastModifiedDate":"2023-10-12"},{"lineNumber":35,"author":{"gitId":"ChongWeiJie29"},"content":"            samplePrescriptionList.addPrescription(samplePrescription);","lastModifiedDate":"2023-10-12"},{"lineNumber":36,"author":{"gitId":"ChongWeiJie29"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":37,"author":{"gitId":"ChongWeiJie29"},"content":"        return samplePrescriptionList;","lastModifiedDate":"2023-10-12"},{"lineNumber":38,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":39,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":40,"author":{"gitId":"ChongWeiJie29"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":41,"author":{"gitId":"ChongWeiJie29"},"content":"     * Returns a tag set containing the list of strings given.","lastModifiedDate":"2023-10-12"},{"lineNumber":42,"author":{"gitId":"ChongWeiJie29"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":43,"author":{"gitId":"ChongWeiJie29"},"content":"    public static Set\u003cTag\u003e getTagSet(String... strings) {","lastModifiedDate":"2023-10-12"},{"lineNumber":44,"author":{"gitId":"ChongWeiJie29"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2023-10-12"},{"lineNumber":45,"author":{"gitId":"ChongWeiJie29"},"content":"                .map(Tag::new)","lastModifiedDate":"2023-10-12"},{"lineNumber":46,"author":{"gitId":"ChongWeiJie29"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2023-10-12"},{"lineNumber":47,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":48,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":49,"author":{"gitId":"ChongWeiJie29"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"jingyu987":3,"ChongWeiJie29":46}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedPrescription.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ChongWeiJie29"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"ChongWeiJie29"},"content":"// import java.util.ArrayList;","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"ChongWeiJie29"},"content":"// import java.util.HashSet;","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"ChongWeiJie29"},"content":"// import java.util.List;","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"ChongWeiJie29"},"content":"// import java.util.Set;","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"ChongWeiJie29"},"content":"// import java.util.stream.Collectors;","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"ChongWeiJie29"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"ChongWeiJie29"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"ChongWeiJie29"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"jingyu987"},"content":"import seedu.address.model.prescription.ConsumptionCount;","lastModifiedDate":"2023-10-16"},{"lineNumber":14,"author":{"gitId":"ChongWeiJie29"},"content":"import seedu.address.model.prescription.Date;","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"ChongWeiJie29"},"content":"import seedu.address.model.prescription.Dosage;","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"ChongWeiJie29"},"content":"import seedu.address.model.prescription.Frequency;","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"ChongWeiJie29"},"content":"import seedu.address.model.prescription.Name;","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"ChongWeiJie29"},"content":"import seedu.address.model.prescription.Note;","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"ChongWeiJie29"},"content":"import seedu.address.model.prescription.Prescription;","lastModifiedDate":"2023-10-12"},{"lineNumber":20,"author":{"gitId":"ChongWeiJie29"},"content":"import seedu.address.model.prescription.Stock;","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":22,"author":{"gitId":"ChongWeiJie29"},"content":"/**","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"ChongWeiJie29"},"content":" * Jackson-friendly version of {@link Prescription}.","lastModifiedDate":"2023-10-12"},{"lineNumber":24,"author":{"gitId":"ChongWeiJie29"},"content":" */","lastModifiedDate":"2023-10-12"},{"lineNumber":25,"author":{"gitId":"ChongWeiJie29"},"content":"class JsonAdaptedPrescription {","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":27,"author":{"gitId":"ChongWeiJie29"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Prescription\u0027s %s field is missing!\";","lastModifiedDate":"2023-10-12"},{"lineNumber":28,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":29,"author":{"gitId":"ChongWeiJie29"},"content":"    private final String name;","lastModifiedDate":"2023-10-12"},{"lineNumber":30,"author":{"gitId":"ChongWeiJie29"},"content":"    private final String dosage;","lastModifiedDate":"2023-10-12"},{"lineNumber":31,"author":{"gitId":"ChongWeiJie29"},"content":"    private final String frequency;","lastModifiedDate":"2023-10-12"},{"lineNumber":32,"author":{"gitId":"ChongWeiJie29"},"content":"    private final String startDate;","lastModifiedDate":"2023-10-12"},{"lineNumber":33,"author":{"gitId":"ChongWeiJie29"},"content":"    private final String endDate;","lastModifiedDate":"2023-10-12"},{"lineNumber":34,"author":{"gitId":"ChongWeiJie29"},"content":"    private final String expiryDate;","lastModifiedDate":"2023-10-12"},{"lineNumber":35,"author":{"gitId":"ChongWeiJie29"},"content":"    private final String totalStock;","lastModifiedDate":"2023-10-12"},{"lineNumber":36,"author":{"gitId":"jingyu987"},"content":"    private final String consumptionCount;","lastModifiedDate":"2023-10-16"},{"lineNumber":37,"author":{"gitId":"jingyu987"},"content":"    private final Boolean isCompleted;","lastModifiedDate":"2023-10-16"},{"lineNumber":38,"author":{"gitId":"ChongWeiJie29"},"content":"    private final String note;","lastModifiedDate":"2023-10-12"},{"lineNumber":39,"author":{"gitId":"ChongWeiJie29"},"content":"    // private final List\u003cJsonAdaptedTag\u003e tags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-12"},{"lineNumber":40,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":41,"author":{"gitId":"ChongWeiJie29"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":42,"author":{"gitId":"ChongWeiJie29"},"content":"     * Constructs a {@code JsonAdaptedPrescription} with the given prescription details.","lastModifiedDate":"2023-10-12"},{"lineNumber":43,"author":{"gitId":"ChongWeiJie29"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":44,"author":{"gitId":"ChongWeiJie29"},"content":"    @JsonCreator","lastModifiedDate":"2023-10-12"},{"lineNumber":45,"author":{"gitId":"ChongWeiJie29"},"content":"    public JsonAdaptedPrescription(@JsonProperty(\"name\") String name, @JsonProperty(\"dosage\") String dosage,","lastModifiedDate":"2023-10-12"},{"lineNumber":46,"author":{"gitId":"ChongWeiJie29"},"content":"            @JsonProperty(\"frequency\") String frequency, @JsonProperty(\"startDate\") String startDate,","lastModifiedDate":"2023-10-12"},{"lineNumber":47,"author":{"gitId":"ChongWeiJie29"},"content":"            @JsonProperty(\"endDate\") String endDate, @JsonProperty(\"expiryDate\") String expiryDate,","lastModifiedDate":"2023-10-12"},{"lineNumber":48,"author":{"gitId":"jingyu987"},"content":"            @JsonProperty(\"totalStock\") String totalStock, @JsonProperty(\"consumptionCount\") String consumptionCount,","lastModifiedDate":"2023-10-16"},{"lineNumber":49,"author":{"gitId":"jingyu987"},"content":"                                   @JsonProperty(\"isCompleted\") Boolean isCompleted,","lastModifiedDate":"2023-10-16"},{"lineNumber":50,"author":{"gitId":"jingyu987"},"content":"                                   @JsonProperty(\"note\") String note) {","lastModifiedDate":"2023-10-16"},{"lineNumber":51,"author":{"gitId":"ChongWeiJie29"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-10-12"},{"lineNumber":52,"author":{"gitId":"ChongWeiJie29"},"content":"        this.dosage \u003d dosage;","lastModifiedDate":"2023-10-12"},{"lineNumber":53,"author":{"gitId":"ChongWeiJie29"},"content":"        this.frequency \u003d frequency;","lastModifiedDate":"2023-10-12"},{"lineNumber":54,"author":{"gitId":"ChongWeiJie29"},"content":"        this.startDate \u003d startDate;","lastModifiedDate":"2023-10-12"},{"lineNumber":55,"author":{"gitId":"ChongWeiJie29"},"content":"        this.endDate \u003d endDate;","lastModifiedDate":"2023-10-12"},{"lineNumber":56,"author":{"gitId":"ChongWeiJie29"},"content":"        this.expiryDate \u003d expiryDate;","lastModifiedDate":"2023-10-12"},{"lineNumber":57,"author":{"gitId":"ChongWeiJie29"},"content":"        this.totalStock \u003d totalStock;","lastModifiedDate":"2023-10-12"},{"lineNumber":58,"author":{"gitId":"jingyu987"},"content":"        this.consumptionCount \u003d consumptionCount;","lastModifiedDate":"2023-10-16"},{"lineNumber":59,"author":{"gitId":"jingyu987"},"content":"        this.isCompleted \u003d isCompleted;","lastModifiedDate":"2023-10-16"},{"lineNumber":60,"author":{"gitId":"ChongWeiJie29"},"content":"        this.note \u003d note;","lastModifiedDate":"2023-10-12"},{"lineNumber":61,"author":{"gitId":"ChongWeiJie29"},"content":"        // if (tags !\u003d null) {","lastModifiedDate":"2023-10-12"},{"lineNumber":62,"author":{"gitId":"ChongWeiJie29"},"content":"        //     this.tags.addAll(tags);","lastModifiedDate":"2023-10-12"},{"lineNumber":63,"author":{"gitId":"ChongWeiJie29"},"content":"        // }","lastModifiedDate":"2023-10-12"},{"lineNumber":64,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":65,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":66,"author":{"gitId":"ChongWeiJie29"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":67,"author":{"gitId":"ChongWeiJie29"},"content":"     * Converts a given {@code Prescription} into this class for Jackson use.","lastModifiedDate":"2023-10-12"},{"lineNumber":68,"author":{"gitId":"ChongWeiJie29"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":69,"author":{"gitId":"ChongWeiJie29"},"content":"    public JsonAdaptedPrescription(Prescription source) {","lastModifiedDate":"2023-10-12"},{"lineNumber":70,"author":{"gitId":"ChongWeiJie29"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2023-10-12"},{"lineNumber":71,"author":{"gitId":"ChongWeiJie29"},"content":"        dosage \u003d source.getDosage().fullDosage;","lastModifiedDate":"2023-10-12"},{"lineNumber":72,"author":{"gitId":"ChongWeiJie29"},"content":"        frequency \u003d source.getFrequency().fullFrequency;","lastModifiedDate":"2023-10-12"},{"lineNumber":73,"author":{"gitId":"ChongWeiJie29"},"content":"        startDate \u003d source.getStartDate().fullDate;","lastModifiedDate":"2023-10-12"},{"lineNumber":74,"author":{"gitId":"ChongWeiJie29"},"content":"        endDate \u003d source.getEndDate().fullDate;","lastModifiedDate":"2023-10-12"},{"lineNumber":75,"author":{"gitId":"ChongWeiJie29"},"content":"        expiryDate \u003d source.getExpiryDate().fullDate;","lastModifiedDate":"2023-10-12"},{"lineNumber":76,"author":{"gitId":"jingyu987"},"content":"        totalStock \u003d source.getTotalStock().getFullStock();","lastModifiedDate":"2023-10-16"},{"lineNumber":77,"author":{"gitId":"jingyu987"},"content":"        consumptionCount \u003d source.getConsumptionCount().getConsumptionCount();","lastModifiedDate":"2023-10-16"},{"lineNumber":78,"author":{"gitId":"jingyu987"},"content":"        isCompleted \u003d source.getConsumptionCount().getIsCompleted();","lastModifiedDate":"2023-10-16"},{"lineNumber":79,"author":{"gitId":"ChongWeiJie29"},"content":"        note \u003d source.getNote().fullNote;","lastModifiedDate":"2023-10-12"},{"lineNumber":80,"author":{"gitId":"ChongWeiJie29"},"content":"        // tags.addAll(source.getTags().stream()","lastModifiedDate":"2023-10-12"},{"lineNumber":81,"author":{"gitId":"ChongWeiJie29"},"content":"        //         .map(JsonAdaptedTag::new)","lastModifiedDate":"2023-10-12"},{"lineNumber":82,"author":{"gitId":"ChongWeiJie29"},"content":"        //         .collect(Collectors.toList()));","lastModifiedDate":"2023-10-12"},{"lineNumber":83,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":84,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":85,"author":{"gitId":"ChongWeiJie29"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":86,"author":{"gitId":"ChongWeiJie29"},"content":"     * Converts this Jackson-friendly adapted prescription object into the model\u0027s {@code Prescription} object.","lastModifiedDate":"2023-10-12"},{"lineNumber":87,"author":{"gitId":"ChongWeiJie29"},"content":"     *","lastModifiedDate":"2023-10-12"},{"lineNumber":88,"author":{"gitId":"ChongWeiJie29"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted prescription.","lastModifiedDate":"2023-10-12"},{"lineNumber":89,"author":{"gitId":"ChongWeiJie29"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":90,"author":{"gitId":"ChongWeiJie29"},"content":"    public Prescription toModelType() throws IllegalValueException {","lastModifiedDate":"2023-10-12"},{"lineNumber":91,"author":{"gitId":"ChongWeiJie29"},"content":"        // final List\u003cTag\u003e personTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-12"},{"lineNumber":92,"author":{"gitId":"ChongWeiJie29"},"content":"        // for (JsonAdaptedTag tag : tags) {","lastModifiedDate":"2023-10-12"},{"lineNumber":93,"author":{"gitId":"ChongWeiJie29"},"content":"        //     personTags.add(tag.toModelType());","lastModifiedDate":"2023-10-12"},{"lineNumber":94,"author":{"gitId":"ChongWeiJie29"},"content":"        // }","lastModifiedDate":"2023-10-12"},{"lineNumber":95,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":96,"author":{"gitId":"ChongWeiJie29"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2023-10-12"},{"lineNumber":97,"author":{"gitId":"ChongWeiJie29"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2023-10-12"},{"lineNumber":98,"author":{"gitId":"ChongWeiJie29"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":99,"author":{"gitId":"ChongWeiJie29"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2023-10-12"},{"lineNumber":100,"author":{"gitId":"ChongWeiJie29"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-12"},{"lineNumber":101,"author":{"gitId":"ChongWeiJie29"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":102,"author":{"gitId":"ChongWeiJie29"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2023-10-12"},{"lineNumber":103,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":104,"author":{"gitId":"ChongWeiJie29"},"content":"        if (dosage \u003d\u003d null) {","lastModifiedDate":"2023-10-12"},{"lineNumber":105,"author":{"gitId":"ChongWeiJie29"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Dosage.class.getSimpleName()));","lastModifiedDate":"2023-10-12"},{"lineNumber":106,"author":{"gitId":"ChongWeiJie29"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":107,"author":{"gitId":"ChongWeiJie29"},"content":"        if (!Dosage.isValidDosage(dosage)) {","lastModifiedDate":"2023-10-12"},{"lineNumber":108,"author":{"gitId":"ChongWeiJie29"},"content":"            throw new IllegalValueException(Dosage.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-12"},{"lineNumber":109,"author":{"gitId":"ChongWeiJie29"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":110,"author":{"gitId":"ChongWeiJie29"},"content":"        final Dosage modelDosage \u003d new Dosage(dosage);","lastModifiedDate":"2023-10-12"},{"lineNumber":111,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":112,"author":{"gitId":"ChongWeiJie29"},"content":"        if (frequency \u003d\u003d null) {","lastModifiedDate":"2023-10-12"},{"lineNumber":113,"author":{"gitId":"ChongWeiJie29"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2023-10-12"},{"lineNumber":114,"author":{"gitId":"ChongWeiJie29"},"content":"                Frequency.class.getSimpleName()));","lastModifiedDate":"2023-10-12"},{"lineNumber":115,"author":{"gitId":"ChongWeiJie29"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":116,"author":{"gitId":"ChongWeiJie29"},"content":"        if (!Frequency.isValidFrequency(frequency)) {","lastModifiedDate":"2023-10-12"},{"lineNumber":117,"author":{"gitId":"ChongWeiJie29"},"content":"            throw new IllegalValueException(Frequency.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-12"},{"lineNumber":118,"author":{"gitId":"ChongWeiJie29"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":119,"author":{"gitId":"ChongWeiJie29"},"content":"        final Frequency modelFrequency \u003d new Frequency(frequency);","lastModifiedDate":"2023-10-12"},{"lineNumber":120,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":121,"author":{"gitId":"ChongWeiJie29"},"content":"        if (startDate \u003d\u003d null) {","lastModifiedDate":"2023-10-12"},{"lineNumber":122,"author":{"gitId":"ChongWeiJie29"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Date.class.getSimpleName()));","lastModifiedDate":"2023-10-12"},{"lineNumber":123,"author":{"gitId":"ChongWeiJie29"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":124,"author":{"gitId":"ChongWeiJie29"},"content":"        if (!Date.isValidDate(startDate)) {","lastModifiedDate":"2023-10-12"},{"lineNumber":125,"author":{"gitId":"ChongWeiJie29"},"content":"            throw new IllegalValueException(Date.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-12"},{"lineNumber":126,"author":{"gitId":"ChongWeiJie29"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":127,"author":{"gitId":"ChongWeiJie29"},"content":"        final Date modelStartDate \u003d new Date(startDate);","lastModifiedDate":"2023-10-12"},{"lineNumber":128,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":129,"author":{"gitId":"ChongWeiJie29"},"content":"        if (endDate \u003d\u003d null) {","lastModifiedDate":"2023-10-12"},{"lineNumber":130,"author":{"gitId":"ChongWeiJie29"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Date.class.getSimpleName()));","lastModifiedDate":"2023-10-12"},{"lineNumber":131,"author":{"gitId":"ChongWeiJie29"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":132,"author":{"gitId":"RoeReRe"},"content":"        if (!Date.isValidDate(endDate)) {","lastModifiedDate":"2023-10-15"},{"lineNumber":133,"author":{"gitId":"ChongWeiJie29"},"content":"            throw new IllegalValueException(Date.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-12"},{"lineNumber":134,"author":{"gitId":"ChongWeiJie29"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":135,"author":{"gitId":"ChongWeiJie29"},"content":"        final Date modelEndDate \u003d new Date(endDate);","lastModifiedDate":"2023-10-12"},{"lineNumber":136,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":137,"author":{"gitId":"ChongWeiJie29"},"content":"        if (expiryDate \u003d\u003d null) {","lastModifiedDate":"2023-10-12"},{"lineNumber":138,"author":{"gitId":"ChongWeiJie29"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Date.class.getSimpleName()));","lastModifiedDate":"2023-10-12"},{"lineNumber":139,"author":{"gitId":"ChongWeiJie29"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":140,"author":{"gitId":"ChongWeiJie29"},"content":"        if (!Date.isValidDate(expiryDate)) {","lastModifiedDate":"2023-10-12"},{"lineNumber":141,"author":{"gitId":"ChongWeiJie29"},"content":"            throw new IllegalValueException(Date.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-12"},{"lineNumber":142,"author":{"gitId":"ChongWeiJie29"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":143,"author":{"gitId":"ChongWeiJie29"},"content":"        final Date modelExpiryDate \u003d new Date(expiryDate);","lastModifiedDate":"2023-10-12"},{"lineNumber":144,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":145,"author":{"gitId":"ChongWeiJie29"},"content":"        if (totalStock \u003d\u003d null) {","lastModifiedDate":"2023-10-12"},{"lineNumber":146,"author":{"gitId":"ChongWeiJie29"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Stock.class.getSimpleName()));","lastModifiedDate":"2023-10-12"},{"lineNumber":147,"author":{"gitId":"ChongWeiJie29"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":148,"author":{"gitId":"ChongWeiJie29"},"content":"        if (!Stock.isValidStock(totalStock)) {","lastModifiedDate":"2023-10-12"},{"lineNumber":149,"author":{"gitId":"ChongWeiJie29"},"content":"            throw new IllegalValueException(Stock.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-12"},{"lineNumber":150,"author":{"gitId":"ChongWeiJie29"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":151,"author":{"gitId":"ChongWeiJie29"},"content":"        final Stock modelTotalStock \u003d new Stock(totalStock);","lastModifiedDate":"2023-10-12"},{"lineNumber":152,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":153,"author":{"gitId":"jingyu987"},"content":"        if (consumptionCount \u003d\u003d null) {","lastModifiedDate":"2023-10-16"},{"lineNumber":154,"author":{"gitId":"jingyu987"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, \"ConsumptionCount\"));","lastModifiedDate":"2023-10-16"},{"lineNumber":155,"author":{"gitId":"jingyu987"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":156,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":157,"author":{"gitId":"jingyu987"},"content":"        final ConsumptionCount modelConsumptionCount \u003d new ConsumptionCount(consumptionCount, isCompleted);","lastModifiedDate":"2023-10-16"},{"lineNumber":158,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":159,"author":{"gitId":"ChongWeiJie29"},"content":"        if (note \u003d\u003d null) {","lastModifiedDate":"2023-10-12"},{"lineNumber":160,"author":{"gitId":"ChongWeiJie29"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Note.class.getSimpleName()));","lastModifiedDate":"2023-10-12"},{"lineNumber":161,"author":{"gitId":"ChongWeiJie29"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":162,"author":{"gitId":"ChongWeiJie29"},"content":"        if (!Note.isValidNote(note)) {","lastModifiedDate":"2023-10-12"},{"lineNumber":163,"author":{"gitId":"ChongWeiJie29"},"content":"            throw new IllegalValueException(Note.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-12"},{"lineNumber":164,"author":{"gitId":"ChongWeiJie29"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":165,"author":{"gitId":"ChongWeiJie29"},"content":"        final Note modelNote \u003d new Note(note);","lastModifiedDate":"2023-10-12"},{"lineNumber":166,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":167,"author":{"gitId":"ChongWeiJie29"},"content":"        // final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(personTags);","lastModifiedDate":"2023-10-12"},{"lineNumber":168,"author":{"gitId":"ChongWeiJie29"},"content":"        return new Prescription(modelName, modelDosage, modelFrequency, modelStartDate,","lastModifiedDate":"2023-10-12"},{"lineNumber":169,"author":{"gitId":"jingyu987"},"content":"                        modelEndDate, modelExpiryDate, modelTotalStock, modelConsumptionCount, modelNote);","lastModifiedDate":"2023-10-16"},{"lineNumber":170,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":171,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":172,"author":{"gitId":"ChongWeiJie29"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"jingyu987":18,"ChongWeiJie29":153,"RoeReRe":1}},{"path":"src/main/java/seedu/address/storage/JsonPrescriptionListStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ChongWeiJie29"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"ChongWeiJie29"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"ChongWeiJie29"},"content":"import java.io.IOException;","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"ChongWeiJie29"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"ChongWeiJie29"},"content":"import java.util.Optional;","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"ChongWeiJie29"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"ChongWeiJie29"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"ChongWeiJie29"},"content":"import seedu.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"ChongWeiJie29"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"ChongWeiJie29"},"content":"import seedu.address.commons.util.FileUtil;","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"ChongWeiJie29"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"ChongWeiJie29"},"content":"import seedu.address.model.ReadOnlyPrescriptionList;","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"ChongWeiJie29"},"content":"/**","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"ChongWeiJie29"},"content":" * A class to access PrescriptionList data stored as a json file on the hard disk.","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"ChongWeiJie29"},"content":" */","lastModifiedDate":"2023-10-12"},{"lineNumber":20,"author":{"gitId":"ChongWeiJie29"},"content":"public class JsonPrescriptionListStorage implements PrescriptionListStorage {","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":22,"author":{"gitId":"ChongWeiJie29"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonPrescriptionListStorage.class);","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":24,"author":{"gitId":"ChongWeiJie29"},"content":"    private Path filePath;","lastModifiedDate":"2023-10-12"},{"lineNumber":25,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"ChongWeiJie29"},"content":"    public JsonPrescriptionListStorage(Path filePath) {","lastModifiedDate":"2023-10-12"},{"lineNumber":27,"author":{"gitId":"ChongWeiJie29"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-10-12"},{"lineNumber":28,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":29,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":30,"author":{"gitId":"ChongWeiJie29"},"content":"    public Path getPrescriptionListFilePath() {","lastModifiedDate":"2023-10-12"},{"lineNumber":31,"author":{"gitId":"ChongWeiJie29"},"content":"        return filePath;","lastModifiedDate":"2023-10-12"},{"lineNumber":32,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":33,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":34,"author":{"gitId":"ChongWeiJie29"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":35,"author":{"gitId":"ChongWeiJie29"},"content":"    public Optional\u003cReadOnlyPrescriptionList\u003e readPrescriptionList() throws DataLoadingException {","lastModifiedDate":"2023-10-12"},{"lineNumber":36,"author":{"gitId":"ChongWeiJie29"},"content":"        return readPrescriptionList(filePath);","lastModifiedDate":"2023-10-12"},{"lineNumber":37,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":38,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":39,"author":{"gitId":"ChongWeiJie29"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":40,"author":{"gitId":"ChongWeiJie29"},"content":"     * Similar to {@link #readPrescriptionList()}.","lastModifiedDate":"2023-10-12"},{"lineNumber":41,"author":{"gitId":"ChongWeiJie29"},"content":"     *","lastModifiedDate":"2023-10-12"},{"lineNumber":42,"author":{"gitId":"ChongWeiJie29"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2023-10-12"},{"lineNumber":43,"author":{"gitId":"ChongWeiJie29"},"content":"     * @throws DataLoadingException if loading the data from storage failed.","lastModifiedDate":"2023-10-12"},{"lineNumber":44,"author":{"gitId":"ChongWeiJie29"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":45,"author":{"gitId":"ChongWeiJie29"},"content":"    public Optional\u003cReadOnlyPrescriptionList\u003e readPrescriptionList(Path filePath) throws DataLoadingException {","lastModifiedDate":"2023-10-12"},{"lineNumber":46,"author":{"gitId":"ChongWeiJie29"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2023-10-12"},{"lineNumber":47,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":48,"author":{"gitId":"ChongWeiJie29"},"content":"        Optional\u003cJsonSerializablePrescriptionList\u003e jsonPrescriptionList \u003d JsonUtil.readJsonFile(","lastModifiedDate":"2023-10-12"},{"lineNumber":49,"author":{"gitId":"ChongWeiJie29"},"content":"                filePath, JsonSerializablePrescriptionList.class);","lastModifiedDate":"2023-10-12"},{"lineNumber":50,"author":{"gitId":"ChongWeiJie29"},"content":"        if (!jsonPrescriptionList.isPresent()) {","lastModifiedDate":"2023-10-12"},{"lineNumber":51,"author":{"gitId":"ChongWeiJie29"},"content":"            return Optional.empty();","lastModifiedDate":"2023-10-12"},{"lineNumber":52,"author":{"gitId":"ChongWeiJie29"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":53,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":54,"author":{"gitId":"ChongWeiJie29"},"content":"        try {","lastModifiedDate":"2023-10-12"},{"lineNumber":55,"author":{"gitId":"ChongWeiJie29"},"content":"            return Optional.of(jsonPrescriptionList.get().toModelType());","lastModifiedDate":"2023-10-12"},{"lineNumber":56,"author":{"gitId":"ChongWeiJie29"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2023-10-12"},{"lineNumber":57,"author":{"gitId":"ChongWeiJie29"},"content":"            logger.info(\"Illegal values found in \" + filePath + \": \" + ive.getMessage());","lastModifiedDate":"2023-10-12"},{"lineNumber":58,"author":{"gitId":"ChongWeiJie29"},"content":"            throw new DataLoadingException(ive);","lastModifiedDate":"2023-10-12"},{"lineNumber":59,"author":{"gitId":"ChongWeiJie29"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":60,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":61,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":62,"author":{"gitId":"ChongWeiJie29"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":63,"author":{"gitId":"ChongWeiJie29"},"content":"    public void savePrescriptionList(ReadOnlyPrescriptionList prescriptionList) throws IOException {","lastModifiedDate":"2023-10-12"},{"lineNumber":64,"author":{"gitId":"ChongWeiJie29"},"content":"        savePrescriptionList(prescriptionList, filePath);","lastModifiedDate":"2023-10-12"},{"lineNumber":65,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":66,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":67,"author":{"gitId":"ChongWeiJie29"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":68,"author":{"gitId":"ChongWeiJie29"},"content":"     * Similar to {@link #savePrescriptionList(ReadOnlyPrescriptionList)}.","lastModifiedDate":"2023-10-12"},{"lineNumber":69,"author":{"gitId":"ChongWeiJie29"},"content":"     *","lastModifiedDate":"2023-10-12"},{"lineNumber":70,"author":{"gitId":"ChongWeiJie29"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2023-10-12"},{"lineNumber":71,"author":{"gitId":"ChongWeiJie29"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":72,"author":{"gitId":"ChongWeiJie29"},"content":"    public void savePrescriptionList(ReadOnlyPrescriptionList prescriptionList, Path filePath) throws IOException {","lastModifiedDate":"2023-10-12"},{"lineNumber":73,"author":{"gitId":"ChongWeiJie29"},"content":"        requireNonNull(prescriptionList);","lastModifiedDate":"2023-10-12"},{"lineNumber":74,"author":{"gitId":"ChongWeiJie29"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2023-10-12"},{"lineNumber":75,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":76,"author":{"gitId":"ChongWeiJie29"},"content":"        FileUtil.createIfMissing(filePath);","lastModifiedDate":"2023-10-12"},{"lineNumber":77,"author":{"gitId":"ChongWeiJie29"},"content":"        JsonUtil.saveJsonFile(new JsonSerializablePrescriptionList(prescriptionList), filePath);","lastModifiedDate":"2023-10-12"},{"lineNumber":78,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":79,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":80,"author":{"gitId":"ChongWeiJie29"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"ChongWeiJie29":80}},{"path":"src/main/java/seedu/address/storage/JsonSerializablePrescriptionList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ChongWeiJie29"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"ChongWeiJie29"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"ChongWeiJie29"},"content":"import java.util.List;","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"ChongWeiJie29"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"ChongWeiJie29"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"ChongWeiJie29"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"ChongWeiJie29"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"ChongWeiJie29"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"ChongWeiJie29"},"content":"import seedu.address.model.PrescriptionList;","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"ChongWeiJie29"},"content":"import seedu.address.model.ReadOnlyPrescriptionList;","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"ChongWeiJie29"},"content":"import seedu.address.model.prescription.Prescription;","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"ChongWeiJie29"},"content":"/**","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"ChongWeiJie29"},"content":" * An Immutable PrescriptionList that is serializable to JSON format.","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"ChongWeiJie29"},"content":" */","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"ChongWeiJie29"},"content":"@JsonRootName(value \u003d \"prescriptionlist\")","lastModifiedDate":"2023-10-12"},{"lineNumber":20,"author":{"gitId":"ChongWeiJie29"},"content":"class JsonSerializablePrescriptionList {","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":22,"author":{"gitId":"ChongWeiJie29"},"content":"    public static final String MESSAGE_DUPLICATE_PRESCRIPTION \u003d \"Prescriptions list \"","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"ChongWeiJie29"},"content":"        + \"contains duplicate prescription(s).\";","lastModifiedDate":"2023-10-12"},{"lineNumber":24,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":25,"author":{"gitId":"ChongWeiJie29"},"content":"    private final List\u003cJsonAdaptedPrescription\u003e prescriptions \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":27,"author":{"gitId":"ChongWeiJie29"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":28,"author":{"gitId":"ChongWeiJie29"},"content":"     * Constructs a {@code JsonSerializablePrescriptionList} with the given prescriptions.","lastModifiedDate":"2023-10-12"},{"lineNumber":29,"author":{"gitId":"ChongWeiJie29"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":30,"author":{"gitId":"ChongWeiJie29"},"content":"    @JsonCreator","lastModifiedDate":"2023-10-12"},{"lineNumber":31,"author":{"gitId":"ChongWeiJie29"},"content":"    public JsonSerializablePrescriptionList(","lastModifiedDate":"2023-10-12"},{"lineNumber":32,"author":{"gitId":"ChongWeiJie29"},"content":"            @JsonProperty(\"prescriptions\") List\u003cJsonAdaptedPrescription\u003e prescriptions) {","lastModifiedDate":"2023-10-12"},{"lineNumber":33,"author":{"gitId":"ChongWeiJie29"},"content":"        this.prescriptions.addAll(prescriptions);","lastModifiedDate":"2023-10-12"},{"lineNumber":34,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":35,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":36,"author":{"gitId":"ChongWeiJie29"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":37,"author":{"gitId":"ChongWeiJie29"},"content":"     * Converts a given {@code ReadOnlyPrescriptionList} into this class for Jackson use.","lastModifiedDate":"2023-10-12"},{"lineNumber":38,"author":{"gitId":"ChongWeiJie29"},"content":"     *","lastModifiedDate":"2023-10-12"},{"lineNumber":39,"author":{"gitId":"ChongWeiJie29"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializablePrescriptionList}.","lastModifiedDate":"2023-10-12"},{"lineNumber":40,"author":{"gitId":"ChongWeiJie29"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":41,"author":{"gitId":"ChongWeiJie29"},"content":"    public JsonSerializablePrescriptionList(ReadOnlyPrescriptionList source) {","lastModifiedDate":"2023-10-12"},{"lineNumber":42,"author":{"gitId":"ChongWeiJie29"},"content":"        prescriptions.addAll(source.getPrescriptionList().stream().map(","lastModifiedDate":"2023-10-12"},{"lineNumber":43,"author":{"gitId":"ChongWeiJie29"},"content":"            JsonAdaptedPrescription::new).collect(Collectors.toList()));","lastModifiedDate":"2023-10-12"},{"lineNumber":44,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":45,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":46,"author":{"gitId":"ChongWeiJie29"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":47,"author":{"gitId":"ChongWeiJie29"},"content":"     * Converts this prescription list into the model\u0027s {@code PrescriptionList} object.","lastModifiedDate":"2023-10-12"},{"lineNumber":48,"author":{"gitId":"ChongWeiJie29"},"content":"     *","lastModifiedDate":"2023-10-12"},{"lineNumber":49,"author":{"gitId":"ChongWeiJie29"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2023-10-12"},{"lineNumber":50,"author":{"gitId":"ChongWeiJie29"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":51,"author":{"gitId":"ChongWeiJie29"},"content":"    public PrescriptionList toModelType() throws IllegalValueException {","lastModifiedDate":"2023-10-12"},{"lineNumber":52,"author":{"gitId":"ChongWeiJie29"},"content":"        PrescriptionList prescriptionList \u003d new PrescriptionList();","lastModifiedDate":"2023-10-12"},{"lineNumber":53,"author":{"gitId":"ChongWeiJie29"},"content":"        for (JsonAdaptedPrescription jsonAdaptedPrescription : prescriptions) {","lastModifiedDate":"2023-10-12"},{"lineNumber":54,"author":{"gitId":"ChongWeiJie29"},"content":"            Prescription prescription \u003d jsonAdaptedPrescription.toModelType();","lastModifiedDate":"2023-10-12"},{"lineNumber":55,"author":{"gitId":"ChongWeiJie29"},"content":"            if (prescriptionList.hasPrescription(prescription)) {","lastModifiedDate":"2023-10-12"},{"lineNumber":56,"author":{"gitId":"ChongWeiJie29"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_PRESCRIPTION);","lastModifiedDate":"2023-10-12"},{"lineNumber":57,"author":{"gitId":"ChongWeiJie29"},"content":"            }","lastModifiedDate":"2023-10-12"},{"lineNumber":58,"author":{"gitId":"ChongWeiJie29"},"content":"            prescriptionList.addPrescription(prescription);","lastModifiedDate":"2023-10-12"},{"lineNumber":59,"author":{"gitId":"ChongWeiJie29"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":60,"author":{"gitId":"ChongWeiJie29"},"content":"        return prescriptionList;","lastModifiedDate":"2023-10-12"},{"lineNumber":61,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":62,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":63,"author":{"gitId":"ChongWeiJie29"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"ChongWeiJie29":63}},{"path":"src/main/java/seedu/address/storage/JsonUserPrefsStoragePrescription.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ChongWeiJie29"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"ChongWeiJie29"},"content":"import java.io.IOException;","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"ChongWeiJie29"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"ChongWeiJie29"},"content":"import java.util.Optional;","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"ChongWeiJie29"},"content":"import seedu.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"ChongWeiJie29"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"ChongWeiJie29"},"content":"import seedu.address.model.ReadOnlyUserPrefsPrescription;","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"ChongWeiJie29"},"content":"import seedu.address.model.UserPrefsPrescription;","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"ChongWeiJie29"},"content":"/**","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"ChongWeiJie29"},"content":" * A class to access UserPrefs stored in the hard disk as a json file","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"ChongWeiJie29"},"content":" */","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"ChongWeiJie29"},"content":"public class JsonUserPrefsStoragePrescription implements UserPrefsStoragePrescription {","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"ChongWeiJie29"},"content":"    private Path filePath;","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"ChongWeiJie29"},"content":"    public JsonUserPrefsStoragePrescription(Path filePath) {","lastModifiedDate":"2023-10-12"},{"lineNumber":20,"author":{"gitId":"ChongWeiJie29"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":22,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"ChongWeiJie29"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":24,"author":{"gitId":"ChongWeiJie29"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2023-10-12"},{"lineNumber":25,"author":{"gitId":"ChongWeiJie29"},"content":"        return filePath;","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":27,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":28,"author":{"gitId":"ChongWeiJie29"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":29,"author":{"gitId":"ChongWeiJie29"},"content":"    public Optional\u003cUserPrefsPrescription\u003e readUserPrefs() throws DataLoadingException {","lastModifiedDate":"2023-10-12"},{"lineNumber":30,"author":{"gitId":"ChongWeiJie29"},"content":"        return readUserPrefs(filePath);","lastModifiedDate":"2023-10-12"},{"lineNumber":31,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":32,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":33,"author":{"gitId":"ChongWeiJie29"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":34,"author":{"gitId":"ChongWeiJie29"},"content":"     * Similar to {@link #readUserPrefs()}","lastModifiedDate":"2023-10-12"},{"lineNumber":35,"author":{"gitId":"ChongWeiJie29"},"content":"     * @param prefsFilePath location of the data. Cannot be null.","lastModifiedDate":"2023-10-12"},{"lineNumber":36,"author":{"gitId":"ChongWeiJie29"},"content":"     * @throws DataLoadingException if the file format is not as expected.","lastModifiedDate":"2023-10-12"},{"lineNumber":37,"author":{"gitId":"ChongWeiJie29"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":38,"author":{"gitId":"ChongWeiJie29"},"content":"    public Optional\u003cUserPrefsPrescription\u003e readUserPrefs(Path prefsFilePath) throws DataLoadingException {","lastModifiedDate":"2023-10-12"},{"lineNumber":39,"author":{"gitId":"ChongWeiJie29"},"content":"        return JsonUtil.readJsonFile(prefsFilePath, UserPrefsPrescription.class);","lastModifiedDate":"2023-10-12"},{"lineNumber":40,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":41,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":42,"author":{"gitId":"ChongWeiJie29"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":43,"author":{"gitId":"ChongWeiJie29"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefsPrescription userPrefs) throws IOException {","lastModifiedDate":"2023-10-12"},{"lineNumber":44,"author":{"gitId":"ChongWeiJie29"},"content":"        JsonUtil.saveJsonFile(userPrefs, filePath);","lastModifiedDate":"2023-10-12"},{"lineNumber":45,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":46,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":47,"author":{"gitId":"ChongWeiJie29"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"ChongWeiJie29":47}},{"path":"src/main/java/seedu/address/storage/PrescriptionListStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ChongWeiJie29"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"ChongWeiJie29"},"content":"import java.io.IOException;","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"ChongWeiJie29"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"ChongWeiJie29"},"content":"import java.util.Optional;","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"ChongWeiJie29"},"content":"import seedu.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"ChongWeiJie29"},"content":"import seedu.address.model.ReadOnlyPrescriptionList;","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"ChongWeiJie29"},"content":"/**","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"ChongWeiJie29"},"content":" * Represents a storage for {@link seedu.address.model.PrescriptionList}.","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"ChongWeiJie29"},"content":" */","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"ChongWeiJie29"},"content":"public interface PrescriptionListStorage {","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"ChongWeiJie29"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"ChongWeiJie29"},"content":"     * Returns the file path of the data file.","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"ChongWeiJie29"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"ChongWeiJie29"},"content":"    Path getPrescriptionListFilePath();","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":20,"author":{"gitId":"ChongWeiJie29"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"ChongWeiJie29"},"content":"     * Returns PrescriptionList data as a {@link ReadOnlyPrescriptionList}.","lastModifiedDate":"2023-10-12"},{"lineNumber":22,"author":{"gitId":"ChongWeiJie29"},"content":"     * Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"ChongWeiJie29"},"content":"     *","lastModifiedDate":"2023-10-12"},{"lineNumber":24,"author":{"gitId":"ChongWeiJie29"},"content":"     * @throws DataLoadingException if loading the data from storage failed.","lastModifiedDate":"2023-10-12"},{"lineNumber":25,"author":{"gitId":"ChongWeiJie29"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"ChongWeiJie29"},"content":"    Optional\u003cReadOnlyPrescriptionList\u003e readPrescriptionList() throws DataLoadingException;","lastModifiedDate":"2023-10-12"},{"lineNumber":27,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":28,"author":{"gitId":"ChongWeiJie29"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":29,"author":{"gitId":"ChongWeiJie29"},"content":"     * @see #getPrescriptionListFilePath()","lastModifiedDate":"2023-10-12"},{"lineNumber":30,"author":{"gitId":"ChongWeiJie29"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":31,"author":{"gitId":"ChongWeiJie29"},"content":"    Optional\u003cReadOnlyPrescriptionList\u003e readPrescriptionList(Path filePath) throws DataLoadingException;","lastModifiedDate":"2023-10-12"},{"lineNumber":32,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":33,"author":{"gitId":"ChongWeiJie29"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":34,"author":{"gitId":"ChongWeiJie29"},"content":"     * Saves the given {@link ReadOnlyPrescriptionList} to the storage.","lastModifiedDate":"2023-10-12"},{"lineNumber":35,"author":{"gitId":"ChongWeiJie29"},"content":"     * @param prescriptionList cannot be null.","lastModifiedDate":"2023-10-12"},{"lineNumber":36,"author":{"gitId":"ChongWeiJie29"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2023-10-12"},{"lineNumber":37,"author":{"gitId":"ChongWeiJie29"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":38,"author":{"gitId":"ChongWeiJie29"},"content":"    void savePrescriptionList(ReadOnlyPrescriptionList prescriptionList) throws IOException;","lastModifiedDate":"2023-10-12"},{"lineNumber":39,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":40,"author":{"gitId":"ChongWeiJie29"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":41,"author":{"gitId":"ChongWeiJie29"},"content":"     * @see #savePrescriptionList(ReadOnlyPrescriptionList)","lastModifiedDate":"2023-10-12"},{"lineNumber":42,"author":{"gitId":"ChongWeiJie29"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":43,"author":{"gitId":"ChongWeiJie29"},"content":"    void savePrescriptionList(ReadOnlyPrescriptionList prescriptionList, Path filePath) throws IOException;","lastModifiedDate":"2023-10-12"},{"lineNumber":44,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":45,"author":{"gitId":"ChongWeiJie29"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"ChongWeiJie29":45}},{"path":"src/main/java/seedu/address/storage/StorageManagerPrescription.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ChongWeiJie29"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"ChongWeiJie29"},"content":"import java.io.IOException;","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"ChongWeiJie29"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"ChongWeiJie29"},"content":"import java.util.Optional;","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"ChongWeiJie29"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"ChongWeiJie29"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"ChongWeiJie29"},"content":"import seedu.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"ChongWeiJie29"},"content":"import seedu.address.model.ReadOnlyPrescriptionList;","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"ChongWeiJie29"},"content":"import seedu.address.model.ReadOnlyUserPrefsPrescription;","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"ChongWeiJie29"},"content":"import seedu.address.model.UserPrefsPrescription;","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"ChongWeiJie29"},"content":"/**","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"ChongWeiJie29"},"content":" * Manages storage of PrescriptionList data in local storage.","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"ChongWeiJie29"},"content":" */","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"ChongWeiJie29"},"content":"public class StorageManagerPrescription implements StoragePrescription {","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"ChongWeiJie29"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(StorageManagerPrescription.class);","lastModifiedDate":"2023-10-12"},{"lineNumber":20,"author":{"gitId":"ChongWeiJie29"},"content":"    private PrescriptionListStorage prescriptionListStorage;","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"ChongWeiJie29"},"content":"    private UserPrefsStoragePrescription userPrefsStorage;","lastModifiedDate":"2023-10-12"},{"lineNumber":22,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"ChongWeiJie29"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":24,"author":{"gitId":"ChongWeiJie29"},"content":"     * Creates a {@code StorageManagerPrescription} with the given {@code PrescriptionListStorage}","lastModifiedDate":"2023-10-12"},{"lineNumber":25,"author":{"gitId":"ChongWeiJie29"},"content":"     * and {@code UserPrefStorage}.","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"ChongWeiJie29"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":27,"author":{"gitId":"ChongWeiJie29"},"content":"    public StorageManagerPrescription(PrescriptionListStorage prescriptionListStorage,","lastModifiedDate":"2023-10-12"},{"lineNumber":28,"author":{"gitId":"ChongWeiJie29"},"content":"        UserPrefsStoragePrescription userPrefsStorage) {","lastModifiedDate":"2023-10-12"},{"lineNumber":29,"author":{"gitId":"ChongWeiJie29"},"content":"        this.prescriptionListStorage \u003d prescriptionListStorage;","lastModifiedDate":"2023-10-12"},{"lineNumber":30,"author":{"gitId":"ChongWeiJie29"},"content":"        this.userPrefsStorage \u003d userPrefsStorage;","lastModifiedDate":"2023-10-12"},{"lineNumber":31,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":32,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":33,"author":{"gitId":"ChongWeiJie29"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-10-12"},{"lineNumber":34,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":35,"author":{"gitId":"ChongWeiJie29"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":36,"author":{"gitId":"ChongWeiJie29"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2023-10-12"},{"lineNumber":37,"author":{"gitId":"ChongWeiJie29"},"content":"        return userPrefsStorage.getUserPrefsFilePath();","lastModifiedDate":"2023-10-12"},{"lineNumber":38,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":39,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":40,"author":{"gitId":"ChongWeiJie29"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":41,"author":{"gitId":"ChongWeiJie29"},"content":"    public Optional\u003cUserPrefsPrescription\u003e readUserPrefs() throws DataLoadingException {","lastModifiedDate":"2023-10-12"},{"lineNumber":42,"author":{"gitId":"ChongWeiJie29"},"content":"        return userPrefsStorage.readUserPrefs();","lastModifiedDate":"2023-10-12"},{"lineNumber":43,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":44,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":45,"author":{"gitId":"ChongWeiJie29"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":46,"author":{"gitId":"ChongWeiJie29"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefsPrescription userPrefs) throws IOException {","lastModifiedDate":"2023-10-12"},{"lineNumber":47,"author":{"gitId":"ChongWeiJie29"},"content":"        userPrefsStorage.saveUserPrefs(userPrefs);","lastModifiedDate":"2023-10-12"},{"lineNumber":48,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":49,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":50,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":51,"author":{"gitId":"ChongWeiJie29"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d PrescriptionList methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-10-12"},{"lineNumber":52,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":53,"author":{"gitId":"ChongWeiJie29"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":54,"author":{"gitId":"ChongWeiJie29"},"content":"    public Path getPrescriptionListFilePath() {","lastModifiedDate":"2023-10-12"},{"lineNumber":55,"author":{"gitId":"ChongWeiJie29"},"content":"        return prescriptionListStorage.getPrescriptionListFilePath();","lastModifiedDate":"2023-10-12"},{"lineNumber":56,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":57,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":58,"author":{"gitId":"ChongWeiJie29"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":59,"author":{"gitId":"ChongWeiJie29"},"content":"    public Optional\u003cReadOnlyPrescriptionList\u003e readPrescriptionList() throws DataLoadingException {","lastModifiedDate":"2023-10-12"},{"lineNumber":60,"author":{"gitId":"ChongWeiJie29"},"content":"        return readPrescriptionList(prescriptionListStorage.getPrescriptionListFilePath());","lastModifiedDate":"2023-10-12"},{"lineNumber":61,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":62,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":63,"author":{"gitId":"ChongWeiJie29"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":64,"author":{"gitId":"ChongWeiJie29"},"content":"    public Optional\u003cReadOnlyPrescriptionList\u003e readPrescriptionList(Path filePath) throws DataLoadingException {","lastModifiedDate":"2023-10-12"},{"lineNumber":65,"author":{"gitId":"ChongWeiJie29"},"content":"        logger.fine(\"Attempting to read data from file: \" + filePath);","lastModifiedDate":"2023-10-12"},{"lineNumber":66,"author":{"gitId":"ChongWeiJie29"},"content":"        return prescriptionListStorage.readPrescriptionList(filePath);","lastModifiedDate":"2023-10-12"},{"lineNumber":67,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":68,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":69,"author":{"gitId":"ChongWeiJie29"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":70,"author":{"gitId":"ChongWeiJie29"},"content":"    public void savePrescriptionList(ReadOnlyPrescriptionList prescriptionList) throws IOException {","lastModifiedDate":"2023-10-12"},{"lineNumber":71,"author":{"gitId":"ChongWeiJie29"},"content":"        savePrescriptionList(prescriptionList, prescriptionListStorage.getPrescriptionListFilePath());","lastModifiedDate":"2023-10-12"},{"lineNumber":72,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":73,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":74,"author":{"gitId":"ChongWeiJie29"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":75,"author":{"gitId":"ChongWeiJie29"},"content":"    public void savePrescriptionList(ReadOnlyPrescriptionList prescriptionList, Path filePath) throws IOException {","lastModifiedDate":"2023-10-12"},{"lineNumber":76,"author":{"gitId":"ChongWeiJie29"},"content":"        logger.fine(\"Attempting to write to data file: \" + filePath);","lastModifiedDate":"2023-10-12"},{"lineNumber":77,"author":{"gitId":"ChongWeiJie29"},"content":"        prescriptionListStorage.savePrescriptionList(prescriptionList, filePath);","lastModifiedDate":"2023-10-12"},{"lineNumber":78,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":79,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":80,"author":{"gitId":"ChongWeiJie29"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"ChongWeiJie29":80}},{"path":"src/main/java/seedu/address/storage/StoragePrescription.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ChongWeiJie29"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"ChongWeiJie29"},"content":"import java.io.IOException;","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"ChongWeiJie29"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"ChongWeiJie29"},"content":"import java.util.Optional;","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"ChongWeiJie29"},"content":"import seedu.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"ChongWeiJie29"},"content":"import seedu.address.model.ReadOnlyPrescriptionList;","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"ChongWeiJie29"},"content":"import seedu.address.model.ReadOnlyUserPrefsPrescription;","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"ChongWeiJie29"},"content":"import seedu.address.model.UserPrefsPrescription;","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"ChongWeiJie29"},"content":"/**","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"ChongWeiJie29"},"content":" * API of the StoragePrescription component","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"ChongWeiJie29"},"content":" */","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"ChongWeiJie29"},"content":"public interface StoragePrescription extends PrescriptionListStorage, UserPrefsStoragePrescription {","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"ChongWeiJie29"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"ChongWeiJie29"},"content":"    Optional\u003cUserPrefsPrescription\u003e readUserPrefs() throws DataLoadingException;","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":20,"author":{"gitId":"ChongWeiJie29"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"ChongWeiJie29"},"content":"    void saveUserPrefs(ReadOnlyUserPrefsPrescription userPrefs) throws IOException;","lastModifiedDate":"2023-10-12"},{"lineNumber":22,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"ChongWeiJie29"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":24,"author":{"gitId":"ChongWeiJie29"},"content":"    Path getPrescriptionListFilePath();","lastModifiedDate":"2023-10-12"},{"lineNumber":25,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"ChongWeiJie29"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":27,"author":{"gitId":"ChongWeiJie29"},"content":"    Optional\u003cReadOnlyPrescriptionList\u003e readPrescriptionList() throws DataLoadingException;","lastModifiedDate":"2023-10-12"},{"lineNumber":28,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":29,"author":{"gitId":"ChongWeiJie29"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":30,"author":{"gitId":"ChongWeiJie29"},"content":"    void savePrescriptionList(ReadOnlyPrescriptionList prescriptionList) throws IOException;","lastModifiedDate":"2023-10-12"},{"lineNumber":31,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":32,"author":{"gitId":"ChongWeiJie29"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"ChongWeiJie29":32}},{"path":"src/main/java/seedu/address/storage/UserPrefsStoragePrescription.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ChongWeiJie29"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"ChongWeiJie29"},"content":"import java.io.IOException;","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"ChongWeiJie29"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"ChongWeiJie29"},"content":"import java.util.Optional;","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"ChongWeiJie29"},"content":"import seedu.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"ChongWeiJie29"},"content":"import seedu.address.model.ReadOnlyUserPrefsPrescription;","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"ChongWeiJie29"},"content":"import seedu.address.model.UserPrefsPrescription;","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"ChongWeiJie29"},"content":"/**","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"ChongWeiJie29"},"content":" * Represents a storage for {@link seedu.address.model.UserPrefs}.","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"ChongWeiJie29"},"content":" */","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"ChongWeiJie29"},"content":"public interface UserPrefsStoragePrescription {","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"ChongWeiJie29"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"ChongWeiJie29"},"content":"     * Returns the file path of the UserPrefs data file.","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"ChongWeiJie29"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"ChongWeiJie29"},"content":"    Path getUserPrefsFilePath();","lastModifiedDate":"2023-10-12"},{"lineNumber":20,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"ChongWeiJie29"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":22,"author":{"gitId":"ChongWeiJie29"},"content":"     * Returns UserPrefs data from storage.","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"ChongWeiJie29"},"content":"     * Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2023-10-12"},{"lineNumber":24,"author":{"gitId":"ChongWeiJie29"},"content":"     *","lastModifiedDate":"2023-10-12"},{"lineNumber":25,"author":{"gitId":"ChongWeiJie29"},"content":"     * @throws DataLoadingException if the loading of data from preference file failed.","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"ChongWeiJie29"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":27,"author":{"gitId":"ChongWeiJie29"},"content":"    Optional\u003cUserPrefsPrescription\u003e readUserPrefs() throws DataLoadingException;","lastModifiedDate":"2023-10-12"},{"lineNumber":28,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":29,"author":{"gitId":"ChongWeiJie29"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":30,"author":{"gitId":"ChongWeiJie29"},"content":"     * Saves the given {@link seedu.address.model.ReadOnlyUserPrefs} to the storage.","lastModifiedDate":"2023-10-12"},{"lineNumber":31,"author":{"gitId":"ChongWeiJie29"},"content":"     * @param userPrefs cannot be null.","lastModifiedDate":"2023-10-12"},{"lineNumber":32,"author":{"gitId":"ChongWeiJie29"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2023-10-12"},{"lineNumber":33,"author":{"gitId":"ChongWeiJie29"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":34,"author":{"gitId":"ChongWeiJie29"},"content":"    void saveUserPrefs(ReadOnlyUserPrefsPrescription userPrefs) throws IOException;","lastModifiedDate":"2023-10-12"},{"lineNumber":35,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":36,"author":{"gitId":"ChongWeiJie29"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"ChongWeiJie29":36}},{"path":"src/main/java/seedu/address/ui/MainWindowPrescription.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ChongWeiJie29"},"content":"package seedu.address.ui;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"ChongWeiJie29"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"ChongWeiJie29"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"ChongWeiJie29"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"ChongWeiJie29"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"ChongWeiJie29"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"ChongWeiJie29"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"ChongWeiJie29"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"ChongWeiJie29"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"ChongWeiJie29"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"ChongWeiJie29"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"ChongWeiJie29"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"ChongWeiJie29"},"content":"import seedu.address.logic.LogicPrescription;","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"ChongWeiJie29"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"ChongWeiJie29"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"ChongWeiJie29"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":20,"author":{"gitId":"ChongWeiJie29"},"content":"/**","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"ChongWeiJie29"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2023-10-12"},{"lineNumber":22,"author":{"gitId":"ChongWeiJie29"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"ChongWeiJie29"},"content":" */","lastModifiedDate":"2023-10-12"},{"lineNumber":24,"author":{"gitId":"ChongWeiJie29"},"content":"public class MainWindowPrescription extends UiPart\u003cStage\u003e {","lastModifiedDate":"2023-10-12"},{"lineNumber":25,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"ChongWeiJie29"},"content":"    private static final String FXML \u003d \"MainWindowPrescription.fxml\";","lastModifiedDate":"2023-10-12"},{"lineNumber":27,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":28,"author":{"gitId":"ChongWeiJie29"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2023-10-12"},{"lineNumber":29,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":30,"author":{"gitId":"ChongWeiJie29"},"content":"    private Stage primaryStage;","lastModifiedDate":"2023-10-12"},{"lineNumber":31,"author":{"gitId":"ChongWeiJie29"},"content":"    private LogicPrescription logic;","lastModifiedDate":"2023-10-12"},{"lineNumber":32,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":33,"author":{"gitId":"ChongWeiJie29"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2023-10-12"},{"lineNumber":34,"author":{"gitId":"ChongWeiJie29"},"content":"    private PrescriptionListPanel prescriptionListPanel;","lastModifiedDate":"2023-10-12"},{"lineNumber":35,"author":{"gitId":"ChongWeiJie29"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2023-10-12"},{"lineNumber":36,"author":{"gitId":"ChongWeiJie29"},"content":"    private HelpWindow helpWindow;","lastModifiedDate":"2023-10-12"},{"lineNumber":37,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":38,"author":{"gitId":"ChongWeiJie29"},"content":"    @FXML","lastModifiedDate":"2023-10-12"},{"lineNumber":39,"author":{"gitId":"ChongWeiJie29"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2023-10-12"},{"lineNumber":40,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":41,"author":{"gitId":"ChongWeiJie29"},"content":"    @FXML","lastModifiedDate":"2023-10-12"},{"lineNumber":42,"author":{"gitId":"ChongWeiJie29"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2023-10-12"},{"lineNumber":43,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":44,"author":{"gitId":"ChongWeiJie29"},"content":"    @FXML","lastModifiedDate":"2023-10-12"},{"lineNumber":45,"author":{"gitId":"ChongWeiJie29"},"content":"    private StackPane prescriptionListPanelPlaceholder;","lastModifiedDate":"2023-10-12"},{"lineNumber":46,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":47,"author":{"gitId":"ChongWeiJie29"},"content":"    @FXML","lastModifiedDate":"2023-10-12"},{"lineNumber":48,"author":{"gitId":"ChongWeiJie29"},"content":"    private StackPane resultDisplayPlaceholder;","lastModifiedDate":"2023-10-12"},{"lineNumber":49,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":50,"author":{"gitId":"ChongWeiJie29"},"content":"    @FXML","lastModifiedDate":"2023-10-12"},{"lineNumber":51,"author":{"gitId":"ChongWeiJie29"},"content":"    private StackPane statusbarPlaceholder;","lastModifiedDate":"2023-10-12"},{"lineNumber":52,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":53,"author":{"gitId":"ChongWeiJie29"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":54,"author":{"gitId":"ChongWeiJie29"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2023-10-12"},{"lineNumber":55,"author":{"gitId":"ChongWeiJie29"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":56,"author":{"gitId":"ChongWeiJie29"},"content":"    public MainWindowPrescription(Stage primaryStage, LogicPrescription logic) {","lastModifiedDate":"2023-10-12"},{"lineNumber":57,"author":{"gitId":"ChongWeiJie29"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2023-10-12"},{"lineNumber":58,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":59,"author":{"gitId":"ChongWeiJie29"},"content":"        // Set dependencies","lastModifiedDate":"2023-10-12"},{"lineNumber":60,"author":{"gitId":"ChongWeiJie29"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2023-10-12"},{"lineNumber":61,"author":{"gitId":"ChongWeiJie29"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2023-10-12"},{"lineNumber":62,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":63,"author":{"gitId":"ChongWeiJie29"},"content":"        // Configure the UI","lastModifiedDate":"2023-10-12"},{"lineNumber":64,"author":{"gitId":"ChongWeiJie29"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2023-10-12"},{"lineNumber":65,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":66,"author":{"gitId":"ChongWeiJie29"},"content":"        setAccelerators();","lastModifiedDate":"2023-10-12"},{"lineNumber":67,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":68,"author":{"gitId":"ChongWeiJie29"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2023-10-12"},{"lineNumber":69,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":70,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":71,"author":{"gitId":"ChongWeiJie29"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2023-10-12"},{"lineNumber":72,"author":{"gitId":"ChongWeiJie29"},"content":"        return primaryStage;","lastModifiedDate":"2023-10-12"},{"lineNumber":73,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":74,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":75,"author":{"gitId":"ChongWeiJie29"},"content":"    private void setAccelerators() {","lastModifiedDate":"2023-10-12"},{"lineNumber":76,"author":{"gitId":"ChongWeiJie29"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2023-10-12"},{"lineNumber":77,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":78,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":79,"author":{"gitId":"ChongWeiJie29"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":80,"author":{"gitId":"ChongWeiJie29"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2023-10-12"},{"lineNumber":81,"author":{"gitId":"ChongWeiJie29"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","lastModifiedDate":"2023-10-12"},{"lineNumber":82,"author":{"gitId":"ChongWeiJie29"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":83,"author":{"gitId":"ChongWeiJie29"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2023-10-12"},{"lineNumber":84,"author":{"gitId":"ChongWeiJie29"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2023-10-12"},{"lineNumber":85,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":86,"author":{"gitId":"ChongWeiJie29"},"content":"        /*","lastModifiedDate":"2023-10-12"},{"lineNumber":87,"author":{"gitId":"ChongWeiJie29"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2023-10-12"},{"lineNumber":88,"author":{"gitId":"ChongWeiJie29"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","lastModifiedDate":"2023-10-12"},{"lineNumber":89,"author":{"gitId":"ChongWeiJie29"},"content":"         * is fixed in later version of SDK.","lastModifiedDate":"2023-10-12"},{"lineNumber":90,"author":{"gitId":"ChongWeiJie29"},"content":"         *","lastModifiedDate":"2023-10-12"},{"lineNumber":91,"author":{"gitId":"ChongWeiJie29"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2023-10-12"},{"lineNumber":92,"author":{"gitId":"ChongWeiJie29"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2023-10-12"},{"lineNumber":93,"author":{"gitId":"ChongWeiJie29"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will","lastModifiedDate":"2023-10-12"},{"lineNumber":94,"author":{"gitId":"ChongWeiJie29"},"content":"         * not work when the focus is in them because the key event is consumed by","lastModifiedDate":"2023-10-12"},{"lineNumber":95,"author":{"gitId":"ChongWeiJie29"},"content":"         * the TextInputControl(s).","lastModifiedDate":"2023-10-12"},{"lineNumber":96,"author":{"gitId":"ChongWeiJie29"},"content":"         *","lastModifiedDate":"2023-10-12"},{"lineNumber":97,"author":{"gitId":"ChongWeiJie29"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2023-10-12"},{"lineNumber":98,"author":{"gitId":"ChongWeiJie29"},"content":"         * help window purposely so to support accelerators even when focus is","lastModifiedDate":"2023-10-12"},{"lineNumber":99,"author":{"gitId":"ChongWeiJie29"},"content":"         * in CommandBox or ResultDisplay.","lastModifiedDate":"2023-10-12"},{"lineNumber":100,"author":{"gitId":"ChongWeiJie29"},"content":"         */","lastModifiedDate":"2023-10-12"},{"lineNumber":101,"author":{"gitId":"ChongWeiJie29"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2023-10-12"},{"lineNumber":102,"author":{"gitId":"ChongWeiJie29"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2023-10-12"},{"lineNumber":103,"author":{"gitId":"ChongWeiJie29"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2023-10-12"},{"lineNumber":104,"author":{"gitId":"ChongWeiJie29"},"content":"                event.consume();","lastModifiedDate":"2023-10-12"},{"lineNumber":105,"author":{"gitId":"ChongWeiJie29"},"content":"            }","lastModifiedDate":"2023-10-12"},{"lineNumber":106,"author":{"gitId":"ChongWeiJie29"},"content":"        });","lastModifiedDate":"2023-10-12"},{"lineNumber":107,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":108,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":109,"author":{"gitId":"ChongWeiJie29"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":110,"author":{"gitId":"ChongWeiJie29"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2023-10-12"},{"lineNumber":111,"author":{"gitId":"ChongWeiJie29"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":112,"author":{"gitId":"ChongWeiJie29"},"content":"    void fillInnerParts() {","lastModifiedDate":"2023-10-12"},{"lineNumber":113,"author":{"gitId":"ChongWeiJie29"},"content":"        prescriptionListPanel \u003d new PrescriptionListPanel(logic.getFilteredPrescriptionList());","lastModifiedDate":"2023-10-12"},{"lineNumber":114,"author":{"gitId":"ChongWeiJie29"},"content":"        prescriptionListPanelPlaceholder.getChildren().add(prescriptionListPanel.getRoot());","lastModifiedDate":"2023-10-12"},{"lineNumber":115,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":116,"author":{"gitId":"ChongWeiJie29"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2023-10-12"},{"lineNumber":117,"author":{"gitId":"ChongWeiJie29"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2023-10-12"},{"lineNumber":118,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":119,"author":{"gitId":"ChongWeiJie29"},"content":"        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(logic.getPrescriptionListFilePath());","lastModifiedDate":"2023-10-12"},{"lineNumber":120,"author":{"gitId":"ChongWeiJie29"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2023-10-12"},{"lineNumber":121,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":122,"author":{"gitId":"ChongWeiJie29"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeCommand);","lastModifiedDate":"2023-10-12"},{"lineNumber":123,"author":{"gitId":"ChongWeiJie29"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2023-10-12"},{"lineNumber":124,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":125,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":126,"author":{"gitId":"ChongWeiJie29"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":127,"author":{"gitId":"ChongWeiJie29"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2023-10-12"},{"lineNumber":128,"author":{"gitId":"ChongWeiJie29"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":129,"author":{"gitId":"ChongWeiJie29"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2023-10-12"},{"lineNumber":130,"author":{"gitId":"ChongWeiJie29"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2023-10-12"},{"lineNumber":131,"author":{"gitId":"ChongWeiJie29"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2023-10-12"},{"lineNumber":132,"author":{"gitId":"ChongWeiJie29"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2023-10-12"},{"lineNumber":133,"author":{"gitId":"ChongWeiJie29"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2023-10-12"},{"lineNumber":134,"author":{"gitId":"ChongWeiJie29"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2023-10-12"},{"lineNumber":135,"author":{"gitId":"ChongWeiJie29"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":136,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":137,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":138,"author":{"gitId":"ChongWeiJie29"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":139,"author":{"gitId":"ChongWeiJie29"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2023-10-12"},{"lineNumber":140,"author":{"gitId":"ChongWeiJie29"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":141,"author":{"gitId":"ChongWeiJie29"},"content":"    @FXML","lastModifiedDate":"2023-10-12"},{"lineNumber":142,"author":{"gitId":"ChongWeiJie29"},"content":"    public void handleHelp() {","lastModifiedDate":"2023-10-12"},{"lineNumber":143,"author":{"gitId":"ChongWeiJie29"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2023-10-12"},{"lineNumber":144,"author":{"gitId":"ChongWeiJie29"},"content":"            helpWindow.show();","lastModifiedDate":"2023-10-12"},{"lineNumber":145,"author":{"gitId":"ChongWeiJie29"},"content":"        } else {","lastModifiedDate":"2023-10-12"},{"lineNumber":146,"author":{"gitId":"ChongWeiJie29"},"content":"            helpWindow.focus();","lastModifiedDate":"2023-10-12"},{"lineNumber":147,"author":{"gitId":"ChongWeiJie29"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":148,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":149,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":150,"author":{"gitId":"ChongWeiJie29"},"content":"    void show() {","lastModifiedDate":"2023-10-12"},{"lineNumber":151,"author":{"gitId":"ChongWeiJie29"},"content":"        primaryStage.show();","lastModifiedDate":"2023-10-12"},{"lineNumber":152,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":153,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":154,"author":{"gitId":"ChongWeiJie29"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":155,"author":{"gitId":"ChongWeiJie29"},"content":"     * Closes the application.","lastModifiedDate":"2023-10-12"},{"lineNumber":156,"author":{"gitId":"ChongWeiJie29"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":157,"author":{"gitId":"ChongWeiJie29"},"content":"    @FXML","lastModifiedDate":"2023-10-12"},{"lineNumber":158,"author":{"gitId":"ChongWeiJie29"},"content":"    private void handleExit() {","lastModifiedDate":"2023-10-12"},{"lineNumber":159,"author":{"gitId":"ChongWeiJie29"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2023-10-12"},{"lineNumber":160,"author":{"gitId":"ChongWeiJie29"},"content":"                (int) primaryStage.getX(), (int) primaryStage.getY());","lastModifiedDate":"2023-10-12"},{"lineNumber":161,"author":{"gitId":"ChongWeiJie29"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2023-10-12"},{"lineNumber":162,"author":{"gitId":"ChongWeiJie29"},"content":"        helpWindow.hide();","lastModifiedDate":"2023-10-12"},{"lineNumber":163,"author":{"gitId":"ChongWeiJie29"},"content":"        primaryStage.hide();","lastModifiedDate":"2023-10-12"},{"lineNumber":164,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":165,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":166,"author":{"gitId":"ChongWeiJie29"},"content":"    public PrescriptionListPanel getPersonListPanel() {","lastModifiedDate":"2023-10-12"},{"lineNumber":167,"author":{"gitId":"ChongWeiJie29"},"content":"        return prescriptionListPanel;","lastModifiedDate":"2023-10-12"},{"lineNumber":168,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":169,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":170,"author":{"gitId":"ChongWeiJie29"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":171,"author":{"gitId":"ChongWeiJie29"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2023-10-12"},{"lineNumber":172,"author":{"gitId":"ChongWeiJie29"},"content":"     *","lastModifiedDate":"2023-10-12"},{"lineNumber":173,"author":{"gitId":"ChongWeiJie29"},"content":"     * @see seedu.address.logic.Logic#execute(String)","lastModifiedDate":"2023-10-12"},{"lineNumber":174,"author":{"gitId":"ChongWeiJie29"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":175,"author":{"gitId":"ChongWeiJie29"},"content":"    private CommandResult executeCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2023-10-12"},{"lineNumber":176,"author":{"gitId":"ChongWeiJie29"},"content":"        try {","lastModifiedDate":"2023-10-12"},{"lineNumber":177,"author":{"gitId":"ChongWeiJie29"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2023-10-12"},{"lineNumber":178,"author":{"gitId":"ChongWeiJie29"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2023-10-12"},{"lineNumber":179,"author":{"gitId":"ChongWeiJie29"},"content":"            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2023-10-12"},{"lineNumber":180,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":181,"author":{"gitId":"ChongWeiJie29"},"content":"            if (commandResult.isShowHelp()) {","lastModifiedDate":"2023-10-12"},{"lineNumber":182,"author":{"gitId":"ChongWeiJie29"},"content":"                handleHelp();","lastModifiedDate":"2023-10-12"},{"lineNumber":183,"author":{"gitId":"ChongWeiJie29"},"content":"            }","lastModifiedDate":"2023-10-12"},{"lineNumber":184,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":185,"author":{"gitId":"ChongWeiJie29"},"content":"            if (commandResult.isExit()) {","lastModifiedDate":"2023-10-12"},{"lineNumber":186,"author":{"gitId":"ChongWeiJie29"},"content":"                handleExit();","lastModifiedDate":"2023-10-12"},{"lineNumber":187,"author":{"gitId":"ChongWeiJie29"},"content":"            }","lastModifiedDate":"2023-10-12"},{"lineNumber":188,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":189,"author":{"gitId":"ChongWeiJie29"},"content":"            return commandResult;","lastModifiedDate":"2023-10-12"},{"lineNumber":190,"author":{"gitId":"ChongWeiJie29"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2023-10-12"},{"lineNumber":191,"author":{"gitId":"ChongWeiJie29"},"content":"            logger.info(\"An error occurred while executing command: \" + commandText);","lastModifiedDate":"2023-10-12"},{"lineNumber":192,"author":{"gitId":"ChongWeiJie29"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2023-10-12"},{"lineNumber":193,"author":{"gitId":"ChongWeiJie29"},"content":"            throw e;","lastModifiedDate":"2023-10-12"},{"lineNumber":194,"author":{"gitId":"ChongWeiJie29"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":195,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":196,"author":{"gitId":"ChongWeiJie29"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"ChongWeiJie29":196}},{"path":"src/main/java/seedu/address/ui/PrescriptionCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ChongWeiJie29"},"content":"package seedu.address.ui;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"ChongWeiJie29"},"content":"// import java.util.Comparator;","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"ChongWeiJie29"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"ChongWeiJie29"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"ChongWeiJie29"},"content":"// import javafx.scene.layout.FlowPane;","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"ChongWeiJie29"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"ChongWeiJie29"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"ChongWeiJie29"},"content":"import seedu.address.model.prescription.Prescription;","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"ChongWeiJie29"},"content":"/**","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"ChongWeiJie29"},"content":" * An UI component that displays information of a {@code Prescription}.","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"ChongWeiJie29"},"content":" */","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"ChongWeiJie29"},"content":"public class PrescriptionCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"ChongWeiJie29"},"content":"    private static final String FXML \u003d \"PrescriptionListCard.fxml\";","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"ChongWeiJie29"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":20,"author":{"gitId":"ChongWeiJie29"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"ChongWeiJie29"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2023-10-12"},{"lineNumber":22,"author":{"gitId":"ChongWeiJie29"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"ChongWeiJie29"},"content":"     *","lastModifiedDate":"2023-10-12"},{"lineNumber":24,"author":{"gitId":"ChongWeiJie29"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":25,"author":{"gitId":"ChongWeiJie29"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":27,"author":{"gitId":"ChongWeiJie29"},"content":"    public final Prescription prescription;","lastModifiedDate":"2023-10-12"},{"lineNumber":28,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":29,"author":{"gitId":"ChongWeiJie29"},"content":"    @FXML","lastModifiedDate":"2023-10-12"},{"lineNumber":30,"author":{"gitId":"ChongWeiJie29"},"content":"    private HBox cardPane;","lastModifiedDate":"2023-10-12"},{"lineNumber":31,"author":{"gitId":"ChongWeiJie29"},"content":"    @FXML","lastModifiedDate":"2023-10-12"},{"lineNumber":32,"author":{"gitId":"ChongWeiJie29"},"content":"    private Label name;","lastModifiedDate":"2023-10-12"},{"lineNumber":33,"author":{"gitId":"ChongWeiJie29"},"content":"    @FXML","lastModifiedDate":"2023-10-12"},{"lineNumber":34,"author":{"gitId":"ChongWeiJie29"},"content":"    private Label id;","lastModifiedDate":"2023-10-12"},{"lineNumber":35,"author":{"gitId":"ChongWeiJie29"},"content":"    @FXML","lastModifiedDate":"2023-10-12"},{"lineNumber":36,"author":{"gitId":"ChongWeiJie29"},"content":"    private Label dosage;","lastModifiedDate":"2023-10-12"},{"lineNumber":37,"author":{"gitId":"ChongWeiJie29"},"content":"    @FXML","lastModifiedDate":"2023-10-12"},{"lineNumber":38,"author":{"gitId":"ChongWeiJie29"},"content":"    private Label frequency;","lastModifiedDate":"2023-10-12"},{"lineNumber":39,"author":{"gitId":"ChongWeiJie29"},"content":"    @FXML","lastModifiedDate":"2023-10-12"},{"lineNumber":40,"author":{"gitId":"ChongWeiJie29"},"content":"    private Label startDate;","lastModifiedDate":"2023-10-12"},{"lineNumber":41,"author":{"gitId":"ChongWeiJie29"},"content":"    @FXML","lastModifiedDate":"2023-10-12"},{"lineNumber":42,"author":{"gitId":"ChongWeiJie29"},"content":"    private Label endDate;","lastModifiedDate":"2023-10-12"},{"lineNumber":43,"author":{"gitId":"ChongWeiJie29"},"content":"    @FXML","lastModifiedDate":"2023-10-12"},{"lineNumber":44,"author":{"gitId":"ChongWeiJie29"},"content":"    private Label expiryDate;","lastModifiedDate":"2023-10-12"},{"lineNumber":45,"author":{"gitId":"ChongWeiJie29"},"content":"    @FXML","lastModifiedDate":"2023-10-12"},{"lineNumber":46,"author":{"gitId":"ChongWeiJie29"},"content":"    private Label totalStock;","lastModifiedDate":"2023-10-12"},{"lineNumber":47,"author":{"gitId":"ChongWeiJie29"},"content":"    @FXML","lastModifiedDate":"2023-10-12"},{"lineNumber":48,"author":{"gitId":"jingyu987"},"content":"    private Label consumptionCount;","lastModifiedDate":"2023-10-15"},{"lineNumber":49,"author":{"gitId":"jingyu987"},"content":"    @FXML","lastModifiedDate":"2023-10-15"},{"lineNumber":50,"author":{"gitId":"ChongWeiJie29"},"content":"    private Label note;","lastModifiedDate":"2023-10-12"},{"lineNumber":51,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":52,"author":{"gitId":"RoeReRe"},"content":"    private String dosageHeader \u003d \"Dosage: \";","lastModifiedDate":"2023-10-15"},{"lineNumber":53,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":54,"author":{"gitId":"RoeReRe"},"content":"    private String frequencyHeader \u003d \"Frequency: \";","lastModifiedDate":"2023-10-15"},{"lineNumber":55,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":56,"author":{"gitId":"RoeReRe"},"content":"    private String startDateHeader \u003d \"Start date: \";","lastModifiedDate":"2023-10-15"},{"lineNumber":57,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":58,"author":{"gitId":"RoeReRe"},"content":"    private String endDateHeader \u003d \"End date: \";","lastModifiedDate":"2023-10-15"},{"lineNumber":59,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":60,"author":{"gitId":"RoeReRe"},"content":"    private String expiryDateHeader \u003d \"Expiry date: \";","lastModifiedDate":"2023-10-15"},{"lineNumber":61,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":62,"author":{"gitId":"RoeReRe"},"content":"    private String totalStockHeader \u003d \"Total stock: \";","lastModifiedDate":"2023-10-15"},{"lineNumber":63,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":64,"author":{"gitId":"jingyu987"},"content":"    private String consumptionCountHeader \u003d \"Consumption count: \";","lastModifiedDate":"2023-10-15"},{"lineNumber":65,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":66,"author":{"gitId":"RoeReRe"},"content":"    private String noteHeader \u003d \"Note: \";","lastModifiedDate":"2023-10-15"},{"lineNumber":67,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":68,"author":{"gitId":"ChongWeiJie29"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":69,"author":{"gitId":"ChongWeiJie29"},"content":"     * Creates a {@code PrescriptionCode} with the given {@code Prescription} and index to display.","lastModifiedDate":"2023-10-12"},{"lineNumber":70,"author":{"gitId":"ChongWeiJie29"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":71,"author":{"gitId":"ChongWeiJie29"},"content":"    public PrescriptionCard(Prescription prescription, int displayedIndex) {","lastModifiedDate":"2023-10-12"},{"lineNumber":72,"author":{"gitId":"ChongWeiJie29"},"content":"        super(FXML);","lastModifiedDate":"2023-10-12"},{"lineNumber":73,"author":{"gitId":"ChongWeiJie29"},"content":"        this.prescription \u003d prescription;","lastModifiedDate":"2023-10-12"},{"lineNumber":74,"author":{"gitId":"ChongWeiJie29"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2023-10-12"},{"lineNumber":75,"author":{"gitId":"ChongWeiJie29"},"content":"        name.setText(prescription.getName().fullName);","lastModifiedDate":"2023-10-12"},{"lineNumber":76,"author":{"gitId":"RoeReRe"},"content":"        dosage.setText(dosageHeader + prescription.getDosage().fullDosage);","lastModifiedDate":"2023-10-15"},{"lineNumber":77,"author":{"gitId":"RoeReRe"},"content":"        frequency.setText(frequencyHeader + prescription.getFrequency().fullFrequency);","lastModifiedDate":"2023-10-15"},{"lineNumber":78,"author":{"gitId":"RoeReRe"},"content":"        startDate.setText(startDateHeader + prescription.getStartDate().fullDate);","lastModifiedDate":"2023-10-15"},{"lineNumber":79,"author":{"gitId":"RoeReRe"},"content":"        endDate.setText(endDateHeader + prescription.getEndDate().fullDate);","lastModifiedDate":"2023-10-15"},{"lineNumber":80,"author":{"gitId":"RoeReRe"},"content":"        expiryDate.setText(expiryDateHeader + prescription.getExpiryDate().fullDate);","lastModifiedDate":"2023-10-15"},{"lineNumber":81,"author":{"gitId":"jingyu987"},"content":"        totalStock.setText(totalStockHeader + prescription.getTotalStock().getFullStock());","lastModifiedDate":"2023-10-16"},{"lineNumber":82,"author":{"gitId":"jingyu987"},"content":"        consumptionCount.setText(consumptionCountHeader + prescription.getConsumptionCount().getConsumptionCount()","lastModifiedDate":"2023-10-15"},{"lineNumber":83,"author":{"gitId":"jingyu987"},"content":"                                + \"/\" + prescription.getDosage().fullDosage);","lastModifiedDate":"2023-10-15"},{"lineNumber":84,"author":{"gitId":"RoeReRe"},"content":"        note.setText(noteHeader + prescription.getNote().fullNote);","lastModifiedDate":"2023-10-15"},{"lineNumber":85,"author":{"gitId":"ChongWeiJie29"},"content":"        // prescription.getTags().stream()","lastModifiedDate":"2023-10-12"},{"lineNumber":86,"author":{"gitId":"ChongWeiJie29"},"content":"        //         .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2023-10-12"},{"lineNumber":87,"author":{"gitId":"ChongWeiJie29"},"content":"        //         .forEach(tag -\u003e tags.getChildren().add(new Label(tag.tagName)));","lastModifiedDate":"2023-10-12"},{"lineNumber":88,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":89,"author":{"gitId":"ChongWeiJie29"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"jingyu987":7,"ChongWeiJie29":62,"RoeReRe":20}},{"path":"src/main/java/seedu/address/ui/PrescriptionListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ChongWeiJie29"},"content":"package seedu.address.ui;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"ChongWeiJie29"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"ChongWeiJie29"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"ChongWeiJie29"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"ChongWeiJie29"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"ChongWeiJie29"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"ChongWeiJie29"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"ChongWeiJie29"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"ChongWeiJie29"},"content":"import seedu.address.model.prescription.Prescription;","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"ChongWeiJie29"},"content":"/**","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"ChongWeiJie29"},"content":" * Panel containing the list of prescriptions.","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"ChongWeiJie29"},"content":" */","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"ChongWeiJie29"},"content":"public class PrescriptionListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"ChongWeiJie29"},"content":"    private static final String FXML \u003d \"PrescriptionListPanel.fxml\";","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"ChongWeiJie29"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(PrescriptionListPanel.class);","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":20,"author":{"gitId":"ChongWeiJie29"},"content":"    @FXML","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"ChongWeiJie29"},"content":"    private ListView\u003cPrescription\u003e prescriptionListView;","lastModifiedDate":"2023-10-12"},{"lineNumber":22,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"ChongWeiJie29"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":24,"author":{"gitId":"ChongWeiJie29"},"content":"     * Creates a {@code PrescriptionListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2023-10-12"},{"lineNumber":25,"author":{"gitId":"ChongWeiJie29"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"ChongWeiJie29"},"content":"    public PrescriptionListPanel(ObservableList\u003cPrescription\u003e prescriptionList) {","lastModifiedDate":"2023-10-12"},{"lineNumber":27,"author":{"gitId":"ChongWeiJie29"},"content":"        super(FXML);","lastModifiedDate":"2023-10-12"},{"lineNumber":28,"author":{"gitId":"ChongWeiJie29"},"content":"        prescriptionListView.setItems(prescriptionList);","lastModifiedDate":"2023-10-12"},{"lineNumber":29,"author":{"gitId":"ChongWeiJie29"},"content":"        prescriptionListView.setCellFactory(listView -\u003e new PrescriptionListViewCell());","lastModifiedDate":"2023-10-12"},{"lineNumber":30,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":31,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":32,"author":{"gitId":"ChongWeiJie29"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":33,"author":{"gitId":"ChongWeiJie29"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Prescription} using a {@code PrescriptionCard}.","lastModifiedDate":"2023-10-12"},{"lineNumber":34,"author":{"gitId":"ChongWeiJie29"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":35,"author":{"gitId":"ChongWeiJie29"},"content":"    class PrescriptionListViewCell extends ListCell\u003cPrescription\u003e {","lastModifiedDate":"2023-10-12"},{"lineNumber":36,"author":{"gitId":"ChongWeiJie29"},"content":"        @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":37,"author":{"gitId":"ChongWeiJie29"},"content":"        protected void updateItem(Prescription prescription, boolean empty) {","lastModifiedDate":"2023-10-12"},{"lineNumber":38,"author":{"gitId":"ChongWeiJie29"},"content":"            super.updateItem(prescription, empty);","lastModifiedDate":"2023-10-12"},{"lineNumber":39,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":40,"author":{"gitId":"ChongWeiJie29"},"content":"            if (empty || prescription \u003d\u003d null) {","lastModifiedDate":"2023-10-12"},{"lineNumber":41,"author":{"gitId":"ChongWeiJie29"},"content":"                setGraphic(null);","lastModifiedDate":"2023-10-12"},{"lineNumber":42,"author":{"gitId":"ChongWeiJie29"},"content":"                setText(null);","lastModifiedDate":"2023-10-12"},{"lineNumber":43,"author":{"gitId":"ChongWeiJie29"},"content":"            } else {","lastModifiedDate":"2023-10-12"},{"lineNumber":44,"author":{"gitId":"ChongWeiJie29"},"content":"                setGraphic(new PrescriptionCard(prescription, getIndex() + 1).getRoot());","lastModifiedDate":"2023-10-12"},{"lineNumber":45,"author":{"gitId":"ChongWeiJie29"},"content":"            }","lastModifiedDate":"2023-10-12"},{"lineNumber":46,"author":{"gitId":"ChongWeiJie29"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":47,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":48,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":49,"author":{"gitId":"ChongWeiJie29"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"ChongWeiJie29":49}},{"path":"src/main/java/seedu/address/ui/UiManagerPrescription.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ChongWeiJie29"},"content":"package seedu.address.ui;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"ChongWeiJie29"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"ChongWeiJie29"},"content":"import javafx.application.Platform;","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"ChongWeiJie29"},"content":"import javafx.scene.control.Alert;","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"ChongWeiJie29"},"content":"import javafx.scene.control.Alert.AlertType;","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"ChongWeiJie29"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"ChongWeiJie29"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"ChongWeiJie29"},"content":"import seedu.address.MainAppPrescription;","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"ChongWeiJie29"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"ChongWeiJie29"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"ChongWeiJie29"},"content":"import seedu.address.logic.LogicPrescription;","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"ChongWeiJie29"},"content":"/**","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"ChongWeiJie29"},"content":" * The manager of the UI component.","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"ChongWeiJie29"},"content":" */","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"ChongWeiJie29"},"content":"public class UiManagerPrescription implements Ui {","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":20,"author":{"gitId":"ChongWeiJie29"},"content":"    public static final String ALERT_DIALOG_PANE_FIELD_ID \u003d \"alertDialogPane\";","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":22,"author":{"gitId":"ChongWeiJie29"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(UiManagerPrescription.class);","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"ChongWeiJie29"},"content":"    private static final String ICON_APPLICATION \u003d \"/images/address_book_32.png\";","lastModifiedDate":"2023-10-12"},{"lineNumber":24,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":25,"author":{"gitId":"ChongWeiJie29"},"content":"    private LogicPrescription logic;","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"ChongWeiJie29"},"content":"    private MainWindowPrescription mainWindow;","lastModifiedDate":"2023-10-12"},{"lineNumber":27,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":28,"author":{"gitId":"ChongWeiJie29"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":29,"author":{"gitId":"ChongWeiJie29"},"content":"     * Creates a {@code UiManagerPrescription} with the given {@code Logic}.","lastModifiedDate":"2023-10-12"},{"lineNumber":30,"author":{"gitId":"ChongWeiJie29"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":31,"author":{"gitId":"ChongWeiJie29"},"content":"    public UiManagerPrescription(LogicPrescription logic) {","lastModifiedDate":"2023-10-12"},{"lineNumber":32,"author":{"gitId":"ChongWeiJie29"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2023-10-12"},{"lineNumber":33,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":34,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":35,"author":{"gitId":"ChongWeiJie29"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":36,"author":{"gitId":"ChongWeiJie29"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2023-10-12"},{"lineNumber":37,"author":{"gitId":"ChongWeiJie29"},"content":"        logger.info(\"Starting UI...\");","lastModifiedDate":"2023-10-12"},{"lineNumber":38,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":39,"author":{"gitId":"ChongWeiJie29"},"content":"        //Set the application icon.","lastModifiedDate":"2023-10-12"},{"lineNumber":40,"author":{"gitId":"ChongWeiJie29"},"content":"        primaryStage.getIcons().add(getImage(ICON_APPLICATION));","lastModifiedDate":"2023-10-12"},{"lineNumber":41,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":42,"author":{"gitId":"ChongWeiJie29"},"content":"        try {","lastModifiedDate":"2023-10-12"},{"lineNumber":43,"author":{"gitId":"ChongWeiJie29"},"content":"            mainWindow \u003d new MainWindowPrescription(primaryStage, logic);","lastModifiedDate":"2023-10-12"},{"lineNumber":44,"author":{"gitId":"ChongWeiJie29"},"content":"            mainWindow.show(); //This should be called before creating other UI parts","lastModifiedDate":"2023-10-12"},{"lineNumber":45,"author":{"gitId":"ChongWeiJie29"},"content":"            mainWindow.fillInnerParts();","lastModifiedDate":"2023-10-12"},{"lineNumber":46,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":47,"author":{"gitId":"ChongWeiJie29"},"content":"        } catch (Throwable e) {","lastModifiedDate":"2023-10-12"},{"lineNumber":48,"author":{"gitId":"ChongWeiJie29"},"content":"            logger.severe(StringUtil.getDetails(e));","lastModifiedDate":"2023-10-12"},{"lineNumber":49,"author":{"gitId":"ChongWeiJie29"},"content":"            showFatalErrorDialogAndShutdown(\"Fatal error during initializing\", e);","lastModifiedDate":"2023-10-12"},{"lineNumber":50,"author":{"gitId":"ChongWeiJie29"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":51,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":52,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":53,"author":{"gitId":"ChongWeiJie29"},"content":"    private Image getImage(String imagePath) {","lastModifiedDate":"2023-10-12"},{"lineNumber":54,"author":{"gitId":"ChongWeiJie29"},"content":"        return new Image(MainAppPrescription.class.getResourceAsStream(imagePath));","lastModifiedDate":"2023-10-12"},{"lineNumber":55,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":56,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":57,"author":{"gitId":"ChongWeiJie29"},"content":"    void showAlertDialogAndWait(Alert.AlertType type, String title, String headerText, String contentText) {","lastModifiedDate":"2023-10-12"},{"lineNumber":58,"author":{"gitId":"ChongWeiJie29"},"content":"        showAlertDialogAndWait(mainWindow.getPrimaryStage(), type, title, headerText, contentText);","lastModifiedDate":"2023-10-12"},{"lineNumber":59,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":60,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":61,"author":{"gitId":"ChongWeiJie29"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":62,"author":{"gitId":"ChongWeiJie29"},"content":"     * Shows an alert dialog on {@code owner} with the given parameters.","lastModifiedDate":"2023-10-12"},{"lineNumber":63,"author":{"gitId":"ChongWeiJie29"},"content":"     * This method only returns after the user has closed the alert dialog.","lastModifiedDate":"2023-10-12"},{"lineNumber":64,"author":{"gitId":"ChongWeiJie29"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":65,"author":{"gitId":"ChongWeiJie29"},"content":"    private static void showAlertDialogAndWait(Stage owner, AlertType type, String title, String headerText,","lastModifiedDate":"2023-10-12"},{"lineNumber":66,"author":{"gitId":"ChongWeiJie29"},"content":"                                               String contentText) {","lastModifiedDate":"2023-10-12"},{"lineNumber":67,"author":{"gitId":"ChongWeiJie29"},"content":"        final Alert alert \u003d new Alert(type);","lastModifiedDate":"2023-10-12"},{"lineNumber":68,"author":{"gitId":"ChongWeiJie29"},"content":"        alert.getDialogPane().getStylesheets().add(\"view/DarkTheme.css\");","lastModifiedDate":"2023-10-12"},{"lineNumber":69,"author":{"gitId":"ChongWeiJie29"},"content":"        alert.initOwner(owner);","lastModifiedDate":"2023-10-12"},{"lineNumber":70,"author":{"gitId":"ChongWeiJie29"},"content":"        alert.setTitle(title);","lastModifiedDate":"2023-10-12"},{"lineNumber":71,"author":{"gitId":"ChongWeiJie29"},"content":"        alert.setHeaderText(headerText);","lastModifiedDate":"2023-10-12"},{"lineNumber":72,"author":{"gitId":"ChongWeiJie29"},"content":"        alert.setContentText(contentText);","lastModifiedDate":"2023-10-12"},{"lineNumber":73,"author":{"gitId":"ChongWeiJie29"},"content":"        alert.getDialogPane().setId(ALERT_DIALOG_PANE_FIELD_ID);","lastModifiedDate":"2023-10-12"},{"lineNumber":74,"author":{"gitId":"ChongWeiJie29"},"content":"        alert.showAndWait();","lastModifiedDate":"2023-10-12"},{"lineNumber":75,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":76,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":77,"author":{"gitId":"ChongWeiJie29"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":78,"author":{"gitId":"ChongWeiJie29"},"content":"     * Shows an error alert dialog with {@code title} and error message, {@code e},","lastModifiedDate":"2023-10-12"},{"lineNumber":79,"author":{"gitId":"ChongWeiJie29"},"content":"     * and exits the application after the user has closed the alert dialog.","lastModifiedDate":"2023-10-12"},{"lineNumber":80,"author":{"gitId":"ChongWeiJie29"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":81,"author":{"gitId":"ChongWeiJie29"},"content":"    private void showFatalErrorDialogAndShutdown(String title, Throwable e) {","lastModifiedDate":"2023-10-12"},{"lineNumber":82,"author":{"gitId":"ChongWeiJie29"},"content":"        logger.severe(title + \" \" + e.getMessage() + StringUtil.getDetails(e));","lastModifiedDate":"2023-10-12"},{"lineNumber":83,"author":{"gitId":"ChongWeiJie29"},"content":"        showAlertDialogAndWait(Alert.AlertType.ERROR, title, e.getMessage(), e.toString());","lastModifiedDate":"2023-10-12"},{"lineNumber":84,"author":{"gitId":"ChongWeiJie29"},"content":"        Platform.exit();","lastModifiedDate":"2023-10-12"},{"lineNumber":85,"author":{"gitId":"ChongWeiJie29"},"content":"        System.exit(1);","lastModifiedDate":"2023-10-12"},{"lineNumber":86,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":87,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":88,"author":{"gitId":"ChongWeiJie29"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"ChongWeiJie29":88}},{"path":"src/main/resources/view/MainWindowPrescription.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ChongWeiJie29"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"ChongWeiJie29"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"ChongWeiJie29"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"ChongWeiJie29"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"ChongWeiJie29"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"ChongWeiJie29"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"ChongWeiJie29"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"ChongWeiJie29"},"content":"\u003c?import javafx.scene.control.SplitPane?\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"ChongWeiJie29"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"ChongWeiJie29"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"ChongWeiJie29"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"ChongWeiJie29"},"content":"\u003cfx:root type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"ChongWeiJie29"},"content":"         title\u003d\"Address App\" minWidth\u003d\"450\" minHeight\u003d\"600\" onCloseRequest\u003d\"#handleExit\"\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"ChongWeiJie29"},"content":"  \u003cicons\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"ChongWeiJie29"},"content":"    \u003cImage url\u003d\"@/images/address_book_32.png\" /\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"ChongWeiJie29"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"ChongWeiJie29"},"content":"  \u003cscene\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":20,"author":{"gitId":"ChongWeiJie29"},"content":"    \u003cScene\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"ChongWeiJie29"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":22,"author":{"gitId":"ChongWeiJie29"},"content":"        \u003cURL value\u003d\"@DarkTheme.css\" /\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"ChongWeiJie29"},"content":"        \u003cURL value\u003d\"@Extensions.css\" /\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":24,"author":{"gitId":"ChongWeiJie29"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":25,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"ChongWeiJie29"},"content":"      \u003cVBox\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":27,"author":{"gitId":"ChongWeiJie29"},"content":"        \u003cMenuBar fx:id\u003d\"menuBar\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":28,"author":{"gitId":"ChongWeiJie29"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":29,"author":{"gitId":"ChongWeiJie29"},"content":"            \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\" /\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":30,"author":{"gitId":"ChongWeiJie29"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":31,"author":{"gitId":"ChongWeiJie29"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":32,"author":{"gitId":"ChongWeiJie29"},"content":"            \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\" /\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":33,"author":{"gitId":"ChongWeiJie29"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":34,"author":{"gitId":"ChongWeiJie29"},"content":"        \u003c/MenuBar\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":35,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":36,"author":{"gitId":"ChongWeiJie29"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"commandBoxPlaceholder\" styleClass\u003d\"pane-with-border\"\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":37,"author":{"gitId":"ChongWeiJie29"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":38,"author":{"gitId":"ChongWeiJie29"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":39,"author":{"gitId":"ChongWeiJie29"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":40,"author":{"gitId":"ChongWeiJie29"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":41,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":42,"author":{"gitId":"ChongWeiJie29"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"resultDisplayPlaceholder\" styleClass\u003d\"pane-with-border\"","lastModifiedDate":"2023-10-12"},{"lineNumber":43,"author":{"gitId":"ChongWeiJie29"},"content":"                   minHeight\u003d\"100\" prefHeight\u003d\"100\" maxHeight\u003d\"100\"\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":44,"author":{"gitId":"ChongWeiJie29"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":45,"author":{"gitId":"ChongWeiJie29"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":46,"author":{"gitId":"ChongWeiJie29"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":47,"author":{"gitId":"ChongWeiJie29"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":48,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":49,"author":{"gitId":"ChongWeiJie29"},"content":"        \u003cVBox fx:id\u003d\"personList\" styleClass\u003d\"pane-with-border\" minWidth\u003d\"340\" prefWidth\u003d\"340\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":50,"author":{"gitId":"ChongWeiJie29"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":51,"author":{"gitId":"ChongWeiJie29"},"content":"            \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\" /\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":52,"author":{"gitId":"ChongWeiJie29"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":53,"author":{"gitId":"ChongWeiJie29"},"content":"          \u003cStackPane fx:id\u003d\"prescriptionListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":54,"author":{"gitId":"ChongWeiJie29"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":55,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":56,"author":{"gitId":"ChongWeiJie29"},"content":"        \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" VBox.vgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":57,"author":{"gitId":"ChongWeiJie29"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":58,"author":{"gitId":"ChongWeiJie29"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":59,"author":{"gitId":"ChongWeiJie29"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":60,"author":{"gitId":"ChongWeiJie29"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"ChongWeiJie29":60}},{"path":"src/main/resources/view/PrescriptionListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ChongWeiJie29"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"ChongWeiJie29"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"ChongWeiJie29"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"ChongWeiJie29"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"ChongWeiJie29"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"ChongWeiJie29"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"ChongWeiJie29"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"ChongWeiJie29"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"ChongWeiJie29"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"ChongWeiJie29"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"ChongWeiJie29"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"ChongWeiJie29"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"ChongWeiJie29"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"ChongWeiJie29"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"ChongWeiJie29"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"ChongWeiJie29"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"ChongWeiJie29"},"content":"        \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":20,"author":{"gitId":"ChongWeiJie29"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"ChongWeiJie29"},"content":"      \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":22,"author":{"gitId":"ChongWeiJie29"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"ChongWeiJie29"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":24,"author":{"gitId":"ChongWeiJie29"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":25,"author":{"gitId":"ChongWeiJie29"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"ChongWeiJie29"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":27,"author":{"gitId":"ChongWeiJie29"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":28,"author":{"gitId":"ChongWeiJie29"},"content":"        \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":29,"author":{"gitId":"ChongWeiJie29"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":30,"author":{"gitId":"ChongWeiJie29"},"content":"      \u003c!--FlowPane fx:id\u003d\"tags\" /--\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":31,"author":{"gitId":"ChongWeiJie29"},"content":"      \u003cLabel fx:id\u003d\"dosage\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$dosage\" /\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":32,"author":{"gitId":"ChongWeiJie29"},"content":"      \u003cLabel fx:id\u003d\"frequency\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$frequency\" /\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":33,"author":{"gitId":"ChongWeiJie29"},"content":"      \u003cLabel fx:id\u003d\"startDate\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$startDate\" /\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":34,"author":{"gitId":"ChongWeiJie29"},"content":"      \u003cLabel fx:id\u003d\"endDate\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$endDate\" /\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":35,"author":{"gitId":"ChongWeiJie29"},"content":"      \u003cLabel fx:id\u003d\"expiryDate\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$expiryDate\" /\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":36,"author":{"gitId":"ChongWeiJie29"},"content":"      \u003cLabel fx:id\u003d\"totalStock\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$totalStock\" /\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":37,"author":{"gitId":"jingyu987"},"content":"      \u003cLabel fx:id\u003d\"consumptionCount\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$consumptionCount\" /\u003e","lastModifiedDate":"2023-10-15"},{"lineNumber":38,"author":{"gitId":"ChongWeiJie29"},"content":"      \u003cLabel fx:id\u003d\"note\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$note\" /\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":39,"author":{"gitId":"ChongWeiJie29"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":40,"author":{"gitId":"ChongWeiJie29"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":41,"author":{"gitId":"ChongWeiJie29"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"jingyu987":1,"ChongWeiJie29":40}},{"path":"src/main/resources/view/PrescriptionListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ChongWeiJie29"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"ChongWeiJie29"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"ChongWeiJie29"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"ChongWeiJie29"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"ChongWeiJie29"},"content":"  \u003cListView fx:id\u003d\"prescriptionListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"ChongWeiJie29"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"ChongWeiJie29":8}},{"path":"src/test/java/seedu/address/logic/LogicManagerPrescriptionTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"RoeReRe"},"content":"package seedu.address.logic;","lastModifiedDate":"2023-10-16"},{"lineNumber":2,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":3,"author":{"gitId":"RoeReRe"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-16"},{"lineNumber":4,"author":{"gitId":"RoeReRe"},"content":"import static seedu.address.logic.MessagesPrescription.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-10-16"},{"lineNumber":5,"author":{"gitId":"RoeReRe"},"content":"import static seedu.address.logic.commands.CommandPrescriptionTestUtil.DOSAGE_DESC_ASPIRIN;","lastModifiedDate":"2023-10-16"},{"lineNumber":6,"author":{"gitId":"RoeReRe"},"content":"import static seedu.address.logic.commands.CommandPrescriptionTestUtil.END_DATE_DESC_ASPIRIN;","lastModifiedDate":"2023-10-16"},{"lineNumber":7,"author":{"gitId":"RoeReRe"},"content":"import static seedu.address.logic.commands.CommandPrescriptionTestUtil.EXPIRY_DATE_DESC_ASPIRIN;","lastModifiedDate":"2023-10-16"},{"lineNumber":8,"author":{"gitId":"RoeReRe"},"content":"import static seedu.address.logic.commands.CommandPrescriptionTestUtil.FREQUENCY_DESC_ASPIRIN;","lastModifiedDate":"2023-10-16"},{"lineNumber":9,"author":{"gitId":"RoeReRe"},"content":"import static seedu.address.logic.commands.CommandPrescriptionTestUtil.NAME_DESC_ASPIRIN;","lastModifiedDate":"2023-10-16"},{"lineNumber":10,"author":{"gitId":"RoeReRe"},"content":"import static seedu.address.logic.commands.CommandPrescriptionTestUtil.NOTE_DESC_ASPIRIN;","lastModifiedDate":"2023-10-16"},{"lineNumber":11,"author":{"gitId":"RoeReRe"},"content":"import static seedu.address.logic.commands.CommandPrescriptionTestUtil.START_DATE_DESC_ASPIRIN;","lastModifiedDate":"2023-10-16"},{"lineNumber":12,"author":{"gitId":"RoeReRe"},"content":"import static seedu.address.logic.commands.CommandPrescriptionTestUtil.STOCK_DESC_ASPIRIN;","lastModifiedDate":"2023-10-16"},{"lineNumber":13,"author":{"gitId":"RoeReRe"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-16"},{"lineNumber":14,"author":{"gitId":"RoeReRe"},"content":"import static seedu.address.testutil.TypicalPrescriptions.ASPIRIN;","lastModifiedDate":"2023-10-16"},{"lineNumber":15,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":16,"author":{"gitId":"RoeReRe"},"content":"import java.io.IOException;","lastModifiedDate":"2023-10-16"},{"lineNumber":17,"author":{"gitId":"RoeReRe"},"content":"import java.nio.file.AccessDeniedException;","lastModifiedDate":"2023-10-16"},{"lineNumber":18,"author":{"gitId":"RoeReRe"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-10-16"},{"lineNumber":19,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":20,"author":{"gitId":"RoeReRe"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-10-16"},{"lineNumber":21,"author":{"gitId":"RoeReRe"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-16"},{"lineNumber":22,"author":{"gitId":"RoeReRe"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2023-10-16"},{"lineNumber":23,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":24,"author":{"gitId":"RoeReRe"},"content":"import seedu.address.logic.commands.AddPrescriptionCommand;","lastModifiedDate":"2023-10-16"},{"lineNumber":25,"author":{"gitId":"RoeReRe"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2023-10-16"},{"lineNumber":26,"author":{"gitId":"RoeReRe"},"content":"import seedu.address.logic.commands.ListPrescriptionCommand;","lastModifiedDate":"2023-10-16"},{"lineNumber":27,"author":{"gitId":"RoeReRe"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-16"},{"lineNumber":28,"author":{"gitId":"RoeReRe"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-16"},{"lineNumber":29,"author":{"gitId":"RoeReRe"},"content":"import seedu.address.model.ModelManagerPrescription;","lastModifiedDate":"2023-10-16"},{"lineNumber":30,"author":{"gitId":"RoeReRe"},"content":"import seedu.address.model.ModelPrescription;","lastModifiedDate":"2023-10-16"},{"lineNumber":31,"author":{"gitId":"RoeReRe"},"content":"import seedu.address.model.ReadOnlyPrescriptionList;","lastModifiedDate":"2023-10-16"},{"lineNumber":32,"author":{"gitId":"RoeReRe"},"content":"import seedu.address.model.UserPrefsPrescription;","lastModifiedDate":"2023-10-16"},{"lineNumber":33,"author":{"gitId":"RoeReRe"},"content":"import seedu.address.model.prescription.Prescription;","lastModifiedDate":"2023-10-16"},{"lineNumber":34,"author":{"gitId":"RoeReRe"},"content":"import seedu.address.storage.JsonPrescriptionListStorage;","lastModifiedDate":"2023-10-16"},{"lineNumber":35,"author":{"gitId":"RoeReRe"},"content":"import seedu.address.storage.JsonUserPrefsStoragePrescription;","lastModifiedDate":"2023-10-16"},{"lineNumber":36,"author":{"gitId":"RoeReRe"},"content":"import seedu.address.storage.StorageManagerPrescription;","lastModifiedDate":"2023-10-16"},{"lineNumber":37,"author":{"gitId":"RoeReRe"},"content":"import seedu.address.testutil.PrescriptionBuilder;","lastModifiedDate":"2023-10-16"},{"lineNumber":38,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":39,"author":{"gitId":"RoeReRe"},"content":"public class LogicManagerPrescriptionTest {","lastModifiedDate":"2023-10-16"},{"lineNumber":40,"author":{"gitId":"RoeReRe"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy IO exception\");","lastModifiedDate":"2023-10-16"},{"lineNumber":41,"author":{"gitId":"RoeReRe"},"content":"    private static final IOException DUMMY_AD_EXCEPTION \u003d new AccessDeniedException(\"dummy access denied exception\");","lastModifiedDate":"2023-10-16"},{"lineNumber":42,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":43,"author":{"gitId":"RoeReRe"},"content":"    @TempDir","lastModifiedDate":"2023-10-16"},{"lineNumber":44,"author":{"gitId":"RoeReRe"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2023-10-16"},{"lineNumber":45,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":46,"author":{"gitId":"RoeReRe"},"content":"    private ModelPrescription model \u003d new ModelManagerPrescription();","lastModifiedDate":"2023-10-16"},{"lineNumber":47,"author":{"gitId":"RoeReRe"},"content":"    private LogicPrescription logic;","lastModifiedDate":"2023-10-16"},{"lineNumber":48,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":49,"author":{"gitId":"RoeReRe"},"content":"    @BeforeEach","lastModifiedDate":"2023-10-16"},{"lineNumber":50,"author":{"gitId":"RoeReRe"},"content":"    public void setUp() {","lastModifiedDate":"2023-10-16"},{"lineNumber":51,"author":{"gitId":"RoeReRe"},"content":"        JsonPrescriptionListStorage prescriptionListStorage \u003d","lastModifiedDate":"2023-10-16"},{"lineNumber":52,"author":{"gitId":"RoeReRe"},"content":"            new JsonPrescriptionListStorage(temporaryFolder.resolve(\"prescriptionList.json\"));","lastModifiedDate":"2023-10-16"},{"lineNumber":53,"author":{"gitId":"RoeReRe"},"content":"        JsonUserPrefsStoragePrescription userPrefsStorage \u003d new JsonUserPrefsStoragePrescription(","lastModifiedDate":"2023-10-16"},{"lineNumber":54,"author":{"gitId":"RoeReRe"},"content":"            temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2023-10-16"},{"lineNumber":55,"author":{"gitId":"RoeReRe"},"content":"        StorageManagerPrescription storage \u003d new StorageManagerPrescription(prescriptionListStorage, userPrefsStorage);","lastModifiedDate":"2023-10-16"},{"lineNumber":56,"author":{"gitId":"RoeReRe"},"content":"        logic \u003d new LogicManagerPrescription(model, storage);","lastModifiedDate":"2023-10-16"},{"lineNumber":57,"author":{"gitId":"RoeReRe"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":58,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":59,"author":{"gitId":"RoeReRe"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":60,"author":{"gitId":"RoeReRe"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2023-10-16"},{"lineNumber":61,"author":{"gitId":"RoeReRe"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2023-10-16"},{"lineNumber":62,"author":{"gitId":"RoeReRe"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2023-10-16"},{"lineNumber":63,"author":{"gitId":"RoeReRe"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":64,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":65,"author":{"gitId":"RoeReRe"},"content":"    /*","lastModifiedDate":"2023-10-16"},{"lineNumber":66,"author":{"gitId":"RoeReRe"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":67,"author":{"gitId":"RoeReRe"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2023-10-16"},{"lineNumber":68,"author":{"gitId":"RoeReRe"},"content":"        String deleteCommand \u003d \"delete 9\";","lastModifiedDate":"2023-10-16"},{"lineNumber":69,"author":{"gitId":"RoeReRe"},"content":"        assertCommandException(deleteCommand, MESSAGE_INVALID_PRESCRIPTION_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-16"},{"lineNumber":70,"author":{"gitId":"RoeReRe"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":71,"author":{"gitId":"RoeReRe"},"content":"    */","lastModifiedDate":"2023-10-16"},{"lineNumber":72,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":73,"author":{"gitId":"RoeReRe"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":74,"author":{"gitId":"RoeReRe"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2023-10-16"},{"lineNumber":75,"author":{"gitId":"RoeReRe"},"content":"        String listCommand \u003d ListPrescriptionCommand.COMMAND_WORD;","lastModifiedDate":"2023-10-16"},{"lineNumber":76,"author":{"gitId":"RoeReRe"},"content":"        assertCommandSuccess(listCommand, ListPrescriptionCommand.MESSAGE_SUCCESS, model);","lastModifiedDate":"2023-10-16"},{"lineNumber":77,"author":{"gitId":"RoeReRe"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":78,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":79,"author":{"gitId":"RoeReRe"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":80,"author":{"gitId":"RoeReRe"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2023-10-16"},{"lineNumber":81,"author":{"gitId":"RoeReRe"},"content":"        assertCommandFailureForExceptionFromStorage(DUMMY_IO_EXCEPTION, String.format(","lastModifiedDate":"2023-10-16"},{"lineNumber":82,"author":{"gitId":"RoeReRe"},"content":"            LogicManagerPrescription.FILE_OPS_ERROR_FORMAT, DUMMY_IO_EXCEPTION.getMessage()));","lastModifiedDate":"2023-10-16"},{"lineNumber":83,"author":{"gitId":"RoeReRe"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":84,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":85,"author":{"gitId":"RoeReRe"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":86,"author":{"gitId":"RoeReRe"},"content":"    public void execute_storageThrowsAdException_throwsCommandException() {","lastModifiedDate":"2023-10-16"},{"lineNumber":87,"author":{"gitId":"RoeReRe"},"content":"        assertCommandFailureForExceptionFromStorage(DUMMY_AD_EXCEPTION, String.format(","lastModifiedDate":"2023-10-16"},{"lineNumber":88,"author":{"gitId":"RoeReRe"},"content":"            LogicManagerPrescription.FILE_OPS_PERMISSION_ERROR_FORMAT, DUMMY_AD_EXCEPTION.getMessage()));","lastModifiedDate":"2023-10-16"},{"lineNumber":89,"author":{"gitId":"RoeReRe"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":90,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":91,"author":{"gitId":"RoeReRe"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":92,"author":{"gitId":"RoeReRe"},"content":"    public void getFilteredPrescriptionList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2023-10-16"},{"lineNumber":93,"author":{"gitId":"RoeReRe"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredPrescriptionList().remove(0));","lastModifiedDate":"2023-10-16"},{"lineNumber":94,"author":{"gitId":"RoeReRe"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":95,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":96,"author":{"gitId":"RoeReRe"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":97,"author":{"gitId":"RoeReRe"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2023-10-16"},{"lineNumber":98,"author":{"gitId":"RoeReRe"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2023-10-16"},{"lineNumber":99,"author":{"gitId":"RoeReRe"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2023-10-16"},{"lineNumber":100,"author":{"gitId":"RoeReRe"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2023-10-16"},{"lineNumber":101,"author":{"gitId":"RoeReRe"},"content":"     * @see #assertCommandFailure(String, Class, String, ModelPrescription)","lastModifiedDate":"2023-10-16"},{"lineNumber":102,"author":{"gitId":"RoeReRe"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":103,"author":{"gitId":"RoeReRe"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2023-10-16"},{"lineNumber":104,"author":{"gitId":"RoeReRe"},"content":"        ModelPrescription expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2023-10-16"},{"lineNumber":105,"author":{"gitId":"RoeReRe"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2023-10-16"},{"lineNumber":106,"author":{"gitId":"RoeReRe"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2023-10-16"},{"lineNumber":107,"author":{"gitId":"RoeReRe"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2023-10-16"},{"lineNumber":108,"author":{"gitId":"RoeReRe"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":109,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":110,"author":{"gitId":"RoeReRe"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":111,"author":{"gitId":"RoeReRe"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2023-10-16"},{"lineNumber":112,"author":{"gitId":"RoeReRe"},"content":"     * @see #assertCommandFailure(String, Class, String, ModelPrescription)","lastModifiedDate":"2023-10-16"},{"lineNumber":113,"author":{"gitId":"RoeReRe"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":114,"author":{"gitId":"RoeReRe"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2023-10-16"},{"lineNumber":115,"author":{"gitId":"RoeReRe"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2023-10-16"},{"lineNumber":116,"author":{"gitId":"RoeReRe"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":117,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":118,"author":{"gitId":"RoeReRe"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":119,"author":{"gitId":"RoeReRe"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2023-10-16"},{"lineNumber":120,"author":{"gitId":"RoeReRe"},"content":"     * @see #assertCommandFailure(String, Class, String, ModelPrescription)","lastModifiedDate":"2023-10-16"},{"lineNumber":121,"author":{"gitId":"RoeReRe"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":122,"author":{"gitId":"RoeReRe"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2023-10-16"},{"lineNumber":123,"author":{"gitId":"RoeReRe"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2023-10-16"},{"lineNumber":124,"author":{"gitId":"RoeReRe"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":125,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":126,"author":{"gitId":"RoeReRe"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":127,"author":{"gitId":"RoeReRe"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2023-10-16"},{"lineNumber":128,"author":{"gitId":"RoeReRe"},"content":"     * @see #assertCommandFailure(String, Class, String, ModelPrescription)","lastModifiedDate":"2023-10-16"},{"lineNumber":129,"author":{"gitId":"RoeReRe"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":130,"author":{"gitId":"RoeReRe"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2023-10-16"},{"lineNumber":131,"author":{"gitId":"RoeReRe"},"content":"        String expectedMessage) {","lastModifiedDate":"2023-10-16"},{"lineNumber":132,"author":{"gitId":"RoeReRe"},"content":"        ModelPrescription expectedModel \u003d new ModelManagerPrescription(","lastModifiedDate":"2023-10-16"},{"lineNumber":133,"author":{"gitId":"RoeReRe"},"content":"            model.getPrescriptionList(), new UserPrefsPrescription());","lastModifiedDate":"2023-10-16"},{"lineNumber":134,"author":{"gitId":"RoeReRe"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-16"},{"lineNumber":135,"author":{"gitId":"RoeReRe"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":136,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":137,"author":{"gitId":"RoeReRe"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":138,"author":{"gitId":"RoeReRe"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2023-10-16"},{"lineNumber":139,"author":{"gitId":"RoeReRe"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2023-10-16"},{"lineNumber":140,"author":{"gitId":"RoeReRe"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2023-10-16"},{"lineNumber":141,"author":{"gitId":"RoeReRe"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2023-10-16"},{"lineNumber":142,"author":{"gitId":"RoeReRe"},"content":"     * @see #assertCommandSuccess(String, String, ModelPrescription)","lastModifiedDate":"2023-10-16"},{"lineNumber":143,"author":{"gitId":"RoeReRe"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":144,"author":{"gitId":"RoeReRe"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2023-10-16"},{"lineNumber":145,"author":{"gitId":"RoeReRe"},"content":"        String expectedMessage, ModelPrescription expectedModel) {","lastModifiedDate":"2023-10-16"},{"lineNumber":146,"author":{"gitId":"RoeReRe"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2023-10-16"},{"lineNumber":147,"author":{"gitId":"RoeReRe"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2023-10-16"},{"lineNumber":148,"author":{"gitId":"RoeReRe"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":149,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":150,"author":{"gitId":"RoeReRe"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":151,"author":{"gitId":"RoeReRe"},"content":"     * Tests the LogicPrescription component\u0027s handling of an {@code IOException} thrown by the Storage component.","lastModifiedDate":"2023-10-16"},{"lineNumber":152,"author":{"gitId":"RoeReRe"},"content":"     *","lastModifiedDate":"2023-10-16"},{"lineNumber":153,"author":{"gitId":"RoeReRe"},"content":"     * @param e the exception to be thrown by the Storage component","lastModifiedDate":"2023-10-16"},{"lineNumber":154,"author":{"gitId":"RoeReRe"},"content":"     * @param expectedMessage the message expected inside exception thrown by the LogicPrescription component","lastModifiedDate":"2023-10-16"},{"lineNumber":155,"author":{"gitId":"RoeReRe"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":156,"author":{"gitId":"RoeReRe"},"content":"    private void assertCommandFailureForExceptionFromStorage(IOException e, String expectedMessage) {","lastModifiedDate":"2023-10-16"},{"lineNumber":157,"author":{"gitId":"RoeReRe"},"content":"        Path prefPath \u003d temporaryFolder.resolve(\"ExceptionUserPrefs.json\");","lastModifiedDate":"2023-10-16"},{"lineNumber":158,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":159,"author":{"gitId":"RoeReRe"},"content":"        // Inject LogicManagerPrescription with a PrescriptionListStorage that throws the IOException e when saving","lastModifiedDate":"2023-10-16"},{"lineNumber":160,"author":{"gitId":"RoeReRe"},"content":"        JsonPrescriptionListStorage prescriptionListStorage \u003d new JsonPrescriptionListStorage(prefPath) {","lastModifiedDate":"2023-10-16"},{"lineNumber":161,"author":{"gitId":"RoeReRe"},"content":"            @Override","lastModifiedDate":"2023-10-16"},{"lineNumber":162,"author":{"gitId":"RoeReRe"},"content":"            public void savePrescriptionList(ReadOnlyPrescriptionList prescriptionList, Path filePath)","lastModifiedDate":"2023-10-16"},{"lineNumber":163,"author":{"gitId":"RoeReRe"},"content":"                    throws IOException {","lastModifiedDate":"2023-10-16"},{"lineNumber":164,"author":{"gitId":"RoeReRe"},"content":"                throw e;","lastModifiedDate":"2023-10-16"},{"lineNumber":165,"author":{"gitId":"RoeReRe"},"content":"            }","lastModifiedDate":"2023-10-16"},{"lineNumber":166,"author":{"gitId":"RoeReRe"},"content":"        };","lastModifiedDate":"2023-10-16"},{"lineNumber":167,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":168,"author":{"gitId":"RoeReRe"},"content":"        JsonUserPrefsStoragePrescription userPrefsStorage \u003d","lastModifiedDate":"2023-10-16"},{"lineNumber":169,"author":{"gitId":"RoeReRe"},"content":"            new JsonUserPrefsStoragePrescription(temporaryFolder.resolve(\"ExceptionUserPrefs.json\"));","lastModifiedDate":"2023-10-16"},{"lineNumber":170,"author":{"gitId":"RoeReRe"},"content":"        StorageManagerPrescription storage \u003d new StorageManagerPrescription(prescriptionListStorage, userPrefsStorage);","lastModifiedDate":"2023-10-16"},{"lineNumber":171,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":172,"author":{"gitId":"RoeReRe"},"content":"        logic \u003d new LogicManagerPrescription(model, storage);","lastModifiedDate":"2023-10-16"},{"lineNumber":173,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":174,"author":{"gitId":"RoeReRe"},"content":"        // Triggers the savePrescriptionList method by executing an add command","lastModifiedDate":"2023-10-16"},{"lineNumber":175,"author":{"gitId":"RoeReRe"},"content":"        String addCommand \u003d AddPrescriptionCommand.COMMAND_WORD","lastModifiedDate":"2023-10-16"},{"lineNumber":176,"author":{"gitId":"RoeReRe"},"content":"                + NAME_DESC_ASPIRIN","lastModifiedDate":"2023-10-16"},{"lineNumber":177,"author":{"gitId":"RoeReRe"},"content":"                + DOSAGE_DESC_ASPIRIN","lastModifiedDate":"2023-10-16"},{"lineNumber":178,"author":{"gitId":"RoeReRe"},"content":"                + FREQUENCY_DESC_ASPIRIN","lastModifiedDate":"2023-10-16"},{"lineNumber":179,"author":{"gitId":"RoeReRe"},"content":"                + START_DATE_DESC_ASPIRIN","lastModifiedDate":"2023-10-16"},{"lineNumber":180,"author":{"gitId":"RoeReRe"},"content":"                + END_DATE_DESC_ASPIRIN","lastModifiedDate":"2023-10-16"},{"lineNumber":181,"author":{"gitId":"RoeReRe"},"content":"                + EXPIRY_DATE_DESC_ASPIRIN","lastModifiedDate":"2023-10-16"},{"lineNumber":182,"author":{"gitId":"RoeReRe"},"content":"                + STOCK_DESC_ASPIRIN","lastModifiedDate":"2023-10-16"},{"lineNumber":183,"author":{"gitId":"RoeReRe"},"content":"                + NOTE_DESC_ASPIRIN;","lastModifiedDate":"2023-10-16"},{"lineNumber":184,"author":{"gitId":"RoeReRe"},"content":"        Prescription expectedPrescription \u003d new PrescriptionBuilder(ASPIRIN).build();","lastModifiedDate":"2023-10-16"},{"lineNumber":185,"author":{"gitId":"RoeReRe"},"content":"        ModelManagerPrescription expectedModel \u003d new ModelManagerPrescription();","lastModifiedDate":"2023-10-16"},{"lineNumber":186,"author":{"gitId":"RoeReRe"},"content":"        expectedModel.addPrescription(expectedPrescription);","lastModifiedDate":"2023-10-16"},{"lineNumber":187,"author":{"gitId":"RoeReRe"},"content":"        assertCommandFailure(addCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-16"},{"lineNumber":188,"author":{"gitId":"RoeReRe"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":189,"author":{"gitId":"RoeReRe"},"content":"}","lastModifiedDate":"2023-10-16"}],"authorContributionMap":{"RoeReRe":189}},{"path":"src/test/java/seedu/address/logic/commands/CommandPrescriptionTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"RoeReRe"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-16"},{"lineNumber":2,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":3,"author":{"gitId":"RoeReRe"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-16"},{"lineNumber":4,"author":{"gitId":"RoeReRe"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-16"},{"lineNumber":5,"author":{"gitId":"RoeReRe"},"content":"import static seedu.address.logic.parser.CliSyntaxPrescription.PREFIX_DOSAGE;","lastModifiedDate":"2023-10-16"},{"lineNumber":6,"author":{"gitId":"RoeReRe"},"content":"import static seedu.address.logic.parser.CliSyntaxPrescription.PREFIX_END_DATE;","lastModifiedDate":"2023-10-16"},{"lineNumber":7,"author":{"gitId":"RoeReRe"},"content":"import static seedu.address.logic.parser.CliSyntaxPrescription.PREFIX_EXPIRY_DATE;","lastModifiedDate":"2023-10-16"},{"lineNumber":8,"author":{"gitId":"RoeReRe"},"content":"import static seedu.address.logic.parser.CliSyntaxPrescription.PREFIX_FREQUENCY;","lastModifiedDate":"2023-10-16"},{"lineNumber":9,"author":{"gitId":"RoeReRe"},"content":"import static seedu.address.logic.parser.CliSyntaxPrescription.PREFIX_NAME;","lastModifiedDate":"2023-10-16"},{"lineNumber":10,"author":{"gitId":"RoeReRe"},"content":"import static seedu.address.logic.parser.CliSyntaxPrescription.PREFIX_NOTE;","lastModifiedDate":"2023-10-16"},{"lineNumber":11,"author":{"gitId":"RoeReRe"},"content":"import static seedu.address.logic.parser.CliSyntaxPrescription.PREFIX_START_DATE;","lastModifiedDate":"2023-10-16"},{"lineNumber":12,"author":{"gitId":"RoeReRe"},"content":"import static seedu.address.logic.parser.CliSyntaxPrescription.PREFIX_TOTAL_STOCK;","lastModifiedDate":"2023-10-16"},{"lineNumber":13,"author":{"gitId":"RoeReRe"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-16"},{"lineNumber":14,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":15,"author":{"gitId":"RoeReRe"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-16"},{"lineNumber":16,"author":{"gitId":"RoeReRe"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-10-16"},{"lineNumber":17,"author":{"gitId":"RoeReRe"},"content":"import java.util.List;","lastModifiedDate":"2023-10-16"},{"lineNumber":18,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":19,"author":{"gitId":"RoeReRe"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-16"},{"lineNumber":20,"author":{"gitId":"RoeReRe"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-16"},{"lineNumber":21,"author":{"gitId":"RoeReRe"},"content":"import seedu.address.model.ModelPrescription;","lastModifiedDate":"2023-10-16"},{"lineNumber":22,"author":{"gitId":"RoeReRe"},"content":"import seedu.address.model.PrescriptionList;","lastModifiedDate":"2023-10-16"},{"lineNumber":23,"author":{"gitId":"RoeReRe"},"content":"import seedu.address.model.prescription.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-10-16"},{"lineNumber":24,"author":{"gitId":"RoeReRe"},"content":"import seedu.address.model.prescription.Prescription;","lastModifiedDate":"2023-10-16"},{"lineNumber":25,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":26,"author":{"gitId":"RoeReRe"},"content":"/**","lastModifiedDate":"2023-10-16"},{"lineNumber":27,"author":{"gitId":"RoeReRe"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2023-10-16"},{"lineNumber":28,"author":{"gitId":"RoeReRe"},"content":" */","lastModifiedDate":"2023-10-16"},{"lineNumber":29,"author":{"gitId":"RoeReRe"},"content":"public class CommandPrescriptionTestUtil {","lastModifiedDate":"2023-10-16"},{"lineNumber":30,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":31,"author":{"gitId":"RoeReRe"},"content":"    public static final String VALID_NAME_ASPIRIN \u003d \"Aspirin\";","lastModifiedDate":"2023-10-16"},{"lineNumber":32,"author":{"gitId":"RoeReRe"},"content":"    public static final String VALID_NAME_PROPRANOLOL \u003d \"Propranolol\";","lastModifiedDate":"2023-10-16"},{"lineNumber":33,"author":{"gitId":"RoeReRe"},"content":"    public static final String VALID_DOSAGE_ASPIRIN \u003d \"1\";","lastModifiedDate":"2023-10-16"},{"lineNumber":34,"author":{"gitId":"RoeReRe"},"content":"    public static final String VALID_DOSAGE_PROPRANOLOL \u003d \"4\";","lastModifiedDate":"2023-10-16"},{"lineNumber":35,"author":{"gitId":"RoeReRe"},"content":"    public static final String VALID_FREQUENCY_ASPIRIN \u003d \"Daily\";","lastModifiedDate":"2023-10-16"},{"lineNumber":36,"author":{"gitId":"RoeReRe"},"content":"    public static final String VALID_FREQUENCY_PROPRANOLOL \u003d \"Weekly\";","lastModifiedDate":"2023-10-16"},{"lineNumber":37,"author":{"gitId":"RoeReRe"},"content":"    public static final String VALID_START_DATE_ASPIRIN \u003d \"01/10/2023\";","lastModifiedDate":"2023-10-16"},{"lineNumber":38,"author":{"gitId":"RoeReRe"},"content":"    public static final String VALID_START_DATE_PROPRANOLOL \u003d \"01/08/2023\";","lastModifiedDate":"2023-10-16"},{"lineNumber":39,"author":{"gitId":"RoeReRe"},"content":"    public static final String VALID_END_DATE_ASPIRIN \u003d \"23/02/2024\";","lastModifiedDate":"2023-10-16"},{"lineNumber":40,"author":{"gitId":"RoeReRe"},"content":"    public static final String VALID_END_DATE_PROPRANOLOL \u003d \"20/12/2024\";","lastModifiedDate":"2023-10-16"},{"lineNumber":41,"author":{"gitId":"RoeReRe"},"content":"    public static final String VALID_EXPIRY_DATE_ASPIRIN \u003d \"12/12/2024\";","lastModifiedDate":"2023-10-16"},{"lineNumber":42,"author":{"gitId":"RoeReRe"},"content":"    public static final String VALID_EXPIRY_DATE_PROPRANOLOL \u003d \"22/07/2024\";","lastModifiedDate":"2023-10-16"},{"lineNumber":43,"author":{"gitId":"RoeReRe"},"content":"    public static final String VALID_STOCK_ASPIRIN \u003d \"100\";","lastModifiedDate":"2023-10-16"},{"lineNumber":44,"author":{"gitId":"RoeReRe"},"content":"    public static final String VALID_STOCK_PROPRANOLOL \u003d \"500\";","lastModifiedDate":"2023-10-16"},{"lineNumber":45,"author":{"gitId":"RoeReRe"},"content":"    public static final String VALID_NOTE_ASPIRIN \u003d \"Take after food\";","lastModifiedDate":"2023-10-16"},{"lineNumber":46,"author":{"gitId":"RoeReRe"},"content":"    public static final String VALID_NOTE_PROPRANOLOL \u003d \"Take after food\";","lastModifiedDate":"2023-10-16"},{"lineNumber":47,"author":{"gitId":"RoeReRe"},"content":"    // public static final String VALID_TAG_HUSBAND \u003d \"husband\";","lastModifiedDate":"2023-10-16"},{"lineNumber":48,"author":{"gitId":"RoeReRe"},"content":"    // public static final String VALID_TAG_FRIEND \u003d \"friend\";","lastModifiedDate":"2023-10-16"},{"lineNumber":49,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":50,"author":{"gitId":"RoeReRe"},"content":"    public static final String NAME_DESC_ASPIRIN \u003d \" \" + PREFIX_NAME + VALID_NAME_ASPIRIN;","lastModifiedDate":"2023-10-16"},{"lineNumber":51,"author":{"gitId":"RoeReRe"},"content":"    public static final String NAME_DESC_PROPRANOLOL \u003d \" \" + PREFIX_NAME + VALID_NAME_PROPRANOLOL;","lastModifiedDate":"2023-10-16"},{"lineNumber":52,"author":{"gitId":"RoeReRe"},"content":"    public static final String DOSAGE_DESC_ASPIRIN \u003d \" \" + PREFIX_DOSAGE + VALID_DOSAGE_ASPIRIN;","lastModifiedDate":"2023-10-16"},{"lineNumber":53,"author":{"gitId":"RoeReRe"},"content":"    public static final String DOSAGE_DESC_PROPRANOLOL \u003d \" \" + PREFIX_DOSAGE + VALID_DOSAGE_PROPRANOLOL;","lastModifiedDate":"2023-10-16"},{"lineNumber":54,"author":{"gitId":"RoeReRe"},"content":"    public static final String FREQUENCY_DESC_ASPIRIN \u003d \" \" + PREFIX_FREQUENCY + VALID_FREQUENCY_ASPIRIN;","lastModifiedDate":"2023-10-16"},{"lineNumber":55,"author":{"gitId":"RoeReRe"},"content":"    public static final String FREQUENCY_DESC_PROPRANOLOL \u003d \" \" + PREFIX_FREQUENCY + VALID_FREQUENCY_PROPRANOLOL;","lastModifiedDate":"2023-10-16"},{"lineNumber":56,"author":{"gitId":"RoeReRe"},"content":"    public static final String START_DATE_DESC_ASPIRIN \u003d \" \" + PREFIX_START_DATE + VALID_START_DATE_ASPIRIN;","lastModifiedDate":"2023-10-16"},{"lineNumber":57,"author":{"gitId":"RoeReRe"},"content":"    public static final String START_DATE_DESC_PROPRANOLOL \u003d \" \" + PREFIX_START_DATE + VALID_START_DATE_PROPRANOLOL;","lastModifiedDate":"2023-10-16"},{"lineNumber":58,"author":{"gitId":"RoeReRe"},"content":"    public static final String END_DATE_DESC_ASPIRIN \u003d \" \" + PREFIX_END_DATE + VALID_END_DATE_ASPIRIN;","lastModifiedDate":"2023-10-16"},{"lineNumber":59,"author":{"gitId":"RoeReRe"},"content":"    public static final String END_DATE_DESC_PROPRANOLOL \u003d \" \" + PREFIX_END_DATE + VALID_END_DATE_PROPRANOLOL;","lastModifiedDate":"2023-10-16"},{"lineNumber":60,"author":{"gitId":"RoeReRe"},"content":"    public static final String EXPIRY_DATE_DESC_ASPIRIN \u003d \" \" + PREFIX_EXPIRY_DATE + VALID_EXPIRY_DATE_ASPIRIN;","lastModifiedDate":"2023-10-16"},{"lineNumber":61,"author":{"gitId":"RoeReRe"},"content":"    public static final String EXPIRY_DATE_DESC_PROPRANOLOL \u003d \" \" + PREFIX_EXPIRY_DATE + VALID_EXPIRY_DATE_PROPRANOLOL;","lastModifiedDate":"2023-10-16"},{"lineNumber":62,"author":{"gitId":"RoeReRe"},"content":"    public static final String STOCK_DESC_ASPIRIN \u003d \" \" + PREFIX_TOTAL_STOCK + VALID_STOCK_ASPIRIN;","lastModifiedDate":"2023-10-16"},{"lineNumber":63,"author":{"gitId":"RoeReRe"},"content":"    public static final String STOCK_DESC_PROPRANOLOL \u003d \" \" + PREFIX_TOTAL_STOCK + VALID_STOCK_PROPRANOLOL;","lastModifiedDate":"2023-10-16"},{"lineNumber":64,"author":{"gitId":"RoeReRe"},"content":"    public static final String NOTE_DESC_ASPIRIN \u003d \" \" + PREFIX_NOTE + VALID_NOTE_ASPIRIN;","lastModifiedDate":"2023-10-16"},{"lineNumber":65,"author":{"gitId":"RoeReRe"},"content":"    public static final String NOTE_DESC_PROPRANOLOL \u003d \" \" + PREFIX_NOTE + VALID_NOTE_PROPRANOLOL;","lastModifiedDate":"2023-10-16"},{"lineNumber":66,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":67,"author":{"gitId":"RoeReRe"},"content":"    // public static final String TAG_DESC_FRIEND \u003d \" \" + PREFIX_TAG + VALID_TAG_FRIEND;","lastModifiedDate":"2023-10-16"},{"lineNumber":68,"author":{"gitId":"RoeReRe"},"content":"    // public static final String TAG_DESC_HUSBAND \u003d \" \" + PREFIX_TAG + VALID_TAG_HUSBAND;","lastModifiedDate":"2023-10-16"},{"lineNumber":69,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":70,"author":{"gitId":"RoeReRe"},"content":"    public static final String NAME_DESC \u003d \" \" + PREFIX_NAME + \"@sp!r!n\"; // non-alphanumeric not allowed","lastModifiedDate":"2023-10-16"},{"lineNumber":71,"author":{"gitId":"RoeReRe"},"content":"    public static final String DOSAGE_DESC \u003d \" \" + PREFIX_DOSAGE + \"a\"; // alphabets not allowed","lastModifiedDate":"2023-10-16"},{"lineNumber":72,"author":{"gitId":"RoeReRe"},"content":"    public static final String FREQUENCY_DESC \u003d \" \" + PREFIX_FREQUENCY + \"Forever\"; // invalid value","lastModifiedDate":"2023-10-16"},{"lineNumber":73,"author":{"gitId":"RoeReRe"},"content":"    public static final String START_DATE_DESC \u003d \" \" + PREFIX_START_DATE + \"1/1/2023\"; // invalid date format","lastModifiedDate":"2023-10-16"},{"lineNumber":74,"author":{"gitId":"RoeReRe"},"content":"    public static final String END_DATE_DESC \u003d \" \" + PREFIX_END_DATE + \"1/2/24\"; // invalid date format","lastModifiedDate":"2023-10-16"},{"lineNumber":75,"author":{"gitId":"RoeReRe"},"content":"    public static final String EXPIRY_DATE_DESC \u003d \" \" + PREFIX_EXPIRY_DATE + \"2024/1/1\"; // invalid date format","lastModifiedDate":"2023-10-16"},{"lineNumber":76,"author":{"gitId":"RoeReRe"},"content":"    public static final String STOCK_DESC \u003d \" \" + PREFIX_TOTAL_STOCK + \"a\"; // alphabets not allowed","lastModifiedDate":"2023-10-16"},{"lineNumber":77,"author":{"gitId":"RoeReRe"},"content":"    public static final String NOTE_DESC \u003d \" \" + PREFIX_NOTE; // empty string not allowed","lastModifiedDate":"2023-10-16"},{"lineNumber":78,"author":{"gitId":"RoeReRe"},"content":"    // public static final String INVALID_TAG_DESC \u003d \" \" + PREFIX_TAG + \"hubby*\"; // \u0027*\u0027 not allowed in tags","lastModifiedDate":"2023-10-16"},{"lineNumber":79,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":80,"author":{"gitId":"RoeReRe"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2023-10-16"},{"lineNumber":81,"author":{"gitId":"RoeReRe"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2023-10-16"},{"lineNumber":82,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":83,"author":{"gitId":"RoeReRe"},"content":"    /*","lastModifiedDate":"2023-10-16"},{"lineNumber":84,"author":{"gitId":"RoeReRe"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_AMY;","lastModifiedDate":"2023-10-16"},{"lineNumber":85,"author":{"gitId":"RoeReRe"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_BOB;","lastModifiedDate":"2023-10-16"},{"lineNumber":86,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":87,"author":{"gitId":"RoeReRe"},"content":"    static {","lastModifiedDate":"2023-10-16"},{"lineNumber":88,"author":{"gitId":"RoeReRe"},"content":"        DESC_AMY \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2023-10-16"},{"lineNumber":89,"author":{"gitId":"RoeReRe"},"content":"            .withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2023-10-16"},{"lineNumber":90,"author":{"gitId":"RoeReRe"},"content":"            .withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2023-10-16"},{"lineNumber":91,"author":{"gitId":"RoeReRe"},"content":"        DESC_BOB \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2023-10-16"},{"lineNumber":92,"author":{"gitId":"RoeReRe"},"content":"            .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2023-10-16"},{"lineNumber":93,"author":{"gitId":"RoeReRe"},"content":"            .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2023-10-16"},{"lineNumber":94,"author":{"gitId":"RoeReRe"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":95,"author":{"gitId":"RoeReRe"},"content":"    */","lastModifiedDate":"2023-10-16"},{"lineNumber":96,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":97,"author":{"gitId":"RoeReRe"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":98,"author":{"gitId":"RoeReRe"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2023-10-16"},{"lineNumber":99,"author":{"gitId":"RoeReRe"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2023-10-16"},{"lineNumber":100,"author":{"gitId":"RoeReRe"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2023-10-16"},{"lineNumber":101,"author":{"gitId":"RoeReRe"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":102,"author":{"gitId":"RoeReRe"},"content":"    public static void assertCommandSuccess(CommandPrescription command, ModelPrescription actualModel,","lastModifiedDate":"2023-10-16"},{"lineNumber":103,"author":{"gitId":"RoeReRe"},"content":"        CommandResult expectedCommandResult, ModelPrescription expectedModel) {","lastModifiedDate":"2023-10-16"},{"lineNumber":104,"author":{"gitId":"RoeReRe"},"content":"        try {","lastModifiedDate":"2023-10-16"},{"lineNumber":105,"author":{"gitId":"RoeReRe"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2023-10-16"},{"lineNumber":106,"author":{"gitId":"RoeReRe"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2023-10-16"},{"lineNumber":107,"author":{"gitId":"RoeReRe"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2023-10-16"},{"lineNumber":108,"author":{"gitId":"RoeReRe"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2023-10-16"},{"lineNumber":109,"author":{"gitId":"RoeReRe"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2023-10-16"},{"lineNumber":110,"author":{"gitId":"RoeReRe"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":111,"author":{"gitId":"RoeReRe"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":112,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":113,"author":{"gitId":"RoeReRe"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":114,"author":{"gitId":"RoeReRe"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(CommandPrescription, ModelPrescription,","lastModifiedDate":"2023-10-16"},{"lineNumber":115,"author":{"gitId":"RoeReRe"},"content":"     * CommandResult, ModelPrescription)}","lastModifiedDate":"2023-10-16"},{"lineNumber":116,"author":{"gitId":"RoeReRe"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2023-10-16"},{"lineNumber":117,"author":{"gitId":"RoeReRe"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":118,"author":{"gitId":"RoeReRe"},"content":"    public static void assertCommandSuccess(CommandPrescription command, ModelPrescription actualModel,","lastModifiedDate":"2023-10-16"},{"lineNumber":119,"author":{"gitId":"RoeReRe"},"content":"        String expectedMessage, ModelPrescription expectedModel) {","lastModifiedDate":"2023-10-16"},{"lineNumber":120,"author":{"gitId":"RoeReRe"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2023-10-16"},{"lineNumber":121,"author":{"gitId":"RoeReRe"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2023-10-16"},{"lineNumber":122,"author":{"gitId":"RoeReRe"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":123,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":124,"author":{"gitId":"RoeReRe"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":125,"author":{"gitId":"RoeReRe"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2023-10-16"},{"lineNumber":126,"author":{"gitId":"RoeReRe"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2023-10-16"},{"lineNumber":127,"author":{"gitId":"RoeReRe"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2023-10-16"},{"lineNumber":128,"author":{"gitId":"RoeReRe"},"content":"     * - the prescription list, filtered prescription list and selected prescription in {@code actualModel}","lastModifiedDate":"2023-10-16"},{"lineNumber":129,"author":{"gitId":"RoeReRe"},"content":"     *   remain unchanged","lastModifiedDate":"2023-10-16"},{"lineNumber":130,"author":{"gitId":"RoeReRe"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":131,"author":{"gitId":"RoeReRe"},"content":"    public static void assertCommandFailure(CommandPrescription command, ModelPrescription actualModel,","lastModifiedDate":"2023-10-16"},{"lineNumber":132,"author":{"gitId":"RoeReRe"},"content":"        String expectedMessage) {","lastModifiedDate":"2023-10-16"},{"lineNumber":133,"author":{"gitId":"RoeReRe"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2023-10-16"},{"lineNumber":134,"author":{"gitId":"RoeReRe"},"content":"        // only do so by copying its components.","lastModifiedDate":"2023-10-16"},{"lineNumber":135,"author":{"gitId":"RoeReRe"},"content":"        PrescriptionList expectedPrescriptionList \u003d new PrescriptionList(actualModel.getPrescriptionList());","lastModifiedDate":"2023-10-16"},{"lineNumber":136,"author":{"gitId":"RoeReRe"},"content":"        List\u003cPrescription\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredPrescriptionList());","lastModifiedDate":"2023-10-16"},{"lineNumber":137,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":138,"author":{"gitId":"RoeReRe"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2023-10-16"},{"lineNumber":139,"author":{"gitId":"RoeReRe"},"content":"        assertEquals(expectedPrescriptionList, actualModel.getPrescriptionList());","lastModifiedDate":"2023-10-16"},{"lineNumber":140,"author":{"gitId":"RoeReRe"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredPrescriptionList());","lastModifiedDate":"2023-10-16"},{"lineNumber":141,"author":{"gitId":"RoeReRe"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":142,"author":{"gitId":"RoeReRe"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":143,"author":{"gitId":"RoeReRe"},"content":"     * Updates {@code model}\u0027s filtered list to show only the prescription at the given {@code targetIndex} in the","lastModifiedDate":"2023-10-16"},{"lineNumber":144,"author":{"gitId":"RoeReRe"},"content":"     * {@code model}\u0027s prescription list.","lastModifiedDate":"2023-10-16"},{"lineNumber":145,"author":{"gitId":"RoeReRe"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":146,"author":{"gitId":"RoeReRe"},"content":"    public static void showPrescriptionAtIndex(ModelPrescription model, Index targetIndex) {","lastModifiedDate":"2023-10-16"},{"lineNumber":147,"author":{"gitId":"RoeReRe"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredPrescriptionList().size());","lastModifiedDate":"2023-10-16"},{"lineNumber":148,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":149,"author":{"gitId":"RoeReRe"},"content":"        Prescription prescription \u003d model.getFilteredPrescriptionList().get(targetIndex.getZeroBased());","lastModifiedDate":"2023-10-16"},{"lineNumber":150,"author":{"gitId":"RoeReRe"},"content":"        final String[] splitName \u003d prescription.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2023-10-16"},{"lineNumber":151,"author":{"gitId":"RoeReRe"},"content":"        model.updateFilteredPrescriptionList(new NameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2023-10-16"},{"lineNumber":152,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":153,"author":{"gitId":"RoeReRe"},"content":"        assertEquals(1, model.getFilteredPrescriptionList().size());","lastModifiedDate":"2023-10-16"},{"lineNumber":154,"author":{"gitId":"RoeReRe"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":155,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":156,"author":{"gitId":"RoeReRe"},"content":"}","lastModifiedDate":"2023-10-16"}],"authorContributionMap":{"RoeReRe":156}},{"path":"src/test/java/seedu/address/logic/commands/DeletePrescriptionCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"TeeRenJing"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-17"},{"lineNumber":2,"author":{"gitId":"TeeRenJing"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":3,"author":{"gitId":"TeeRenJing"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"TeeRenJing"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"TeeRenJing"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"TeeRenJing"},"content":"import static seedu.address.logic.commands.CommandPrescriptionTestUtil.assertCommandFailure;","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"TeeRenJing"},"content":"import static seedu.address.logic.commands.CommandPrescriptionTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"TeeRenJing"},"content":"import static seedu.address.logic.commands.CommandPrescriptionTestUtil.showPrescriptionAtIndex;","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"TeeRenJing"},"content":"import static seedu.address.logic.commands.DeletePrescriptionCommand.MESSAGE_DELETE_PRESCRIPTION_SUCCESS;","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"TeeRenJing"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PRESCRIPTION;","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"TeeRenJing"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PRESCRIPTION;","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"TeeRenJing"},"content":"import static seedu.address.testutil.TypicalPrescriptions.getTypicalPrescriptionList;","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"TeeRenJing"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":14,"author":{"gitId":"TeeRenJing"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-10-17"},{"lineNumber":15,"author":{"gitId":"TeeRenJing"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"TeeRenJing"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"TeeRenJing"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"TeeRenJing"},"content":"import seedu.address.logic.MessagesPrescription;","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"TeeRenJing"},"content":"import seedu.address.model.ModelManagerPrescription;","lastModifiedDate":"2023-10-17"},{"lineNumber":20,"author":{"gitId":"TeeRenJing"},"content":"import seedu.address.model.ModelPrescription;","lastModifiedDate":"2023-10-17"},{"lineNumber":21,"author":{"gitId":"TeeRenJing"},"content":"import seedu.address.model.UserPrefsPrescription;","lastModifiedDate":"2023-10-17"},{"lineNumber":22,"author":{"gitId":"TeeRenJing"},"content":"import seedu.address.model.prescription.Prescription;","lastModifiedDate":"2023-10-17"},{"lineNumber":23,"author":{"gitId":"TeeRenJing"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":24,"author":{"gitId":"TeeRenJing"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":25,"author":{"gitId":"TeeRenJing"},"content":"/**","lastModifiedDate":"2023-10-17"},{"lineNumber":26,"author":{"gitId":"TeeRenJing"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2023-10-17"},{"lineNumber":27,"author":{"gitId":"TeeRenJing"},"content":" * {@code DeletePrescriptionCommand}.","lastModifiedDate":"2023-10-17"},{"lineNumber":28,"author":{"gitId":"TeeRenJing"},"content":" */","lastModifiedDate":"2023-10-17"},{"lineNumber":29,"author":{"gitId":"TeeRenJing"},"content":"public class DeletePrescriptionCommandTest {","lastModifiedDate":"2023-10-17"},{"lineNumber":30,"author":{"gitId":"TeeRenJing"},"content":"    private ModelPrescription model;","lastModifiedDate":"2023-10-17"},{"lineNumber":31,"author":{"gitId":"TeeRenJing"},"content":"    private ModelPrescription expectedModel;","lastModifiedDate":"2023-10-17"},{"lineNumber":32,"author":{"gitId":"TeeRenJing"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":33,"author":{"gitId":"TeeRenJing"},"content":"    @BeforeEach","lastModifiedDate":"2023-10-17"},{"lineNumber":34,"author":{"gitId":"TeeRenJing"},"content":"    public void setUp() {","lastModifiedDate":"2023-10-17"},{"lineNumber":35,"author":{"gitId":"TeeRenJing"},"content":"        model \u003d new ModelManagerPrescription(getTypicalPrescriptionList(),","lastModifiedDate":"2023-10-17"},{"lineNumber":36,"author":{"gitId":"TeeRenJing"},"content":"                new UserPrefsPrescription());","lastModifiedDate":"2023-10-17"},{"lineNumber":37,"author":{"gitId":"TeeRenJing"},"content":"        expectedModel \u003d new ModelManagerPrescription(model.getPrescriptionList(),","lastModifiedDate":"2023-10-17"},{"lineNumber":38,"author":{"gitId":"TeeRenJing"},"content":"                new UserPrefsPrescription());","lastModifiedDate":"2023-10-17"},{"lineNumber":39,"author":{"gitId":"TeeRenJing"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":40,"author":{"gitId":"TeeRenJing"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":41,"author":{"gitId":"TeeRenJing"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2023-10-17"},{"lineNumber":42,"author":{"gitId":"TeeRenJing"},"content":"        Prescription prescriptionToDelete \u003d model.getFilteredPrescriptionList()","lastModifiedDate":"2023-10-17"},{"lineNumber":43,"author":{"gitId":"TeeRenJing"},"content":"                .get(INDEX_FIRST_PRESCRIPTION.getZeroBased());","lastModifiedDate":"2023-10-17"},{"lineNumber":44,"author":{"gitId":"TeeRenJing"},"content":"        DeletePrescriptionCommand deletePrescriptionCommand \u003d new DeletePrescriptionCommand(INDEX_FIRST_PRESCRIPTION);","lastModifiedDate":"2023-10-17"},{"lineNumber":45,"author":{"gitId":"TeeRenJing"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":46,"author":{"gitId":"TeeRenJing"},"content":"        String expectedMessage \u003d String.format(MESSAGE_DELETE_PRESCRIPTION_SUCCESS,","lastModifiedDate":"2023-10-17"},{"lineNumber":47,"author":{"gitId":"TeeRenJing"},"content":"                MessagesPrescription.format(prescriptionToDelete));","lastModifiedDate":"2023-10-17"},{"lineNumber":48,"author":{"gitId":"TeeRenJing"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":49,"author":{"gitId":"TeeRenJing"},"content":"        expectedModel.deletePrescription(prescriptionToDelete);","lastModifiedDate":"2023-10-17"},{"lineNumber":50,"author":{"gitId":"TeeRenJing"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":51,"author":{"gitId":"TeeRenJing"},"content":"        assertCommandSuccess(deletePrescriptionCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-17"},{"lineNumber":52,"author":{"gitId":"TeeRenJing"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":53,"author":{"gitId":"TeeRenJing"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":54,"author":{"gitId":"TeeRenJing"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":55,"author":{"gitId":"TeeRenJing"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2023-10-17"},{"lineNumber":56,"author":{"gitId":"TeeRenJing"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPrescriptionList().size() + 1);","lastModifiedDate":"2023-10-17"},{"lineNumber":57,"author":{"gitId":"TeeRenJing"},"content":"        DeletePrescriptionCommand deletePrescriptionCommand \u003d new DeletePrescriptionCommand(outOfBoundIndex);","lastModifiedDate":"2023-10-17"},{"lineNumber":58,"author":{"gitId":"TeeRenJing"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":59,"author":{"gitId":"TeeRenJing"},"content":"        assertCommandFailure(deletePrescriptionCommand, model,","lastModifiedDate":"2023-10-17"},{"lineNumber":60,"author":{"gitId":"TeeRenJing"},"content":"                MessagesPrescription.MESSAGE_INVALID_PRESCRIPTION_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-17"},{"lineNumber":61,"author":{"gitId":"TeeRenJing"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":62,"author":{"gitId":"TeeRenJing"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":63,"author":{"gitId":"TeeRenJing"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":64,"author":{"gitId":"TeeRenJing"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2023-10-17"},{"lineNumber":65,"author":{"gitId":"TeeRenJing"},"content":"        showPrescriptionAtIndex(model, INDEX_FIRST_PRESCRIPTION);","lastModifiedDate":"2023-10-17"},{"lineNumber":66,"author":{"gitId":"TeeRenJing"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":67,"author":{"gitId":"TeeRenJing"},"content":"        Prescription prescriptionToDelete \u003d model.getFilteredPrescriptionList()","lastModifiedDate":"2023-10-17"},{"lineNumber":68,"author":{"gitId":"TeeRenJing"},"content":"                .get(INDEX_FIRST_PRESCRIPTION.getZeroBased());","lastModifiedDate":"2023-10-17"},{"lineNumber":69,"author":{"gitId":"TeeRenJing"},"content":"        DeletePrescriptionCommand deletePrescriptionCommand \u003d new DeletePrescriptionCommand(INDEX_FIRST_PRESCRIPTION);","lastModifiedDate":"2023-10-17"},{"lineNumber":70,"author":{"gitId":"TeeRenJing"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":71,"author":{"gitId":"TeeRenJing"},"content":"        String expectedMessage \u003d String.format(MESSAGE_DELETE_PRESCRIPTION_SUCCESS,","lastModifiedDate":"2023-10-17"},{"lineNumber":72,"author":{"gitId":"TeeRenJing"},"content":"                MessagesPrescription.format(prescriptionToDelete));","lastModifiedDate":"2023-10-17"},{"lineNumber":73,"author":{"gitId":"TeeRenJing"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":74,"author":{"gitId":"TeeRenJing"},"content":"        expectedModel.deletePrescription(prescriptionToDelete);","lastModifiedDate":"2023-10-17"},{"lineNumber":75,"author":{"gitId":"TeeRenJing"},"content":"        showNoPrescription(expectedModel);","lastModifiedDate":"2023-10-17"},{"lineNumber":76,"author":{"gitId":"TeeRenJing"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":77,"author":{"gitId":"TeeRenJing"},"content":"        assertCommandSuccess(deletePrescriptionCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-17"},{"lineNumber":78,"author":{"gitId":"TeeRenJing"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":79,"author":{"gitId":"TeeRenJing"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":80,"author":{"gitId":"TeeRenJing"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":81,"author":{"gitId":"TeeRenJing"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2023-10-17"},{"lineNumber":82,"author":{"gitId":"TeeRenJing"},"content":"        showPrescriptionAtIndex(model, INDEX_FIRST_PRESCRIPTION);","lastModifiedDate":"2023-10-17"},{"lineNumber":83,"author":{"gitId":"TeeRenJing"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":84,"author":{"gitId":"TeeRenJing"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PRESCRIPTION;","lastModifiedDate":"2023-10-17"},{"lineNumber":85,"author":{"gitId":"TeeRenJing"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2023-10-17"},{"lineNumber":86,"author":{"gitId":"TeeRenJing"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getPrescriptionList().getPrescriptionList().size());","lastModifiedDate":"2023-10-17"},{"lineNumber":87,"author":{"gitId":"TeeRenJing"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":88,"author":{"gitId":"TeeRenJing"},"content":"        DeletePrescriptionCommand deletePrescriptionCommand \u003d new DeletePrescriptionCommand(outOfBoundIndex);","lastModifiedDate":"2023-10-17"},{"lineNumber":89,"author":{"gitId":"TeeRenJing"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":90,"author":{"gitId":"TeeRenJing"},"content":"        assertCommandFailure(deletePrescriptionCommand, model,","lastModifiedDate":"2023-10-17"},{"lineNumber":91,"author":{"gitId":"TeeRenJing"},"content":"                MessagesPrescription.MESSAGE_INVALID_PRESCRIPTION_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-17"},{"lineNumber":92,"author":{"gitId":"TeeRenJing"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":93,"author":{"gitId":"TeeRenJing"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":94,"author":{"gitId":"TeeRenJing"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":95,"author":{"gitId":"TeeRenJing"},"content":"    public void equals() {","lastModifiedDate":"2023-10-17"},{"lineNumber":96,"author":{"gitId":"TeeRenJing"},"content":"        DeletePrescriptionCommand deleteFirstPrescriptionCommand \u003d","lastModifiedDate":"2023-10-17"},{"lineNumber":97,"author":{"gitId":"TeeRenJing"},"content":"                new DeletePrescriptionCommand(INDEX_FIRST_PRESCRIPTION);","lastModifiedDate":"2023-10-17"},{"lineNumber":98,"author":{"gitId":"TeeRenJing"},"content":"        DeletePrescriptionCommand deleteSecondPrescriptionCommand \u003d","lastModifiedDate":"2023-10-17"},{"lineNumber":99,"author":{"gitId":"TeeRenJing"},"content":"                new DeletePrescriptionCommand(INDEX_SECOND_PRESCRIPTION);","lastModifiedDate":"2023-10-17"},{"lineNumber":100,"author":{"gitId":"TeeRenJing"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":101,"author":{"gitId":"TeeRenJing"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-17"},{"lineNumber":102,"author":{"gitId":"TeeRenJing"},"content":"        assertTrue(deleteFirstPrescriptionCommand.equals(deleteFirstPrescriptionCommand));","lastModifiedDate":"2023-10-17"},{"lineNumber":103,"author":{"gitId":"TeeRenJing"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":104,"author":{"gitId":"TeeRenJing"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-17"},{"lineNumber":105,"author":{"gitId":"TeeRenJing"},"content":"        DeletePrescriptionCommand deleteFirstPrescriptionCommandCopy \u003d","lastModifiedDate":"2023-10-17"},{"lineNumber":106,"author":{"gitId":"TeeRenJing"},"content":"                new DeletePrescriptionCommand(INDEX_FIRST_PRESCRIPTION);","lastModifiedDate":"2023-10-17"},{"lineNumber":107,"author":{"gitId":"TeeRenJing"},"content":"        assertTrue(deleteFirstPrescriptionCommand.equals(deleteFirstPrescriptionCommandCopy));","lastModifiedDate":"2023-10-17"},{"lineNumber":108,"author":{"gitId":"TeeRenJing"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":109,"author":{"gitId":"TeeRenJing"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-17"},{"lineNumber":110,"author":{"gitId":"TeeRenJing"},"content":"        assertFalse(deleteFirstPrescriptionCommand.equals(1));","lastModifiedDate":"2023-10-17"},{"lineNumber":111,"author":{"gitId":"TeeRenJing"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":112,"author":{"gitId":"TeeRenJing"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-17"},{"lineNumber":113,"author":{"gitId":"TeeRenJing"},"content":"        assertFalse(deleteFirstPrescriptionCommand.equals(null));","lastModifiedDate":"2023-10-17"},{"lineNumber":114,"author":{"gitId":"TeeRenJing"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":115,"author":{"gitId":"TeeRenJing"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2023-10-17"},{"lineNumber":116,"author":{"gitId":"TeeRenJing"},"content":"        assertFalse(deleteFirstPrescriptionCommand.equals(deleteSecondPrescriptionCommand));","lastModifiedDate":"2023-10-17"},{"lineNumber":117,"author":{"gitId":"TeeRenJing"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":118,"author":{"gitId":"TeeRenJing"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":119,"author":{"gitId":"TeeRenJing"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":120,"author":{"gitId":"TeeRenJing"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-17"},{"lineNumber":121,"author":{"gitId":"TeeRenJing"},"content":"        Index targetIndex \u003d Index.fromOneBased(1);","lastModifiedDate":"2023-10-17"},{"lineNumber":122,"author":{"gitId":"TeeRenJing"},"content":"        DeletePrescriptionCommand deletePrescriptionCommand \u003d new DeletePrescriptionCommand(targetIndex);","lastModifiedDate":"2023-10-17"},{"lineNumber":123,"author":{"gitId":"TeeRenJing"},"content":"        String expected \u003d DeletePrescriptionCommand.class.getCanonicalName() + \"{toDelete\u003d\" + targetIndex + \"}\";","lastModifiedDate":"2023-10-17"},{"lineNumber":124,"author":{"gitId":"TeeRenJing"},"content":"        assertEquals(expected, deletePrescriptionCommand.toString());","lastModifiedDate":"2023-10-17"},{"lineNumber":125,"author":{"gitId":"TeeRenJing"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":126,"author":{"gitId":"TeeRenJing"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":127,"author":{"gitId":"TeeRenJing"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":128,"author":{"gitId":"TeeRenJing"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2023-10-17"},{"lineNumber":129,"author":{"gitId":"TeeRenJing"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":130,"author":{"gitId":"TeeRenJing"},"content":"    private void showNoPrescription(ModelPrescription model) {","lastModifiedDate":"2023-10-17"},{"lineNumber":131,"author":{"gitId":"TeeRenJing"},"content":"        model.updateFilteredPrescriptionList(p -\u003e false);","lastModifiedDate":"2023-10-17"},{"lineNumber":132,"author":{"gitId":"TeeRenJing"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":133,"author":{"gitId":"TeeRenJing"},"content":"        assertTrue(model.getFilteredPrescriptionList().isEmpty());","lastModifiedDate":"2023-10-17"},{"lineNumber":134,"author":{"gitId":"TeeRenJing"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":135,"author":{"gitId":"TeeRenJing"},"content":"}","lastModifiedDate":"2023-10-17"}],"authorContributionMap":{"TeeRenJing":135}},{"path":"src/test/java/seedu/address/logic/commands/ListPrescriptionCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"RoeReRe"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-16"},{"lineNumber":2,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":3,"author":{"gitId":"RoeReRe"},"content":"import static seedu.address.logic.commands.CommandPrescriptionTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-10-16"},{"lineNumber":4,"author":{"gitId":"RoeReRe"},"content":"import static seedu.address.logic.commands.CommandPrescriptionTestUtil.showPrescriptionAtIndex;","lastModifiedDate":"2023-10-16"},{"lineNumber":5,"author":{"gitId":"RoeReRe"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PRESCRIPTION;","lastModifiedDate":"2023-10-16"},{"lineNumber":6,"author":{"gitId":"RoeReRe"},"content":"import static seedu.address.testutil.TypicalPrescriptions.getTypicalPrescriptionList;","lastModifiedDate":"2023-10-16"},{"lineNumber":7,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":8,"author":{"gitId":"RoeReRe"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-10-16"},{"lineNumber":9,"author":{"gitId":"RoeReRe"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-16"},{"lineNumber":10,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":11,"author":{"gitId":"RoeReRe"},"content":"import seedu.address.model.ModelManagerPrescription;","lastModifiedDate":"2023-10-16"},{"lineNumber":12,"author":{"gitId":"RoeReRe"},"content":"import seedu.address.model.ModelPrescription;","lastModifiedDate":"2023-10-16"},{"lineNumber":13,"author":{"gitId":"RoeReRe"},"content":"import seedu.address.model.UserPrefsPrescription;","lastModifiedDate":"2023-10-16"},{"lineNumber":14,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":15,"author":{"gitId":"RoeReRe"},"content":"/**","lastModifiedDate":"2023-10-16"},{"lineNumber":16,"author":{"gitId":"RoeReRe"},"content":" * Contains integration tests (interaction with the seedu.address.model.ModelPrescription)","lastModifiedDate":"2023-10-16"},{"lineNumber":17,"author":{"gitId":"RoeReRe"},"content":" * and unit tests for ListPrescriptionCommand.","lastModifiedDate":"2023-10-16"},{"lineNumber":18,"author":{"gitId":"RoeReRe"},"content":" */","lastModifiedDate":"2023-10-16"},{"lineNumber":19,"author":{"gitId":"RoeReRe"},"content":"public class ListPrescriptionCommandTest {","lastModifiedDate":"2023-10-16"},{"lineNumber":20,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":21,"author":{"gitId":"RoeReRe"},"content":"    private ModelPrescription model;","lastModifiedDate":"2023-10-16"},{"lineNumber":22,"author":{"gitId":"RoeReRe"},"content":"    private ModelPrescription expectedModel;","lastModifiedDate":"2023-10-16"},{"lineNumber":23,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":24,"author":{"gitId":"RoeReRe"},"content":"    @BeforeEach","lastModifiedDate":"2023-10-16"},{"lineNumber":25,"author":{"gitId":"RoeReRe"},"content":"    public void setUp() {","lastModifiedDate":"2023-10-16"},{"lineNumber":26,"author":{"gitId":"RoeReRe"},"content":"        model \u003d new ModelManagerPrescription(getTypicalPrescriptionList(), new UserPrefsPrescription());","lastModifiedDate":"2023-10-16"},{"lineNumber":27,"author":{"gitId":"RoeReRe"},"content":"        expectedModel \u003d new ModelManagerPrescription(model.getPrescriptionList(), new UserPrefsPrescription());","lastModifiedDate":"2023-10-16"},{"lineNumber":28,"author":{"gitId":"RoeReRe"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":29,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":30,"author":{"gitId":"RoeReRe"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":31,"author":{"gitId":"RoeReRe"},"content":"    public void execute_listIsNotFiltered_showsSameList() {","lastModifiedDate":"2023-10-16"},{"lineNumber":32,"author":{"gitId":"RoeReRe"},"content":"        assertCommandSuccess(new ListPrescriptionCommand(), model,","lastModifiedDate":"2023-10-16"},{"lineNumber":33,"author":{"gitId":"RoeReRe"},"content":"            ListPrescriptionCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2023-10-16"},{"lineNumber":34,"author":{"gitId":"RoeReRe"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":35,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":36,"author":{"gitId":"RoeReRe"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":37,"author":{"gitId":"RoeReRe"},"content":"    public void execute_listIsFiltered_showsEverything() {","lastModifiedDate":"2023-10-16"},{"lineNumber":38,"author":{"gitId":"RoeReRe"},"content":"        showPrescriptionAtIndex(model, INDEX_FIRST_PRESCRIPTION);","lastModifiedDate":"2023-10-16"},{"lineNumber":39,"author":{"gitId":"RoeReRe"},"content":"        assertCommandSuccess(new ListPrescriptionCommand(), model,","lastModifiedDate":"2023-10-16"},{"lineNumber":40,"author":{"gitId":"RoeReRe"},"content":"            ListPrescriptionCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2023-10-16"},{"lineNumber":41,"author":{"gitId":"RoeReRe"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":42,"author":{"gitId":"RoeReRe"},"content":"}","lastModifiedDate":"2023-10-16"}],"authorContributionMap":{"RoeReRe":42}},{"path":"src/test/java/seedu/address/logic/commands/ListTodayPrescriptionCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"shyanyong"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-17"},{"lineNumber":2,"author":{"gitId":"shyanyong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":3,"author":{"gitId":"shyanyong"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"shyanyong"},"content":"import static seedu.address.logic.commands.CommandPrescriptionTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"shyanyong"},"content":"import static seedu.address.testutil.TypicalPrescriptions.getTypicalPrescriptionList;","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"shyanyong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"shyanyong"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"shyanyong"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"shyanyong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"shyanyong"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"shyanyong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"shyanyong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"shyanyong"},"content":"import seedu.address.model.ModelManagerPrescription;","lastModifiedDate":"2023-10-17"},{"lineNumber":14,"author":{"gitId":"shyanyong"},"content":"import seedu.address.model.ModelPrescription;","lastModifiedDate":"2023-10-17"},{"lineNumber":15,"author":{"gitId":"shyanyong"},"content":"import seedu.address.model.PrescriptionList;","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"shyanyong"},"content":"import seedu.address.model.UserPrefsPrescription;","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"shyanyong"},"content":"import seedu.address.model.prescription.ConsumptionCount;","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"shyanyong"},"content":"import seedu.address.model.prescription.Date;","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"shyanyong"},"content":"import seedu.address.model.prescription.Dosage;","lastModifiedDate":"2023-10-17"},{"lineNumber":20,"author":{"gitId":"shyanyong"},"content":"import seedu.address.model.prescription.Frequency;","lastModifiedDate":"2023-10-17"},{"lineNumber":21,"author":{"gitId":"shyanyong"},"content":"import seedu.address.model.prescription.IsTodayPredicate;","lastModifiedDate":"2023-10-17"},{"lineNumber":22,"author":{"gitId":"shyanyong"},"content":"import seedu.address.model.prescription.Name;","lastModifiedDate":"2023-10-17"},{"lineNumber":23,"author":{"gitId":"shyanyong"},"content":"import seedu.address.model.prescription.Note;","lastModifiedDate":"2023-10-17"},{"lineNumber":24,"author":{"gitId":"shyanyong"},"content":"import seedu.address.model.prescription.Prescription;","lastModifiedDate":"2023-10-17"},{"lineNumber":25,"author":{"gitId":"shyanyong"},"content":"import seedu.address.model.prescription.Stock;","lastModifiedDate":"2023-10-17"},{"lineNumber":26,"author":{"gitId":"shyanyong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":27,"author":{"gitId":"shyanyong"},"content":"public class ListTodayPrescriptionCommandTest {","lastModifiedDate":"2023-10-17"},{"lineNumber":28,"author":{"gitId":"shyanyong"},"content":"    private ModelPrescription model;","lastModifiedDate":"2023-10-17"},{"lineNumber":29,"author":{"gitId":"shyanyong"},"content":"    private ModelPrescription expectedModel;","lastModifiedDate":"2023-10-17"},{"lineNumber":30,"author":{"gitId":"shyanyong"},"content":"    @BeforeEach","lastModifiedDate":"2023-10-17"},{"lineNumber":31,"author":{"gitId":"shyanyong"},"content":"    public void setUp() {","lastModifiedDate":"2023-10-17"},{"lineNumber":32,"author":{"gitId":"shyanyong"},"content":"        model \u003d new ModelManagerPrescription(getTypicalPrescriptionList(), new UserPrefsPrescription());","lastModifiedDate":"2023-10-17"},{"lineNumber":33,"author":{"gitId":"shyanyong"},"content":"        expectedModel \u003d new ModelManagerPrescription(model.getPrescriptionList(),","lastModifiedDate":"2023-10-17"},{"lineNumber":34,"author":{"gitId":"shyanyong"},"content":"                new UserPrefsPrescription());","lastModifiedDate":"2023-10-17"},{"lineNumber":35,"author":{"gitId":"shyanyong"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":36,"author":{"gitId":"shyanyong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":37,"author":{"gitId":"shyanyong"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":38,"author":{"gitId":"shyanyong"},"content":"    public void execute_validDateWithMedications_listTodaySuccess() {","lastModifiedDate":"2023-10-17"},{"lineNumber":39,"author":{"gitId":"shyanyong"},"content":"        String expectedMessage \u003d ListTodayPrescriptionCommand.MESSAGE_SUCCESS;","lastModifiedDate":"2023-10-17"},{"lineNumber":40,"author":{"gitId":"shyanyong"},"content":"        expectedModel.updateFilteredPrescriptionList(new IsTodayPredicate());","lastModifiedDate":"2023-10-17"},{"lineNumber":41,"author":{"gitId":"shyanyong"},"content":"        assertCommandSuccess(new ListTodayPrescriptionCommand(), model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-17"},{"lineNumber":42,"author":{"gitId":"shyanyong"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":43,"author":{"gitId":"shyanyong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":44,"author":{"gitId":"shyanyong"},"content":"    @Test public void execute_noMedicationsForToday_listTodayEmpty() {","lastModifiedDate":"2023-10-17"},{"lineNumber":45,"author":{"gitId":"shyanyong"},"content":"        model.setPrescriptionList(new PrescriptionList());","lastModifiedDate":"2023-10-17"},{"lineNumber":46,"author":{"gitId":"shyanyong"},"content":"        assertTrue(model.getFilteredPrescriptionList().isEmpty());","lastModifiedDate":"2023-10-17"},{"lineNumber":47,"author":{"gitId":"shyanyong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":48,"author":{"gitId":"shyanyong"},"content":"        String expectedMessage \u003d ListTodayPrescriptionCommand.MESSAGE_EMPTY_LIST;","lastModifiedDate":"2023-10-17"},{"lineNumber":49,"author":{"gitId":"shyanyong"},"content":"        expectedModel \u003d new ModelManagerPrescription(model.getPrescriptionList(),","lastModifiedDate":"2023-10-17"},{"lineNumber":50,"author":{"gitId":"shyanyong"},"content":"                new UserPrefsPrescription());","lastModifiedDate":"2023-10-17"},{"lineNumber":51,"author":{"gitId":"shyanyong"},"content":"        expectedModel.updateFilteredPrescriptionList(new IsTodayPredicate());","lastModifiedDate":"2023-10-17"},{"lineNumber":52,"author":{"gitId":"shyanyong"},"content":"        assertCommandSuccess(new ListTodayPrescriptionCommand(), model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-17"},{"lineNumber":53,"author":{"gitId":"shyanyong"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":54,"author":{"gitId":"shyanyong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":55,"author":{"gitId":"shyanyong"},"content":"    @Test public void execute_validWeeklyMedicationsForToday_listTodaySucess() {","lastModifiedDate":"2023-10-17"},{"lineNumber":56,"author":{"gitId":"shyanyong"},"content":"        String expectedMessage \u003d ListTodayPrescriptionCommand.MESSAGE_SUCCESS;","lastModifiedDate":"2023-10-17"},{"lineNumber":57,"author":{"gitId":"shyanyong"},"content":"        model.setPrescriptionList(new PrescriptionList());","lastModifiedDate":"2023-10-17"},{"lineNumber":58,"author":{"gitId":"shyanyong"},"content":"        assertTrue(model.getFilteredPrescriptionList().isEmpty());","lastModifiedDate":"2023-10-17"},{"lineNumber":59,"author":{"gitId":"shyanyong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":60,"author":{"gitId":"shyanyong"},"content":"        LocalDate startLocalDate \u003d LocalDate.now().minusDays(7);","lastModifiedDate":"2023-10-17"},{"lineNumber":61,"author":{"gitId":"shyanyong"},"content":"        LocalDate endLocalDate \u003d LocalDate.now().plusDays(7);","lastModifiedDate":"2023-10-17"},{"lineNumber":62,"author":{"gitId":"shyanyong"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy\");","lastModifiedDate":"2023-10-17"},{"lineNumber":63,"author":{"gitId":"shyanyong"},"content":"        String startDateString \u003d startLocalDate.format(formatter);","lastModifiedDate":"2023-10-17"},{"lineNumber":64,"author":{"gitId":"shyanyong"},"content":"        String endDateString \u003d endLocalDate.format(formatter);","lastModifiedDate":"2023-10-17"},{"lineNumber":65,"author":{"gitId":"shyanyong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":66,"author":{"gitId":"shyanyong"},"content":"        Date startDate \u003d new Date(startDateString);","lastModifiedDate":"2023-10-17"},{"lineNumber":67,"author":{"gitId":"shyanyong"},"content":"        Date endDate \u003d new Date(endDateString);","lastModifiedDate":"2023-10-17"},{"lineNumber":68,"author":{"gitId":"shyanyong"},"content":"        model.addPrescription(new Prescription(new Name(\"Paracetamol\"), new Dosage(\"1\"), new Frequency(\"Weekly\"),","lastModifiedDate":"2023-10-17"},{"lineNumber":69,"author":{"gitId":"shyanyong"},"content":"                startDate, endDate, endDate, new Stock(\"100\"),","lastModifiedDate":"2023-10-17"},{"lineNumber":70,"author":{"gitId":"shyanyong"},"content":"                new ConsumptionCount(\"1\", false), new Note(\"test\")));","lastModifiedDate":"2023-10-17"},{"lineNumber":71,"author":{"gitId":"shyanyong"},"content":"        expectedModel \u003d new ModelManagerPrescription(model.getPrescriptionList(),","lastModifiedDate":"2023-10-17"},{"lineNumber":72,"author":{"gitId":"shyanyong"},"content":"                new UserPrefsPrescription());","lastModifiedDate":"2023-10-17"},{"lineNumber":73,"author":{"gitId":"shyanyong"},"content":"        expectedModel.updateFilteredPrescriptionList(new IsTodayPredicate());","lastModifiedDate":"2023-10-17"},{"lineNumber":74,"author":{"gitId":"shyanyong"},"content":"        assertCommandSuccess(new ListTodayPrescriptionCommand(), model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-17"},{"lineNumber":75,"author":{"gitId":"shyanyong"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":76,"author":{"gitId":"shyanyong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":77,"author":{"gitId":"shyanyong"},"content":"    @Test public void execute_invalidWeeklyMedicationsForToday_listTodayEmpty() {","lastModifiedDate":"2023-10-17"},{"lineNumber":78,"author":{"gitId":"shyanyong"},"content":"        String expectedMessage \u003d ListTodayPrescriptionCommand.MESSAGE_EMPTY_LIST;","lastModifiedDate":"2023-10-17"},{"lineNumber":79,"author":{"gitId":"shyanyong"},"content":"        model.setPrescriptionList(new PrescriptionList());","lastModifiedDate":"2023-10-17"},{"lineNumber":80,"author":{"gitId":"shyanyong"},"content":"        assertTrue(model.getFilteredPrescriptionList().isEmpty());","lastModifiedDate":"2023-10-17"},{"lineNumber":81,"author":{"gitId":"shyanyong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":82,"author":{"gitId":"shyanyong"},"content":"        LocalDate startLocalDate \u003d LocalDate.now().minusDays(6);","lastModifiedDate":"2023-10-17"},{"lineNumber":83,"author":{"gitId":"shyanyong"},"content":"        LocalDate endLocalDate \u003d LocalDate.now().plusDays(7);","lastModifiedDate":"2023-10-17"},{"lineNumber":84,"author":{"gitId":"shyanyong"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy\");","lastModifiedDate":"2023-10-17"},{"lineNumber":85,"author":{"gitId":"shyanyong"},"content":"        String startDateString \u003d startLocalDate.format(formatter);","lastModifiedDate":"2023-10-17"},{"lineNumber":86,"author":{"gitId":"shyanyong"},"content":"        String endDateString \u003d endLocalDate.format(formatter);","lastModifiedDate":"2023-10-17"},{"lineNumber":87,"author":{"gitId":"shyanyong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":88,"author":{"gitId":"shyanyong"},"content":"        Date startDate \u003d new Date(startDateString);","lastModifiedDate":"2023-10-17"},{"lineNumber":89,"author":{"gitId":"shyanyong"},"content":"        Date endDate \u003d new Date(endDateString);","lastModifiedDate":"2023-10-17"},{"lineNumber":90,"author":{"gitId":"shyanyong"},"content":"        model.addPrescription(new Prescription(new Name(\"Paracetamol\"), new Dosage(\"1\"), new Frequency(\"Weekly\"),","lastModifiedDate":"2023-10-17"},{"lineNumber":91,"author":{"gitId":"shyanyong"},"content":"                startDate, endDate, endDate, new Stock(\"100\"),","lastModifiedDate":"2023-10-17"},{"lineNumber":92,"author":{"gitId":"shyanyong"},"content":"                new ConsumptionCount(\"1\", false), new Note(\"test\")));","lastModifiedDate":"2023-10-17"},{"lineNumber":93,"author":{"gitId":"shyanyong"},"content":"        expectedModel \u003d new ModelManagerPrescription(model.getPrescriptionList(),","lastModifiedDate":"2023-10-17"},{"lineNumber":94,"author":{"gitId":"shyanyong"},"content":"                new UserPrefsPrescription());","lastModifiedDate":"2023-10-17"},{"lineNumber":95,"author":{"gitId":"shyanyong"},"content":"        expectedModel.updateFilteredPrescriptionList(new IsTodayPredicate());","lastModifiedDate":"2023-10-17"},{"lineNumber":96,"author":{"gitId":"shyanyong"},"content":"        assertCommandSuccess(new ListTodayPrescriptionCommand(), model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-17"},{"lineNumber":97,"author":{"gitId":"shyanyong"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":98,"author":{"gitId":"shyanyong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":99,"author":{"gitId":"jingyu987"},"content":"    @Test public void execute_validMonthlyMedicationsForToday_listTodaySuccess() {","lastModifiedDate":"2023-10-18"},{"lineNumber":100,"author":{"gitId":"shyanyong"},"content":"        String expectedMessage \u003d ListTodayPrescriptionCommand.MESSAGE_SUCCESS;","lastModifiedDate":"2023-10-17"},{"lineNumber":101,"author":{"gitId":"shyanyong"},"content":"        model.setPrescriptionList(new PrescriptionList());","lastModifiedDate":"2023-10-17"},{"lineNumber":102,"author":{"gitId":"shyanyong"},"content":"        assertTrue(model.getFilteredPrescriptionList().isEmpty());","lastModifiedDate":"2023-10-17"},{"lineNumber":103,"author":{"gitId":"shyanyong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":104,"author":{"gitId":"shyanyong"},"content":"        LocalDate startLocalDate \u003d LocalDate.now().minusDays(30);","lastModifiedDate":"2023-10-17"},{"lineNumber":105,"author":{"gitId":"shyanyong"},"content":"        LocalDate endLocalDate \u003d LocalDate.now().plusDays(30);","lastModifiedDate":"2023-10-17"},{"lineNumber":106,"author":{"gitId":"shyanyong"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy\");","lastModifiedDate":"2023-10-17"},{"lineNumber":107,"author":{"gitId":"shyanyong"},"content":"        String startDateString \u003d startLocalDate.format(formatter);","lastModifiedDate":"2023-10-17"},{"lineNumber":108,"author":{"gitId":"shyanyong"},"content":"        String endDateString \u003d endLocalDate.format(formatter);","lastModifiedDate":"2023-10-17"},{"lineNumber":109,"author":{"gitId":"shyanyong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":110,"author":{"gitId":"shyanyong"},"content":"        Date startDate \u003d new Date(startDateString);","lastModifiedDate":"2023-10-17"},{"lineNumber":111,"author":{"gitId":"shyanyong"},"content":"        Date endDate \u003d new Date(endDateString);","lastModifiedDate":"2023-10-17"},{"lineNumber":112,"author":{"gitId":"shyanyong"},"content":"        model.addPrescription(new Prescription(new Name(\"Paracetamol\"), new Dosage(\"1\"), new Frequency(\"Monthly\"),","lastModifiedDate":"2023-10-17"},{"lineNumber":113,"author":{"gitId":"shyanyong"},"content":"                startDate, endDate, endDate, new Stock(\"100\"),","lastModifiedDate":"2023-10-17"},{"lineNumber":114,"author":{"gitId":"shyanyong"},"content":"                new ConsumptionCount(\"1\", false), new Note(\"test\")));","lastModifiedDate":"2023-10-17"},{"lineNumber":115,"author":{"gitId":"shyanyong"},"content":"        expectedModel \u003d new ModelManagerPrescription(model.getPrescriptionList(),","lastModifiedDate":"2023-10-17"},{"lineNumber":116,"author":{"gitId":"shyanyong"},"content":"                new UserPrefsPrescription());","lastModifiedDate":"2023-10-17"},{"lineNumber":117,"author":{"gitId":"shyanyong"},"content":"        expectedModel.updateFilteredPrescriptionList(new IsTodayPredicate());","lastModifiedDate":"2023-10-17"},{"lineNumber":118,"author":{"gitId":"shyanyong"},"content":"        assertCommandSuccess(new ListTodayPrescriptionCommand(), model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-17"},{"lineNumber":119,"author":{"gitId":"shyanyong"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":120,"author":{"gitId":"shyanyong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":121,"author":{"gitId":"shyanyong"},"content":"    @Test public void execute_invalidMonthlyMedicationsForToday_listTodayEmpty() {","lastModifiedDate":"2023-10-17"},{"lineNumber":122,"author":{"gitId":"shyanyong"},"content":"        String expectedMessage \u003d ListTodayPrescriptionCommand.MESSAGE_EMPTY_LIST;","lastModifiedDate":"2023-10-17"},{"lineNumber":123,"author":{"gitId":"shyanyong"},"content":"        model.setPrescriptionList(new PrescriptionList());","lastModifiedDate":"2023-10-17"},{"lineNumber":124,"author":{"gitId":"shyanyong"},"content":"        assertTrue(model.getFilteredPrescriptionList().isEmpty());","lastModifiedDate":"2023-10-17"},{"lineNumber":125,"author":{"gitId":"shyanyong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":126,"author":{"gitId":"shyanyong"},"content":"        LocalDate startLocalDate \u003d LocalDate.now().minusDays(29);","lastModifiedDate":"2023-10-17"},{"lineNumber":127,"author":{"gitId":"shyanyong"},"content":"        LocalDate endLocalDate \u003d LocalDate.now().plusDays(30);","lastModifiedDate":"2023-10-17"},{"lineNumber":128,"author":{"gitId":"shyanyong"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy\");","lastModifiedDate":"2023-10-17"},{"lineNumber":129,"author":{"gitId":"shyanyong"},"content":"        String startDateString \u003d startLocalDate.format(formatter);","lastModifiedDate":"2023-10-17"},{"lineNumber":130,"author":{"gitId":"shyanyong"},"content":"        String endDateString \u003d endLocalDate.format(formatter);","lastModifiedDate":"2023-10-17"},{"lineNumber":131,"author":{"gitId":"shyanyong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":132,"author":{"gitId":"shyanyong"},"content":"        Date startDate \u003d new Date(startDateString);","lastModifiedDate":"2023-10-17"},{"lineNumber":133,"author":{"gitId":"shyanyong"},"content":"        Date endDate \u003d new Date(endDateString);","lastModifiedDate":"2023-10-17"},{"lineNumber":134,"author":{"gitId":"shyanyong"},"content":"        model.addPrescription(new Prescription(new Name(\"Paracetamol\"), new Dosage(\"1\"), new Frequency(\"Monthly\"),","lastModifiedDate":"2023-10-17"},{"lineNumber":135,"author":{"gitId":"shyanyong"},"content":"                startDate, endDate, endDate, new Stock(\"100\"),","lastModifiedDate":"2023-10-17"},{"lineNumber":136,"author":{"gitId":"shyanyong"},"content":"                new ConsumptionCount(\"1\", false), new Note(\"test\")));","lastModifiedDate":"2023-10-17"},{"lineNumber":137,"author":{"gitId":"shyanyong"},"content":"        expectedModel \u003d new ModelManagerPrescription(model.getPrescriptionList(),","lastModifiedDate":"2023-10-17"},{"lineNumber":138,"author":{"gitId":"shyanyong"},"content":"                new UserPrefsPrescription());","lastModifiedDate":"2023-10-17"},{"lineNumber":139,"author":{"gitId":"shyanyong"},"content":"        expectedModel.updateFilteredPrescriptionList(new IsTodayPredicate());","lastModifiedDate":"2023-10-17"},{"lineNumber":140,"author":{"gitId":"shyanyong"},"content":"        assertCommandSuccess(new ListTodayPrescriptionCommand(), model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-17"},{"lineNumber":141,"author":{"gitId":"shyanyong"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":142,"author":{"gitId":"shyanyong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":143,"author":{"gitId":"shyanyong"},"content":"}","lastModifiedDate":"2023-10-17"}],"authorContributionMap":{"jingyu987":1,"shyanyong":142}},{"path":"src/test/java/seedu/address/logic/commands/TakePrescriptionCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jingyu987"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-18"},{"lineNumber":2,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":3,"author":{"gitId":"jingyu987"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-18"},{"lineNumber":4,"author":{"gitId":"jingyu987"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-18"},{"lineNumber":5,"author":{"gitId":"jingyu987"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-18"},{"lineNumber":6,"author":{"gitId":"jingyu987"},"content":"import static seedu.address.logic.commands.CommandPrescriptionTestUtil.assertCommandFailure;","lastModifiedDate":"2023-10-18"},{"lineNumber":7,"author":{"gitId":"jingyu987"},"content":"import static seedu.address.logic.commands.CommandPrescriptionTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-10-18"},{"lineNumber":8,"author":{"gitId":"jingyu987"},"content":"import static seedu.address.logic.commands.TakePrescriptionCommand.MESSAGE_INSUFFICIENT_STOCK;","lastModifiedDate":"2023-10-18"},{"lineNumber":9,"author":{"gitId":"jingyu987"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PRESCRIPTION;","lastModifiedDate":"2023-10-18"},{"lineNumber":10,"author":{"gitId":"jingyu987"},"content":"import static seedu.address.testutil.TypicalPrescriptions.getTypicalPrescriptionList;","lastModifiedDate":"2023-10-18"},{"lineNumber":11,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":12,"author":{"gitId":"jingyu987"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-10-18"},{"lineNumber":13,"author":{"gitId":"jingyu987"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-18"},{"lineNumber":14,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":15,"author":{"gitId":"jingyu987"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-18"},{"lineNumber":16,"author":{"gitId":"jingyu987"},"content":"import seedu.address.model.ModelManagerPrescription;","lastModifiedDate":"2023-10-18"},{"lineNumber":17,"author":{"gitId":"jingyu987"},"content":"import seedu.address.model.ModelPrescription;","lastModifiedDate":"2023-10-18"},{"lineNumber":18,"author":{"gitId":"jingyu987"},"content":"import seedu.address.model.PrescriptionList;","lastModifiedDate":"2023-10-18"},{"lineNumber":19,"author":{"gitId":"jingyu987"},"content":"import seedu.address.model.UserPrefsPrescription;","lastModifiedDate":"2023-10-18"},{"lineNumber":20,"author":{"gitId":"jingyu987"},"content":"import seedu.address.model.prescription.Name;","lastModifiedDate":"2023-10-18"},{"lineNumber":21,"author":{"gitId":"jingyu987"},"content":"import seedu.address.model.prescription.Prescription;","lastModifiedDate":"2023-10-18"},{"lineNumber":22,"author":{"gitId":"jingyu987"},"content":"import seedu.address.model.prescription.SameNamePredicate;","lastModifiedDate":"2023-10-18"},{"lineNumber":23,"author":{"gitId":"jingyu987"},"content":"import seedu.address.testutil.PrescriptionBuilder;","lastModifiedDate":"2023-10-18"},{"lineNumber":24,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":25,"author":{"gitId":"jingyu987"},"content":"public class TakePrescriptionCommandTest {","lastModifiedDate":"2023-10-18"},{"lineNumber":26,"author":{"gitId":"jingyu987"},"content":"    private ModelPrescription model;","lastModifiedDate":"2023-10-18"},{"lineNumber":27,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":28,"author":{"gitId":"jingyu987"},"content":"    @BeforeEach","lastModifiedDate":"2023-10-18"},{"lineNumber":29,"author":{"gitId":"jingyu987"},"content":"    public void setUp() {","lastModifiedDate":"2023-10-18"},{"lineNumber":30,"author":{"gitId":"jingyu987"},"content":"        model \u003d new ModelManagerPrescription(getTypicalPrescriptionList(), new UserPrefsPrescription());","lastModifiedDate":"2023-10-18"},{"lineNumber":31,"author":{"gitId":"jingyu987"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":32,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":33,"author":{"gitId":"jingyu987"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":34,"author":{"gitId":"jingyu987"},"content":"    public void execute_validDosesToTake_success() throws CommandException {","lastModifiedDate":"2023-10-18"},{"lineNumber":35,"author":{"gitId":"jingyu987"},"content":"        PrescriptionList prescriptionList \u003d new PrescriptionList();","lastModifiedDate":"2023-10-18"},{"lineNumber":36,"author":{"gitId":"jingyu987"},"content":"        Prescription prescriptionToTake \u003d new PrescriptionBuilder()","lastModifiedDate":"2023-10-18"},{"lineNumber":37,"author":{"gitId":"jingyu987"},"content":"                .withConsumptionCount(\"0\")","lastModifiedDate":"2023-10-18"},{"lineNumber":38,"author":{"gitId":"jingyu987"},"content":"                .withStock(\"100\")","lastModifiedDate":"2023-10-18"},{"lineNumber":39,"author":{"gitId":"jingyu987"},"content":"                .build();","lastModifiedDate":"2023-10-18"},{"lineNumber":40,"author":{"gitId":"jingyu987"},"content":"        prescriptionList.addPrescription(prescriptionToTake);","lastModifiedDate":"2023-10-18"},{"lineNumber":41,"author":{"gitId":"jingyu987"},"content":"        ModelPrescription model \u003d new ModelManagerPrescription(prescriptionList, new UserPrefsPrescription());","lastModifiedDate":"2023-10-18"},{"lineNumber":42,"author":{"gitId":"jingyu987"},"content":"        ModelPrescription expectedModel \u003d new ModelManagerPrescription(model.getPrescriptionList(),","lastModifiedDate":"2023-10-18"},{"lineNumber":43,"author":{"gitId":"jingyu987"},"content":"                new UserPrefsPrescription());","lastModifiedDate":"2023-10-18"},{"lineNumber":44,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":45,"author":{"gitId":"jingyu987"},"content":"        int initialStock \u003d Integer.parseInt(prescriptionToTake.getTotalStock().getFullStock());","lastModifiedDate":"2023-10-18"},{"lineNumber":46,"author":{"gitId":"jingyu987"},"content":"        int dosesToTake \u003d 1; //Valid number of doses","lastModifiedDate":"2023-10-18"},{"lineNumber":47,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":48,"author":{"gitId":"jingyu987"},"content":"        TakePrescriptionCommand takePrescriptionCommand \u003d new TakePrescriptionCommand(","lastModifiedDate":"2023-10-18"},{"lineNumber":49,"author":{"gitId":"jingyu987"},"content":"                prescriptionToTake.getName(), dosesToTake);","lastModifiedDate":"2023-10-18"},{"lineNumber":50,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":51,"author":{"gitId":"jingyu987"},"content":"        String expectedMessage \u003d String.format(TakePrescriptionCommand.MESSAGE_SUCCESS,","lastModifiedDate":"2023-10-18"},{"lineNumber":52,"author":{"gitId":"jingyu987"},"content":"                                  prescriptionToTake.getName());","lastModifiedDate":"2023-10-18"},{"lineNumber":53,"author":{"gitId":"jingyu987"},"content":"        expectedModel.takePrescription(prescriptionToTake.getName(), dosesToTake);","lastModifiedDate":"2023-10-18"},{"lineNumber":54,"author":{"gitId":"jingyu987"},"content":"        expectedModel.updateFilteredPrescriptionList(new SameNamePredicate(prescriptionToTake.getName()));","lastModifiedDate":"2023-10-18"},{"lineNumber":55,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":56,"author":{"gitId":"jingyu987"},"content":"        int newStock \u003d Integer.parseInt(expectedModel.getPrescriptionByName(prescriptionToTake.getName())","lastModifiedDate":"2023-10-18"},{"lineNumber":57,"author":{"gitId":"jingyu987"},"content":"                .getTotalStock().getFullStock());","lastModifiedDate":"2023-10-18"},{"lineNumber":58,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":59,"author":{"gitId":"jingyu987"},"content":"        assertCommandSuccess(takePrescriptionCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-18"},{"lineNumber":60,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":61,"author":{"gitId":"jingyu987"},"content":"        assertEquals(initialStock - dosesToTake, newStock);","lastModifiedDate":"2023-10-18"},{"lineNumber":62,"author":{"gitId":"jingyu987"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":63,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":64,"author":{"gitId":"jingyu987"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":65,"author":{"gitId":"jingyu987"},"content":"    public void execute_invalidDosesToTake_throwsCommandException() throws CommandException {","lastModifiedDate":"2023-10-18"},{"lineNumber":66,"author":{"gitId":"jingyu987"},"content":"        Prescription prescriptionToTake \u003d model.getFilteredPrescriptionList()","lastModifiedDate":"2023-10-18"},{"lineNumber":67,"author":{"gitId":"jingyu987"},"content":"                .get(INDEX_FIRST_PRESCRIPTION.getZeroBased());","lastModifiedDate":"2023-10-18"},{"lineNumber":68,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":69,"author":{"gitId":"jingyu987"},"content":"        int initialStock \u003d Integer.parseInt(prescriptionToTake.getTotalStock().getFullStock());","lastModifiedDate":"2023-10-18"},{"lineNumber":70,"author":{"gitId":"jingyu987"},"content":"        int dosesToTake \u003d -1; // Invalid number of doses","lastModifiedDate":"2023-10-18"},{"lineNumber":71,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":72,"author":{"gitId":"jingyu987"},"content":"        TakePrescriptionCommand takePrescriptionCommand \u003d new TakePrescriptionCommand(","lastModifiedDate":"2023-10-18"},{"lineNumber":73,"author":{"gitId":"jingyu987"},"content":"                prescriptionToTake.getName(), dosesToTake);","lastModifiedDate":"2023-10-18"},{"lineNumber":74,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":75,"author":{"gitId":"jingyu987"},"content":"        assertCommandFailure(takePrescriptionCommand, model, TakePrescriptionCommand.MESSAGE_INVALID_DOSE);","lastModifiedDate":"2023-10-18"},{"lineNumber":76,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":77,"author":{"gitId":"jingyu987"},"content":"        // Ensure that the stock is not modified","lastModifiedDate":"2023-10-18"},{"lineNumber":78,"author":{"gitId":"jingyu987"},"content":"        int newStock \u003d Integer.parseInt(model.getPrescriptionByName(prescriptionToTake.getName())","lastModifiedDate":"2023-10-18"},{"lineNumber":79,"author":{"gitId":"jingyu987"},"content":"                .getTotalStock().getFullStock());","lastModifiedDate":"2023-10-18"},{"lineNumber":80,"author":{"gitId":"jingyu987"},"content":"        assertEquals(initialStock, newStock);","lastModifiedDate":"2023-10-18"},{"lineNumber":81,"author":{"gitId":"jingyu987"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":82,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":83,"author":{"gitId":"jingyu987"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":84,"author":{"gitId":"jingyu987"},"content":"    public void execute_insufficientStock_throwsCommandException() throws CommandException {","lastModifiedDate":"2023-10-18"},{"lineNumber":85,"author":{"gitId":"jingyu987"},"content":"        Prescription prescriptionToTake \u003d model.getFilteredPrescriptionList()","lastModifiedDate":"2023-10-18"},{"lineNumber":86,"author":{"gitId":"jingyu987"},"content":"                .get(INDEX_FIRST_PRESCRIPTION.getZeroBased());","lastModifiedDate":"2023-10-18"},{"lineNumber":87,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":88,"author":{"gitId":"jingyu987"},"content":"        int initialStock \u003d Integer.parseInt(prescriptionToTake.getTotalStock().getFullStock());","lastModifiedDate":"2023-10-18"},{"lineNumber":89,"author":{"gitId":"jingyu987"},"content":"        int dosesToTake \u003d initialStock + 1; // More than available stock","lastModifiedDate":"2023-10-18"},{"lineNumber":90,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":91,"author":{"gitId":"jingyu987"},"content":"        TakePrescriptionCommand takePrescriptionCommand \u003d new TakePrescriptionCommand(","lastModifiedDate":"2023-10-18"},{"lineNumber":92,"author":{"gitId":"jingyu987"},"content":"                prescriptionToTake.getName(), dosesToTake);","lastModifiedDate":"2023-10-18"},{"lineNumber":93,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":94,"author":{"gitId":"jingyu987"},"content":"        assertCommandFailure(takePrescriptionCommand, model, MESSAGE_INSUFFICIENT_STOCK);","lastModifiedDate":"2023-10-18"},{"lineNumber":95,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":96,"author":{"gitId":"jingyu987"},"content":"        // Ensure that the stock is not modified","lastModifiedDate":"2023-10-18"},{"lineNumber":97,"author":{"gitId":"jingyu987"},"content":"        int newStock \u003d Integer.parseInt(model.getPrescriptionByName(prescriptionToTake.getName())","lastModifiedDate":"2023-10-18"},{"lineNumber":98,"author":{"gitId":"jingyu987"},"content":"                .getTotalStock().getFullStock());","lastModifiedDate":"2023-10-18"},{"lineNumber":99,"author":{"gitId":"jingyu987"},"content":"        assertEquals(initialStock, newStock);","lastModifiedDate":"2023-10-18"},{"lineNumber":100,"author":{"gitId":"jingyu987"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":101,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":102,"author":{"gitId":"jingyu987"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":103,"author":{"gitId":"jingyu987"},"content":"    public void execute_invalidPrescription_throwsCommandException() {","lastModifiedDate":"2023-10-18"},{"lineNumber":104,"author":{"gitId":"jingyu987"},"content":"        Prescription prescriptionToTake \u003d new PrescriptionBuilder().withName(\"Invalid Name\").build();","lastModifiedDate":"2023-10-18"},{"lineNumber":105,"author":{"gitId":"jingyu987"},"content":"        int dosesToTake \u003d 1; // A valid number of doses","lastModifiedDate":"2023-10-18"},{"lineNumber":106,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":107,"author":{"gitId":"jingyu987"},"content":"        TakePrescriptionCommand takePrescriptionCommand \u003d new TakePrescriptionCommand(","lastModifiedDate":"2023-10-18"},{"lineNumber":108,"author":{"gitId":"jingyu987"},"content":"                prescriptionToTake.getName(), dosesToTake);","lastModifiedDate":"2023-10-18"},{"lineNumber":109,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":110,"author":{"gitId":"jingyu987"},"content":"        assertCommandFailure(takePrescriptionCommand, model, TakePrescriptionCommand.MESSAGE_PRESCRIPTION_NOT_FOUND);","lastModifiedDate":"2023-10-18"},{"lineNumber":111,"author":{"gitId":"jingyu987"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":112,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":113,"author":{"gitId":"jingyu987"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":114,"author":{"gitId":"jingyu987"},"content":"    public void equals() {","lastModifiedDate":"2023-10-18"},{"lineNumber":115,"author":{"gitId":"jingyu987"},"content":"        Name name1 \u003d new Name(\"Aspirin\");","lastModifiedDate":"2023-10-18"},{"lineNumber":116,"author":{"gitId":"jingyu987"},"content":"        Name name2 \u003d new Name(\"Panadol\");","lastModifiedDate":"2023-10-18"},{"lineNumber":117,"author":{"gitId":"jingyu987"},"content":"        int doses1 \u003d 2;","lastModifiedDate":"2023-10-18"},{"lineNumber":118,"author":{"gitId":"jingyu987"},"content":"        int doses2 \u003d 1;","lastModifiedDate":"2023-10-18"},{"lineNumber":119,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":120,"author":{"gitId":"jingyu987"},"content":"        TakePrescriptionCommand command1 \u003d new TakePrescriptionCommand(name1, doses1);","lastModifiedDate":"2023-10-18"},{"lineNumber":121,"author":{"gitId":"jingyu987"},"content":"        TakePrescriptionCommand command2 \u003d new TakePrescriptionCommand(name1, doses1);","lastModifiedDate":"2023-10-18"},{"lineNumber":122,"author":{"gitId":"jingyu987"},"content":"        TakePrescriptionCommand command3 \u003d new TakePrescriptionCommand(name2, doses1);","lastModifiedDate":"2023-10-18"},{"lineNumber":123,"author":{"gitId":"jingyu987"},"content":"        TakePrescriptionCommand command4 \u003d new TakePrescriptionCommand(name1, doses2);","lastModifiedDate":"2023-10-18"},{"lineNumber":124,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":125,"author":{"gitId":"jingyu987"},"content":"        // Same object","lastModifiedDate":"2023-10-18"},{"lineNumber":126,"author":{"gitId":"jingyu987"},"content":"        assertTrue(command1.equals(command1));","lastModifiedDate":"2023-10-18"},{"lineNumber":127,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":128,"author":{"gitId":"jingyu987"},"content":"        // Test for equality","lastModifiedDate":"2023-10-18"},{"lineNumber":129,"author":{"gitId":"jingyu987"},"content":"        assertTrue(command1.equals(command2)); // Same name and doses","lastModifiedDate":"2023-10-18"},{"lineNumber":130,"author":{"gitId":"jingyu987"},"content":"        assertTrue(command2.equals(command1)); // Test for symmetry","lastModifiedDate":"2023-10-18"},{"lineNumber":131,"author":{"gitId":"jingyu987"},"content":"        assertFalse(command1.equals(command3)); // Different names","lastModifiedDate":"2023-10-18"},{"lineNumber":132,"author":{"gitId":"jingyu987"},"content":"        assertFalse(command1.equals(command4)); // Different doses","lastModifiedDate":"2023-10-18"},{"lineNumber":133,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":134,"author":{"gitId":"jingyu987"},"content":"        // Test for non-equality","lastModifiedDate":"2023-10-18"},{"lineNumber":135,"author":{"gitId":"jingyu987"},"content":"        assertFalse(command1.equals(null)); // Null object","lastModifiedDate":"2023-10-18"},{"lineNumber":136,"author":{"gitId":"jingyu987"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":137,"author":{"gitId":"jingyu987"},"content":"}","lastModifiedDate":"2023-10-18"}],"authorContributionMap":{"jingyu987":137}},{"path":"src/test/java/seedu/address/logic/parser/CommandPrescriptionParserTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"RoeReRe"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-16"},{"lineNumber":2,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":3,"author":{"gitId":"RoeReRe"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-16"},{"lineNumber":4,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":5,"author":{"gitId":"RoeReRe"},"content":"import seedu.address.logic.commands.CommandPrescription;","lastModifiedDate":"2023-10-16"},{"lineNumber":6,"author":{"gitId":"RoeReRe"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-16"},{"lineNumber":7,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":8,"author":{"gitId":"RoeReRe"},"content":"/**","lastModifiedDate":"2023-10-16"},{"lineNumber":9,"author":{"gitId":"RoeReRe"},"content":" * Contains helper methods for testing command parsers.","lastModifiedDate":"2023-10-16"},{"lineNumber":10,"author":{"gitId":"RoeReRe"},"content":" */","lastModifiedDate":"2023-10-16"},{"lineNumber":11,"author":{"gitId":"RoeReRe"},"content":"public class CommandPrescriptionParserTestUtil {","lastModifiedDate":"2023-10-16"},{"lineNumber":12,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":13,"author":{"gitId":"RoeReRe"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":14,"author":{"gitId":"RoeReRe"},"content":"     * Asserts that the parsing of {@code userInput} by {@code parser} is successful and the command created","lastModifiedDate":"2023-10-16"},{"lineNumber":15,"author":{"gitId":"RoeReRe"},"content":"     * equals to {@code expectedCommand}.","lastModifiedDate":"2023-10-16"},{"lineNumber":16,"author":{"gitId":"RoeReRe"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":17,"author":{"gitId":"RoeReRe"},"content":"    public static void assertParseSuccess(ParserPrescription\u003c? extends CommandPrescription\u003e parser, String userInput,","lastModifiedDate":"2023-10-16"},{"lineNumber":18,"author":{"gitId":"RoeReRe"},"content":"        CommandPrescription expectedCommand) {","lastModifiedDate":"2023-10-16"},{"lineNumber":19,"author":{"gitId":"RoeReRe"},"content":"        try {","lastModifiedDate":"2023-10-16"},{"lineNumber":20,"author":{"gitId":"RoeReRe"},"content":"            CommandPrescription command \u003d parser.parse(userInput);","lastModifiedDate":"2023-10-16"},{"lineNumber":21,"author":{"gitId":"RoeReRe"},"content":"            assertEquals(expectedCommand, command);","lastModifiedDate":"2023-10-16"},{"lineNumber":22,"author":{"gitId":"RoeReRe"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-10-16"},{"lineNumber":23,"author":{"gitId":"RoeReRe"},"content":"            throw new IllegalArgumentException(\"Invalid userInput.\", pe);","lastModifiedDate":"2023-10-16"},{"lineNumber":24,"author":{"gitId":"RoeReRe"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":25,"author":{"gitId":"RoeReRe"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":26,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":27,"author":{"gitId":"RoeReRe"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":28,"author":{"gitId":"RoeReRe"},"content":"     * Asserts that the parsing of {@code userInput} by {@code parser} is unsuccessful and the error message","lastModifiedDate":"2023-10-16"},{"lineNumber":29,"author":{"gitId":"RoeReRe"},"content":"     * equals to {@code expectedMessage}.","lastModifiedDate":"2023-10-16"},{"lineNumber":30,"author":{"gitId":"RoeReRe"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":31,"author":{"gitId":"RoeReRe"},"content":"    public static void assertParseFailure(ParserPrescription\u003c? extends CommandPrescription\u003e parser, String userInput,","lastModifiedDate":"2023-10-16"},{"lineNumber":32,"author":{"gitId":"RoeReRe"},"content":"        String expectedMessage) {","lastModifiedDate":"2023-10-16"},{"lineNumber":33,"author":{"gitId":"RoeReRe"},"content":"        try {","lastModifiedDate":"2023-10-16"},{"lineNumber":34,"author":{"gitId":"RoeReRe"},"content":"            parser.parse(userInput);","lastModifiedDate":"2023-10-16"},{"lineNumber":35,"author":{"gitId":"RoeReRe"},"content":"            throw new AssertionError(\"The expected ParseException was not thrown.\");","lastModifiedDate":"2023-10-16"},{"lineNumber":36,"author":{"gitId":"RoeReRe"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-10-16"},{"lineNumber":37,"author":{"gitId":"RoeReRe"},"content":"            assertEquals(expectedMessage, pe.getMessage());","lastModifiedDate":"2023-10-16"},{"lineNumber":38,"author":{"gitId":"RoeReRe"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":39,"author":{"gitId":"RoeReRe"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":40,"author":{"gitId":"RoeReRe"},"content":"}","lastModifiedDate":"2023-10-16"}],"authorContributionMap":{"RoeReRe":40}},{"path":"src/test/java/seedu/address/logic/parser/DeletePrescriptionCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"TeeRenJing"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-17"},{"lineNumber":2,"author":{"gitId":"TeeRenJing"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":3,"author":{"gitId":"TeeRenJing"},"content":"import static seedu.address.logic.MessagesPrescription.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"TeeRenJing"},"content":"import static seedu.address.logic.parser.CommandPrescriptionParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"TeeRenJing"},"content":"import static seedu.address.logic.parser.CommandPrescriptionParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"TeeRenJing"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"TeeRenJing"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"TeeRenJing"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"TeeRenJing"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"TeeRenJing"},"content":"import seedu.address.logic.commands.DeletePrescriptionCommand;","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"TeeRenJing"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"TeeRenJing"},"content":"public class DeletePrescriptionCommandParserTest {","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"TeeRenJing"},"content":"    private DeletePrescriptionCommandParser parser \u003d new DeletePrescriptionCommandParser();","lastModifiedDate":"2023-10-17"},{"lineNumber":14,"author":{"gitId":"TeeRenJing"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":15,"author":{"gitId":"TeeRenJing"},"content":"    //write some test cases for the parser","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"TeeRenJing"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"TeeRenJing"},"content":"    public void parse_validArgs_success() {","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"TeeRenJing"},"content":"        // Valid index","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"TeeRenJing"},"content":"        assertParseSuccess(parser, \" i/1\", new DeletePrescriptionCommand(Index.fromOneBased(1)));","lastModifiedDate":"2023-10-17"},{"lineNumber":20,"author":{"gitId":"TeeRenJing"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":21,"author":{"gitId":"TeeRenJing"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":22,"author":{"gitId":"TeeRenJing"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":23,"author":{"gitId":"TeeRenJing"},"content":"    public void parse_zeroIndex_failure() {","lastModifiedDate":"2023-10-17"},{"lineNumber":24,"author":{"gitId":"TeeRenJing"},"content":"        // Valid index","lastModifiedDate":"2023-10-17"},{"lineNumber":25,"author":{"gitId":"TeeRenJing"},"content":"        assertParseFailure(parser, \" i/0\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-10-17"},{"lineNumber":26,"author":{"gitId":"TeeRenJing"},"content":"                DeletePrescriptionCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-17"},{"lineNumber":27,"author":{"gitId":"TeeRenJing"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":28,"author":{"gitId":"TeeRenJing"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":29,"author":{"gitId":"TeeRenJing"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":30,"author":{"gitId":"TeeRenJing"},"content":"    public void parse_negativeIndex_failure() {","lastModifiedDate":"2023-10-17"},{"lineNumber":31,"author":{"gitId":"TeeRenJing"},"content":"        // Valid index","lastModifiedDate":"2023-10-17"},{"lineNumber":32,"author":{"gitId":"TeeRenJing"},"content":"        assertParseFailure(parser, \" i/-1\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-10-17"},{"lineNumber":33,"author":{"gitId":"TeeRenJing"},"content":"                DeletePrescriptionCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-17"},{"lineNumber":34,"author":{"gitId":"TeeRenJing"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":35,"author":{"gitId":"TeeRenJing"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":36,"author":{"gitId":"TeeRenJing"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":37,"author":{"gitId":"TeeRenJing"},"content":"    public void parse_nonNumberIndex_failure() {","lastModifiedDate":"2023-10-17"},{"lineNumber":38,"author":{"gitId":"TeeRenJing"},"content":"        // Valid index","lastModifiedDate":"2023-10-17"},{"lineNumber":39,"author":{"gitId":"TeeRenJing"},"content":"        assertParseFailure(parser, \" i/abc\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-10-17"},{"lineNumber":40,"author":{"gitId":"TeeRenJing"},"content":"                DeletePrescriptionCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-17"},{"lineNumber":41,"author":{"gitId":"TeeRenJing"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":42,"author":{"gitId":"TeeRenJing"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":43,"author":{"gitId":"TeeRenJing"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":44,"author":{"gitId":"TeeRenJing"},"content":"    public void parse_emptyPreamble_failure() {","lastModifiedDate":"2023-10-17"},{"lineNumber":45,"author":{"gitId":"TeeRenJing"},"content":"        // No index specified","lastModifiedDate":"2023-10-17"},{"lineNumber":46,"author":{"gitId":"TeeRenJing"},"content":"        assertParseFailure(parser, \"\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-10-17"},{"lineNumber":47,"author":{"gitId":"TeeRenJing"},"content":"                DeletePrescriptionCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-17"},{"lineNumber":48,"author":{"gitId":"TeeRenJing"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":49,"author":{"gitId":"TeeRenJing"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":50,"author":{"gitId":"TeeRenJing"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":51,"author":{"gitId":"TeeRenJing"},"content":"    public void parse_whitespacePreamble_failure() {","lastModifiedDate":"2023-10-17"},{"lineNumber":52,"author":{"gitId":"TeeRenJing"},"content":"        // No index specified","lastModifiedDate":"2023-10-17"},{"lineNumber":53,"author":{"gitId":"TeeRenJing"},"content":"        assertParseFailure(parser, \" \", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-10-17"},{"lineNumber":54,"author":{"gitId":"TeeRenJing"},"content":"                DeletePrescriptionCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-17"},{"lineNumber":55,"author":{"gitId":"TeeRenJing"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":56,"author":{"gitId":"TeeRenJing"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":57,"author":{"gitId":"TeeRenJing"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":58,"author":{"gitId":"TeeRenJing"},"content":"    public void parse_extraValues_failure() {","lastModifiedDate":"2023-10-17"},{"lineNumber":59,"author":{"gitId":"TeeRenJing"},"content":"        // Random values","lastModifiedDate":"2023-10-17"},{"lineNumber":60,"author":{"gitId":"TeeRenJing"},"content":"        assertParseFailure(parser, \"ABCDEFGH\",","lastModifiedDate":"2023-10-17"},{"lineNumber":61,"author":{"gitId":"TeeRenJing"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-10-17"},{"lineNumber":62,"author":{"gitId":"TeeRenJing"},"content":"                        DeletePrescriptionCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-17"},{"lineNumber":63,"author":{"gitId":"TeeRenJing"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":64,"author":{"gitId":"TeeRenJing"},"content":"        // Random prefixes","lastModifiedDate":"2023-10-17"},{"lineNumber":65,"author":{"gitId":"TeeRenJing"},"content":"        assertParseFailure(parser, \"mn/ABCD d/2\",","lastModifiedDate":"2023-10-17"},{"lineNumber":66,"author":{"gitId":"TeeRenJing"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-10-17"},{"lineNumber":67,"author":{"gitId":"TeeRenJing"},"content":"                        DeletePrescriptionCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-17"},{"lineNumber":68,"author":{"gitId":"TeeRenJing"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":69,"author":{"gitId":"TeeRenJing"},"content":"}","lastModifiedDate":"2023-10-17"}],"authorContributionMap":{"TeeRenJing":69}},{"path":"src/test/java/seedu/address/logic/parser/ListPrescriptionCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"RoeReRe"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-16"},{"lineNumber":2,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":3,"author":{"gitId":"RoeReRe"},"content":"import static seedu.address.logic.parser.CommandPrescriptionParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-10-16"},{"lineNumber":4,"author":{"gitId":"RoeReRe"},"content":"import static seedu.address.logic.parser.CommandPrescriptionParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-10-16"},{"lineNumber":5,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":6,"author":{"gitId":"RoeReRe"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-16"},{"lineNumber":7,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":8,"author":{"gitId":"RoeReRe"},"content":"import seedu.address.logic.MessagesPrescription;","lastModifiedDate":"2023-10-16"},{"lineNumber":9,"author":{"gitId":"RoeReRe"},"content":"import seedu.address.logic.commands.ListPrescriptionCommand;","lastModifiedDate":"2023-10-16"},{"lineNumber":10,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":11,"author":{"gitId":"RoeReRe"},"content":"public class ListPrescriptionCommandParserTest {","lastModifiedDate":"2023-10-16"},{"lineNumber":12,"author":{"gitId":"RoeReRe"},"content":"    private ListPrescriptionCommandParser parser \u003d new ListPrescriptionCommandParser();","lastModifiedDate":"2023-10-16"},{"lineNumber":13,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":14,"author":{"gitId":"RoeReRe"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":15,"author":{"gitId":"RoeReRe"},"content":"    public void parse_emptyPreamble_success() {","lastModifiedDate":"2023-10-16"},{"lineNumber":16,"author":{"gitId":"RoeReRe"},"content":"        assertParseSuccess(parser, \"\", new ListPrescriptionCommand());","lastModifiedDate":"2023-10-16"},{"lineNumber":17,"author":{"gitId":"RoeReRe"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":18,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":19,"author":{"gitId":"RoeReRe"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":20,"author":{"gitId":"RoeReRe"},"content":"    public void parse_preambleWhitespace_success() {","lastModifiedDate":"2023-10-16"},{"lineNumber":21,"author":{"gitId":"RoeReRe"},"content":"        assertParseSuccess(parser, \" \", new ListPrescriptionCommand());","lastModifiedDate":"2023-10-16"},{"lineNumber":22,"author":{"gitId":"RoeReRe"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":23,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":24,"author":{"gitId":"RoeReRe"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":25,"author":{"gitId":"RoeReRe"},"content":"    public void parse_extraValues_failure() {","lastModifiedDate":"2023-10-16"},{"lineNumber":26,"author":{"gitId":"RoeReRe"},"content":"        // Random values","lastModifiedDate":"2023-10-16"},{"lineNumber":27,"author":{"gitId":"RoeReRe"},"content":"        assertParseFailure(parser, \"ABCDEFGH\",","lastModifiedDate":"2023-10-16"},{"lineNumber":28,"author":{"gitId":"RoeReRe"},"content":"            String.format(MessagesPrescription.MESSAGE_INVALID_COMMAND_FORMAT, ListPrescriptionCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-16"},{"lineNumber":29,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":30,"author":{"gitId":"RoeReRe"},"content":"        // Random prefixes","lastModifiedDate":"2023-10-16"},{"lineNumber":31,"author":{"gitId":"RoeReRe"},"content":"        assertParseFailure(parser, \"mn/ABCD d/2\",","lastModifiedDate":"2023-10-16"},{"lineNumber":32,"author":{"gitId":"RoeReRe"},"content":"            String.format(MessagesPrescription.MESSAGE_INVALID_COMMAND_FORMAT, ListPrescriptionCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-16"},{"lineNumber":33,"author":{"gitId":"RoeReRe"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":34,"author":{"gitId":"RoeReRe"},"content":"}","lastModifiedDate":"2023-10-16"}],"authorContributionMap":{"RoeReRe":34}},{"path":"src/test/java/seedu/address/logic/parser/ListTodayPrescriptionCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"shyanyong"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-17"},{"lineNumber":2,"author":{"gitId":"shyanyong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":3,"author":{"gitId":"shyanyong"},"content":"import static seedu.address.logic.parser.CommandPrescriptionParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"shyanyong"},"content":"import static seedu.address.logic.parser.CommandPrescriptionParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"shyanyong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"shyanyong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"shyanyong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"shyanyong"},"content":"import seedu.address.logic.MessagesPrescription;","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"shyanyong"},"content":"import seedu.address.logic.commands.ListTodayPrescriptionCommand;","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"shyanyong"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"shyanyong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"shyanyong"},"content":"public class ListTodayPrescriptionCommandParserTest {","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"shyanyong"},"content":"    private ListTodayPrescriptionCommandParser parser \u003d new ListTodayPrescriptionCommandParser();","lastModifiedDate":"2023-10-17"},{"lineNumber":14,"author":{"gitId":"shyanyong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":15,"author":{"gitId":"shyanyong"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"shyanyong"},"content":"    public void parse_validInput_success() throws ParseException {","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"shyanyong"},"content":"        assertParseSuccess(parser, \"\", new ListTodayPrescriptionCommand());","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"shyanyong"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"shyanyong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":20,"author":{"gitId":"shyanyong"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":21,"author":{"gitId":"shyanyong"},"content":"    public void parse_invalidInput_failure() {","lastModifiedDate":"2023-10-17"},{"lineNumber":22,"author":{"gitId":"shyanyong"},"content":"        assertParseFailure(parser, \"invalid input\",","lastModifiedDate":"2023-10-17"},{"lineNumber":23,"author":{"gitId":"shyanyong"},"content":"                String.format(MessagesPrescription.MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-10-17"},{"lineNumber":24,"author":{"gitId":"shyanyong"},"content":"                        ListTodayPrescriptionCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-17"},{"lineNumber":25,"author":{"gitId":"shyanyong"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":26,"author":{"gitId":"shyanyong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":27,"author":{"gitId":"shyanyong"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":28,"author":{"gitId":"shyanyong"},"content":"    public void parse_extraValues_failure() {","lastModifiedDate":"2023-10-17"},{"lineNumber":29,"author":{"gitId":"shyanyong"},"content":"        // Random values","lastModifiedDate":"2023-10-17"},{"lineNumber":30,"author":{"gitId":"shyanyong"},"content":"        assertParseFailure(parser, \"ABCDEFGH\",","lastModifiedDate":"2023-10-17"},{"lineNumber":31,"author":{"gitId":"shyanyong"},"content":"                String.format(MessagesPrescription.MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-10-17"},{"lineNumber":32,"author":{"gitId":"shyanyong"},"content":"                        ListTodayPrescriptionCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-17"},{"lineNumber":33,"author":{"gitId":"shyanyong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":34,"author":{"gitId":"shyanyong"},"content":"        // Random prefixes","lastModifiedDate":"2023-10-17"},{"lineNumber":35,"author":{"gitId":"shyanyong"},"content":"        assertParseFailure(parser, \"mn/ABCD d/2\",","lastModifiedDate":"2023-10-17"},{"lineNumber":36,"author":{"gitId":"shyanyong"},"content":"                String.format(MessagesPrescription.MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-10-17"},{"lineNumber":37,"author":{"gitId":"shyanyong"},"content":"                        ListTodayPrescriptionCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-17"},{"lineNumber":38,"author":{"gitId":"shyanyong"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":39,"author":{"gitId":"shyanyong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":40,"author":{"gitId":"shyanyong"},"content":"}","lastModifiedDate":"2023-10-17"}],"authorContributionMap":{"shyanyong":40}},{"path":"src/test/java/seedu/address/logic/parser/ParserUtilPrescriptionTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"RoeReRe"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-16"},{"lineNumber":2,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":3,"author":{"gitId":"RoeReRe"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-16"},{"lineNumber":4,"author":{"gitId":"RoeReRe"},"content":"import static seedu.address.logic.parser.ParserUtilPrescription.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2023-10-16"},{"lineNumber":5,"author":{"gitId":"RoeReRe"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-16"},{"lineNumber":6,"author":{"gitId":"RoeReRe"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PRESCRIPTION;","lastModifiedDate":"2023-10-16"},{"lineNumber":7,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":8,"author":{"gitId":"RoeReRe"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-16"},{"lineNumber":9,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":10,"author":{"gitId":"RoeReRe"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-16"},{"lineNumber":11,"author":{"gitId":"RoeReRe"},"content":"import seedu.address.model.prescription.Date;","lastModifiedDate":"2023-10-16"},{"lineNumber":12,"author":{"gitId":"RoeReRe"},"content":"import seedu.address.model.prescription.Dosage;","lastModifiedDate":"2023-10-16"},{"lineNumber":13,"author":{"gitId":"RoeReRe"},"content":"import seedu.address.model.prescription.Frequency;","lastModifiedDate":"2023-10-16"},{"lineNumber":14,"author":{"gitId":"RoeReRe"},"content":"import seedu.address.model.prescription.Name;","lastModifiedDate":"2023-10-16"},{"lineNumber":15,"author":{"gitId":"RoeReRe"},"content":"import seedu.address.model.prescription.Note;","lastModifiedDate":"2023-10-16"},{"lineNumber":16,"author":{"gitId":"RoeReRe"},"content":"import seedu.address.model.prescription.Stock;","lastModifiedDate":"2023-10-16"},{"lineNumber":17,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":18,"author":{"gitId":"RoeReRe"},"content":"public class ParserUtilPrescriptionTest {","lastModifiedDate":"2023-10-16"},{"lineNumber":19,"author":{"gitId":"RoeReRe"},"content":"    private static final String INVALID_NAME \u003d \"@sp!r!n\";","lastModifiedDate":"2023-10-16"},{"lineNumber":20,"author":{"gitId":"RoeReRe"},"content":"    private static final String INVALID_DOSAGE \u003d \"abc\";","lastModifiedDate":"2023-10-16"},{"lineNumber":21,"author":{"gitId":"RoeReRe"},"content":"    private static final String INVALID_FREQUENCY \u003d \"Yearly\";","lastModifiedDate":"2023-10-16"},{"lineNumber":22,"author":{"gitId":"RoeReRe"},"content":"    private static final String INVALID_START_DATE \u003d \"1/1/2023\";","lastModifiedDate":"2023-10-16"},{"lineNumber":23,"author":{"gitId":"RoeReRe"},"content":"    private static final String INVALID_END_DATE \u003d \"1/1/2024\";","lastModifiedDate":"2023-10-16"},{"lineNumber":24,"author":{"gitId":"RoeReRe"},"content":"    private static final String INVALID_EXPIRY_DATE \u003d \"1/1/2025\";","lastModifiedDate":"2023-10-16"},{"lineNumber":25,"author":{"gitId":"RoeReRe"},"content":"    private static final String INVALID_TOTAL_STOCK \u003d \"a\";","lastModifiedDate":"2023-10-16"},{"lineNumber":26,"author":{"gitId":"RoeReRe"},"content":"    private static final String INVALID_NOTE \u003d \"***\";","lastModifiedDate":"2023-10-16"},{"lineNumber":27,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":28,"author":{"gitId":"RoeReRe"},"content":"    private static final String VALID_NAME \u003d \"Aspirin\";","lastModifiedDate":"2023-10-16"},{"lineNumber":29,"author":{"gitId":"RoeReRe"},"content":"    private static final String VALID_DOSAGE \u003d \"1\";","lastModifiedDate":"2023-10-16"},{"lineNumber":30,"author":{"gitId":"RoeReRe"},"content":"    private static final String VALID_FREQUENCY \u003d \"Daily\";","lastModifiedDate":"2023-10-16"},{"lineNumber":31,"author":{"gitId":"RoeReRe"},"content":"    private static final String VALID_START_DATE \u003d \"01/10/2023\";","lastModifiedDate":"2023-10-16"},{"lineNumber":32,"author":{"gitId":"RoeReRe"},"content":"    private static final String VALID_END_DATE \u003d \"23/02/2024\";","lastModifiedDate":"2023-10-16"},{"lineNumber":33,"author":{"gitId":"RoeReRe"},"content":"    private static final String VALID_EXPIRY_DATE \u003d \"12/12/2024\";","lastModifiedDate":"2023-10-16"},{"lineNumber":34,"author":{"gitId":"RoeReRe"},"content":"    private static final String VALID_TOTAL_STOCK \u003d \"100\";","lastModifiedDate":"2023-10-16"},{"lineNumber":35,"author":{"gitId":"RoeReRe"},"content":"    private static final String VALID_NOTE \u003d \"Take after food\";","lastModifiedDate":"2023-10-16"},{"lineNumber":36,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":37,"author":{"gitId":"RoeReRe"},"content":"    private static final String WHITESPACE \u003d \" \\t\\r\\n\";","lastModifiedDate":"2023-10-16"},{"lineNumber":38,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":39,"author":{"gitId":"RoeReRe"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":40,"author":{"gitId":"RoeReRe"},"content":"    public void parseIndex_invalidInput_throwsParseException() {","lastModifiedDate":"2023-10-16"},{"lineNumber":41,"author":{"gitId":"RoeReRe"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtilPrescription.parseIndex(\"10 a\"));","lastModifiedDate":"2023-10-16"},{"lineNumber":42,"author":{"gitId":"RoeReRe"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":43,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":44,"author":{"gitId":"RoeReRe"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":45,"author":{"gitId":"RoeReRe"},"content":"    public void parseIndex_outOfRangeInput_throwsParseException() {","lastModifiedDate":"2023-10-16"},{"lineNumber":46,"author":{"gitId":"RoeReRe"},"content":"        assertThrows(ParseException.class, MESSAGE_INVALID_INDEX, ()","lastModifiedDate":"2023-10-16"},{"lineNumber":47,"author":{"gitId":"RoeReRe"},"content":"            -\u003e ParserUtilPrescription.parseIndex(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2023-10-16"},{"lineNumber":48,"author":{"gitId":"RoeReRe"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":49,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":50,"author":{"gitId":"RoeReRe"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":51,"author":{"gitId":"RoeReRe"},"content":"    public void parseIndex_validInput_success() throws Exception {","lastModifiedDate":"2023-10-16"},{"lineNumber":52,"author":{"gitId":"RoeReRe"},"content":"        // No whitespaces","lastModifiedDate":"2023-10-16"},{"lineNumber":53,"author":{"gitId":"RoeReRe"},"content":"        assertEquals(INDEX_FIRST_PRESCRIPTION, ParserUtilPrescription.parseIndex(\"1\"));","lastModifiedDate":"2023-10-16"},{"lineNumber":54,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":55,"author":{"gitId":"RoeReRe"},"content":"        // Leading and trailing whitespaces","lastModifiedDate":"2023-10-16"},{"lineNumber":56,"author":{"gitId":"RoeReRe"},"content":"        assertEquals(INDEX_FIRST_PRESCRIPTION, ParserUtilPrescription.parseIndex(\"  1  \"));","lastModifiedDate":"2023-10-16"},{"lineNumber":57,"author":{"gitId":"RoeReRe"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":58,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":59,"author":{"gitId":"RoeReRe"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":60,"author":{"gitId":"RoeReRe"},"content":"    public void parseName_null_throwsNullPointerException() {","lastModifiedDate":"2023-10-16"},{"lineNumber":61,"author":{"gitId":"RoeReRe"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtilPrescription.parseName((String) null));","lastModifiedDate":"2023-10-16"},{"lineNumber":62,"author":{"gitId":"RoeReRe"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":63,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":64,"author":{"gitId":"RoeReRe"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":65,"author":{"gitId":"RoeReRe"},"content":"    public void parseName_invalidValue_throwsParseException() {","lastModifiedDate":"2023-10-16"},{"lineNumber":66,"author":{"gitId":"RoeReRe"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtilPrescription.parseName(INVALID_NAME));","lastModifiedDate":"2023-10-16"},{"lineNumber":67,"author":{"gitId":"RoeReRe"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":68,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":69,"author":{"gitId":"RoeReRe"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":70,"author":{"gitId":"RoeReRe"},"content":"    public void parseName_validValueWithoutWhitespace_returnsName() throws Exception {","lastModifiedDate":"2023-10-16"},{"lineNumber":71,"author":{"gitId":"RoeReRe"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2023-10-16"},{"lineNumber":72,"author":{"gitId":"RoeReRe"},"content":"        assertEquals(expectedName, ParserUtilPrescription.parseName(VALID_NAME));","lastModifiedDate":"2023-10-16"},{"lineNumber":73,"author":{"gitId":"RoeReRe"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":74,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":75,"author":{"gitId":"RoeReRe"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":76,"author":{"gitId":"RoeReRe"},"content":"    public void parseName_validValueWithWhitespace_returnsTrimmedName() throws Exception {","lastModifiedDate":"2023-10-16"},{"lineNumber":77,"author":{"gitId":"RoeReRe"},"content":"        String nameWithWhitespace \u003d WHITESPACE + VALID_NAME + WHITESPACE;","lastModifiedDate":"2023-10-16"},{"lineNumber":78,"author":{"gitId":"RoeReRe"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2023-10-16"},{"lineNumber":79,"author":{"gitId":"RoeReRe"},"content":"        assertEquals(expectedName, ParserUtilPrescription.parseName(nameWithWhitespace));","lastModifiedDate":"2023-10-16"},{"lineNumber":80,"author":{"gitId":"RoeReRe"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":81,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":82,"author":{"gitId":"RoeReRe"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":83,"author":{"gitId":"RoeReRe"},"content":"    public void parseDosage_null_throwsNullPointerException() {","lastModifiedDate":"2023-10-16"},{"lineNumber":84,"author":{"gitId":"RoeReRe"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtilPrescription.parseDosage((String) null));","lastModifiedDate":"2023-10-16"},{"lineNumber":85,"author":{"gitId":"RoeReRe"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":86,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":87,"author":{"gitId":"RoeReRe"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":88,"author":{"gitId":"RoeReRe"},"content":"    public void parseDosage_invalidValue_throwsParseException() {","lastModifiedDate":"2023-10-16"},{"lineNumber":89,"author":{"gitId":"RoeReRe"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtilPrescription.parseDosage(INVALID_DOSAGE));","lastModifiedDate":"2023-10-16"},{"lineNumber":90,"author":{"gitId":"RoeReRe"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":91,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":92,"author":{"gitId":"RoeReRe"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":93,"author":{"gitId":"RoeReRe"},"content":"    public void parseDosage_validValueWithoutWhitespace_returnsDosage() throws Exception {","lastModifiedDate":"2023-10-16"},{"lineNumber":94,"author":{"gitId":"RoeReRe"},"content":"        Dosage expectedDosage \u003d new Dosage(VALID_DOSAGE);","lastModifiedDate":"2023-10-16"},{"lineNumber":95,"author":{"gitId":"RoeReRe"},"content":"        assertEquals(expectedDosage, ParserUtilPrescription.parseDosage(VALID_DOSAGE));","lastModifiedDate":"2023-10-16"},{"lineNumber":96,"author":{"gitId":"RoeReRe"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":97,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":98,"author":{"gitId":"RoeReRe"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":99,"author":{"gitId":"RoeReRe"},"content":"    public void parseDosage_validValueWithWhitespace_returnsTrimmedDosage() throws Exception {","lastModifiedDate":"2023-10-16"},{"lineNumber":100,"author":{"gitId":"RoeReRe"},"content":"        String dosageWithWhitespace \u003d WHITESPACE + VALID_DOSAGE + WHITESPACE;","lastModifiedDate":"2023-10-16"},{"lineNumber":101,"author":{"gitId":"RoeReRe"},"content":"        Dosage expectedDosage \u003d new Dosage(VALID_DOSAGE);","lastModifiedDate":"2023-10-16"},{"lineNumber":102,"author":{"gitId":"RoeReRe"},"content":"        assertEquals(expectedDosage, ParserUtilPrescription.parseDosage(dosageWithWhitespace));","lastModifiedDate":"2023-10-16"},{"lineNumber":103,"author":{"gitId":"RoeReRe"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":104,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":105,"author":{"gitId":"RoeReRe"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":106,"author":{"gitId":"RoeReRe"},"content":"    public void parseFrequency_null_throwsNullPointerException() {","lastModifiedDate":"2023-10-16"},{"lineNumber":107,"author":{"gitId":"RoeReRe"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtilPrescription.parseFrequency((String) null));","lastModifiedDate":"2023-10-16"},{"lineNumber":108,"author":{"gitId":"RoeReRe"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":109,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":110,"author":{"gitId":"RoeReRe"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":111,"author":{"gitId":"RoeReRe"},"content":"    public void parseFrequency_invalidValue_throwsParseException() {","lastModifiedDate":"2023-10-16"},{"lineNumber":112,"author":{"gitId":"RoeReRe"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtilPrescription.parseFrequency(INVALID_FREQUENCY));","lastModifiedDate":"2023-10-16"},{"lineNumber":113,"author":{"gitId":"RoeReRe"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":114,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":115,"author":{"gitId":"RoeReRe"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":116,"author":{"gitId":"RoeReRe"},"content":"    public void parseFrequency_validValueWithoutWhitespace_returnsFrequency() throws Exception {","lastModifiedDate":"2023-10-16"},{"lineNumber":117,"author":{"gitId":"RoeReRe"},"content":"        Frequency expectedFrequency \u003d new Frequency(VALID_FREQUENCY);","lastModifiedDate":"2023-10-16"},{"lineNumber":118,"author":{"gitId":"RoeReRe"},"content":"        assertEquals(expectedFrequency, ParserUtilPrescription.parseFrequency(VALID_FREQUENCY));","lastModifiedDate":"2023-10-16"},{"lineNumber":119,"author":{"gitId":"RoeReRe"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":120,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":121,"author":{"gitId":"RoeReRe"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":122,"author":{"gitId":"RoeReRe"},"content":"    public void parseFrequency_validValueWithWhitespace_returnsTrimmedFrequency() throws Exception {","lastModifiedDate":"2023-10-16"},{"lineNumber":123,"author":{"gitId":"RoeReRe"},"content":"        String frequencyWithWhitespace \u003d WHITESPACE + VALID_FREQUENCY + WHITESPACE;","lastModifiedDate":"2023-10-16"},{"lineNumber":124,"author":{"gitId":"RoeReRe"},"content":"        Frequency expectedFrequency \u003d new Frequency(VALID_FREQUENCY);","lastModifiedDate":"2023-10-16"},{"lineNumber":125,"author":{"gitId":"RoeReRe"},"content":"        assertEquals(expectedFrequency, ParserUtilPrescription.parseFrequency(frequencyWithWhitespace));","lastModifiedDate":"2023-10-16"},{"lineNumber":126,"author":{"gitId":"RoeReRe"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":127,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":128,"author":{"gitId":"RoeReRe"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":129,"author":{"gitId":"RoeReRe"},"content":"    public void parseStartDate_null_throwsNullPointerException() {","lastModifiedDate":"2023-10-16"},{"lineNumber":130,"author":{"gitId":"RoeReRe"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtilPrescription.parseStartDate((String) null));","lastModifiedDate":"2023-10-16"},{"lineNumber":131,"author":{"gitId":"RoeReRe"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":132,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":133,"author":{"gitId":"RoeReRe"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":134,"author":{"gitId":"RoeReRe"},"content":"    public void parseStartDate_invalidValue_throwsParseException() {","lastModifiedDate":"2023-10-16"},{"lineNumber":135,"author":{"gitId":"RoeReRe"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtilPrescription.parseStartDate(INVALID_START_DATE));","lastModifiedDate":"2023-10-16"},{"lineNumber":136,"author":{"gitId":"RoeReRe"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":137,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":138,"author":{"gitId":"RoeReRe"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":139,"author":{"gitId":"RoeReRe"},"content":"    public void parseStartDate_validValueWithoutWhitespace_returnsStartDate() throws Exception {","lastModifiedDate":"2023-10-16"},{"lineNumber":140,"author":{"gitId":"RoeReRe"},"content":"        Date expectedStartDate \u003d new Date(VALID_START_DATE);","lastModifiedDate":"2023-10-16"},{"lineNumber":141,"author":{"gitId":"RoeReRe"},"content":"        assertEquals(expectedStartDate, ParserUtilPrescription.parseStartDate(VALID_START_DATE));","lastModifiedDate":"2023-10-16"},{"lineNumber":142,"author":{"gitId":"RoeReRe"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":143,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":144,"author":{"gitId":"RoeReRe"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":145,"author":{"gitId":"RoeReRe"},"content":"    public void parseStartDate_validValueWithWhitespace_returnsTrimmedStartDate() throws Exception {","lastModifiedDate":"2023-10-16"},{"lineNumber":146,"author":{"gitId":"RoeReRe"},"content":"        String startDateWithWhitespace \u003d WHITESPACE + VALID_START_DATE + WHITESPACE;","lastModifiedDate":"2023-10-16"},{"lineNumber":147,"author":{"gitId":"RoeReRe"},"content":"        Date expectedStartDate \u003d new Date(VALID_START_DATE);","lastModifiedDate":"2023-10-16"},{"lineNumber":148,"author":{"gitId":"RoeReRe"},"content":"        assertEquals(expectedStartDate, ParserUtilPrescription.parseStartDate(startDateWithWhitespace));","lastModifiedDate":"2023-10-16"},{"lineNumber":149,"author":{"gitId":"RoeReRe"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":150,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":151,"author":{"gitId":"RoeReRe"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":152,"author":{"gitId":"RoeReRe"},"content":"    public void parseEndDate_null_throwsNullPointerException() {","lastModifiedDate":"2023-10-16"},{"lineNumber":153,"author":{"gitId":"RoeReRe"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtilPrescription.parseEndDate((String) null));","lastModifiedDate":"2023-10-16"},{"lineNumber":154,"author":{"gitId":"RoeReRe"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":155,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":156,"author":{"gitId":"RoeReRe"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":157,"author":{"gitId":"RoeReRe"},"content":"    public void parseEndDate_invalidValue_throwsParseException() {","lastModifiedDate":"2023-10-16"},{"lineNumber":158,"author":{"gitId":"RoeReRe"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtilPrescription.parseEndDate(INVALID_END_DATE));","lastModifiedDate":"2023-10-16"},{"lineNumber":159,"author":{"gitId":"RoeReRe"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":160,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":161,"author":{"gitId":"RoeReRe"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":162,"author":{"gitId":"RoeReRe"},"content":"    public void parseEndDate_validValueWithoutWhitespace_returnsEndDate() throws Exception {","lastModifiedDate":"2023-10-16"},{"lineNumber":163,"author":{"gitId":"RoeReRe"},"content":"        Date expectedEndDate \u003d new Date(VALID_END_DATE);","lastModifiedDate":"2023-10-16"},{"lineNumber":164,"author":{"gitId":"RoeReRe"},"content":"        assertEquals(expectedEndDate, ParserUtilPrescription.parseEndDate(VALID_END_DATE));","lastModifiedDate":"2023-10-16"},{"lineNumber":165,"author":{"gitId":"RoeReRe"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":166,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":167,"author":{"gitId":"RoeReRe"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":168,"author":{"gitId":"RoeReRe"},"content":"    public void parseEndDate_validValueWithWhitespace_returnsTrimmedEndDate() throws Exception {","lastModifiedDate":"2023-10-16"},{"lineNumber":169,"author":{"gitId":"RoeReRe"},"content":"        String endDateWithWhitespace \u003d WHITESPACE + VALID_END_DATE + WHITESPACE;","lastModifiedDate":"2023-10-16"},{"lineNumber":170,"author":{"gitId":"RoeReRe"},"content":"        Date expectedEndDate \u003d new Date(VALID_END_DATE);","lastModifiedDate":"2023-10-16"},{"lineNumber":171,"author":{"gitId":"RoeReRe"},"content":"        assertEquals(expectedEndDate, ParserUtilPrescription.parseEndDate(endDateWithWhitespace));","lastModifiedDate":"2023-10-16"},{"lineNumber":172,"author":{"gitId":"RoeReRe"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":173,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":174,"author":{"gitId":"RoeReRe"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":175,"author":{"gitId":"RoeReRe"},"content":"    public void parseExpiryDate_null_throwsNullPointerException() {","lastModifiedDate":"2023-10-16"},{"lineNumber":176,"author":{"gitId":"RoeReRe"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtilPrescription.parseExpiryDate((String) null));","lastModifiedDate":"2023-10-16"},{"lineNumber":177,"author":{"gitId":"RoeReRe"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":178,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":179,"author":{"gitId":"RoeReRe"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":180,"author":{"gitId":"RoeReRe"},"content":"    public void parseExpiryDate_invalidValue_throwsParseException() {","lastModifiedDate":"2023-10-16"},{"lineNumber":181,"author":{"gitId":"RoeReRe"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtilPrescription.parseExpiryDate(INVALID_EXPIRY_DATE));","lastModifiedDate":"2023-10-16"},{"lineNumber":182,"author":{"gitId":"RoeReRe"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":183,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":184,"author":{"gitId":"RoeReRe"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":185,"author":{"gitId":"RoeReRe"},"content":"    public void parseExpiryDate_validValueWithoutWhitespace_returnsExpiryDate() throws Exception {","lastModifiedDate":"2023-10-16"},{"lineNumber":186,"author":{"gitId":"RoeReRe"},"content":"        Date expectedExpiryDate \u003d new Date(VALID_EXPIRY_DATE);","lastModifiedDate":"2023-10-16"},{"lineNumber":187,"author":{"gitId":"RoeReRe"},"content":"        assertEquals(expectedExpiryDate, ParserUtilPrescription.parseExpiryDate(VALID_EXPIRY_DATE));","lastModifiedDate":"2023-10-16"},{"lineNumber":188,"author":{"gitId":"RoeReRe"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":189,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":190,"author":{"gitId":"RoeReRe"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":191,"author":{"gitId":"RoeReRe"},"content":"    public void parseExpiryDate_validValueWithWhitespace_returnsTrimmedExpiryDate() throws Exception {","lastModifiedDate":"2023-10-16"},{"lineNumber":192,"author":{"gitId":"RoeReRe"},"content":"        String expiryDateWithWhitespace \u003d WHITESPACE + VALID_EXPIRY_DATE + WHITESPACE;","lastModifiedDate":"2023-10-16"},{"lineNumber":193,"author":{"gitId":"RoeReRe"},"content":"        Date expectedExpiryDate \u003d new Date(VALID_EXPIRY_DATE);","lastModifiedDate":"2023-10-16"},{"lineNumber":194,"author":{"gitId":"RoeReRe"},"content":"        assertEquals(expectedExpiryDate, ParserUtilPrescription.parseExpiryDate(expiryDateWithWhitespace));","lastModifiedDate":"2023-10-16"},{"lineNumber":195,"author":{"gitId":"RoeReRe"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":196,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":197,"author":{"gitId":"RoeReRe"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":198,"author":{"gitId":"RoeReRe"},"content":"    public void parseTotalStock_null_throwsNullPointerException() {","lastModifiedDate":"2023-10-16"},{"lineNumber":199,"author":{"gitId":"RoeReRe"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtilPrescription.parseTotalStock((String) null));","lastModifiedDate":"2023-10-16"},{"lineNumber":200,"author":{"gitId":"RoeReRe"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":201,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":202,"author":{"gitId":"RoeReRe"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":203,"author":{"gitId":"RoeReRe"},"content":"    public void parseTotalStock_invalidValue_throwsParseException() {","lastModifiedDate":"2023-10-16"},{"lineNumber":204,"author":{"gitId":"RoeReRe"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtilPrescription.parseTotalStock(INVALID_TOTAL_STOCK));","lastModifiedDate":"2023-10-16"},{"lineNumber":205,"author":{"gitId":"RoeReRe"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":206,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":207,"author":{"gitId":"RoeReRe"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":208,"author":{"gitId":"RoeReRe"},"content":"    public void parseTotalStock_validValueWithoutWhitespace_returnsTotalStock() throws Exception {","lastModifiedDate":"2023-10-16"},{"lineNumber":209,"author":{"gitId":"RoeReRe"},"content":"        Stock expectedTotalStock \u003d new Stock(VALID_TOTAL_STOCK);","lastModifiedDate":"2023-10-16"},{"lineNumber":210,"author":{"gitId":"RoeReRe"},"content":"        assertEquals(expectedTotalStock, ParserUtilPrescription.parseTotalStock(VALID_TOTAL_STOCK));","lastModifiedDate":"2023-10-16"},{"lineNumber":211,"author":{"gitId":"RoeReRe"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":212,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":213,"author":{"gitId":"RoeReRe"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":214,"author":{"gitId":"RoeReRe"},"content":"    public void parseTotalStock_validValueWithWhitespace_returnsTrimmedTotalStock() throws Exception {","lastModifiedDate":"2023-10-16"},{"lineNumber":215,"author":{"gitId":"RoeReRe"},"content":"        String totalStockWithWhitespace \u003d WHITESPACE + VALID_TOTAL_STOCK + WHITESPACE;","lastModifiedDate":"2023-10-16"},{"lineNumber":216,"author":{"gitId":"RoeReRe"},"content":"        Stock expectedTotalStock \u003d new Stock(VALID_TOTAL_STOCK);","lastModifiedDate":"2023-10-16"},{"lineNumber":217,"author":{"gitId":"RoeReRe"},"content":"        assertEquals(expectedTotalStock, ParserUtilPrescription.parseTotalStock(totalStockWithWhitespace));","lastModifiedDate":"2023-10-16"},{"lineNumber":218,"author":{"gitId":"RoeReRe"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":219,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":220,"author":{"gitId":"RoeReRe"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":221,"author":{"gitId":"RoeReRe"},"content":"    public void parseNote_null_throwsNullPointerException() {","lastModifiedDate":"2023-10-16"},{"lineNumber":222,"author":{"gitId":"RoeReRe"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtilPrescription.parseNote((String) null));","lastModifiedDate":"2023-10-16"},{"lineNumber":223,"author":{"gitId":"RoeReRe"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":224,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":225,"author":{"gitId":"RoeReRe"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":226,"author":{"gitId":"RoeReRe"},"content":"    public void parseNote_invalidValue_throwsParseException() {","lastModifiedDate":"2023-10-16"},{"lineNumber":227,"author":{"gitId":"RoeReRe"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtilPrescription.parseNote(INVALID_NOTE));","lastModifiedDate":"2023-10-16"},{"lineNumber":228,"author":{"gitId":"RoeReRe"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":229,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":230,"author":{"gitId":"RoeReRe"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":231,"author":{"gitId":"RoeReRe"},"content":"    public void parseNote_validValueWithoutWhitespace_returnsNote() throws Exception {","lastModifiedDate":"2023-10-16"},{"lineNumber":232,"author":{"gitId":"RoeReRe"},"content":"        Note expectedNote \u003d new Note(VALID_NOTE);","lastModifiedDate":"2023-10-16"},{"lineNumber":233,"author":{"gitId":"RoeReRe"},"content":"        assertEquals(expectedNote, ParserUtilPrescription.parseNote(VALID_NOTE));","lastModifiedDate":"2023-10-16"},{"lineNumber":234,"author":{"gitId":"RoeReRe"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":235,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":236,"author":{"gitId":"RoeReRe"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":237,"author":{"gitId":"RoeReRe"},"content":"    public void parseNote_validValueWithWhitespace_returnsTrimmedNote() throws Exception {","lastModifiedDate":"2023-10-16"},{"lineNumber":238,"author":{"gitId":"RoeReRe"},"content":"        String noteWithWhitespace \u003d WHITESPACE + VALID_NOTE + WHITESPACE;","lastModifiedDate":"2023-10-16"},{"lineNumber":239,"author":{"gitId":"RoeReRe"},"content":"        Note expectedNote \u003d new Note(VALID_NOTE);","lastModifiedDate":"2023-10-16"},{"lineNumber":240,"author":{"gitId":"RoeReRe"},"content":"        assertEquals(expectedNote, ParserUtilPrescription.parseNote(noteWithWhitespace));","lastModifiedDate":"2023-10-16"},{"lineNumber":241,"author":{"gitId":"RoeReRe"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":242,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":243,"author":{"gitId":"RoeReRe"},"content":"    /*","lastModifiedDate":"2023-10-16"},{"lineNumber":244,"author":{"gitId":"RoeReRe"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":245,"author":{"gitId":"RoeReRe"},"content":"    public void parseTag_null_throwsNullPointerException() {","lastModifiedDate":"2023-10-16"},{"lineNumber":246,"author":{"gitId":"RoeReRe"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtilPrescription.parseTag(null));","lastModifiedDate":"2023-10-16"},{"lineNumber":247,"author":{"gitId":"RoeReRe"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":248,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":249,"author":{"gitId":"RoeReRe"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":250,"author":{"gitId":"RoeReRe"},"content":"    public void parseTag_invalidValue_throwsParseException() {","lastModifiedDate":"2023-10-16"},{"lineNumber":251,"author":{"gitId":"RoeReRe"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtilPrescription.parseTag(INVALID_TAG));","lastModifiedDate":"2023-10-16"},{"lineNumber":252,"author":{"gitId":"RoeReRe"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":253,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":254,"author":{"gitId":"RoeReRe"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":255,"author":{"gitId":"RoeReRe"},"content":"    public void parseTag_validValueWithoutWhitespace_returnsTag() throws Exception {","lastModifiedDate":"2023-10-16"},{"lineNumber":256,"author":{"gitId":"RoeReRe"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2023-10-16"},{"lineNumber":257,"author":{"gitId":"RoeReRe"},"content":"        assertEquals(expectedTag, ParserUtilPrescription.parseTag(VALID_TAG_1));","lastModifiedDate":"2023-10-16"},{"lineNumber":258,"author":{"gitId":"RoeReRe"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":259,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":260,"author":{"gitId":"RoeReRe"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":261,"author":{"gitId":"RoeReRe"},"content":"    public void parseTag_validValueWithWhitespace_returnsTrimmedTag() throws Exception {","lastModifiedDate":"2023-10-16"},{"lineNumber":262,"author":{"gitId":"RoeReRe"},"content":"        String tagWithWhitespace \u003d WHITESPACE + VALID_TAG_1 + WHITESPACE;","lastModifiedDate":"2023-10-16"},{"lineNumber":263,"author":{"gitId":"RoeReRe"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2023-10-16"},{"lineNumber":264,"author":{"gitId":"RoeReRe"},"content":"        assertEquals(expectedTag, ParserUtilPrescription.parseTag(tagWithWhitespace));","lastModifiedDate":"2023-10-16"},{"lineNumber":265,"author":{"gitId":"RoeReRe"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":266,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":267,"author":{"gitId":"RoeReRe"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":268,"author":{"gitId":"RoeReRe"},"content":"    public void parseTags_null_throwsNullPointerException() {","lastModifiedDate":"2023-10-16"},{"lineNumber":269,"author":{"gitId":"RoeReRe"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtilPrescription.parseTags(null));","lastModifiedDate":"2023-10-16"},{"lineNumber":270,"author":{"gitId":"RoeReRe"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":271,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":272,"author":{"gitId":"RoeReRe"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":273,"author":{"gitId":"RoeReRe"},"content":"    public void parseTags_collectionWithInvalidTags_throwsParseException() {","lastModifiedDate":"2023-10-16"},{"lineNumber":274,"author":{"gitId":"RoeReRe"},"content":"        assertThrows(ParseException.class,","lastModifiedDate":"2023-10-16"},{"lineNumber":275,"author":{"gitId":"RoeReRe"},"content":"            () -\u003e ParserUtilPrescription.parseTags(Arrays.asList(VALID_TAG_1, INVALID_TAG)));","lastModifiedDate":"2023-10-16"},{"lineNumber":276,"author":{"gitId":"RoeReRe"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":277,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":278,"author":{"gitId":"RoeReRe"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":279,"author":{"gitId":"RoeReRe"},"content":"    public void parseTags_emptyCollection_returnsEmptySet() throws Exception {","lastModifiedDate":"2023-10-16"},{"lineNumber":280,"author":{"gitId":"RoeReRe"},"content":"        assertTrue(ParserUtilPrescription.parseTags(Collections.emptyList()).isEmpty());","lastModifiedDate":"2023-10-16"},{"lineNumber":281,"author":{"gitId":"RoeReRe"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":282,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":283,"author":{"gitId":"RoeReRe"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":284,"author":{"gitId":"RoeReRe"},"content":"    public void parseTags_collectionWithValidTags_returnsTagSet() throws Exception {","lastModifiedDate":"2023-10-16"},{"lineNumber":285,"author":{"gitId":"RoeReRe"},"content":"        Set\u003cTag\u003e actualTagSet \u003d ParserUtilPrescription.parseTags(Arrays.asList(VALID_TAG_1, VALID_TAG_2));","lastModifiedDate":"2023-10-16"},{"lineNumber":286,"author":{"gitId":"RoeReRe"},"content":"        Set\u003cTag\u003e expectedTagSet \u003d new HashSet\u003cTag\u003e(Arrays.asList(new Tag(VALID_TAG_1), new Tag(VALID_TAG_2)));","lastModifiedDate":"2023-10-16"},{"lineNumber":287,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":288,"author":{"gitId":"RoeReRe"},"content":"        assertEquals(expectedTagSet, actualTagSet);","lastModifiedDate":"2023-10-16"},{"lineNumber":289,"author":{"gitId":"RoeReRe"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":290,"author":{"gitId":"RoeReRe"},"content":"    */","lastModifiedDate":"2023-10-16"},{"lineNumber":291,"author":{"gitId":"RoeReRe"},"content":"}","lastModifiedDate":"2023-10-16"}],"authorContributionMap":{"RoeReRe":291}},{"path":"src/test/java/seedu/address/logic/parser/PrescriptionListParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-16"},{"lineNumber":5,"author":{"gitId":"RoeReRe"},"content":"import static seedu.address.logic.MessagesPrescription.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-16"},{"lineNumber":6,"author":{"gitId":"RoeReRe"},"content":"import static seedu.address.logic.MessagesPrescription.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-10-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":11,"author":{"gitId":"RoeReRe"},"content":"import seedu.address.logic.commands.AddPrescriptionCommand;","lastModifiedDate":"2023-10-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2023-10-16"},{"lineNumber":13,"author":{"gitId":"RoeReRe"},"content":"import seedu.address.logic.commands.ListPrescriptionCommand;","lastModifiedDate":"2023-10-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-16"},{"lineNumber":15,"author":{"gitId":"RoeReRe"},"content":"import seedu.address.model.prescription.Prescription;","lastModifiedDate":"2023-10-16"},{"lineNumber":16,"author":{"gitId":"RoeReRe"},"content":"import seedu.address.testutil.PrescriptionBuilder;","lastModifiedDate":"2023-10-16"},{"lineNumber":17,"author":{"gitId":"RoeReRe"},"content":"import seedu.address.testutil.PrescriptionUtil;","lastModifiedDate":"2023-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":19,"author":{"gitId":"RoeReRe"},"content":"public class PrescriptionListParserTest {","lastModifiedDate":"2023-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":21,"author":{"gitId":"RoeReRe"},"content":"    private final PrescriptionListParser parser \u003d new PrescriptionListParser();","lastModifiedDate":"2023-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void parseCommand_add() throws Exception {","lastModifiedDate":"2023-10-16"},{"lineNumber":25,"author":{"gitId":"RoeReRe"},"content":"        Prescription prescription \u003d new PrescriptionBuilder().build();","lastModifiedDate":"2023-10-16"},{"lineNumber":26,"author":{"gitId":"RoeReRe"},"content":"        AddPrescriptionCommand command \u003d (AddPrescriptionCommand) parser.parseCommand(","lastModifiedDate":"2023-10-16"},{"lineNumber":27,"author":{"gitId":"RoeReRe"},"content":"            PrescriptionUtil.getAddPrescriptionCommand(prescription));","lastModifiedDate":"2023-10-16"},{"lineNumber":28,"author":{"gitId":"RoeReRe"},"content":"        assertEquals(new AddPrescriptionCommand(prescription), command);","lastModifiedDate":"2023-10-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":31,"author":{"gitId":"RoeReRe"},"content":"    /*","lastModifiedDate":"2023-10-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2023-10-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD) instanceof ClearCommand);","lastModifiedDate":"2023-10-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD + \" 3\") instanceof ClearCommand);","lastModifiedDate":"2023-10-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void parseCommand_delete() throws Exception {","lastModifiedDate":"2023-10-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        DeleteCommand command \u003d (DeleteCommand) parser.parseCommand(","lastModifiedDate":"2023-10-16"},{"lineNumber":41,"author":{"gitId":"RoeReRe"},"content":"            DeleteCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased());","lastModifiedDate":"2023-10-16"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertEquals(new DeleteCommand(INDEX_FIRST_PERSON), command);","lastModifiedDate":"2023-10-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void parseCommand_edit() throws Exception {","lastModifiedDate":"2023-10-16"},{"lineNumber":47,"author":{"gitId":"RoeReRe"},"content":"        Prescription prescription \u003d new PrescriptionBuilder().build();","lastModifiedDate":"2023-10-16"},{"lineNumber":48,"author":{"gitId":"RoeReRe"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(prescription).build();","lastModifiedDate":"2023-10-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        EditCommand command \u003d (EditCommand) parser.parseCommand(EditCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2023-10-16"},{"lineNumber":50,"author":{"gitId":"RoeReRe"},"content":"            + INDEX_FIRST_PERSON.getOneBased() + \" \" + PrescriptionUtil.DescriptorDetails(descriptor));","lastModifiedDate":"2023-10-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertEquals(new EditCommand(INDEX_FIRST_PERSON, descriptor), command);","lastModifiedDate":"2023-10-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2023-10-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2023-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2023-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void parseCommand_find() throws Exception {","lastModifiedDate":"2023-10-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2023-10-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        FindCommand command \u003d (FindCommand) parser.parseCommand(","lastModifiedDate":"2023-10-16"},{"lineNumber":64,"author":{"gitId":"RoeReRe"},"content":"            FindCommand.COMMAND_WORD + \" \" + keywords.stream().collect(Collectors.joining(\" \")));","lastModifiedDate":"2023-10-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertEquals(new FindCommand(new NameContainsKeywordsPredicate(keywords)), command);","lastModifiedDate":"2023-10-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2023-10-16"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2023-10-16"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2023-10-16"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":73,"author":{"gitId":"RoeReRe"},"content":"    */","lastModifiedDate":"2023-10-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void parseCommand_list() throws Exception {","lastModifiedDate":"2023-10-16"},{"lineNumber":77,"author":{"gitId":"RoeReRe"},"content":"        assertTrue(parser.parseCommand(ListPrescriptionCommand.COMMAND_WORD) instanceof ListPrescriptionCommand);","lastModifiedDate":"2023-10-16"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2023-10-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2023-10-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2023-10-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2023-10-16"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2023-10-16"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":90,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-10-16"}],"authorContributionMap":{"RoeReRe":21,"-":69}},{"path":"src/test/java/seedu/address/logic/parser/TakePrescriptionCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jingyu987"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-18"},{"lineNumber":2,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":3,"author":{"gitId":"jingyu987"},"content":"import static seedu.address.logic.MessagesPrescription.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-18"},{"lineNumber":4,"author":{"gitId":"jingyu987"},"content":"import static seedu.address.logic.parser.CliSyntaxPrescription.PREFIX_CONSUMPTION;","lastModifiedDate":"2023-10-18"},{"lineNumber":5,"author":{"gitId":"jingyu987"},"content":"import static seedu.address.logic.parser.CliSyntaxPrescription.PREFIX_NAME;","lastModifiedDate":"2023-10-18"},{"lineNumber":6,"author":{"gitId":"jingyu987"},"content":"import static seedu.address.logic.parser.CommandPrescriptionParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-10-18"},{"lineNumber":7,"author":{"gitId":"jingyu987"},"content":"import static seedu.address.logic.parser.CommandPrescriptionParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-10-18"},{"lineNumber":8,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":9,"author":{"gitId":"jingyu987"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-18"},{"lineNumber":10,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":11,"author":{"gitId":"jingyu987"},"content":"import seedu.address.logic.commands.TakePrescriptionCommand;","lastModifiedDate":"2023-10-18"},{"lineNumber":12,"author":{"gitId":"jingyu987"},"content":"import seedu.address.model.prescription.Name;","lastModifiedDate":"2023-10-18"},{"lineNumber":13,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":14,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":15,"author":{"gitId":"jingyu987"},"content":"public class TakePrescriptionCommandParserTest {","lastModifiedDate":"2023-10-18"},{"lineNumber":16,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":17,"author":{"gitId":"jingyu987"},"content":"    private TakePrescriptionCommandParser parser \u003d new TakePrescriptionCommandParser();","lastModifiedDate":"2023-10-18"},{"lineNumber":18,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":19,"author":{"gitId":"jingyu987"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":20,"author":{"gitId":"jingyu987"},"content":"    public void parse_validArgs_success() {","lastModifiedDate":"2023-10-18"},{"lineNumber":21,"author":{"gitId":"jingyu987"},"content":"        // Valid arguments with a valid name and dosage","lastModifiedDate":"2023-10-18"},{"lineNumber":22,"author":{"gitId":"jingyu987"},"content":"        TakePrescriptionCommand expectedCommand \u003d new TakePrescriptionCommand(new Name(\"Aspirin\"), 2);","lastModifiedDate":"2023-10-18"},{"lineNumber":23,"author":{"gitId":"jingyu987"},"content":"        assertParseSuccess(parser, \" \" + PREFIX_NAME + \"Aspirin \"","lastModifiedDate":"2023-10-18"},{"lineNumber":24,"author":{"gitId":"jingyu987"},"content":"                + PREFIX_CONSUMPTION + \"2\", expectedCommand);","lastModifiedDate":"2023-10-18"},{"lineNumber":25,"author":{"gitId":"jingyu987"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":26,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":27,"author":{"gitId":"jingyu987"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":28,"author":{"gitId":"jingyu987"},"content":"    public void parse_notIntegerDosage_failure() {","lastModifiedDate":"2023-10-18"},{"lineNumber":29,"author":{"gitId":"jingyu987"},"content":"        // Invalid dosage (not an integer)","lastModifiedDate":"2023-10-18"},{"lineNumber":30,"author":{"gitId":"jingyu987"},"content":"        assertParseFailure(parser, \" \" + PREFIX_NAME + \"Aspirin \"","lastModifiedDate":"2023-10-18"},{"lineNumber":31,"author":{"gitId":"jingyu987"},"content":"                + PREFIX_CONSUMPTION + \"abc\", TakePrescriptionCommand.MESSAGE_INVALID_DOSE);","lastModifiedDate":"2023-10-18"},{"lineNumber":32,"author":{"gitId":"jingyu987"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":33,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":34,"author":{"gitId":"jingyu987"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":35,"author":{"gitId":"jingyu987"},"content":"    public void parse_negativeIntegerDosage_failure() {","lastModifiedDate":"2023-10-18"},{"lineNumber":36,"author":{"gitId":"jingyu987"},"content":"        // Invalid dosage (not an integer)","lastModifiedDate":"2023-10-18"},{"lineNumber":37,"author":{"gitId":"jingyu987"},"content":"        assertParseFailure(parser, \" \" + PREFIX_NAME + \"Aspirin \"","lastModifiedDate":"2023-10-18"},{"lineNumber":38,"author":{"gitId":"jingyu987"},"content":"                + PREFIX_CONSUMPTION + \"-1\", TakePrescriptionCommand.MESSAGE_INVALID_DOSE);","lastModifiedDate":"2023-10-18"},{"lineNumber":39,"author":{"gitId":"jingyu987"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":40,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":41,"author":{"gitId":"jingyu987"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":42,"author":{"gitId":"jingyu987"},"content":"    public void parse_emptyPreamble_failure() {","lastModifiedDate":"2023-10-18"},{"lineNumber":43,"author":{"gitId":"jingyu987"},"content":"        // Empty input","lastModifiedDate":"2023-10-18"},{"lineNumber":44,"author":{"gitId":"jingyu987"},"content":"        assertParseFailure(parser, \"\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-10-18"},{"lineNumber":45,"author":{"gitId":"jingyu987"},"content":"                        TakePrescriptionCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-18"},{"lineNumber":46,"author":{"gitId":"jingyu987"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":47,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":48,"author":{"gitId":"jingyu987"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":49,"author":{"gitId":"jingyu987"},"content":"    public void parse_whitespacePreamble_failure() {","lastModifiedDate":"2023-10-18"},{"lineNumber":50,"author":{"gitId":"jingyu987"},"content":"        // Whitespace input","lastModifiedDate":"2023-10-18"},{"lineNumber":51,"author":{"gitId":"jingyu987"},"content":"        assertParseFailure(parser, \" \", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-10-18"},{"lineNumber":52,"author":{"gitId":"jingyu987"},"content":"                        TakePrescriptionCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-18"},{"lineNumber":53,"author":{"gitId":"jingyu987"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":54,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":55,"author":{"gitId":"jingyu987"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":56,"author":{"gitId":"jingyu987"},"content":"    public void parse_missingName_failure() {","lastModifiedDate":"2023-10-18"},{"lineNumber":57,"author":{"gitId":"jingyu987"},"content":"        // Missing Name","lastModifiedDate":"2023-10-18"},{"lineNumber":58,"author":{"gitId":"jingyu987"},"content":"        assertParseFailure(parser, \" \" + PREFIX_CONSUMPTION + \"2\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-10-18"},{"lineNumber":59,"author":{"gitId":"jingyu987"},"content":"                            TakePrescriptionCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-18"},{"lineNumber":60,"author":{"gitId":"jingyu987"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":61,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":62,"author":{"gitId":"jingyu987"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":63,"author":{"gitId":"jingyu987"},"content":"    public void parse_missingDosage_failure() {","lastModifiedDate":"2023-10-18"},{"lineNumber":64,"author":{"gitId":"jingyu987"},"content":"        // Missing dosage","lastModifiedDate":"2023-10-18"},{"lineNumber":65,"author":{"gitId":"jingyu987"},"content":"        assertParseFailure(parser, \" \" + PREFIX_NAME + \"Aspirin\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-10-18"},{"lineNumber":66,"author":{"gitId":"jingyu987"},"content":"                            TakePrescriptionCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-18"},{"lineNumber":67,"author":{"gitId":"jingyu987"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":68,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":69,"author":{"gitId":"jingyu987"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":70,"author":{"gitId":"jingyu987"},"content":"    public void parse_extraValues_failure() {","lastModifiedDate":"2023-10-18"},{"lineNumber":71,"author":{"gitId":"jingyu987"},"content":"        // Random values","lastModifiedDate":"2023-10-18"},{"lineNumber":72,"author":{"gitId":"jingyu987"},"content":"        assertParseFailure(parser, \"ABCDEFGH\",","lastModifiedDate":"2023-10-18"},{"lineNumber":73,"author":{"gitId":"jingyu987"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-10-18"},{"lineNumber":74,"author":{"gitId":"jingyu987"},"content":"                        TakePrescriptionCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-18"},{"lineNumber":75,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":76,"author":{"gitId":"jingyu987"},"content":"        // Random prefixes","lastModifiedDate":"2023-10-18"},{"lineNumber":77,"author":{"gitId":"jingyu987"},"content":"        assertParseFailure(parser, \"mn/ABCD d/2\",","lastModifiedDate":"2023-10-18"},{"lineNumber":78,"author":{"gitId":"jingyu987"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-10-18"},{"lineNumber":79,"author":{"gitId":"jingyu987"},"content":"                            TakePrescriptionCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-18"},{"lineNumber":80,"author":{"gitId":"jingyu987"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":81,"author":{"gitId":"jingyu987"},"content":"}","lastModifiedDate":"2023-10-18"}],"authorContributionMap":{"jingyu987":81}},{"path":"src/test/java/seedu/address/model/ModelManagerPrescriptionTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"RoeReRe"},"content":"package seedu.address.model;","lastModifiedDate":"2023-10-15"},{"lineNumber":2,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":3,"author":{"gitId":"RoeReRe"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-15"},{"lineNumber":4,"author":{"gitId":"RoeReRe"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-15"},{"lineNumber":5,"author":{"gitId":"RoeReRe"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-15"},{"lineNumber":6,"author":{"gitId":"RoeReRe"},"content":"import static seedu.address.model.ModelPrescription.PREDICATE_SHOW_ALL_PRESCRIPTIONS;","lastModifiedDate":"2023-10-15"},{"lineNumber":7,"author":{"gitId":"RoeReRe"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-15"},{"lineNumber":8,"author":{"gitId":"RoeReRe"},"content":"import static seedu.address.testutil.TypicalPrescriptions.ASPIRIN;","lastModifiedDate":"2023-10-15"},{"lineNumber":9,"author":{"gitId":"RoeReRe"},"content":"import static seedu.address.testutil.TypicalPrescriptions.PROPRANOLOL;","lastModifiedDate":"2023-10-15"},{"lineNumber":10,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":11,"author":{"gitId":"RoeReRe"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-10-15"},{"lineNumber":12,"author":{"gitId":"RoeReRe"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-10-15"},{"lineNumber":13,"author":{"gitId":"RoeReRe"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-10-15"},{"lineNumber":14,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":15,"author":{"gitId":"RoeReRe"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-15"},{"lineNumber":16,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":17,"author":{"gitId":"RoeReRe"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2023-10-15"},{"lineNumber":18,"author":{"gitId":"RoeReRe"},"content":"import seedu.address.model.prescription.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-10-15"},{"lineNumber":19,"author":{"gitId":"RoeReRe"},"content":"import seedu.address.testutil.PrescriptionListBuilder;","lastModifiedDate":"2023-10-15"},{"lineNumber":20,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":21,"author":{"gitId":"RoeReRe"},"content":"public class ModelManagerPrescriptionTest {","lastModifiedDate":"2023-10-15"},{"lineNumber":22,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":23,"author":{"gitId":"RoeReRe"},"content":"    private ModelManagerPrescription modelManager \u003d new ModelManagerPrescription();","lastModifiedDate":"2023-10-15"},{"lineNumber":24,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":25,"author":{"gitId":"RoeReRe"},"content":"    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":26,"author":{"gitId":"RoeReRe"},"content":"    public void constructor() {","lastModifiedDate":"2023-10-15"},{"lineNumber":27,"author":{"gitId":"RoeReRe"},"content":"        assertEquals(new UserPrefsPrescription(), modelManager.getUserPrefs());","lastModifiedDate":"2023-10-15"},{"lineNumber":28,"author":{"gitId":"RoeReRe"},"content":"        assertEquals(new GuiSettings(), modelManager.getGuiSettings());","lastModifiedDate":"2023-10-15"},{"lineNumber":29,"author":{"gitId":"RoeReRe"},"content":"        assertEquals(new PrescriptionList(), new PrescriptionList(modelManager.getPrescriptionList()));","lastModifiedDate":"2023-10-15"},{"lineNumber":30,"author":{"gitId":"RoeReRe"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":31,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":32,"author":{"gitId":"RoeReRe"},"content":"    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":33,"author":{"gitId":"RoeReRe"},"content":"    public void setUserPrefs_nullUserPrefs_throwsNullPointerException() {","lastModifiedDate":"2023-10-15"},{"lineNumber":34,"author":{"gitId":"RoeReRe"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setUserPrefs(null));","lastModifiedDate":"2023-10-15"},{"lineNumber":35,"author":{"gitId":"RoeReRe"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":36,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":37,"author":{"gitId":"RoeReRe"},"content":"    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":38,"author":{"gitId":"RoeReRe"},"content":"    public void setUserPrefs_validUserPrefs_copiesUserPrefs() {","lastModifiedDate":"2023-10-15"},{"lineNumber":39,"author":{"gitId":"RoeReRe"},"content":"        UserPrefsPrescription userPrefs \u003d new UserPrefsPrescription();","lastModifiedDate":"2023-10-15"},{"lineNumber":40,"author":{"gitId":"RoeReRe"},"content":"        userPrefs.setPrescriptionListFilePath(Paths.get(\"prescription/list/file/path\"));","lastModifiedDate":"2023-10-15"},{"lineNumber":41,"author":{"gitId":"RoeReRe"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1, 2, 3, 4));","lastModifiedDate":"2023-10-15"},{"lineNumber":42,"author":{"gitId":"RoeReRe"},"content":"        modelManager.setUserPrefs(userPrefs);","lastModifiedDate":"2023-10-15"},{"lineNumber":43,"author":{"gitId":"RoeReRe"},"content":"        assertEquals(userPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2023-10-15"},{"lineNumber":44,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":45,"author":{"gitId":"RoeReRe"},"content":"        // Modifying userPrefs should not modify modelManager\u0027s userPrefs","lastModifiedDate":"2023-10-15"},{"lineNumber":46,"author":{"gitId":"RoeReRe"},"content":"        UserPrefsPrescription oldUserPrefs \u003d new UserPrefsPrescription(userPrefs);","lastModifiedDate":"2023-10-15"},{"lineNumber":47,"author":{"gitId":"RoeReRe"},"content":"        userPrefs.setPrescriptionListFilePath(Paths.get(\"new/prescription/list/file/path\"));","lastModifiedDate":"2023-10-15"},{"lineNumber":48,"author":{"gitId":"RoeReRe"},"content":"        assertEquals(oldUserPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2023-10-15"},{"lineNumber":49,"author":{"gitId":"RoeReRe"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":50,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":51,"author":{"gitId":"RoeReRe"},"content":"    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":52,"author":{"gitId":"RoeReRe"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2023-10-15"},{"lineNumber":53,"author":{"gitId":"RoeReRe"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setGuiSettings(null));","lastModifiedDate":"2023-10-15"},{"lineNumber":54,"author":{"gitId":"RoeReRe"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":55,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":56,"author":{"gitId":"RoeReRe"},"content":"    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":57,"author":{"gitId":"RoeReRe"},"content":"    public void setGuiSettings_validGuiSettings_setsGuiSettings() {","lastModifiedDate":"2023-10-15"},{"lineNumber":58,"author":{"gitId":"RoeReRe"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(1, 2, 3, 4);","lastModifiedDate":"2023-10-15"},{"lineNumber":59,"author":{"gitId":"RoeReRe"},"content":"        modelManager.setGuiSettings(guiSettings);","lastModifiedDate":"2023-10-15"},{"lineNumber":60,"author":{"gitId":"RoeReRe"},"content":"        assertEquals(guiSettings, modelManager.getGuiSettings());","lastModifiedDate":"2023-10-15"},{"lineNumber":61,"author":{"gitId":"RoeReRe"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":62,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":63,"author":{"gitId":"RoeReRe"},"content":"    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":64,"author":{"gitId":"RoeReRe"},"content":"    public void setPrescriptionListFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2023-10-15"},{"lineNumber":65,"author":{"gitId":"RoeReRe"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setPrescriptionListFilePath(null));","lastModifiedDate":"2023-10-15"},{"lineNumber":66,"author":{"gitId":"RoeReRe"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":67,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":68,"author":{"gitId":"RoeReRe"},"content":"    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":69,"author":{"gitId":"RoeReRe"},"content":"    public void setPrescriptionListFilePath_validPath_setsPrescriptionListFilePath() {","lastModifiedDate":"2023-10-15"},{"lineNumber":70,"author":{"gitId":"RoeReRe"},"content":"        Path path \u003d Paths.get(\"prescription/list/file/path\");","lastModifiedDate":"2023-10-15"},{"lineNumber":71,"author":{"gitId":"RoeReRe"},"content":"        modelManager.setPrescriptionListFilePath(path);","lastModifiedDate":"2023-10-15"},{"lineNumber":72,"author":{"gitId":"RoeReRe"},"content":"        assertEquals(path, modelManager.getPrescriptionListFilePath());","lastModifiedDate":"2023-10-15"},{"lineNumber":73,"author":{"gitId":"RoeReRe"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":74,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":75,"author":{"gitId":"RoeReRe"},"content":"    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":76,"author":{"gitId":"RoeReRe"},"content":"    public void hasPrescription_nullPrescription_throwsNullPointerException() {","lastModifiedDate":"2023-10-15"},{"lineNumber":77,"author":{"gitId":"RoeReRe"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasPrescription(null));","lastModifiedDate":"2023-10-15"},{"lineNumber":78,"author":{"gitId":"RoeReRe"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":79,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":80,"author":{"gitId":"RoeReRe"},"content":"    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":81,"author":{"gitId":"RoeReRe"},"content":"    public void hasPrescription_prescriptionNotInPrescriptionList_returnsFalse() {","lastModifiedDate":"2023-10-15"},{"lineNumber":82,"author":{"gitId":"RoeReRe"},"content":"        assertFalse(modelManager.hasPrescription(ASPIRIN));","lastModifiedDate":"2023-10-15"},{"lineNumber":83,"author":{"gitId":"RoeReRe"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":84,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":85,"author":{"gitId":"RoeReRe"},"content":"    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":86,"author":{"gitId":"RoeReRe"},"content":"    public void hasPrescription_prescriptionInPrescriptionList_returnsTrue() {","lastModifiedDate":"2023-10-15"},{"lineNumber":87,"author":{"gitId":"RoeReRe"},"content":"        modelManager.addPrescription(ASPIRIN);","lastModifiedDate":"2023-10-15"},{"lineNumber":88,"author":{"gitId":"RoeReRe"},"content":"        assertTrue(modelManager.hasPrescription(ASPIRIN));","lastModifiedDate":"2023-10-15"},{"lineNumber":89,"author":{"gitId":"RoeReRe"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":90,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":91,"author":{"gitId":"RoeReRe"},"content":"    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":92,"author":{"gitId":"RoeReRe"},"content":"    public void getFilteredPrescriptionList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2023-10-15"},{"lineNumber":93,"author":{"gitId":"RoeReRe"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredPrescriptionList().remove(0));","lastModifiedDate":"2023-10-15"},{"lineNumber":94,"author":{"gitId":"RoeReRe"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":95,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":96,"author":{"gitId":"RoeReRe"},"content":"    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":97,"author":{"gitId":"RoeReRe"},"content":"    public void equals() {","lastModifiedDate":"2023-10-15"},{"lineNumber":98,"author":{"gitId":"RoeReRe"},"content":"        PrescriptionList prescriptionList \u003d new PrescriptionListBuilder()","lastModifiedDate":"2023-10-16"},{"lineNumber":99,"author":{"gitId":"RoeReRe"},"content":"            .withPrescription(ASPIRIN).withPrescription(PROPRANOLOL).build();","lastModifiedDate":"2023-10-16"},{"lineNumber":100,"author":{"gitId":"RoeReRe"},"content":"        PrescriptionList differentPrescriptionList \u003d new PrescriptionList();","lastModifiedDate":"2023-10-15"},{"lineNumber":101,"author":{"gitId":"RoeReRe"},"content":"        UserPrefsPrescription userPrefs \u003d new UserPrefsPrescription();","lastModifiedDate":"2023-10-15"},{"lineNumber":102,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":103,"author":{"gitId":"RoeReRe"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-15"},{"lineNumber":104,"author":{"gitId":"RoeReRe"},"content":"        modelManager \u003d new ModelManagerPrescription(prescriptionList, userPrefs);","lastModifiedDate":"2023-10-15"},{"lineNumber":105,"author":{"gitId":"RoeReRe"},"content":"        ModelManagerPrescription modelManagerCopy \u003d new ModelManagerPrescription(prescriptionList, userPrefs);","lastModifiedDate":"2023-10-15"},{"lineNumber":106,"author":{"gitId":"RoeReRe"},"content":"        assertTrue(modelManager.equals(modelManagerCopy));","lastModifiedDate":"2023-10-15"},{"lineNumber":107,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":108,"author":{"gitId":"RoeReRe"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-15"},{"lineNumber":109,"author":{"gitId":"RoeReRe"},"content":"        assertTrue(modelManager.equals(modelManager));","lastModifiedDate":"2023-10-15"},{"lineNumber":110,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":111,"author":{"gitId":"RoeReRe"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-15"},{"lineNumber":112,"author":{"gitId":"RoeReRe"},"content":"        assertFalse(modelManager.equals(null));","lastModifiedDate":"2023-10-15"},{"lineNumber":113,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":114,"author":{"gitId":"RoeReRe"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-15"},{"lineNumber":115,"author":{"gitId":"RoeReRe"},"content":"        assertFalse(modelManager.equals(5));","lastModifiedDate":"2023-10-15"},{"lineNumber":116,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":117,"author":{"gitId":"RoeReRe"},"content":"        // different addressBook -\u003e returns false","lastModifiedDate":"2023-10-15"},{"lineNumber":118,"author":{"gitId":"RoeReRe"},"content":"        assertFalse(modelManager.equals(new ModelManagerPrescription(differentPrescriptionList, userPrefs)));","lastModifiedDate":"2023-10-15"},{"lineNumber":119,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":120,"author":{"gitId":"RoeReRe"},"content":"        // different filteredList -\u003e returns false","lastModifiedDate":"2023-10-15"},{"lineNumber":121,"author":{"gitId":"RoeReRe"},"content":"        String[] keywords \u003d ASPIRIN.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2023-10-15"},{"lineNumber":122,"author":{"gitId":"RoeReRe"},"content":"        modelManager.updateFilteredPrescriptionList(new NameContainsKeywordsPredicate(Arrays.asList(keywords)));","lastModifiedDate":"2023-10-15"},{"lineNumber":123,"author":{"gitId":"RoeReRe"},"content":"        assertFalse(modelManager.equals(new ModelManagerPrescription(prescriptionList, userPrefs)));","lastModifiedDate":"2023-10-15"},{"lineNumber":124,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":125,"author":{"gitId":"RoeReRe"},"content":"        // resets modelManager to initial state for upcoming tests","lastModifiedDate":"2023-10-15"},{"lineNumber":126,"author":{"gitId":"RoeReRe"},"content":"        modelManager.updateFilteredPrescriptionList(PREDICATE_SHOW_ALL_PRESCRIPTIONS);","lastModifiedDate":"2023-10-15"},{"lineNumber":127,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":128,"author":{"gitId":"RoeReRe"},"content":"        // different userPrefs -\u003e returns false","lastModifiedDate":"2023-10-15"},{"lineNumber":129,"author":{"gitId":"RoeReRe"},"content":"        UserPrefsPrescription differentUserPrefs \u003d new UserPrefsPrescription();","lastModifiedDate":"2023-10-15"},{"lineNumber":130,"author":{"gitId":"RoeReRe"},"content":"        differentUserPrefs.setPrescriptionListFilePath(Paths.get(\"differentFilePath\"));","lastModifiedDate":"2023-10-15"},{"lineNumber":131,"author":{"gitId":"RoeReRe"},"content":"        assertFalse(modelManager.equals(new ModelManagerPrescription(prescriptionList, differentUserPrefs)));","lastModifiedDate":"2023-10-15"},{"lineNumber":132,"author":{"gitId":"RoeReRe"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":133,"author":{"gitId":"RoeReRe"},"content":"}","lastModifiedDate":"2023-10-15"}],"authorContributionMap":{"RoeReRe":133}},{"path":"src/test/java/seedu/address/model/PrescriptionListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"RoeReRe"},"content":"package seedu.address.model;","lastModifiedDate":"2023-10-16"},{"lineNumber":2,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":3,"author":{"gitId":"RoeReRe"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-16"},{"lineNumber":4,"author":{"gitId":"RoeReRe"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-16"},{"lineNumber":5,"author":{"gitId":"RoeReRe"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-16"},{"lineNumber":6,"author":{"gitId":"RoeReRe"},"content":"import static seedu.address.logic.commands.CommandPrescriptionTestUtil.VALID_DOSAGE_PROPRANOLOL;","lastModifiedDate":"2023-10-16"},{"lineNumber":7,"author":{"gitId":"RoeReRe"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-16"},{"lineNumber":8,"author":{"gitId":"RoeReRe"},"content":"import static seedu.address.testutil.TypicalPrescriptions.ASPIRIN;","lastModifiedDate":"2023-10-16"},{"lineNumber":9,"author":{"gitId":"RoeReRe"},"content":"import static seedu.address.testutil.TypicalPrescriptions.getTypicalPrescriptionList;","lastModifiedDate":"2023-10-16"},{"lineNumber":10,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":11,"author":{"gitId":"RoeReRe"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-10-16"},{"lineNumber":12,"author":{"gitId":"RoeReRe"},"content":"import java.util.Collection;","lastModifiedDate":"2023-10-16"},{"lineNumber":13,"author":{"gitId":"RoeReRe"},"content":"import java.util.Collections;","lastModifiedDate":"2023-10-16"},{"lineNumber":14,"author":{"gitId":"RoeReRe"},"content":"import java.util.List;","lastModifiedDate":"2023-10-16"},{"lineNumber":15,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":16,"author":{"gitId":"RoeReRe"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-16"},{"lineNumber":17,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":18,"author":{"gitId":"RoeReRe"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-10-16"},{"lineNumber":19,"author":{"gitId":"RoeReRe"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-10-16"},{"lineNumber":20,"author":{"gitId":"RoeReRe"},"content":"import seedu.address.model.prescription.Prescription;","lastModifiedDate":"2023-10-16"},{"lineNumber":21,"author":{"gitId":"RoeReRe"},"content":"import seedu.address.model.prescription.exceptions.DuplicatePrescriptionException;","lastModifiedDate":"2023-10-16"},{"lineNumber":22,"author":{"gitId":"RoeReRe"},"content":"import seedu.address.testutil.PrescriptionBuilder;","lastModifiedDate":"2023-10-16"},{"lineNumber":23,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":24,"author":{"gitId":"RoeReRe"},"content":"public class PrescriptionListTest {","lastModifiedDate":"2023-10-16"},{"lineNumber":25,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":26,"author":{"gitId":"RoeReRe"},"content":"    private final PrescriptionList prescriptionList \u003d new PrescriptionList();","lastModifiedDate":"2023-10-16"},{"lineNumber":27,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":28,"author":{"gitId":"RoeReRe"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":29,"author":{"gitId":"RoeReRe"},"content":"    public void constructor() {","lastModifiedDate":"2023-10-16"},{"lineNumber":30,"author":{"gitId":"RoeReRe"},"content":"        assertEquals(Collections.emptyList(), prescriptionList.getPrescriptionList());","lastModifiedDate":"2023-10-16"},{"lineNumber":31,"author":{"gitId":"RoeReRe"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":32,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":33,"author":{"gitId":"RoeReRe"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":34,"author":{"gitId":"RoeReRe"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2023-10-16"},{"lineNumber":35,"author":{"gitId":"RoeReRe"},"content":"        assertThrows(NullPointerException.class, () -\u003e prescriptionList.resetData(null));","lastModifiedDate":"2023-10-16"},{"lineNumber":36,"author":{"gitId":"RoeReRe"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":37,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":38,"author":{"gitId":"RoeReRe"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":39,"author":{"gitId":"RoeReRe"},"content":"    public void resetData_withValidReadOnlyPrescriptionList_replacesData() {","lastModifiedDate":"2023-10-16"},{"lineNumber":40,"author":{"gitId":"RoeReRe"},"content":"        PrescriptionList newData \u003d getTypicalPrescriptionList();","lastModifiedDate":"2023-10-16"},{"lineNumber":41,"author":{"gitId":"RoeReRe"},"content":"        prescriptionList.resetData(newData);","lastModifiedDate":"2023-10-16"},{"lineNumber":42,"author":{"gitId":"RoeReRe"},"content":"        assertEquals(newData, prescriptionList);","lastModifiedDate":"2023-10-16"},{"lineNumber":43,"author":{"gitId":"RoeReRe"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":44,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":45,"author":{"gitId":"RoeReRe"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":46,"author":{"gitId":"RoeReRe"},"content":"    public void resetData_withDuplicatePrescriptions_throwsDuplicatePrescriptionException() {","lastModifiedDate":"2023-10-16"},{"lineNumber":47,"author":{"gitId":"RoeReRe"},"content":"        // Two prescription with the same identity fields","lastModifiedDate":"2023-10-16"},{"lineNumber":48,"author":{"gitId":"RoeReRe"},"content":"        Prescription editedAspirin \u003d new PrescriptionBuilder(ASPIRIN).withDosage(VALID_DOSAGE_PROPRANOLOL)","lastModifiedDate":"2023-10-16"},{"lineNumber":49,"author":{"gitId":"RoeReRe"},"content":"            .build();","lastModifiedDate":"2023-10-16"},{"lineNumber":50,"author":{"gitId":"RoeReRe"},"content":"        List\u003cPrescription\u003e newPrescriptions \u003d Arrays.asList(ASPIRIN, editedAspirin);","lastModifiedDate":"2023-10-16"},{"lineNumber":51,"author":{"gitId":"RoeReRe"},"content":"        PrescriptionListStub newData \u003d new PrescriptionListStub(newPrescriptions);","lastModifiedDate":"2023-10-16"},{"lineNumber":52,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":53,"author":{"gitId":"RoeReRe"},"content":"        assertThrows(DuplicatePrescriptionException.class, () -\u003e prescriptionList.resetData(newData));","lastModifiedDate":"2023-10-16"},{"lineNumber":54,"author":{"gitId":"RoeReRe"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":55,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":56,"author":{"gitId":"RoeReRe"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":57,"author":{"gitId":"RoeReRe"},"content":"    public void hasPrescription_nullPrescription_throwsNullPointerException() {","lastModifiedDate":"2023-10-16"},{"lineNumber":58,"author":{"gitId":"RoeReRe"},"content":"        assertThrows(NullPointerException.class, () -\u003e prescriptionList.hasPrescription(null));","lastModifiedDate":"2023-10-16"},{"lineNumber":59,"author":{"gitId":"RoeReRe"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":60,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":61,"author":{"gitId":"RoeReRe"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":62,"author":{"gitId":"RoeReRe"},"content":"    public void hasPrescription_prescriptionNotInPrescriptionList_returnsFalse() {","lastModifiedDate":"2023-10-16"},{"lineNumber":63,"author":{"gitId":"RoeReRe"},"content":"        assertFalse(prescriptionList.hasPrescription(ASPIRIN));","lastModifiedDate":"2023-10-16"},{"lineNumber":64,"author":{"gitId":"RoeReRe"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":65,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":66,"author":{"gitId":"RoeReRe"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":67,"author":{"gitId":"RoeReRe"},"content":"    public void hasPrescription_prescriptionInPrescriptionList_returnsTrue() {","lastModifiedDate":"2023-10-16"},{"lineNumber":68,"author":{"gitId":"RoeReRe"},"content":"        prescriptionList.addPrescription(ASPIRIN);","lastModifiedDate":"2023-10-16"},{"lineNumber":69,"author":{"gitId":"RoeReRe"},"content":"        assertTrue(prescriptionList.hasPrescription(ASPIRIN));","lastModifiedDate":"2023-10-16"},{"lineNumber":70,"author":{"gitId":"RoeReRe"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":71,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":72,"author":{"gitId":"RoeReRe"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":73,"author":{"gitId":"RoeReRe"},"content":"    public void hasPrescription_prescriptionWithSameIdentityFieldsInPrescriptionList_returnsTrue() {","lastModifiedDate":"2023-10-16"},{"lineNumber":74,"author":{"gitId":"RoeReRe"},"content":"        prescriptionList.addPrescription(ASPIRIN);","lastModifiedDate":"2023-10-16"},{"lineNumber":75,"author":{"gitId":"RoeReRe"},"content":"        Prescription editedAspirin \u003d new PrescriptionBuilder(ASPIRIN).withDosage(VALID_DOSAGE_PROPRANOLOL).build();","lastModifiedDate":"2023-10-16"},{"lineNumber":76,"author":{"gitId":"RoeReRe"},"content":"        assertTrue(prescriptionList.hasPrescription(editedAspirin));","lastModifiedDate":"2023-10-16"},{"lineNumber":77,"author":{"gitId":"RoeReRe"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":78,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":79,"author":{"gitId":"RoeReRe"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":80,"author":{"gitId":"RoeReRe"},"content":"    public void getPrescriptionList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2023-10-16"},{"lineNumber":81,"author":{"gitId":"RoeReRe"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e prescriptionList.getPrescriptionList().remove(0));","lastModifiedDate":"2023-10-16"},{"lineNumber":82,"author":{"gitId":"RoeReRe"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":83,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":84,"author":{"gitId":"RoeReRe"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":85,"author":{"gitId":"RoeReRe"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-16"},{"lineNumber":86,"author":{"gitId":"RoeReRe"},"content":"        String expected \u003d PrescriptionList.class.getCanonicalName()","lastModifiedDate":"2023-10-16"},{"lineNumber":87,"author":{"gitId":"RoeReRe"},"content":"                + \"{prescriptions\u003d\" + prescriptionList.getPrescriptionList() + \"}\";","lastModifiedDate":"2023-10-16"},{"lineNumber":88,"author":{"gitId":"RoeReRe"},"content":"        assertEquals(expected, prescriptionList.toString());","lastModifiedDate":"2023-10-16"},{"lineNumber":89,"author":{"gitId":"RoeReRe"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":90,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":91,"author":{"gitId":"RoeReRe"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":92,"author":{"gitId":"RoeReRe"},"content":"     * A stub ReadOnlyPrescriptionList whose prescriptions list can violate interface constraints.","lastModifiedDate":"2023-10-16"},{"lineNumber":93,"author":{"gitId":"RoeReRe"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":94,"author":{"gitId":"RoeReRe"},"content":"    private static class PrescriptionListStub implements ReadOnlyPrescriptionList {","lastModifiedDate":"2023-10-16"},{"lineNumber":95,"author":{"gitId":"RoeReRe"},"content":"        private final ObservableList\u003cPrescription\u003e prescriptions \u003d FXCollections.observableArrayList();","lastModifiedDate":"2023-10-16"},{"lineNumber":96,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":97,"author":{"gitId":"RoeReRe"},"content":"        PrescriptionListStub(Collection\u003cPrescription\u003e prescriptions) {","lastModifiedDate":"2023-10-16"},{"lineNumber":98,"author":{"gitId":"RoeReRe"},"content":"            this.prescriptions.setAll(prescriptions);","lastModifiedDate":"2023-10-16"},{"lineNumber":99,"author":{"gitId":"RoeReRe"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":100,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":101,"author":{"gitId":"RoeReRe"},"content":"        @Override","lastModifiedDate":"2023-10-16"},{"lineNumber":102,"author":{"gitId":"RoeReRe"},"content":"        public ObservableList\u003cPrescription\u003e getPrescriptionList() {","lastModifiedDate":"2023-10-16"},{"lineNumber":103,"author":{"gitId":"RoeReRe"},"content":"            return prescriptions;","lastModifiedDate":"2023-10-16"},{"lineNumber":104,"author":{"gitId":"RoeReRe"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":105,"author":{"gitId":"RoeReRe"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":106,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":107,"author":{"gitId":"RoeReRe"},"content":"}","lastModifiedDate":"2023-10-16"}],"authorContributionMap":{"RoeReRe":107}},{"path":"src/test/java/seedu/address/model/UserPrefsPrescriptionTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"RoeReRe"},"content":"package seedu.address.model;","lastModifiedDate":"2023-10-15"},{"lineNumber":2,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":3,"author":{"gitId":"RoeReRe"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-15"},{"lineNumber":4,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":5,"author":{"gitId":"RoeReRe"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-15"},{"lineNumber":6,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":7,"author":{"gitId":"RoeReRe"},"content":"public class UserPrefsPrescriptionTest {","lastModifiedDate":"2023-10-15"},{"lineNumber":8,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":9,"author":{"gitId":"RoeReRe"},"content":"    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":10,"author":{"gitId":"RoeReRe"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2023-10-15"},{"lineNumber":11,"author":{"gitId":"RoeReRe"},"content":"        UserPrefsPrescription userPref \u003d new UserPrefsPrescription();","lastModifiedDate":"2023-10-15"},{"lineNumber":12,"author":{"gitId":"RoeReRe"},"content":"        assertThrows(NullPointerException.class, () -\u003e userPref.setGuiSettings(null));","lastModifiedDate":"2023-10-15"},{"lineNumber":13,"author":{"gitId":"RoeReRe"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":14,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":15,"author":{"gitId":"RoeReRe"},"content":"    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":16,"author":{"gitId":"RoeReRe"},"content":"    public void setPrescriptionListFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2023-10-15"},{"lineNumber":17,"author":{"gitId":"RoeReRe"},"content":"        UserPrefsPrescription userPrefs \u003d new UserPrefsPrescription();","lastModifiedDate":"2023-10-15"},{"lineNumber":18,"author":{"gitId":"RoeReRe"},"content":"        assertThrows(NullPointerException.class, () -\u003e userPrefs.setPrescriptionListFilePath(null));","lastModifiedDate":"2023-10-15"},{"lineNumber":19,"author":{"gitId":"RoeReRe"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":20,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":21,"author":{"gitId":"RoeReRe"},"content":"}","lastModifiedDate":"2023-10-15"}],"authorContributionMap":{"RoeReRe":21}},{"path":"src/test/java/seedu/address/model/prescription/ConsumptionCountTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jingyu987"},"content":"package seedu.address.model.prescription;","lastModifiedDate":"2023-10-18"},{"lineNumber":2,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":3,"author":{"gitId":"jingyu987"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-18"},{"lineNumber":4,"author":{"gitId":"jingyu987"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-18"},{"lineNumber":5,"author":{"gitId":"jingyu987"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-18"},{"lineNumber":6,"author":{"gitId":"jingyu987"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-18"},{"lineNumber":7,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":8,"author":{"gitId":"jingyu987"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-18"},{"lineNumber":9,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":10,"author":{"gitId":"jingyu987"},"content":"public class ConsumptionCountTest {","lastModifiedDate":"2023-10-18"},{"lineNumber":11,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":12,"author":{"gitId":"jingyu987"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":13,"author":{"gitId":"jingyu987"},"content":"    public void constructor_validValues_success() {","lastModifiedDate":"2023-10-18"},{"lineNumber":14,"author":{"gitId":"jingyu987"},"content":"        // Valid values, isCompleted is set to true","lastModifiedDate":"2023-10-18"},{"lineNumber":15,"author":{"gitId":"jingyu987"},"content":"        ConsumptionCount consumptionCount1 \u003d new ConsumptionCount(\"5\", true);","lastModifiedDate":"2023-10-18"},{"lineNumber":16,"author":{"gitId":"jingyu987"},"content":"        assertTrue(consumptionCount1.getIsCompleted());","lastModifiedDate":"2023-10-18"},{"lineNumber":17,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":18,"author":{"gitId":"jingyu987"},"content":"        // Valid values, isCompleted is set to false","lastModifiedDate":"2023-10-18"},{"lineNumber":19,"author":{"gitId":"jingyu987"},"content":"        ConsumptionCount consumptionCount2 \u003d new ConsumptionCount(\"0\", false);","lastModifiedDate":"2023-10-18"},{"lineNumber":20,"author":{"gitId":"jingyu987"},"content":"        assertFalse(consumptionCount2.getIsCompleted());","lastModifiedDate":"2023-10-18"},{"lineNumber":21,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":22,"author":{"gitId":"jingyu987"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":23,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":24,"author":{"gitId":"jingyu987"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":25,"author":{"gitId":"jingyu987"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-10-18"},{"lineNumber":26,"author":{"gitId":"jingyu987"},"content":"        assertThrows(NullPointerException.class, () -\u003e new ConsumptionCount(null, false));","lastModifiedDate":"2023-10-18"},{"lineNumber":27,"author":{"gitId":"jingyu987"},"content":"        assertThrows(NullPointerException.class, () -\u003e new ConsumptionCount(\"0\", null));","lastModifiedDate":"2023-10-18"},{"lineNumber":28,"author":{"gitId":"jingyu987"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":29,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":30,"author":{"gitId":"jingyu987"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":31,"author":{"gitId":"jingyu987"},"content":"    public void constructor_invalidConsumptionCount_throwsIllegalArgumentException() {","lastModifiedDate":"2023-10-18"},{"lineNumber":32,"author":{"gitId":"jingyu987"},"content":"        String invalidConsumptionCount \u003d \"\";","lastModifiedDate":"2023-10-18"},{"lineNumber":33,"author":{"gitId":"jingyu987"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":34,"author":{"gitId":"jingyu987"},"content":"                new ConsumptionCount(invalidConsumptionCount, false));","lastModifiedDate":"2023-10-18"},{"lineNumber":35,"author":{"gitId":"jingyu987"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":36,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":37,"author":{"gitId":"jingyu987"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":38,"author":{"gitId":"jingyu987"},"content":"    public void isValidConsumptionCount() {","lastModifiedDate":"2023-10-18"},{"lineNumber":39,"author":{"gitId":"jingyu987"},"content":"        // null consumptionCount","lastModifiedDate":"2023-10-18"},{"lineNumber":40,"author":{"gitId":"jingyu987"},"content":"        assertThrows(NullPointerException.class, () -\u003e ConsumptionCount.isValidConsumptionCount(null));","lastModifiedDate":"2023-10-18"},{"lineNumber":41,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":42,"author":{"gitId":"jingyu987"},"content":"        // invalid consumptionCount","lastModifiedDate":"2023-10-18"},{"lineNumber":43,"author":{"gitId":"jingyu987"},"content":"        assertFalse(ConsumptionCount.isValidConsumptionCount(\"\")); // empty string","lastModifiedDate":"2023-10-18"},{"lineNumber":44,"author":{"gitId":"jingyu987"},"content":"        assertFalse(ConsumptionCount.isValidConsumptionCount(\" \")); // spaces only","lastModifiedDate":"2023-10-18"},{"lineNumber":45,"author":{"gitId":"jingyu987"},"content":"        assertFalse(ConsumptionCount.isValidConsumptionCount(\"^\")); // non-alphanumeric characters","lastModifiedDate":"2023-10-18"},{"lineNumber":46,"author":{"gitId":"jingyu987"},"content":"        assertFalse(ConsumptionCount.isValidConsumptionCount(\"a\")); // alphabets","lastModifiedDate":"2023-10-18"},{"lineNumber":47,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":48,"author":{"gitId":"jingyu987"},"content":"        // valid consumptionCount","lastModifiedDate":"2023-10-18"},{"lineNumber":49,"author":{"gitId":"jingyu987"},"content":"        assertTrue(ConsumptionCount.isValidConsumptionCount(\"1\")); // single digit","lastModifiedDate":"2023-10-18"},{"lineNumber":50,"author":{"gitId":"jingyu987"},"content":"        assertTrue(ConsumptionCount.isValidConsumptionCount(\"12\")); // double digit","lastModifiedDate":"2023-10-18"},{"lineNumber":51,"author":{"gitId":"jingyu987"},"content":"        assertTrue(ConsumptionCount.isValidConsumptionCount(\"02\")); // trailing zero","lastModifiedDate":"2023-10-18"},{"lineNumber":52,"author":{"gitId":"jingyu987"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":53,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":54,"author":{"gitId":"jingyu987"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":55,"author":{"gitId":"jingyu987"},"content":"    public void incrementCount() {","lastModifiedDate":"2023-10-18"},{"lineNumber":56,"author":{"gitId":"jingyu987"},"content":"        ConsumptionCount consumptionCount \u003d new ConsumptionCount(\"0\", false);","lastModifiedDate":"2023-10-18"},{"lineNumber":57,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":58,"author":{"gitId":"jingyu987"},"content":"        // Test incrementing","lastModifiedDate":"2023-10-18"},{"lineNumber":59,"author":{"gitId":"jingyu987"},"content":"        consumptionCount.incrementCount(1);","lastModifiedDate":"2023-10-18"},{"lineNumber":60,"author":{"gitId":"jingyu987"},"content":"        assertTrue(consumptionCount.getConsumptionCount().equals(\"1\"));","lastModifiedDate":"2023-10-18"},{"lineNumber":61,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":62,"author":{"gitId":"jingyu987"},"content":"        // Test incrementing with a larger number","lastModifiedDate":"2023-10-18"},{"lineNumber":63,"author":{"gitId":"jingyu987"},"content":"        consumptionCount.incrementCount(5);","lastModifiedDate":"2023-10-18"},{"lineNumber":64,"author":{"gitId":"jingyu987"},"content":"        assertTrue(consumptionCount.getConsumptionCount().equals(\"6\"));","lastModifiedDate":"2023-10-18"},{"lineNumber":65,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":66,"author":{"gitId":"jingyu987"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":67,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":68,"author":{"gitId":"jingyu987"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":69,"author":{"gitId":"jingyu987"},"content":"    public void setConsumptionCount() {","lastModifiedDate":"2023-10-18"},{"lineNumber":70,"author":{"gitId":"jingyu987"},"content":"        ConsumptionCount consumptionCount \u003d new ConsumptionCount(\"0\", false);","lastModifiedDate":"2023-10-18"},{"lineNumber":71,"author":{"gitId":"jingyu987"},"content":"        ConsumptionCount consumptionCount1 \u003d new ConsumptionCount(\"1\", false);","lastModifiedDate":"2023-10-18"},{"lineNumber":72,"author":{"gitId":"jingyu987"},"content":"        // Test setIsCompleted","lastModifiedDate":"2023-10-18"},{"lineNumber":73,"author":{"gitId":"jingyu987"},"content":"        consumptionCount.setConsumptionCount(\"1\");","lastModifiedDate":"2023-10-18"},{"lineNumber":74,"author":{"gitId":"jingyu987"},"content":"        assertEquals(consumptionCount.getConsumptionCount(), consumptionCount1.getConsumptionCount());","lastModifiedDate":"2023-10-18"},{"lineNumber":75,"author":{"gitId":"jingyu987"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":76,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":77,"author":{"gitId":"jingyu987"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":78,"author":{"gitId":"jingyu987"},"content":"    public void setIsCompleted() {","lastModifiedDate":"2023-10-18"},{"lineNumber":79,"author":{"gitId":"jingyu987"},"content":"        ConsumptionCount consumptionCount \u003d new ConsumptionCount(\"0\", false);","lastModifiedDate":"2023-10-18"},{"lineNumber":80,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":81,"author":{"gitId":"jingyu987"},"content":"        // Test setIsCompleted","lastModifiedDate":"2023-10-18"},{"lineNumber":82,"author":{"gitId":"jingyu987"},"content":"        consumptionCount.setIsCompleted(true);","lastModifiedDate":"2023-10-18"},{"lineNumber":83,"author":{"gitId":"jingyu987"},"content":"        assertTrue(consumptionCount.getIsCompleted());","lastModifiedDate":"2023-10-18"},{"lineNumber":84,"author":{"gitId":"jingyu987"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":85,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":86,"author":{"gitId":"jingyu987"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":87,"author":{"gitId":"jingyu987"},"content":"    public void equals() {","lastModifiedDate":"2023-10-18"},{"lineNumber":88,"author":{"gitId":"jingyu987"},"content":"        ConsumptionCount consumptionCount \u003d new ConsumptionCount(\"0\", false);","lastModifiedDate":"2023-10-18"},{"lineNumber":89,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":90,"author":{"gitId":"jingyu987"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-18"},{"lineNumber":91,"author":{"gitId":"jingyu987"},"content":"        assertTrue(consumptionCount.equals(new ConsumptionCount(\"0\", false)));","lastModifiedDate":"2023-10-18"},{"lineNumber":92,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":93,"author":{"gitId":"jingyu987"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-18"},{"lineNumber":94,"author":{"gitId":"jingyu987"},"content":"        assertTrue(consumptionCount.equals(consumptionCount));","lastModifiedDate":"2023-10-18"},{"lineNumber":95,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":96,"author":{"gitId":"jingyu987"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-18"},{"lineNumber":97,"author":{"gitId":"jingyu987"},"content":"        assertFalse(consumptionCount.equals(null));","lastModifiedDate":"2023-10-18"},{"lineNumber":98,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":99,"author":{"gitId":"jingyu987"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-18"},{"lineNumber":100,"author":{"gitId":"jingyu987"},"content":"        assertFalse(consumptionCount.equals(5.0f));","lastModifiedDate":"2023-10-18"},{"lineNumber":101,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":102,"author":{"gitId":"jingyu987"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2023-10-18"},{"lineNumber":103,"author":{"gitId":"jingyu987"},"content":"        assertFalse(consumptionCount.equals(new ConsumptionCount(\"1\", true)));","lastModifiedDate":"2023-10-18"},{"lineNumber":104,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":105,"author":{"gitId":"jingyu987"},"content":"        // Add more test cases for equals as needed","lastModifiedDate":"2023-10-18"},{"lineNumber":106,"author":{"gitId":"jingyu987"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":107,"author":{"gitId":"jingyu987"},"content":"}","lastModifiedDate":"2023-10-18"}],"authorContributionMap":{"jingyu987":107}},{"path":"src/test/java/seedu/address/model/prescription/DateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"RoeReRe"},"content":"package seedu.address.model.prescription;","lastModifiedDate":"2023-10-15"},{"lineNumber":2,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":3,"author":{"gitId":"RoeReRe"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-15"},{"lineNumber":4,"author":{"gitId":"RoeReRe"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-15"},{"lineNumber":5,"author":{"gitId":"RoeReRe"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-15"},{"lineNumber":6,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":7,"author":{"gitId":"RoeReRe"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-15"},{"lineNumber":8,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":9,"author":{"gitId":"RoeReRe"},"content":"public class DateTest {","lastModifiedDate":"2023-10-15"},{"lineNumber":10,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":11,"author":{"gitId":"RoeReRe"},"content":"    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":12,"author":{"gitId":"RoeReRe"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-10-15"},{"lineNumber":13,"author":{"gitId":"RoeReRe"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Date(null));","lastModifiedDate":"2023-10-15"},{"lineNumber":14,"author":{"gitId":"RoeReRe"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":15,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":16,"author":{"gitId":"RoeReRe"},"content":"    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":17,"author":{"gitId":"RoeReRe"},"content":"    public void constructor_invalidDate_throwsIllegalArgumentException() {","lastModifiedDate":"2023-10-15"},{"lineNumber":18,"author":{"gitId":"RoeReRe"},"content":"        String invalidDate \u003d \"\";","lastModifiedDate":"2023-10-15"},{"lineNumber":19,"author":{"gitId":"RoeReRe"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Date(invalidDate));","lastModifiedDate":"2023-10-15"},{"lineNumber":20,"author":{"gitId":"RoeReRe"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":21,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":22,"author":{"gitId":"RoeReRe"},"content":"    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":23,"author":{"gitId":"RoeReRe"},"content":"    public void isValidDate() {","lastModifiedDate":"2023-10-15"},{"lineNumber":24,"author":{"gitId":"RoeReRe"},"content":"        // null date","lastModifiedDate":"2023-10-15"},{"lineNumber":25,"author":{"gitId":"RoeReRe"},"content":"        assertThrows(NullPointerException.class, () -\u003e Date.isValidDate(null));","lastModifiedDate":"2023-10-15"},{"lineNumber":26,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":27,"author":{"gitId":"RoeReRe"},"content":"        // invalid date","lastModifiedDate":"2023-10-15"},{"lineNumber":28,"author":{"gitId":"RoeReRe"},"content":"        assertFalse(Date.isValidDate(\"\")); // empty string","lastModifiedDate":"2023-10-15"},{"lineNumber":29,"author":{"gitId":"RoeReRe"},"content":"        assertFalse(Date.isValidDate(\" \")); // spaces only","lastModifiedDate":"2023-10-15"},{"lineNumber":30,"author":{"gitId":"RoeReRe"},"content":"        assertFalse(Date.isValidDate(\"^\")); // non-alphanumeric characters","lastModifiedDate":"2023-10-15"},{"lineNumber":31,"author":{"gitId":"RoeReRe"},"content":"        assertFalse(Date.isValidDate(\"1/01/2023\")); // contains incorrect date format","lastModifiedDate":"2023-10-15"},{"lineNumber":32,"author":{"gitId":"RoeReRe"},"content":"        assertFalse(Date.isValidDate(\"01/1/2023\")); // contains incorrect date format","lastModifiedDate":"2023-10-15"},{"lineNumber":33,"author":{"gitId":"RoeReRe"},"content":"        assertFalse(Date.isValidDate(\"01/01/23\")); // contains incorrect date format","lastModifiedDate":"2023-10-15"},{"lineNumber":34,"author":{"gitId":"RoeReRe"},"content":"        assertFalse(Date.isValidDate(\"2023/01/01\")); // contains incorrect date format","lastModifiedDate":"2023-10-15"},{"lineNumber":35,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":36,"author":{"gitId":"RoeReRe"},"content":"        // valid date","lastModifiedDate":"2023-10-15"},{"lineNumber":37,"author":{"gitId":"RoeReRe"},"content":"        assertTrue(Date.isValidDate(\"01/01/2023\")); // day and month are single digit","lastModifiedDate":"2023-10-15"},{"lineNumber":38,"author":{"gitId":"RoeReRe"},"content":"        assertTrue(Date.isValidDate(\"21/01/2023\")); // month is single digit","lastModifiedDate":"2023-10-15"},{"lineNumber":39,"author":{"gitId":"RoeReRe"},"content":"        assertTrue(Date.isValidDate(\"01/12/2023\")); // day is single digit","lastModifiedDate":"2023-10-15"},{"lineNumber":40,"author":{"gitId":"RoeReRe"},"content":"        assertTrue(Date.isValidDate(\"21/12/2023\")); // day and month are double digits","lastModifiedDate":"2023-10-15"},{"lineNumber":41,"author":{"gitId":"RoeReRe"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":42,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":43,"author":{"gitId":"RoeReRe"},"content":"    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":44,"author":{"gitId":"RoeReRe"},"content":"    public void equals() {","lastModifiedDate":"2023-10-15"},{"lineNumber":45,"author":{"gitId":"RoeReRe"},"content":"        Date date \u003d new Date(\"01/01/2023\");","lastModifiedDate":"2023-10-15"},{"lineNumber":46,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":47,"author":{"gitId":"RoeReRe"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-15"},{"lineNumber":48,"author":{"gitId":"RoeReRe"},"content":"        assertTrue(date.equals(new Date(\"01/01/2023\")));","lastModifiedDate":"2023-10-15"},{"lineNumber":49,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":50,"author":{"gitId":"RoeReRe"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-15"},{"lineNumber":51,"author":{"gitId":"RoeReRe"},"content":"        assertTrue(date.equals(date));","lastModifiedDate":"2023-10-15"},{"lineNumber":52,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":53,"author":{"gitId":"RoeReRe"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-15"},{"lineNumber":54,"author":{"gitId":"RoeReRe"},"content":"        assertFalse(date.equals(null));","lastModifiedDate":"2023-10-15"},{"lineNumber":55,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":56,"author":{"gitId":"RoeReRe"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-15"},{"lineNumber":57,"author":{"gitId":"RoeReRe"},"content":"        assertFalse(date.equals(5.0f));","lastModifiedDate":"2023-10-15"},{"lineNumber":58,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":59,"author":{"gitId":"RoeReRe"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2023-10-15"},{"lineNumber":60,"author":{"gitId":"RoeReRe"},"content":"        assertFalse(date.equals(new Date(\"02/01/2023\")));","lastModifiedDate":"2023-10-15"},{"lineNumber":61,"author":{"gitId":"RoeReRe"},"content":"        assertFalse(date.equals(new Date(\"01/02/2023\")));","lastModifiedDate":"2023-10-15"},{"lineNumber":62,"author":{"gitId":"RoeReRe"},"content":"        assertFalse(date.equals(new Date(\"01/01/2024\")));","lastModifiedDate":"2023-10-15"},{"lineNumber":63,"author":{"gitId":"RoeReRe"},"content":"        assertFalse(date.equals(new Date(\"21/12/2024\")));","lastModifiedDate":"2023-10-15"},{"lineNumber":64,"author":{"gitId":"RoeReRe"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":65,"author":{"gitId":"RoeReRe"},"content":"}","lastModifiedDate":"2023-10-15"}],"authorContributionMap":{"RoeReRe":65}},{"path":"src/test/java/seedu/address/model/prescription/DosageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"RoeReRe"},"content":"package seedu.address.model.prescription;","lastModifiedDate":"2023-10-15"},{"lineNumber":2,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":3,"author":{"gitId":"RoeReRe"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-15"},{"lineNumber":4,"author":{"gitId":"RoeReRe"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-15"},{"lineNumber":5,"author":{"gitId":"RoeReRe"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-15"},{"lineNumber":6,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":7,"author":{"gitId":"RoeReRe"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-15"},{"lineNumber":8,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":9,"author":{"gitId":"RoeReRe"},"content":"public class DosageTest {","lastModifiedDate":"2023-10-15"},{"lineNumber":10,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":11,"author":{"gitId":"RoeReRe"},"content":"    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":12,"author":{"gitId":"RoeReRe"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-10-15"},{"lineNumber":13,"author":{"gitId":"RoeReRe"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Dosage(null));","lastModifiedDate":"2023-10-15"},{"lineNumber":14,"author":{"gitId":"RoeReRe"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":15,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":16,"author":{"gitId":"RoeReRe"},"content":"    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":17,"author":{"gitId":"RoeReRe"},"content":"    public void constructor_invalidDosage_throwsIllegalArgumentException() {","lastModifiedDate":"2023-10-15"},{"lineNumber":18,"author":{"gitId":"RoeReRe"},"content":"        String invalidDosage \u003d \"\";","lastModifiedDate":"2023-10-15"},{"lineNumber":19,"author":{"gitId":"RoeReRe"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Dosage(invalidDosage));","lastModifiedDate":"2023-10-15"},{"lineNumber":20,"author":{"gitId":"RoeReRe"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":21,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":22,"author":{"gitId":"RoeReRe"},"content":"    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":23,"author":{"gitId":"RoeReRe"},"content":"    public void isValidDosage() {","lastModifiedDate":"2023-10-15"},{"lineNumber":24,"author":{"gitId":"RoeReRe"},"content":"        // null dosage","lastModifiedDate":"2023-10-15"},{"lineNumber":25,"author":{"gitId":"RoeReRe"},"content":"        assertThrows(NullPointerException.class, () -\u003e Dosage.isValidDosage(null));","lastModifiedDate":"2023-10-15"},{"lineNumber":26,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":27,"author":{"gitId":"RoeReRe"},"content":"        // invalid dosage","lastModifiedDate":"2023-10-15"},{"lineNumber":28,"author":{"gitId":"RoeReRe"},"content":"        assertFalse(Dosage.isValidDosage(\"\")); // empty string","lastModifiedDate":"2023-10-15"},{"lineNumber":29,"author":{"gitId":"RoeReRe"},"content":"        assertFalse(Dosage.isValidDosage(\" \")); // spaces only","lastModifiedDate":"2023-10-15"},{"lineNumber":30,"author":{"gitId":"RoeReRe"},"content":"        assertFalse(Dosage.isValidDosage(\"^\")); // non-alphanumeric characters","lastModifiedDate":"2023-10-15"},{"lineNumber":31,"author":{"gitId":"RoeReRe"},"content":"        assertFalse(Dosage.isValidDosage(\"a\")); // alphabets","lastModifiedDate":"2023-10-15"},{"lineNumber":32,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":33,"author":{"gitId":"RoeReRe"},"content":"        // valid dosage","lastModifiedDate":"2023-10-15"},{"lineNumber":34,"author":{"gitId":"RoeReRe"},"content":"        assertTrue(Dosage.isValidDosage(\"1\")); // single digit","lastModifiedDate":"2023-10-15"},{"lineNumber":35,"author":{"gitId":"RoeReRe"},"content":"        assertTrue(Dosage.isValidDosage(\"12\")); // double digit","lastModifiedDate":"2023-10-15"},{"lineNumber":36,"author":{"gitId":"RoeReRe"},"content":"        assertTrue(Dosage.isValidDosage(\"02\")); // trailing zero","lastModifiedDate":"2023-10-15"},{"lineNumber":37,"author":{"gitId":"RoeReRe"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":38,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":39,"author":{"gitId":"RoeReRe"},"content":"    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":40,"author":{"gitId":"RoeReRe"},"content":"    public void equals() {","lastModifiedDate":"2023-10-15"},{"lineNumber":41,"author":{"gitId":"RoeReRe"},"content":"        Dosage dosage \u003d new Dosage(\"1\");","lastModifiedDate":"2023-10-15"},{"lineNumber":42,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":43,"author":{"gitId":"RoeReRe"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-15"},{"lineNumber":44,"author":{"gitId":"RoeReRe"},"content":"        assertTrue(dosage.equals(new Dosage(\"1\")));","lastModifiedDate":"2023-10-15"},{"lineNumber":45,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":46,"author":{"gitId":"RoeReRe"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-15"},{"lineNumber":47,"author":{"gitId":"RoeReRe"},"content":"        assertTrue(dosage.equals(dosage));","lastModifiedDate":"2023-10-15"},{"lineNumber":48,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":49,"author":{"gitId":"RoeReRe"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-15"},{"lineNumber":50,"author":{"gitId":"RoeReRe"},"content":"        assertFalse(dosage.equals(null));","lastModifiedDate":"2023-10-15"},{"lineNumber":51,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":52,"author":{"gitId":"RoeReRe"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-15"},{"lineNumber":53,"author":{"gitId":"RoeReRe"},"content":"        assertFalse(dosage.equals(5.0f));","lastModifiedDate":"2023-10-15"},{"lineNumber":54,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":55,"author":{"gitId":"RoeReRe"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2023-10-15"},{"lineNumber":56,"author":{"gitId":"RoeReRe"},"content":"        assertFalse(dosage.equals(new Dosage(\"2\")));","lastModifiedDate":"2023-10-15"},{"lineNumber":57,"author":{"gitId":"RoeReRe"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":58,"author":{"gitId":"RoeReRe"},"content":"}","lastModifiedDate":"2023-10-15"}],"authorContributionMap":{"RoeReRe":58}},{"path":"src/test/java/seedu/address/model/prescription/FrequencyTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"RoeReRe"},"content":"package seedu.address.model.prescription;","lastModifiedDate":"2023-10-15"},{"lineNumber":2,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":3,"author":{"gitId":"RoeReRe"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-15"},{"lineNumber":4,"author":{"gitId":"RoeReRe"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-15"},{"lineNumber":5,"author":{"gitId":"RoeReRe"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-15"},{"lineNumber":6,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":7,"author":{"gitId":"RoeReRe"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-15"},{"lineNumber":8,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":9,"author":{"gitId":"RoeReRe"},"content":"public class FrequencyTest {","lastModifiedDate":"2023-10-15"},{"lineNumber":10,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":11,"author":{"gitId":"RoeReRe"},"content":"    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":12,"author":{"gitId":"RoeReRe"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-10-15"},{"lineNumber":13,"author":{"gitId":"RoeReRe"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Frequency(null));","lastModifiedDate":"2023-10-15"},{"lineNumber":14,"author":{"gitId":"RoeReRe"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":15,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":16,"author":{"gitId":"RoeReRe"},"content":"    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":17,"author":{"gitId":"RoeReRe"},"content":"    public void constructor_invalidFrequency_throwsIllegalArgumentException() {","lastModifiedDate":"2023-10-15"},{"lineNumber":18,"author":{"gitId":"RoeReRe"},"content":"        String invalidFrequency \u003d \"\";","lastModifiedDate":"2023-10-15"},{"lineNumber":19,"author":{"gitId":"RoeReRe"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Frequency(invalidFrequency));","lastModifiedDate":"2023-10-15"},{"lineNumber":20,"author":{"gitId":"RoeReRe"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":21,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":22,"author":{"gitId":"RoeReRe"},"content":"    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":23,"author":{"gitId":"RoeReRe"},"content":"    public void isValidFrequency() {","lastModifiedDate":"2023-10-15"},{"lineNumber":24,"author":{"gitId":"RoeReRe"},"content":"        // null frequency","lastModifiedDate":"2023-10-15"},{"lineNumber":25,"author":{"gitId":"RoeReRe"},"content":"        assertThrows(NullPointerException.class, () -\u003e Frequency.isValidFrequency(null));","lastModifiedDate":"2023-10-15"},{"lineNumber":26,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":27,"author":{"gitId":"RoeReRe"},"content":"        // invalid frequency","lastModifiedDate":"2023-10-15"},{"lineNumber":28,"author":{"gitId":"RoeReRe"},"content":"        assertFalse(Frequency.isValidFrequency(\"\")); // empty string","lastModifiedDate":"2023-10-15"},{"lineNumber":29,"author":{"gitId":"RoeReRe"},"content":"        assertFalse(Frequency.isValidFrequency(\" \")); // spaces only","lastModifiedDate":"2023-10-15"},{"lineNumber":30,"author":{"gitId":"RoeReRe"},"content":"        assertFalse(Frequency.isValidFrequency(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2023-10-15"},{"lineNumber":31,"author":{"gitId":"RoeReRe"},"content":"        assertFalse(Frequency.isValidFrequency(\"Daily*\")); // contains non-alphanumeric characters","lastModifiedDate":"2023-10-15"},{"lineNumber":32,"author":{"gitId":"RoeReRe"},"content":"        assertFalse(Frequency.isValidFrequency(\"Daaily\")); // extra characters","lastModifiedDate":"2023-10-15"},{"lineNumber":33,"author":{"gitId":"RoeReRe"},"content":"        assertFalse(Frequency.isValidFrequency(\"Weeekly\")); // extra characters","lastModifiedDate":"2023-10-15"},{"lineNumber":34,"author":{"gitId":"RoeReRe"},"content":"        assertFalse(Frequency.isValidFrequency(\"Wkly\")); // not enough characters","lastModifiedDate":"2023-10-15"},{"lineNumber":35,"author":{"gitId":"RoeReRe"},"content":"        assertFalse(Frequency.isValidFrequency(\"Yearly\")); // contains invalid values","lastModifiedDate":"2023-10-15"},{"lineNumber":36,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":37,"author":{"gitId":"RoeReRe"},"content":"        // valid frequency","lastModifiedDate":"2023-10-15"},{"lineNumber":38,"author":{"gitId":"RoeReRe"},"content":"        assertTrue(Frequency.isValidFrequency(\"Daily\")); // Daily","lastModifiedDate":"2023-10-15"},{"lineNumber":39,"author":{"gitId":"RoeReRe"},"content":"        assertTrue(Frequency.isValidFrequency(\"Weekly\")); // Weekly","lastModifiedDate":"2023-10-15"},{"lineNumber":40,"author":{"gitId":"RoeReRe"},"content":"        assertTrue(Frequency.isValidFrequency(\"Monthly\")); // Month","lastModifiedDate":"2023-10-15"},{"lineNumber":41,"author":{"gitId":"RoeReRe"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":42,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":43,"author":{"gitId":"RoeReRe"},"content":"    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":44,"author":{"gitId":"RoeReRe"},"content":"    public void equals() {","lastModifiedDate":"2023-10-15"},{"lineNumber":45,"author":{"gitId":"RoeReRe"},"content":"        Frequency frequency \u003d new Frequency(\"Daily\");","lastModifiedDate":"2023-10-15"},{"lineNumber":46,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":47,"author":{"gitId":"RoeReRe"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-15"},{"lineNumber":48,"author":{"gitId":"RoeReRe"},"content":"        assertTrue(frequency.equals(new Frequency(\"Daily\")));","lastModifiedDate":"2023-10-15"},{"lineNumber":49,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":50,"author":{"gitId":"RoeReRe"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-15"},{"lineNumber":51,"author":{"gitId":"RoeReRe"},"content":"        assertTrue(frequency.equals(frequency));","lastModifiedDate":"2023-10-15"},{"lineNumber":52,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":53,"author":{"gitId":"RoeReRe"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-15"},{"lineNumber":54,"author":{"gitId":"RoeReRe"},"content":"        assertFalse(frequency.equals(null));","lastModifiedDate":"2023-10-15"},{"lineNumber":55,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":56,"author":{"gitId":"RoeReRe"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-15"},{"lineNumber":57,"author":{"gitId":"RoeReRe"},"content":"        assertFalse(frequency.equals(5.0f));","lastModifiedDate":"2023-10-15"},{"lineNumber":58,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":59,"author":{"gitId":"RoeReRe"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2023-10-15"},{"lineNumber":60,"author":{"gitId":"RoeReRe"},"content":"        assertFalse(frequency.equals(new Frequency(\"Weekly\")));","lastModifiedDate":"2023-10-15"},{"lineNumber":61,"author":{"gitId":"RoeReRe"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":62,"author":{"gitId":"RoeReRe"},"content":"}","lastModifiedDate":"2023-10-15"}],"authorContributionMap":{"RoeReRe":62}},{"path":"src/test/java/seedu/address/model/prescription/NameContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"RoeReRe"},"content":"package seedu.address.model.prescription;","lastModifiedDate":"2023-10-15"},{"lineNumber":2,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":3,"author":{"gitId":"RoeReRe"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-15"},{"lineNumber":4,"author":{"gitId":"RoeReRe"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-15"},{"lineNumber":5,"author":{"gitId":"RoeReRe"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-15"},{"lineNumber":6,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":7,"author":{"gitId":"RoeReRe"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-10-15"},{"lineNumber":8,"author":{"gitId":"RoeReRe"},"content":"import java.util.Collections;","lastModifiedDate":"2023-10-15"},{"lineNumber":9,"author":{"gitId":"RoeReRe"},"content":"import java.util.List;","lastModifiedDate":"2023-10-15"},{"lineNumber":10,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":11,"author":{"gitId":"RoeReRe"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-15"},{"lineNumber":12,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":13,"author":{"gitId":"RoeReRe"},"content":"import seedu.address.testutil.PrescriptionBuilder;","lastModifiedDate":"2023-10-15"},{"lineNumber":14,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":15,"author":{"gitId":"RoeReRe"},"content":"public class NameContainsKeywordsPredicateTest {","lastModifiedDate":"2023-10-15"},{"lineNumber":16,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":17,"author":{"gitId":"RoeReRe"},"content":"    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":18,"author":{"gitId":"RoeReRe"},"content":"    public void equals() {","lastModifiedDate":"2023-10-15"},{"lineNumber":19,"author":{"gitId":"RoeReRe"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2023-10-15"},{"lineNumber":20,"author":{"gitId":"RoeReRe"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2023-10-15"},{"lineNumber":21,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":22,"author":{"gitId":"RoeReRe"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2023-10-15"},{"lineNumber":23,"author":{"gitId":"RoeReRe"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d new NameContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2023-10-15"},{"lineNumber":24,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":25,"author":{"gitId":"RoeReRe"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-15"},{"lineNumber":26,"author":{"gitId":"RoeReRe"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2023-10-15"},{"lineNumber":27,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":28,"author":{"gitId":"RoeReRe"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-15"},{"lineNumber":29,"author":{"gitId":"RoeReRe"},"content":"        NameContainsKeywordsPredicate firstPredicateCopy \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2023-10-15"},{"lineNumber":30,"author":{"gitId":"RoeReRe"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2023-10-15"},{"lineNumber":31,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":32,"author":{"gitId":"RoeReRe"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-15"},{"lineNumber":33,"author":{"gitId":"RoeReRe"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2023-10-15"},{"lineNumber":34,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":35,"author":{"gitId":"RoeReRe"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-15"},{"lineNumber":36,"author":{"gitId":"RoeReRe"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2023-10-15"},{"lineNumber":37,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":38,"author":{"gitId":"RoeReRe"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2023-10-15"},{"lineNumber":39,"author":{"gitId":"RoeReRe"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2023-10-15"},{"lineNumber":40,"author":{"gitId":"RoeReRe"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":41,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":42,"author":{"gitId":"RoeReRe"},"content":"    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":43,"author":{"gitId":"RoeReRe"},"content":"    public void test_nameContainsKeywords_returnsTrue() {","lastModifiedDate":"2023-10-15"},{"lineNumber":44,"author":{"gitId":"RoeReRe"},"content":"        // One keyword","lastModifiedDate":"2023-10-15"},{"lineNumber":45,"author":{"gitId":"RoeReRe"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(","lastModifiedDate":"2023-10-16"},{"lineNumber":46,"author":{"gitId":"RoeReRe"},"content":"            Collections.singletonList(\"Aspirin\"));","lastModifiedDate":"2023-10-16"},{"lineNumber":47,"author":{"gitId":"RoeReRe"},"content":"        assertTrue(predicate.test(new PrescriptionBuilder().withName(\"Aspirin\").build()));","lastModifiedDate":"2023-10-15"},{"lineNumber":48,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":49,"author":{"gitId":"RoeReRe"},"content":"        // Multiple keywords","lastModifiedDate":"2023-10-15"},{"lineNumber":50,"author":{"gitId":"RoeReRe"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Aspirin\", \"Propranolol\"));","lastModifiedDate":"2023-10-15"},{"lineNumber":51,"author":{"gitId":"RoeReRe"},"content":"        assertTrue(predicate.test(new PrescriptionBuilder().withName(\"Aspirin Propranolol\").build()));","lastModifiedDate":"2023-10-15"},{"lineNumber":52,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":53,"author":{"gitId":"RoeReRe"},"content":"        // Only one matching keyword","lastModifiedDate":"2023-10-15"},{"lineNumber":54,"author":{"gitId":"RoeReRe"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Aspirin\", \"Propranolol\"));","lastModifiedDate":"2023-10-15"},{"lineNumber":55,"author":{"gitId":"RoeReRe"},"content":"        assertTrue(predicate.test(new PrescriptionBuilder().withName(\"Caffox Propranolol\").build()));","lastModifiedDate":"2023-10-15"},{"lineNumber":56,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":57,"author":{"gitId":"RoeReRe"},"content":"        // Mixed-case keywords","lastModifiedDate":"2023-10-15"},{"lineNumber":58,"author":{"gitId":"RoeReRe"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"AsPIRin\", \"ProPRanOlOl\"));","lastModifiedDate":"2023-10-15"},{"lineNumber":59,"author":{"gitId":"RoeReRe"},"content":"        assertTrue(predicate.test(new PrescriptionBuilder().withName(\"Aspirin Propranolol\").build()));","lastModifiedDate":"2023-10-15"},{"lineNumber":60,"author":{"gitId":"RoeReRe"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":61,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":62,"author":{"gitId":"RoeReRe"},"content":"    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":63,"author":{"gitId":"RoeReRe"},"content":"    public void test_nameDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2023-10-15"},{"lineNumber":64,"author":{"gitId":"RoeReRe"},"content":"        // Zero keywords","lastModifiedDate":"2023-10-15"},{"lineNumber":65,"author":{"gitId":"RoeReRe"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2023-10-15"},{"lineNumber":66,"author":{"gitId":"RoeReRe"},"content":"        assertFalse(predicate.test(new PrescriptionBuilder().withName(\"Aspirin\").build()));","lastModifiedDate":"2023-10-15"},{"lineNumber":67,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":68,"author":{"gitId":"RoeReRe"},"content":"        // Non-matching keyword","lastModifiedDate":"2023-10-15"},{"lineNumber":69,"author":{"gitId":"RoeReRe"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Caffox\"));","lastModifiedDate":"2023-10-15"},{"lineNumber":70,"author":{"gitId":"RoeReRe"},"content":"        assertFalse(predicate.test(new PrescriptionBuilder().withName(\"Aspirin Propranolol\").build()));","lastModifiedDate":"2023-10-15"},{"lineNumber":71,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":72,"author":{"gitId":"RoeReRe"},"content":"        // Keywords match dosage, frequency and start date, but does not match name","lastModifiedDate":"2023-10-15"},{"lineNumber":73,"author":{"gitId":"RoeReRe"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Aspirin\", \"1\", \"Daily\", \"01/08/2023\"));","lastModifiedDate":"2023-10-15"},{"lineNumber":74,"author":{"gitId":"RoeReRe"},"content":"        assertFalse(predicate.test(new PrescriptionBuilder().withName(\"Propranolol\").withDosage(\"1\")","lastModifiedDate":"2023-10-15"},{"lineNumber":75,"author":{"gitId":"RoeReRe"},"content":"            .withFrequency(\"Daily\").withStartDate(\"01/08/2023\").build()));","lastModifiedDate":"2023-10-15"},{"lineNumber":76,"author":{"gitId":"RoeReRe"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":77,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":78,"author":{"gitId":"RoeReRe"},"content":"    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":79,"author":{"gitId":"RoeReRe"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-15"},{"lineNumber":80,"author":{"gitId":"RoeReRe"},"content":"        List\u003cString\u003e keywords \u003d List.of(\"keyword1\", \"keyword2\");","lastModifiedDate":"2023-10-15"},{"lineNumber":81,"author":{"gitId":"RoeReRe"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(keywords);","lastModifiedDate":"2023-10-15"},{"lineNumber":82,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":83,"author":{"gitId":"RoeReRe"},"content":"        String expected \u003d NameContainsKeywordsPredicate.class.getCanonicalName() + \"{keywords\u003d\" + keywords + \"}\";","lastModifiedDate":"2023-10-15"},{"lineNumber":84,"author":{"gitId":"RoeReRe"},"content":"        assertEquals(expected, predicate.toString());","lastModifiedDate":"2023-10-15"},{"lineNumber":85,"author":{"gitId":"RoeReRe"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":86,"author":{"gitId":"RoeReRe"},"content":"}","lastModifiedDate":"2023-10-15"}],"authorContributionMap":{"RoeReRe":86}},{"path":"src/test/java/seedu/address/model/prescription/NameTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"RoeReRe"},"content":"package seedu.address.model.prescription;","lastModifiedDate":"2023-10-15"},{"lineNumber":2,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":3,"author":{"gitId":"RoeReRe"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-15"},{"lineNumber":4,"author":{"gitId":"RoeReRe"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-15"},{"lineNumber":5,"author":{"gitId":"RoeReRe"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-15"},{"lineNumber":6,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":7,"author":{"gitId":"RoeReRe"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-15"},{"lineNumber":8,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":9,"author":{"gitId":"RoeReRe"},"content":"public class NameTest {","lastModifiedDate":"2023-10-15"},{"lineNumber":10,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":11,"author":{"gitId":"RoeReRe"},"content":"    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":12,"author":{"gitId":"RoeReRe"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-10-15"},{"lineNumber":13,"author":{"gitId":"RoeReRe"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Name(null));","lastModifiedDate":"2023-10-15"},{"lineNumber":14,"author":{"gitId":"RoeReRe"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":15,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":16,"author":{"gitId":"RoeReRe"},"content":"    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":17,"author":{"gitId":"RoeReRe"},"content":"    public void constructor_invalidName_throwsIllegalArgumentException() {","lastModifiedDate":"2023-10-15"},{"lineNumber":18,"author":{"gitId":"RoeReRe"},"content":"        String invalidName \u003d \"\";","lastModifiedDate":"2023-10-15"},{"lineNumber":19,"author":{"gitId":"RoeReRe"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Name(invalidName));","lastModifiedDate":"2023-10-15"},{"lineNumber":20,"author":{"gitId":"RoeReRe"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":21,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":22,"author":{"gitId":"RoeReRe"},"content":"    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":23,"author":{"gitId":"RoeReRe"},"content":"    public void isValidName() {","lastModifiedDate":"2023-10-15"},{"lineNumber":24,"author":{"gitId":"RoeReRe"},"content":"        // null name","lastModifiedDate":"2023-10-15"},{"lineNumber":25,"author":{"gitId":"RoeReRe"},"content":"        assertThrows(NullPointerException.class, () -\u003e Name.isValidName(null));","lastModifiedDate":"2023-10-15"},{"lineNumber":26,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":27,"author":{"gitId":"RoeReRe"},"content":"        // invalid name","lastModifiedDate":"2023-10-15"},{"lineNumber":28,"author":{"gitId":"RoeReRe"},"content":"        assertFalse(Name.isValidName(\"\")); // empty string","lastModifiedDate":"2023-10-15"},{"lineNumber":29,"author":{"gitId":"RoeReRe"},"content":"        assertFalse(Name.isValidName(\" \")); // spaces only","lastModifiedDate":"2023-10-15"},{"lineNumber":30,"author":{"gitId":"RoeReRe"},"content":"        assertFalse(Name.isValidName(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2023-10-15"},{"lineNumber":31,"author":{"gitId":"RoeReRe"},"content":"        assertFalse(Name.isValidName(\"aspirin*\")); // contains non-alphanumeric characters","lastModifiedDate":"2023-10-15"},{"lineNumber":32,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":33,"author":{"gitId":"RoeReRe"},"content":"        // valid name","lastModifiedDate":"2023-10-15"},{"lineNumber":34,"author":{"gitId":"RoeReRe"},"content":"        assertTrue(Name.isValidName(\"ergotamine tartrate\")); // alphabets only","lastModifiedDate":"2023-10-15"},{"lineNumber":35,"author":{"gitId":"RoeReRe"},"content":"        assertTrue(Name.isValidName(\"12345\")); // numbers only","lastModifiedDate":"2023-10-15"},{"lineNumber":36,"author":{"gitId":"RoeReRe"},"content":"        assertTrue(Name.isValidName(\"2nd aspirin\")); // alphanumeric characters","lastModifiedDate":"2023-10-15"},{"lineNumber":37,"author":{"gitId":"RoeReRe"},"content":"        assertTrue(Name.isValidName(\"Aspirin\")); // with capital letters","lastModifiedDate":"2023-10-15"},{"lineNumber":38,"author":{"gitId":"RoeReRe"},"content":"        assertTrue(Name.isValidName(\"Aspirin that is white in colour\")); // long names","lastModifiedDate":"2023-10-15"},{"lineNumber":39,"author":{"gitId":"RoeReRe"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":40,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":41,"author":{"gitId":"RoeReRe"},"content":"    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":42,"author":{"gitId":"RoeReRe"},"content":"    public void equals() {","lastModifiedDate":"2023-10-15"},{"lineNumber":43,"author":{"gitId":"RoeReRe"},"content":"        Name name \u003d new Name(\"Valid Name\");","lastModifiedDate":"2023-10-15"},{"lineNumber":44,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":45,"author":{"gitId":"RoeReRe"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-15"},{"lineNumber":46,"author":{"gitId":"RoeReRe"},"content":"        assertTrue(name.equals(new Name(\"Valid Name\")));","lastModifiedDate":"2023-10-15"},{"lineNumber":47,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":48,"author":{"gitId":"RoeReRe"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-15"},{"lineNumber":49,"author":{"gitId":"RoeReRe"},"content":"        assertTrue(name.equals(name));","lastModifiedDate":"2023-10-15"},{"lineNumber":50,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":51,"author":{"gitId":"RoeReRe"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-15"},{"lineNumber":52,"author":{"gitId":"RoeReRe"},"content":"        assertFalse(name.equals(null));","lastModifiedDate":"2023-10-15"},{"lineNumber":53,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":54,"author":{"gitId":"RoeReRe"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-15"},{"lineNumber":55,"author":{"gitId":"RoeReRe"},"content":"        assertFalse(name.equals(5.0f));","lastModifiedDate":"2023-10-15"},{"lineNumber":56,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":57,"author":{"gitId":"RoeReRe"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2023-10-15"},{"lineNumber":58,"author":{"gitId":"RoeReRe"},"content":"        assertFalse(name.equals(new Name(\"Other Valid Name\")));","lastModifiedDate":"2023-10-15"},{"lineNumber":59,"author":{"gitId":"RoeReRe"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":60,"author":{"gitId":"RoeReRe"},"content":"}","lastModifiedDate":"2023-10-15"}],"authorContributionMap":{"RoeReRe":60}},{"path":"src/test/java/seedu/address/model/prescription/NoteTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"RoeReRe"},"content":"package seedu.address.model.prescription;","lastModifiedDate":"2023-10-15"},{"lineNumber":2,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":3,"author":{"gitId":"RoeReRe"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-15"},{"lineNumber":4,"author":{"gitId":"RoeReRe"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-15"},{"lineNumber":5,"author":{"gitId":"RoeReRe"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-15"},{"lineNumber":6,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":7,"author":{"gitId":"RoeReRe"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-15"},{"lineNumber":8,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":9,"author":{"gitId":"RoeReRe"},"content":"public class NoteTest {","lastModifiedDate":"2023-10-15"},{"lineNumber":10,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":11,"author":{"gitId":"RoeReRe"},"content":"    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":12,"author":{"gitId":"RoeReRe"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-10-15"},{"lineNumber":13,"author":{"gitId":"RoeReRe"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Note(null));","lastModifiedDate":"2023-10-15"},{"lineNumber":14,"author":{"gitId":"RoeReRe"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":15,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":16,"author":{"gitId":"RoeReRe"},"content":"    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":17,"author":{"gitId":"RoeReRe"},"content":"    public void constructor_invalidNote_throwsIllegalArgumentException() {","lastModifiedDate":"2023-10-15"},{"lineNumber":18,"author":{"gitId":"RoeReRe"},"content":"        String invalidNote \u003d \"\";","lastModifiedDate":"2023-10-15"},{"lineNumber":19,"author":{"gitId":"RoeReRe"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Note(invalidNote));","lastModifiedDate":"2023-10-15"},{"lineNumber":20,"author":{"gitId":"RoeReRe"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":21,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":22,"author":{"gitId":"RoeReRe"},"content":"    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":23,"author":{"gitId":"RoeReRe"},"content":"    public void isValidNote() {","lastModifiedDate":"2023-10-15"},{"lineNumber":24,"author":{"gitId":"RoeReRe"},"content":"        // null note","lastModifiedDate":"2023-10-15"},{"lineNumber":25,"author":{"gitId":"RoeReRe"},"content":"        assertThrows(NullPointerException.class, () -\u003e Note.isValidNote(null));","lastModifiedDate":"2023-10-15"},{"lineNumber":26,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":27,"author":{"gitId":"RoeReRe"},"content":"        // invalid note","lastModifiedDate":"2023-10-15"},{"lineNumber":28,"author":{"gitId":"RoeReRe"},"content":"        assertFalse(Note.isValidNote(\"\")); // empty string","lastModifiedDate":"2023-10-15"},{"lineNumber":29,"author":{"gitId":"RoeReRe"},"content":"        assertFalse(Note.isValidNote(\" \")); // spaces only","lastModifiedDate":"2023-10-15"},{"lineNumber":30,"author":{"gitId":"RoeReRe"},"content":"        assertFalse(Note.isValidNote(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2023-10-15"},{"lineNumber":31,"author":{"gitId":"RoeReRe"},"content":"        assertFalse(Note.isValidNote(\"aspirin*\")); // contains non-alphanumeric characters","lastModifiedDate":"2023-10-15"},{"lineNumber":32,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":33,"author":{"gitId":"RoeReRe"},"content":"        // valid note","lastModifiedDate":"2023-10-15"},{"lineNumber":34,"author":{"gitId":"RoeReRe"},"content":"        assertTrue(Note.isValidNote(\"Drowsy\")); // alphabets only","lastModifiedDate":"2023-10-15"},{"lineNumber":35,"author":{"gitId":"RoeReRe"},"content":"        assertTrue(Note.isValidNote(\"12345\")); // numbers only","lastModifiedDate":"2023-10-15"},{"lineNumber":36,"author":{"gitId":"RoeReRe"},"content":"        assertTrue(Note.isValidNote(\"2 times after food\")); // alphanumeric characters","lastModifiedDate":"2023-10-15"},{"lineNumber":37,"author":{"gitId":"RoeReRe"},"content":"        assertTrue(Note.isValidNote(\"MAY cause drowsiness\")); // with capital letters","lastModifiedDate":"2023-10-15"},{"lineNumber":38,"author":{"gitId":"RoeReRe"},"content":"        assertTrue(Note.isValidNote(\"It can cause drowsiness so best to take at night\")); // long names","lastModifiedDate":"2023-10-15"},{"lineNumber":39,"author":{"gitId":"RoeReRe"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":40,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":41,"author":{"gitId":"RoeReRe"},"content":"    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":42,"author":{"gitId":"RoeReRe"},"content":"    public void equals() {","lastModifiedDate":"2023-10-15"},{"lineNumber":43,"author":{"gitId":"RoeReRe"},"content":"        Note note \u003d new Note(\"Valid Note\");","lastModifiedDate":"2023-10-15"},{"lineNumber":44,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":45,"author":{"gitId":"RoeReRe"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-15"},{"lineNumber":46,"author":{"gitId":"RoeReRe"},"content":"        assertTrue(note.equals(new Note(\"Valid Note\")));","lastModifiedDate":"2023-10-15"},{"lineNumber":47,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":48,"author":{"gitId":"RoeReRe"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-15"},{"lineNumber":49,"author":{"gitId":"RoeReRe"},"content":"        assertTrue(note.equals(note));","lastModifiedDate":"2023-10-15"},{"lineNumber":50,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":51,"author":{"gitId":"RoeReRe"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-15"},{"lineNumber":52,"author":{"gitId":"RoeReRe"},"content":"        assertFalse(note.equals(null));","lastModifiedDate":"2023-10-15"},{"lineNumber":53,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":54,"author":{"gitId":"RoeReRe"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-15"},{"lineNumber":55,"author":{"gitId":"RoeReRe"},"content":"        assertFalse(note.equals(5.0f));","lastModifiedDate":"2023-10-15"},{"lineNumber":56,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":57,"author":{"gitId":"RoeReRe"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2023-10-15"},{"lineNumber":58,"author":{"gitId":"RoeReRe"},"content":"        assertFalse(note.equals(new Note(\"Other Valid Note\")));","lastModifiedDate":"2023-10-15"},{"lineNumber":59,"author":{"gitId":"RoeReRe"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":60,"author":{"gitId":"RoeReRe"},"content":"}","lastModifiedDate":"2023-10-15"}],"authorContributionMap":{"RoeReRe":60}},{"path":"src/test/java/seedu/address/model/prescription/PrescriptionTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"RoeReRe"},"content":"package seedu.address.model.prescription;","lastModifiedDate":"2023-10-16"},{"lineNumber":2,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":3,"author":{"gitId":"RoeReRe"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-16"},{"lineNumber":4,"author":{"gitId":"RoeReRe"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-16"},{"lineNumber":5,"author":{"gitId":"RoeReRe"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-16"},{"lineNumber":6,"author":{"gitId":"RoeReRe"},"content":"import static seedu.address.logic.commands.CommandPrescriptionTestUtil.VALID_NAME_PROPRANOLOL;","lastModifiedDate":"2023-10-16"},{"lineNumber":7,"author":{"gitId":"RoeReRe"},"content":"import static seedu.address.logic.commands.CommandPrescriptionTestUtil.VALID_START_DATE_PROPRANOLOL;","lastModifiedDate":"2023-10-16"},{"lineNumber":8,"author":{"gitId":"RoeReRe"},"content":"import static seedu.address.testutil.TypicalPrescriptions.ASPIRIN;","lastModifiedDate":"2023-10-16"},{"lineNumber":9,"author":{"gitId":"RoeReRe"},"content":"import static seedu.address.testutil.TypicalPrescriptions.PROPRANOLOL;","lastModifiedDate":"2023-10-16"},{"lineNumber":10,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":11,"author":{"gitId":"RoeReRe"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-16"},{"lineNumber":12,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":13,"author":{"gitId":"RoeReRe"},"content":"import seedu.address.testutil.PrescriptionBuilder;","lastModifiedDate":"2023-10-16"},{"lineNumber":14,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":15,"author":{"gitId":"RoeReRe"},"content":"public class PrescriptionTest {","lastModifiedDate":"2023-10-16"},{"lineNumber":16,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":17,"author":{"gitId":"RoeReRe"},"content":"    /*","lastModifiedDate":"2023-10-16"},{"lineNumber":18,"author":{"gitId":"RoeReRe"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":19,"author":{"gitId":"RoeReRe"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2023-10-16"},{"lineNumber":20,"author":{"gitId":"RoeReRe"},"content":"        Prescription prescription \u003d new PrescriptionBuilder().build();","lastModifiedDate":"2023-10-16"},{"lineNumber":21,"author":{"gitId":"RoeReRe"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e prescription.getTags().remove(0));","lastModifiedDate":"2023-10-16"},{"lineNumber":22,"author":{"gitId":"RoeReRe"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":23,"author":{"gitId":"RoeReRe"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":24,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":25,"author":{"gitId":"RoeReRe"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":26,"author":{"gitId":"RoeReRe"},"content":"    public void isSamePrescription() {","lastModifiedDate":"2023-10-16"},{"lineNumber":27,"author":{"gitId":"RoeReRe"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-16"},{"lineNumber":28,"author":{"gitId":"RoeReRe"},"content":"        assertTrue(ASPIRIN.isSamePrescription(ASPIRIN));","lastModifiedDate":"2023-10-16"},{"lineNumber":29,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":30,"author":{"gitId":"RoeReRe"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-16"},{"lineNumber":31,"author":{"gitId":"RoeReRe"},"content":"        assertFalse(ASPIRIN.isSamePrescription(null));","lastModifiedDate":"2023-10-16"},{"lineNumber":32,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":33,"author":{"gitId":"RoeReRe"},"content":"        // same name and start date, all other attributes different -\u003e returns true","lastModifiedDate":"2023-10-16"},{"lineNumber":34,"author":{"gitId":"RoeReRe"},"content":"        Prescription editedAspirin \u003d new PrescriptionBuilder(ASPIRIN).withDosage(\"1\").withEndDate(\"01/01/2027\").build();","lastModifiedDate":"2023-10-16"},{"lineNumber":35,"author":{"gitId":"RoeReRe"},"content":"        assertTrue(ASPIRIN.isSamePrescription(editedAspirin));","lastModifiedDate":"2023-10-16"},{"lineNumber":36,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":37,"author":{"gitId":"RoeReRe"},"content":"        // different name, all other attributes same -\u003e returns false","lastModifiedDate":"2023-10-16"},{"lineNumber":38,"author":{"gitId":"RoeReRe"},"content":"        editedAspirin \u003d new PrescriptionBuilder(ASPIRIN).withName(VALID_NAME_PROPRANOLOL).build();","lastModifiedDate":"2023-10-16"},{"lineNumber":39,"author":{"gitId":"RoeReRe"},"content":"        assertFalse(ASPIRIN.isSamePrescription(editedAspirin));","lastModifiedDate":"2023-10-16"},{"lineNumber":40,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":41,"author":{"gitId":"RoeReRe"},"content":"        // name differs in case, all other attributes same -\u003e returns false","lastModifiedDate":"2023-10-16"},{"lineNumber":42,"author":{"gitId":"RoeReRe"},"content":"        Prescription editedPropranolol \u003d new PrescriptionBuilder(PROPRANOLOL)","lastModifiedDate":"2023-10-16"},{"lineNumber":43,"author":{"gitId":"RoeReRe"},"content":"            .withName(VALID_NAME_PROPRANOLOL.toLowerCase()).build();","lastModifiedDate":"2023-10-16"},{"lineNumber":44,"author":{"gitId":"RoeReRe"},"content":"        assertFalse(PROPRANOLOL.isSamePrescription(editedPropranolol));","lastModifiedDate":"2023-10-16"},{"lineNumber":45,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":46,"author":{"gitId":"RoeReRe"},"content":"        // name has trailing spaces, all other attributes same -\u003e returns false","lastModifiedDate":"2023-10-16"},{"lineNumber":47,"author":{"gitId":"RoeReRe"},"content":"        String nameWithTrailingSpaces \u003d VALID_NAME_PROPRANOLOL + \" \";","lastModifiedDate":"2023-10-16"},{"lineNumber":48,"author":{"gitId":"RoeReRe"},"content":"        editedPropranolol \u003d new PrescriptionBuilder(PROPRANOLOL).withName(nameWithTrailingSpaces).build();","lastModifiedDate":"2023-10-16"},{"lineNumber":49,"author":{"gitId":"RoeReRe"},"content":"        assertFalse(PROPRANOLOL.isSamePrescription(editedPropranolol));","lastModifiedDate":"2023-10-16"},{"lineNumber":50,"author":{"gitId":"RoeReRe"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":51,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":52,"author":{"gitId":"RoeReRe"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":53,"author":{"gitId":"RoeReRe"},"content":"    public void equals() {","lastModifiedDate":"2023-10-16"},{"lineNumber":54,"author":{"gitId":"RoeReRe"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-16"},{"lineNumber":55,"author":{"gitId":"RoeReRe"},"content":"        Prescription aspirinCopy \u003d new PrescriptionBuilder(ASPIRIN).build();","lastModifiedDate":"2023-10-16"},{"lineNumber":56,"author":{"gitId":"RoeReRe"},"content":"        assertTrue(ASPIRIN.equals(aspirinCopy));","lastModifiedDate":"2023-10-16"},{"lineNumber":57,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":58,"author":{"gitId":"RoeReRe"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-16"},{"lineNumber":59,"author":{"gitId":"RoeReRe"},"content":"        assertTrue(ASPIRIN.equals(ASPIRIN));","lastModifiedDate":"2023-10-16"},{"lineNumber":60,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":61,"author":{"gitId":"RoeReRe"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-16"},{"lineNumber":62,"author":{"gitId":"RoeReRe"},"content":"        assertFalse(ASPIRIN.equals(null));","lastModifiedDate":"2023-10-16"},{"lineNumber":63,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":64,"author":{"gitId":"RoeReRe"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2023-10-16"},{"lineNumber":65,"author":{"gitId":"RoeReRe"},"content":"        assertFalse(ASPIRIN.equals(5));","lastModifiedDate":"2023-10-16"},{"lineNumber":66,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":67,"author":{"gitId":"RoeReRe"},"content":"        // different prescription -\u003e returns false","lastModifiedDate":"2023-10-16"},{"lineNumber":68,"author":{"gitId":"RoeReRe"},"content":"        assertFalse(ASPIRIN.equals(PROPRANOLOL));","lastModifiedDate":"2023-10-16"},{"lineNumber":69,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":70,"author":{"gitId":"RoeReRe"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2023-10-16"},{"lineNumber":71,"author":{"gitId":"RoeReRe"},"content":"        Prescription editedAspirin \u003d new PrescriptionBuilder(ASPIRIN).withName(VALID_NAME_PROPRANOLOL).build();","lastModifiedDate":"2023-10-16"},{"lineNumber":72,"author":{"gitId":"RoeReRe"},"content":"        assertFalse(ASPIRIN.equals(editedAspirin));","lastModifiedDate":"2023-10-16"},{"lineNumber":73,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":74,"author":{"gitId":"RoeReRe"},"content":"        // different start date -\u003e returns false","lastModifiedDate":"2023-10-16"},{"lineNumber":75,"author":{"gitId":"RoeReRe"},"content":"        editedAspirin \u003d new PrescriptionBuilder(ASPIRIN).withStartDate(VALID_START_DATE_PROPRANOLOL).build();","lastModifiedDate":"2023-10-16"},{"lineNumber":76,"author":{"gitId":"RoeReRe"},"content":"        assertFalse(ASPIRIN.equals(editedAspirin));","lastModifiedDate":"2023-10-16"},{"lineNumber":77,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":78,"author":{"gitId":"RoeReRe"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2023-10-16"},{"lineNumber":79,"author":{"gitId":"RoeReRe"},"content":"        // editedAspirin \u003d new PrescriptionBuilder(ASPIRIN).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2023-10-16"},{"lineNumber":80,"author":{"gitId":"RoeReRe"},"content":"        // assertFalse(ASPIRIN.equals(editedAspirin));","lastModifiedDate":"2023-10-16"},{"lineNumber":81,"author":{"gitId":"RoeReRe"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":82,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":83,"author":{"gitId":"RoeReRe"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":84,"author":{"gitId":"RoeReRe"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-16"},{"lineNumber":85,"author":{"gitId":"RoeReRe"},"content":"        String expected \u003d Prescription.class.getCanonicalName()","lastModifiedDate":"2023-10-16"},{"lineNumber":86,"author":{"gitId":"RoeReRe"},"content":"                    + \"{name\u003d\" + ASPIRIN.getName()","lastModifiedDate":"2023-10-16"},{"lineNumber":87,"author":{"gitId":"RoeReRe"},"content":"                    + \", dosage\u003d\" + ASPIRIN.getDosage()","lastModifiedDate":"2023-10-16"},{"lineNumber":88,"author":{"gitId":"RoeReRe"},"content":"                    + \", frequency\u003d\" + ASPIRIN.getFrequency()","lastModifiedDate":"2023-10-16"},{"lineNumber":89,"author":{"gitId":"RoeReRe"},"content":"                    + \", startDate\u003d\" + ASPIRIN.getStartDate()","lastModifiedDate":"2023-10-16"},{"lineNumber":90,"author":{"gitId":"RoeReRe"},"content":"                    + \", endDate\u003d\" + ASPIRIN.getEndDate()","lastModifiedDate":"2023-10-16"},{"lineNumber":91,"author":{"gitId":"RoeReRe"},"content":"                    + \", expiryDate\u003d\" + ASPIRIN.getExpiryDate()","lastModifiedDate":"2023-10-16"},{"lineNumber":92,"author":{"gitId":"RoeReRe"},"content":"                    + \", totalStock\u003d\" + ASPIRIN.getTotalStock()","lastModifiedDate":"2023-10-16"},{"lineNumber":93,"author":{"gitId":"RoeReRe"},"content":"                    + \", consumptionCount\u003d\" + ASPIRIN.getConsumptionCount()","lastModifiedDate":"2023-10-16"},{"lineNumber":94,"author":{"gitId":"RoeReRe"},"content":"                    + \", note\u003d\" + ASPIRIN.getNote() + \"}\";","lastModifiedDate":"2023-10-16"},{"lineNumber":95,"author":{"gitId":"RoeReRe"},"content":"        assertEquals(expected, ASPIRIN.toString());","lastModifiedDate":"2023-10-16"},{"lineNumber":96,"author":{"gitId":"RoeReRe"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":97,"author":{"gitId":"RoeReRe"},"content":"}","lastModifiedDate":"2023-10-16"}],"authorContributionMap":{"RoeReRe":97}},{"path":"src/test/java/seedu/address/model/prescription/StockTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"RoeReRe"},"content":"package seedu.address.model.prescription;","lastModifiedDate":"2023-10-15"},{"lineNumber":2,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":3,"author":{"gitId":"RoeReRe"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-15"},{"lineNumber":4,"author":{"gitId":"RoeReRe"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-15"},{"lineNumber":5,"author":{"gitId":"RoeReRe"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-15"},{"lineNumber":6,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":7,"author":{"gitId":"RoeReRe"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-15"},{"lineNumber":8,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":9,"author":{"gitId":"RoeReRe"},"content":"public class StockTest {","lastModifiedDate":"2023-10-15"},{"lineNumber":10,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":11,"author":{"gitId":"RoeReRe"},"content":"    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":12,"author":{"gitId":"RoeReRe"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-10-15"},{"lineNumber":13,"author":{"gitId":"RoeReRe"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Stock(null));","lastModifiedDate":"2023-10-15"},{"lineNumber":14,"author":{"gitId":"RoeReRe"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":15,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":16,"author":{"gitId":"RoeReRe"},"content":"    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":17,"author":{"gitId":"RoeReRe"},"content":"    public void constructor_invalidStock_throwsIllegalArgumentException() {","lastModifiedDate":"2023-10-15"},{"lineNumber":18,"author":{"gitId":"RoeReRe"},"content":"        String invalidStock \u003d \"\";","lastModifiedDate":"2023-10-15"},{"lineNumber":19,"author":{"gitId":"RoeReRe"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Stock(invalidStock));","lastModifiedDate":"2023-10-15"},{"lineNumber":20,"author":{"gitId":"RoeReRe"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":21,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":22,"author":{"gitId":"RoeReRe"},"content":"    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":23,"author":{"gitId":"RoeReRe"},"content":"    public void isValidStock() {","lastModifiedDate":"2023-10-15"},{"lineNumber":24,"author":{"gitId":"RoeReRe"},"content":"        // null stock","lastModifiedDate":"2023-10-15"},{"lineNumber":25,"author":{"gitId":"RoeReRe"},"content":"        assertThrows(NullPointerException.class, () -\u003e Stock.isValidStock(null));","lastModifiedDate":"2023-10-15"},{"lineNumber":26,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":27,"author":{"gitId":"RoeReRe"},"content":"        // invalid stock","lastModifiedDate":"2023-10-15"},{"lineNumber":28,"author":{"gitId":"RoeReRe"},"content":"        assertFalse(Stock.isValidStock(\"\")); // empty string","lastModifiedDate":"2023-10-15"},{"lineNumber":29,"author":{"gitId":"RoeReRe"},"content":"        assertFalse(Stock.isValidStock(\" \")); // spaces only","lastModifiedDate":"2023-10-15"},{"lineNumber":30,"author":{"gitId":"RoeReRe"},"content":"        assertFalse(Stock.isValidStock(\"^\")); // non-alphanumeric characters","lastModifiedDate":"2023-10-15"},{"lineNumber":31,"author":{"gitId":"RoeReRe"},"content":"        assertFalse(Stock.isValidStock(\"a\")); // alphabets","lastModifiedDate":"2023-10-15"},{"lineNumber":32,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":33,"author":{"gitId":"RoeReRe"},"content":"        // valid stock","lastModifiedDate":"2023-10-15"},{"lineNumber":34,"author":{"gitId":"RoeReRe"},"content":"        assertTrue(Stock.isValidStock(\"1\")); // single digit","lastModifiedDate":"2023-10-15"},{"lineNumber":35,"author":{"gitId":"RoeReRe"},"content":"        assertTrue(Stock.isValidStock(\"12\")); // double digit","lastModifiedDate":"2023-10-15"},{"lineNumber":36,"author":{"gitId":"RoeReRe"},"content":"        assertTrue(Stock.isValidStock(\"02\")); // trailing zero","lastModifiedDate":"2023-10-15"},{"lineNumber":37,"author":{"gitId":"RoeReRe"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":38,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":39,"author":{"gitId":"RoeReRe"},"content":"    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":40,"author":{"gitId":"RoeReRe"},"content":"    public void equals() {","lastModifiedDate":"2023-10-15"},{"lineNumber":41,"author":{"gitId":"RoeReRe"},"content":"        Stock stock \u003d new Stock(\"100\");","lastModifiedDate":"2023-10-15"},{"lineNumber":42,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":43,"author":{"gitId":"RoeReRe"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-15"},{"lineNumber":44,"author":{"gitId":"RoeReRe"},"content":"        assertTrue(stock.equals(new Stock(\"100\")));","lastModifiedDate":"2023-10-15"},{"lineNumber":45,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":46,"author":{"gitId":"RoeReRe"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-15"},{"lineNumber":47,"author":{"gitId":"RoeReRe"},"content":"        assertTrue(stock.equals(stock));","lastModifiedDate":"2023-10-15"},{"lineNumber":48,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":49,"author":{"gitId":"RoeReRe"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-15"},{"lineNumber":50,"author":{"gitId":"RoeReRe"},"content":"        assertFalse(stock.equals(null));","lastModifiedDate":"2023-10-15"},{"lineNumber":51,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":52,"author":{"gitId":"RoeReRe"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-15"},{"lineNumber":53,"author":{"gitId":"RoeReRe"},"content":"        assertFalse(stock.equals(5.0f));","lastModifiedDate":"2023-10-15"},{"lineNumber":54,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":55,"author":{"gitId":"RoeReRe"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2023-10-15"},{"lineNumber":56,"author":{"gitId":"RoeReRe"},"content":"        assertFalse(stock.equals(new Stock(\"200\")));","lastModifiedDate":"2023-10-15"},{"lineNumber":57,"author":{"gitId":"RoeReRe"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":58,"author":{"gitId":"RoeReRe"},"content":"}","lastModifiedDate":"2023-10-15"}],"authorContributionMap":{"RoeReRe":58}},{"path":"src/test/java/seedu/address/model/prescription/UniquePrescriptionListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"RoeReRe"},"content":"package seedu.address.model.prescription;","lastModifiedDate":"2023-10-16"},{"lineNumber":2,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":3,"author":{"gitId":"RoeReRe"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-16"},{"lineNumber":4,"author":{"gitId":"RoeReRe"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-16"},{"lineNumber":5,"author":{"gitId":"RoeReRe"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-16"},{"lineNumber":6,"author":{"gitId":"RoeReRe"},"content":"import static seedu.address.logic.commands.CommandPrescriptionTestUtil.VALID_DOSAGE_PROPRANOLOL;","lastModifiedDate":"2023-10-16"},{"lineNumber":7,"author":{"gitId":"RoeReRe"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-16"},{"lineNumber":8,"author":{"gitId":"RoeReRe"},"content":"import static seedu.address.testutil.TypicalPrescriptions.ASPIRIN;","lastModifiedDate":"2023-10-16"},{"lineNumber":9,"author":{"gitId":"RoeReRe"},"content":"import static seedu.address.testutil.TypicalPrescriptions.PROPRANOLOL;","lastModifiedDate":"2023-10-16"},{"lineNumber":10,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":11,"author":{"gitId":"RoeReRe"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-10-16"},{"lineNumber":12,"author":{"gitId":"RoeReRe"},"content":"import java.util.Collections;","lastModifiedDate":"2023-10-16"},{"lineNumber":13,"author":{"gitId":"RoeReRe"},"content":"import java.util.List;","lastModifiedDate":"2023-10-16"},{"lineNumber":14,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":15,"author":{"gitId":"RoeReRe"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-16"},{"lineNumber":16,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":17,"author":{"gitId":"RoeReRe"},"content":"import seedu.address.model.prescription.exceptions.DuplicatePrescriptionException;","lastModifiedDate":"2023-10-16"},{"lineNumber":18,"author":{"gitId":"RoeReRe"},"content":"import seedu.address.model.prescription.exceptions.PrescriptionNotFoundException;","lastModifiedDate":"2023-10-16"},{"lineNumber":19,"author":{"gitId":"RoeReRe"},"content":"import seedu.address.testutil.PrescriptionBuilder;","lastModifiedDate":"2023-10-16"},{"lineNumber":20,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":21,"author":{"gitId":"RoeReRe"},"content":"public class UniquePrescriptionListTest {","lastModifiedDate":"2023-10-16"},{"lineNumber":22,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":23,"author":{"gitId":"RoeReRe"},"content":"    private final UniquePrescriptionList uniquePrescriptionList \u003d new UniquePrescriptionList();","lastModifiedDate":"2023-10-16"},{"lineNumber":24,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":25,"author":{"gitId":"RoeReRe"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":26,"author":{"gitId":"RoeReRe"},"content":"    public void contains_nullPrescription_throwsNullPointerException() {","lastModifiedDate":"2023-10-16"},{"lineNumber":27,"author":{"gitId":"RoeReRe"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePrescriptionList.contains(null));","lastModifiedDate":"2023-10-16"},{"lineNumber":28,"author":{"gitId":"RoeReRe"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":29,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":30,"author":{"gitId":"RoeReRe"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":31,"author":{"gitId":"RoeReRe"},"content":"    public void contains_prescriptionNotInList_returnsFalse() {","lastModifiedDate":"2023-10-16"},{"lineNumber":32,"author":{"gitId":"RoeReRe"},"content":"        assertFalse(uniquePrescriptionList.contains(ASPIRIN));","lastModifiedDate":"2023-10-16"},{"lineNumber":33,"author":{"gitId":"RoeReRe"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":34,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":35,"author":{"gitId":"RoeReRe"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":36,"author":{"gitId":"RoeReRe"},"content":"    public void contains_prescriptionInList_returnsTrue() {","lastModifiedDate":"2023-10-16"},{"lineNumber":37,"author":{"gitId":"RoeReRe"},"content":"        uniquePrescriptionList.add(ASPIRIN);","lastModifiedDate":"2023-10-16"},{"lineNumber":38,"author":{"gitId":"RoeReRe"},"content":"        assertTrue(uniquePrescriptionList.contains(ASPIRIN));","lastModifiedDate":"2023-10-16"},{"lineNumber":39,"author":{"gitId":"RoeReRe"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":40,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":41,"author":{"gitId":"RoeReRe"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":42,"author":{"gitId":"RoeReRe"},"content":"    public void contains_prescriptionWithSameIdentityFieldsInList_returnsTrue() {","lastModifiedDate":"2023-10-16"},{"lineNumber":43,"author":{"gitId":"RoeReRe"},"content":"        uniquePrescriptionList.add(ASPIRIN);","lastModifiedDate":"2023-10-16"},{"lineNumber":44,"author":{"gitId":"RoeReRe"},"content":"        Prescription editedAspirin \u003d new PrescriptionBuilder(ASPIRIN).withDosage(VALID_DOSAGE_PROPRANOLOL).build();","lastModifiedDate":"2023-10-16"},{"lineNumber":45,"author":{"gitId":"RoeReRe"},"content":"        assertTrue(uniquePrescriptionList.contains(editedAspirin));","lastModifiedDate":"2023-10-16"},{"lineNumber":46,"author":{"gitId":"RoeReRe"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":47,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":48,"author":{"gitId":"RoeReRe"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":49,"author":{"gitId":"RoeReRe"},"content":"    public void add_nullPrescription_throwsNullPointerException() {","lastModifiedDate":"2023-10-16"},{"lineNumber":50,"author":{"gitId":"RoeReRe"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePrescriptionList.add(null));","lastModifiedDate":"2023-10-16"},{"lineNumber":51,"author":{"gitId":"RoeReRe"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":52,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":53,"author":{"gitId":"RoeReRe"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":54,"author":{"gitId":"RoeReRe"},"content":"    public void add_duplicatePrescription_throwsDuplicatePrescriptionException() {","lastModifiedDate":"2023-10-16"},{"lineNumber":55,"author":{"gitId":"RoeReRe"},"content":"        uniquePrescriptionList.add(ASPIRIN);","lastModifiedDate":"2023-10-16"},{"lineNumber":56,"author":{"gitId":"RoeReRe"},"content":"        assertThrows(DuplicatePrescriptionException.class, () -\u003e uniquePrescriptionList.add(ASPIRIN));","lastModifiedDate":"2023-10-16"},{"lineNumber":57,"author":{"gitId":"RoeReRe"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":58,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":59,"author":{"gitId":"RoeReRe"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":60,"author":{"gitId":"RoeReRe"},"content":"    public void setPrescription_nullTargetPrescription_throwsNullPointerException() {","lastModifiedDate":"2023-10-16"},{"lineNumber":61,"author":{"gitId":"RoeReRe"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePrescriptionList.setPrescription(null, ASPIRIN));","lastModifiedDate":"2023-10-16"},{"lineNumber":62,"author":{"gitId":"RoeReRe"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":63,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":64,"author":{"gitId":"RoeReRe"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":65,"author":{"gitId":"RoeReRe"},"content":"    public void setPrescription_nullEditedPrescription_throwsNullPointerException() {","lastModifiedDate":"2023-10-16"},{"lineNumber":66,"author":{"gitId":"RoeReRe"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePrescriptionList.setPrescription(ASPIRIN, null));","lastModifiedDate":"2023-10-16"},{"lineNumber":67,"author":{"gitId":"RoeReRe"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":68,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":69,"author":{"gitId":"RoeReRe"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":70,"author":{"gitId":"RoeReRe"},"content":"    public void setPrescription_targetPrescriptionNotInList_throwsPrescriptionNotFoundException() {","lastModifiedDate":"2023-10-16"},{"lineNumber":71,"author":{"gitId":"RoeReRe"},"content":"        assertThrows(PrescriptionNotFoundException.class, () -\u003e","lastModifiedDate":"2023-10-16"},{"lineNumber":72,"author":{"gitId":"RoeReRe"},"content":"            uniquePrescriptionList.setPrescription(ASPIRIN, ASPIRIN));","lastModifiedDate":"2023-10-16"},{"lineNumber":73,"author":{"gitId":"RoeReRe"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":74,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":75,"author":{"gitId":"RoeReRe"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":76,"author":{"gitId":"RoeReRe"},"content":"    public void setPrescription_editedPrescriptionIsSamePrescription_success() {","lastModifiedDate":"2023-10-16"},{"lineNumber":77,"author":{"gitId":"RoeReRe"},"content":"        uniquePrescriptionList.add(ASPIRIN);","lastModifiedDate":"2023-10-16"},{"lineNumber":78,"author":{"gitId":"RoeReRe"},"content":"        uniquePrescriptionList.setPrescription(ASPIRIN, ASPIRIN);","lastModifiedDate":"2023-10-16"},{"lineNumber":79,"author":{"gitId":"RoeReRe"},"content":"        UniquePrescriptionList expectedUniquePrescriptionList \u003d new UniquePrescriptionList();","lastModifiedDate":"2023-10-16"},{"lineNumber":80,"author":{"gitId":"RoeReRe"},"content":"        expectedUniquePrescriptionList.add(ASPIRIN);","lastModifiedDate":"2023-10-16"},{"lineNumber":81,"author":{"gitId":"RoeReRe"},"content":"        assertEquals(expectedUniquePrescriptionList, uniquePrescriptionList);","lastModifiedDate":"2023-10-16"},{"lineNumber":82,"author":{"gitId":"RoeReRe"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":83,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":84,"author":{"gitId":"RoeReRe"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":85,"author":{"gitId":"RoeReRe"},"content":"    public void setPrescription_editedPrescriptionHasSameIdentity_success() {","lastModifiedDate":"2023-10-16"},{"lineNumber":86,"author":{"gitId":"RoeReRe"},"content":"        uniquePrescriptionList.add(ASPIRIN);","lastModifiedDate":"2023-10-16"},{"lineNumber":87,"author":{"gitId":"RoeReRe"},"content":"        Prescription editedAspirin \u003d new PrescriptionBuilder(ASPIRIN).withDosage(VALID_DOSAGE_PROPRANOLOL).build();","lastModifiedDate":"2023-10-16"},{"lineNumber":88,"author":{"gitId":"RoeReRe"},"content":"        uniquePrescriptionList.setPrescription(ASPIRIN, editedAspirin);","lastModifiedDate":"2023-10-16"},{"lineNumber":89,"author":{"gitId":"RoeReRe"},"content":"        UniquePrescriptionList expectedUniquePrescriptionList \u003d new UniquePrescriptionList();","lastModifiedDate":"2023-10-16"},{"lineNumber":90,"author":{"gitId":"RoeReRe"},"content":"        expectedUniquePrescriptionList.add(editedAspirin);","lastModifiedDate":"2023-10-16"},{"lineNumber":91,"author":{"gitId":"RoeReRe"},"content":"        assertEquals(expectedUniquePrescriptionList, uniquePrescriptionList);","lastModifiedDate":"2023-10-16"},{"lineNumber":92,"author":{"gitId":"RoeReRe"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":93,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":94,"author":{"gitId":"RoeReRe"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":95,"author":{"gitId":"RoeReRe"},"content":"    public void setPrescription_editedPrescriptionHasDifferentIdentity_success() {","lastModifiedDate":"2023-10-16"},{"lineNumber":96,"author":{"gitId":"RoeReRe"},"content":"        uniquePrescriptionList.add(ASPIRIN);","lastModifiedDate":"2023-10-16"},{"lineNumber":97,"author":{"gitId":"RoeReRe"},"content":"        uniquePrescriptionList.setPrescription(ASPIRIN, PROPRANOLOL);","lastModifiedDate":"2023-10-16"},{"lineNumber":98,"author":{"gitId":"RoeReRe"},"content":"        UniquePrescriptionList expectedUniquePrescriptionList \u003d new UniquePrescriptionList();","lastModifiedDate":"2023-10-16"},{"lineNumber":99,"author":{"gitId":"RoeReRe"},"content":"        expectedUniquePrescriptionList.add(PROPRANOLOL);","lastModifiedDate":"2023-10-16"},{"lineNumber":100,"author":{"gitId":"RoeReRe"},"content":"        assertEquals(expectedUniquePrescriptionList, uniquePrescriptionList);","lastModifiedDate":"2023-10-16"},{"lineNumber":101,"author":{"gitId":"RoeReRe"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":102,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":103,"author":{"gitId":"RoeReRe"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":104,"author":{"gitId":"RoeReRe"},"content":"    public void setPrescription_editedPrescriptionHasNonUniqueIdentity_throwsDuplicatePrescriptionException() {","lastModifiedDate":"2023-10-16"},{"lineNumber":105,"author":{"gitId":"RoeReRe"},"content":"        uniquePrescriptionList.add(ASPIRIN);","lastModifiedDate":"2023-10-16"},{"lineNumber":106,"author":{"gitId":"RoeReRe"},"content":"        uniquePrescriptionList.add(PROPRANOLOL);","lastModifiedDate":"2023-10-16"},{"lineNumber":107,"author":{"gitId":"RoeReRe"},"content":"        assertThrows(DuplicatePrescriptionException.class, () -\u003e","lastModifiedDate":"2023-10-16"},{"lineNumber":108,"author":{"gitId":"RoeReRe"},"content":"            uniquePrescriptionList.setPrescription(ASPIRIN, PROPRANOLOL));","lastModifiedDate":"2023-10-16"},{"lineNumber":109,"author":{"gitId":"RoeReRe"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":110,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":111,"author":{"gitId":"RoeReRe"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":112,"author":{"gitId":"RoeReRe"},"content":"    public void remove_nullPrescription_throwsNullPointerException() {","lastModifiedDate":"2023-10-16"},{"lineNumber":113,"author":{"gitId":"RoeReRe"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePrescriptionList.remove(null));","lastModifiedDate":"2023-10-16"},{"lineNumber":114,"author":{"gitId":"RoeReRe"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":115,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":116,"author":{"gitId":"RoeReRe"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":117,"author":{"gitId":"RoeReRe"},"content":"    public void remove_prescriptionDoesNotExist_throwsPrescriptionNotFoundException() {","lastModifiedDate":"2023-10-16"},{"lineNumber":118,"author":{"gitId":"RoeReRe"},"content":"        assertThrows(PrescriptionNotFoundException.class, () -\u003e uniquePrescriptionList.remove(ASPIRIN));","lastModifiedDate":"2023-10-16"},{"lineNumber":119,"author":{"gitId":"RoeReRe"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":120,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":121,"author":{"gitId":"RoeReRe"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":122,"author":{"gitId":"RoeReRe"},"content":"    public void remove_existingPrescription_removesPrescription() {","lastModifiedDate":"2023-10-16"},{"lineNumber":123,"author":{"gitId":"RoeReRe"},"content":"        uniquePrescriptionList.add(ASPIRIN);","lastModifiedDate":"2023-10-16"},{"lineNumber":124,"author":{"gitId":"RoeReRe"},"content":"        uniquePrescriptionList.remove(ASPIRIN);","lastModifiedDate":"2023-10-16"},{"lineNumber":125,"author":{"gitId":"RoeReRe"},"content":"        UniquePrescriptionList expectedUniquePrescriptionList \u003d new UniquePrescriptionList();","lastModifiedDate":"2023-10-16"},{"lineNumber":126,"author":{"gitId":"RoeReRe"},"content":"        assertEquals(expectedUniquePrescriptionList, uniquePrescriptionList);","lastModifiedDate":"2023-10-16"},{"lineNumber":127,"author":{"gitId":"RoeReRe"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":128,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":129,"author":{"gitId":"RoeReRe"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":130,"author":{"gitId":"RoeReRe"},"content":"    public void setPrescriptions_nullUniquePrescriptionList_throwsNullPointerException() {","lastModifiedDate":"2023-10-16"},{"lineNumber":131,"author":{"gitId":"RoeReRe"},"content":"        assertThrows(NullPointerException.class, () -\u003e","lastModifiedDate":"2023-10-16"},{"lineNumber":132,"author":{"gitId":"RoeReRe"},"content":"            uniquePrescriptionList.setPrescriptions((UniquePrescriptionList) null));","lastModifiedDate":"2023-10-16"},{"lineNumber":133,"author":{"gitId":"RoeReRe"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":134,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":135,"author":{"gitId":"RoeReRe"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":136,"author":{"gitId":"RoeReRe"},"content":"    public void setPrescriptions_uniquePrescriptionList_replacesOwnListWithProvidedUniquePrescriptionList() {","lastModifiedDate":"2023-10-16"},{"lineNumber":137,"author":{"gitId":"RoeReRe"},"content":"        uniquePrescriptionList.add(ASPIRIN);","lastModifiedDate":"2023-10-16"},{"lineNumber":138,"author":{"gitId":"RoeReRe"},"content":"        UniquePrescriptionList expectedUniquePrescriptionList \u003d new UniquePrescriptionList();","lastModifiedDate":"2023-10-16"},{"lineNumber":139,"author":{"gitId":"RoeReRe"},"content":"        expectedUniquePrescriptionList.add(PROPRANOLOL);","lastModifiedDate":"2023-10-16"},{"lineNumber":140,"author":{"gitId":"RoeReRe"},"content":"        uniquePrescriptionList.setPrescriptions(expectedUniquePrescriptionList);","lastModifiedDate":"2023-10-16"},{"lineNumber":141,"author":{"gitId":"RoeReRe"},"content":"        assertEquals(expectedUniquePrescriptionList, uniquePrescriptionList);","lastModifiedDate":"2023-10-16"},{"lineNumber":142,"author":{"gitId":"RoeReRe"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":143,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":144,"author":{"gitId":"RoeReRe"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":145,"author":{"gitId":"RoeReRe"},"content":"    public void setPrescriptions_nullList_throwsNullPointerException() {","lastModifiedDate":"2023-10-16"},{"lineNumber":146,"author":{"gitId":"RoeReRe"},"content":"        assertThrows(NullPointerException.class, () -\u003e","lastModifiedDate":"2023-10-16"},{"lineNumber":147,"author":{"gitId":"RoeReRe"},"content":"            uniquePrescriptionList.setPrescriptions((List\u003cPrescription\u003e) null));","lastModifiedDate":"2023-10-16"},{"lineNumber":148,"author":{"gitId":"RoeReRe"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":149,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":150,"author":{"gitId":"RoeReRe"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":151,"author":{"gitId":"RoeReRe"},"content":"    public void setPrescriptions_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2023-10-16"},{"lineNumber":152,"author":{"gitId":"RoeReRe"},"content":"        uniquePrescriptionList.add(ASPIRIN);","lastModifiedDate":"2023-10-16"},{"lineNumber":153,"author":{"gitId":"RoeReRe"},"content":"        List\u003cPrescription\u003e prescriptionList \u003d Collections.singletonList(PROPRANOLOL);","lastModifiedDate":"2023-10-16"},{"lineNumber":154,"author":{"gitId":"RoeReRe"},"content":"        uniquePrescriptionList.setPrescriptions(prescriptionList);","lastModifiedDate":"2023-10-16"},{"lineNumber":155,"author":{"gitId":"RoeReRe"},"content":"        UniquePrescriptionList expectedUniquePrescriptionList \u003d new UniquePrescriptionList();","lastModifiedDate":"2023-10-16"},{"lineNumber":156,"author":{"gitId":"RoeReRe"},"content":"        expectedUniquePrescriptionList.add(PROPRANOLOL);","lastModifiedDate":"2023-10-16"},{"lineNumber":157,"author":{"gitId":"RoeReRe"},"content":"        assertEquals(expectedUniquePrescriptionList, uniquePrescriptionList);","lastModifiedDate":"2023-10-16"},{"lineNumber":158,"author":{"gitId":"RoeReRe"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":159,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":160,"author":{"gitId":"RoeReRe"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":161,"author":{"gitId":"RoeReRe"},"content":"    public void setPrescriptions_listWithDuplicatePrescriptions_throwsDuplicatePrescriptionException() {","lastModifiedDate":"2023-10-16"},{"lineNumber":162,"author":{"gitId":"RoeReRe"},"content":"        List\u003cPrescription\u003e listWithDuplicatePrescriptions \u003d Arrays.asList(ASPIRIN, ASPIRIN);","lastModifiedDate":"2023-10-16"},{"lineNumber":163,"author":{"gitId":"RoeReRe"},"content":"        assertThrows(DuplicatePrescriptionException.class, () -\u003e","lastModifiedDate":"2023-10-16"},{"lineNumber":164,"author":{"gitId":"RoeReRe"},"content":"            uniquePrescriptionList.setPrescriptions(listWithDuplicatePrescriptions));","lastModifiedDate":"2023-10-16"},{"lineNumber":165,"author":{"gitId":"RoeReRe"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":166,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":167,"author":{"gitId":"RoeReRe"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":168,"author":{"gitId":"RoeReRe"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2023-10-16"},{"lineNumber":169,"author":{"gitId":"RoeReRe"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e","lastModifiedDate":"2023-10-16"},{"lineNumber":170,"author":{"gitId":"RoeReRe"},"content":"            uniquePrescriptionList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2023-10-16"},{"lineNumber":171,"author":{"gitId":"RoeReRe"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":172,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":173,"author":{"gitId":"RoeReRe"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":174,"author":{"gitId":"RoeReRe"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-16"},{"lineNumber":175,"author":{"gitId":"RoeReRe"},"content":"        assertEquals(uniquePrescriptionList.asUnmodifiableObservableList().toString(),","lastModifiedDate":"2023-10-16"},{"lineNumber":176,"author":{"gitId":"RoeReRe"},"content":"            uniquePrescriptionList.toString());","lastModifiedDate":"2023-10-16"},{"lineNumber":177,"author":{"gitId":"RoeReRe"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":178,"author":{"gitId":"RoeReRe"},"content":"}","lastModifiedDate":"2023-10-16"}],"authorContributionMap":{"RoeReRe":178}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedPrescriptionTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"RoeReRe"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-10-15"},{"lineNumber":2,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":3,"author":{"gitId":"RoeReRe"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-15"},{"lineNumber":4,"author":{"gitId":"RoeReRe"},"content":"import static seedu.address.storage.JsonAdaptedPrescription.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2023-10-15"},{"lineNumber":5,"author":{"gitId":"RoeReRe"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-15"},{"lineNumber":6,"author":{"gitId":"RoeReRe"},"content":"import static seedu.address.testutil.TypicalPrescriptions.ASPIRIN;","lastModifiedDate":"2023-10-15"},{"lineNumber":7,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":8,"author":{"gitId":"RoeReRe"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-15"},{"lineNumber":9,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":10,"author":{"gitId":"RoeReRe"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-10-15"},{"lineNumber":11,"author":{"gitId":"RoeReRe"},"content":"import seedu.address.model.prescription.Date;","lastModifiedDate":"2023-10-15"},{"lineNumber":12,"author":{"gitId":"RoeReRe"},"content":"import seedu.address.model.prescription.Dosage;","lastModifiedDate":"2023-10-15"},{"lineNumber":13,"author":{"gitId":"RoeReRe"},"content":"import seedu.address.model.prescription.Frequency;","lastModifiedDate":"2023-10-15"},{"lineNumber":14,"author":{"gitId":"RoeReRe"},"content":"import seedu.address.model.prescription.Name;","lastModifiedDate":"2023-10-15"},{"lineNumber":15,"author":{"gitId":"RoeReRe"},"content":"import seedu.address.model.prescription.Note;","lastModifiedDate":"2023-10-15"},{"lineNumber":16,"author":{"gitId":"RoeReRe"},"content":"import seedu.address.model.prescription.Stock;","lastModifiedDate":"2023-10-15"},{"lineNumber":17,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":18,"author":{"gitId":"RoeReRe"},"content":"public class JsonAdaptedPrescriptionTest {","lastModifiedDate":"2023-10-15"},{"lineNumber":19,"author":{"gitId":"RoeReRe"},"content":"    private static final String INVALID_NAME \u003d \"@spr!n\";","lastModifiedDate":"2023-10-15"},{"lineNumber":20,"author":{"gitId":"RoeReRe"},"content":"    private static final String INVALID_DOSAGE \u003d \"ABCD\";","lastModifiedDate":"2023-10-15"},{"lineNumber":21,"author":{"gitId":"RoeReRe"},"content":"    private static final String INVALID_FREQUENCY \u003d \" \";","lastModifiedDate":"2023-10-15"},{"lineNumber":22,"author":{"gitId":"RoeReRe"},"content":"    private static final String INVALID_START_DATE \u003d \"1/1/2023\";","lastModifiedDate":"2023-10-15"},{"lineNumber":23,"author":{"gitId":"RoeReRe"},"content":"    private static final String INVALID_END_DATE \u003d \"01/2/2024\";","lastModifiedDate":"2023-10-15"},{"lineNumber":24,"author":{"gitId":"RoeReRe"},"content":"    private static final String INVALID_EXPIRY_DATE \u003d \"2024/01/23\";","lastModifiedDate":"2023-10-15"},{"lineNumber":25,"author":{"gitId":"RoeReRe"},"content":"    private static final String INVALID_STOCK \u003d \"EFGH\";","lastModifiedDate":"2023-10-15"},{"lineNumber":26,"author":{"gitId":"jingyu987"},"content":"    private static final String INVALID_CONSUMPTION \u003d \"IJKL\";","lastModifiedDate":"2023-10-16"},{"lineNumber":27,"author":{"gitId":"RoeReRe"},"content":"    private static final String INVALID_NOTE \u003d \" \";","lastModifiedDate":"2023-10-15"},{"lineNumber":28,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":29,"author":{"gitId":"RoeReRe"},"content":"    private static final String VALID_NAME \u003d ASPIRIN.getName().toString();","lastModifiedDate":"2023-10-15"},{"lineNumber":30,"author":{"gitId":"RoeReRe"},"content":"    private static final String VALID_DOSAGE \u003d ASPIRIN.getDosage().toString();","lastModifiedDate":"2023-10-15"},{"lineNumber":31,"author":{"gitId":"RoeReRe"},"content":"    private static final String VALID_FREQUENCY \u003d ASPIRIN.getFrequency().toString();","lastModifiedDate":"2023-10-15"},{"lineNumber":32,"author":{"gitId":"RoeReRe"},"content":"    private static final String VALID_START_DATE \u003d ASPIRIN.getStartDate().toString();","lastModifiedDate":"2023-10-15"},{"lineNumber":33,"author":{"gitId":"RoeReRe"},"content":"    private static final String VALID_END_DATE \u003d ASPIRIN.getEndDate().toString();","lastModifiedDate":"2023-10-15"},{"lineNumber":34,"author":{"gitId":"RoeReRe"},"content":"    private static final String VALID_EXPIRY_DATE \u003d ASPIRIN.getExpiryDate().toString();","lastModifiedDate":"2023-10-15"},{"lineNumber":35,"author":{"gitId":"RoeReRe"},"content":"    private static final String VALID_STOCK \u003d ASPIRIN.getTotalStock().toString();","lastModifiedDate":"2023-10-15"},{"lineNumber":36,"author":{"gitId":"jingyu987"},"content":"    private static final String VALID_CONSUMPTION \u003d ASPIRIN.getConsumptionCount().toString();","lastModifiedDate":"2023-10-16"},{"lineNumber":37,"author":{"gitId":"RoeReRe"},"content":"    private static final String VALID_NOTE \u003d ASPIRIN.getNote().toString();","lastModifiedDate":"2023-10-15"},{"lineNumber":38,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":39,"author":{"gitId":"RoeReRe"},"content":"    // private static final List\u003cJsonAdaptedTag\u003e VALID_TAGS \u003d ASPIRIN.getTags().stream()","lastModifiedDate":"2023-10-15"},{"lineNumber":40,"author":{"gitId":"RoeReRe"},"content":"    //     .map(JsonAdaptedTag::new)","lastModifiedDate":"2023-10-15"},{"lineNumber":41,"author":{"gitId":"RoeReRe"},"content":"    //     .collect(Collectors.toList());","lastModifiedDate":"2023-10-15"},{"lineNumber":42,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":43,"author":{"gitId":"RoeReRe"},"content":"    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":44,"author":{"gitId":"RoeReRe"},"content":"    public void toModelType_validPrescriptionDetails_returnsPrescription() throws Exception {","lastModifiedDate":"2023-10-15"},{"lineNumber":45,"author":{"gitId":"RoeReRe"},"content":"        JsonAdaptedPrescription prescription \u003d new JsonAdaptedPrescription(ASPIRIN);","lastModifiedDate":"2023-10-15"},{"lineNumber":46,"author":{"gitId":"RoeReRe"},"content":"        assertEquals(ASPIRIN, prescription.toModelType());","lastModifiedDate":"2023-10-15"},{"lineNumber":47,"author":{"gitId":"RoeReRe"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":48,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":49,"author":{"gitId":"RoeReRe"},"content":"    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":50,"author":{"gitId":"RoeReRe"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2023-10-15"},{"lineNumber":51,"author":{"gitId":"RoeReRe"},"content":"        JsonAdaptedPrescription prescription \u003d new JsonAdaptedPrescription(","lastModifiedDate":"2023-10-15"},{"lineNumber":52,"author":{"gitId":"RoeReRe"},"content":"            INVALID_NAME,","lastModifiedDate":"2023-10-15"},{"lineNumber":53,"author":{"gitId":"RoeReRe"},"content":"            VALID_DOSAGE,","lastModifiedDate":"2023-10-15"},{"lineNumber":54,"author":{"gitId":"RoeReRe"},"content":"            VALID_FREQUENCY,","lastModifiedDate":"2023-10-15"},{"lineNumber":55,"author":{"gitId":"RoeReRe"},"content":"            VALID_START_DATE,","lastModifiedDate":"2023-10-15"},{"lineNumber":56,"author":{"gitId":"RoeReRe"},"content":"            VALID_END_DATE,","lastModifiedDate":"2023-10-15"},{"lineNumber":57,"author":{"gitId":"RoeReRe"},"content":"            VALID_EXPIRY_DATE,","lastModifiedDate":"2023-10-15"},{"lineNumber":58,"author":{"gitId":"RoeReRe"},"content":"            VALID_STOCK,","lastModifiedDate":"2023-10-15"},{"lineNumber":59,"author":{"gitId":"jingyu987"},"content":"            VALID_CONSUMPTION,","lastModifiedDate":"2023-10-16"},{"lineNumber":60,"author":{"gitId":"jingyu987"},"content":"            false,","lastModifiedDate":"2023-10-16"},{"lineNumber":61,"author":{"gitId":"RoeReRe"},"content":"            VALID_NOTE","lastModifiedDate":"2023-10-15"},{"lineNumber":62,"author":{"gitId":"RoeReRe"},"content":"        );","lastModifiedDate":"2023-10-15"},{"lineNumber":63,"author":{"gitId":"RoeReRe"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-10-15"},{"lineNumber":64,"author":{"gitId":"RoeReRe"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, prescription::toModelType);","lastModifiedDate":"2023-10-15"},{"lineNumber":65,"author":{"gitId":"RoeReRe"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":66,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":67,"author":{"gitId":"RoeReRe"},"content":"    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":68,"author":{"gitId":"RoeReRe"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2023-10-15"},{"lineNumber":69,"author":{"gitId":"RoeReRe"},"content":"        JsonAdaptedPrescription prescription \u003d new JsonAdaptedPrescription(","lastModifiedDate":"2023-10-15"},{"lineNumber":70,"author":{"gitId":"RoeReRe"},"content":"            null,","lastModifiedDate":"2023-10-15"},{"lineNumber":71,"author":{"gitId":"RoeReRe"},"content":"            VALID_DOSAGE,","lastModifiedDate":"2023-10-15"},{"lineNumber":72,"author":{"gitId":"RoeReRe"},"content":"            VALID_FREQUENCY,","lastModifiedDate":"2023-10-15"},{"lineNumber":73,"author":{"gitId":"RoeReRe"},"content":"            VALID_START_DATE,","lastModifiedDate":"2023-10-15"},{"lineNumber":74,"author":{"gitId":"RoeReRe"},"content":"            VALID_END_DATE,","lastModifiedDate":"2023-10-15"},{"lineNumber":75,"author":{"gitId":"RoeReRe"},"content":"            VALID_EXPIRY_DATE,","lastModifiedDate":"2023-10-15"},{"lineNumber":76,"author":{"gitId":"RoeReRe"},"content":"            VALID_STOCK,","lastModifiedDate":"2023-10-15"},{"lineNumber":77,"author":{"gitId":"jingyu987"},"content":"            VALID_CONSUMPTION,","lastModifiedDate":"2023-10-16"},{"lineNumber":78,"author":{"gitId":"jingyu987"},"content":"            false,","lastModifiedDate":"2023-10-16"},{"lineNumber":79,"author":{"gitId":"RoeReRe"},"content":"            VALID_NOTE","lastModifiedDate":"2023-10-15"},{"lineNumber":80,"author":{"gitId":"RoeReRe"},"content":"        );","lastModifiedDate":"2023-10-15"},{"lineNumber":81,"author":{"gitId":"RoeReRe"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2023-10-15"},{"lineNumber":82,"author":{"gitId":"RoeReRe"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, prescription::toModelType);","lastModifiedDate":"2023-10-15"},{"lineNumber":83,"author":{"gitId":"RoeReRe"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":84,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":85,"author":{"gitId":"RoeReRe"},"content":"    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":86,"author":{"gitId":"RoeReRe"},"content":"    public void toModelType_invalidDosage_throwsIllegalValueException() {","lastModifiedDate":"2023-10-15"},{"lineNumber":87,"author":{"gitId":"RoeReRe"},"content":"        JsonAdaptedPrescription prescription \u003d new JsonAdaptedPrescription(","lastModifiedDate":"2023-10-15"},{"lineNumber":88,"author":{"gitId":"RoeReRe"},"content":"            VALID_NAME,","lastModifiedDate":"2023-10-15"},{"lineNumber":89,"author":{"gitId":"RoeReRe"},"content":"            INVALID_DOSAGE,","lastModifiedDate":"2023-10-15"},{"lineNumber":90,"author":{"gitId":"RoeReRe"},"content":"            VALID_FREQUENCY,","lastModifiedDate":"2023-10-15"},{"lineNumber":91,"author":{"gitId":"RoeReRe"},"content":"            VALID_START_DATE,","lastModifiedDate":"2023-10-15"},{"lineNumber":92,"author":{"gitId":"RoeReRe"},"content":"            VALID_END_DATE,","lastModifiedDate":"2023-10-15"},{"lineNumber":93,"author":{"gitId":"RoeReRe"},"content":"            VALID_EXPIRY_DATE,","lastModifiedDate":"2023-10-15"},{"lineNumber":94,"author":{"gitId":"RoeReRe"},"content":"            VALID_STOCK,","lastModifiedDate":"2023-10-15"},{"lineNumber":95,"author":{"gitId":"jingyu987"},"content":"            VALID_CONSUMPTION,","lastModifiedDate":"2023-10-16"},{"lineNumber":96,"author":{"gitId":"jingyu987"},"content":"            false,","lastModifiedDate":"2023-10-16"},{"lineNumber":97,"author":{"gitId":"RoeReRe"},"content":"            VALID_NOTE","lastModifiedDate":"2023-10-15"},{"lineNumber":98,"author":{"gitId":"RoeReRe"},"content":"        );","lastModifiedDate":"2023-10-15"},{"lineNumber":99,"author":{"gitId":"RoeReRe"},"content":"        String expectedMessage \u003d Dosage.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-10-15"},{"lineNumber":100,"author":{"gitId":"RoeReRe"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, prescription::toModelType);","lastModifiedDate":"2023-10-15"},{"lineNumber":101,"author":{"gitId":"RoeReRe"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":102,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":103,"author":{"gitId":"RoeReRe"},"content":"    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":104,"author":{"gitId":"RoeReRe"},"content":"    public void toModelType_nullDosage_throwsIllegalValueException() {","lastModifiedDate":"2023-10-15"},{"lineNumber":105,"author":{"gitId":"RoeReRe"},"content":"        JsonAdaptedPrescription prescription \u003d new JsonAdaptedPrescription(","lastModifiedDate":"2023-10-15"},{"lineNumber":106,"author":{"gitId":"RoeReRe"},"content":"            VALID_NAME,","lastModifiedDate":"2023-10-15"},{"lineNumber":107,"author":{"gitId":"RoeReRe"},"content":"            null,","lastModifiedDate":"2023-10-15"},{"lineNumber":108,"author":{"gitId":"RoeReRe"},"content":"            VALID_FREQUENCY,","lastModifiedDate":"2023-10-15"},{"lineNumber":109,"author":{"gitId":"RoeReRe"},"content":"            VALID_START_DATE,","lastModifiedDate":"2023-10-15"},{"lineNumber":110,"author":{"gitId":"RoeReRe"},"content":"            VALID_END_DATE,","lastModifiedDate":"2023-10-15"},{"lineNumber":111,"author":{"gitId":"RoeReRe"},"content":"            VALID_EXPIRY_DATE,","lastModifiedDate":"2023-10-15"},{"lineNumber":112,"author":{"gitId":"RoeReRe"},"content":"            VALID_STOCK,","lastModifiedDate":"2023-10-15"},{"lineNumber":113,"author":{"gitId":"jingyu987"},"content":"            VALID_CONSUMPTION,","lastModifiedDate":"2023-10-16"},{"lineNumber":114,"author":{"gitId":"jingyu987"},"content":"            false,","lastModifiedDate":"2023-10-16"},{"lineNumber":115,"author":{"gitId":"RoeReRe"},"content":"            VALID_NOTE","lastModifiedDate":"2023-10-15"},{"lineNumber":116,"author":{"gitId":"RoeReRe"},"content":"        );","lastModifiedDate":"2023-10-15"},{"lineNumber":117,"author":{"gitId":"RoeReRe"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Dosage.class.getSimpleName());","lastModifiedDate":"2023-10-15"},{"lineNumber":118,"author":{"gitId":"RoeReRe"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, prescription::toModelType);","lastModifiedDate":"2023-10-15"},{"lineNumber":119,"author":{"gitId":"RoeReRe"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":120,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":121,"author":{"gitId":"RoeReRe"},"content":"    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":122,"author":{"gitId":"RoeReRe"},"content":"    public void toModelType_invalidFrequency_throwsIllegalValueException() {","lastModifiedDate":"2023-10-15"},{"lineNumber":123,"author":{"gitId":"RoeReRe"},"content":"        JsonAdaptedPrescription prescription \u003d new JsonAdaptedPrescription(","lastModifiedDate":"2023-10-15"},{"lineNumber":124,"author":{"gitId":"RoeReRe"},"content":"            VALID_NAME,","lastModifiedDate":"2023-10-15"},{"lineNumber":125,"author":{"gitId":"RoeReRe"},"content":"            VALID_DOSAGE,","lastModifiedDate":"2023-10-15"},{"lineNumber":126,"author":{"gitId":"RoeReRe"},"content":"            INVALID_FREQUENCY,","lastModifiedDate":"2023-10-15"},{"lineNumber":127,"author":{"gitId":"RoeReRe"},"content":"            VALID_START_DATE,","lastModifiedDate":"2023-10-15"},{"lineNumber":128,"author":{"gitId":"RoeReRe"},"content":"            VALID_END_DATE,","lastModifiedDate":"2023-10-15"},{"lineNumber":129,"author":{"gitId":"RoeReRe"},"content":"            VALID_EXPIRY_DATE,","lastModifiedDate":"2023-10-15"},{"lineNumber":130,"author":{"gitId":"RoeReRe"},"content":"            VALID_STOCK,","lastModifiedDate":"2023-10-15"},{"lineNumber":131,"author":{"gitId":"jingyu987"},"content":"            VALID_CONSUMPTION,","lastModifiedDate":"2023-10-16"},{"lineNumber":132,"author":{"gitId":"jingyu987"},"content":"            false,","lastModifiedDate":"2023-10-16"},{"lineNumber":133,"author":{"gitId":"RoeReRe"},"content":"            VALID_NOTE","lastModifiedDate":"2023-10-15"},{"lineNumber":134,"author":{"gitId":"RoeReRe"},"content":"        );","lastModifiedDate":"2023-10-15"},{"lineNumber":135,"author":{"gitId":"RoeReRe"},"content":"        String expectedMessage \u003d Frequency.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-10-15"},{"lineNumber":136,"author":{"gitId":"RoeReRe"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, prescription::toModelType);","lastModifiedDate":"2023-10-15"},{"lineNumber":137,"author":{"gitId":"RoeReRe"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":138,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":139,"author":{"gitId":"RoeReRe"},"content":"    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":140,"author":{"gitId":"RoeReRe"},"content":"    public void toModelType_nullFrequency_throwsIllegalValueException() {","lastModifiedDate":"2023-10-15"},{"lineNumber":141,"author":{"gitId":"RoeReRe"},"content":"        JsonAdaptedPrescription prescription \u003d new JsonAdaptedPrescription(","lastModifiedDate":"2023-10-15"},{"lineNumber":142,"author":{"gitId":"RoeReRe"},"content":"            VALID_NAME,","lastModifiedDate":"2023-10-15"},{"lineNumber":143,"author":{"gitId":"RoeReRe"},"content":"            VALID_DOSAGE,","lastModifiedDate":"2023-10-15"},{"lineNumber":144,"author":{"gitId":"RoeReRe"},"content":"            null,","lastModifiedDate":"2023-10-15"},{"lineNumber":145,"author":{"gitId":"RoeReRe"},"content":"            VALID_START_DATE,","lastModifiedDate":"2023-10-15"},{"lineNumber":146,"author":{"gitId":"RoeReRe"},"content":"            VALID_END_DATE,","lastModifiedDate":"2023-10-15"},{"lineNumber":147,"author":{"gitId":"RoeReRe"},"content":"            VALID_EXPIRY_DATE,","lastModifiedDate":"2023-10-15"},{"lineNumber":148,"author":{"gitId":"RoeReRe"},"content":"            VALID_STOCK,","lastModifiedDate":"2023-10-15"},{"lineNumber":149,"author":{"gitId":"jingyu987"},"content":"            VALID_CONSUMPTION,","lastModifiedDate":"2023-10-16"},{"lineNumber":150,"author":{"gitId":"jingyu987"},"content":"            false,","lastModifiedDate":"2023-10-16"},{"lineNumber":151,"author":{"gitId":"RoeReRe"},"content":"            VALID_NOTE","lastModifiedDate":"2023-10-15"},{"lineNumber":152,"author":{"gitId":"RoeReRe"},"content":"        );","lastModifiedDate":"2023-10-15"},{"lineNumber":153,"author":{"gitId":"RoeReRe"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Frequency.class.getSimpleName());","lastModifiedDate":"2023-10-15"},{"lineNumber":154,"author":{"gitId":"RoeReRe"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, prescription::toModelType);","lastModifiedDate":"2023-10-15"},{"lineNumber":155,"author":{"gitId":"RoeReRe"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":156,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":157,"author":{"gitId":"RoeReRe"},"content":"    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":158,"author":{"gitId":"RoeReRe"},"content":"    public void toModelType_invalidStartDate_throwsIllegalValueException() {","lastModifiedDate":"2023-10-15"},{"lineNumber":159,"author":{"gitId":"RoeReRe"},"content":"        JsonAdaptedPrescription prescription \u003d new JsonAdaptedPrescription(","lastModifiedDate":"2023-10-15"},{"lineNumber":160,"author":{"gitId":"RoeReRe"},"content":"            VALID_NAME,","lastModifiedDate":"2023-10-15"},{"lineNumber":161,"author":{"gitId":"RoeReRe"},"content":"            VALID_DOSAGE,","lastModifiedDate":"2023-10-15"},{"lineNumber":162,"author":{"gitId":"RoeReRe"},"content":"            VALID_FREQUENCY,","lastModifiedDate":"2023-10-15"},{"lineNumber":163,"author":{"gitId":"RoeReRe"},"content":"            INVALID_START_DATE,","lastModifiedDate":"2023-10-15"},{"lineNumber":164,"author":{"gitId":"RoeReRe"},"content":"            VALID_END_DATE,","lastModifiedDate":"2023-10-15"},{"lineNumber":165,"author":{"gitId":"RoeReRe"},"content":"            VALID_EXPIRY_DATE,","lastModifiedDate":"2023-10-15"},{"lineNumber":166,"author":{"gitId":"RoeReRe"},"content":"            VALID_STOCK,","lastModifiedDate":"2023-10-15"},{"lineNumber":167,"author":{"gitId":"jingyu987"},"content":"            VALID_CONSUMPTION,","lastModifiedDate":"2023-10-16"},{"lineNumber":168,"author":{"gitId":"jingyu987"},"content":"            false,","lastModifiedDate":"2023-10-16"},{"lineNumber":169,"author":{"gitId":"RoeReRe"},"content":"            VALID_NOTE","lastModifiedDate":"2023-10-15"},{"lineNumber":170,"author":{"gitId":"RoeReRe"},"content":"        );","lastModifiedDate":"2023-10-15"},{"lineNumber":171,"author":{"gitId":"RoeReRe"},"content":"        String expectedMessage \u003d Date.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-10-15"},{"lineNumber":172,"author":{"gitId":"RoeReRe"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, prescription::toModelType);","lastModifiedDate":"2023-10-15"},{"lineNumber":173,"author":{"gitId":"RoeReRe"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":174,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":175,"author":{"gitId":"RoeReRe"},"content":"    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":176,"author":{"gitId":"RoeReRe"},"content":"    public void toModelType_nullStartDate_throwsIllegalValueException() {","lastModifiedDate":"2023-10-15"},{"lineNumber":177,"author":{"gitId":"RoeReRe"},"content":"        JsonAdaptedPrescription prescription \u003d new JsonAdaptedPrescription(","lastModifiedDate":"2023-10-15"},{"lineNumber":178,"author":{"gitId":"RoeReRe"},"content":"            VALID_NAME,","lastModifiedDate":"2023-10-15"},{"lineNumber":179,"author":{"gitId":"RoeReRe"},"content":"            VALID_DOSAGE,","lastModifiedDate":"2023-10-15"},{"lineNumber":180,"author":{"gitId":"RoeReRe"},"content":"            VALID_FREQUENCY,","lastModifiedDate":"2023-10-15"},{"lineNumber":181,"author":{"gitId":"RoeReRe"},"content":"            null,","lastModifiedDate":"2023-10-15"},{"lineNumber":182,"author":{"gitId":"RoeReRe"},"content":"            VALID_END_DATE,","lastModifiedDate":"2023-10-15"},{"lineNumber":183,"author":{"gitId":"RoeReRe"},"content":"            VALID_EXPIRY_DATE,","lastModifiedDate":"2023-10-15"},{"lineNumber":184,"author":{"gitId":"RoeReRe"},"content":"            VALID_STOCK,","lastModifiedDate":"2023-10-15"},{"lineNumber":185,"author":{"gitId":"jingyu987"},"content":"            VALID_CONSUMPTION,","lastModifiedDate":"2023-10-16"},{"lineNumber":186,"author":{"gitId":"jingyu987"},"content":"            false,","lastModifiedDate":"2023-10-16"},{"lineNumber":187,"author":{"gitId":"RoeReRe"},"content":"            VALID_NOTE","lastModifiedDate":"2023-10-15"},{"lineNumber":188,"author":{"gitId":"RoeReRe"},"content":"        );","lastModifiedDate":"2023-10-15"},{"lineNumber":189,"author":{"gitId":"RoeReRe"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Date.class.getSimpleName());","lastModifiedDate":"2023-10-15"},{"lineNumber":190,"author":{"gitId":"RoeReRe"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, prescription::toModelType);","lastModifiedDate":"2023-10-15"},{"lineNumber":191,"author":{"gitId":"RoeReRe"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":192,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":193,"author":{"gitId":"RoeReRe"},"content":"    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":194,"author":{"gitId":"RoeReRe"},"content":"    public void toModelType_invalidEndDate_throwsIllegalValueException() {","lastModifiedDate":"2023-10-15"},{"lineNumber":195,"author":{"gitId":"RoeReRe"},"content":"        JsonAdaptedPrescription prescription \u003d new JsonAdaptedPrescription(","lastModifiedDate":"2023-10-15"},{"lineNumber":196,"author":{"gitId":"RoeReRe"},"content":"            VALID_NAME,","lastModifiedDate":"2023-10-15"},{"lineNumber":197,"author":{"gitId":"RoeReRe"},"content":"            VALID_DOSAGE,","lastModifiedDate":"2023-10-15"},{"lineNumber":198,"author":{"gitId":"RoeReRe"},"content":"            VALID_FREQUENCY,","lastModifiedDate":"2023-10-15"},{"lineNumber":199,"author":{"gitId":"RoeReRe"},"content":"            VALID_START_DATE,","lastModifiedDate":"2023-10-15"},{"lineNumber":200,"author":{"gitId":"RoeReRe"},"content":"            INVALID_END_DATE,","lastModifiedDate":"2023-10-15"},{"lineNumber":201,"author":{"gitId":"RoeReRe"},"content":"            VALID_EXPIRY_DATE,","lastModifiedDate":"2023-10-15"},{"lineNumber":202,"author":{"gitId":"RoeReRe"},"content":"            VALID_STOCK,","lastModifiedDate":"2023-10-15"},{"lineNumber":203,"author":{"gitId":"jingyu987"},"content":"            VALID_CONSUMPTION,","lastModifiedDate":"2023-10-16"},{"lineNumber":204,"author":{"gitId":"jingyu987"},"content":"            false,","lastModifiedDate":"2023-10-16"},{"lineNumber":205,"author":{"gitId":"RoeReRe"},"content":"            VALID_NOTE","lastModifiedDate":"2023-10-15"},{"lineNumber":206,"author":{"gitId":"RoeReRe"},"content":"        );","lastModifiedDate":"2023-10-15"},{"lineNumber":207,"author":{"gitId":"RoeReRe"},"content":"        String expectedMessage \u003d Date.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-10-15"},{"lineNumber":208,"author":{"gitId":"RoeReRe"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, prescription::toModelType);","lastModifiedDate":"2023-10-15"},{"lineNumber":209,"author":{"gitId":"RoeReRe"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":210,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":211,"author":{"gitId":"RoeReRe"},"content":"    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":212,"author":{"gitId":"RoeReRe"},"content":"    public void toModelType_nullEndDate_throwsIllegalValueException() {","lastModifiedDate":"2023-10-15"},{"lineNumber":213,"author":{"gitId":"RoeReRe"},"content":"        JsonAdaptedPrescription prescription \u003d new JsonAdaptedPrescription(","lastModifiedDate":"2023-10-15"},{"lineNumber":214,"author":{"gitId":"RoeReRe"},"content":"            VALID_NAME,","lastModifiedDate":"2023-10-15"},{"lineNumber":215,"author":{"gitId":"RoeReRe"},"content":"            VALID_DOSAGE,","lastModifiedDate":"2023-10-15"},{"lineNumber":216,"author":{"gitId":"RoeReRe"},"content":"            VALID_FREQUENCY,","lastModifiedDate":"2023-10-15"},{"lineNumber":217,"author":{"gitId":"RoeReRe"},"content":"            VALID_START_DATE,","lastModifiedDate":"2023-10-15"},{"lineNumber":218,"author":{"gitId":"RoeReRe"},"content":"            null,","lastModifiedDate":"2023-10-15"},{"lineNumber":219,"author":{"gitId":"RoeReRe"},"content":"            VALID_EXPIRY_DATE,","lastModifiedDate":"2023-10-15"},{"lineNumber":220,"author":{"gitId":"RoeReRe"},"content":"            VALID_STOCK,","lastModifiedDate":"2023-10-15"},{"lineNumber":221,"author":{"gitId":"jingyu987"},"content":"            VALID_CONSUMPTION,","lastModifiedDate":"2023-10-16"},{"lineNumber":222,"author":{"gitId":"jingyu987"},"content":"            false,","lastModifiedDate":"2023-10-16"},{"lineNumber":223,"author":{"gitId":"RoeReRe"},"content":"            VALID_NOTE","lastModifiedDate":"2023-10-15"},{"lineNumber":224,"author":{"gitId":"RoeReRe"},"content":"        );","lastModifiedDate":"2023-10-15"},{"lineNumber":225,"author":{"gitId":"RoeReRe"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Date.class.getSimpleName());","lastModifiedDate":"2023-10-15"},{"lineNumber":226,"author":{"gitId":"RoeReRe"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, prescription::toModelType);","lastModifiedDate":"2023-10-15"},{"lineNumber":227,"author":{"gitId":"RoeReRe"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":228,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":229,"author":{"gitId":"RoeReRe"},"content":"    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":230,"author":{"gitId":"RoeReRe"},"content":"    public void toModelType_invalidExpiryDate_throwsIllegalValueException() {","lastModifiedDate":"2023-10-15"},{"lineNumber":231,"author":{"gitId":"RoeReRe"},"content":"        JsonAdaptedPrescription prescription \u003d new JsonAdaptedPrescription(","lastModifiedDate":"2023-10-15"},{"lineNumber":232,"author":{"gitId":"RoeReRe"},"content":"            VALID_NAME,","lastModifiedDate":"2023-10-15"},{"lineNumber":233,"author":{"gitId":"RoeReRe"},"content":"            VALID_DOSAGE,","lastModifiedDate":"2023-10-15"},{"lineNumber":234,"author":{"gitId":"RoeReRe"},"content":"            VALID_FREQUENCY,","lastModifiedDate":"2023-10-15"},{"lineNumber":235,"author":{"gitId":"RoeReRe"},"content":"            VALID_START_DATE,","lastModifiedDate":"2023-10-15"},{"lineNumber":236,"author":{"gitId":"RoeReRe"},"content":"            VALID_END_DATE,","lastModifiedDate":"2023-10-15"},{"lineNumber":237,"author":{"gitId":"RoeReRe"},"content":"            INVALID_EXPIRY_DATE,","lastModifiedDate":"2023-10-15"},{"lineNumber":238,"author":{"gitId":"RoeReRe"},"content":"            VALID_STOCK,","lastModifiedDate":"2023-10-15"},{"lineNumber":239,"author":{"gitId":"jingyu987"},"content":"            VALID_CONSUMPTION,","lastModifiedDate":"2023-10-16"},{"lineNumber":240,"author":{"gitId":"jingyu987"},"content":"            false,","lastModifiedDate":"2023-10-16"},{"lineNumber":241,"author":{"gitId":"RoeReRe"},"content":"            VALID_NOTE","lastModifiedDate":"2023-10-15"},{"lineNumber":242,"author":{"gitId":"RoeReRe"},"content":"        );","lastModifiedDate":"2023-10-15"},{"lineNumber":243,"author":{"gitId":"RoeReRe"},"content":"        String expectedMessage \u003d Date.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-10-15"},{"lineNumber":244,"author":{"gitId":"RoeReRe"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, prescription::toModelType);","lastModifiedDate":"2023-10-15"},{"lineNumber":245,"author":{"gitId":"RoeReRe"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":246,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":247,"author":{"gitId":"RoeReRe"},"content":"    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":248,"author":{"gitId":"RoeReRe"},"content":"    public void toModelType_nullExpiryDate_throwsIllegalValueException() {","lastModifiedDate":"2023-10-15"},{"lineNumber":249,"author":{"gitId":"RoeReRe"},"content":"        JsonAdaptedPrescription prescription \u003d new JsonAdaptedPrescription(","lastModifiedDate":"2023-10-15"},{"lineNumber":250,"author":{"gitId":"RoeReRe"},"content":"            VALID_NAME,","lastModifiedDate":"2023-10-15"},{"lineNumber":251,"author":{"gitId":"RoeReRe"},"content":"            VALID_DOSAGE,","lastModifiedDate":"2023-10-15"},{"lineNumber":252,"author":{"gitId":"RoeReRe"},"content":"            VALID_FREQUENCY,","lastModifiedDate":"2023-10-15"},{"lineNumber":253,"author":{"gitId":"RoeReRe"},"content":"            VALID_START_DATE,","lastModifiedDate":"2023-10-15"},{"lineNumber":254,"author":{"gitId":"RoeReRe"},"content":"            VALID_END_DATE,","lastModifiedDate":"2023-10-15"},{"lineNumber":255,"author":{"gitId":"RoeReRe"},"content":"            null,","lastModifiedDate":"2023-10-15"},{"lineNumber":256,"author":{"gitId":"RoeReRe"},"content":"            VALID_STOCK,","lastModifiedDate":"2023-10-15"},{"lineNumber":257,"author":{"gitId":"jingyu987"},"content":"            VALID_CONSUMPTION,","lastModifiedDate":"2023-10-16"},{"lineNumber":258,"author":{"gitId":"jingyu987"},"content":"            false,","lastModifiedDate":"2023-10-16"},{"lineNumber":259,"author":{"gitId":"RoeReRe"},"content":"            VALID_NOTE","lastModifiedDate":"2023-10-15"},{"lineNumber":260,"author":{"gitId":"RoeReRe"},"content":"        );","lastModifiedDate":"2023-10-15"},{"lineNumber":261,"author":{"gitId":"RoeReRe"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Date.class.getSimpleName());","lastModifiedDate":"2023-10-15"},{"lineNumber":262,"author":{"gitId":"RoeReRe"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, prescription::toModelType);","lastModifiedDate":"2023-10-15"},{"lineNumber":263,"author":{"gitId":"RoeReRe"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":264,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":265,"author":{"gitId":"RoeReRe"},"content":"    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":266,"author":{"gitId":"RoeReRe"},"content":"    public void toModelType_invalidStock_throwsIllegalValueException() {","lastModifiedDate":"2023-10-15"},{"lineNumber":267,"author":{"gitId":"RoeReRe"},"content":"        JsonAdaptedPrescription prescription \u003d new JsonAdaptedPrescription(","lastModifiedDate":"2023-10-15"},{"lineNumber":268,"author":{"gitId":"RoeReRe"},"content":"            VALID_NAME,","lastModifiedDate":"2023-10-15"},{"lineNumber":269,"author":{"gitId":"RoeReRe"},"content":"            VALID_DOSAGE,","lastModifiedDate":"2023-10-15"},{"lineNumber":270,"author":{"gitId":"RoeReRe"},"content":"            VALID_FREQUENCY,","lastModifiedDate":"2023-10-15"},{"lineNumber":271,"author":{"gitId":"RoeReRe"},"content":"            VALID_START_DATE,","lastModifiedDate":"2023-10-15"},{"lineNumber":272,"author":{"gitId":"RoeReRe"},"content":"            VALID_END_DATE,","lastModifiedDate":"2023-10-15"},{"lineNumber":273,"author":{"gitId":"RoeReRe"},"content":"            VALID_EXPIRY_DATE,","lastModifiedDate":"2023-10-15"},{"lineNumber":274,"author":{"gitId":"RoeReRe"},"content":"            INVALID_STOCK,","lastModifiedDate":"2023-10-15"},{"lineNumber":275,"author":{"gitId":"jingyu987"},"content":"            VALID_CONSUMPTION,","lastModifiedDate":"2023-10-16"},{"lineNumber":276,"author":{"gitId":"jingyu987"},"content":"            false,","lastModifiedDate":"2023-10-16"},{"lineNumber":277,"author":{"gitId":"RoeReRe"},"content":"            VALID_NOTE","lastModifiedDate":"2023-10-15"},{"lineNumber":278,"author":{"gitId":"RoeReRe"},"content":"        );","lastModifiedDate":"2023-10-15"},{"lineNumber":279,"author":{"gitId":"RoeReRe"},"content":"        String expectedMessage \u003d Stock.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-10-15"},{"lineNumber":280,"author":{"gitId":"RoeReRe"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, prescription::toModelType);","lastModifiedDate":"2023-10-15"},{"lineNumber":281,"author":{"gitId":"RoeReRe"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":282,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":283,"author":{"gitId":"RoeReRe"},"content":"    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":284,"author":{"gitId":"RoeReRe"},"content":"    public void toModelType_nullStock_throwsIllegalValueException() {","lastModifiedDate":"2023-10-15"},{"lineNumber":285,"author":{"gitId":"RoeReRe"},"content":"        JsonAdaptedPrescription prescription \u003d new JsonAdaptedPrescription(","lastModifiedDate":"2023-10-15"},{"lineNumber":286,"author":{"gitId":"RoeReRe"},"content":"            VALID_NAME,","lastModifiedDate":"2023-10-15"},{"lineNumber":287,"author":{"gitId":"RoeReRe"},"content":"            VALID_DOSAGE,","lastModifiedDate":"2023-10-15"},{"lineNumber":288,"author":{"gitId":"RoeReRe"},"content":"            VALID_FREQUENCY,","lastModifiedDate":"2023-10-15"},{"lineNumber":289,"author":{"gitId":"RoeReRe"},"content":"            VALID_START_DATE,","lastModifiedDate":"2023-10-15"},{"lineNumber":290,"author":{"gitId":"RoeReRe"},"content":"            VALID_END_DATE,","lastModifiedDate":"2023-10-15"},{"lineNumber":291,"author":{"gitId":"RoeReRe"},"content":"            VALID_EXPIRY_DATE,","lastModifiedDate":"2023-10-15"},{"lineNumber":292,"author":{"gitId":"RoeReRe"},"content":"            null,","lastModifiedDate":"2023-10-15"},{"lineNumber":293,"author":{"gitId":"jingyu987"},"content":"            VALID_CONSUMPTION,","lastModifiedDate":"2023-10-16"},{"lineNumber":294,"author":{"gitId":"jingyu987"},"content":"            false,","lastModifiedDate":"2023-10-16"},{"lineNumber":295,"author":{"gitId":"RoeReRe"},"content":"            VALID_NOTE","lastModifiedDate":"2023-10-15"},{"lineNumber":296,"author":{"gitId":"RoeReRe"},"content":"        );","lastModifiedDate":"2023-10-15"},{"lineNumber":297,"author":{"gitId":"RoeReRe"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Stock.class.getSimpleName());","lastModifiedDate":"2023-10-15"},{"lineNumber":298,"author":{"gitId":"RoeReRe"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, prescription::toModelType);","lastModifiedDate":"2023-10-15"},{"lineNumber":299,"author":{"gitId":"RoeReRe"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":300,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":301,"author":{"gitId":"RoeReRe"},"content":"    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":302,"author":{"gitId":"RoeReRe"},"content":"    public void toModelType_invalidNote_throwsIllegalValueException() {","lastModifiedDate":"2023-10-15"},{"lineNumber":303,"author":{"gitId":"RoeReRe"},"content":"        JsonAdaptedPrescription prescription \u003d new JsonAdaptedPrescription(","lastModifiedDate":"2023-10-15"},{"lineNumber":304,"author":{"gitId":"RoeReRe"},"content":"            VALID_NAME,","lastModifiedDate":"2023-10-15"},{"lineNumber":305,"author":{"gitId":"RoeReRe"},"content":"            VALID_DOSAGE,","lastModifiedDate":"2023-10-15"},{"lineNumber":306,"author":{"gitId":"RoeReRe"},"content":"            VALID_FREQUENCY,","lastModifiedDate":"2023-10-15"},{"lineNumber":307,"author":{"gitId":"RoeReRe"},"content":"            VALID_START_DATE,","lastModifiedDate":"2023-10-15"},{"lineNumber":308,"author":{"gitId":"RoeReRe"},"content":"            VALID_END_DATE,","lastModifiedDate":"2023-10-15"},{"lineNumber":309,"author":{"gitId":"RoeReRe"},"content":"            VALID_EXPIRY_DATE,","lastModifiedDate":"2023-10-15"},{"lineNumber":310,"author":{"gitId":"RoeReRe"},"content":"            VALID_STOCK,","lastModifiedDate":"2023-10-15"},{"lineNumber":311,"author":{"gitId":"jingyu987"},"content":"            VALID_CONSUMPTION,","lastModifiedDate":"2023-10-16"},{"lineNumber":312,"author":{"gitId":"jingyu987"},"content":"            false,","lastModifiedDate":"2023-10-16"},{"lineNumber":313,"author":{"gitId":"RoeReRe"},"content":"            INVALID_NOTE","lastModifiedDate":"2023-10-15"},{"lineNumber":314,"author":{"gitId":"RoeReRe"},"content":"        );","lastModifiedDate":"2023-10-15"},{"lineNumber":315,"author":{"gitId":"RoeReRe"},"content":"        String expectedMessage \u003d Note.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-10-15"},{"lineNumber":316,"author":{"gitId":"RoeReRe"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, prescription::toModelType);","lastModifiedDate":"2023-10-15"},{"lineNumber":317,"author":{"gitId":"RoeReRe"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":318,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":319,"author":{"gitId":"RoeReRe"},"content":"    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":320,"author":{"gitId":"RoeReRe"},"content":"    public void toModelType_nullNote_throwsIllegalValueException() {","lastModifiedDate":"2023-10-15"},{"lineNumber":321,"author":{"gitId":"RoeReRe"},"content":"        JsonAdaptedPrescription prescription \u003d new JsonAdaptedPrescription(","lastModifiedDate":"2023-10-15"},{"lineNumber":322,"author":{"gitId":"RoeReRe"},"content":"            VALID_NAME,","lastModifiedDate":"2023-10-15"},{"lineNumber":323,"author":{"gitId":"RoeReRe"},"content":"            VALID_DOSAGE,","lastModifiedDate":"2023-10-15"},{"lineNumber":324,"author":{"gitId":"RoeReRe"},"content":"            VALID_FREQUENCY,","lastModifiedDate":"2023-10-15"},{"lineNumber":325,"author":{"gitId":"RoeReRe"},"content":"            VALID_START_DATE,","lastModifiedDate":"2023-10-15"},{"lineNumber":326,"author":{"gitId":"RoeReRe"},"content":"            VALID_END_DATE,","lastModifiedDate":"2023-10-15"},{"lineNumber":327,"author":{"gitId":"RoeReRe"},"content":"            VALID_EXPIRY_DATE,","lastModifiedDate":"2023-10-15"},{"lineNumber":328,"author":{"gitId":"RoeReRe"},"content":"            VALID_STOCK,","lastModifiedDate":"2023-10-15"},{"lineNumber":329,"author":{"gitId":"jingyu987"},"content":"            VALID_CONSUMPTION,","lastModifiedDate":"2023-10-16"},{"lineNumber":330,"author":{"gitId":"jingyu987"},"content":"            false,","lastModifiedDate":"2023-10-16"},{"lineNumber":331,"author":{"gitId":"RoeReRe"},"content":"            null","lastModifiedDate":"2023-10-15"},{"lineNumber":332,"author":{"gitId":"RoeReRe"},"content":"        );","lastModifiedDate":"2023-10-15"},{"lineNumber":333,"author":{"gitId":"RoeReRe"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Note.class.getSimpleName());","lastModifiedDate":"2023-10-15"},{"lineNumber":334,"author":{"gitId":"RoeReRe"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, prescription::toModelType);","lastModifiedDate":"2023-10-15"},{"lineNumber":335,"author":{"gitId":"RoeReRe"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":336,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":337,"author":{"gitId":"RoeReRe"},"content":"    // @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":338,"author":{"gitId":"RoeReRe"},"content":"    // public void toModelType_invalidTags_throwsIllegalValueException() {","lastModifiedDate":"2023-10-15"},{"lineNumber":339,"author":{"gitId":"RoeReRe"},"content":"    //     List\u003cJsonAdaptedTag\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_TAGS);","lastModifiedDate":"2023-10-15"},{"lineNumber":340,"author":{"gitId":"RoeReRe"},"content":"    //     invalidTags.add(new JsonAdaptedTag(INVALID_TAG));","lastModifiedDate":"2023-10-15"},{"lineNumber":341,"author":{"gitId":"RoeReRe"},"content":"    //     JsonAdaptedPrescription prescription \u003d","lastModifiedDate":"2023-10-15"},{"lineNumber":342,"author":{"gitId":"RoeReRe"},"content":"    //         new JsonAdaptedPrescription(VALID_NAME, VALID_DOSAGE, VALID_FREQUENCY, VALID_ADDRESS, invalidTags);","lastModifiedDate":"2023-10-15"},{"lineNumber":343,"author":{"gitId":"RoeReRe"},"content":"    //     assertThrows(IllegalValueException.class, prescription::toModelType);","lastModifiedDate":"2023-10-15"},{"lineNumber":344,"author":{"gitId":"RoeReRe"},"content":"    // }","lastModifiedDate":"2023-10-15"},{"lineNumber":345,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":346,"author":{"gitId":"RoeReRe"},"content":"}","lastModifiedDate":"2023-10-15"}],"authorContributionMap":{"jingyu987":34,"RoeReRe":312}},{"path":"src/test/java/seedu/address/storage/JsonPrescriptionListStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"RoeReRe"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-10-15"},{"lineNumber":2,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":3,"author":{"gitId":"RoeReRe"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-15"},{"lineNumber":4,"author":{"gitId":"RoeReRe"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-15"},{"lineNumber":5,"author":{"gitId":"RoeReRe"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-15"},{"lineNumber":6,"author":{"gitId":"RoeReRe"},"content":"import static seedu.address.testutil.TypicalPrescriptions.CAFFOX;","lastModifiedDate":"2023-10-15"},{"lineNumber":7,"author":{"gitId":"RoeReRe"},"content":"import static seedu.address.testutil.TypicalPrescriptions.IBUPROFEN;","lastModifiedDate":"2023-10-15"},{"lineNumber":8,"author":{"gitId":"RoeReRe"},"content":"import static seedu.address.testutil.TypicalPrescriptions.NAPROXEN;","lastModifiedDate":"2023-10-15"},{"lineNumber":9,"author":{"gitId":"RoeReRe"},"content":"import static seedu.address.testutil.TypicalPrescriptions.getTypicalPrescriptionList;","lastModifiedDate":"2023-10-15"},{"lineNumber":10,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":11,"author":{"gitId":"RoeReRe"},"content":"import java.io.IOException;","lastModifiedDate":"2023-10-15"},{"lineNumber":12,"author":{"gitId":"RoeReRe"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-10-15"},{"lineNumber":13,"author":{"gitId":"RoeReRe"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-10-15"},{"lineNumber":14,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":15,"author":{"gitId":"RoeReRe"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-15"},{"lineNumber":16,"author":{"gitId":"RoeReRe"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2023-10-15"},{"lineNumber":17,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":18,"author":{"gitId":"RoeReRe"},"content":"import seedu.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-10-15"},{"lineNumber":19,"author":{"gitId":"RoeReRe"},"content":"import seedu.address.model.PrescriptionList;","lastModifiedDate":"2023-10-15"},{"lineNumber":20,"author":{"gitId":"RoeReRe"},"content":"import seedu.address.model.ReadOnlyPrescriptionList;","lastModifiedDate":"2023-10-15"},{"lineNumber":21,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":22,"author":{"gitId":"RoeReRe"},"content":"public class JsonPrescriptionListStorageTest {","lastModifiedDate":"2023-10-15"},{"lineNumber":23,"author":{"gitId":"RoeReRe"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonPrescriptionListStorageTest\");","lastModifiedDate":"2023-10-15"},{"lineNumber":24,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":25,"author":{"gitId":"RoeReRe"},"content":"    @TempDir","lastModifiedDate":"2023-10-15"},{"lineNumber":26,"author":{"gitId":"RoeReRe"},"content":"    public Path testFolder;","lastModifiedDate":"2023-10-15"},{"lineNumber":27,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":28,"author":{"gitId":"RoeReRe"},"content":"    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":29,"author":{"gitId":"RoeReRe"},"content":"    public void readPrescriptionList_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2023-10-15"},{"lineNumber":30,"author":{"gitId":"RoeReRe"},"content":"        assertThrows(NullPointerException.class, () -\u003e readPrescriptionList(null));","lastModifiedDate":"2023-10-15"},{"lineNumber":31,"author":{"gitId":"RoeReRe"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":32,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":33,"author":{"gitId":"RoeReRe"},"content":"    private java.util.Optional\u003cReadOnlyPrescriptionList\u003e readPrescriptionList(String filePath) throws Exception {","lastModifiedDate":"2023-10-15"},{"lineNumber":34,"author":{"gitId":"RoeReRe"},"content":"        return new JsonPrescriptionListStorage(Paths.get(filePath))","lastModifiedDate":"2023-10-16"},{"lineNumber":35,"author":{"gitId":"RoeReRe"},"content":"            .readPrescriptionList(addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2023-10-16"},{"lineNumber":36,"author":{"gitId":"RoeReRe"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":37,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":38,"author":{"gitId":"RoeReRe"},"content":"    private Path addToTestDataPathIfNotNull(String prefsFileInTestDataFolder) {","lastModifiedDate":"2023-10-15"},{"lineNumber":39,"author":{"gitId":"RoeReRe"},"content":"        return prefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2023-10-15"},{"lineNumber":40,"author":{"gitId":"RoeReRe"},"content":"            ? TEST_DATA_FOLDER.resolve(prefsFileInTestDataFolder)","lastModifiedDate":"2023-10-15"},{"lineNumber":41,"author":{"gitId":"RoeReRe"},"content":"            : null;","lastModifiedDate":"2023-10-15"},{"lineNumber":42,"author":{"gitId":"RoeReRe"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":43,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":44,"author":{"gitId":"RoeReRe"},"content":"    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":45,"author":{"gitId":"RoeReRe"},"content":"    public void read_missingFile_emptyResult() throws Exception {","lastModifiedDate":"2023-10-15"},{"lineNumber":46,"author":{"gitId":"RoeReRe"},"content":"        assertFalse(readPrescriptionList(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2023-10-15"},{"lineNumber":47,"author":{"gitId":"RoeReRe"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":48,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":49,"author":{"gitId":"RoeReRe"},"content":"    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":50,"author":{"gitId":"RoeReRe"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2023-10-15"},{"lineNumber":51,"author":{"gitId":"RoeReRe"},"content":"        assertThrows(DataLoadingException.class, () -\u003e readPrescriptionList(\"notJsonFormatPrescriptionList.json\"));","lastModifiedDate":"2023-10-15"},{"lineNumber":52,"author":{"gitId":"RoeReRe"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":53,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":54,"author":{"gitId":"RoeReRe"},"content":"    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":55,"author":{"gitId":"RoeReRe"},"content":"    public void readPrescriptionList_invalidPrescriptionList_throwDataLoadingException() {","lastModifiedDate":"2023-10-15"},{"lineNumber":56,"author":{"gitId":"RoeReRe"},"content":"        assertThrows(DataLoadingException.class, () -\u003e readPrescriptionList(\"invalidPrescriptionList.json\"));","lastModifiedDate":"2023-10-15"},{"lineNumber":57,"author":{"gitId":"RoeReRe"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":58,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":59,"author":{"gitId":"RoeReRe"},"content":"    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":60,"author":{"gitId":"RoeReRe"},"content":"    public void readPrescriptionList_invalidAndValidPrescriptionList_throwDataLoadingException() {","lastModifiedDate":"2023-10-15"},{"lineNumber":61,"author":{"gitId":"RoeReRe"},"content":"        assertThrows(DataLoadingException.class, () -\u003e readPrescriptionList(\"invalidAndValidPrescriptionList.json\"));","lastModifiedDate":"2023-10-15"},{"lineNumber":62,"author":{"gitId":"RoeReRe"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":63,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":64,"author":{"gitId":"RoeReRe"},"content":"    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":65,"author":{"gitId":"RoeReRe"},"content":"    public void readAndSavePrescriptionList_allInOrder_success() throws Exception {","lastModifiedDate":"2023-10-15"},{"lineNumber":66,"author":{"gitId":"RoeReRe"},"content":"        Path filePath \u003d testFolder.resolve(\"TempPrescriptionList.json\");","lastModifiedDate":"2023-10-15"},{"lineNumber":67,"author":{"gitId":"RoeReRe"},"content":"        PrescriptionList original \u003d getTypicalPrescriptionList();","lastModifiedDate":"2023-10-15"},{"lineNumber":68,"author":{"gitId":"RoeReRe"},"content":"        JsonPrescriptionListStorage jsonPrescriptionListStorage \u003d new JsonPrescriptionListStorage(filePath);","lastModifiedDate":"2023-10-15"},{"lineNumber":69,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":70,"author":{"gitId":"RoeReRe"},"content":"        // Save in new file and read back","lastModifiedDate":"2023-10-15"},{"lineNumber":71,"author":{"gitId":"RoeReRe"},"content":"        jsonPrescriptionListStorage.savePrescriptionList(original, filePath);","lastModifiedDate":"2023-10-15"},{"lineNumber":72,"author":{"gitId":"RoeReRe"},"content":"        ReadOnlyPrescriptionList readBack \u003d jsonPrescriptionListStorage.readPrescriptionList(filePath).get();","lastModifiedDate":"2023-10-15"},{"lineNumber":73,"author":{"gitId":"RoeReRe"},"content":"        assertEquals(original, new PrescriptionList(readBack));","lastModifiedDate":"2023-10-15"},{"lineNumber":74,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":75,"author":{"gitId":"RoeReRe"},"content":"        // Modify data, overwrite exiting file, and read back","lastModifiedDate":"2023-10-15"},{"lineNumber":76,"author":{"gitId":"RoeReRe"},"content":"        original.addPrescription(IBUPROFEN);","lastModifiedDate":"2023-10-15"},{"lineNumber":77,"author":{"gitId":"RoeReRe"},"content":"        original.removePrescription(NAPROXEN);","lastModifiedDate":"2023-10-15"},{"lineNumber":78,"author":{"gitId":"RoeReRe"},"content":"        jsonPrescriptionListStorage.savePrescriptionList(original, filePath);","lastModifiedDate":"2023-10-15"},{"lineNumber":79,"author":{"gitId":"RoeReRe"},"content":"        readBack \u003d jsonPrescriptionListStorage.readPrescriptionList(filePath).get();","lastModifiedDate":"2023-10-15"},{"lineNumber":80,"author":{"gitId":"RoeReRe"},"content":"        assertEquals(original, new PrescriptionList(readBack));","lastModifiedDate":"2023-10-15"},{"lineNumber":81,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":82,"author":{"gitId":"RoeReRe"},"content":"        // Save and read without specifying file path","lastModifiedDate":"2023-10-15"},{"lineNumber":83,"author":{"gitId":"RoeReRe"},"content":"        original.addPrescription(CAFFOX);","lastModifiedDate":"2023-10-15"},{"lineNumber":84,"author":{"gitId":"RoeReRe"},"content":"        jsonPrescriptionListStorage.savePrescriptionList(original); // file path not specified","lastModifiedDate":"2023-10-15"},{"lineNumber":85,"author":{"gitId":"RoeReRe"},"content":"        readBack \u003d jsonPrescriptionListStorage.readPrescriptionList().get(); // file path not specified","lastModifiedDate":"2023-10-15"},{"lineNumber":86,"author":{"gitId":"RoeReRe"},"content":"        assertEquals(original, new PrescriptionList(readBack));","lastModifiedDate":"2023-10-15"},{"lineNumber":87,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":88,"author":{"gitId":"RoeReRe"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":89,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":90,"author":{"gitId":"RoeReRe"},"content":"    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":91,"author":{"gitId":"RoeReRe"},"content":"    public void savePrescriptionList_nullPrescriptionList_throwsNullPointerException() {","lastModifiedDate":"2023-10-15"},{"lineNumber":92,"author":{"gitId":"RoeReRe"},"content":"        assertThrows(NullPointerException.class, () -\u003e savePrescriptionList(null, \"SomeFile.json\"));","lastModifiedDate":"2023-10-15"},{"lineNumber":93,"author":{"gitId":"RoeReRe"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":94,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":95,"author":{"gitId":"RoeReRe"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":96,"author":{"gitId":"RoeReRe"},"content":"     * Saves {@code prescriptionList} at the specified {@code filePath}.","lastModifiedDate":"2023-10-15"},{"lineNumber":97,"author":{"gitId":"RoeReRe"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":98,"author":{"gitId":"RoeReRe"},"content":"    private void savePrescriptionList(ReadOnlyPrescriptionList prescriptionList, String filePath) {","lastModifiedDate":"2023-10-15"},{"lineNumber":99,"author":{"gitId":"RoeReRe"},"content":"        try {","lastModifiedDate":"2023-10-15"},{"lineNumber":100,"author":{"gitId":"RoeReRe"},"content":"            new JsonPrescriptionListStorage(Paths.get(filePath))","lastModifiedDate":"2023-10-15"},{"lineNumber":101,"author":{"gitId":"RoeReRe"},"content":"                .savePrescriptionList(prescriptionList, addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2023-10-15"},{"lineNumber":102,"author":{"gitId":"RoeReRe"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2023-10-15"},{"lineNumber":103,"author":{"gitId":"RoeReRe"},"content":"            throw new AssertionError(\"There should not be an error writing to the file.\", ioe);","lastModifiedDate":"2023-10-15"},{"lineNumber":104,"author":{"gitId":"RoeReRe"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":105,"author":{"gitId":"RoeReRe"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":106,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":107,"author":{"gitId":"RoeReRe"},"content":"    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":108,"author":{"gitId":"RoeReRe"},"content":"    public void savePrescriptionList_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2023-10-15"},{"lineNumber":109,"author":{"gitId":"RoeReRe"},"content":"        assertThrows(NullPointerException.class, () -\u003e savePrescriptionList(new PrescriptionList(), null));","lastModifiedDate":"2023-10-15"},{"lineNumber":110,"author":{"gitId":"RoeReRe"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":111,"author":{"gitId":"RoeReRe"},"content":"}","lastModifiedDate":"2023-10-15"}],"authorContributionMap":{"RoeReRe":111}},{"path":"src/test/java/seedu/address/storage/JsonSerializablePrescriptionListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"RoeReRe"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-10-15"},{"lineNumber":2,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":3,"author":{"gitId":"RoeReRe"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-15"},{"lineNumber":4,"author":{"gitId":"RoeReRe"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-15"},{"lineNumber":5,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":6,"author":{"gitId":"RoeReRe"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-10-15"},{"lineNumber":7,"author":{"gitId":"RoeReRe"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-10-15"},{"lineNumber":8,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":9,"author":{"gitId":"RoeReRe"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-15"},{"lineNumber":10,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":11,"author":{"gitId":"RoeReRe"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-10-15"},{"lineNumber":12,"author":{"gitId":"RoeReRe"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2023-10-15"},{"lineNumber":13,"author":{"gitId":"RoeReRe"},"content":"import seedu.address.model.PrescriptionList;","lastModifiedDate":"2023-10-15"},{"lineNumber":14,"author":{"gitId":"RoeReRe"},"content":"import seedu.address.testutil.TypicalPrescriptions;","lastModifiedDate":"2023-10-15"},{"lineNumber":15,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":16,"author":{"gitId":"RoeReRe"},"content":"public class JsonSerializablePrescriptionListTest {","lastModifiedDate":"2023-10-15"},{"lineNumber":17,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":18,"author":{"gitId":"RoeReRe"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\",","lastModifiedDate":"2023-10-16"},{"lineNumber":19,"author":{"gitId":"RoeReRe"},"content":"        \"JsonSerializablePrescriptionListTest\");","lastModifiedDate":"2023-10-16"},{"lineNumber":20,"author":{"gitId":"RoeReRe"},"content":"    private static final Path TYPICAL_PRESCRIPTION_FILE \u003d TEST_DATA_FOLDER.resolve(\"typicalPrescriptionList.json\");","lastModifiedDate":"2023-10-15"},{"lineNumber":21,"author":{"gitId":"RoeReRe"},"content":"    private static final Path INVALID_PRESCRIPTION_FILE \u003d TEST_DATA_FOLDER.resolve(\"invalidPrescriptionList.json\");","lastModifiedDate":"2023-10-15"},{"lineNumber":22,"author":{"gitId":"RoeReRe"},"content":"    private static final Path DUPLICATE_PRESCRIPTION_FILE \u003d TEST_DATA_FOLDER.resolve(\"duplicatePrescriptionList.json\");","lastModifiedDate":"2023-10-15"},{"lineNumber":23,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":24,"author":{"gitId":"RoeReRe"},"content":"    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":25,"author":{"gitId":"RoeReRe"},"content":"    public void toModelType_typicalPrescriptionFile_success() throws Exception {","lastModifiedDate":"2023-10-15"},{"lineNumber":26,"author":{"gitId":"RoeReRe"},"content":"        JsonSerializablePrescriptionList dataFromFile \u003d JsonUtil.readJsonFile(TYPICAL_PRESCRIPTION_FILE,","lastModifiedDate":"2023-10-15"},{"lineNumber":27,"author":{"gitId":"RoeReRe"},"content":"            JsonSerializablePrescriptionList.class).get();","lastModifiedDate":"2023-10-15"},{"lineNumber":28,"author":{"gitId":"RoeReRe"},"content":"        PrescriptionList prescriptionListFromFile \u003d dataFromFile.toModelType();","lastModifiedDate":"2023-10-15"},{"lineNumber":29,"author":{"gitId":"RoeReRe"},"content":"        PrescriptionList typicalPrescriptionList \u003d TypicalPrescriptions.getTypicalPrescriptionList();","lastModifiedDate":"2023-10-15"},{"lineNumber":30,"author":{"gitId":"RoeReRe"},"content":"        assertEquals(prescriptionListFromFile, typicalPrescriptionList);","lastModifiedDate":"2023-10-15"},{"lineNumber":31,"author":{"gitId":"RoeReRe"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":32,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":33,"author":{"gitId":"RoeReRe"},"content":"    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":34,"author":{"gitId":"RoeReRe"},"content":"    public void toModelType_invalidPrescriptionFile_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2023-10-15"},{"lineNumber":35,"author":{"gitId":"RoeReRe"},"content":"        JsonSerializablePrescriptionList dataFromFile \u003d JsonUtil.readJsonFile(INVALID_PRESCRIPTION_FILE,","lastModifiedDate":"2023-10-15"},{"lineNumber":36,"author":{"gitId":"RoeReRe"},"content":"            JsonSerializablePrescriptionList.class).get();","lastModifiedDate":"2023-10-15"},{"lineNumber":37,"author":{"gitId":"RoeReRe"},"content":"        assertThrows(IllegalValueException.class, dataFromFile::toModelType);","lastModifiedDate":"2023-10-15"},{"lineNumber":38,"author":{"gitId":"RoeReRe"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":39,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":40,"author":{"gitId":"RoeReRe"},"content":"    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":41,"author":{"gitId":"RoeReRe"},"content":"    public void toModelType_duplicatePrescription_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2023-10-15"},{"lineNumber":42,"author":{"gitId":"RoeReRe"},"content":"        JsonSerializablePrescriptionList dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_PRESCRIPTION_FILE,","lastModifiedDate":"2023-10-15"},{"lineNumber":43,"author":{"gitId":"RoeReRe"},"content":"            JsonSerializablePrescriptionList.class).get();","lastModifiedDate":"2023-10-15"},{"lineNumber":44,"author":{"gitId":"RoeReRe"},"content":"        assertThrows(IllegalValueException.class, JsonSerializablePrescriptionList.MESSAGE_DUPLICATE_PRESCRIPTION,","lastModifiedDate":"2023-10-15"},{"lineNumber":45,"author":{"gitId":"RoeReRe"},"content":"            dataFromFile::toModelType);","lastModifiedDate":"2023-10-15"},{"lineNumber":46,"author":{"gitId":"RoeReRe"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":47,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":48,"author":{"gitId":"RoeReRe"},"content":"}","lastModifiedDate":"2023-10-15"}],"authorContributionMap":{"RoeReRe":48}},{"path":"src/test/java/seedu/address/storage/JsonUserPrefsStoragePrescriptionTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2023-10-15"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-10-15"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-10-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2023-10-15"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-15"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2023-10-15"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2023-10-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-10-15"},{"lineNumber":17,"author":{"gitId":"RoeReRe"},"content":"import seedu.address.model.UserPrefsPrescription;","lastModifiedDate":"2023-10-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":19,"author":{"gitId":"RoeReRe"},"content":"public class JsonUserPrefsStoragePrescriptionTest {","lastModifiedDate":"2023-10-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonUserPrefsStorageTest\");","lastModifiedDate":"2023-10-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2023-10-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2023-10-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void readUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2023-10-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e readUserPrefs(null));","lastModifiedDate":"2023-10-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":31,"author":{"gitId":"RoeReRe"},"content":"    private Optional\u003cUserPrefsPrescription\u003e readUserPrefs(String userPrefsFileInTestDataFolder)","lastModifiedDate":"2023-10-16"},{"lineNumber":32,"author":{"gitId":"RoeReRe"},"content":"            throws DataLoadingException {","lastModifiedDate":"2023-10-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d addToTestDataPathIfNotNull(userPrefsFileInTestDataFolder);","lastModifiedDate":"2023-10-15"},{"lineNumber":34,"author":{"gitId":"RoeReRe"},"content":"        return new JsonUserPrefsStoragePrescription(prefsFilePath).readUserPrefs(prefsFilePath);","lastModifiedDate":"2023-10-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void readUserPrefs_missingFile_emptyResult() throws DataLoadingException {","lastModifiedDate":"2023-10-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertFalse(readUserPrefs(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2023-10-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void readUserPrefs_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2023-10-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertThrows(DataLoadingException.class, () -\u003e readUserPrefs(\"NotJsonFormatUserPrefs.json\"));","lastModifiedDate":"2023-10-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String userPrefsFileInTestDataFolder) {","lastModifiedDate":"2023-10-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return userPrefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2023-10-15"},{"lineNumber":49,"author":{"gitId":"RoeReRe"},"content":"            ? TEST_DATA_FOLDER.resolve(userPrefsFileInTestDataFolder)","lastModifiedDate":"2023-10-15"},{"lineNumber":50,"author":{"gitId":"RoeReRe"},"content":"            : null;","lastModifiedDate":"2023-10-15"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void readUserPrefs_fileInOrder_successfullyRead() throws DataLoadingException {","lastModifiedDate":"2023-10-15"},{"lineNumber":55,"author":{"gitId":"RoeReRe"},"content":"        UserPrefsPrescription expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2023-10-15"},{"lineNumber":56,"author":{"gitId":"RoeReRe"},"content":"        UserPrefsPrescription actual \u003d readUserPrefs(\"TypicalUserPref.json\").get();","lastModifiedDate":"2023-10-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2023-10-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void readUserPrefs_valuesMissingFromFile_defaultValuesUsed() throws DataLoadingException {","lastModifiedDate":"2023-10-15"},{"lineNumber":62,"author":{"gitId":"RoeReRe"},"content":"        UserPrefsPrescription actual \u003d readUserPrefs(\"EmptyUserPrefs.json\").get();","lastModifiedDate":"2023-10-15"},{"lineNumber":63,"author":{"gitId":"RoeReRe"},"content":"        assertEquals(new UserPrefsPrescription(), actual);","lastModifiedDate":"2023-10-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void readUserPrefs_extraValuesInFile_extraValuesIgnored() throws DataLoadingException {","lastModifiedDate":"2023-10-15"},{"lineNumber":68,"author":{"gitId":"RoeReRe"},"content":"        UserPrefsPrescription expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2023-10-15"},{"lineNumber":69,"author":{"gitId":"RoeReRe"},"content":"        UserPrefsPrescription actual \u003d readUserPrefs(\"ExtraValuesUserPref.json\").get();","lastModifiedDate":"2023-10-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2023-10-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":74,"author":{"gitId":"RoeReRe"},"content":"    private UserPrefsPrescription getTypicalUserPrefs() {","lastModifiedDate":"2023-10-15"},{"lineNumber":75,"author":{"gitId":"RoeReRe"},"content":"        UserPrefsPrescription userPrefs \u003d new UserPrefsPrescription();","lastModifiedDate":"2023-10-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1000, 500, 300, 100));","lastModifiedDate":"2023-10-15"},{"lineNumber":77,"author":{"gitId":"RoeReRe"},"content":"        userPrefs.setPrescriptionListFilePath(Paths.get(\"prescriptionList.json\"));","lastModifiedDate":"2023-10-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2023-10-15"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void savePrefs_nullPrefs_throwsNullPointerException() {","lastModifiedDate":"2023-10-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(null, \"SomeFile.json\"));","lastModifiedDate":"2023-10-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2023-10-15"},{"lineNumber":88,"author":{"gitId":"RoeReRe"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(new UserPrefsPrescription(), null));","lastModifiedDate":"2023-10-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * Saves {@code userPrefs} at the specified {@code prefsFileInTestDataFolder} filepath.","lastModifiedDate":"2023-10-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":94,"author":{"gitId":"RoeReRe"},"content":"    private void saveUserPrefs(UserPrefsPrescription userPrefs, String prefsFileInTestDataFolder) {","lastModifiedDate":"2023-10-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2023-10-15"},{"lineNumber":96,"author":{"gitId":"RoeReRe"},"content":"            new JsonUserPrefsStoragePrescription(addToTestDataPathIfNotNull(prefsFileInTestDataFolder))","lastModifiedDate":"2023-10-15"},{"lineNumber":97,"author":{"gitId":"RoeReRe"},"content":"                .saveUserPrefs(userPrefs);","lastModifiedDate":"2023-10-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2023-10-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"There should not be an error writing to the file\", ioe);","lastModifiedDate":"2023-10-15"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_allInOrder_success() throws DataLoadingException, IOException {","lastModifiedDate":"2023-10-15"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":106,"author":{"gitId":"RoeReRe"},"content":"        UserPrefsPrescription original \u003d new UserPrefsPrescription();","lastModifiedDate":"2023-10-15"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(1200, 200, 0, 2));","lastModifiedDate":"2023-10-15"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        Path pefsFilePath \u003d testFolder.resolve(\"TempPrefs.json\");","lastModifiedDate":"2023-10-15"},{"lineNumber":110,"author":{"gitId":"RoeReRe"},"content":"        JsonUserPrefsStoragePrescription jsonUserPrefsStorage \u003d new JsonUserPrefsStoragePrescription(pefsFilePath);","lastModifiedDate":"2023-10-15"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        //Try writing when the file doesn\u0027t exist","lastModifiedDate":"2023-10-15"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2023-10-15"},{"lineNumber":114,"author":{"gitId":"RoeReRe"},"content":"        UserPrefsPrescription readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2023-10-15"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2023-10-15"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        //Try saving when the file exists","lastModifiedDate":"2023-10-15"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(5, 5, 5, 5));","lastModifiedDate":"2023-10-15"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2023-10-15"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2023-10-15"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2023-10-15"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":124,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-10-15"}],"authorContributionMap":{"RoeReRe":23,"-":101}},{"path":"src/test/java/seedu/address/storage/StorageManagerPrescriptionTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"RoeReRe"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-10-15"},{"lineNumber":2,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":3,"author":{"gitId":"RoeReRe"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-15"},{"lineNumber":4,"author":{"gitId":"RoeReRe"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2023-10-15"},{"lineNumber":5,"author":{"gitId":"RoeReRe"},"content":"import static seedu.address.testutil.TypicalPrescriptions.getTypicalPrescriptionList;","lastModifiedDate":"2023-10-15"},{"lineNumber":6,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":7,"author":{"gitId":"RoeReRe"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-10-15"},{"lineNumber":8,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":9,"author":{"gitId":"RoeReRe"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-10-15"},{"lineNumber":10,"author":{"gitId":"RoeReRe"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-15"},{"lineNumber":11,"author":{"gitId":"RoeReRe"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2023-10-15"},{"lineNumber":12,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":13,"author":{"gitId":"RoeReRe"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2023-10-15"},{"lineNumber":14,"author":{"gitId":"RoeReRe"},"content":"import seedu.address.model.PrescriptionList;","lastModifiedDate":"2023-10-15"},{"lineNumber":15,"author":{"gitId":"RoeReRe"},"content":"import seedu.address.model.ReadOnlyPrescriptionList;","lastModifiedDate":"2023-10-15"},{"lineNumber":16,"author":{"gitId":"RoeReRe"},"content":"import seedu.address.model.UserPrefsPrescription;","lastModifiedDate":"2023-10-15"},{"lineNumber":17,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":18,"author":{"gitId":"RoeReRe"},"content":"public class StorageManagerPrescriptionTest {","lastModifiedDate":"2023-10-15"},{"lineNumber":19,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":20,"author":{"gitId":"RoeReRe"},"content":"    @TempDir","lastModifiedDate":"2023-10-15"},{"lineNumber":21,"author":{"gitId":"RoeReRe"},"content":"    public Path testFolder;","lastModifiedDate":"2023-10-15"},{"lineNumber":22,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":23,"author":{"gitId":"RoeReRe"},"content":"    private StorageManagerPrescription storageManager;","lastModifiedDate":"2023-10-15"},{"lineNumber":24,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":25,"author":{"gitId":"RoeReRe"},"content":"    @BeforeEach","lastModifiedDate":"2023-10-15"},{"lineNumber":26,"author":{"gitId":"RoeReRe"},"content":"    public void setUp() {","lastModifiedDate":"2023-10-15"},{"lineNumber":27,"author":{"gitId":"RoeReRe"},"content":"        JsonPrescriptionListStorage prescriptionListStorage \u003d new JsonPrescriptionListStorage(","lastModifiedDate":"2023-10-15"},{"lineNumber":28,"author":{"gitId":"RoeReRe"},"content":"            getTempFilePath(\"pl\"));","lastModifiedDate":"2023-10-15"},{"lineNumber":29,"author":{"gitId":"RoeReRe"},"content":"        JsonUserPrefsStoragePrescription userPrefsStorage \u003d new JsonUserPrefsStoragePrescription(","lastModifiedDate":"2023-10-15"},{"lineNumber":30,"author":{"gitId":"RoeReRe"},"content":"            getTempFilePath(\"prefs\"));","lastModifiedDate":"2023-10-15"},{"lineNumber":31,"author":{"gitId":"RoeReRe"},"content":"        storageManager \u003d new StorageManagerPrescription(prescriptionListStorage, userPrefsStorage);","lastModifiedDate":"2023-10-15"},{"lineNumber":32,"author":{"gitId":"RoeReRe"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":33,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":34,"author":{"gitId":"RoeReRe"},"content":"    private Path getTempFilePath(String fileName) {","lastModifiedDate":"2023-10-15"},{"lineNumber":35,"author":{"gitId":"RoeReRe"},"content":"        return testFolder.resolve(fileName);","lastModifiedDate":"2023-10-15"},{"lineNumber":36,"author":{"gitId":"RoeReRe"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":37,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":38,"author":{"gitId":"RoeReRe"},"content":"    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":39,"author":{"gitId":"RoeReRe"},"content":"    public void prefsReadSave() throws Exception {","lastModifiedDate":"2023-10-15"},{"lineNumber":40,"author":{"gitId":"RoeReRe"},"content":"        /*","lastModifiedDate":"2023-10-15"},{"lineNumber":41,"author":{"gitId":"RoeReRe"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2023-10-15"},{"lineNumber":42,"author":{"gitId":"RoeReRe"},"content":"         * {@link JsonUserPrefsStoragePrescription} class.","lastModifiedDate":"2023-10-15"},{"lineNumber":43,"author":{"gitId":"RoeReRe"},"content":"         * More extensive testing of UserPref saving/reading is done in","lastModifiedDate":"2023-10-15"},{"lineNumber":44,"author":{"gitId":"RoeReRe"},"content":"         * {@link JsonUserPrefsStoragePrescriptionTest} class.","lastModifiedDate":"2023-10-15"},{"lineNumber":45,"author":{"gitId":"RoeReRe"},"content":"         */","lastModifiedDate":"2023-10-15"},{"lineNumber":46,"author":{"gitId":"RoeReRe"},"content":"        UserPrefsPrescription original \u003d new UserPrefsPrescription();","lastModifiedDate":"2023-10-15"},{"lineNumber":47,"author":{"gitId":"RoeReRe"},"content":"        original.setGuiSettings(new GuiSettings(300, 600, 4, 6));","lastModifiedDate":"2023-10-15"},{"lineNumber":48,"author":{"gitId":"RoeReRe"},"content":"        storageManager.saveUserPrefs(original);","lastModifiedDate":"2023-10-15"},{"lineNumber":49,"author":{"gitId":"RoeReRe"},"content":"        UserPrefsPrescription retrieved \u003d storageManager.readUserPrefs().get();","lastModifiedDate":"2023-10-15"},{"lineNumber":50,"author":{"gitId":"RoeReRe"},"content":"        assertEquals(original, retrieved);","lastModifiedDate":"2023-10-15"},{"lineNumber":51,"author":{"gitId":"RoeReRe"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":52,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":53,"author":{"gitId":"RoeReRe"},"content":"    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":54,"author":{"gitId":"RoeReRe"},"content":"    public void prescriptionListReadSave() throws Exception {","lastModifiedDate":"2023-10-15"},{"lineNumber":55,"author":{"gitId":"RoeReRe"},"content":"        /*","lastModifiedDate":"2023-10-15"},{"lineNumber":56,"author":{"gitId":"RoeReRe"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2023-10-15"},{"lineNumber":57,"author":{"gitId":"RoeReRe"},"content":"         * {@link JsonPrescriptionListStorage} class.","lastModifiedDate":"2023-10-15"},{"lineNumber":58,"author":{"gitId":"RoeReRe"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonPrescriptionListStorageTest} class.","lastModifiedDate":"2023-10-15"},{"lineNumber":59,"author":{"gitId":"RoeReRe"},"content":"         */","lastModifiedDate":"2023-10-15"},{"lineNumber":60,"author":{"gitId":"RoeReRe"},"content":"        PrescriptionList original \u003d getTypicalPrescriptionList();","lastModifiedDate":"2023-10-15"},{"lineNumber":61,"author":{"gitId":"RoeReRe"},"content":"        storageManager.savePrescriptionList(original);","lastModifiedDate":"2023-10-15"},{"lineNumber":62,"author":{"gitId":"RoeReRe"},"content":"        ReadOnlyPrescriptionList retrieved \u003d storageManager.readPrescriptionList().get();","lastModifiedDate":"2023-10-15"},{"lineNumber":63,"author":{"gitId":"RoeReRe"},"content":"        assertEquals(original, new PrescriptionList(retrieved));","lastModifiedDate":"2023-10-15"},{"lineNumber":64,"author":{"gitId":"RoeReRe"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":65,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":66,"author":{"gitId":"RoeReRe"},"content":"    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":67,"author":{"gitId":"RoeReRe"},"content":"    public void getPrescriptionListFilePath() {","lastModifiedDate":"2023-10-15"},{"lineNumber":68,"author":{"gitId":"RoeReRe"},"content":"        assertNotNull(storageManager.getPrescriptionListFilePath());","lastModifiedDate":"2023-10-15"},{"lineNumber":69,"author":{"gitId":"RoeReRe"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":70,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":71,"author":{"gitId":"RoeReRe"},"content":"}","lastModifiedDate":"2023-10-15"}],"authorContributionMap":{"RoeReRe":71}},{"path":"src/test/java/seedu/address/testutil/PrescriptionBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"RoeReRe"},"content":"package seedu.address.testutil;","lastModifiedDate":"2023-10-15"},{"lineNumber":2,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":3,"author":{"gitId":"jingyu987"},"content":"import seedu.address.model.prescription.ConsumptionCount;","lastModifiedDate":"2023-10-16"},{"lineNumber":4,"author":{"gitId":"RoeReRe"},"content":"import seedu.address.model.prescription.Date;","lastModifiedDate":"2023-10-15"},{"lineNumber":5,"author":{"gitId":"RoeReRe"},"content":"import seedu.address.model.prescription.Dosage;","lastModifiedDate":"2023-10-15"},{"lineNumber":6,"author":{"gitId":"RoeReRe"},"content":"import seedu.address.model.prescription.Frequency;","lastModifiedDate":"2023-10-15"},{"lineNumber":7,"author":{"gitId":"RoeReRe"},"content":"import seedu.address.model.prescription.Name;","lastModifiedDate":"2023-10-15"},{"lineNumber":8,"author":{"gitId":"RoeReRe"},"content":"import seedu.address.model.prescription.Note;","lastModifiedDate":"2023-10-15"},{"lineNumber":9,"author":{"gitId":"RoeReRe"},"content":"import seedu.address.model.prescription.Prescription;","lastModifiedDate":"2023-10-15"},{"lineNumber":10,"author":{"gitId":"RoeReRe"},"content":"import seedu.address.model.prescription.Stock;","lastModifiedDate":"2023-10-15"},{"lineNumber":11,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":12,"author":{"gitId":"RoeReRe"},"content":"/**","lastModifiedDate":"2023-10-15"},{"lineNumber":13,"author":{"gitId":"RoeReRe"},"content":" * A utility class to help with building Prescription objects.","lastModifiedDate":"2023-10-15"},{"lineNumber":14,"author":{"gitId":"RoeReRe"},"content":" */","lastModifiedDate":"2023-10-15"},{"lineNumber":15,"author":{"gitId":"RoeReRe"},"content":"public class PrescriptionBuilder {","lastModifiedDate":"2023-10-15"},{"lineNumber":16,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":17,"author":{"gitId":"RoeReRe"},"content":"    public static final Name DEFAULT_NAME \u003d new Name(\"Aspirin\");","lastModifiedDate":"2023-10-15"},{"lineNumber":18,"author":{"gitId":"RoeReRe"},"content":"    public static final Dosage DEFAULT_DOSAGE \u003d new Dosage(\"1\");","lastModifiedDate":"2023-10-15"},{"lineNumber":19,"author":{"gitId":"RoeReRe"},"content":"    public static final Frequency DEFAULT_FREQUENCY \u003d new Frequency(\"Daily\");","lastModifiedDate":"2023-10-15"},{"lineNumber":20,"author":{"gitId":"RoeReRe"},"content":"    public static final Date DEFAULT_START_DATE \u003d new Date(\"01/10/2023\");","lastModifiedDate":"2023-10-15"},{"lineNumber":21,"author":{"gitId":"RoeReRe"},"content":"    public static final Date DEFAULT_END_DATE \u003d new Date(\"01/10/2024\");","lastModifiedDate":"2023-10-15"},{"lineNumber":22,"author":{"gitId":"RoeReRe"},"content":"    public static final Date DEFAULT_EXPIRY_DATE \u003d new Date(\"11/02/2025\");","lastModifiedDate":"2023-10-15"},{"lineNumber":23,"author":{"gitId":"RoeReRe"},"content":"    public static final Stock DEFAULT_STOCK \u003d new Stock(\"100\");","lastModifiedDate":"2023-10-15"},{"lineNumber":24,"author":{"gitId":"jingyu987"},"content":"    public static final ConsumptionCount DEFAULT_CONSUMPTION \u003d new ConsumptionCount(\"0\", false);","lastModifiedDate":"2023-10-16"},{"lineNumber":25,"author":{"gitId":"RoeReRe"},"content":"    public static final Note DEFAULT_NOTE \u003d new Note(\"Take after food\");","lastModifiedDate":"2023-10-15"},{"lineNumber":26,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":27,"author":{"gitId":"RoeReRe"},"content":"    private Name name;","lastModifiedDate":"2023-10-15"},{"lineNumber":28,"author":{"gitId":"RoeReRe"},"content":"    private Dosage dosage;","lastModifiedDate":"2023-10-15"},{"lineNumber":29,"author":{"gitId":"RoeReRe"},"content":"    private Frequency frequency;","lastModifiedDate":"2023-10-15"},{"lineNumber":30,"author":{"gitId":"RoeReRe"},"content":"    private Date startDate;","lastModifiedDate":"2023-10-15"},{"lineNumber":31,"author":{"gitId":"RoeReRe"},"content":"    private Date endDate;","lastModifiedDate":"2023-10-15"},{"lineNumber":32,"author":{"gitId":"RoeReRe"},"content":"    private Date expiryDate;","lastModifiedDate":"2023-10-15"},{"lineNumber":33,"author":{"gitId":"RoeReRe"},"content":"    private Stock totalStock;","lastModifiedDate":"2023-10-15"},{"lineNumber":34,"author":{"gitId":"jingyu987"},"content":"    private ConsumptionCount consumptionCount;","lastModifiedDate":"2023-10-16"},{"lineNumber":35,"author":{"gitId":"RoeReRe"},"content":"    private Note note;","lastModifiedDate":"2023-10-15"},{"lineNumber":36,"author":{"gitId":"RoeReRe"},"content":"    // private Set\u003cTag\u003e tags;","lastModifiedDate":"2023-10-15"},{"lineNumber":37,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":38,"author":{"gitId":"RoeReRe"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":39,"author":{"gitId":"RoeReRe"},"content":"     * Creates a {@code PrescriptionBuilder} with the default details.","lastModifiedDate":"2023-10-15"},{"lineNumber":40,"author":{"gitId":"RoeReRe"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":41,"author":{"gitId":"RoeReRe"},"content":"    public PrescriptionBuilder() {","lastModifiedDate":"2023-10-15"},{"lineNumber":42,"author":{"gitId":"RoeReRe"},"content":"        name \u003d DEFAULT_NAME;","lastModifiedDate":"2023-10-15"},{"lineNumber":43,"author":{"gitId":"RoeReRe"},"content":"        dosage \u003d DEFAULT_DOSAGE;","lastModifiedDate":"2023-10-15"},{"lineNumber":44,"author":{"gitId":"RoeReRe"},"content":"        frequency \u003d DEFAULT_FREQUENCY;","lastModifiedDate":"2023-10-15"},{"lineNumber":45,"author":{"gitId":"RoeReRe"},"content":"        startDate \u003d DEFAULT_START_DATE;","lastModifiedDate":"2023-10-15"},{"lineNumber":46,"author":{"gitId":"RoeReRe"},"content":"        endDate \u003d DEFAULT_END_DATE;","lastModifiedDate":"2023-10-15"},{"lineNumber":47,"author":{"gitId":"RoeReRe"},"content":"        expiryDate \u003d DEFAULT_EXPIRY_DATE;","lastModifiedDate":"2023-10-15"},{"lineNumber":48,"author":{"gitId":"RoeReRe"},"content":"        totalStock \u003d DEFAULT_STOCK;","lastModifiedDate":"2023-10-15"},{"lineNumber":49,"author":{"gitId":"jingyu987"},"content":"        consumptionCount \u003d DEFAULT_CONSUMPTION;","lastModifiedDate":"2023-10-16"},{"lineNumber":50,"author":{"gitId":"RoeReRe"},"content":"        note \u003d DEFAULT_NOTE;","lastModifiedDate":"2023-10-15"},{"lineNumber":51,"author":{"gitId":"RoeReRe"},"content":"        // tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-10-15"},{"lineNumber":52,"author":{"gitId":"RoeReRe"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":53,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":54,"author":{"gitId":"RoeReRe"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":55,"author":{"gitId":"RoeReRe"},"content":"     * Initializes the PrescriptionBuilder with the data of {@code prescriptionToCopy}.","lastModifiedDate":"2023-10-15"},{"lineNumber":56,"author":{"gitId":"RoeReRe"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":57,"author":{"gitId":"RoeReRe"},"content":"    public PrescriptionBuilder(Prescription prescriptionToCopy) {","lastModifiedDate":"2023-10-15"},{"lineNumber":58,"author":{"gitId":"RoeReRe"},"content":"        name \u003d prescriptionToCopy.getName();","lastModifiedDate":"2023-10-15"},{"lineNumber":59,"author":{"gitId":"RoeReRe"},"content":"        dosage \u003d prescriptionToCopy.getDosage();","lastModifiedDate":"2023-10-15"},{"lineNumber":60,"author":{"gitId":"RoeReRe"},"content":"        frequency \u003d prescriptionToCopy.getFrequency();","lastModifiedDate":"2023-10-15"},{"lineNumber":61,"author":{"gitId":"RoeReRe"},"content":"        startDate \u003d prescriptionToCopy.getStartDate();","lastModifiedDate":"2023-10-15"},{"lineNumber":62,"author":{"gitId":"RoeReRe"},"content":"        endDate \u003d prescriptionToCopy.getEndDate();","lastModifiedDate":"2023-10-15"},{"lineNumber":63,"author":{"gitId":"RoeReRe"},"content":"        expiryDate \u003d prescriptionToCopy.getExpiryDate();","lastModifiedDate":"2023-10-15"},{"lineNumber":64,"author":{"gitId":"RoeReRe"},"content":"        totalStock \u003d prescriptionToCopy.getTotalStock();","lastModifiedDate":"2023-10-15"},{"lineNumber":65,"author":{"gitId":"jingyu987"},"content":"        consumptionCount \u003d prescriptionToCopy.getConsumptionCount();","lastModifiedDate":"2023-10-16"},{"lineNumber":66,"author":{"gitId":"RoeReRe"},"content":"        note \u003d prescriptionToCopy.getNote();","lastModifiedDate":"2023-10-15"},{"lineNumber":67,"author":{"gitId":"RoeReRe"},"content":"        // tags \u003d new HashSet\u003c\u003e(personToCopy.getTags());","lastModifiedDate":"2023-10-15"},{"lineNumber":68,"author":{"gitId":"RoeReRe"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":69,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":70,"author":{"gitId":"RoeReRe"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":71,"author":{"gitId":"RoeReRe"},"content":"     * Sets the {@code Name} of the {@code Prescription} that we are building.","lastModifiedDate":"2023-10-15"},{"lineNumber":72,"author":{"gitId":"RoeReRe"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":73,"author":{"gitId":"RoeReRe"},"content":"    public PrescriptionBuilder withName(String name) {","lastModifiedDate":"2023-10-15"},{"lineNumber":74,"author":{"gitId":"RoeReRe"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2023-10-15"},{"lineNumber":75,"author":{"gitId":"RoeReRe"},"content":"        return this;","lastModifiedDate":"2023-10-15"},{"lineNumber":76,"author":{"gitId":"RoeReRe"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":77,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":78,"author":{"gitId":"RoeReRe"},"content":"    // /**","lastModifiedDate":"2023-10-16"},{"lineNumber":79,"author":{"gitId":"RoeReRe"},"content":"    //  * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Prescription} that we are building.","lastModifiedDate":"2023-10-16"},{"lineNumber":80,"author":{"gitId":"RoeReRe"},"content":"    //  */","lastModifiedDate":"2023-10-16"},{"lineNumber":81,"author":{"gitId":"RoeReRe"},"content":"    // public PersonBuilder withTags(String ... tags) {","lastModifiedDate":"2023-10-15"},{"lineNumber":82,"author":{"gitId":"RoeReRe"},"content":"    //     this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2023-10-15"},{"lineNumber":83,"author":{"gitId":"RoeReRe"},"content":"    //     return this;","lastModifiedDate":"2023-10-15"},{"lineNumber":84,"author":{"gitId":"RoeReRe"},"content":"    // }","lastModifiedDate":"2023-10-15"},{"lineNumber":85,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":86,"author":{"gitId":"RoeReRe"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":87,"author":{"gitId":"RoeReRe"},"content":"     * Sets the {@code Dosage} of the {@code Prescription} that we are building.","lastModifiedDate":"2023-10-15"},{"lineNumber":88,"author":{"gitId":"RoeReRe"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":89,"author":{"gitId":"RoeReRe"},"content":"    public PrescriptionBuilder withDosage(String dosage) {","lastModifiedDate":"2023-10-15"},{"lineNumber":90,"author":{"gitId":"RoeReRe"},"content":"        this.dosage \u003d new Dosage(dosage);","lastModifiedDate":"2023-10-15"},{"lineNumber":91,"author":{"gitId":"RoeReRe"},"content":"        return this;","lastModifiedDate":"2023-10-15"},{"lineNumber":92,"author":{"gitId":"RoeReRe"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":93,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":94,"author":{"gitId":"RoeReRe"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":95,"author":{"gitId":"RoeReRe"},"content":"     * Sets the {@code Frequency} of the {@code Prescription} that we are building.","lastModifiedDate":"2023-10-15"},{"lineNumber":96,"author":{"gitId":"RoeReRe"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":97,"author":{"gitId":"RoeReRe"},"content":"    public PrescriptionBuilder withFrequency(String frequency) {","lastModifiedDate":"2023-10-15"},{"lineNumber":98,"author":{"gitId":"RoeReRe"},"content":"        this.frequency \u003d new Frequency(frequency);","lastModifiedDate":"2023-10-15"},{"lineNumber":99,"author":{"gitId":"RoeReRe"},"content":"        return this;","lastModifiedDate":"2023-10-15"},{"lineNumber":100,"author":{"gitId":"RoeReRe"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":101,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":102,"author":{"gitId":"RoeReRe"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":103,"author":{"gitId":"RoeReRe"},"content":"     * Sets the {@code Date} of the {@code Prescription} that we are building.","lastModifiedDate":"2023-10-15"},{"lineNumber":104,"author":{"gitId":"RoeReRe"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":105,"author":{"gitId":"RoeReRe"},"content":"    public PrescriptionBuilder withStartDate(String startDate) {","lastModifiedDate":"2023-10-15"},{"lineNumber":106,"author":{"gitId":"RoeReRe"},"content":"        this.startDate \u003d new Date(startDate);","lastModifiedDate":"2023-10-15"},{"lineNumber":107,"author":{"gitId":"RoeReRe"},"content":"        return this;","lastModifiedDate":"2023-10-15"},{"lineNumber":108,"author":{"gitId":"RoeReRe"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":109,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":110,"author":{"gitId":"RoeReRe"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":111,"author":{"gitId":"RoeReRe"},"content":"     * Sets the {@code Date} of the {@code Prescription} that we are building.","lastModifiedDate":"2023-10-15"},{"lineNumber":112,"author":{"gitId":"RoeReRe"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":113,"author":{"gitId":"RoeReRe"},"content":"    public PrescriptionBuilder withEndDate(String endDate) {","lastModifiedDate":"2023-10-15"},{"lineNumber":114,"author":{"gitId":"RoeReRe"},"content":"        this.endDate \u003d new Date(endDate);","lastModifiedDate":"2023-10-15"},{"lineNumber":115,"author":{"gitId":"RoeReRe"},"content":"        return this;","lastModifiedDate":"2023-10-15"},{"lineNumber":116,"author":{"gitId":"RoeReRe"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":117,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":118,"author":{"gitId":"RoeReRe"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":119,"author":{"gitId":"RoeReRe"},"content":"     * Sets the {@code Date} of the {@code Prescription} that we are building.","lastModifiedDate":"2023-10-15"},{"lineNumber":120,"author":{"gitId":"RoeReRe"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":121,"author":{"gitId":"RoeReRe"},"content":"    public PrescriptionBuilder withExpiryDate(String expiryDate) {","lastModifiedDate":"2023-10-15"},{"lineNumber":122,"author":{"gitId":"RoeReRe"},"content":"        this.expiryDate \u003d new Date(expiryDate);","lastModifiedDate":"2023-10-15"},{"lineNumber":123,"author":{"gitId":"RoeReRe"},"content":"        return this;","lastModifiedDate":"2023-10-15"},{"lineNumber":124,"author":{"gitId":"RoeReRe"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":125,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":126,"author":{"gitId":"RoeReRe"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":127,"author":{"gitId":"RoeReRe"},"content":"     * Sets the {@code Stock} of the {@code Prescription} that we are building.","lastModifiedDate":"2023-10-15"},{"lineNumber":128,"author":{"gitId":"RoeReRe"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":129,"author":{"gitId":"RoeReRe"},"content":"    public PrescriptionBuilder withStock(String stock) {","lastModifiedDate":"2023-10-15"},{"lineNumber":130,"author":{"gitId":"RoeReRe"},"content":"        this.totalStock \u003d new Stock(stock);","lastModifiedDate":"2023-10-15"},{"lineNumber":131,"author":{"gitId":"RoeReRe"},"content":"        return this;","lastModifiedDate":"2023-10-15"},{"lineNumber":132,"author":{"gitId":"RoeReRe"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":133,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":134,"author":{"gitId":"jingyu987"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":135,"author":{"gitId":"jingyu987"},"content":"     * Sets the {@code Stock} of the {@code Prescription} that we are building.","lastModifiedDate":"2023-10-16"},{"lineNumber":136,"author":{"gitId":"jingyu987"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":137,"author":{"gitId":"jingyu987"},"content":"    public PrescriptionBuilder withConsumptionCount(String consumptionCount) {","lastModifiedDate":"2023-10-16"},{"lineNumber":138,"author":{"gitId":"jingyu987"},"content":"        this.consumptionCount \u003d new ConsumptionCount(consumptionCount, false);","lastModifiedDate":"2023-10-16"},{"lineNumber":139,"author":{"gitId":"jingyu987"},"content":"        return this;","lastModifiedDate":"2023-10-16"},{"lineNumber":140,"author":{"gitId":"jingyu987"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":141,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":142,"author":{"gitId":"RoeReRe"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":143,"author":{"gitId":"RoeReRe"},"content":"     * Sets the {@code Note} of the {@code Prescription} that we are building.","lastModifiedDate":"2023-10-15"},{"lineNumber":144,"author":{"gitId":"RoeReRe"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":145,"author":{"gitId":"RoeReRe"},"content":"    public PrescriptionBuilder withNote(String note) {","lastModifiedDate":"2023-10-15"},{"lineNumber":146,"author":{"gitId":"RoeReRe"},"content":"        this.note \u003d new Note(note);","lastModifiedDate":"2023-10-15"},{"lineNumber":147,"author":{"gitId":"RoeReRe"},"content":"        return this;","lastModifiedDate":"2023-10-15"},{"lineNumber":148,"author":{"gitId":"RoeReRe"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":149,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":150,"author":{"gitId":"jingyu987"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":151,"author":{"gitId":"jingyu987"},"content":"     * Builds the {@code Prescription} with the fields previously set.","lastModifiedDate":"2023-10-16"},{"lineNumber":152,"author":{"gitId":"jingyu987"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":153,"author":{"gitId":"RoeReRe"},"content":"    public Prescription build() {","lastModifiedDate":"2023-10-15"},{"lineNumber":154,"author":{"gitId":"jingyu987"},"content":"        return new Prescription(name, dosage, frequency, startDate, endDate, expiryDate, totalStock, consumptionCount,","lastModifiedDate":"2023-10-16"},{"lineNumber":155,"author":{"gitId":"jingyu987"},"content":"                                note);","lastModifiedDate":"2023-10-16"},{"lineNumber":156,"author":{"gitId":"RoeReRe"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":157,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":158,"author":{"gitId":"RoeReRe"},"content":"}","lastModifiedDate":"2023-10-15"}],"authorContributionMap":{"jingyu987":18,"RoeReRe":140}},{"path":"src/test/java/seedu/address/testutil/PrescriptionListBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"RoeReRe"},"content":"package seedu.address.testutil;","lastModifiedDate":"2023-10-15"},{"lineNumber":2,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":3,"author":{"gitId":"RoeReRe"},"content":"import seedu.address.model.PrescriptionList;","lastModifiedDate":"2023-10-15"},{"lineNumber":4,"author":{"gitId":"RoeReRe"},"content":"import seedu.address.model.prescription.Prescription;","lastModifiedDate":"2023-10-15"},{"lineNumber":5,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":6,"author":{"gitId":"RoeReRe"},"content":"/**","lastModifiedDate":"2023-10-15"},{"lineNumber":7,"author":{"gitId":"RoeReRe"},"content":" * A utility class to help with building PrescriptionList objects.","lastModifiedDate":"2023-10-15"},{"lineNumber":8,"author":{"gitId":"RoeReRe"},"content":" * Example usage: \u003cbr\u003e","lastModifiedDate":"2023-10-15"},{"lineNumber":9,"author":{"gitId":"RoeReRe"},"content":" *     {@code PrescriptionList pl \u003d new PrescriptionListBuilder().withPrescription(PrescA, PrescB).build();}","lastModifiedDate":"2023-10-15"},{"lineNumber":10,"author":{"gitId":"RoeReRe"},"content":" */","lastModifiedDate":"2023-10-15"},{"lineNumber":11,"author":{"gitId":"RoeReRe"},"content":"public class PrescriptionListBuilder {","lastModifiedDate":"2023-10-15"},{"lineNumber":12,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":13,"author":{"gitId":"RoeReRe"},"content":"    private PrescriptionList prescriptionList;","lastModifiedDate":"2023-10-15"},{"lineNumber":14,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":15,"author":{"gitId":"RoeReRe"},"content":"    public PrescriptionListBuilder() {","lastModifiedDate":"2023-10-15"},{"lineNumber":16,"author":{"gitId":"RoeReRe"},"content":"        prescriptionList \u003d new PrescriptionList();","lastModifiedDate":"2023-10-15"},{"lineNumber":17,"author":{"gitId":"RoeReRe"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":18,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":19,"author":{"gitId":"RoeReRe"},"content":"    public PrescriptionListBuilder(PrescriptionList prescriptionList) {","lastModifiedDate":"2023-10-15"},{"lineNumber":20,"author":{"gitId":"RoeReRe"},"content":"        this.prescriptionList \u003d prescriptionList;","lastModifiedDate":"2023-10-15"},{"lineNumber":21,"author":{"gitId":"RoeReRe"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":22,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":23,"author":{"gitId":"RoeReRe"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":24,"author":{"gitId":"RoeReRe"},"content":"     * Adds a new {@code Prescription} to the {@code PrescriptionList} that we are building.","lastModifiedDate":"2023-10-15"},{"lineNumber":25,"author":{"gitId":"RoeReRe"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":26,"author":{"gitId":"RoeReRe"},"content":"    public PrescriptionListBuilder withPrescription(Prescription prescription) {","lastModifiedDate":"2023-10-15"},{"lineNumber":27,"author":{"gitId":"RoeReRe"},"content":"        prescriptionList.addPrescription(prescription);","lastModifiedDate":"2023-10-15"},{"lineNumber":28,"author":{"gitId":"RoeReRe"},"content":"        return this;","lastModifiedDate":"2023-10-15"},{"lineNumber":29,"author":{"gitId":"RoeReRe"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":30,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":31,"author":{"gitId":"RoeReRe"},"content":"    public PrescriptionList build() {","lastModifiedDate":"2023-10-15"},{"lineNumber":32,"author":{"gitId":"RoeReRe"},"content":"        return prescriptionList;","lastModifiedDate":"2023-10-15"},{"lineNumber":33,"author":{"gitId":"RoeReRe"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":34,"author":{"gitId":"RoeReRe"},"content":"}","lastModifiedDate":"2023-10-15"}],"authorContributionMap":{"RoeReRe":34}},{"path":"src/test/java/seedu/address/testutil/PrescriptionUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"RoeReRe"},"content":"package seedu.address.testutil;","lastModifiedDate":"2023-10-15"},{"lineNumber":2,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":3,"author":{"gitId":"RoeReRe"},"content":"import static seedu.address.logic.parser.CliSyntaxPrescription.PREFIX_DOSAGE;","lastModifiedDate":"2023-10-15"},{"lineNumber":4,"author":{"gitId":"RoeReRe"},"content":"import static seedu.address.logic.parser.CliSyntaxPrescription.PREFIX_END_DATE;","lastModifiedDate":"2023-10-15"},{"lineNumber":5,"author":{"gitId":"RoeReRe"},"content":"import static seedu.address.logic.parser.CliSyntaxPrescription.PREFIX_EXPIRY_DATE;","lastModifiedDate":"2023-10-15"},{"lineNumber":6,"author":{"gitId":"RoeReRe"},"content":"import static seedu.address.logic.parser.CliSyntaxPrescription.PREFIX_FREQUENCY;","lastModifiedDate":"2023-10-15"},{"lineNumber":7,"author":{"gitId":"RoeReRe"},"content":"import static seedu.address.logic.parser.CliSyntaxPrescription.PREFIX_NAME;","lastModifiedDate":"2023-10-15"},{"lineNumber":8,"author":{"gitId":"RoeReRe"},"content":"import static seedu.address.logic.parser.CliSyntaxPrescription.PREFIX_NOTE;","lastModifiedDate":"2023-10-15"},{"lineNumber":9,"author":{"gitId":"RoeReRe"},"content":"import static seedu.address.logic.parser.CliSyntaxPrescription.PREFIX_START_DATE;","lastModifiedDate":"2023-10-15"},{"lineNumber":10,"author":{"gitId":"RoeReRe"},"content":"import static seedu.address.logic.parser.CliSyntaxPrescription.PREFIX_TOTAL_STOCK;","lastModifiedDate":"2023-10-15"},{"lineNumber":11,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":12,"author":{"gitId":"RoeReRe"},"content":"import seedu.address.logic.commands.AddPrescriptionCommand;","lastModifiedDate":"2023-10-16"},{"lineNumber":13,"author":{"gitId":"RoeReRe"},"content":"import seedu.address.model.prescription.Prescription;","lastModifiedDate":"2023-10-16"},{"lineNumber":14,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":15,"author":{"gitId":"RoeReRe"},"content":"/**","lastModifiedDate":"2023-10-15"},{"lineNumber":16,"author":{"gitId":"RoeReRe"},"content":" * A utility class for Prescription.","lastModifiedDate":"2023-10-15"},{"lineNumber":17,"author":{"gitId":"RoeReRe"},"content":" */","lastModifiedDate":"2023-10-15"},{"lineNumber":18,"author":{"gitId":"RoeReRe"},"content":"public class PrescriptionUtil {","lastModifiedDate":"2023-10-15"},{"lineNumber":19,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":20,"author":{"gitId":"RoeReRe"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":21,"author":{"gitId":"RoeReRe"},"content":"     * Returns an add command string for adding the {@code prescription}.","lastModifiedDate":"2023-10-15"},{"lineNumber":22,"author":{"gitId":"RoeReRe"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":23,"author":{"gitId":"RoeReRe"},"content":"    public static String getAddPrescriptionCommand(Prescription prescription) {","lastModifiedDate":"2023-10-15"},{"lineNumber":24,"author":{"gitId":"RoeReRe"},"content":"        return AddPrescriptionCommand.COMMAND_WORD + \" \" + getPrescriptionDetails(prescription);","lastModifiedDate":"2023-10-15"},{"lineNumber":25,"author":{"gitId":"RoeReRe"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":26,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":27,"author":{"gitId":"RoeReRe"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":28,"author":{"gitId":"RoeReRe"},"content":"     * Returns the part of command string for the given {@code prescription}\u0027s details.","lastModifiedDate":"2023-10-15"},{"lineNumber":29,"author":{"gitId":"RoeReRe"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":30,"author":{"gitId":"RoeReRe"},"content":"    public static String getPrescriptionDetails(Prescription prescription) {","lastModifiedDate":"2023-10-15"},{"lineNumber":31,"author":{"gitId":"RoeReRe"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-10-15"},{"lineNumber":32,"author":{"gitId":"RoeReRe"},"content":"        sb.append(PREFIX_NAME + prescription.getName().fullName + \" \");","lastModifiedDate":"2023-10-15"},{"lineNumber":33,"author":{"gitId":"RoeReRe"},"content":"        sb.append(PREFIX_DOSAGE + prescription.getDosage().fullDosage + \" \");","lastModifiedDate":"2023-10-15"},{"lineNumber":34,"author":{"gitId":"RoeReRe"},"content":"        sb.append(PREFIX_FREQUENCY + prescription.getFrequency().fullFrequency + \" \");","lastModifiedDate":"2023-10-15"},{"lineNumber":35,"author":{"gitId":"RoeReRe"},"content":"        sb.append(PREFIX_START_DATE + prescription.getStartDate().fullDate + \" \");","lastModifiedDate":"2023-10-15"},{"lineNumber":36,"author":{"gitId":"RoeReRe"},"content":"        sb.append(PREFIX_END_DATE + prescription.getEndDate().fullDate + \" \");","lastModifiedDate":"2023-10-15"},{"lineNumber":37,"author":{"gitId":"RoeReRe"},"content":"        sb.append(PREFIX_EXPIRY_DATE + prescription.getExpiryDate().fullDate + \" \");","lastModifiedDate":"2023-10-15"},{"lineNumber":38,"author":{"gitId":"jingyu987"},"content":"        sb.append(PREFIX_TOTAL_STOCK + prescription.getTotalStock().getFullStock() + \" \");","lastModifiedDate":"2023-10-16"},{"lineNumber":39,"author":{"gitId":"RoeReRe"},"content":"        sb.append(PREFIX_NOTE + prescription.getNote().fullNote + \" \");","lastModifiedDate":"2023-10-15"},{"lineNumber":40,"author":{"gitId":"RoeReRe"},"content":"        // person.getTags().stream().forEach(","lastModifiedDate":"2023-10-15"},{"lineNumber":41,"author":{"gitId":"RoeReRe"},"content":"        //     s -\u003e sb.append(PREFIX_TAG + s.tagName + \" \")","lastModifiedDate":"2023-10-15"},{"lineNumber":42,"author":{"gitId":"RoeReRe"},"content":"        // );","lastModifiedDate":"2023-10-15"},{"lineNumber":43,"author":{"gitId":"RoeReRe"},"content":"        return sb.toString();","lastModifiedDate":"2023-10-15"},{"lineNumber":44,"author":{"gitId":"RoeReRe"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":45,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":46,"author":{"gitId":"RoeReRe"},"content":"}","lastModifiedDate":"2023-10-15"}],"authorContributionMap":{"jingyu987":1,"RoeReRe":45}},{"path":"src/test/java/seedu/address/testutil/TypicalIndexes.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-08-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Index} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class TypicalIndexes {","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Index INDEX_FIRST_PERSON \u003d Index.fromOneBased(1);","lastModifiedDate":"2017-08-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Index INDEX_SECOND_PERSON \u003d Index.fromOneBased(2);","lastModifiedDate":"2017-08-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Index INDEX_THIRD_PERSON \u003d Index.fromOneBased(3);","lastModifiedDate":"2017-08-05"},{"lineNumber":12,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":13,"author":{"gitId":"RoeReRe"},"content":"    public static final Index INDEX_FIRST_PRESCRIPTION \u003d Index.fromOneBased(1);","lastModifiedDate":"2023-10-15"},{"lineNumber":14,"author":{"gitId":"RoeReRe"},"content":"    public static final Index INDEX_SECOND_PRESCRIPTION \u003d Index.fromOneBased(2);","lastModifiedDate":"2023-10-15"},{"lineNumber":15,"author":{"gitId":"RoeReRe"},"content":"    public static final Index INDEX_THIRD_PRESCRIPTION \u003d Index.fromOneBased(3);","lastModifiedDate":"2023-10-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-08-05"}],"authorContributionMap":{"RoeReRe":4,"-":12}},{"path":"src/test/java/seedu/address/testutil/TypicalPrescriptions.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"RoeReRe"},"content":"package seedu.address.testutil;","lastModifiedDate":"2023-10-15"},{"lineNumber":2,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":3,"author":{"gitId":"RoeReRe"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-15"},{"lineNumber":4,"author":{"gitId":"RoeReRe"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-10-15"},{"lineNumber":5,"author":{"gitId":"RoeReRe"},"content":"import java.util.List;","lastModifiedDate":"2023-10-15"},{"lineNumber":6,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":7,"author":{"gitId":"RoeReRe"},"content":"import seedu.address.model.PrescriptionList;","lastModifiedDate":"2023-10-15"},{"lineNumber":8,"author":{"gitId":"RoeReRe"},"content":"import seedu.address.model.prescription.Prescription;","lastModifiedDate":"2023-10-15"},{"lineNumber":9,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":10,"author":{"gitId":"RoeReRe"},"content":"/**","lastModifiedDate":"2023-10-15"},{"lineNumber":11,"author":{"gitId":"RoeReRe"},"content":" * A utility class containing a list of {@code Prescription} objects to be used in tests.","lastModifiedDate":"2023-10-15"},{"lineNumber":12,"author":{"gitId":"RoeReRe"},"content":" */","lastModifiedDate":"2023-10-15"},{"lineNumber":13,"author":{"gitId":"RoeReRe"},"content":"public class TypicalPrescriptions {","lastModifiedDate":"2023-10-15"},{"lineNumber":14,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":15,"author":{"gitId":"RoeReRe"},"content":"    public static final Prescription ASPIRIN \u003d new PrescriptionBuilder().withName(\"Aspirin\")","lastModifiedDate":"2023-10-15"},{"lineNumber":16,"author":{"gitId":"RoeReRe"},"content":"        .withDosage(\"1\")","lastModifiedDate":"2023-10-15"},{"lineNumber":17,"author":{"gitId":"RoeReRe"},"content":"        .withFrequency(\"Daily\")","lastModifiedDate":"2023-10-15"},{"lineNumber":18,"author":{"gitId":"RoeReRe"},"content":"        .withStartDate(\"01/10/2023\")","lastModifiedDate":"2023-10-15"},{"lineNumber":19,"author":{"gitId":"RoeReRe"},"content":"        .withEndDate(\"23/02/2024\")","lastModifiedDate":"2023-10-15"},{"lineNumber":20,"author":{"gitId":"RoeReRe"},"content":"        .withExpiryDate(\"12/12/2024\")","lastModifiedDate":"2023-10-15"},{"lineNumber":21,"author":{"gitId":"RoeReRe"},"content":"        .withStock(\"100\")","lastModifiedDate":"2023-10-15"},{"lineNumber":22,"author":{"gitId":"jingyu987"},"content":"        .withConsumptionCount(\"0\")","lastModifiedDate":"2023-10-16"},{"lineNumber":23,"author":{"gitId":"RoeReRe"},"content":"        .withNote(\"Take after food\")","lastModifiedDate":"2023-10-15"},{"lineNumber":24,"author":{"gitId":"RoeReRe"},"content":"        .build();","lastModifiedDate":"2023-10-15"},{"lineNumber":25,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":26,"author":{"gitId":"RoeReRe"},"content":"    public static final Prescription PROPRANOLOL \u003d new PrescriptionBuilder().withName(\"Propranolol\")","lastModifiedDate":"2023-10-15"},{"lineNumber":27,"author":{"gitId":"RoeReRe"},"content":"        .withDosage(\"4\")","lastModifiedDate":"2023-10-15"},{"lineNumber":28,"author":{"gitId":"RoeReRe"},"content":"        .withFrequency(\"Daily\")","lastModifiedDate":"2023-10-15"},{"lineNumber":29,"author":{"gitId":"RoeReRe"},"content":"        .withStartDate(\"01/08/2023\")","lastModifiedDate":"2023-10-15"},{"lineNumber":30,"author":{"gitId":"RoeReRe"},"content":"        .withEndDate(\"20/12/2024\")","lastModifiedDate":"2023-10-15"},{"lineNumber":31,"author":{"gitId":"RoeReRe"},"content":"        .withExpiryDate(\"22/07/2024\")","lastModifiedDate":"2023-10-15"},{"lineNumber":32,"author":{"gitId":"RoeReRe"},"content":"        .withStock(\"500\")","lastModifiedDate":"2023-10-15"},{"lineNumber":33,"author":{"gitId":"jingyu987"},"content":"        .withConsumptionCount(\"0\")","lastModifiedDate":"2023-10-16"},{"lineNumber":34,"author":{"gitId":"RoeReRe"},"content":"        .withNote(\"Take after food\")","lastModifiedDate":"2023-10-15"},{"lineNumber":35,"author":{"gitId":"RoeReRe"},"content":"        .build();","lastModifiedDate":"2023-10-15"},{"lineNumber":36,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":37,"author":{"gitId":"RoeReRe"},"content":"    public static final Prescription ERGOTAMINE \u003d new PrescriptionBuilder().withName(\"Ergotamine\")","lastModifiedDate":"2023-10-15"},{"lineNumber":38,"author":{"gitId":"RoeReRe"},"content":"        .withDosage(\"1\")","lastModifiedDate":"2023-10-15"},{"lineNumber":39,"author":{"gitId":"RoeReRe"},"content":"        .withFrequency(\"Weekly\")","lastModifiedDate":"2023-10-15"},{"lineNumber":40,"author":{"gitId":"RoeReRe"},"content":"        .withStartDate(\"01/08/2023\")","lastModifiedDate":"2023-10-15"},{"lineNumber":41,"author":{"gitId":"RoeReRe"},"content":"        .withEndDate(\"20/12/2024\")","lastModifiedDate":"2023-10-15"},{"lineNumber":42,"author":{"gitId":"RoeReRe"},"content":"        .withExpiryDate(\"22/07/2024\")","lastModifiedDate":"2023-10-15"},{"lineNumber":43,"author":{"gitId":"RoeReRe"},"content":"        .withStock(\"50\")","lastModifiedDate":"2023-10-15"},{"lineNumber":44,"author":{"gitId":"jingyu987"},"content":"        .withConsumptionCount(\"0\")","lastModifiedDate":"2023-10-16"},{"lineNumber":45,"author":{"gitId":"RoeReRe"},"content":"        .withNote(\"Take before food\")","lastModifiedDate":"2023-10-15"},{"lineNumber":46,"author":{"gitId":"RoeReRe"},"content":"        .build();","lastModifiedDate":"2023-10-15"},{"lineNumber":47,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":48,"author":{"gitId":"RoeReRe"},"content":"    public static final Prescription NAPROXEN \u003d new PrescriptionBuilder().withName(\"Naproxen\")","lastModifiedDate":"2023-10-15"},{"lineNumber":49,"author":{"gitId":"RoeReRe"},"content":"        .withDosage(\"2\")","lastModifiedDate":"2023-10-15"},{"lineNumber":50,"author":{"gitId":"RoeReRe"},"content":"        .withFrequency(\"Weekly\")","lastModifiedDate":"2023-10-15"},{"lineNumber":51,"author":{"gitId":"RoeReRe"},"content":"        .withStartDate(\"01/08/2023\")","lastModifiedDate":"2023-10-15"},{"lineNumber":52,"author":{"gitId":"RoeReRe"},"content":"        .withEndDate(\"20/06/2024\")","lastModifiedDate":"2023-10-15"},{"lineNumber":53,"author":{"gitId":"RoeReRe"},"content":"        .withExpiryDate(\"13/01/2025\")","lastModifiedDate":"2023-10-15"},{"lineNumber":54,"author":{"gitId":"RoeReRe"},"content":"        .withStock(\"75\")","lastModifiedDate":"2023-10-15"},{"lineNumber":55,"author":{"gitId":"jingyu987"},"content":"        .withConsumptionCount(\"0\")","lastModifiedDate":"2023-10-16"},{"lineNumber":56,"author":{"gitId":"RoeReRe"},"content":"        .withNote(\"Take before food\")","lastModifiedDate":"2023-10-15"},{"lineNumber":57,"author":{"gitId":"RoeReRe"},"content":"        .build();","lastModifiedDate":"2023-10-15"},{"lineNumber":58,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":59,"author":{"gitId":"RoeReRe"},"content":"    public static final Prescription ZOMIG \u003d new PrescriptionBuilder().withName(\"Zolmitriptan Rapimelt\")","lastModifiedDate":"2023-10-15"},{"lineNumber":60,"author":{"gitId":"RoeReRe"},"content":"        .withDosage(\"1\")","lastModifiedDate":"2023-10-15"},{"lineNumber":61,"author":{"gitId":"RoeReRe"},"content":"        .withFrequency(\"Monthly\")","lastModifiedDate":"2023-10-15"},{"lineNumber":62,"author":{"gitId":"RoeReRe"},"content":"        .withStartDate(\"12/10/2023\")","lastModifiedDate":"2023-10-15"},{"lineNumber":63,"author":{"gitId":"RoeReRe"},"content":"        .withEndDate(\"12/10/2024\")","lastModifiedDate":"2023-10-15"},{"lineNumber":64,"author":{"gitId":"RoeReRe"},"content":"        .withExpiryDate(\"15/03/2025\")","lastModifiedDate":"2023-10-15"},{"lineNumber":65,"author":{"gitId":"RoeReRe"},"content":"        .withStock(\"20\")","lastModifiedDate":"2023-10-15"},{"lineNumber":66,"author":{"gitId":"jingyu987"},"content":"        .withConsumptionCount(\"0\")","lastModifiedDate":"2023-10-16"},{"lineNumber":67,"author":{"gitId":"RoeReRe"},"content":"        .withNote(\"Drowsy\")","lastModifiedDate":"2023-10-15"},{"lineNumber":68,"author":{"gitId":"RoeReRe"},"content":"        .build();","lastModifiedDate":"2023-10-15"},{"lineNumber":69,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":70,"author":{"gitId":"RoeReRe"},"content":"    // Manually added","lastModifiedDate":"2023-10-15"},{"lineNumber":71,"author":{"gitId":"RoeReRe"},"content":"    public static final Prescription IBUPROFEN \u003d new PrescriptionBuilder().withName(\"Ibuprofen\")","lastModifiedDate":"2023-10-15"},{"lineNumber":72,"author":{"gitId":"RoeReRe"},"content":"        .withDosage(\"2\")","lastModifiedDate":"2023-10-15"},{"lineNumber":73,"author":{"gitId":"RoeReRe"},"content":"        .withFrequency(\"Daily\")","lastModifiedDate":"2023-10-15"},{"lineNumber":74,"author":{"gitId":"RoeReRe"},"content":"        .withStartDate(\"12/10/2023\")","lastModifiedDate":"2023-10-15"},{"lineNumber":75,"author":{"gitId":"RoeReRe"},"content":"        .withEndDate(\"12/10/2024\")","lastModifiedDate":"2023-10-15"},{"lineNumber":76,"author":{"gitId":"RoeReRe"},"content":"        .withExpiryDate(\"15/03/2025\")","lastModifiedDate":"2023-10-15"},{"lineNumber":77,"author":{"gitId":"RoeReRe"},"content":"        .withStock(\"50\")","lastModifiedDate":"2023-10-15"},{"lineNumber":78,"author":{"gitId":"jingyu987"},"content":"        .withConsumptionCount(\"0\")","lastModifiedDate":"2023-10-16"},{"lineNumber":79,"author":{"gitId":"RoeReRe"},"content":"        .withNote(\"Take after food\")","lastModifiedDate":"2023-10-15"},{"lineNumber":80,"author":{"gitId":"RoeReRe"},"content":"        .build();","lastModifiedDate":"2023-10-15"},{"lineNumber":81,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":82,"author":{"gitId":"RoeReRe"},"content":"    public static final Prescription CAFFOX \u003d new PrescriptionBuilder().withName(\"Caffox\")","lastModifiedDate":"2023-10-15"},{"lineNumber":83,"author":{"gitId":"RoeReRe"},"content":"        .withDosage(\"1\")","lastModifiedDate":"2023-10-15"},{"lineNumber":84,"author":{"gitId":"RoeReRe"},"content":"        .withFrequency(\"Daily\")","lastModifiedDate":"2023-10-15"},{"lineNumber":85,"author":{"gitId":"RoeReRe"},"content":"        .withStartDate(\"12/10/2023\")","lastModifiedDate":"2023-10-15"},{"lineNumber":86,"author":{"gitId":"RoeReRe"},"content":"        .withEndDate(\"12/10/2024\")","lastModifiedDate":"2023-10-15"},{"lineNumber":87,"author":{"gitId":"RoeReRe"},"content":"        .withExpiryDate(\"15/03/2025\")","lastModifiedDate":"2023-10-15"},{"lineNumber":88,"author":{"gitId":"RoeReRe"},"content":"        .withStock(\"20\")","lastModifiedDate":"2023-10-15"},{"lineNumber":89,"author":{"gitId":"jingyu987"},"content":"        .withConsumptionCount(\"0\")","lastModifiedDate":"2023-10-16"},{"lineNumber":90,"author":{"gitId":"RoeReRe"},"content":"        .withNote(\"Take before food\")","lastModifiedDate":"2023-10-15"},{"lineNumber":91,"author":{"gitId":"RoeReRe"},"content":"        .build();","lastModifiedDate":"2023-10-15"},{"lineNumber":92,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":93,"author":{"gitId":"RoeReRe"},"content":"    private TypicalPrescriptions() {} // prevents instantiation","lastModifiedDate":"2023-10-15"},{"lineNumber":94,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":95,"author":{"gitId":"RoeReRe"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":96,"author":{"gitId":"RoeReRe"},"content":"     * Returns an {@code PrescriptionList} with all the typical prescriptions.","lastModifiedDate":"2023-10-15"},{"lineNumber":97,"author":{"gitId":"RoeReRe"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":98,"author":{"gitId":"RoeReRe"},"content":"    public static PrescriptionList getTypicalPrescriptionList() {","lastModifiedDate":"2023-10-15"},{"lineNumber":99,"author":{"gitId":"RoeReRe"},"content":"        PrescriptionList pl \u003d new PrescriptionList();","lastModifiedDate":"2023-10-15"},{"lineNumber":100,"author":{"gitId":"RoeReRe"},"content":"        for (Prescription prescription : getTypicalPrescriptions()) {","lastModifiedDate":"2023-10-15"},{"lineNumber":101,"author":{"gitId":"RoeReRe"},"content":"            pl.addPrescription(prescription);","lastModifiedDate":"2023-10-15"},{"lineNumber":102,"author":{"gitId":"RoeReRe"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":103,"author":{"gitId":"RoeReRe"},"content":"        return pl;","lastModifiedDate":"2023-10-15"},{"lineNumber":104,"author":{"gitId":"RoeReRe"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":105,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":106,"author":{"gitId":"RoeReRe"},"content":"    public static List\u003cPrescription\u003e getTypicalPrescriptions() {","lastModifiedDate":"2023-10-15"},{"lineNumber":107,"author":{"gitId":"RoeReRe"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ASPIRIN, PROPRANOLOL, ERGOTAMINE, NAPROXEN, ZOMIG));","lastModifiedDate":"2023-10-15"},{"lineNumber":108,"author":{"gitId":"RoeReRe"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":109,"author":{"gitId":"RoeReRe"},"content":"}","lastModifiedDate":"2023-10-15"}],"authorContributionMap":{"jingyu987":7,"RoeReRe":102}}]

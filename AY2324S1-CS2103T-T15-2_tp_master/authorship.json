[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"RoeReRe"},"content":"[![CI Status](https://github.com/AY2324S1-CS2103T-T15-2/tp/actions/workflows/gradle.yml/badge.svg)](https://github.com/AY2324S1-CS2103T-T15-2/tp/actions)","lastModifiedDate":"2023-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"ChongWeiJie29"},"content":"# BayMeds v.2103","lastModifiedDate":"2023-10-01"},{"lineNumber":4,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":5,"author":{"gitId":"ChongWeiJie29"},"content":"### UI Mockup","lastModifiedDate":"2023-10-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":9,"author":{"gitId":"ChongWeiJie29"},"content":"### Description","lastModifiedDate":"2023-10-01"},{"lineNumber":10,"author":{"gitId":"RoeReRe"},"content":"* This is **prescription management app for patients**.\u003cbr\u003e","lastModifiedDate":"2023-10-04"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  Example usages:","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"RoeReRe"},"content":"  * Track prescription needs, dosage and related health information.","lastModifiedDate":"2023-10-04"},{"lineNumber":13,"author":{"gitId":"RoeReRe"},"content":"  * Receive reminders to consume and refill medication.","lastModifiedDate":"2023-09-26"},{"lineNumber":14,"author":{"gitId":"ChongWeiJie29"},"content":"* It is named BayMeds v.2103 as it is inspired from the Disney character Baymax, who serves as a personal healthcare companion.","lastModifiedDate":"2023-10-01"},{"lineNumber":15,"author":{"gitId":"RoeReRe"},"content":"* For the detailed documentation of this project, see the **[BayMeds v.2103 Product Website](https://ay2324s1-cs2103t-t15-2.github.io/tp/)**.","lastModifiedDate":"2023-09-25"},{"lineNumber":16,"author":{"gitId":"RoeReRe"},"content":"* This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2023-09-25"}],"authorContributionMap":{"ChongWeiJie29":6,"RoeReRe":6,"-":4}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  layout: default.md","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  title: \"About Us\"","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"# About Us","lastModifiedDate":"2023-09-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"You can reach us at the email `seer[at]comp.nus.edu.sg`","lastModifiedDate":"2020-06-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"RoeReRe"},"content":"### Wei Xiang","lastModifiedDate":"2023-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"RoeReRe"},"content":"\u003cimg src\u003d\"images/roerere.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"RoeReRe"},"content":"[[github](https://github.com/roerere)]","lastModifiedDate":"2023-09-25"},{"lineNumber":19,"author":{"gitId":"RoeReRe"},"content":"[[portfolio](team/roerere.md)]","lastModifiedDate":"2023-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"RoeReRe"},"content":"* Role: Developer","lastModifiedDate":"2023-10-04"},{"lineNumber":22,"author":{"gitId":"RoeReRe"},"content":"* Responsibilities: Code Quality","lastModifiedDate":"2023-10-04"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"TeeRenJing"},"content":"### Ren Jing","lastModifiedDate":"2023-09-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":26,"author":{"gitId":"TeeRenJing"},"content":"\u003cimg src\u003d\"images/teerenjing.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-09-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":28,"author":{"gitId":"TeeRenJing"},"content":"[[github](https://github.com/TeeRenJing)]","lastModifiedDate":"2023-09-26"},{"lineNumber":29,"author":{"gitId":"TeeRenJing"},"content":"[[portfolio](team/teerenjing.md)]","lastModifiedDate":"2023-09-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":31,"author":{"gitId":"TeeRenJing"},"content":"* Role: Developer","lastModifiedDate":"2023-09-26"},{"lineNumber":32,"author":{"gitId":"RoeReRe"},"content":"* Responsibilities: Testing","lastModifiedDate":"2023-10-04"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":34,"author":{"gitId":"shyanyong"},"content":"### Shyan-Yong","lastModifiedDate":"2023-09-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"shyanyong"},"content":"\u003cimg src\u003d\"images/shyanyong.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-09-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"shyanyong"},"content":"[[github](http://github.com/shyanyong)]","lastModifiedDate":"2023-09-27"},{"lineNumber":39,"author":{"gitId":"shyanyong"},"content":"[[portfolio](team/shyanyong.md)]","lastModifiedDate":"2023-09-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"* Role: Team Lead","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"* Responsibilities: UI","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"jingyu987"},"content":"### Jing Yu","lastModifiedDate":"2023-09-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"jingyu987"},"content":"\u003cimg src\u003d\"images/jingyu987.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-09-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"jingyu987"},"content":"[[github](http://github.com/jingyu987)]","lastModifiedDate":"2023-09-27"},{"lineNumber":49,"author":{"gitId":"jingyu987"},"content":"[[portfolio](team/jingyu987.md)]","lastModifiedDate":"2023-09-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"* Responsibilities: Data","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"ChongWeiJie29"},"content":"### Wei Jie","lastModifiedDate":"2023-10-01"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"ChongWeiJie29"},"content":"\u003cimg src\u003d\"images/chongweijie29.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-10-01"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"ChongWeiJie29"},"content":"[[github](http://github.com/chongweijie29)]","lastModifiedDate":"2023-10-01"},{"lineNumber":59,"author":{"gitId":"ChongWeiJie29"},"content":"[[portfolio](team/chongweijie29.md)]","lastModifiedDate":"2023-10-01"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"ChongWeiJie29"},"content":"* Role: Integration, Developer","lastModifiedDate":"2023-10-01"},{"lineNumber":62,"author":{"gitId":"ChongWeiJie29"},"content":"* Responsibilities: Logic","lastModifiedDate":"2023-10-01"}],"authorContributionMap":{"TeeRenJing":5,"jingyu987":4,"shyanyong":4,"ChongWeiJie29":6,"RoeReRe":7,"-":36}},{"path":"docs/DevOps.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  layout: default.md","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  title: \"DevOps guide\"","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"  pageNav: 3","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"# DevOps guide","lastModifiedDate":"2023-09-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c!-- * Table of Contents --\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003cpage-nav-print /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003c!-- -------------------------------------------------------------------------------------------------------------------- --\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"## Build automation","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"This project uses Gradle for **build automation and dependency management**. **You are recommended to read [this Gradle Tutorial from the se-edu/guides](https://se-education.org/guides/tutorials/gradle.html)**.","lastModifiedDate":"2020-06-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Given below are how to use Gradle for some important project tasks.","lastModifiedDate":"2020-05-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"* **`clean`**: Deletes the files created during the previous build tasks (e.g. files in the `build` folder).\u003cbr\u003e","lastModifiedDate":"2020-05-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  e.g. `./gradlew clean`","lastModifiedDate":"2020-05-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"* **`shadowJar`**: Uses the ShadowJar plugin to creat a fat JAR file in the `build/lib` folder, *if the current file is outdated*.\u003cbr\u003e","lastModifiedDate":"2020-05-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  e.g. `./gradlew shadowJar`.","lastModifiedDate":"2020-05-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"* **`run`**: Builds and runs the application.\u003cbr\u003e","lastModifiedDate":"2020-05-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"  **`runShadow`**: Builds the application as a fat JAR, and then runs it.","lastModifiedDate":"2020-05-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"* **`checkstyleMain`**: Runs the code style check for the main code base.\u003cbr\u003e","lastModifiedDate":"2020-05-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  **`checkstyleTest`**: Runs the code style check for the test code base.","lastModifiedDate":"2020-05-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"* **`test`**: Runs all tests.","lastModifiedDate":"2023-01-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"  * `./gradlew test` — Runs all tests","lastModifiedDate":"2020-05-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"  * `./gradlew clean test` — Cleans the project and runs tests","lastModifiedDate":"2020-05-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"## Continuous integration (CI)","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"This project uses GitHub Actions for CI. The project comes with the necessary GitHub Actions configurations files (in the `.github/workflows` folder). No further setting up required.","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"### Code coverage","lastModifiedDate":"2020-08-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"As part of CI, this project uses Codecov to generate coverage reports. When CI runs, it will generate code coverage data (based on the tests run by CI) and upload that data to the CodeCov website, which in turn can provide you more info about the coverage of your tests.","lastModifiedDate":"2023-02-02"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"However, because Codecov is known to run into intermittent problems (e.g., report upload fails) due to issues on the Codecov service side, the CI is configured to pass even if the Codecov task failed. Therefore, developers are advised to check the code coverage levels periodically and take corrective actions if the coverage level falls below desired levels.","lastModifiedDate":"2023-02-02"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"To enable Codecov for forks of this project, follow the steps given in [this se-edu guide](https://se-education.org/guides/tutorials/codecov.html).","lastModifiedDate":"2023-02-02"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-01-01"},{"lineNumber":52,"author":{"gitId":"-"},"content":"### Repository-wide checks","lastModifiedDate":"2020-07-28"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":54,"author":{"gitId":"-"},"content":"In addition to running Gradle checks, CI includes some repository-wide checks. Unlike the Gradle checks which only cover files used in the build process, these repository-wide checks cover all files in the repository. They check for repository rules which are hard to enforce on development machines such as line ending requirements.","lastModifiedDate":"2020-07-28"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":56,"author":{"gitId":"-"},"content":"These checks are implemented as POSIX shell scripts, and thus can only be run on POSIX-compliant operating systems such as macOS and Linux. To run all checks locally on these operating systems, execute the following in the repository root directory:","lastModifiedDate":"2020-07-28"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":58,"author":{"gitId":"-"},"content":"`./config/travis/run-checks.sh`","lastModifiedDate":"2020-07-28"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":60,"author":{"gitId":"-"},"content":"Any warnings or errors will be printed out to the console.","lastModifiedDate":"2020-07-28"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":62,"author":{"gitId":"-"},"content":"**If adding new checks:**","lastModifiedDate":"2020-07-28"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":64,"author":{"gitId":"-"},"content":"* Checks are implemented as executable `check-*` scripts within the `.github` directory. The `run-checks.sh` script will automatically pick up and run files named as such. That is, you can add more such files if you need and the CI will do the rest.","lastModifiedDate":"2020-07-28"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":66,"author":{"gitId":"-"},"content":"* Check scripts should print out errors in the format `SEVERITY:FILENAME:LINE: MESSAGE`","lastModifiedDate":"2020-07-28"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  * SEVERITY is either ERROR or WARN.","lastModifiedDate":"2020-07-28"},{"lineNumber":68,"author":{"gitId":"-"},"content":"  * FILENAME is the path to the file relative to the current directory.","lastModifiedDate":"2020-07-28"},{"lineNumber":69,"author":{"gitId":"-"},"content":"  * LINE is the line of the file where the error occurred and MESSAGE is the message explaining the error.","lastModifiedDate":"2020-07-28"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":71,"author":{"gitId":"-"},"content":"* Check scripts must exit with a non-zero exit code if any errors occur.","lastModifiedDate":"2020-07-28"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":73,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"## Making a release","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"Here are the steps to create a new release.","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"TeeRenJing"},"content":"1. Update the version number in [`MainApp.java`](https://github.com/AY2324S1-CS2103T-T15-2/tp/tree/master/src/main/java/seedu/address/MainApp.java).","lastModifiedDate":"2023-10-03"},{"lineNumber":80,"author":{"gitId":"-"},"content":"1. Generate a fat JAR file using Gradle (i.e., `gradlew shadowJar`).","lastModifiedDate":"2021-08-30"},{"lineNumber":81,"author":{"gitId":"-"},"content":"1. Tag the repo with the version number. e.g. `v0.1`","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"1. [Create a new release using GitHub](https://help.github.com/articles/creating-releases/). Upload the JAR file you created.","lastModifiedDate":"2020-05-26"}],"authorContributionMap":{"TeeRenJing":1,"-":81}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  layout: default.md","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  title: \"Developer Guide\"","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"  pageNav: 3","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":7,"author":{"gitId":"RoeReRe"},"content":"# BayMeds Developer Guide","lastModifiedDate":"2023-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c!-- * Table of Contents --\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003cpage-nav-print /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"_{ list here sources of all reused/adapted ideas, code, documentation, and third-party libraries -- include links to the original source as well }_","lastModifiedDate":"2023-09-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ArchitectureDiagram.puml\" width\u003d\"280\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"TeeRenJing"},"content":"**`Main`** (consisting of classes [`Main`](https://github.com/AY2324S1-CS2103T-T15-2/tp/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/AY2324S1-CS2103T-T15-2/tp/tree/master/src/main/java/seedu/address/MainApp.java)) is in charge of the app launch and shut down.","lastModifiedDate":"2023-10-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"* At app launch, it initializes the other components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2023-09-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"* At shut down, it shuts down the other components and invokes cleanup methods where necessary.","lastModifiedDate":"2023-09-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"The bulk of the app\u0027s work is done by the following four components:","lastModifiedDate":"2023-09-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2023-09-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ArchitectureSequenceDiagram.puml\" width\u003d\"574\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":59,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ComponentManagers.puml\" width\u003d\"300\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"TeeRenJing"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/AY2324S1-CS2103T-T15-2/tp/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2023-10-03"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UiClassDiagram.puml\" alt\u003d\"Structure of the UI Component\"/\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"TeeRenJing"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PrescriptionListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2023-10-03"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"TeeRenJing"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/AY2324S1-CS2103T-T15-2/tp/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/AY2324S1-CS2103T-T15-2/tp/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2023-10-03"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":81,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":82,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":83,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component, as it displays `Person` object residing in the `Model`.","lastModifiedDate":"2021-07-31"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"TeeRenJing"},"content":"**API** : [`Logic.java`](https://github.com/AY2324S1-CS2103T-T15-2/tp/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2023-10-03"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/LogicClassDiagram.puml\" width\u003d\"550\"/\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"The sequence diagram below illustrates the interactions within the `Logic` component, taking `execute(\"delete 1\")` API call as an example.","lastModifiedDate":"2023-09-03"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/DeleteSequenceDiagram.puml\" alt\u003d\"Interactions Inside the Logic Component for the `delete 1` Command\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":97,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"**Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2023-09-12"},{"lineNumber":100,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2023-09-03"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":104,"author":{"gitId":"TeeRenJing"},"content":"1. When `Logic` is called upon to execute a command, it is passed to an `BayMedsParser` object which in turn creates a parser that matches the command (e.g., `DeleteCommandParser`) and uses it to parse the command.","lastModifiedDate":"2023-10-03"},{"lineNumber":105,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `DeleteCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2023-09-03"},{"lineNumber":106,"author":{"gitId":"TeeRenJing"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to delete a medication).","lastModifiedDate":"2023-10-03"},{"lineNumber":107,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2023-09-03"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":109,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ParserClasses.puml\" width\u003d\"600\"/\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":114,"author":{"gitId":"TeeRenJing"},"content":"* When called upon to parse a user command, the `BayMedsParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `BayMedsParser` returns back as a `Command` object.","lastModifiedDate":"2023-10-03"},{"lineNumber":115,"author":{"gitId":"-"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-07-31"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":118,"author":{"gitId":"TeeRenJing"},"content":"**API** : [`Model.java`](https://github.com/AY2324S1-CS2103T-T15-2/tp/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2023-10-03"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ModelClassDiagram.puml\" width\u003d\"450\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"TeeRenJing"},"content":"* stores the BayMeds data i.e., all `Person` objects (which are contained in a `UniquePersonList` object).","lastModifiedDate":"2023-10-03"},{"lineNumber":126,"author":{"gitId":"-"},"content":"* stores the currently \u0027selected\u0027 `Person` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2021-07-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":132,"author":{"gitId":"-"},"content":"**Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `AddressBook`, which `Person` references. This allows `AddressBook` to only require one `Tag` object per unique tag, instead of each `Person` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":134,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/BetterModelClassDiagram.puml\" width\u003d\"450\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"TeeRenJing"},"content":"**API** : [`Storage.java`](https://github.com/AY2324S1-CS2103T-T15-2/tp/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2023-10-03"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/StorageClassDiagram.puml\" width\u003d\"550\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"TeeRenJing"},"content":"* can save both BayMeds data and user preference data in JSON format, and read them back into corresponding objects.","lastModifiedDate":"2023-10-03"},{"lineNumber":147,"author":{"gitId":"TeeRenJing"},"content":"* inherits from both `BayMedsStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2023-10-03"},{"lineNumber":148,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.addressbook.commons` package.","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2020-06-07"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedAddressBook`. It extends `AddressBook` with an undo/redo history, stored internally as an `addressBookStateList` and `currentStatePointer`. Additionally, it implements the following operations:","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#commit()` — Saves the current address book state in its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#undo()` — Restores the previous address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#redo()` — Restores a previously undone address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()` and `Model#redoAddressBook()` respectively.","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the initial address book state, and the `currentStatePointer` pointing to that single address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState0.puml\" alt\u003d\"UndoRedoState0\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"Step 2. The user executes `delete 5` command to delete the 5th person in the address book. The `delete` command calls `Model#commitAddressBook()`, causing the modified state of the address book after the `delete 5` command executes to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState1.puml\" alt\u003d\"UndoRedoState1\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"Step 3. The user executes `add n/David …​` to add a new person. The `add` command also calls `Model#commitAddressBook()`, causing another modified address book state to be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState2.puml\" alt\u003d\"UndoRedoState2\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"**Note:** If a command fails its execution, it will not call `Model#commitAddressBook()`, so the address book state will not be saved into the `addressBookStateList`.","lastModifiedDate":"2023-09-12"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":190,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"Step 4. The user now decides that adding the person was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous address book state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState3.puml\" alt\u003d\"UndoRedoState3\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":197,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"**Note:** If the `currentStatePointer` is at index 0, pointing to the initial AddressBook state, then there are no previous AddressBook states to restore. The `undo` command uses `Model#canUndoAddressBook()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2023-09-12"},{"lineNumber":200,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"The following sequence diagram shows how the undo operation works:","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoSequenceDiagram.puml\" alt\u003d\"UndoSequenceDiagram\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"**Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2023-09-12"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":212,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"The `redo` command does the opposite — it calls `Model#redoAddressBook()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":218,"author":{"gitId":"-"},"content":"**Note:** If the `currentStatePointer` is at index `addressBookStateList.size() - 1`, pointing to the latest address book state, then there are no undone AddressBook states to restore. The `redo` command uses `Model#canRedoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2023-09-12"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the address book, such as `list`, will usually not call `Model#commitAddressBook()`, `Model#undoAddressBook()` or `Model#redoAddressBook()`. Thus, the `addressBookStateList` remains unchanged.","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState4.puml\" alt\u003d\"UndoRedoState4\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"Step 6. The user executes `clear`, which calls `Model#commitAddressBook()`. Since the `currentStatePointer` is not pointing at the end of the `addressBookStateList`, all address book states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `add n/David …​` command. This is the behavior that most modern desktop applications follow.","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState5.puml\" alt\u003d\"UndoRedoState5\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/CommitActivityDiagram.puml\" width\u003d\"250\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2021-07-31"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2021-07-31"},{"lineNumber":237,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Saves the entire address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"  * Pros: Easy to implement.","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"  * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"  * Pros: Will use less memory (e.g. for `delete`, just save the person being deleted).","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"  * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Data archiving","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"_{Explain here how the data archiving feature will be implemented}_","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":259,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":260,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":261,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":262,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"RoeReRe"},"content":"* has a need to manage a significant number of prescriptions","lastModifiedDate":"2023-10-04"},{"lineNumber":273,"author":{"gitId":"RoeReRe"},"content":"* prefers a quick way of tracking medication needs, dosage and related health information","lastModifiedDate":"2023-09-25"},{"lineNumber":274,"author":{"gitId":"RoeReRe"},"content":"* prefers desktop apps over other types","lastModifiedDate":"2023-09-25"},{"lineNumber":275,"author":{"gitId":"-"},"content":"* can type fast","lastModifiedDate":"2020-05-23"},{"lineNumber":276,"author":{"gitId":"-"},"content":"* prefers typing to mouse interactions","lastModifiedDate":"2020-05-26"},{"lineNumber":277,"author":{"gitId":"-"},"content":"* is reasonably comfortable using CLI apps","lastModifiedDate":"2020-05-23"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":279,"author":{"gitId":"RoeReRe"},"content":"**Value proposition**:","lastModifiedDate":"2023-09-25"},{"lineNumber":280,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":281,"author":{"gitId":"RoeReRe"},"content":"* manage prescriptions faster than a typical mouse/GUI driven app","lastModifiedDate":"2023-10-04"},{"lineNumber":282,"author":{"gitId":"RoeReRe"},"content":"* track dosage schedule and instructions","lastModifiedDate":"2023-09-25"},{"lineNumber":283,"author":{"gitId":"RoeReRe"},"content":"* track medical history","lastModifiedDate":"2023-09-25"},{"lineNumber":284,"author":{"gitId":"RoeReRe"},"content":"* log symptoms","lastModifiedDate":"2023-09-25"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":287,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":289,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":291,"author":{"gitId":"-"},"content":"| Priority | As a …​                            | I want to …​                                        | So that I can…​                                                    |","lastModifiedDate":"2020-05-23"},{"lineNumber":292,"author":{"gitId":"RoeReRe"},"content":"|----------|------------------------------------|-----------------------------------------------------|--------------------------------------------------------------------|","lastModifiedDate":"2023-10-04"},{"lineNumber":293,"author":{"gitId":"RoeReRe"},"content":"| `* * *`  | sickly patient                     | add prescriptions                                   | manage additional prescriptions should I be prescribed them        |","lastModifiedDate":"2023-10-04"},{"lineNumber":294,"author":{"gitId":"RoeReRe"},"content":"| `* * *`  | recovering patient                 | remove prescriptions                                | remove prescriptions that the doctor deems unnecessary from now on |","lastModifiedDate":"2023-10-04"},{"lineNumber":295,"author":{"gitId":"RoeReRe"},"content":"| `* * *`  | forgetful patient                  | mark the medication as consumed                     | not accidentally overdose on a certain medication                  |","lastModifiedDate":"2023-09-25"},{"lineNumber":296,"author":{"gitId":"RoeReRe"},"content":"| `* * *`  | forgetful patient                  | list all my prescriptions                           | track all the medications I am currently taking                    |","lastModifiedDate":"2023-10-04"},{"lineNumber":297,"author":{"gitId":"RoeReRe"},"content":"| `* *`    | forgetful patient                  | list all the medications I have not taken today     | follow my prescription accurately                                  |","lastModifiedDate":"2023-09-25"},{"lineNumber":298,"author":{"gitId":"RoeReRe"},"content":"| `* *`    | patient undergoing a tapering plan | edit prescriptions that I have added                | adjust my dosage schedules easily                                  |","lastModifiedDate":"2023-10-04"},{"lineNumber":299,"author":{"gitId":"RoeReRe"},"content":"| `* *`    | forgetful patient                  | get daily reminders of what medications to take     | take my medication on time                                         |","lastModifiedDate":"2023-10-04"},{"lineNumber":300,"author":{"gitId":"RoeReRe"},"content":"| `*`      | forgetful patient                  | get a reminder when a medication is about to expire | premptively stock up before it runs out                            |","lastModifiedDate":"2023-09-25"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":302,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":303,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":304,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":305,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":306,"author":{"gitId":"TeeRenJing"},"content":"(For all use cases below, the **System** is the `BayMeds` and the **Actor** is the `user`, unless specified otherwise)","lastModifiedDate":"2023-10-03"},{"lineNumber":307,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":308,"author":{"gitId":"RoeReRe"},"content":"**Use case: Delete a prescription**","lastModifiedDate":"2023-10-04"},{"lineNumber":309,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":310,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":311,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":312,"author":{"gitId":"RoeReRe"},"content":"1.  User requests to list prescriptions.","lastModifiedDate":"2023-10-04"},{"lineNumber":313,"author":{"gitId":"RoeReRe"},"content":"2.  BayMeds shows a list of prescriptions.","lastModifiedDate":"2023-10-04"},{"lineNumber":314,"author":{"gitId":"RoeReRe"},"content":"3.  User requests to delete a specific prescription in the list.","lastModifiedDate":"2023-10-04"},{"lineNumber":315,"author":{"gitId":"RoeReRe"},"content":"4.  BayMeds deletes the prescription.","lastModifiedDate":"2023-10-04"},{"lineNumber":316,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":317,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":318,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":319,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":320,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":321,"author":{"gitId":"TeeRenJing"},"content":"* 1a. The given command is invalid.","lastModifiedDate":"2023-10-03"},{"lineNumber":322,"author":{"gitId":"TeeRenJing"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":323,"author":{"gitId":"TeeRenJing"},"content":"    * 1a1. BayMeds shows an error message.","lastModifiedDate":"2023-10-03"},{"lineNumber":324,"author":{"gitId":"TeeRenJing"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":325,"author":{"gitId":"TeeRenJing"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2023-10-03"},{"lineNumber":326,"author":{"gitId":"TeeRenJing"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":327,"author":{"gitId":"-"},"content":"* 2a. The list is empty.","lastModifiedDate":"2020-05-23"},{"lineNumber":328,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":329,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":331,"author":{"gitId":"RoeReRe"},"content":"* 3a. The given prescription is not in the list.","lastModifiedDate":"2023-10-04"},{"lineNumber":332,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":333,"author":{"gitId":"TeeRenJing"},"content":"    * 3a1. BayMeds shows an error message.","lastModifiedDate":"2023-10-03"},{"lineNumber":334,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":335,"author":{"gitId":"-"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2020-05-23"},{"lineNumber":336,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":337,"author":{"gitId":"RoeReRe"},"content":"**Use case: List all prescriptions**","lastModifiedDate":"2023-10-04"},{"lineNumber":338,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":339,"author":{"gitId":"RoeReRe"},"content":"**MSS**","lastModifiedDate":"2023-10-04"},{"lineNumber":340,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":341,"author":{"gitId":"RoeReRe"},"content":"1.  User requests to list all prescriptions.","lastModifiedDate":"2023-10-04"},{"lineNumber":342,"author":{"gitId":"RoeReRe"},"content":"2.  BayMeds shows a list of prescriptions together with their details.","lastModifiedDate":"2023-10-04"},{"lineNumber":343,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":344,"author":{"gitId":"RoeReRe"},"content":"    Use case ends.","lastModifiedDate":"2023-10-04"},{"lineNumber":345,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":346,"author":{"gitId":"RoeReRe"},"content":"**Extensions**","lastModifiedDate":"2023-10-04"},{"lineNumber":347,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":348,"author":{"gitId":"RoeReRe"},"content":"* 1a. The given command is invalid.","lastModifiedDate":"2023-10-04"},{"lineNumber":349,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":350,"author":{"gitId":"RoeReRe"},"content":"    * 1a1. BayMeds shows an error message.","lastModifiedDate":"2023-10-04"},{"lineNumber":351,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":352,"author":{"gitId":"RoeReRe"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2023-10-04"},{"lineNumber":353,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":354,"author":{"gitId":"RoeReRe"},"content":"* 2a. The list is empty.","lastModifiedDate":"2023-10-04"},{"lineNumber":355,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":356,"author":{"gitId":"RoeReRe"},"content":"  Use case ends.","lastModifiedDate":"2023-10-04"},{"lineNumber":357,"author":{"gitId":"shyanyong"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":358,"author":{"gitId":"shyanyong"},"content":"**Use case: List medications to be consumed today**","lastModifiedDate":"2023-10-04"},{"lineNumber":359,"author":{"gitId":"shyanyong"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":360,"author":{"gitId":"shyanyong"},"content":"**MSS**","lastModifiedDate":"2023-10-04"},{"lineNumber":361,"author":{"gitId":"shyanyong"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":362,"author":{"gitId":"RoeReRe"},"content":"1.  User requests to list all remaining medications to be consumed today.","lastModifiedDate":"2023-10-04"},{"lineNumber":363,"author":{"gitId":"RoeReRe"},"content":"2.  BayMeds shows a list of medications to be consumed today.","lastModifiedDate":"2023-10-04"},{"lineNumber":364,"author":{"gitId":"shyanyong"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":365,"author":{"gitId":"shyanyong"},"content":"    Use case ends.","lastModifiedDate":"2023-10-04"},{"lineNumber":366,"author":{"gitId":"shyanyong"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":367,"author":{"gitId":"shyanyong"},"content":"**Extensions**","lastModifiedDate":"2023-10-04"},{"lineNumber":368,"author":{"gitId":"shyanyong"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":369,"author":{"gitId":"shyanyong"},"content":"* 1a. The given command is invalid.","lastModifiedDate":"2023-10-04"},{"lineNumber":370,"author":{"gitId":"shyanyong"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":371,"author":{"gitId":"shyanyong"},"content":"    * 1a1. BayMeds shows an error message.","lastModifiedDate":"2023-10-04"},{"lineNumber":372,"author":{"gitId":"shyanyong"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":373,"author":{"gitId":"shyanyong"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2023-10-04"},{"lineNumber":374,"author":{"gitId":"shyanyong"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":375,"author":{"gitId":"shyanyong"},"content":"* 2a. The list is empty.","lastModifiedDate":"2023-10-04"},{"lineNumber":376,"author":{"gitId":"shyanyong"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":377,"author":{"gitId":"shyanyong"},"content":"  Use case ends.","lastModifiedDate":"2023-10-04"},{"lineNumber":378,"author":{"gitId":"shyanyong"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":379,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":380,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":381,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":382,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":383,"author":{"gitId":"-"},"content":"1.  Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2020-05-23"},{"lineNumber":384,"author":{"gitId":"TeeRenJing"},"content":"2.  Should be able to hold up to 1000 prescriptions without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2023-10-03"},{"lineNumber":385,"author":{"gitId":"-"},"content":"3.  A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2020-05-23"},{"lineNumber":386,"author":{"gitId":"RoeReRe"},"content":"4.  Should be able to give a notification to the user when the application is running. (Time to take medication / medication is about to expire)","lastModifiedDate":"2023-10-04"},{"lineNumber":387,"author":{"gitId":"TeeRenJing"},"content":"5.  Should be able to track current date and time when the application is running.","lastModifiedDate":"2023-10-03"},{"lineNumber":388,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":389,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":390,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":391,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":392,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":393,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, OS-X","lastModifiedDate":"2020-05-23"},{"lineNumber":394,"author":{"gitId":"TeeRenJing"},"content":"* **Medication**: A drug identified by a name","lastModifiedDate":"2023-10-03"},{"lineNumber":395,"author":{"gitId":"RoeReRe"},"content":"* **Prescription**: Uniquely identified by a medication, a frequency and a quantity","lastModifiedDate":"2023-10-04"},{"lineNumber":396,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":397,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":398,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":399,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":400,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":401,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":402,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":403,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":404,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":405,"author":{"gitId":"-"},"content":"**Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2023-09-12"},{"lineNumber":406,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":407,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":408,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":409,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":410,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":411,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":412,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":413,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":414,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":415,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":416,"author":{"gitId":"TeeRenJing"},"content":"   1. Double-click the jar file Expected: Shows the GUI with a set of sample prescriptions. The window size may not be optimum.","lastModifiedDate":"2023-10-03"},{"lineNumber":417,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":418,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":419,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":420,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":421,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":422,"author":{"gitId":"-"},"content":"   1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":423,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":424,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":425,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":426,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":427,"author":{"gitId":"TeeRenJing"},"content":"### Deleting a medication","lastModifiedDate":"2023-10-03"},{"lineNumber":428,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":429,"author":{"gitId":"TeeRenJing"},"content":"1. Deleting a medication while all medications are being shown","lastModifiedDate":"2023-10-03"},{"lineNumber":430,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":431,"author":{"gitId":"TeeRenJing"},"content":"   1. Prerequisites: List all medications using the `list` command. Multiple medications in the list.","lastModifiedDate":"2023-10-03"},{"lineNumber":432,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":433,"author":{"gitId":"TeeRenJing"},"content":"   1. Test case: `delete --medication \"Doxazosin\"`\u003cbr\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":434,"author":{"gitId":"TeeRenJing"},"content":"      Expected: Doxazosin is deleted from the list. Details of the deleted medication shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2023-10-03"},{"lineNumber":435,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":436,"author":{"gitId":"TeeRenJing"},"content":"   1. Test case: `delete --medication \"Watsons\"`\u003cbr\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":437,"author":{"gitId":"TeeRenJing"},"content":"      Expected: No medication is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2023-10-03"},{"lineNumber":438,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":439,"author":{"gitId":"TeeRenJing"},"content":"   1. Other incorrect delete commands to try: `delete`, `delete x`, `...`\u003cbr\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":440,"author":{"gitId":"-"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":441,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":442,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":443,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":444,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":445,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":446,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":447,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":448,"author":{"gitId":"-"},"content":"   1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23"},{"lineNumber":449,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":450,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"TeeRenJing":33,"shyanyong":20,"RoeReRe":49,"-":348}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  layout: default.md","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  title: \"User Guide\"","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"  pageNav: 3","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"ChongWeiJie29"},"content":"# BayMeds v.2103 User Guide","lastModifiedDate":"2023-10-02"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"RoeReRe"},"content":"BayMeds v.2103, (a.k.a BayMeds), is a **desktop application for managing your prescriptions**. While it has a GUI (Graphical User Interface), most of the user interactions happen using a CLI (Command Line Interface). If you like to type fast, BayMeds can get your prescription management tasks done faster than traditional GUI apps.","lastModifiedDate":"2023-10-04"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c!-- * Table of Contents --\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003cpage-nav-print /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"## Quick start","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"1. Ensure you have Java `11` or above installed in your Computer.","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"ChongWeiJie29"},"content":"1. Download the latest `BayMeds.jar` from [here](https://github.com/se-edu/addressbook-level3/releases). [coming soon]","lastModifiedDate":"2023-10-02"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"ChongWeiJie29"},"content":"1. Copy the file to the folder you want to use as the _home folder_ for BayMeds.","lastModifiedDate":"2023-10-02"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"ChongWeiJie29"},"content":"1. Open a command terminal, `cd` into the folder you put the jar file in, and use the `java -jar BayMeds.jar` command to run the application.\u003cbr\u003e","lastModifiedDate":"2023-10-02"},{"lineNumber":25,"author":{"gitId":"ChongWeiJie29"},"content":"   A GUI similar to the one below should appear in a few seconds. Note how the app contains some sample data.\u003cbr\u003e","lastModifiedDate":"2023-10-02"},{"lineNumber":26,"author":{"gitId":"-"},"content":"   ![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"ChongWeiJie29"},"content":"1. Type commands in the command box and press Enter to execute it. \u003cbr\u003e e.g. typing the command **`help`** and pressing Enter will open the help window.\u003cbr\u003e","lastModifiedDate":"2023-10-02"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"ChongWeiJie29"},"content":"   Some example commands you can try:","lastModifiedDate":"2023-10-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"ChongWeiJie29"},"content":"   * `list` : Lists all prescriptions.","lastModifiedDate":"2023-10-02"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"RoeReRe"},"content":"   * `add --medication \"Doxazosin\" --frequency \"daily\"` : Adds a prescription `Aspirin` to the list of prescriptions.","lastModifiedDate":"2023-10-04"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"RoeReRe"},"content":"   * `delete \"Aspirin\"` : Deletes the `Aspirin` prescription from the current list of prescriptions.","lastModifiedDate":"2023-10-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"1. Refer to the [Features](#features) below for details of each command.","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"**Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"ChongWeiJie29"},"content":"* Words in `\u003c\u003e` are the parameters to be supplied by the user, and should begin and end with double quotation marks \" \".\u003cbr\u003e","lastModifiedDate":"2023-10-02"},{"lineNumber":49,"author":{"gitId":"ChongWeiJie29"},"content":"  e.g. in `add --medication \u003cmedication_name\u003e`, `\u003cmedication_name\u003e` is a parameter which can be used as `add --medication \"Aspirin\"`.","lastModifiedDate":"2023-10-02"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"* Items in square brackets are optional.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"ChongWeiJie29"},"content":"  e.g. `--frequency \u003cfrequency\u003e [--start \u003cstart_date\u003e]` can be used as `--frequency \"daily\" --start \"20-9-2023\"` or as `--frequency \"daily\"`.","lastModifiedDate":"2023-10-02"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"* Parameters can be in any order.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"ChongWeiJie29"},"content":"  e.g. if the command specifies `--medication \u003cmedication_name\u003e --frequency \u003cfrequency\u003e`, `--frequency \u003cfrequency\u003e --medication \u003cmedication_name\u003e` is also acceptable.","lastModifiedDate":"2023-10-02"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"ChongWeiJie29"},"content":"* Extraneous parameters for commands that do not take in parameters (such as `help`, `list`) will be ignored.\u003cbr\u003e","lastModifiedDate":"2023-10-02"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `help 123`, it will be interpreted as `help`.","lastModifiedDate":"2021-02-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"* If you are using a PDF version of this document, be careful when copying and pasting commands that span multiple lines as space characters surrounding line-breaks may be omitted when copied over to the application.","lastModifiedDate":"2023-06-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"ChongWeiJie29"},"content":"### Viewing help : `help` [coming soon]","lastModifiedDate":"2023-10-02"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":65,"author":{"gitId":"ChongWeiJie29"},"content":"_Details coming soon ..._","lastModifiedDate":"2023-10-02"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":67,"author":{"gitId":"ChongWeiJie29"},"content":"### Adding a prescription : `add`","lastModifiedDate":"2023-10-02"},{"lineNumber":68,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":69,"author":{"gitId":"RoeReRe"},"content":"Adds a prescription to the list of prescriptions.","lastModifiedDate":"2023-10-04"},{"lineNumber":70,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":71,"author":{"gitId":"ChongWeiJie29"},"content":"Format:","lastModifiedDate":"2023-10-02"},{"lineNumber":72,"author":{"gitId":"ChongWeiJie29"},"content":"```","lastModifiedDate":"2023-10-02"},{"lineNumber":73,"author":{"gitId":"ChongWeiJie29"},"content":"add","lastModifiedDate":"2023-10-02"},{"lineNumber":74,"author":{"gitId":"ChongWeiJie29"},"content":"  --medication \u003cmedication_name\u003e","lastModifiedDate":"2023-10-02"},{"lineNumber":75,"author":{"gitId":"ChongWeiJie29"},"content":"  --frequency \u003cfrequency\u003e","lastModifiedDate":"2023-10-02"},{"lineNumber":76,"author":{"gitId":"ChongWeiJie29"},"content":"  [--start \u003cstart_date\u003e]","lastModifiedDate":"2023-10-02"},{"lineNumber":77,"author":{"gitId":"ChongWeiJie29"},"content":"  [--end \u003cend_date\u003e]","lastModifiedDate":"2023-10-02"},{"lineNumber":78,"author":{"gitId":"ChongWeiJie29"},"content":"  [--remarks \u003cremarks\u003e]","lastModifiedDate":"2023-10-02"},{"lineNumber":79,"author":{"gitId":"ChongWeiJie29"},"content":"```","lastModifiedDate":"2023-10-02"},{"lineNumber":80,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":81,"author":{"gitId":"ChongWeiJie29"},"content":"* `\u003cfrequency\u003e` should follow this format `\u003crepetition dosage\u003e`.","lastModifiedDate":"2023-10-02"},{"lineNumber":82,"author":{"gitId":"ChongWeiJie29"},"content":"  * e.g. `--frequency \"daily 2\"`.","lastModifiedDate":"2023-10-02"},{"lineNumber":83,"author":{"gitId":"ChongWeiJie29"},"content":"    * This means take 2 tabs everyday.","lastModifiedDate":"2023-10-02"},{"lineNumber":84,"author":{"gitId":"ChongWeiJie29"},"content":"  * e.g. `--frequency \"daily 4\"`.","lastModifiedDate":"2023-10-02"},{"lineNumber":85,"author":{"gitId":"ChongWeiJie29"},"content":"    * This means take 4 tabs everyday.","lastModifiedDate":"2023-10-02"},{"lineNumber":86,"author":{"gitId":"ChongWeiJie29"},"content":"  * e.g. `--frequency \"weekly 2\"`.","lastModifiedDate":"2023-10-02"},{"lineNumber":87,"author":{"gitId":"ChongWeiJie29"},"content":"    * This means take 2 tabs on a particular day every week. The day is determined by the `\u003cstart_date\u003e` input. If `\u003cstart_date\u003e` is a Wednesday, this means take 2 tabs every Wednesday.","lastModifiedDate":"2023-10-02"},{"lineNumber":88,"author":{"gitId":"RoeReRe"},"content":"* If your prescriptions are to be taken every Wednesday and Sunday, add 2 separate entries into the list of prescriptions.","lastModifiedDate":"2023-10-04"},{"lineNumber":89,"author":{"gitId":"ChongWeiJie29"},"content":"  * `Add --medication \"Accutane 1\" --frequency \"weekly 1\" --start \"27-09-2023\"`.","lastModifiedDate":"2023-10-02"},{"lineNumber":90,"author":{"gitId":"ChongWeiJie29"},"content":"  * `Add --medication \"Accutane 2\" --frequency \"weekly 1\" --start \"01-10-2023\"`.","lastModifiedDate":"2023-10-02"},{"lineNumber":91,"author":{"gitId":"ChongWeiJie29"},"content":"* `\u003cstart_date\u003e` and `\u003cend_date\u003e` should be in dd-mm-yyyy format.","lastModifiedDate":"2023-10-02"},{"lineNumber":92,"author":{"gitId":"ChongWeiJie29"},"content":"  * e.g. \"20-09-2023\".","lastModifiedDate":"2023-10-02"},{"lineNumber":93,"author":{"gitId":"ChongWeiJie29"},"content":"* Since `--start \u003cstart_date\u003e` is an optional input, if there is none given, the input date of the entry will be used as the default start date.","lastModifiedDate":"2023-10-02"},{"lineNumber":94,"author":{"gitId":"ChongWeiJie29"},"content":"* Remarks can consist of any text.","lastModifiedDate":"2023-10-02"},{"lineNumber":95,"author":{"gitId":"ChongWeiJie29"},"content":"  * e.g. \"To be taken after meals\".","lastModifiedDate":"2023-10-02"},{"lineNumber":96,"author":{"gitId":"ChongWeiJie29"},"content":"  * e.g. \"Take after food\".","lastModifiedDate":"2023-10-02"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"ChongWeiJie29"},"content":"Examples:","lastModifiedDate":"2023-10-02"},{"lineNumber":99,"author":{"gitId":"ChongWeiJie29"},"content":"* `add --medication \"Aspirin\" --frequency \"daily\" --start \"20-09-2023\" --end \"03-10-2024\" --remarks \"Take during meals\"`.","lastModifiedDate":"2023-10-02"},{"lineNumber":100,"author":{"gitId":"ChongWeiJie29"},"content":"* `add --medication \"Amoxicillin\" --frequency \"twice daily\" --start \"20-09-2023\" --end \"03-10-2024\"`.","lastModifiedDate":"2023-10-02"},{"lineNumber":101,"author":{"gitId":"ChongWeiJie29"},"content":"* `add --medication \"Doxazosin\" --frequency \"daily\"`.","lastModifiedDate":"2023-10-02"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"ChongWeiJie29"},"content":"Example usage of add command in BayMeds:","lastModifiedDate":"2023-10-02"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"RoeReRe"},"content":"\u003cimg src\u003d\"images/ui/Ui-add.png\" alt\u003d\"Example of add command\" width\u003d\"460\" height\u003d\"330\"\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"RoeReRe"},"content":"### Listing all prescriptions : `list`","lastModifiedDate":"2023-10-03"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"RoeReRe"},"content":"Shows a list of all prescriptions.","lastModifiedDate":"2023-10-03"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"RoeReRe"},"content":"Format:","lastModifiedDate":"2023-10-03"},{"lineNumber":112,"author":{"gitId":"RoeReRe"},"content":"```","lastModifiedDate":"2023-10-03"},{"lineNumber":113,"author":{"gitId":"RoeReRe"},"content":"list","lastModifiedDate":"2023-10-03"},{"lineNumber":114,"author":{"gitId":"RoeReRe"},"content":"```","lastModifiedDate":"2023-10-03"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":116,"author":{"gitId":"RoeReRe"},"content":"Example usage of list command in BayMeds:","lastModifiedDate":"2023-10-03"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":118,"author":{"gitId":"RoeReRe"},"content":"\u003cimg src\u003d\"images/ui/Ui-list.png\" alt\u003d\"Example of list command\" width\u003d\"460\" height\u003d\"330\"\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"### Editing a person : `edit`","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"Edits an existing person in the address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"Format: `edit INDEX [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [t/TAG]…​`","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"* Edits the person at the specified `INDEX`. The index refers to the index number shown in the displayed person list. The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"* At least one of the optional fields must be provided.","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"* Existing values will be updated to the input values.","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"* When editing tags, the existing tags of the person will be removed i.e adding of tags is not cumulative.","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"* You can remove all the person’s tags by typing `t/` without","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    specifying any tags after it.","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"*  `edit 1 p/91234567 e/johndoe@example.com` Edits the phone number and email address of the 1st person to be `91234567` and `johndoe@example.com` respectively.","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"*  `edit 2 n/Betsy Crower t/` Edits the name of the 2nd person to be `Betsy Crower` and clears all existing tags.","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"### Locating persons by name : `find`","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"Finds persons whose names contain any of the given keywords.","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"Format: `find KEYWORD [MORE_KEYWORDS]`","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"* The search is case-insensitive. e.g `hans` will match `Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"* The order of the keywords does not matter. e.g. `Hans Bo` will match `Bo Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"* Only the name is searched.","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"* Only full words will be matched e.g. `Han` will not match `Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"* Persons matching at least one keyword will be returned (i.e. `OR` search).","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"  e.g. `Hans Bo` will return `Hans Gruber`, `Bo Yang`","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"* `find John` returns `john` and `John Doe`","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"* `find alex david` returns `Alex Yeoh`, `David Li`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"  ![result for \u0027find alex david\u0027](images/findAlexDavidResult.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"RoeReRe"},"content":"### Deleting a prescription : `delete`","lastModifiedDate":"2023-10-04"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"RoeReRe"},"content":"Deletes the specified prescription from the list of prescriptions.","lastModifiedDate":"2023-10-04"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"ChongWeiJie29"},"content":"Format:","lastModifiedDate":"2023-10-02"},{"lineNumber":160,"author":{"gitId":"ChongWeiJie29"},"content":"```","lastModifiedDate":"2023-10-02"},{"lineNumber":161,"author":{"gitId":"ChongWeiJie29"},"content":"delete","lastModifiedDate":"2023-10-02"},{"lineNumber":162,"author":{"gitId":"ChongWeiJie29"},"content":"  --medication \u003cmedication_name\u003e","lastModifiedDate":"2023-10-02"},{"lineNumber":163,"author":{"gitId":"ChongWeiJie29"},"content":"```","lastModifiedDate":"2023-10-02"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"TeeRenJing"},"content":"* `\u003cmedication_name\u003e` should not be empty.","lastModifiedDate":"2023-10-02"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"TeeRenJing"},"content":"* `delete --medication \"Aspirin\"`.","lastModifiedDate":"2023-10-02"},{"lineNumber":169,"author":{"gitId":"TeeRenJing"},"content":"* `delete --medication \"Amoxicillin\"`.","lastModifiedDate":"2023-10-02"},{"lineNumber":170,"author":{"gitId":"TeeRenJing"},"content":"* `delete --medication \"Doxazosin\"`.","lastModifiedDate":"2023-10-02"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":172,"author":{"gitId":"TeeRenJing"},"content":"Example usage of delete command in BayMeds:","lastModifiedDate":"2023-10-02"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":174,"author":{"gitId":"RoeReRe"},"content":"\u003cimg src\u003d\"images/ui/Ui-delete.png\" alt\u003d\"Example of delete command\" width\u003d\"460\" height\u003d\"330\"\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"jingyu987"},"content":"### Listing untaken medication : `list today`","lastModifiedDate":"2023-10-03"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":178,"author":{"gitId":"shyanyong"},"content":"Lists all remaining medications to be taken for the day.","lastModifiedDate":"2023-10-03"},{"lineNumber":179,"author":{"gitId":"shyanyong"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":180,"author":{"gitId":"shyanyong"},"content":"Format:","lastModifiedDate":"2023-10-03"},{"lineNumber":181,"author":{"gitId":"shyanyong"},"content":"```","lastModifiedDate":"2023-10-03"},{"lineNumber":182,"author":{"gitId":"shyanyong"},"content":"list today","lastModifiedDate":"2023-10-03"},{"lineNumber":183,"author":{"gitId":"shyanyong"},"content":"```","lastModifiedDate":"2023-10-03"},{"lineNumber":184,"author":{"gitId":"shyanyong"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":185,"author":{"gitId":"shyanyong"},"content":"Examples:","lastModifiedDate":"2023-10-03"},{"lineNumber":186,"author":{"gitId":"shyanyong"},"content":"* `list today`.","lastModifiedDate":"2023-10-03"},{"lineNumber":187,"author":{"gitId":"shyanyong"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":188,"author":{"gitId":"jingyu987"},"content":"Example usage of list today command in BayMeds:","lastModifiedDate":"2023-10-03"},{"lineNumber":189,"author":{"gitId":"shyanyong"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":190,"author":{"gitId":"jingyu987"},"content":"\u003cimg src\u003d\"images/ui/Ui-list_today.png\" alt\u003d\"Example of list today command\" width\u003d\"460\" height\u003d\"330\"\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":191,"author":{"gitId":"shyanyong"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":192,"author":{"gitId":"jingyu987"},"content":"### Marking a medication as taken : `take`","lastModifiedDate":"2023-10-03"},{"lineNumber":193,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":194,"author":{"gitId":"RoeReRe"},"content":"Marks a medication as consumed.","lastModifiedDate":"2023-10-04"},{"lineNumber":195,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":196,"author":{"gitId":"jingyu987"},"content":"Format:","lastModifiedDate":"2023-10-03"},{"lineNumber":197,"author":{"gitId":"jingyu987"},"content":"```","lastModifiedDate":"2023-10-03"},{"lineNumber":198,"author":{"gitId":"jingyu987"},"content":"take","lastModifiedDate":"2023-10-03"},{"lineNumber":199,"author":{"gitId":"jingyu987"},"content":"  --medication \u003cmedication_name\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":200,"author":{"gitId":"jingyu987"},"content":"  [--amount \u003camount_taken\u003e]","lastModifiedDate":"2023-10-03"},{"lineNumber":201,"author":{"gitId":"jingyu987"},"content":"  [--date \u003cdate\u003e]","lastModifiedDate":"2023-10-03"},{"lineNumber":202,"author":{"gitId":"jingyu987"},"content":"```","lastModifiedDate":"2023-10-03"},{"lineNumber":203,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":204,"author":{"gitId":"jingyu987"},"content":"* `\u003cmedication_name\u003e` should not be empty.","lastModifiedDate":"2023-10-03"},{"lineNumber":205,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":206,"author":{"gitId":"jingyu987"},"content":"Examples:","lastModifiedDate":"2023-10-03"},{"lineNumber":207,"author":{"gitId":"jingyu987"},"content":"* `take","lastModifiedDate":"2023-10-03"},{"lineNumber":208,"author":{"gitId":"jingyu987"},"content":"  --medication \"Aspirin\" --amount “1”  --date \"20-09-2023\"`.","lastModifiedDate":"2023-10-03"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":210,"author":{"gitId":"jingyu987"},"content":"Example usage of take command in BayMeds:","lastModifiedDate":"2023-10-03"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":212,"author":{"gitId":"RoeReRe"},"content":"\u003cimg src\u003d\"images/ui/Ui-take.png\" alt\u003d\"Example of take command\" width\u003d\"460\" height\u003d\"330\"\u003e","lastModifiedDate":"2023-10-04"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":214,"author":{"gitId":"-"},"content":"### Saving the data","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"ChongWeiJie29"},"content":"BayMeds data are saved in the hard disk automatically after any command that changes the data. There is no need to save manually.","lastModifiedDate":"2023-10-02"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"### Editing the data file","lastModifiedDate":"2021-02-04"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":220,"author":{"gitId":"ChongWeiJie29"},"content":"BayMeds data are saved automatically as a JSON file `[JAR file location]/data/BayMeds.json`. Advanced users are welcome to update data directly by editing that data file.","lastModifiedDate":"2023-10-02"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":222,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"warning\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":224,"author":{"gitId":"-"},"content":"**Caution:**","lastModifiedDate":"2023-09-12"},{"lineNumber":225,"author":{"gitId":"ChongWeiJie29"},"content":"If your changes to the data file makes its format invalid, BayMeds will discard all data and start with an empty data file at the next run.  Hence, it is recommended to take a backup of the file before editing it.","lastModifiedDate":"2023-10-02"},{"lineNumber":226,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":228,"author":{"gitId":"-"},"content":"### Archiving data files `[coming in v2.0]`","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"_Details coming soon ..._","lastModifiedDate":"2021-02-04"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another Computer?\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"ChongWeiJie29"},"content":"**A**: Install the app in the other computer and overwrite the empty data file it creates with the file that contains the data of your previous BayMeds home folder.","lastModifiedDate":"2023-10-02"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"## Known issues","lastModifiedDate":"2023-09-08"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":243,"author":{"gitId":"-"},"content":"1. **When using multiple screens**, if you move the application to a secondary screen, and later switch to using only the primary screen, the GUI will open off-screen. The remedy is to delete the `preferences.json` file created by the application before running the application again.","lastModifiedDate":"2023-09-08"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":245,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-09-08"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":247,"author":{"gitId":"-"},"content":"## Command summary","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"RoeReRe"},"content":"| Action          | Format, Example                                                                                                                                                                                                                                                 |","lastModifiedDate":"2023-10-04"},{"lineNumber":250,"author":{"gitId":"RoeReRe"},"content":"|-----------------|-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2023-10-04"},{"lineNumber":251,"author":{"gitId":"RoeReRe"},"content":"| **Help**        | `help`                                                                                                                                                                                                                                                          |","lastModifiedDate":"2023-10-04"},{"lineNumber":252,"author":{"gitId":"RoeReRe"},"content":"| **Add**         | `add --medication \u003cmedication_name\u003e --frequency \u003cfrequency\u003e  [--start \u003cstart_date\u003e] [--end \u003cend_date\u003e] [--remarks \u003cremarks\u003e]`, \u003cbr\u003e e.g. `add --medication \"Aspirin\" --frequency \"daily\" --start \"20-09-2023\" --end \"03-10-2024\" --remarks \"Take during meals\"` |","lastModifiedDate":"2023-10-04"},{"lineNumber":253,"author":{"gitId":"RoeReRe"},"content":"| **Delete**      | `delete --medication \u003cmedication_name\u003e`, \u003cbr\u003e e.g. `delete --medication \"Aspirin\"`                                                                                                                                                                              |","lastModifiedDate":"2023-10-04"},{"lineNumber":254,"author":{"gitId":"RoeReRe"},"content":"| **Mark**        | `take --medication \u003cmedication_name\u003e [--amount \u003camount_taken\u003e] [--date \u003cdate\u003e]`, \u003cbr\u003e e.g. `take --medication \"Aspirin\" --amount \"1\" --date \"20-09-2023\"`                                                                                                       |","lastModifiedDate":"2023-10-04"},{"lineNumber":255,"author":{"gitId":"RoeReRe"},"content":"| **List**        | `list`                                                                                                                                                                                                                                                          |","lastModifiedDate":"2023-10-04"},{"lineNumber":256,"author":{"gitId":"RoeReRe"},"content":"|  **List today** | `list today`                                                                                                                                                                                                                                                    |","lastModifiedDate":"2023-10-04"}],"authorContributionMap":{"TeeRenJing":5,"jingyu987":20,"shyanyong":12,"ChongWeiJie29":57,"RoeReRe":27,"-":135}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  layout: default.md","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  title: \"\"","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"RoeReRe"},"content":"# BayMeds v.2103","lastModifiedDate":"2023-09-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":8,"author":{"gitId":"RoeReRe"},"content":"[![CI Status](https://github.com/AY2324S1-CS2103T-T15-2/tp/actions/workflows/gradle.yml/badge.svg)](https://github.com/AY2324S1-CS2103T-T15-2/tp/actions)","lastModifiedDate":"2023-09-25"},{"lineNumber":9,"author":{"gitId":"RoeReRe"},"content":"[![codecov](https://codecov.io/gh/AY2324S1-CS2103T-T15-2/tp/branch/master/graph/badge.svg)](https://codecov.io/gh/AY2324S1-CS2103T-T15-2/tp)","lastModifiedDate":"2023-09-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"RoeReRe"},"content":"**BayMeds is a desktop application for managing your medications.** While it has a GUI (Graphical User Interface), most of the user interactions happen using a CLI (Command Line Interface).","lastModifiedDate":"2023-09-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"RoeReRe"},"content":"* If you are interested in using BayMeds, head over to the [_Quick Start_ section of the **User Guide**](UserGuide.html#quick-start).","lastModifiedDate":"2023-09-25"},{"lineNumber":16,"author":{"gitId":"RoeReRe"},"content":"* If you are interested about developing BayMeds, the [**Developer Guide**](DeveloperGuide.html) is a good place to start.","lastModifiedDate":"2023-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"**Acknowledgements**","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"RoeReRe":6,"-":15}},{"path":"docs/team/chongweijie29.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"ChongWeiJie29"},"content":"---","lastModifiedDate":"2023-10-01"},{"lineNumber":2,"author":{"gitId":"ChongWeiJie29"},"content":"  layout: default.md","lastModifiedDate":"2023-10-01"},{"lineNumber":3,"author":{"gitId":"ChongWeiJie29"},"content":"  title: \"ChongWeiJie29\u0027s Project Portfolio Page\"","lastModifiedDate":"2023-10-01"},{"lineNumber":4,"author":{"gitId":"ChongWeiJie29"},"content":"---","lastModifiedDate":"2023-10-01"},{"lineNumber":5,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":6,"author":{"gitId":"ChongWeiJie29"},"content":"### Project: BayMeds v.2103","lastModifiedDate":"2023-10-01"},{"lineNumber":7,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":8,"author":{"gitId":"ChongWeiJie29"},"content":"BayMeds v.2103 is a desktop application used for tracking medications. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2023-10-01"},{"lineNumber":9,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":10,"author":{"gitId":"ChongWeiJie29"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-10-01"},{"lineNumber":11,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":12,"author":{"gitId":"ChongWeiJie29"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2324s1.github.io/tp-dashboard/?search\u003dchongweijie29\u0026breakdown\u003dtrue)","lastModifiedDate":"2023-10-01"},{"lineNumber":13,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":14,"author":{"gitId":"ChongWeiJie29"},"content":"* **Enhancements implemented**:","lastModifiedDate":"2023-10-01"},{"lineNumber":15,"author":{"gitId":"ChongWeiJie29"},"content":"  * To be added","lastModifiedDate":"2023-10-01"},{"lineNumber":16,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":17,"author":{"gitId":"ChongWeiJie29"},"content":"* **Documentation**:","lastModifiedDate":"2023-10-01"},{"lineNumber":18,"author":{"gitId":"ChongWeiJie29"},"content":"  * User Guide:","lastModifiedDate":"2023-10-01"},{"lineNumber":19,"author":{"gitId":"ChongWeiJie29"},"content":"    * To be added","lastModifiedDate":"2023-10-01"},{"lineNumber":20,"author":{"gitId":"ChongWeiJie29"},"content":"  * Developer Guide:","lastModifiedDate":"2023-10-01"},{"lineNumber":21,"author":{"gitId":"ChongWeiJie29"},"content":"    * To be added","lastModifiedDate":"2023-10-01"},{"lineNumber":22,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":23,"author":{"gitId":"ChongWeiJie29"},"content":"* **Team-based tasks**:","lastModifiedDate":"2023-10-01"},{"lineNumber":24,"author":{"gitId":"ChongWeiJie29"},"content":"  * To be added","lastModifiedDate":"2023-10-01"},{"lineNumber":25,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":26,"author":{"gitId":"ChongWeiJie29"},"content":"* **Review and mentoring**:","lastModifiedDate":"2023-10-01"},{"lineNumber":27,"author":{"gitId":"ChongWeiJie29"},"content":"  * To be added","lastModifiedDate":"2023-10-01"},{"lineNumber":28,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":29,"author":{"gitId":"ChongWeiJie29"},"content":"* **Community**:","lastModifiedDate":"2023-10-01"},{"lineNumber":30,"author":{"gitId":"ChongWeiJie29"},"content":"  * To be added","lastModifiedDate":"2023-10-01"}],"authorContributionMap":{"ChongWeiJie29":30}},{"path":"docs/team/jingyu987.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"jingyu987"},"content":"---","lastModifiedDate":"2023-09-27"},{"lineNumber":2,"author":{"gitId":"jingyu987"},"content":"  layout: default.md","lastModifiedDate":"2023-09-27"},{"lineNumber":3,"author":{"gitId":"jingyu987"},"content":"  title: \"jingyu987\u0027s Project Portfolio Page\"","lastModifiedDate":"2023-09-27"},{"lineNumber":4,"author":{"gitId":"jingyu987"},"content":"---","lastModifiedDate":"2023-09-27"},{"lineNumber":5,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":6,"author":{"gitId":"jingyu987"},"content":"### Project: BayMeds v.2103","lastModifiedDate":"2023-09-27"},{"lineNumber":7,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":8,"author":{"gitId":"jingyu987"},"content":"BayMeds v.2103 is a desktop application used for tracking medications. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2023-09-27"},{"lineNumber":9,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":10,"author":{"gitId":"jingyu987"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-09-27"},{"lineNumber":11,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":12,"author":{"gitId":"jingyu987"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2324s1.github.io/tp-dashboard/?search\u003djingyu987\u0026breakdown\u003dtrue)","lastModifiedDate":"2023-09-27"},{"lineNumber":13,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":14,"author":{"gitId":"jingyu987"},"content":"* **Enhancements implemented**:","lastModifiedDate":"2023-09-27"},{"lineNumber":15,"author":{"gitId":"jingyu987"},"content":"  * To be added","lastModifiedDate":"2023-09-27"},{"lineNumber":16,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":17,"author":{"gitId":"jingyu987"},"content":"* **Documentation**:","lastModifiedDate":"2023-09-27"},{"lineNumber":18,"author":{"gitId":"jingyu987"},"content":"  * User Guide:","lastModifiedDate":"2023-09-27"},{"lineNumber":19,"author":{"gitId":"jingyu987"},"content":"    * To be added","lastModifiedDate":"2023-09-27"},{"lineNumber":20,"author":{"gitId":"jingyu987"},"content":"  * Developer Guide:","lastModifiedDate":"2023-09-27"},{"lineNumber":21,"author":{"gitId":"jingyu987"},"content":"    * To be added","lastModifiedDate":"2023-09-27"},{"lineNumber":22,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":23,"author":{"gitId":"jingyu987"},"content":"* **Team-based tasks**:","lastModifiedDate":"2023-09-27"},{"lineNumber":24,"author":{"gitId":"jingyu987"},"content":"  * To be added","lastModifiedDate":"2023-09-27"},{"lineNumber":25,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":26,"author":{"gitId":"jingyu987"},"content":"* **Review and mentoring**:","lastModifiedDate":"2023-09-27"},{"lineNumber":27,"author":{"gitId":"jingyu987"},"content":"  * To be added","lastModifiedDate":"2023-09-27"},{"lineNumber":28,"author":{"gitId":"jingyu987"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":29,"author":{"gitId":"jingyu987"},"content":"* **Community**:","lastModifiedDate":"2023-09-27"},{"lineNumber":30,"author":{"gitId":"jingyu987"},"content":"  * To be added","lastModifiedDate":"2023-09-27"}],"authorContributionMap":{"jingyu987":30}},{"path":"docs/team/roerere.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"RoeReRe"},"content":"---","lastModifiedDate":"2023-09-25"},{"lineNumber":2,"author":{"gitId":"RoeReRe"},"content":"  layout: default.md","lastModifiedDate":"2023-09-25"},{"lineNumber":3,"author":{"gitId":"RoeReRe"},"content":"  title: \"RoeReRe\u0027s Project Portfolio Page\"","lastModifiedDate":"2023-09-25"},{"lineNumber":4,"author":{"gitId":"RoeReRe"},"content":"---","lastModifiedDate":"2023-09-25"},{"lineNumber":5,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":6,"author":{"gitId":"RoeReRe"},"content":"### Project: BayMeds v.2103","lastModifiedDate":"2023-09-25"},{"lineNumber":7,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":8,"author":{"gitId":"RoeReRe"},"content":"BayMeds v.2103 is a desktop application used for tracking medications. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2023-09-25"},{"lineNumber":9,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":10,"author":{"gitId":"RoeReRe"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-09-25"},{"lineNumber":11,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":12,"author":{"gitId":"RoeReRe"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2324s1.github.io/tp-dashboard/?search\u003droerere\u0026breakdown\u003dtrue)","lastModifiedDate":"2023-09-25"},{"lineNumber":13,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":14,"author":{"gitId":"RoeReRe"},"content":"* **Enhancements implemented**:","lastModifiedDate":"2023-09-25"},{"lineNumber":15,"author":{"gitId":"RoeReRe"},"content":"  * To be added","lastModifiedDate":"2023-09-25"},{"lineNumber":16,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":17,"author":{"gitId":"RoeReRe"},"content":"* **Documentation**:","lastModifiedDate":"2023-09-25"},{"lineNumber":18,"author":{"gitId":"RoeReRe"},"content":"  * User Guide:","lastModifiedDate":"2023-09-25"},{"lineNumber":19,"author":{"gitId":"RoeReRe"},"content":"    * To be added","lastModifiedDate":"2023-09-25"},{"lineNumber":20,"author":{"gitId":"RoeReRe"},"content":"  * Developer Guide:","lastModifiedDate":"2023-09-25"},{"lineNumber":21,"author":{"gitId":"RoeReRe"},"content":"    * To be added","lastModifiedDate":"2023-09-25"},{"lineNumber":22,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":23,"author":{"gitId":"RoeReRe"},"content":"* **Team-based tasks**:","lastModifiedDate":"2023-09-25"},{"lineNumber":24,"author":{"gitId":"RoeReRe"},"content":"  * To be added","lastModifiedDate":"2023-09-25"},{"lineNumber":25,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":26,"author":{"gitId":"RoeReRe"},"content":"* **Review and mentoring**:","lastModifiedDate":"2023-09-25"},{"lineNumber":27,"author":{"gitId":"RoeReRe"},"content":"  * To be added","lastModifiedDate":"2023-09-25"},{"lineNumber":28,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":29,"author":{"gitId":"RoeReRe"},"content":"* **Community**:","lastModifiedDate":"2023-09-25"},{"lineNumber":30,"author":{"gitId":"RoeReRe"},"content":"  * To be added","lastModifiedDate":"2023-09-25"}],"authorContributionMap":{"RoeReRe":30}},{"path":"docs/team/shyanyong.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"shyanyong"},"content":"---","lastModifiedDate":"2023-09-27"},{"lineNumber":2,"author":{"gitId":"shyanyong"},"content":"  layout: default.md","lastModifiedDate":"2023-09-27"},{"lineNumber":3,"author":{"gitId":"shyanyong"},"content":"  title: \"shyanyong\u0027s Project Portfolio Page\"","lastModifiedDate":"2023-09-27"},{"lineNumber":4,"author":{"gitId":"shyanyong"},"content":"---","lastModifiedDate":"2023-09-27"},{"lineNumber":5,"author":{"gitId":"shyanyong"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":6,"author":{"gitId":"shyanyong"},"content":"### Project: BayMeds v.2103","lastModifiedDate":"2023-09-27"},{"lineNumber":7,"author":{"gitId":"shyanyong"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":8,"author":{"gitId":"shyanyong"},"content":"BayMeds v.2103 is a desktop application used for tracking medications. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2023-09-27"},{"lineNumber":9,"author":{"gitId":"shyanyong"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":10,"author":{"gitId":"shyanyong"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-09-27"},{"lineNumber":11,"author":{"gitId":"shyanyong"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":12,"author":{"gitId":"shyanyong"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2324s1.github.io/tp-dashboard/?search\u003dshyanyong\u0026breakdown\u003dtrue)","lastModifiedDate":"2023-09-27"},{"lineNumber":13,"author":{"gitId":"shyanyong"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":14,"author":{"gitId":"shyanyong"},"content":"* **Enhancements implemented**:","lastModifiedDate":"2023-09-27"},{"lineNumber":15,"author":{"gitId":"shyanyong"},"content":"  * To be added","lastModifiedDate":"2023-09-27"},{"lineNumber":16,"author":{"gitId":"shyanyong"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":17,"author":{"gitId":"shyanyong"},"content":"* **Documentation**:","lastModifiedDate":"2023-09-27"},{"lineNumber":18,"author":{"gitId":"shyanyong"},"content":"  * User Guide:","lastModifiedDate":"2023-09-27"},{"lineNumber":19,"author":{"gitId":"shyanyong"},"content":"    * To be added","lastModifiedDate":"2023-09-27"},{"lineNumber":20,"author":{"gitId":"shyanyong"},"content":"  * Developer Guide:","lastModifiedDate":"2023-09-27"},{"lineNumber":21,"author":{"gitId":"shyanyong"},"content":"    * To be added","lastModifiedDate":"2023-09-27"},{"lineNumber":22,"author":{"gitId":"shyanyong"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":23,"author":{"gitId":"shyanyong"},"content":"* **Team-based tasks**:","lastModifiedDate":"2023-09-27"},{"lineNumber":24,"author":{"gitId":"shyanyong"},"content":"  * To be added","lastModifiedDate":"2023-09-27"},{"lineNumber":25,"author":{"gitId":"shyanyong"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":26,"author":{"gitId":"shyanyong"},"content":"* **Review and mentoring**:","lastModifiedDate":"2023-09-27"},{"lineNumber":27,"author":{"gitId":"shyanyong"},"content":"  * To be added","lastModifiedDate":"2023-09-27"},{"lineNumber":28,"author":{"gitId":"shyanyong"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":29,"author":{"gitId":"shyanyong"},"content":"* **Community**:","lastModifiedDate":"2023-09-27"},{"lineNumber":30,"author":{"gitId":"shyanyong"},"content":"  * To be added","lastModifiedDate":"2023-09-27"}],"authorContributionMap":{"shyanyong":30}},{"path":"docs/team/teerenjing.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"TeeRenJing"},"content":"---","lastModifiedDate":"2023-09-26"},{"lineNumber":2,"author":{"gitId":"TeeRenJing"},"content":"  layout: default.md","lastModifiedDate":"2023-09-26"},{"lineNumber":3,"author":{"gitId":"TeeRenJing"},"content":"  title: \"TeeRenJing\u0027s Project Portfolio Page\"","lastModifiedDate":"2023-09-26"},{"lineNumber":4,"author":{"gitId":"TeeRenJing"},"content":"---","lastModifiedDate":"2023-09-26"},{"lineNumber":5,"author":{"gitId":"TeeRenJing"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":6,"author":{"gitId":"TeeRenJing"},"content":"### Project: BayMeds v.2103","lastModifiedDate":"2023-09-26"},{"lineNumber":7,"author":{"gitId":"TeeRenJing"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":8,"author":{"gitId":"TeeRenJing"},"content":"BayMeds v.2103 is a desktop application used for tracking medications. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2023-09-26"},{"lineNumber":9,"author":{"gitId":"TeeRenJing"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":10,"author":{"gitId":"TeeRenJing"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-09-26"},{"lineNumber":11,"author":{"gitId":"TeeRenJing"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":12,"author":{"gitId":"TeeRenJing"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2324s1.github.io/tp-dashboard/?search\u003dteerenjing\u0026breakdown\u003dtrue)","lastModifiedDate":"2023-09-26"},{"lineNumber":13,"author":{"gitId":"TeeRenJing"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":14,"author":{"gitId":"TeeRenJing"},"content":"* **Enhancements implemented**:","lastModifiedDate":"2023-09-26"},{"lineNumber":15,"author":{"gitId":"TeeRenJing"},"content":"  * To be added","lastModifiedDate":"2023-09-26"},{"lineNumber":16,"author":{"gitId":"TeeRenJing"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":17,"author":{"gitId":"TeeRenJing"},"content":"* **Documentation**:","lastModifiedDate":"2023-09-26"},{"lineNumber":18,"author":{"gitId":"TeeRenJing"},"content":"  * User Guide:","lastModifiedDate":"2023-09-26"},{"lineNumber":19,"author":{"gitId":"TeeRenJing"},"content":"    * To be added","lastModifiedDate":"2023-09-26"},{"lineNumber":20,"author":{"gitId":"TeeRenJing"},"content":"  * Developer Guide:","lastModifiedDate":"2023-09-26"},{"lineNumber":21,"author":{"gitId":"TeeRenJing"},"content":"    * To be added","lastModifiedDate":"2023-09-26"},{"lineNumber":22,"author":{"gitId":"TeeRenJing"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":23,"author":{"gitId":"TeeRenJing"},"content":"* **Team-based tasks**:","lastModifiedDate":"2023-09-26"},{"lineNumber":24,"author":{"gitId":"TeeRenJing"},"content":"  * To be added","lastModifiedDate":"2023-09-26"},{"lineNumber":25,"author":{"gitId":"TeeRenJing"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":26,"author":{"gitId":"TeeRenJing"},"content":"* **Review and mentoring**:","lastModifiedDate":"2023-09-26"},{"lineNumber":27,"author":{"gitId":"TeeRenJing"},"content":"  * To be added","lastModifiedDate":"2023-09-26"},{"lineNumber":28,"author":{"gitId":"TeeRenJing"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":29,"author":{"gitId":"TeeRenJing"},"content":"* **Community**:","lastModifiedDate":"2023-09-26"},{"lineNumber":30,"author":{"gitId":"TeeRenJing"},"content":"  * To be added","lastModifiedDate":"2023-09-26"}],"authorContributionMap":{"TeeRenJing":30}},{"path":"src/main/java/seedu/address/Main.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address;","lastModifiedDate":"2019-02-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-07-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2019-02-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-07-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2019-02-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * The main entry point to the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * This is a workaround for the following error when MainApp is made the","lastModifiedDate":"2019-02-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * entry point of the application:","lastModifiedDate":"2019-02-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" *     Error: JavaFX runtime components are missing, and are required to run this application","lastModifiedDate":"2019-02-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The reason is that MainApp extends Application. In that case, the","lastModifiedDate":"2019-02-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * LauncherHelper will check for the javafx.graphics module to be present","lastModifiedDate":"2019-02-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * as a named module. We don\u0027t use JavaFX via the module system so it can\u0027t","lastModifiedDate":"2019-02-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * find the javafx.graphics module, and so the launch is aborted.","lastModifiedDate":"2019-02-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * By having a separate main class (Main) that doesn\u0027t extend Application","lastModifiedDate":"2019-02-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * to be the entry point of the application, we avoid this issue.","lastModifiedDate":"2019-02-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2019-02-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class Main {","lastModifiedDate":"2019-02-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static Logger logger \u003d LogsCenter.getLogger(Main.class);","lastModifiedDate":"2023-07-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-02-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // As per https://github.com/openjdk/jfx/blob/master/doc-files/release-notes-16.md","lastModifiedDate":"2023-07-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // JavaFX 16 (or later) runtime logs a warning at startup if JavaFX classes are loaded from","lastModifiedDate":"2023-07-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // the classpath instead of a module.","lastModifiedDate":"2023-07-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // Our application does not use Java modules yet. Even if it did, modules are ignored when","lastModifiedDate":"2023-07-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // packed into a FAT Jar file (as we do), which means this warning will persist even then.","lastModifiedDate":"2023-07-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // The warning however, can be safely ignored. Thus, the following log informs","lastModifiedDate":"2023-07-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // the user (if looking at the log output) that the said warning appearing in the log","lastModifiedDate":"2023-07-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // can be ignored.","lastModifiedDate":"2023-07-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        logger.warning(\"The warning about Unsupported JavaFX configuration below can be ignored.\");","lastModifiedDate":"2023-07-27"},{"lineNumber":39,"author":{"gitId":"ChongWeiJie29"},"content":"        Application.launch(MainAppPrescription.class, args);","lastModifiedDate":"2023-10-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-02-08"}],"authorContributionMap":{"ChongWeiJie29":1,"-":40}},{"path":"src/main/java/seedu/address/MainAppPrescription.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ChongWeiJie29"},"content":"package seedu.address;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"ChongWeiJie29"},"content":"import java.io.IOException;","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"ChongWeiJie29"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"ChongWeiJie29"},"content":"import java.util.Optional;","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"ChongWeiJie29"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"ChongWeiJie29"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"ChongWeiJie29"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"ChongWeiJie29"},"content":"import seedu.address.commons.core.Config;","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"ChongWeiJie29"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"ChongWeiJie29"},"content":"import seedu.address.commons.core.Version;","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"ChongWeiJie29"},"content":"import seedu.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"ChongWeiJie29"},"content":"import seedu.address.commons.util.ConfigUtil;","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"ChongWeiJie29"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"ChongWeiJie29"},"content":"import seedu.address.logic.LogicManagerPrescription;","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"ChongWeiJie29"},"content":"import seedu.address.logic.LogicPrescription;","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"ChongWeiJie29"},"content":"import seedu.address.model.ModelManagerPrescription;","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"ChongWeiJie29"},"content":"import seedu.address.model.ModelPrescription;","lastModifiedDate":"2023-10-12"},{"lineNumber":20,"author":{"gitId":"ChongWeiJie29"},"content":"import seedu.address.model.PrescriptionList;","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"ChongWeiJie29"},"content":"import seedu.address.model.ReadOnlyPrescriptionList;","lastModifiedDate":"2023-10-12"},{"lineNumber":22,"author":{"gitId":"ChongWeiJie29"},"content":"import seedu.address.model.ReadOnlyUserPrefsPrescription;","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"ChongWeiJie29"},"content":"import seedu.address.model.UserPrefsPrescription;","lastModifiedDate":"2023-10-12"},{"lineNumber":24,"author":{"gitId":"ChongWeiJie29"},"content":"import seedu.address.model.util.SampleDataUtilPrescription;","lastModifiedDate":"2023-10-12"},{"lineNumber":25,"author":{"gitId":"ChongWeiJie29"},"content":"import seedu.address.storage.JsonPrescriptionListStorage;","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"ChongWeiJie29"},"content":"import seedu.address.storage.JsonUserPrefsStoragePrescription;","lastModifiedDate":"2023-10-12"},{"lineNumber":27,"author":{"gitId":"ChongWeiJie29"},"content":"import seedu.address.storage.PrescriptionListStorage;","lastModifiedDate":"2023-10-12"},{"lineNumber":28,"author":{"gitId":"ChongWeiJie29"},"content":"import seedu.address.storage.StorageManagerPrescription;","lastModifiedDate":"2023-10-12"},{"lineNumber":29,"author":{"gitId":"ChongWeiJie29"},"content":"import seedu.address.storage.StoragePrescription;","lastModifiedDate":"2023-10-12"},{"lineNumber":30,"author":{"gitId":"ChongWeiJie29"},"content":"import seedu.address.storage.UserPrefsStoragePrescription;","lastModifiedDate":"2023-10-12"},{"lineNumber":31,"author":{"gitId":"ChongWeiJie29"},"content":"import seedu.address.ui.Ui;","lastModifiedDate":"2023-10-12"},{"lineNumber":32,"author":{"gitId":"ChongWeiJie29"},"content":"import seedu.address.ui.UiManagerPrescription;","lastModifiedDate":"2023-10-12"},{"lineNumber":33,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":34,"author":{"gitId":"ChongWeiJie29"},"content":"/**","lastModifiedDate":"2023-10-12"},{"lineNumber":35,"author":{"gitId":"ChongWeiJie29"},"content":" * Runs the application.","lastModifiedDate":"2023-10-12"},{"lineNumber":36,"author":{"gitId":"ChongWeiJie29"},"content":" */","lastModifiedDate":"2023-10-12"},{"lineNumber":37,"author":{"gitId":"ChongWeiJie29"},"content":"public class MainAppPrescription extends Application {","lastModifiedDate":"2023-10-12"},{"lineNumber":38,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":39,"author":{"gitId":"ChongWeiJie29"},"content":"    public static final Version VERSION \u003d new Version(0, 2, 2, true);","lastModifiedDate":"2023-10-12"},{"lineNumber":40,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":41,"author":{"gitId":"ChongWeiJie29"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(MainAppPrescription.class);","lastModifiedDate":"2023-10-12"},{"lineNumber":42,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":43,"author":{"gitId":"ChongWeiJie29"},"content":"    protected Ui ui;","lastModifiedDate":"2023-10-12"},{"lineNumber":44,"author":{"gitId":"ChongWeiJie29"},"content":"    protected LogicPrescription logic;","lastModifiedDate":"2023-10-12"},{"lineNumber":45,"author":{"gitId":"ChongWeiJie29"},"content":"    protected StoragePrescription storage;","lastModifiedDate":"2023-10-12"},{"lineNumber":46,"author":{"gitId":"ChongWeiJie29"},"content":"    protected ModelPrescription model;","lastModifiedDate":"2023-10-12"},{"lineNumber":47,"author":{"gitId":"ChongWeiJie29"},"content":"    protected Config config;","lastModifiedDate":"2023-10-12"},{"lineNumber":48,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":49,"author":{"gitId":"ChongWeiJie29"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":50,"author":{"gitId":"ChongWeiJie29"},"content":"    public void init() throws Exception {","lastModifiedDate":"2023-10-12"},{"lineNumber":51,"author":{"gitId":"ChongWeiJie29"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d[ Initializing PrescriptionList ]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2023-10-12"},{"lineNumber":52,"author":{"gitId":"ChongWeiJie29"},"content":"        super.init();","lastModifiedDate":"2023-10-12"},{"lineNumber":53,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":54,"author":{"gitId":"ChongWeiJie29"},"content":"        AppParameters appParameters \u003d AppParameters.parse(getParameters());","lastModifiedDate":"2023-10-12"},{"lineNumber":55,"author":{"gitId":"ChongWeiJie29"},"content":"        config \u003d initConfig(appParameters.getConfigPath());","lastModifiedDate":"2023-10-12"},{"lineNumber":56,"author":{"gitId":"ChongWeiJie29"},"content":"        initLogging(config);","lastModifiedDate":"2023-10-12"},{"lineNumber":57,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":58,"author":{"gitId":"ChongWeiJie29"},"content":"        UserPrefsStoragePrescription userPrefsStorage \u003d new JsonUserPrefsStoragePrescription(","lastModifiedDate":"2023-10-12"},{"lineNumber":59,"author":{"gitId":"ChongWeiJie29"},"content":"            config.getUserPrefsFilePath());","lastModifiedDate":"2023-10-12"},{"lineNumber":60,"author":{"gitId":"ChongWeiJie29"},"content":"        UserPrefsPrescription userPrefs \u003d initPrefs(userPrefsStorage);","lastModifiedDate":"2023-10-12"},{"lineNumber":61,"author":{"gitId":"ChongWeiJie29"},"content":"        PrescriptionListStorage prescriptionListStorage \u003d new JsonPrescriptionListStorage(","lastModifiedDate":"2023-10-12"},{"lineNumber":62,"author":{"gitId":"ChongWeiJie29"},"content":"            userPrefs.getPrescriptionListFilePath());","lastModifiedDate":"2023-10-12"},{"lineNumber":63,"author":{"gitId":"ChongWeiJie29"},"content":"        storage \u003d new StorageManagerPrescription(prescriptionListStorage, userPrefsStorage);","lastModifiedDate":"2023-10-12"},{"lineNumber":64,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":65,"author":{"gitId":"ChongWeiJie29"},"content":"        model \u003d initModelManager(storage, userPrefs);","lastModifiedDate":"2023-10-12"},{"lineNumber":66,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":67,"author":{"gitId":"ChongWeiJie29"},"content":"        logic \u003d new LogicManagerPrescription(model, storage);","lastModifiedDate":"2023-10-12"},{"lineNumber":68,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":69,"author":{"gitId":"ChongWeiJie29"},"content":"        ui \u003d new UiManagerPrescription(logic);","lastModifiedDate":"2023-10-12"},{"lineNumber":70,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":71,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":72,"author":{"gitId":"ChongWeiJie29"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":73,"author":{"gitId":"ChongWeiJie29"},"content":"     * Returns a {@code ModelManager} with the data from {@code storage}\u0027s address book and {@code userPrefs}. \u003cbr\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":74,"author":{"gitId":"ChongWeiJie29"},"content":"     * The data from the sample address book will be used instead if {@code storage}\u0027s address book is not found,","lastModifiedDate":"2023-10-12"},{"lineNumber":75,"author":{"gitId":"ChongWeiJie29"},"content":"     * or an empty address book will be used instead if errors occur when reading {@code storage}\u0027s address book.","lastModifiedDate":"2023-10-12"},{"lineNumber":76,"author":{"gitId":"ChongWeiJie29"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":77,"author":{"gitId":"ChongWeiJie29"},"content":"    private ModelPrescription initModelManager(StoragePrescription storage, ReadOnlyUserPrefsPrescription userPrefs) {","lastModifiedDate":"2023-10-12"},{"lineNumber":78,"author":{"gitId":"ChongWeiJie29"},"content":"        logger.info(\"Using data file : \" + storage.getPrescriptionListFilePath());","lastModifiedDate":"2023-10-12"},{"lineNumber":79,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":80,"author":{"gitId":"ChongWeiJie29"},"content":"        Optional\u003cReadOnlyPrescriptionList\u003e prescriptionListOptional;","lastModifiedDate":"2023-10-12"},{"lineNumber":81,"author":{"gitId":"ChongWeiJie29"},"content":"        ReadOnlyPrescriptionList initialData;","lastModifiedDate":"2023-10-12"},{"lineNumber":82,"author":{"gitId":"ChongWeiJie29"},"content":"        try {","lastModifiedDate":"2023-10-12"},{"lineNumber":83,"author":{"gitId":"ChongWeiJie29"},"content":"            prescriptionListOptional \u003d storage.readPrescriptionList();","lastModifiedDate":"2023-10-12"},{"lineNumber":84,"author":{"gitId":"ChongWeiJie29"},"content":"            if (!((Optional\u003c?\u003e) prescriptionListOptional).isPresent()) {","lastModifiedDate":"2023-10-12"},{"lineNumber":85,"author":{"gitId":"ChongWeiJie29"},"content":"                logger.info(\"Creating a new data file \" + storage.getPrescriptionListFilePath()","lastModifiedDate":"2023-10-12"},{"lineNumber":86,"author":{"gitId":"ChongWeiJie29"},"content":"                        + \" populated with a sample PrescriptionList.\");","lastModifiedDate":"2023-10-12"},{"lineNumber":87,"author":{"gitId":"ChongWeiJie29"},"content":"            }","lastModifiedDate":"2023-10-12"},{"lineNumber":88,"author":{"gitId":"ChongWeiJie29"},"content":"            initialData \u003d prescriptionListOptional.orElseGet(SampleDataUtilPrescription::getSamplePrescriptionList);","lastModifiedDate":"2023-10-12"},{"lineNumber":89,"author":{"gitId":"ChongWeiJie29"},"content":"        } catch (DataLoadingException e) {","lastModifiedDate":"2023-10-12"},{"lineNumber":90,"author":{"gitId":"ChongWeiJie29"},"content":"            logger.warning(\"Data file at \" + storage.getPrescriptionListFilePath() + \" could not be loaded.\"","lastModifiedDate":"2023-10-12"},{"lineNumber":91,"author":{"gitId":"ChongWeiJie29"},"content":"                    + \" Will be starting with an empty PrescriptionList.\");","lastModifiedDate":"2023-10-12"},{"lineNumber":92,"author":{"gitId":"ChongWeiJie29"},"content":"            initialData \u003d new PrescriptionList();","lastModifiedDate":"2023-10-12"},{"lineNumber":93,"author":{"gitId":"ChongWeiJie29"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":94,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":95,"author":{"gitId":"ChongWeiJie29"},"content":"        return new ModelManagerPrescription(initialData, userPrefs);","lastModifiedDate":"2023-10-12"},{"lineNumber":96,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":97,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":98,"author":{"gitId":"ChongWeiJie29"},"content":"    private void initLogging(Config config) {","lastModifiedDate":"2023-10-12"},{"lineNumber":99,"author":{"gitId":"ChongWeiJie29"},"content":"        LogsCenter.init(config);","lastModifiedDate":"2023-10-12"},{"lineNumber":100,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":101,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":102,"author":{"gitId":"ChongWeiJie29"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":103,"author":{"gitId":"ChongWeiJie29"},"content":"     * Returns a {@code Config} using the file at {@code configFilePath}. \u003cbr\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":104,"author":{"gitId":"ChongWeiJie29"},"content":"     * The default file path {@code Config#DEFAULT_CONFIG_FILE} will be used instead","lastModifiedDate":"2023-10-12"},{"lineNumber":105,"author":{"gitId":"ChongWeiJie29"},"content":"     * if {@code configFilePath} is null.","lastModifiedDate":"2023-10-12"},{"lineNumber":106,"author":{"gitId":"ChongWeiJie29"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":107,"author":{"gitId":"ChongWeiJie29"},"content":"    protected Config initConfig(Path configFilePath) {","lastModifiedDate":"2023-10-12"},{"lineNumber":108,"author":{"gitId":"ChongWeiJie29"},"content":"        Config initializedConfig;","lastModifiedDate":"2023-10-12"},{"lineNumber":109,"author":{"gitId":"ChongWeiJie29"},"content":"        Path configFilePathUsed;","lastModifiedDate":"2023-10-12"},{"lineNumber":110,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":111,"author":{"gitId":"ChongWeiJie29"},"content":"        configFilePathUsed \u003d Config.DEFAULT_CONFIG_FILE;","lastModifiedDate":"2023-10-12"},{"lineNumber":112,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":113,"author":{"gitId":"ChongWeiJie29"},"content":"        if (configFilePath !\u003d null) {","lastModifiedDate":"2023-10-12"},{"lineNumber":114,"author":{"gitId":"ChongWeiJie29"},"content":"            logger.info(\"Custom Config file specified \" + configFilePath);","lastModifiedDate":"2023-10-12"},{"lineNumber":115,"author":{"gitId":"ChongWeiJie29"},"content":"            configFilePathUsed \u003d configFilePath;","lastModifiedDate":"2023-10-12"},{"lineNumber":116,"author":{"gitId":"ChongWeiJie29"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":117,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":118,"author":{"gitId":"ChongWeiJie29"},"content":"        logger.info(\"Using config file : \" + configFilePathUsed);","lastModifiedDate":"2023-10-12"},{"lineNumber":119,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":120,"author":{"gitId":"ChongWeiJie29"},"content":"        try {","lastModifiedDate":"2023-10-12"},{"lineNumber":121,"author":{"gitId":"ChongWeiJie29"},"content":"            Optional\u003cConfig\u003e configOptional \u003d ConfigUtil.readConfig(configFilePathUsed);","lastModifiedDate":"2023-10-12"},{"lineNumber":122,"author":{"gitId":"ChongWeiJie29"},"content":"            if (!configOptional.isPresent()) {","lastModifiedDate":"2023-10-12"},{"lineNumber":123,"author":{"gitId":"ChongWeiJie29"},"content":"                logger.info(\"Creating new config file \" + configFilePathUsed);","lastModifiedDate":"2023-10-12"},{"lineNumber":124,"author":{"gitId":"ChongWeiJie29"},"content":"            }","lastModifiedDate":"2023-10-12"},{"lineNumber":125,"author":{"gitId":"ChongWeiJie29"},"content":"            initializedConfig \u003d configOptional.orElse(new Config());","lastModifiedDate":"2023-10-12"},{"lineNumber":126,"author":{"gitId":"ChongWeiJie29"},"content":"        } catch (DataLoadingException e) {","lastModifiedDate":"2023-10-12"},{"lineNumber":127,"author":{"gitId":"ChongWeiJie29"},"content":"            logger.warning(\"Config file at \" + configFilePathUsed + \" could not be loaded.\"","lastModifiedDate":"2023-10-12"},{"lineNumber":128,"author":{"gitId":"ChongWeiJie29"},"content":"                    + \" Using default config properties.\");","lastModifiedDate":"2023-10-12"},{"lineNumber":129,"author":{"gitId":"ChongWeiJie29"},"content":"            initializedConfig \u003d new Config();","lastModifiedDate":"2023-10-12"},{"lineNumber":130,"author":{"gitId":"ChongWeiJie29"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":131,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":132,"author":{"gitId":"ChongWeiJie29"},"content":"        //Update config file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2023-10-12"},{"lineNumber":133,"author":{"gitId":"ChongWeiJie29"},"content":"        try {","lastModifiedDate":"2023-10-12"},{"lineNumber":134,"author":{"gitId":"ChongWeiJie29"},"content":"            ConfigUtil.saveConfig(initializedConfig, configFilePathUsed);","lastModifiedDate":"2023-10-12"},{"lineNumber":135,"author":{"gitId":"ChongWeiJie29"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-10-12"},{"lineNumber":136,"author":{"gitId":"ChongWeiJie29"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2023-10-12"},{"lineNumber":137,"author":{"gitId":"ChongWeiJie29"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":138,"author":{"gitId":"ChongWeiJie29"},"content":"        return initializedConfig;","lastModifiedDate":"2023-10-12"},{"lineNumber":139,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":140,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":141,"author":{"gitId":"ChongWeiJie29"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":142,"author":{"gitId":"ChongWeiJie29"},"content":"     * Returns a {@code UserPrefs} using the file at {@code storage}\u0027s user prefs file path,","lastModifiedDate":"2023-10-12"},{"lineNumber":143,"author":{"gitId":"ChongWeiJie29"},"content":"     * or a new {@code UserPrefs} with default configuration if errors occur when","lastModifiedDate":"2023-10-12"},{"lineNumber":144,"author":{"gitId":"ChongWeiJie29"},"content":"     * reading from the file.","lastModifiedDate":"2023-10-12"},{"lineNumber":145,"author":{"gitId":"ChongWeiJie29"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":146,"author":{"gitId":"ChongWeiJie29"},"content":"    protected UserPrefsPrescription initPrefs(UserPrefsStoragePrescription storage) {","lastModifiedDate":"2023-10-12"},{"lineNumber":147,"author":{"gitId":"ChongWeiJie29"},"content":"        Path prefsFilePath \u003d storage.getUserPrefsFilePath();","lastModifiedDate":"2023-10-12"},{"lineNumber":148,"author":{"gitId":"ChongWeiJie29"},"content":"        logger.info(\"Using preference file : \" + prefsFilePath);","lastModifiedDate":"2023-10-12"},{"lineNumber":149,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":150,"author":{"gitId":"ChongWeiJie29"},"content":"        UserPrefsPrescription initializedPrefs;","lastModifiedDate":"2023-10-12"},{"lineNumber":151,"author":{"gitId":"ChongWeiJie29"},"content":"        try {","lastModifiedDate":"2023-10-12"},{"lineNumber":152,"author":{"gitId":"ChongWeiJie29"},"content":"            Optional\u003cUserPrefsPrescription\u003e prefsOptional \u003d storage.readUserPrefs();","lastModifiedDate":"2023-10-12"},{"lineNumber":153,"author":{"gitId":"ChongWeiJie29"},"content":"            if (!prefsOptional.isPresent()) {","lastModifiedDate":"2023-10-12"},{"lineNumber":154,"author":{"gitId":"ChongWeiJie29"},"content":"                logger.info(\"Creating new preference file \" + prefsFilePath);","lastModifiedDate":"2023-10-12"},{"lineNumber":155,"author":{"gitId":"ChongWeiJie29"},"content":"            }","lastModifiedDate":"2023-10-12"},{"lineNumber":156,"author":{"gitId":"ChongWeiJie29"},"content":"            initializedPrefs \u003d prefsOptional.orElse(new UserPrefsPrescription());","lastModifiedDate":"2023-10-12"},{"lineNumber":157,"author":{"gitId":"ChongWeiJie29"},"content":"        } catch (DataLoadingException e) {","lastModifiedDate":"2023-10-12"},{"lineNumber":158,"author":{"gitId":"ChongWeiJie29"},"content":"            logger.warning(\"Preference file at \" + prefsFilePath + \" could not be loaded.\"","lastModifiedDate":"2023-10-12"},{"lineNumber":159,"author":{"gitId":"ChongWeiJie29"},"content":"                    + \" Using default preferences.\");","lastModifiedDate":"2023-10-12"},{"lineNumber":160,"author":{"gitId":"ChongWeiJie29"},"content":"            initializedPrefs \u003d new UserPrefsPrescription();","lastModifiedDate":"2023-10-12"},{"lineNumber":161,"author":{"gitId":"ChongWeiJie29"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":162,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":163,"author":{"gitId":"ChongWeiJie29"},"content":"        //Update prefs file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2023-10-12"},{"lineNumber":164,"author":{"gitId":"ChongWeiJie29"},"content":"        try {","lastModifiedDate":"2023-10-12"},{"lineNumber":165,"author":{"gitId":"ChongWeiJie29"},"content":"            storage.saveUserPrefs(initializedPrefs);","lastModifiedDate":"2023-10-12"},{"lineNumber":166,"author":{"gitId":"ChongWeiJie29"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-10-12"},{"lineNumber":167,"author":{"gitId":"ChongWeiJie29"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2023-10-12"},{"lineNumber":168,"author":{"gitId":"ChongWeiJie29"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":169,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":170,"author":{"gitId":"ChongWeiJie29"},"content":"        return initializedPrefs;","lastModifiedDate":"2023-10-12"},{"lineNumber":171,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":172,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":173,"author":{"gitId":"ChongWeiJie29"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":174,"author":{"gitId":"ChongWeiJie29"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2023-10-12"},{"lineNumber":175,"author":{"gitId":"ChongWeiJie29"},"content":"        logger.info(\"Starting PrescriptionList \" + MainAppPrescription.VERSION);","lastModifiedDate":"2023-10-12"},{"lineNumber":176,"author":{"gitId":"ChongWeiJie29"},"content":"        ui.start(primaryStage);","lastModifiedDate":"2023-10-12"},{"lineNumber":177,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":178,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":179,"author":{"gitId":"ChongWeiJie29"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":180,"author":{"gitId":"ChongWeiJie29"},"content":"    public void stop() {","lastModifiedDate":"2023-10-12"},{"lineNumber":181,"author":{"gitId":"ChongWeiJie29"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d [ Stopping Address Book ] \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2023-10-12"},{"lineNumber":182,"author":{"gitId":"ChongWeiJie29"},"content":"        try {","lastModifiedDate":"2023-10-12"},{"lineNumber":183,"author":{"gitId":"ChongWeiJie29"},"content":"            storage.saveUserPrefs(model.getUserPrefs());","lastModifiedDate":"2023-10-12"},{"lineNumber":184,"author":{"gitId":"ChongWeiJie29"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-10-12"},{"lineNumber":185,"author":{"gitId":"ChongWeiJie29"},"content":"            logger.severe(\"Failed to save preferences \" + StringUtil.getDetails(e));","lastModifiedDate":"2023-10-12"},{"lineNumber":186,"author":{"gitId":"ChongWeiJie29"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":187,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":188,"author":{"gitId":"ChongWeiJie29"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"ChongWeiJie29":188}},{"path":"src/main/java/seedu/address/logic/LogicManagerPrescription.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ChongWeiJie29"},"content":"package seedu.address.logic;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"ChongWeiJie29"},"content":"import java.io.IOException;","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"ChongWeiJie29"},"content":"import java.nio.file.AccessDeniedException;","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"ChongWeiJie29"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"ChongWeiJie29"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"ChongWeiJie29"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"ChongWeiJie29"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"ChongWeiJie29"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"ChongWeiJie29"},"content":"import seedu.address.logic.commands.CommandPrescription;","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"ChongWeiJie29"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"ChongWeiJie29"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"ChongWeiJie29"},"content":"import seedu.address.logic.parser.PrescriptionListParser;","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"ChongWeiJie29"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"ChongWeiJie29"},"content":"import seedu.address.model.ModelPrescription;","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"ChongWeiJie29"},"content":"import seedu.address.model.ReadOnlyPrescriptionList;","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"ChongWeiJie29"},"content":"import seedu.address.model.prescription.Prescription;","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"ChongWeiJie29"},"content":"import seedu.address.storage.StoragePrescription;","lastModifiedDate":"2023-10-12"},{"lineNumber":20,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"ChongWeiJie29"},"content":"/**","lastModifiedDate":"2023-10-12"},{"lineNumber":22,"author":{"gitId":"ChongWeiJie29"},"content":" * The main LogicManagerPrescription of the app.","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"ChongWeiJie29"},"content":" */","lastModifiedDate":"2023-10-12"},{"lineNumber":24,"author":{"gitId":"ChongWeiJie29"},"content":"public class LogicManagerPrescription implements LogicPrescription {","lastModifiedDate":"2023-10-12"},{"lineNumber":25,"author":{"gitId":"ChongWeiJie29"},"content":"    public static final String FILE_OPS_ERROR_FORMAT \u003d \"Could not save data due to the following error: %s\";","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":27,"author":{"gitId":"ChongWeiJie29"},"content":"    public static final String FILE_OPS_PERMISSION_ERROR_FORMAT \u003d","lastModifiedDate":"2023-10-12"},{"lineNumber":28,"author":{"gitId":"ChongWeiJie29"},"content":"            \"Could not save data to file %s due to insufficient permissions to write to the file or the folder.\";","lastModifiedDate":"2023-10-12"},{"lineNumber":29,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":30,"author":{"gitId":"ChongWeiJie29"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManagerPrescription.class);","lastModifiedDate":"2023-10-12"},{"lineNumber":31,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":32,"author":{"gitId":"ChongWeiJie29"},"content":"    private final ModelPrescription model;","lastModifiedDate":"2023-10-12"},{"lineNumber":33,"author":{"gitId":"ChongWeiJie29"},"content":"    private final StoragePrescription storage;","lastModifiedDate":"2023-10-12"},{"lineNumber":34,"author":{"gitId":"ChongWeiJie29"},"content":"    private final PrescriptionListParser prescriptionListParser;","lastModifiedDate":"2023-10-12"},{"lineNumber":35,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":36,"author":{"gitId":"ChongWeiJie29"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":37,"author":{"gitId":"ChongWeiJie29"},"content":"     * Constructs a {@code LogicManagerPrescription} with the given {@code Model} and {@code Storage}.","lastModifiedDate":"2023-10-12"},{"lineNumber":38,"author":{"gitId":"ChongWeiJie29"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":39,"author":{"gitId":"ChongWeiJie29"},"content":"    public LogicManagerPrescription(ModelPrescription model, StoragePrescription storage) {","lastModifiedDate":"2023-10-12"},{"lineNumber":40,"author":{"gitId":"ChongWeiJie29"},"content":"        this.model \u003d model;","lastModifiedDate":"2023-10-12"},{"lineNumber":41,"author":{"gitId":"ChongWeiJie29"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2023-10-12"},{"lineNumber":42,"author":{"gitId":"ChongWeiJie29"},"content":"        prescriptionListParser \u003d new PrescriptionListParser();","lastModifiedDate":"2023-10-12"},{"lineNumber":43,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":44,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":45,"author":{"gitId":"ChongWeiJie29"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":46,"author":{"gitId":"ChongWeiJie29"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2023-10-12"},{"lineNumber":47,"author":{"gitId":"ChongWeiJie29"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2023-10-12"},{"lineNumber":48,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":49,"author":{"gitId":"ChongWeiJie29"},"content":"        CommandResult commandResult;","lastModifiedDate":"2023-10-12"},{"lineNumber":50,"author":{"gitId":"ChongWeiJie29"},"content":"        CommandPrescription command \u003d prescriptionListParser.parseCommand(commandText);","lastModifiedDate":"2023-10-12"},{"lineNumber":51,"author":{"gitId":"ChongWeiJie29"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2023-10-12"},{"lineNumber":52,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":53,"author":{"gitId":"ChongWeiJie29"},"content":"        try {","lastModifiedDate":"2023-10-12"},{"lineNumber":54,"author":{"gitId":"ChongWeiJie29"},"content":"            storage.savePrescriptionList(model.getPrescriptionList());","lastModifiedDate":"2023-10-12"},{"lineNumber":55,"author":{"gitId":"ChongWeiJie29"},"content":"        } catch (AccessDeniedException e) {","lastModifiedDate":"2023-10-12"},{"lineNumber":56,"author":{"gitId":"ChongWeiJie29"},"content":"            throw new CommandException(String.format(FILE_OPS_PERMISSION_ERROR_FORMAT, e.getMessage()), e);","lastModifiedDate":"2023-10-12"},{"lineNumber":57,"author":{"gitId":"ChongWeiJie29"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2023-10-12"},{"lineNumber":58,"author":{"gitId":"ChongWeiJie29"},"content":"            throw new CommandException(String.format(FILE_OPS_ERROR_FORMAT, ioe.getMessage()), ioe);","lastModifiedDate":"2023-10-12"},{"lineNumber":59,"author":{"gitId":"ChongWeiJie29"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":60,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":61,"author":{"gitId":"ChongWeiJie29"},"content":"        return commandResult;","lastModifiedDate":"2023-10-12"},{"lineNumber":62,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":63,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":64,"author":{"gitId":"ChongWeiJie29"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":65,"author":{"gitId":"ChongWeiJie29"},"content":"    public ReadOnlyPrescriptionList getPrescriptionList() {","lastModifiedDate":"2023-10-12"},{"lineNumber":66,"author":{"gitId":"ChongWeiJie29"},"content":"        return model.getPrescriptionList();","lastModifiedDate":"2023-10-12"},{"lineNumber":67,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":68,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":69,"author":{"gitId":"ChongWeiJie29"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":70,"author":{"gitId":"ChongWeiJie29"},"content":"    public ObservableList\u003cPrescription\u003e getFilteredPrescriptionList() {","lastModifiedDate":"2023-10-12"},{"lineNumber":71,"author":{"gitId":"ChongWeiJie29"},"content":"        return model.getFilteredPrescriptionList();","lastModifiedDate":"2023-10-12"},{"lineNumber":72,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":73,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":74,"author":{"gitId":"ChongWeiJie29"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":75,"author":{"gitId":"ChongWeiJie29"},"content":"    public Path getPrescriptionListFilePath() {","lastModifiedDate":"2023-10-12"},{"lineNumber":76,"author":{"gitId":"ChongWeiJie29"},"content":"        return model.getPrescriptionListFilePath();","lastModifiedDate":"2023-10-12"},{"lineNumber":77,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":78,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":79,"author":{"gitId":"ChongWeiJie29"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":80,"author":{"gitId":"ChongWeiJie29"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2023-10-12"},{"lineNumber":81,"author":{"gitId":"ChongWeiJie29"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2023-10-12"},{"lineNumber":82,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":83,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":84,"author":{"gitId":"ChongWeiJie29"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":85,"author":{"gitId":"ChongWeiJie29"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2023-10-12"},{"lineNumber":86,"author":{"gitId":"ChongWeiJie29"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2023-10-12"},{"lineNumber":87,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":88,"author":{"gitId":"ChongWeiJie29"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"ChongWeiJie29":88}},{"path":"src/main/java/seedu/address/logic/LogicPrescription.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ChongWeiJie29"},"content":"package seedu.address.logic;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"ChongWeiJie29"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"ChongWeiJie29"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"ChongWeiJie29"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"ChongWeiJie29"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"ChongWeiJie29"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"ChongWeiJie29"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"ChongWeiJie29"},"content":"import seedu.address.model.ReadOnlyPrescriptionList;","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"ChongWeiJie29"},"content":"import seedu.address.model.prescription.Prescription;","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"ChongWeiJie29"},"content":"/**","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"ChongWeiJie29"},"content":" * API of the LogicPrescription component","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"ChongWeiJie29"},"content":" */","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"ChongWeiJie29"},"content":"public interface LogicPrescription {","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"ChongWeiJie29"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"ChongWeiJie29"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"ChongWeiJie29"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2023-10-12"},{"lineNumber":20,"author":{"gitId":"ChongWeiJie29"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"ChongWeiJie29"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2023-10-12"},{"lineNumber":22,"author":{"gitId":"ChongWeiJie29"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"ChongWeiJie29"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":24,"author":{"gitId":"ChongWeiJie29"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2023-10-12"},{"lineNumber":25,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"ChongWeiJie29"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":27,"author":{"gitId":"ChongWeiJie29"},"content":"     * Returns the PrescriptionList.","lastModifiedDate":"2023-10-12"},{"lineNumber":28,"author":{"gitId":"ChongWeiJie29"},"content":"     *","lastModifiedDate":"2023-10-12"},{"lineNumber":29,"author":{"gitId":"ChongWeiJie29"},"content":"     * @see seedu.address.model.Model#getPrescriptionList()","lastModifiedDate":"2023-10-12"},{"lineNumber":30,"author":{"gitId":"ChongWeiJie29"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":31,"author":{"gitId":"ChongWeiJie29"},"content":"    ReadOnlyPrescriptionList getPrescriptionList();","lastModifiedDate":"2023-10-12"},{"lineNumber":32,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":33,"author":{"gitId":"ChongWeiJie29"},"content":"    /** Returns an unmodifiable view of the filtered list of prescriptions */","lastModifiedDate":"2023-10-12"},{"lineNumber":34,"author":{"gitId":"ChongWeiJie29"},"content":"    ObservableList\u003cPrescription\u003e getFilteredPrescriptionList();","lastModifiedDate":"2023-10-12"},{"lineNumber":35,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":36,"author":{"gitId":"ChongWeiJie29"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":37,"author":{"gitId":"ChongWeiJie29"},"content":"     * Returns the user prefs\u0027 prescription list file path.","lastModifiedDate":"2023-10-12"},{"lineNumber":38,"author":{"gitId":"ChongWeiJie29"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":39,"author":{"gitId":"ChongWeiJie29"},"content":"    Path getPrescriptionListFilePath();","lastModifiedDate":"2023-10-12"},{"lineNumber":40,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":41,"author":{"gitId":"ChongWeiJie29"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":42,"author":{"gitId":"ChongWeiJie29"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2023-10-12"},{"lineNumber":43,"author":{"gitId":"ChongWeiJie29"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":44,"author":{"gitId":"ChongWeiJie29"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2023-10-12"},{"lineNumber":45,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":46,"author":{"gitId":"ChongWeiJie29"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":47,"author":{"gitId":"ChongWeiJie29"},"content":"     * Set the user prefs\u0027 GUI settings.","lastModifiedDate":"2023-10-12"},{"lineNumber":48,"author":{"gitId":"ChongWeiJie29"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":49,"author":{"gitId":"ChongWeiJie29"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2023-10-12"},{"lineNumber":50,"author":{"gitId":"ChongWeiJie29"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"ChongWeiJie29":50}},{"path":"src/main/java/seedu/address/logic/MessagesPrescription.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ChongWeiJie29"},"content":"package seedu.address.logic;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"ChongWeiJie29"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"ChongWeiJie29"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"ChongWeiJie29"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"ChongWeiJie29"},"content":"import seedu.address.logic.parser.Prefix;","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"ChongWeiJie29"},"content":"import seedu.address.model.prescription.Prescription;","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"ChongWeiJie29"},"content":"/**","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"ChongWeiJie29"},"content":" * Container for user visible messages.","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"ChongWeiJie29"},"content":" */","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"ChongWeiJie29"},"content":"public class MessagesPrescription {","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"ChongWeiJie29"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"ChongWeiJie29"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"ChongWeiJie29"},"content":"    public static final String MESSAGE_INVALID_PERSON_DISPLAYED_INDEX \u003d \"The prescription index provided is invalid\";","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"ChongWeiJie29"},"content":"    public static final String MESSAGE_PERSONS_LISTED_OVERVIEW \u003d \"%1$d prescriptions listed!\";","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"ChongWeiJie29"},"content":"    public static final String MESSAGE_DUPLICATE_FIELDS \u003d","lastModifiedDate":"2023-10-12"},{"lineNumber":20,"author":{"gitId":"ChongWeiJie29"},"content":"                \"Multiple values specified for the following single-valued field(s): \";","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":22,"author":{"gitId":"ChongWeiJie29"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"ChongWeiJie29"},"content":"     * Returns an error message indicating the duplicate prefixes.","lastModifiedDate":"2023-10-12"},{"lineNumber":24,"author":{"gitId":"ChongWeiJie29"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":25,"author":{"gitId":"ChongWeiJie29"},"content":"    public static String getErrorMessageForDuplicatePrefixes(Prefix... duplicatePrefixes) {","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"ChongWeiJie29"},"content":"        assert duplicatePrefixes.length \u003e 0;","lastModifiedDate":"2023-10-12"},{"lineNumber":27,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":28,"author":{"gitId":"ChongWeiJie29"},"content":"        Set\u003cString\u003e duplicateFields \u003d","lastModifiedDate":"2023-10-12"},{"lineNumber":29,"author":{"gitId":"ChongWeiJie29"},"content":"                Stream.of(duplicatePrefixes).map(Prefix::toString).collect(Collectors.toSet());","lastModifiedDate":"2023-10-12"},{"lineNumber":30,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":31,"author":{"gitId":"ChongWeiJie29"},"content":"        return MESSAGE_DUPLICATE_FIELDS + String.join(\" \", duplicateFields);","lastModifiedDate":"2023-10-12"},{"lineNumber":32,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":33,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":34,"author":{"gitId":"ChongWeiJie29"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":35,"author":{"gitId":"ChongWeiJie29"},"content":"     * Formats the {@code prescription} for display to the user.","lastModifiedDate":"2023-10-12"},{"lineNumber":36,"author":{"gitId":"ChongWeiJie29"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":37,"author":{"gitId":"ChongWeiJie29"},"content":"    public static String format(Prescription prescription) {","lastModifiedDate":"2023-10-12"},{"lineNumber":38,"author":{"gitId":"ChongWeiJie29"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2023-10-12"},{"lineNumber":39,"author":{"gitId":"ChongWeiJie29"},"content":"        builder.append(prescription.getName())","lastModifiedDate":"2023-10-12"},{"lineNumber":40,"author":{"gitId":"ChongWeiJie29"},"content":"                .append(\"; Dosage: \")","lastModifiedDate":"2023-10-12"},{"lineNumber":41,"author":{"gitId":"ChongWeiJie29"},"content":"                .append(prescription.getDosage())","lastModifiedDate":"2023-10-12"},{"lineNumber":42,"author":{"gitId":"ChongWeiJie29"},"content":"                .append(\"; Frequency: \")","lastModifiedDate":"2023-10-12"},{"lineNumber":43,"author":{"gitId":"ChongWeiJie29"},"content":"                .append(prescription.getFrequency())","lastModifiedDate":"2023-10-12"},{"lineNumber":44,"author":{"gitId":"ChongWeiJie29"},"content":"                .append(\"; Start Date: \")","lastModifiedDate":"2023-10-12"},{"lineNumber":45,"author":{"gitId":"ChongWeiJie29"},"content":"                .append(prescription.getStartDate())","lastModifiedDate":"2023-10-12"},{"lineNumber":46,"author":{"gitId":"ChongWeiJie29"},"content":"                .append(\"; End Date: \")","lastModifiedDate":"2023-10-12"},{"lineNumber":47,"author":{"gitId":"ChongWeiJie29"},"content":"                .append(prescription.getEndDate())","lastModifiedDate":"2023-10-12"},{"lineNumber":48,"author":{"gitId":"ChongWeiJie29"},"content":"                .append(\"; Expiry Date: \")","lastModifiedDate":"2023-10-12"},{"lineNumber":49,"author":{"gitId":"ChongWeiJie29"},"content":"                .append(prescription.getExpiryDate())","lastModifiedDate":"2023-10-12"},{"lineNumber":50,"author":{"gitId":"ChongWeiJie29"},"content":"                .append(\"; Total stock: \")","lastModifiedDate":"2023-10-12"},{"lineNumber":51,"author":{"gitId":"ChongWeiJie29"},"content":"                .append(prescription.getTotalStock())","lastModifiedDate":"2023-10-12"},{"lineNumber":52,"author":{"gitId":"ChongWeiJie29"},"content":"                .append(\"; Note: \")","lastModifiedDate":"2023-10-12"},{"lineNumber":53,"author":{"gitId":"ChongWeiJie29"},"content":"                .append(prescription.getNote());","lastModifiedDate":"2023-10-12"},{"lineNumber":54,"author":{"gitId":"ChongWeiJie29"},"content":"        // person.getTags().forEach(builder::append);","lastModifiedDate":"2023-10-12"},{"lineNumber":55,"author":{"gitId":"ChongWeiJie29"},"content":"        return builder.toString();","lastModifiedDate":"2023-10-12"},{"lineNumber":56,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":57,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":58,"author":{"gitId":"ChongWeiJie29"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"ChongWeiJie29":58}},{"path":"src/main/java/seedu/address/logic/commands/AddPrescriptionCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ChongWeiJie29"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"ChongWeiJie29"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"ChongWeiJie29"},"content":"import static seedu.address.logic.parser.CliSyntaxPrescription.PREFIX_DOSAGE;","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"ChongWeiJie29"},"content":"import static seedu.address.logic.parser.CliSyntaxPrescription.PREFIX_END_DATE;","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"ChongWeiJie29"},"content":"import static seedu.address.logic.parser.CliSyntaxPrescription.PREFIX_EXPIRY_DATE;","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"ChongWeiJie29"},"content":"import static seedu.address.logic.parser.CliSyntaxPrescription.PREFIX_FREQUENCY;","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"ChongWeiJie29"},"content":"import static seedu.address.logic.parser.CliSyntaxPrescription.PREFIX_NAME;","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"ChongWeiJie29"},"content":"import static seedu.address.logic.parser.CliSyntaxPrescription.PREFIX_NOTE;","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"ChongWeiJie29"},"content":"import static seedu.address.logic.parser.CliSyntaxPrescription.PREFIX_START_DATE;","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"ChongWeiJie29"},"content":"import static seedu.address.logic.parser.CliSyntaxPrescription.PREFIX_TOTAL_STOCK;","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"ChongWeiJie29"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"ChongWeiJie29"},"content":"import seedu.address.logic.MessagesPrescription;","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"ChongWeiJie29"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"ChongWeiJie29"},"content":"import seedu.address.model.ModelPrescription;","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"ChongWeiJie29"},"content":"import seedu.address.model.prescription.Prescription;","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"ChongWeiJie29"},"content":"/**","lastModifiedDate":"2023-10-12"},{"lineNumber":20,"author":{"gitId":"ChongWeiJie29"},"content":" * Adds a person to the address book.","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"ChongWeiJie29"},"content":" */","lastModifiedDate":"2023-10-12"},{"lineNumber":22,"author":{"gitId":"ChongWeiJie29"},"content":"public class AddPrescriptionCommand extends CommandPrescription {","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":24,"author":{"gitId":"ChongWeiJie29"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2023-10-12"},{"lineNumber":25,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"ChongWeiJie29"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a prescription to the prescription list. \\n\"","lastModifiedDate":"2023-10-12"},{"lineNumber":27,"author":{"gitId":"ChongWeiJie29"},"content":"            + \"Parameters: \"","lastModifiedDate":"2023-10-12"},{"lineNumber":28,"author":{"gitId":"ChongWeiJie29"},"content":"            + PREFIX_NAME + \"medication_name \"","lastModifiedDate":"2023-10-12"},{"lineNumber":29,"author":{"gitId":"ChongWeiJie29"},"content":"            + PREFIX_DOSAGE + \"dosage \"","lastModifiedDate":"2023-10-12"},{"lineNumber":30,"author":{"gitId":"ChongWeiJie29"},"content":"            + PREFIX_FREQUENCY + \"frequency \"","lastModifiedDate":"2023-10-12"},{"lineNumber":31,"author":{"gitId":"ChongWeiJie29"},"content":"            + PREFIX_START_DATE + \"start_date \"","lastModifiedDate":"2023-10-12"},{"lineNumber":32,"author":{"gitId":"ChongWeiJie29"},"content":"            + PREFIX_END_DATE + \"end_date \"","lastModifiedDate":"2023-10-12"},{"lineNumber":33,"author":{"gitId":"ChongWeiJie29"},"content":"            + PREFIX_EXPIRY_DATE + \"expiry_date \"","lastModifiedDate":"2023-10-12"},{"lineNumber":34,"author":{"gitId":"ChongWeiJie29"},"content":"            + PREFIX_TOTAL_STOCK + \"total_stock \"","lastModifiedDate":"2023-10-12"},{"lineNumber":35,"author":{"gitId":"ChongWeiJie29"},"content":"            + PREFIX_NOTE + \"note \\n\"","lastModifiedDate":"2023-10-12"},{"lineNumber":36,"author":{"gitId":"ChongWeiJie29"},"content":"            // + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2023-10-12"},{"lineNumber":37,"author":{"gitId":"ChongWeiJie29"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2023-10-12"},{"lineNumber":38,"author":{"gitId":"ChongWeiJie29"},"content":"            + PREFIX_NAME + \"Aspirin \"","lastModifiedDate":"2023-10-12"},{"lineNumber":39,"author":{"gitId":"ChongWeiJie29"},"content":"            + PREFIX_DOSAGE + \"1 \"","lastModifiedDate":"2023-10-12"},{"lineNumber":40,"author":{"gitId":"ChongWeiJie29"},"content":"            + PREFIX_FREQUENCY + \"Daily \"","lastModifiedDate":"2023-10-12"},{"lineNumber":41,"author":{"gitId":"ChongWeiJie29"},"content":"            + PREFIX_START_DATE + \"01/08/2023 \"","lastModifiedDate":"2023-10-12"},{"lineNumber":42,"author":{"gitId":"ChongWeiJie29"},"content":"            + PREFIX_END_DATE + \"25/12/2023 \"","lastModifiedDate":"2023-10-12"},{"lineNumber":43,"author":{"gitId":"ChongWeiJie29"},"content":"            + PREFIX_EXPIRY_DATE + \"01/01/2024 \"","lastModifiedDate":"2023-10-12"},{"lineNumber":44,"author":{"gitId":"ChongWeiJie29"},"content":"            + PREFIX_TOTAL_STOCK + \"100 \"","lastModifiedDate":"2023-10-12"},{"lineNumber":45,"author":{"gitId":"ChongWeiJie29"},"content":"            + PREFIX_NOTE + \"Test note\";","lastModifiedDate":"2023-10-12"},{"lineNumber":46,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":47,"author":{"gitId":"ChongWeiJie29"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New prescription added: %1$s\";","lastModifiedDate":"2023-10-12"},{"lineNumber":48,"author":{"gitId":"ChongWeiJie29"},"content":"    public static final String MESSAGE_DUPLICATE_PRESCRIPTION \u003d \"This prescription already \"","lastModifiedDate":"2023-10-12"},{"lineNumber":49,"author":{"gitId":"ChongWeiJie29"},"content":"            + \"exists in the prescription list\";","lastModifiedDate":"2023-10-12"},{"lineNumber":50,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":51,"author":{"gitId":"ChongWeiJie29"},"content":"    private final Prescription toAdd;","lastModifiedDate":"2023-10-12"},{"lineNumber":52,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":53,"author":{"gitId":"ChongWeiJie29"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":54,"author":{"gitId":"ChongWeiJie29"},"content":"     * Creates an AddPrescriptionCommand to add the specified {@code Prescription}","lastModifiedDate":"2023-10-12"},{"lineNumber":55,"author":{"gitId":"ChongWeiJie29"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":56,"author":{"gitId":"ChongWeiJie29"},"content":"    public AddPrescriptionCommand(Prescription prescription) {","lastModifiedDate":"2023-10-12"},{"lineNumber":57,"author":{"gitId":"ChongWeiJie29"},"content":"        requireNonNull(prescription);","lastModifiedDate":"2023-10-12"},{"lineNumber":58,"author":{"gitId":"ChongWeiJie29"},"content":"        toAdd \u003d prescription;","lastModifiedDate":"2023-10-12"},{"lineNumber":59,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":60,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":61,"author":{"gitId":"ChongWeiJie29"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":62,"author":{"gitId":"ChongWeiJie29"},"content":"    public CommandResult execute(ModelPrescription model) throws CommandException {","lastModifiedDate":"2023-10-12"},{"lineNumber":63,"author":{"gitId":"ChongWeiJie29"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-12"},{"lineNumber":64,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":65,"author":{"gitId":"ChongWeiJie29"},"content":"        if (model.hasPrescription(toAdd)) {","lastModifiedDate":"2023-10-12"},{"lineNumber":66,"author":{"gitId":"ChongWeiJie29"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PRESCRIPTION);","lastModifiedDate":"2023-10-12"},{"lineNumber":67,"author":{"gitId":"ChongWeiJie29"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":68,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":69,"author":{"gitId":"ChongWeiJie29"},"content":"        model.addPrescription(toAdd);","lastModifiedDate":"2023-10-12"},{"lineNumber":70,"author":{"gitId":"ChongWeiJie29"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, MessagesPrescription.format(toAdd)));","lastModifiedDate":"2023-10-12"},{"lineNumber":71,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":72,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":73,"author":{"gitId":"ChongWeiJie29"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":74,"author":{"gitId":"ChongWeiJie29"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-12"},{"lineNumber":75,"author":{"gitId":"ChongWeiJie29"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-12"},{"lineNumber":76,"author":{"gitId":"ChongWeiJie29"},"content":"            return true;","lastModifiedDate":"2023-10-12"},{"lineNumber":77,"author":{"gitId":"ChongWeiJie29"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":78,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":79,"author":{"gitId":"ChongWeiJie29"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-12"},{"lineNumber":80,"author":{"gitId":"ChongWeiJie29"},"content":"        if (!(other instanceof AddPrescriptionCommand)) {","lastModifiedDate":"2023-10-12"},{"lineNumber":81,"author":{"gitId":"ChongWeiJie29"},"content":"            return false;","lastModifiedDate":"2023-10-12"},{"lineNumber":82,"author":{"gitId":"ChongWeiJie29"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":83,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":84,"author":{"gitId":"ChongWeiJie29"},"content":"        AddPrescriptionCommand otherAddCommand \u003d (AddPrescriptionCommand) other;","lastModifiedDate":"2023-10-12"},{"lineNumber":85,"author":{"gitId":"ChongWeiJie29"},"content":"        return toAdd.equals(otherAddCommand.toAdd);","lastModifiedDate":"2023-10-12"},{"lineNumber":86,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":87,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":88,"author":{"gitId":"ChongWeiJie29"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":89,"author":{"gitId":"ChongWeiJie29"},"content":"    public String toString() {","lastModifiedDate":"2023-10-12"},{"lineNumber":90,"author":{"gitId":"ChongWeiJie29"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-10-12"},{"lineNumber":91,"author":{"gitId":"ChongWeiJie29"},"content":"                .add(\"toAdd\", toAdd)","lastModifiedDate":"2023-10-12"},{"lineNumber":92,"author":{"gitId":"ChongWeiJie29"},"content":"                .toString();","lastModifiedDate":"2023-10-12"},{"lineNumber":93,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":94,"author":{"gitId":"ChongWeiJie29"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"ChongWeiJie29":94}},{"path":"src/main/java/seedu/address/logic/commands/CommandPrescription.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ChongWeiJie29"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"ChongWeiJie29"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"ChongWeiJie29"},"content":"import seedu.address.model.ModelPrescription;","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"ChongWeiJie29"},"content":"/**","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"ChongWeiJie29"},"content":" * Represents a command with hidden internal logic and the ability to be executed.","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"ChongWeiJie29"},"content":" */","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"ChongWeiJie29"},"content":"public abstract class CommandPrescription {","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"ChongWeiJie29"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"ChongWeiJie29"},"content":"     * Executes the command and returns the result message.","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"ChongWeiJie29"},"content":"     *","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"ChongWeiJie29"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"ChongWeiJie29"},"content":"     * @return feedback message of the operation result for display","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"ChongWeiJie29"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"ChongWeiJie29"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"ChongWeiJie29"},"content":"    public abstract CommandResult execute(ModelPrescription model) throws CommandException;","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":20,"author":{"gitId":"ChongWeiJie29"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"ChongWeiJie29":20}},{"path":"src/main/java/seedu/address/logic/commands/ListPrescriptionCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"RoeReRe"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-15"},{"lineNumber":2,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":3,"author":{"gitId":"RoeReRe"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-15"},{"lineNumber":4,"author":{"gitId":"RoeReRe"},"content":"import static seedu.address.model.ModelPrescription.PREDICATE_SHOW_ALL_PRESCRIPTIONS;","lastModifiedDate":"2023-10-15"},{"lineNumber":5,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":6,"author":{"gitId":"RoeReRe"},"content":"import seedu.address.model.ModelPrescription;","lastModifiedDate":"2023-10-15"},{"lineNumber":7,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":8,"author":{"gitId":"RoeReRe"},"content":"/**","lastModifiedDate":"2023-10-15"},{"lineNumber":9,"author":{"gitId":"RoeReRe"},"content":" * Lists all prescriptions stored to the user.","lastModifiedDate":"2023-10-15"},{"lineNumber":10,"author":{"gitId":"RoeReRe"},"content":" */","lastModifiedDate":"2023-10-15"},{"lineNumber":11,"author":{"gitId":"RoeReRe"},"content":"public class ListPrescriptionCommand extends CommandPrescription {","lastModifiedDate":"2023-10-15"},{"lineNumber":12,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":13,"author":{"gitId":"RoeReRe"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2023-10-15"},{"lineNumber":14,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":15,"author":{"gitId":"RoeReRe"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Lists all prescriptions stored.\\n\"","lastModifiedDate":"2023-10-15"},{"lineNumber":16,"author":{"gitId":"RoeReRe"},"content":"            + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2023-10-15"},{"lineNumber":17,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":18,"author":{"gitId":"RoeReRe"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all prescriptions\";","lastModifiedDate":"2023-10-15"},{"lineNumber":19,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":20,"author":{"gitId":"RoeReRe"},"content":"    @Override","lastModifiedDate":"2023-10-15"},{"lineNumber":21,"author":{"gitId":"RoeReRe"},"content":"    public CommandResult execute(ModelPrescription model) {","lastModifiedDate":"2023-10-15"},{"lineNumber":22,"author":{"gitId":"RoeReRe"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-15"},{"lineNumber":23,"author":{"gitId":"RoeReRe"},"content":"        model.updateFilteredPrescriptionList(PREDICATE_SHOW_ALL_PRESCRIPTIONS);","lastModifiedDate":"2023-10-15"},{"lineNumber":24,"author":{"gitId":"RoeReRe"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2023-10-15"},{"lineNumber":25,"author":{"gitId":"RoeReRe"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":26,"author":{"gitId":"RoeReRe"},"content":"}","lastModifiedDate":"2023-10-15"}],"authorContributionMap":{"RoeReRe":26}},{"path":"src/main/java/seedu/address/logic/parser/AddPrescriptionCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ChongWeiJie29"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"ChongWeiJie29"},"content":"import static seedu.address.logic.MessagesPrescription.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"ChongWeiJie29"},"content":"import static seedu.address.logic.parser.CliSyntaxPrescription.PREFIX_DOSAGE;","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"ChongWeiJie29"},"content":"import static seedu.address.logic.parser.CliSyntaxPrescription.PREFIX_END_DATE;","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"ChongWeiJie29"},"content":"import static seedu.address.logic.parser.CliSyntaxPrescription.PREFIX_EXPIRY_DATE;","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"ChongWeiJie29"},"content":"import static seedu.address.logic.parser.CliSyntaxPrescription.PREFIX_FREQUENCY;","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"ChongWeiJie29"},"content":"import static seedu.address.logic.parser.CliSyntaxPrescription.PREFIX_NAME;","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"ChongWeiJie29"},"content":"import static seedu.address.logic.parser.CliSyntaxPrescription.PREFIX_NOTE;","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"ChongWeiJie29"},"content":"import static seedu.address.logic.parser.CliSyntaxPrescription.PREFIX_START_DATE;","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"ChongWeiJie29"},"content":"import static seedu.address.logic.parser.CliSyntaxPrescription.PREFIX_TOTAL_STOCK;","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"ChongWeiJie29"},"content":"// import java.util.Set;","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"ChongWeiJie29"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"ChongWeiJie29"},"content":"import seedu.address.logic.commands.AddPrescriptionCommand;","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"ChongWeiJie29"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"ChongWeiJie29"},"content":"import seedu.address.model.prescription.Date;","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"ChongWeiJie29"},"content":"import seedu.address.model.prescription.Dosage;","lastModifiedDate":"2023-10-12"},{"lineNumber":20,"author":{"gitId":"ChongWeiJie29"},"content":"import seedu.address.model.prescription.Frequency;","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"ChongWeiJie29"},"content":"import seedu.address.model.prescription.Name;","lastModifiedDate":"2023-10-12"},{"lineNumber":22,"author":{"gitId":"ChongWeiJie29"},"content":"import seedu.address.model.prescription.Note;","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"ChongWeiJie29"},"content":"import seedu.address.model.prescription.Prescription;","lastModifiedDate":"2023-10-12"},{"lineNumber":24,"author":{"gitId":"ChongWeiJie29"},"content":"import seedu.address.model.prescription.Stock;","lastModifiedDate":"2023-10-12"},{"lineNumber":25,"author":{"gitId":"ChongWeiJie29"},"content":"// import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":27,"author":{"gitId":"ChongWeiJie29"},"content":"/**","lastModifiedDate":"2023-10-12"},{"lineNumber":28,"author":{"gitId":"ChongWeiJie29"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2023-10-12"},{"lineNumber":29,"author":{"gitId":"ChongWeiJie29"},"content":" */","lastModifiedDate":"2023-10-12"},{"lineNumber":30,"author":{"gitId":"ChongWeiJie29"},"content":"public class AddPrescriptionCommandParser implements ParserPrescription\u003cAddPrescriptionCommand\u003e {","lastModifiedDate":"2023-10-12"},{"lineNumber":31,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":32,"author":{"gitId":"ChongWeiJie29"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":33,"author":{"gitId":"ChongWeiJie29"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2023-10-12"},{"lineNumber":34,"author":{"gitId":"ChongWeiJie29"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2023-10-12"},{"lineNumber":35,"author":{"gitId":"ChongWeiJie29"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-10-12"},{"lineNumber":36,"author":{"gitId":"ChongWeiJie29"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":37,"author":{"gitId":"ChongWeiJie29"},"content":"    public AddPrescriptionCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-12"},{"lineNumber":38,"author":{"gitId":"ChongWeiJie29"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-10-12"},{"lineNumber":39,"author":{"gitId":"ChongWeiJie29"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_DOSAGE, PREFIX_FREQUENCY,","lastModifiedDate":"2023-10-12"},{"lineNumber":40,"author":{"gitId":"ChongWeiJie29"},"content":"                    PREFIX_START_DATE, PREFIX_END_DATE, PREFIX_EXPIRY_DATE, PREFIX_TOTAL_STOCK, PREFIX_NOTE);","lastModifiedDate":"2023-10-12"},{"lineNumber":41,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":42,"author":{"gitId":"ChongWeiJie29"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_DOSAGE, PREFIX_FREQUENCY, PREFIX_START_DATE,","lastModifiedDate":"2023-10-12"},{"lineNumber":43,"author":{"gitId":"ChongWeiJie29"},"content":"                PREFIX_END_DATE, PREFIX_EXPIRY_DATE, PREFIX_TOTAL_STOCK, PREFIX_NOTE)","lastModifiedDate":"2023-10-12"},{"lineNumber":44,"author":{"gitId":"ChongWeiJie29"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2023-10-12"},{"lineNumber":45,"author":{"gitId":"ChongWeiJie29"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-10-12"},{"lineNumber":46,"author":{"gitId":"ChongWeiJie29"},"content":"                AddPrescriptionCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-12"},{"lineNumber":47,"author":{"gitId":"ChongWeiJie29"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":48,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":49,"author":{"gitId":"ChongWeiJie29"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_NAME, PREFIX_DOSAGE, PREFIX_FREQUENCY,","lastModifiedDate":"2023-10-12"},{"lineNumber":50,"author":{"gitId":"ChongWeiJie29"},"content":"                PREFIX_START_DATE, PREFIX_END_DATE, PREFIX_EXPIRY_DATE, PREFIX_TOTAL_STOCK, PREFIX_NOTE);","lastModifiedDate":"2023-10-12"},{"lineNumber":51,"author":{"gitId":"ChongWeiJie29"},"content":"        Name name \u003d ParserUtilPrescription.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2023-10-12"},{"lineNumber":52,"author":{"gitId":"ChongWeiJie29"},"content":"        Dosage dosage \u003d ParserUtilPrescription.parseDosage(argMultimap.getValue(PREFIX_DOSAGE).get());","lastModifiedDate":"2023-10-12"},{"lineNumber":53,"author":{"gitId":"ChongWeiJie29"},"content":"        Frequency frequency \u003d ParserUtilPrescription.parseFrequency(argMultimap.getValue(PREFIX_FREQUENCY).get());","lastModifiedDate":"2023-10-12"},{"lineNumber":54,"author":{"gitId":"ChongWeiJie29"},"content":"        Date startDate \u003d ParserUtilPrescription.parseStartDate(argMultimap.getValue(PREFIX_START_DATE).get());","lastModifiedDate":"2023-10-12"},{"lineNumber":55,"author":{"gitId":"ChongWeiJie29"},"content":"        Date endDate \u003d ParserUtilPrescription.parseEndDate(argMultimap.getValue(PREFIX_END_DATE).get());","lastModifiedDate":"2023-10-12"},{"lineNumber":56,"author":{"gitId":"ChongWeiJie29"},"content":"        Date expiryDate \u003d ParserUtilPrescription.parseExpiryDate(argMultimap.getValue(PREFIX_EXPIRY_DATE).get());","lastModifiedDate":"2023-10-12"},{"lineNumber":57,"author":{"gitId":"ChongWeiJie29"},"content":"        Stock totalStock \u003d ParserUtilPrescription.parseTotalStock(argMultimap.getValue(PREFIX_TOTAL_STOCK).get());","lastModifiedDate":"2023-10-12"},{"lineNumber":58,"author":{"gitId":"ChongWeiJie29"},"content":"        Note note \u003d ParserUtilPrescription.parseNote(argMultimap.getValue(PREFIX_NOTE).get());","lastModifiedDate":"2023-10-12"},{"lineNumber":59,"author":{"gitId":"ChongWeiJie29"},"content":"        // Set\u003cTag\u003e tagList \u003d ParserUtilPrescription.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2023-10-12"},{"lineNumber":60,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":61,"author":{"gitId":"ChongWeiJie29"},"content":"        Prescription prescription \u003d new Prescription(name, dosage, frequency, startDate, endDate,","lastModifiedDate":"2023-10-12"},{"lineNumber":62,"author":{"gitId":"ChongWeiJie29"},"content":"                expiryDate, totalStock, note);","lastModifiedDate":"2023-10-12"},{"lineNumber":63,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":64,"author":{"gitId":"ChongWeiJie29"},"content":"        return new AddPrescriptionCommand(prescription);","lastModifiedDate":"2023-10-12"},{"lineNumber":65,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":66,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":67,"author":{"gitId":"ChongWeiJie29"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":68,"author":{"gitId":"ChongWeiJie29"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2023-10-12"},{"lineNumber":69,"author":{"gitId":"ChongWeiJie29"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2023-10-12"},{"lineNumber":70,"author":{"gitId":"ChongWeiJie29"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":71,"author":{"gitId":"ChongWeiJie29"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2023-10-12"},{"lineNumber":72,"author":{"gitId":"ChongWeiJie29"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2023-10-12"},{"lineNumber":73,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":74,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":75,"author":{"gitId":"ChongWeiJie29"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"ChongWeiJie29":75}},{"path":"src/main/java/seedu/address/logic/parser/CliSyntaxPrescription.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ChongWeiJie29"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"ChongWeiJie29"},"content":"/**","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"ChongWeiJie29"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"ChongWeiJie29"},"content":" */","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"ChongWeiJie29"},"content":"public class CliSyntaxPrescription {","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"ChongWeiJie29"},"content":"    /* Prefix definitions */","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"ChongWeiJie29"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"mn/\");","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"ChongWeiJie29"},"content":"    // public static final Prefix PREFIX_TAG \u003d new Prefix(\"t/\");","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"ChongWeiJie29"},"content":"    public static final Prefix PREFIX_DOSAGE \u003d new Prefix(\"d/\");","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"ChongWeiJie29"},"content":"    public static final Prefix PREFIX_FREQUENCY \u003d new Prefix(\"f/\");","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"ChongWeiJie29"},"content":"    public static final Prefix PREFIX_START_DATE \u003d new Prefix(\"sd/\");","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"ChongWeiJie29"},"content":"    public static final Prefix PREFIX_END_DATE \u003d new Prefix(\"ed/\");","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"ChongWeiJie29"},"content":"    public static final Prefix PREFIX_EXPIRY_DATE \u003d new Prefix(\"exd/\");","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"ChongWeiJie29"},"content":"    public static final Prefix PREFIX_TOTAL_STOCK \u003d new Prefix(\"ts/\");","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"ChongWeiJie29"},"content":"    public static final Prefix PREFIX_NOTE \u003d new Prefix(\"n/\");","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"ChongWeiJie29"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"ChongWeiJie29":19}},{"path":"src/main/java/seedu/address/logic/parser/ListPrescriptionCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"RoeReRe"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-15"},{"lineNumber":2,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":3,"author":{"gitId":"RoeReRe"},"content":"import static seedu.address.logic.MessagesPrescription.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-15"},{"lineNumber":4,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":5,"author":{"gitId":"RoeReRe"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-10-15"},{"lineNumber":6,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":7,"author":{"gitId":"RoeReRe"},"content":"import seedu.address.logic.commands.ListPrescriptionCommand;","lastModifiedDate":"2023-10-15"},{"lineNumber":8,"author":{"gitId":"RoeReRe"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-15"},{"lineNumber":9,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":10,"author":{"gitId":"RoeReRe"},"content":"/**","lastModifiedDate":"2023-10-15"},{"lineNumber":11,"author":{"gitId":"RoeReRe"},"content":" * Parses input arguments and creates a new ListPrescriptionCommand object","lastModifiedDate":"2023-10-15"},{"lineNumber":12,"author":{"gitId":"RoeReRe"},"content":" */","lastModifiedDate":"2023-10-15"},{"lineNumber":13,"author":{"gitId":"RoeReRe"},"content":"public class ListPrescriptionCommandParser implements ParserPrescription\u003cListPrescriptionCommand\u003e {","lastModifiedDate":"2023-10-15"},{"lineNumber":14,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":15,"author":{"gitId":"RoeReRe"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":16,"author":{"gitId":"RoeReRe"},"content":"     * Parses the given {@code String} of arguments in the context of the ListPrescriptionCommand","lastModifiedDate":"2023-10-15"},{"lineNumber":17,"author":{"gitId":"RoeReRe"},"content":"     * and returns a ListPrescriptionCommand object for execution.","lastModifiedDate":"2023-10-15"},{"lineNumber":18,"author":{"gitId":"RoeReRe"},"content":"     *","lastModifiedDate":"2023-10-15"},{"lineNumber":19,"author":{"gitId":"RoeReRe"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-10-15"},{"lineNumber":20,"author":{"gitId":"RoeReRe"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":21,"author":{"gitId":"RoeReRe"},"content":"    public ListPrescriptionCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-15"},{"lineNumber":22,"author":{"gitId":"RoeReRe"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-10-15"},{"lineNumber":23,"author":{"gitId":"RoeReRe"},"content":"            ArgumentTokenizer.tokenize(args);","lastModifiedDate":"2023-10-15"},{"lineNumber":24,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":25,"author":{"gitId":"RoeReRe"},"content":"        if (!argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2023-10-15"},{"lineNumber":26,"author":{"gitId":"RoeReRe"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-10-15"},{"lineNumber":27,"author":{"gitId":"RoeReRe"},"content":"                ListPrescriptionCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-15"},{"lineNumber":28,"author":{"gitId":"RoeReRe"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":29,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":30,"author":{"gitId":"RoeReRe"},"content":"        return new ListPrescriptionCommand();","lastModifiedDate":"2023-10-15"},{"lineNumber":31,"author":{"gitId":"RoeReRe"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":32,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":33,"author":{"gitId":"RoeReRe"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":34,"author":{"gitId":"RoeReRe"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2023-10-15"},{"lineNumber":35,"author":{"gitId":"RoeReRe"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2023-10-15"},{"lineNumber":36,"author":{"gitId":"RoeReRe"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":37,"author":{"gitId":"RoeReRe"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2023-10-15"},{"lineNumber":38,"author":{"gitId":"RoeReRe"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2023-10-15"},{"lineNumber":39,"author":{"gitId":"RoeReRe"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":40,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":41,"author":{"gitId":"RoeReRe"},"content":"}","lastModifiedDate":"2023-10-15"}],"authorContributionMap":{"RoeReRe":41}},{"path":"src/main/java/seedu/address/logic/parser/ParserPrescription.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ChongWeiJie29"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"ChongWeiJie29"},"content":"import seedu.address.logic.commands.CommandPrescription;","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"ChongWeiJie29"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"ChongWeiJie29"},"content":"/**","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"ChongWeiJie29"},"content":" * Represents a Parser that is able to parse user input into a {@code Command} of type {@code T}.","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"ChongWeiJie29"},"content":" */","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"ChongWeiJie29"},"content":"public interface ParserPrescription\u003cT extends CommandPrescription\u003e {","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"ChongWeiJie29"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"ChongWeiJie29"},"content":"     * Parses {@code userInput} into a command and returns it.","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"ChongWeiJie29"},"content":"     * @throws ParseException if {@code userInput} does not conform the expected format","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"ChongWeiJie29"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"ChongWeiJie29"},"content":"    T parse(String userInput) throws ParseException;","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"ChongWeiJie29"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"ChongWeiJie29":16}},{"path":"src/main/java/seedu/address/logic/parser/ParserUtilPrescription.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ChongWeiJie29"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"ChongWeiJie29"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"ChongWeiJie29"},"content":"// import java.util.Collection;","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"ChongWeiJie29"},"content":"// import java.util.HashSet;","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"ChongWeiJie29"},"content":"// import java.util.Set;","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"ChongWeiJie29"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"ChongWeiJie29"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"ChongWeiJie29"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"ChongWeiJie29"},"content":"import seedu.address.model.prescription.Date;","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"ChongWeiJie29"},"content":"import seedu.address.model.prescription.Dosage;","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"ChongWeiJie29"},"content":"import seedu.address.model.prescription.Frequency;","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"ChongWeiJie29"},"content":"import seedu.address.model.prescription.Name;","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"ChongWeiJie29"},"content":"import seedu.address.model.prescription.Note;","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"ChongWeiJie29"},"content":"import seedu.address.model.prescription.Stock;","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"ChongWeiJie29"},"content":"// import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"ChongWeiJie29"},"content":"/**","lastModifiedDate":"2023-10-12"},{"lineNumber":20,"author":{"gitId":"ChongWeiJie29"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"ChongWeiJie29"},"content":" */","lastModifiedDate":"2023-10-12"},{"lineNumber":22,"author":{"gitId":"ChongWeiJie29"},"content":"public class ParserUtilPrescription {","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":24,"author":{"gitId":"ChongWeiJie29"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2023-10-12"},{"lineNumber":25,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"ChongWeiJie29"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":27,"author":{"gitId":"ChongWeiJie29"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2023-10-12"},{"lineNumber":28,"author":{"gitId":"ChongWeiJie29"},"content":"     * trimmed.","lastModifiedDate":"2023-10-12"},{"lineNumber":29,"author":{"gitId":"ChongWeiJie29"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2023-10-12"},{"lineNumber":30,"author":{"gitId":"ChongWeiJie29"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":31,"author":{"gitId":"ChongWeiJie29"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2023-10-12"},{"lineNumber":32,"author":{"gitId":"ChongWeiJie29"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2023-10-12"},{"lineNumber":33,"author":{"gitId":"ChongWeiJie29"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2023-10-12"},{"lineNumber":34,"author":{"gitId":"ChongWeiJie29"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2023-10-12"},{"lineNumber":35,"author":{"gitId":"ChongWeiJie29"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":36,"author":{"gitId":"ChongWeiJie29"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2023-10-12"},{"lineNumber":37,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":38,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":39,"author":{"gitId":"ChongWeiJie29"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":40,"author":{"gitId":"ChongWeiJie29"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2023-10-12"},{"lineNumber":41,"author":{"gitId":"ChongWeiJie29"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-10-12"},{"lineNumber":42,"author":{"gitId":"ChongWeiJie29"},"content":"     *","lastModifiedDate":"2023-10-12"},{"lineNumber":43,"author":{"gitId":"ChongWeiJie29"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2023-10-12"},{"lineNumber":44,"author":{"gitId":"ChongWeiJie29"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":45,"author":{"gitId":"ChongWeiJie29"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2023-10-12"},{"lineNumber":46,"author":{"gitId":"ChongWeiJie29"},"content":"        requireNonNull(name);","lastModifiedDate":"2023-10-12"},{"lineNumber":47,"author":{"gitId":"ChongWeiJie29"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2023-10-12"},{"lineNumber":48,"author":{"gitId":"ChongWeiJie29"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2023-10-12"},{"lineNumber":49,"author":{"gitId":"ChongWeiJie29"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-12"},{"lineNumber":50,"author":{"gitId":"ChongWeiJie29"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":51,"author":{"gitId":"ChongWeiJie29"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2023-10-12"},{"lineNumber":52,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":53,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":54,"author":{"gitId":"ChongWeiJie29"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":55,"author":{"gitId":"ChongWeiJie29"},"content":"     * Parses a {@code String Dosage} into a {@code Dosage}.","lastModifiedDate":"2023-10-12"},{"lineNumber":56,"author":{"gitId":"ChongWeiJie29"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-10-12"},{"lineNumber":57,"author":{"gitId":"ChongWeiJie29"},"content":"     *","lastModifiedDate":"2023-10-12"},{"lineNumber":58,"author":{"gitId":"ChongWeiJie29"},"content":"     * @throws ParseException if the given {@code dosage} is invalid.","lastModifiedDate":"2023-10-12"},{"lineNumber":59,"author":{"gitId":"ChongWeiJie29"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":60,"author":{"gitId":"ChongWeiJie29"},"content":"    public static Dosage parseDosage(String dosage) throws ParseException {","lastModifiedDate":"2023-10-12"},{"lineNumber":61,"author":{"gitId":"ChongWeiJie29"},"content":"        requireNonNull(dosage);","lastModifiedDate":"2023-10-12"},{"lineNumber":62,"author":{"gitId":"ChongWeiJie29"},"content":"        String trimmedDosage \u003d dosage.trim();","lastModifiedDate":"2023-10-12"},{"lineNumber":63,"author":{"gitId":"ChongWeiJie29"},"content":"        if (!Dosage.isValidDosage(trimmedDosage)) {","lastModifiedDate":"2023-10-12"},{"lineNumber":64,"author":{"gitId":"ChongWeiJie29"},"content":"            throw new ParseException(Dosage.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-12"},{"lineNumber":65,"author":{"gitId":"ChongWeiJie29"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":66,"author":{"gitId":"ChongWeiJie29"},"content":"        return new Dosage(trimmedDosage);","lastModifiedDate":"2023-10-12"},{"lineNumber":67,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":68,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":69,"author":{"gitId":"ChongWeiJie29"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":70,"author":{"gitId":"ChongWeiJie29"},"content":"     * Parses a {@code String Frequency} into a {@code Frequency}.","lastModifiedDate":"2023-10-12"},{"lineNumber":71,"author":{"gitId":"ChongWeiJie29"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-10-12"},{"lineNumber":72,"author":{"gitId":"ChongWeiJie29"},"content":"     *","lastModifiedDate":"2023-10-12"},{"lineNumber":73,"author":{"gitId":"ChongWeiJie29"},"content":"     * @throws ParseException if the given {@code frequency} is invalid.","lastModifiedDate":"2023-10-12"},{"lineNumber":74,"author":{"gitId":"ChongWeiJie29"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":75,"author":{"gitId":"ChongWeiJie29"},"content":"    public static Frequency parseFrequency(String frequency) throws ParseException {","lastModifiedDate":"2023-10-12"},{"lineNumber":76,"author":{"gitId":"ChongWeiJie29"},"content":"        requireNonNull(frequency);","lastModifiedDate":"2023-10-12"},{"lineNumber":77,"author":{"gitId":"ChongWeiJie29"},"content":"        String trimmedFrequency \u003d frequency.trim();","lastModifiedDate":"2023-10-12"},{"lineNumber":78,"author":{"gitId":"ChongWeiJie29"},"content":"        if (!Frequency.isValidFrequency(trimmedFrequency)) {","lastModifiedDate":"2023-10-12"},{"lineNumber":79,"author":{"gitId":"ChongWeiJie29"},"content":"            throw new ParseException(Frequency.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-12"},{"lineNumber":80,"author":{"gitId":"ChongWeiJie29"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":81,"author":{"gitId":"ChongWeiJie29"},"content":"        return new Frequency(trimmedFrequency);","lastModifiedDate":"2023-10-12"},{"lineNumber":82,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":83,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":84,"author":{"gitId":"ChongWeiJie29"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":85,"author":{"gitId":"ChongWeiJie29"},"content":"     * Parses a {@code String StartDate} into a {@code Date}.","lastModifiedDate":"2023-10-12"},{"lineNumber":86,"author":{"gitId":"ChongWeiJie29"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-10-12"},{"lineNumber":87,"author":{"gitId":"ChongWeiJie29"},"content":"     *","lastModifiedDate":"2023-10-12"},{"lineNumber":88,"author":{"gitId":"ChongWeiJie29"},"content":"     * @throws ParseException if the given {@code startDate} is invalid.","lastModifiedDate":"2023-10-12"},{"lineNumber":89,"author":{"gitId":"ChongWeiJie29"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":90,"author":{"gitId":"ChongWeiJie29"},"content":"    public static Date parseStartDate(String startDate) throws ParseException {","lastModifiedDate":"2023-10-12"},{"lineNumber":91,"author":{"gitId":"ChongWeiJie29"},"content":"        requireNonNull(startDate);","lastModifiedDate":"2023-10-12"},{"lineNumber":92,"author":{"gitId":"ChongWeiJie29"},"content":"        String trimmedStartDate \u003d startDate.trim();","lastModifiedDate":"2023-10-12"},{"lineNumber":93,"author":{"gitId":"ChongWeiJie29"},"content":"        if (!Date.isValidDate(trimmedStartDate)) {","lastModifiedDate":"2023-10-12"},{"lineNumber":94,"author":{"gitId":"ChongWeiJie29"},"content":"            throw new ParseException(Date.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-12"},{"lineNumber":95,"author":{"gitId":"ChongWeiJie29"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":96,"author":{"gitId":"ChongWeiJie29"},"content":"        return new Date(trimmedStartDate);","lastModifiedDate":"2023-10-12"},{"lineNumber":97,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":98,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":99,"author":{"gitId":"ChongWeiJie29"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":100,"author":{"gitId":"ChongWeiJie29"},"content":"     * Parses a {@code String EndDate} into a {@code Date}.","lastModifiedDate":"2023-10-12"},{"lineNumber":101,"author":{"gitId":"ChongWeiJie29"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-10-12"},{"lineNumber":102,"author":{"gitId":"ChongWeiJie29"},"content":"     *","lastModifiedDate":"2023-10-12"},{"lineNumber":103,"author":{"gitId":"ChongWeiJie29"},"content":"     * @throws ParseException if the given {@code endDate} is invalid.","lastModifiedDate":"2023-10-12"},{"lineNumber":104,"author":{"gitId":"ChongWeiJie29"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":105,"author":{"gitId":"ChongWeiJie29"},"content":"    public static Date parseEndDate(String endDate) throws ParseException {","lastModifiedDate":"2023-10-12"},{"lineNumber":106,"author":{"gitId":"ChongWeiJie29"},"content":"        requireNonNull(endDate);","lastModifiedDate":"2023-10-12"},{"lineNumber":107,"author":{"gitId":"ChongWeiJie29"},"content":"        String trimmedEndDate \u003d endDate.trim();","lastModifiedDate":"2023-10-12"},{"lineNumber":108,"author":{"gitId":"ChongWeiJie29"},"content":"        if (!Date.isValidDate(trimmedEndDate)) {","lastModifiedDate":"2023-10-12"},{"lineNumber":109,"author":{"gitId":"ChongWeiJie29"},"content":"            throw new ParseException(Date.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-12"},{"lineNumber":110,"author":{"gitId":"ChongWeiJie29"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":111,"author":{"gitId":"ChongWeiJie29"},"content":"        return new Date(trimmedEndDate);","lastModifiedDate":"2023-10-12"},{"lineNumber":112,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":113,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":114,"author":{"gitId":"ChongWeiJie29"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":115,"author":{"gitId":"ChongWeiJie29"},"content":"     * Parses a {@code String ExpiryDate} into a {@code Date}.","lastModifiedDate":"2023-10-12"},{"lineNumber":116,"author":{"gitId":"ChongWeiJie29"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-10-12"},{"lineNumber":117,"author":{"gitId":"ChongWeiJie29"},"content":"     *","lastModifiedDate":"2023-10-12"},{"lineNumber":118,"author":{"gitId":"ChongWeiJie29"},"content":"     * @throws ParseException if the given {@code expiryDate} is invalid.","lastModifiedDate":"2023-10-12"},{"lineNumber":119,"author":{"gitId":"ChongWeiJie29"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":120,"author":{"gitId":"ChongWeiJie29"},"content":"    public static Date parseExpiryDate(String expiryDate) throws ParseException {","lastModifiedDate":"2023-10-12"},{"lineNumber":121,"author":{"gitId":"ChongWeiJie29"},"content":"        requireNonNull(expiryDate);","lastModifiedDate":"2023-10-12"},{"lineNumber":122,"author":{"gitId":"ChongWeiJie29"},"content":"        String trimmedExpiryDate \u003d expiryDate.trim();","lastModifiedDate":"2023-10-12"},{"lineNumber":123,"author":{"gitId":"ChongWeiJie29"},"content":"        if (!Date.isValidDate(trimmedExpiryDate)) {","lastModifiedDate":"2023-10-12"},{"lineNumber":124,"author":{"gitId":"ChongWeiJie29"},"content":"            throw new ParseException(Date.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-12"},{"lineNumber":125,"author":{"gitId":"ChongWeiJie29"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":126,"author":{"gitId":"ChongWeiJie29"},"content":"        return new Date(trimmedExpiryDate);","lastModifiedDate":"2023-10-12"},{"lineNumber":127,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":128,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":129,"author":{"gitId":"ChongWeiJie29"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":130,"author":{"gitId":"ChongWeiJie29"},"content":"     * Parses a {@code String TotalStock} into a {@code Stock}.","lastModifiedDate":"2023-10-12"},{"lineNumber":131,"author":{"gitId":"ChongWeiJie29"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-10-12"},{"lineNumber":132,"author":{"gitId":"ChongWeiJie29"},"content":"     *","lastModifiedDate":"2023-10-12"},{"lineNumber":133,"author":{"gitId":"ChongWeiJie29"},"content":"     * @throws ParseException if the given {@code totalStock} is invalid.","lastModifiedDate":"2023-10-12"},{"lineNumber":134,"author":{"gitId":"ChongWeiJie29"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":135,"author":{"gitId":"ChongWeiJie29"},"content":"    public static Stock parseTotalStock(String totalStock) throws ParseException {","lastModifiedDate":"2023-10-12"},{"lineNumber":136,"author":{"gitId":"ChongWeiJie29"},"content":"        requireNonNull(totalStock);","lastModifiedDate":"2023-10-12"},{"lineNumber":137,"author":{"gitId":"ChongWeiJie29"},"content":"        String trimmedTotalStock \u003d totalStock.trim();","lastModifiedDate":"2023-10-12"},{"lineNumber":138,"author":{"gitId":"ChongWeiJie29"},"content":"        if (!Stock.isValidStock(trimmedTotalStock)) {","lastModifiedDate":"2023-10-12"},{"lineNumber":139,"author":{"gitId":"ChongWeiJie29"},"content":"            throw new ParseException(Stock.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-12"},{"lineNumber":140,"author":{"gitId":"ChongWeiJie29"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":141,"author":{"gitId":"ChongWeiJie29"},"content":"        return new Stock(trimmedTotalStock);","lastModifiedDate":"2023-10-12"},{"lineNumber":142,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":143,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":144,"author":{"gitId":"ChongWeiJie29"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":145,"author":{"gitId":"ChongWeiJie29"},"content":"     * Parses a {@code String Note} into a {@code Note}.","lastModifiedDate":"2023-10-12"},{"lineNumber":146,"author":{"gitId":"ChongWeiJie29"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-10-12"},{"lineNumber":147,"author":{"gitId":"ChongWeiJie29"},"content":"     *","lastModifiedDate":"2023-10-12"},{"lineNumber":148,"author":{"gitId":"ChongWeiJie29"},"content":"     * @throws ParseException if the given {@code note} is invalid.","lastModifiedDate":"2023-10-12"},{"lineNumber":149,"author":{"gitId":"ChongWeiJie29"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":150,"author":{"gitId":"ChongWeiJie29"},"content":"    public static Note parseNote(String note) throws ParseException {","lastModifiedDate":"2023-10-12"},{"lineNumber":151,"author":{"gitId":"ChongWeiJie29"},"content":"        requireNonNull(note);","lastModifiedDate":"2023-10-12"},{"lineNumber":152,"author":{"gitId":"ChongWeiJie29"},"content":"        String trimmedNote \u003d note.trim();","lastModifiedDate":"2023-10-12"},{"lineNumber":153,"author":{"gitId":"ChongWeiJie29"},"content":"        if (!Note.isValidNote(trimmedNote)) {","lastModifiedDate":"2023-10-12"},{"lineNumber":154,"author":{"gitId":"ChongWeiJie29"},"content":"            throw new ParseException(Frequency.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-12"},{"lineNumber":155,"author":{"gitId":"ChongWeiJie29"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":156,"author":{"gitId":"ChongWeiJie29"},"content":"        return new Note(trimmedNote);","lastModifiedDate":"2023-10-12"},{"lineNumber":157,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":158,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":159,"author":{"gitId":"ChongWeiJie29"},"content":"    // /**","lastModifiedDate":"2023-10-12"},{"lineNumber":160,"author":{"gitId":"ChongWeiJie29"},"content":"    //  * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2023-10-12"},{"lineNumber":161,"author":{"gitId":"ChongWeiJie29"},"content":"    //  * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-10-12"},{"lineNumber":162,"author":{"gitId":"ChongWeiJie29"},"content":"    //  *","lastModifiedDate":"2023-10-12"},{"lineNumber":163,"author":{"gitId":"ChongWeiJie29"},"content":"    //  * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2023-10-12"},{"lineNumber":164,"author":{"gitId":"ChongWeiJie29"},"content":"    //  */","lastModifiedDate":"2023-10-12"},{"lineNumber":165,"author":{"gitId":"ChongWeiJie29"},"content":"    // public static Tag parseTag(String tag) throws ParseException {","lastModifiedDate":"2023-10-12"},{"lineNumber":166,"author":{"gitId":"ChongWeiJie29"},"content":"    //     requireNonNull(tag);","lastModifiedDate":"2023-10-12"},{"lineNumber":167,"author":{"gitId":"ChongWeiJie29"},"content":"    //     String trimmedTag \u003d tag.trim();","lastModifiedDate":"2023-10-12"},{"lineNumber":168,"author":{"gitId":"ChongWeiJie29"},"content":"    //     if (!Tag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2023-10-12"},{"lineNumber":169,"author":{"gitId":"ChongWeiJie29"},"content":"    //         throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-12"},{"lineNumber":170,"author":{"gitId":"ChongWeiJie29"},"content":"    //     }","lastModifiedDate":"2023-10-12"},{"lineNumber":171,"author":{"gitId":"ChongWeiJie29"},"content":"    //     return new Tag(trimmedTag);","lastModifiedDate":"2023-10-12"},{"lineNumber":172,"author":{"gitId":"ChongWeiJie29"},"content":"    // }","lastModifiedDate":"2023-10-12"},{"lineNumber":173,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":174,"author":{"gitId":"ChongWeiJie29"},"content":"    // /**","lastModifiedDate":"2023-10-12"},{"lineNumber":175,"author":{"gitId":"ChongWeiJie29"},"content":"    //  * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2023-10-12"},{"lineNumber":176,"author":{"gitId":"ChongWeiJie29"},"content":"    //  */","lastModifiedDate":"2023-10-12"},{"lineNumber":177,"author":{"gitId":"ChongWeiJie29"},"content":"    // public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2023-10-12"},{"lineNumber":178,"author":{"gitId":"ChongWeiJie29"},"content":"    //     requireNonNull(tags);","lastModifiedDate":"2023-10-12"},{"lineNumber":179,"author":{"gitId":"ChongWeiJie29"},"content":"    //     final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-10-12"},{"lineNumber":180,"author":{"gitId":"ChongWeiJie29"},"content":"    //     for (String tagName : tags) {","lastModifiedDate":"2023-10-12"},{"lineNumber":181,"author":{"gitId":"ChongWeiJie29"},"content":"    //         tagSet.add(parseTag(tagName));","lastModifiedDate":"2023-10-12"},{"lineNumber":182,"author":{"gitId":"ChongWeiJie29"},"content":"    //     }","lastModifiedDate":"2023-10-12"},{"lineNumber":183,"author":{"gitId":"ChongWeiJie29"},"content":"    //     return tagSet;","lastModifiedDate":"2023-10-12"},{"lineNumber":184,"author":{"gitId":"ChongWeiJie29"},"content":"    // }","lastModifiedDate":"2023-10-12"},{"lineNumber":185,"author":{"gitId":"ChongWeiJie29"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"ChongWeiJie29":185}},{"path":"src/main/java/seedu/address/logic/parser/PrescriptionListParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ChongWeiJie29"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"ChongWeiJie29"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"ChongWeiJie29"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"ChongWeiJie29"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"ChongWeiJie29"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"ChongWeiJie29"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"ChongWeiJie29"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"ChongWeiJie29"},"content":"import seedu.address.logic.commands.AddPrescriptionCommand;","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"ChongWeiJie29"},"content":"import seedu.address.logic.commands.CommandPrescription;","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"ChongWeiJie29"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"RoeReRe"},"content":"import seedu.address.logic.commands.ListPrescriptionCommand;","lastModifiedDate":"2023-10-15"},{"lineNumber":15,"author":{"gitId":"ChongWeiJie29"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"ChongWeiJie29"},"content":"/**","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"ChongWeiJie29"},"content":" * Parses user input.","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"ChongWeiJie29"},"content":" */","lastModifiedDate":"2023-10-12"},{"lineNumber":20,"author":{"gitId":"ChongWeiJie29"},"content":"public class PrescriptionListParser {","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":22,"author":{"gitId":"ChongWeiJie29"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"ChongWeiJie29"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2023-10-12"},{"lineNumber":24,"author":{"gitId":"ChongWeiJie29"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":25,"author":{"gitId":"ChongWeiJie29"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"ChongWeiJie29"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(PrescriptionListParser.class);","lastModifiedDate":"2023-10-12"},{"lineNumber":27,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":28,"author":{"gitId":"ChongWeiJie29"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":29,"author":{"gitId":"ChongWeiJie29"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2023-10-12"},{"lineNumber":30,"author":{"gitId":"ChongWeiJie29"},"content":"     *","lastModifiedDate":"2023-10-12"},{"lineNumber":31,"author":{"gitId":"ChongWeiJie29"},"content":"     * @param userInput full user input string","lastModifiedDate":"2023-10-12"},{"lineNumber":32,"author":{"gitId":"ChongWeiJie29"},"content":"     * @return the command based on the user input","lastModifiedDate":"2023-10-12"},{"lineNumber":33,"author":{"gitId":"ChongWeiJie29"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-10-12"},{"lineNumber":34,"author":{"gitId":"ChongWeiJie29"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":35,"author":{"gitId":"ChongWeiJie29"},"content":"    public CommandPrescription parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2023-10-12"},{"lineNumber":36,"author":{"gitId":"ChongWeiJie29"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2023-10-12"},{"lineNumber":37,"author":{"gitId":"ChongWeiJie29"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2023-10-12"},{"lineNumber":38,"author":{"gitId":"ChongWeiJie29"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-12"},{"lineNumber":39,"author":{"gitId":"ChongWeiJie29"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":40,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":41,"author":{"gitId":"ChongWeiJie29"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2023-10-12"},{"lineNumber":42,"author":{"gitId":"ChongWeiJie29"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2023-10-12"},{"lineNumber":43,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":44,"author":{"gitId":"ChongWeiJie29"},"content":"        // Note to developers: Change the log level in config.json to enable lower level (i.e., FINE, FINER and lower)","lastModifiedDate":"2023-10-12"},{"lineNumber":45,"author":{"gitId":"ChongWeiJie29"},"content":"        // log messages such as the one below.","lastModifiedDate":"2023-10-12"},{"lineNumber":46,"author":{"gitId":"ChongWeiJie29"},"content":"        // Lower level log messages are used sparingly to minimize noise in the code.","lastModifiedDate":"2023-10-12"},{"lineNumber":47,"author":{"gitId":"ChongWeiJie29"},"content":"        logger.fine(\"Command word: \" + commandWord + \"; Arguments: \" + arguments);","lastModifiedDate":"2023-10-12"},{"lineNumber":48,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":49,"author":{"gitId":"ChongWeiJie29"},"content":"        switch (commandWord) {","lastModifiedDate":"2023-10-12"},{"lineNumber":50,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":51,"author":{"gitId":"ChongWeiJie29"},"content":"        case AddPrescriptionCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-12"},{"lineNumber":52,"author":{"gitId":"ChongWeiJie29"},"content":"            return new AddPrescriptionCommandParser().parse(arguments);","lastModifiedDate":"2023-10-12"},{"lineNumber":53,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":54,"author":{"gitId":"RoeReRe"},"content":"        case ListPrescriptionCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-15"},{"lineNumber":55,"author":{"gitId":"RoeReRe"},"content":"            return new ListPrescriptionCommandParser().parse(arguments);","lastModifiedDate":"2023-10-15"},{"lineNumber":56,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":57,"author":{"gitId":"ChongWeiJie29"},"content":"        default:","lastModifiedDate":"2023-10-12"},{"lineNumber":58,"author":{"gitId":"ChongWeiJie29"},"content":"            logger.finer(\"This user input caused a ParseException: \" + userInput);","lastModifiedDate":"2023-10-12"},{"lineNumber":59,"author":{"gitId":"ChongWeiJie29"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2023-10-12"},{"lineNumber":60,"author":{"gitId":"ChongWeiJie29"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":61,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":62,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":63,"author":{"gitId":"ChongWeiJie29"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"ChongWeiJie29":59,"RoeReRe":4}},{"path":"src/main/java/seedu/address/model/ModelManagerPrescription.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ChongWeiJie29"},"content":"package seedu.address.model;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"ChongWeiJie29"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"ChongWeiJie29"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"ChongWeiJie29"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"ChongWeiJie29"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"ChongWeiJie29"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"ChongWeiJie29"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"ChongWeiJie29"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"ChongWeiJie29"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"ChongWeiJie29"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"ChongWeiJie29"},"content":"import seedu.address.model.prescription.Prescription;","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"ChongWeiJie29"},"content":"/**","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"ChongWeiJie29"},"content":" * Represents the in-memory model of the prescription list data.","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"ChongWeiJie29"},"content":" */","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"ChongWeiJie29"},"content":"public class ModelManagerPrescription implements ModelPrescription {","lastModifiedDate":"2023-10-12"},{"lineNumber":20,"author":{"gitId":"ChongWeiJie29"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManagerPrescription.class);","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":22,"author":{"gitId":"ChongWeiJie29"},"content":"    private final PrescriptionList prescriptionList;","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"ChongWeiJie29"},"content":"    private final UserPrefsPrescription userPrefs;","lastModifiedDate":"2023-10-12"},{"lineNumber":24,"author":{"gitId":"ChongWeiJie29"},"content":"    private final FilteredList\u003cPrescription\u003e filteredPrescriptions;","lastModifiedDate":"2023-10-12"},{"lineNumber":25,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"ChongWeiJie29"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":27,"author":{"gitId":"ChongWeiJie29"},"content":"     * Initializes a ModelManagerPrescription with the given prescriptionList and userPrefs.","lastModifiedDate":"2023-10-12"},{"lineNumber":28,"author":{"gitId":"ChongWeiJie29"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":29,"author":{"gitId":"ChongWeiJie29"},"content":"    public ModelManagerPrescription(ReadOnlyPrescriptionList prescriptionList,","lastModifiedDate":"2023-10-12"},{"lineNumber":30,"author":{"gitId":"ChongWeiJie29"},"content":"        ReadOnlyUserPrefsPrescription userPrefs) {","lastModifiedDate":"2023-10-12"},{"lineNumber":31,"author":{"gitId":"ChongWeiJie29"},"content":"        requireAllNonNull(prescriptionList, userPrefs);","lastModifiedDate":"2023-10-12"},{"lineNumber":32,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":33,"author":{"gitId":"ChongWeiJie29"},"content":"        logger.fine(\"Initializing with prescription list: \" + prescriptionList + \" and user prefs \" + userPrefs);","lastModifiedDate":"2023-10-12"},{"lineNumber":34,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":35,"author":{"gitId":"ChongWeiJie29"},"content":"        this.prescriptionList \u003d new PrescriptionList(prescriptionList);","lastModifiedDate":"2023-10-12"},{"lineNumber":36,"author":{"gitId":"ChongWeiJie29"},"content":"        this.userPrefs \u003d new UserPrefsPrescription(userPrefs);","lastModifiedDate":"2023-10-12"},{"lineNumber":37,"author":{"gitId":"ChongWeiJie29"},"content":"        filteredPrescriptions \u003d new FilteredList\u003c\u003e(this.prescriptionList.getPrescriptionList());","lastModifiedDate":"2023-10-12"},{"lineNumber":38,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":39,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":40,"author":{"gitId":"ChongWeiJie29"},"content":"    public ModelManagerPrescription() {","lastModifiedDate":"2023-10-12"},{"lineNumber":41,"author":{"gitId":"ChongWeiJie29"},"content":"        this(new PrescriptionList(), new UserPrefsPrescription());","lastModifiedDate":"2023-10-12"},{"lineNumber":42,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":43,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":44,"author":{"gitId":"ChongWeiJie29"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefsPrescription \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-10-12"},{"lineNumber":45,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":46,"author":{"gitId":"ChongWeiJie29"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":47,"author":{"gitId":"ChongWeiJie29"},"content":"    public void setUserPrefs(ReadOnlyUserPrefsPrescription userPrefs) {","lastModifiedDate":"2023-10-12"},{"lineNumber":48,"author":{"gitId":"ChongWeiJie29"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2023-10-12"},{"lineNumber":49,"author":{"gitId":"ChongWeiJie29"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2023-10-12"},{"lineNumber":50,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":51,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":52,"author":{"gitId":"ChongWeiJie29"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":53,"author":{"gitId":"ChongWeiJie29"},"content":"    public ReadOnlyUserPrefsPrescription getUserPrefs() {","lastModifiedDate":"2023-10-12"},{"lineNumber":54,"author":{"gitId":"ChongWeiJie29"},"content":"        return userPrefs;","lastModifiedDate":"2023-10-12"},{"lineNumber":55,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":56,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":57,"author":{"gitId":"ChongWeiJie29"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":58,"author":{"gitId":"ChongWeiJie29"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2023-10-12"},{"lineNumber":59,"author":{"gitId":"ChongWeiJie29"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2023-10-12"},{"lineNumber":60,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":61,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":62,"author":{"gitId":"ChongWeiJie29"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":63,"author":{"gitId":"ChongWeiJie29"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2023-10-12"},{"lineNumber":64,"author":{"gitId":"ChongWeiJie29"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2023-10-12"},{"lineNumber":65,"author":{"gitId":"ChongWeiJie29"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2023-10-12"},{"lineNumber":66,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":67,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":68,"author":{"gitId":"ChongWeiJie29"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":69,"author":{"gitId":"ChongWeiJie29"},"content":"    public Path getPrescriptionListFilePath() {","lastModifiedDate":"2023-10-12"},{"lineNumber":70,"author":{"gitId":"ChongWeiJie29"},"content":"        return userPrefs.getPrescriptionListFilePath();","lastModifiedDate":"2023-10-12"},{"lineNumber":71,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":72,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":73,"author":{"gitId":"ChongWeiJie29"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":74,"author":{"gitId":"ChongWeiJie29"},"content":"    public void setPrescriptionListFilePath(Path prescriptionListFilePath) {","lastModifiedDate":"2023-10-12"},{"lineNumber":75,"author":{"gitId":"ChongWeiJie29"},"content":"        requireNonNull(prescriptionListFilePath);","lastModifiedDate":"2023-10-12"},{"lineNumber":76,"author":{"gitId":"ChongWeiJie29"},"content":"        userPrefs.setPrescriptionListFilePath(prescriptionListFilePath);","lastModifiedDate":"2023-10-12"},{"lineNumber":77,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":78,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":79,"author":{"gitId":"ChongWeiJie29"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d PrescriptionList \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-10-12"},{"lineNumber":80,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":81,"author":{"gitId":"ChongWeiJie29"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":82,"author":{"gitId":"ChongWeiJie29"},"content":"    public void setPrescriptionList(ReadOnlyPrescriptionList prescriptionList) {","lastModifiedDate":"2023-10-12"},{"lineNumber":83,"author":{"gitId":"ChongWeiJie29"},"content":"        this.prescriptionList.resetData(prescriptionList);","lastModifiedDate":"2023-10-12"},{"lineNumber":84,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":85,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":86,"author":{"gitId":"ChongWeiJie29"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":87,"author":{"gitId":"ChongWeiJie29"},"content":"    public ReadOnlyPrescriptionList getPrescriptionList() {","lastModifiedDate":"2023-10-12"},{"lineNumber":88,"author":{"gitId":"ChongWeiJie29"},"content":"        return prescriptionList;","lastModifiedDate":"2023-10-12"},{"lineNumber":89,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":90,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":91,"author":{"gitId":"ChongWeiJie29"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":92,"author":{"gitId":"ChongWeiJie29"},"content":"    public boolean hasPrescription(Prescription prescription) {","lastModifiedDate":"2023-10-12"},{"lineNumber":93,"author":{"gitId":"ChongWeiJie29"},"content":"        requireNonNull(prescription);","lastModifiedDate":"2023-10-12"},{"lineNumber":94,"author":{"gitId":"ChongWeiJie29"},"content":"        return prescriptionList.hasPrescription(prescription);","lastModifiedDate":"2023-10-12"},{"lineNumber":95,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":96,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":97,"author":{"gitId":"ChongWeiJie29"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":98,"author":{"gitId":"ChongWeiJie29"},"content":"    public void deletePrescription(Prescription target) {","lastModifiedDate":"2023-10-12"},{"lineNumber":99,"author":{"gitId":"ChongWeiJie29"},"content":"        prescriptionList.removePrescription(target);","lastModifiedDate":"2023-10-12"},{"lineNumber":100,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":101,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":102,"author":{"gitId":"ChongWeiJie29"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":103,"author":{"gitId":"ChongWeiJie29"},"content":"    public void addPrescription(Prescription prescription) {","lastModifiedDate":"2023-10-12"},{"lineNumber":104,"author":{"gitId":"ChongWeiJie29"},"content":"        prescriptionList.addPrescription(prescription);","lastModifiedDate":"2023-10-12"},{"lineNumber":105,"author":{"gitId":"ChongWeiJie29"},"content":"        updateFilteredPrescriptionList(PREDICATE_SHOW_ALL_PRESCRIPTIONS);","lastModifiedDate":"2023-10-12"},{"lineNumber":106,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":107,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":108,"author":{"gitId":"ChongWeiJie29"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":109,"author":{"gitId":"ChongWeiJie29"},"content":"    public void setPrescription(Prescription target, Prescription editedPrescription) {","lastModifiedDate":"2023-10-12"},{"lineNumber":110,"author":{"gitId":"ChongWeiJie29"},"content":"        requireAllNonNull(target, editedPrescription);","lastModifiedDate":"2023-10-12"},{"lineNumber":111,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":112,"author":{"gitId":"ChongWeiJie29"},"content":"        prescriptionList.setPrescription(target, editedPrescription);","lastModifiedDate":"2023-10-12"},{"lineNumber":113,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":114,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":115,"author":{"gitId":"ChongWeiJie29"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Prescription List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-10-12"},{"lineNumber":116,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":117,"author":{"gitId":"ChongWeiJie29"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":118,"author":{"gitId":"ChongWeiJie29"},"content":"     * Returns an unmodifiable view of the list of {@code Prescription} backed by the internal list of","lastModifiedDate":"2023-10-12"},{"lineNumber":119,"author":{"gitId":"ChongWeiJie29"},"content":"     * {@code versionedPrescriptionList}","lastModifiedDate":"2023-10-12"},{"lineNumber":120,"author":{"gitId":"ChongWeiJie29"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":121,"author":{"gitId":"ChongWeiJie29"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":122,"author":{"gitId":"ChongWeiJie29"},"content":"    public ObservableList\u003cPrescription\u003e getFilteredPrescriptionList() {","lastModifiedDate":"2023-10-12"},{"lineNumber":123,"author":{"gitId":"ChongWeiJie29"},"content":"        return filteredPrescriptions;","lastModifiedDate":"2023-10-12"},{"lineNumber":124,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":125,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":126,"author":{"gitId":"ChongWeiJie29"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":127,"author":{"gitId":"ChongWeiJie29"},"content":"    public void updateFilteredPrescriptionList(Predicate\u003cPrescription\u003e predicate) {","lastModifiedDate":"2023-10-12"},{"lineNumber":128,"author":{"gitId":"ChongWeiJie29"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2023-10-12"},{"lineNumber":129,"author":{"gitId":"ChongWeiJie29"},"content":"        filteredPrescriptions.setPredicate(predicate);","lastModifiedDate":"2023-10-12"},{"lineNumber":130,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":131,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":132,"author":{"gitId":"ChongWeiJie29"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":133,"author":{"gitId":"ChongWeiJie29"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-12"},{"lineNumber":134,"author":{"gitId":"ChongWeiJie29"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-12"},{"lineNumber":135,"author":{"gitId":"ChongWeiJie29"},"content":"            return true;","lastModifiedDate":"2023-10-12"},{"lineNumber":136,"author":{"gitId":"ChongWeiJie29"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":137,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":138,"author":{"gitId":"ChongWeiJie29"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-12"},{"lineNumber":139,"author":{"gitId":"ChongWeiJie29"},"content":"        if (!(other instanceof ModelManagerPrescription)) {","lastModifiedDate":"2023-10-12"},{"lineNumber":140,"author":{"gitId":"ChongWeiJie29"},"content":"            return false;","lastModifiedDate":"2023-10-12"},{"lineNumber":141,"author":{"gitId":"ChongWeiJie29"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":142,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":143,"author":{"gitId":"ChongWeiJie29"},"content":"        ModelManagerPrescription otherModelManager \u003d (ModelManagerPrescription) other;","lastModifiedDate":"2023-10-12"},{"lineNumber":144,"author":{"gitId":"ChongWeiJie29"},"content":"        return prescriptionList.equals(otherModelManager.prescriptionList)","lastModifiedDate":"2023-10-12"},{"lineNumber":145,"author":{"gitId":"ChongWeiJie29"},"content":"                \u0026\u0026 userPrefs.equals(otherModelManager.userPrefs)","lastModifiedDate":"2023-10-12"},{"lineNumber":146,"author":{"gitId":"ChongWeiJie29"},"content":"                \u0026\u0026 filteredPrescriptions.equals(otherModelManager.filteredPrescriptions);","lastModifiedDate":"2023-10-12"},{"lineNumber":147,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":148,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":149,"author":{"gitId":"ChongWeiJie29"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"ChongWeiJie29":149}},{"path":"src/main/java/seedu/address/model/ModelPrescription.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ChongWeiJie29"},"content":"package seedu.address.model;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"ChongWeiJie29"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"ChongWeiJie29"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"ChongWeiJie29"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"ChongWeiJie29"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"ChongWeiJie29"},"content":"import seedu.address.model.prescription.Prescription;","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"ChongWeiJie29"},"content":"/**","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"ChongWeiJie29"},"content":" * The API of the ModelPrescription component.","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"ChongWeiJie29"},"content":" */","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"ChongWeiJie29"},"content":"public interface ModelPrescription {","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"ChongWeiJie29"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"ChongWeiJie29"},"content":"    Predicate\u003cPrescription\u003e PREDICATE_SHOW_ALL_PRESCRIPTIONS \u003d unused -\u003e true;","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"ChongWeiJie29"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"ChongWeiJie29"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"ChongWeiJie29"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":20,"author":{"gitId":"ChongWeiJie29"},"content":"    void setUserPrefs(ReadOnlyUserPrefsPrescription userPrefs);","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":22,"author":{"gitId":"ChongWeiJie29"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"ChongWeiJie29"},"content":"     * Returns the user prefs.","lastModifiedDate":"2023-10-12"},{"lineNumber":24,"author":{"gitId":"ChongWeiJie29"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":25,"author":{"gitId":"ChongWeiJie29"},"content":"    ReadOnlyUserPrefsPrescription getUserPrefs();","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":27,"author":{"gitId":"ChongWeiJie29"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":28,"author":{"gitId":"ChongWeiJie29"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2023-10-12"},{"lineNumber":29,"author":{"gitId":"ChongWeiJie29"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":30,"author":{"gitId":"ChongWeiJie29"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2023-10-12"},{"lineNumber":31,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":32,"author":{"gitId":"ChongWeiJie29"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":33,"author":{"gitId":"ChongWeiJie29"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2023-10-12"},{"lineNumber":34,"author":{"gitId":"ChongWeiJie29"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":35,"author":{"gitId":"ChongWeiJie29"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2023-10-12"},{"lineNumber":36,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":37,"author":{"gitId":"ChongWeiJie29"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":38,"author":{"gitId":"ChongWeiJie29"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2023-10-12"},{"lineNumber":39,"author":{"gitId":"ChongWeiJie29"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":40,"author":{"gitId":"ChongWeiJie29"},"content":"    Path getPrescriptionListFilePath();","lastModifiedDate":"2023-10-12"},{"lineNumber":41,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":42,"author":{"gitId":"ChongWeiJie29"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":43,"author":{"gitId":"ChongWeiJie29"},"content":"     * Sets the user prefs\u0027 address book file path.","lastModifiedDate":"2023-10-12"},{"lineNumber":44,"author":{"gitId":"ChongWeiJie29"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":45,"author":{"gitId":"ChongWeiJie29"},"content":"    void setPrescriptionListFilePath(Path prescriptionListFilePath);","lastModifiedDate":"2023-10-12"},{"lineNumber":46,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":47,"author":{"gitId":"ChongWeiJie29"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":48,"author":{"gitId":"ChongWeiJie29"},"content":"     * Replaces prescription list data with the data in {@code prescriptionList}.","lastModifiedDate":"2023-10-12"},{"lineNumber":49,"author":{"gitId":"ChongWeiJie29"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":50,"author":{"gitId":"ChongWeiJie29"},"content":"    void setPrescriptionList(ReadOnlyPrescriptionList prescriptionList);","lastModifiedDate":"2023-10-12"},{"lineNumber":51,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":52,"author":{"gitId":"ChongWeiJie29"},"content":"    /** Returns the PrescriptionList */","lastModifiedDate":"2023-10-12"},{"lineNumber":53,"author":{"gitId":"ChongWeiJie29"},"content":"    ReadOnlyPrescriptionList getPrescriptionList();","lastModifiedDate":"2023-10-12"},{"lineNumber":54,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":55,"author":{"gitId":"ChongWeiJie29"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":56,"author":{"gitId":"ChongWeiJie29"},"content":"     * Returns true if a prescription with the same identity as {@code prescription} exists in the prescription list.","lastModifiedDate":"2023-10-12"},{"lineNumber":57,"author":{"gitId":"ChongWeiJie29"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":58,"author":{"gitId":"ChongWeiJie29"},"content":"    boolean hasPrescription(Prescription prescription);","lastModifiedDate":"2023-10-12"},{"lineNumber":59,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":60,"author":{"gitId":"ChongWeiJie29"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":61,"author":{"gitId":"ChongWeiJie29"},"content":"     * Deletes the given prescription.","lastModifiedDate":"2023-10-12"},{"lineNumber":62,"author":{"gitId":"ChongWeiJie29"},"content":"     * The prescription must exist in the prescription list.","lastModifiedDate":"2023-10-12"},{"lineNumber":63,"author":{"gitId":"ChongWeiJie29"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":64,"author":{"gitId":"ChongWeiJie29"},"content":"    void deletePrescription(Prescription target);","lastModifiedDate":"2023-10-12"},{"lineNumber":65,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":66,"author":{"gitId":"ChongWeiJie29"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":67,"author":{"gitId":"ChongWeiJie29"},"content":"     * Adds the given prescription.","lastModifiedDate":"2023-10-12"},{"lineNumber":68,"author":{"gitId":"ChongWeiJie29"},"content":"     * {@code prescription} must not already exist in the prescription list.","lastModifiedDate":"2023-10-12"},{"lineNumber":69,"author":{"gitId":"ChongWeiJie29"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":70,"author":{"gitId":"ChongWeiJie29"},"content":"    void addPrescription(Prescription prescription);","lastModifiedDate":"2023-10-12"},{"lineNumber":71,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":72,"author":{"gitId":"ChongWeiJie29"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":73,"author":{"gitId":"ChongWeiJie29"},"content":"     * Replaces the given prescription {@code target} with {@code editedPrescription}.","lastModifiedDate":"2023-10-12"},{"lineNumber":74,"author":{"gitId":"ChongWeiJie29"},"content":"     * {@code target} must exist in the prescription list.","lastModifiedDate":"2023-10-12"},{"lineNumber":75,"author":{"gitId":"ChongWeiJie29"},"content":"     * The prescription identity of {@code editedPrescription} must not be the same as another","lastModifiedDate":"2023-10-12"},{"lineNumber":76,"author":{"gitId":"ChongWeiJie29"},"content":"     * existing prescription in the prescription list.","lastModifiedDate":"2023-10-12"},{"lineNumber":77,"author":{"gitId":"ChongWeiJie29"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":78,"author":{"gitId":"ChongWeiJie29"},"content":"    void setPrescription(Prescription target, Prescription editedPrescription);","lastModifiedDate":"2023-10-12"},{"lineNumber":79,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":80,"author":{"gitId":"ChongWeiJie29"},"content":"    /** Returns an unmodifiable view of the filtered prescription list */","lastModifiedDate":"2023-10-12"},{"lineNumber":81,"author":{"gitId":"ChongWeiJie29"},"content":"    ObservableList\u003cPrescription\u003e getFilteredPrescriptionList();","lastModifiedDate":"2023-10-12"},{"lineNumber":82,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":83,"author":{"gitId":"ChongWeiJie29"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":84,"author":{"gitId":"ChongWeiJie29"},"content":"     * Updates the filter of the filtered prescription list to filter by the given {@code predicate}.","lastModifiedDate":"2023-10-12"},{"lineNumber":85,"author":{"gitId":"ChongWeiJie29"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2023-10-12"},{"lineNumber":86,"author":{"gitId":"ChongWeiJie29"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":87,"author":{"gitId":"ChongWeiJie29"},"content":"    void updateFilteredPrescriptionList(Predicate\u003cPrescription\u003e predicate);","lastModifiedDate":"2023-10-12"},{"lineNumber":88,"author":{"gitId":"ChongWeiJie29"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"ChongWeiJie29":88}},{"path":"src/main/java/seedu/address/model/PrescriptionList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ChongWeiJie29"},"content":"package seedu.address.model;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"ChongWeiJie29"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"ChongWeiJie29"},"content":"import java.util.List;","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"ChongWeiJie29"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"ChongWeiJie29"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"ChongWeiJie29"},"content":"import seedu.address.model.prescription.Prescription;","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"ChongWeiJie29"},"content":"import seedu.address.model.prescription.UniquePrescriptionList;","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"ChongWeiJie29"},"content":"/**","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"ChongWeiJie29"},"content":" * Wraps all data at the address-book level","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"ChongWeiJie29"},"content":" * Duplicates are not allowed (by .isSamePrescription comparison)","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"ChongWeiJie29"},"content":" */","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"ChongWeiJie29"},"content":"public class PrescriptionList implements ReadOnlyPrescriptionList {","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"ChongWeiJie29"},"content":"    private final UniquePrescriptionList prescriptions;","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":20,"author":{"gitId":"ChongWeiJie29"},"content":"    /*","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"ChongWeiJie29"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2023-10-12"},{"lineNumber":22,"author":{"gitId":"ChongWeiJie29"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"ChongWeiJie29"},"content":"     *","lastModifiedDate":"2023-10-12"},{"lineNumber":24,"author":{"gitId":"ChongWeiJie29"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2023-10-12"},{"lineNumber":25,"author":{"gitId":"ChongWeiJie29"},"content":"     *   among constructors.","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"ChongWeiJie29"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":27,"author":{"gitId":"ChongWeiJie29"},"content":"    {","lastModifiedDate":"2023-10-12"},{"lineNumber":28,"author":{"gitId":"ChongWeiJie29"},"content":"        prescriptions \u003d new UniquePrescriptionList();","lastModifiedDate":"2023-10-12"},{"lineNumber":29,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":30,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":31,"author":{"gitId":"ChongWeiJie29"},"content":"    public PrescriptionList() {}","lastModifiedDate":"2023-10-12"},{"lineNumber":32,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":33,"author":{"gitId":"ChongWeiJie29"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":34,"author":{"gitId":"ChongWeiJie29"},"content":"     * Creates an PrescriptionList using the Prescriptions in the {@code toBeCopied}","lastModifiedDate":"2023-10-12"},{"lineNumber":35,"author":{"gitId":"ChongWeiJie29"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":36,"author":{"gitId":"ChongWeiJie29"},"content":"    public PrescriptionList(ReadOnlyPrescriptionList toBeCopied) {","lastModifiedDate":"2023-10-12"},{"lineNumber":37,"author":{"gitId":"ChongWeiJie29"},"content":"        this();","lastModifiedDate":"2023-10-12"},{"lineNumber":38,"author":{"gitId":"ChongWeiJie29"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2023-10-12"},{"lineNumber":39,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":40,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":41,"author":{"gitId":"ChongWeiJie29"},"content":"    //// list overwrite operations","lastModifiedDate":"2023-10-12"},{"lineNumber":42,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":43,"author":{"gitId":"ChongWeiJie29"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":44,"author":{"gitId":"ChongWeiJie29"},"content":"     * Replaces the contents of the prescription list with {@code prescriptions}.","lastModifiedDate":"2023-10-12"},{"lineNumber":45,"author":{"gitId":"ChongWeiJie29"},"content":"     * {@code prescriptions} must not contain duplicate prescriptions.","lastModifiedDate":"2023-10-12"},{"lineNumber":46,"author":{"gitId":"ChongWeiJie29"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":47,"author":{"gitId":"ChongWeiJie29"},"content":"    public void setPrescriptions(List\u003cPrescription\u003e prescriptions) {","lastModifiedDate":"2023-10-12"},{"lineNumber":48,"author":{"gitId":"ChongWeiJie29"},"content":"        this.prescriptions.setPrescriptions(prescriptions);","lastModifiedDate":"2023-10-12"},{"lineNumber":49,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":50,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":51,"author":{"gitId":"ChongWeiJie29"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":52,"author":{"gitId":"ChongWeiJie29"},"content":"     * Resets the existing data of this {@code PrescriptionList} with {@code newData}.","lastModifiedDate":"2023-10-12"},{"lineNumber":53,"author":{"gitId":"ChongWeiJie29"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":54,"author":{"gitId":"ChongWeiJie29"},"content":"    public void resetData(ReadOnlyPrescriptionList newData) {","lastModifiedDate":"2023-10-12"},{"lineNumber":55,"author":{"gitId":"ChongWeiJie29"},"content":"        requireNonNull(newData);","lastModifiedDate":"2023-10-12"},{"lineNumber":56,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":57,"author":{"gitId":"ChongWeiJie29"},"content":"        setPrescriptions(newData.getPrescriptionList());","lastModifiedDate":"2023-10-12"},{"lineNumber":58,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":59,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":60,"author":{"gitId":"ChongWeiJie29"},"content":"    //// prescription-level operations","lastModifiedDate":"2023-10-12"},{"lineNumber":61,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":62,"author":{"gitId":"ChongWeiJie29"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":63,"author":{"gitId":"ChongWeiJie29"},"content":"     * Returns true if a prescription with the same identity as {@code prescription} exists in the address book.","lastModifiedDate":"2023-10-12"},{"lineNumber":64,"author":{"gitId":"ChongWeiJie29"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":65,"author":{"gitId":"ChongWeiJie29"},"content":"    public boolean hasPrescription(Prescription prescription) {","lastModifiedDate":"2023-10-12"},{"lineNumber":66,"author":{"gitId":"ChongWeiJie29"},"content":"        requireNonNull(prescription);","lastModifiedDate":"2023-10-12"},{"lineNumber":67,"author":{"gitId":"ChongWeiJie29"},"content":"        return prescriptions.contains(prescription);","lastModifiedDate":"2023-10-12"},{"lineNumber":68,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":69,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":70,"author":{"gitId":"ChongWeiJie29"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":71,"author":{"gitId":"ChongWeiJie29"},"content":"     * Adds a prescription to the address book.","lastModifiedDate":"2023-10-12"},{"lineNumber":72,"author":{"gitId":"ChongWeiJie29"},"content":"     * The prescription must not already exist in the address book.","lastModifiedDate":"2023-10-12"},{"lineNumber":73,"author":{"gitId":"ChongWeiJie29"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":74,"author":{"gitId":"ChongWeiJie29"},"content":"    public void addPrescription(Prescription p) {","lastModifiedDate":"2023-10-12"},{"lineNumber":75,"author":{"gitId":"ChongWeiJie29"},"content":"        prescriptions.add(p);","lastModifiedDate":"2023-10-12"},{"lineNumber":76,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":77,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":78,"author":{"gitId":"ChongWeiJie29"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":79,"author":{"gitId":"ChongWeiJie29"},"content":"     * Replaces the given prescription {@code target} in the list with {@code editedPrescription}.","lastModifiedDate":"2023-10-12"},{"lineNumber":80,"author":{"gitId":"ChongWeiJie29"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2023-10-12"},{"lineNumber":81,"author":{"gitId":"ChongWeiJie29"},"content":"     * The prescription identity of {@code editedPrescription} must not be the same as another","lastModifiedDate":"2023-10-12"},{"lineNumber":82,"author":{"gitId":"ChongWeiJie29"},"content":"     * existing prescription in the address book.","lastModifiedDate":"2023-10-12"},{"lineNumber":83,"author":{"gitId":"ChongWeiJie29"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":84,"author":{"gitId":"ChongWeiJie29"},"content":"    public void setPrescription(Prescription target, Prescription editedPrescription) {","lastModifiedDate":"2023-10-12"},{"lineNumber":85,"author":{"gitId":"ChongWeiJie29"},"content":"        requireNonNull(editedPrescription);","lastModifiedDate":"2023-10-12"},{"lineNumber":86,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":87,"author":{"gitId":"ChongWeiJie29"},"content":"        prescriptions.setPrescription(target, editedPrescription);","lastModifiedDate":"2023-10-12"},{"lineNumber":88,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":89,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":90,"author":{"gitId":"ChongWeiJie29"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":91,"author":{"gitId":"ChongWeiJie29"},"content":"     * Removes {@code key} from this {@code PrescriptionList}.","lastModifiedDate":"2023-10-12"},{"lineNumber":92,"author":{"gitId":"ChongWeiJie29"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2023-10-12"},{"lineNumber":93,"author":{"gitId":"ChongWeiJie29"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":94,"author":{"gitId":"ChongWeiJie29"},"content":"    public void removePrescription(Prescription key) {","lastModifiedDate":"2023-10-12"},{"lineNumber":95,"author":{"gitId":"ChongWeiJie29"},"content":"        prescriptions.remove(key);","lastModifiedDate":"2023-10-12"},{"lineNumber":96,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":97,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":98,"author":{"gitId":"ChongWeiJie29"},"content":"    //// util methods","lastModifiedDate":"2023-10-12"},{"lineNumber":99,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":100,"author":{"gitId":"ChongWeiJie29"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":101,"author":{"gitId":"ChongWeiJie29"},"content":"    public String toString() {","lastModifiedDate":"2023-10-12"},{"lineNumber":102,"author":{"gitId":"ChongWeiJie29"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-10-12"},{"lineNumber":103,"author":{"gitId":"ChongWeiJie29"},"content":"                .add(\"prescriptions\", prescriptions)","lastModifiedDate":"2023-10-12"},{"lineNumber":104,"author":{"gitId":"ChongWeiJie29"},"content":"                .toString();","lastModifiedDate":"2023-10-12"},{"lineNumber":105,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":106,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":107,"author":{"gitId":"ChongWeiJie29"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":108,"author":{"gitId":"ChongWeiJie29"},"content":"    public ObservableList\u003cPrescription\u003e getPrescriptionList() {","lastModifiedDate":"2023-10-12"},{"lineNumber":109,"author":{"gitId":"ChongWeiJie29"},"content":"        return prescriptions.asUnmodifiableObservableList();","lastModifiedDate":"2023-10-12"},{"lineNumber":110,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":111,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":112,"author":{"gitId":"ChongWeiJie29"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":113,"author":{"gitId":"ChongWeiJie29"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-12"},{"lineNumber":114,"author":{"gitId":"ChongWeiJie29"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-12"},{"lineNumber":115,"author":{"gitId":"ChongWeiJie29"},"content":"            return true;","lastModifiedDate":"2023-10-12"},{"lineNumber":116,"author":{"gitId":"ChongWeiJie29"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":117,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":118,"author":{"gitId":"ChongWeiJie29"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-12"},{"lineNumber":119,"author":{"gitId":"ChongWeiJie29"},"content":"        if (!(other instanceof PrescriptionList)) {","lastModifiedDate":"2023-10-12"},{"lineNumber":120,"author":{"gitId":"ChongWeiJie29"},"content":"            return false;","lastModifiedDate":"2023-10-12"},{"lineNumber":121,"author":{"gitId":"ChongWeiJie29"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":122,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":123,"author":{"gitId":"ChongWeiJie29"},"content":"        PrescriptionList otherPrescriptionList \u003d (PrescriptionList) other;","lastModifiedDate":"2023-10-12"},{"lineNumber":124,"author":{"gitId":"ChongWeiJie29"},"content":"        return prescriptions.equals(otherPrescriptionList.prescriptions);","lastModifiedDate":"2023-10-12"},{"lineNumber":125,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":126,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":127,"author":{"gitId":"ChongWeiJie29"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":128,"author":{"gitId":"ChongWeiJie29"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-12"},{"lineNumber":129,"author":{"gitId":"ChongWeiJie29"},"content":"        return prescriptions.hashCode();","lastModifiedDate":"2023-10-12"},{"lineNumber":130,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":131,"author":{"gitId":"ChongWeiJie29"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"ChongWeiJie29":131}},{"path":"src/main/java/seedu/address/model/ReadOnlyPrescriptionList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ChongWeiJie29"},"content":"package seedu.address.model;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"ChongWeiJie29"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"ChongWeiJie29"},"content":"import seedu.address.model.prescription.Prescription;","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"ChongWeiJie29"},"content":"/**","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"ChongWeiJie29"},"content":" * Unmodifiable view of an address book","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"ChongWeiJie29"},"content":" */","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"ChongWeiJie29"},"content":"public interface ReadOnlyPrescriptionList {","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"ChongWeiJie29"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"ChongWeiJie29"},"content":"     * Returns an unmodifiable view of the prescriptions list.","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"ChongWeiJie29"},"content":"     * This list will not contain any duplicate prescriptions.","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"ChongWeiJie29"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"ChongWeiJie29"},"content":"    ObservableList\u003cPrescription\u003e getPrescriptionList();","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"ChongWeiJie29"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"ChongWeiJie29":17}},{"path":"src/main/java/seedu/address/model/ReadOnlyUserPrefsPrescription.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ChongWeiJie29"},"content":"package seedu.address.model;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"ChongWeiJie29"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"ChongWeiJie29"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"ChongWeiJie29"},"content":"/**","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"ChongWeiJie29"},"content":" * Unmodifiable view of user prefs.","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"ChongWeiJie29"},"content":" */","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"ChongWeiJie29"},"content":"public interface ReadOnlyUserPrefsPrescription {","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"ChongWeiJie29"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"ChongWeiJie29"},"content":"    Path getPrescriptionListFilePath();","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"ChongWeiJie29"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"ChongWeiJie29":16}},{"path":"src/main/java/seedu/address/model/UserPrefsPrescription.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ChongWeiJie29"},"content":"package seedu.address.model;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"ChongWeiJie29"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"ChongWeiJie29"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"ChongWeiJie29"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"ChongWeiJie29"},"content":"import java.util.Objects;","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"ChongWeiJie29"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"ChongWeiJie29"},"content":"/**","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"ChongWeiJie29"},"content":" * Represents User\u0027s preferences.","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"ChongWeiJie29"},"content":" */","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"ChongWeiJie29"},"content":"public class UserPrefsPrescription implements ReadOnlyUserPrefsPrescription {","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"ChongWeiJie29"},"content":"    private GuiSettings guiSettings \u003d new GuiSettings();","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"ChongWeiJie29"},"content":"    private Path prescriptionListFilePath \u003d Paths.get(\"data\" , \"prescriptionList.json\");","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"ChongWeiJie29"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":20,"author":{"gitId":"ChongWeiJie29"},"content":"     * Creates a {@code UserPrefsPrescriptionPrescription} with default values.","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"ChongWeiJie29"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":22,"author":{"gitId":"ChongWeiJie29"},"content":"    public UserPrefsPrescription() {}","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":24,"author":{"gitId":"ChongWeiJie29"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":25,"author":{"gitId":"ChongWeiJie29"},"content":"     * Creates a {@code UserPrefsPrescription} with the prefs in {@code userPrefs}.","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"ChongWeiJie29"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":27,"author":{"gitId":"ChongWeiJie29"},"content":"    public UserPrefsPrescription(ReadOnlyUserPrefsPrescription userPrefs) {","lastModifiedDate":"2023-10-12"},{"lineNumber":28,"author":{"gitId":"ChongWeiJie29"},"content":"        this();","lastModifiedDate":"2023-10-12"},{"lineNumber":29,"author":{"gitId":"ChongWeiJie29"},"content":"        resetData(userPrefs);","lastModifiedDate":"2023-10-12"},{"lineNumber":30,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":31,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":32,"author":{"gitId":"ChongWeiJie29"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":33,"author":{"gitId":"ChongWeiJie29"},"content":"     * Resets the existing data of this {@code UserPrefsPrescription} with {@code newUserPrefsPrescription}.","lastModifiedDate":"2023-10-12"},{"lineNumber":34,"author":{"gitId":"ChongWeiJie29"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":35,"author":{"gitId":"ChongWeiJie29"},"content":"    public void resetData(ReadOnlyUserPrefsPrescription newUserPrefsPrescription) {","lastModifiedDate":"2023-10-12"},{"lineNumber":36,"author":{"gitId":"ChongWeiJie29"},"content":"        requireNonNull(newUserPrefsPrescription);","lastModifiedDate":"2023-10-12"},{"lineNumber":37,"author":{"gitId":"ChongWeiJie29"},"content":"        setGuiSettings(newUserPrefsPrescription.getGuiSettings());","lastModifiedDate":"2023-10-12"},{"lineNumber":38,"author":{"gitId":"ChongWeiJie29"},"content":"        setPrescriptionListFilePath(newUserPrefsPrescription.getPrescriptionListFilePath());","lastModifiedDate":"2023-10-12"},{"lineNumber":39,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":40,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":41,"author":{"gitId":"ChongWeiJie29"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2023-10-12"},{"lineNumber":42,"author":{"gitId":"ChongWeiJie29"},"content":"        return guiSettings;","lastModifiedDate":"2023-10-12"},{"lineNumber":43,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":44,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":45,"author":{"gitId":"ChongWeiJie29"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2023-10-12"},{"lineNumber":46,"author":{"gitId":"ChongWeiJie29"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2023-10-12"},{"lineNumber":47,"author":{"gitId":"ChongWeiJie29"},"content":"        this.guiSettings \u003d guiSettings;","lastModifiedDate":"2023-10-12"},{"lineNumber":48,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":49,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":50,"author":{"gitId":"ChongWeiJie29"},"content":"    public Path getPrescriptionListFilePath() {","lastModifiedDate":"2023-10-12"},{"lineNumber":51,"author":{"gitId":"ChongWeiJie29"},"content":"        return prescriptionListFilePath;","lastModifiedDate":"2023-10-12"},{"lineNumber":52,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":53,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":54,"author":{"gitId":"ChongWeiJie29"},"content":"    public void setPrescriptionListFilePath(Path prescriptionListFilePath) {","lastModifiedDate":"2023-10-12"},{"lineNumber":55,"author":{"gitId":"ChongWeiJie29"},"content":"        requireNonNull(prescriptionListFilePath);","lastModifiedDate":"2023-10-12"},{"lineNumber":56,"author":{"gitId":"ChongWeiJie29"},"content":"        this.prescriptionListFilePath \u003d prescriptionListFilePath;","lastModifiedDate":"2023-10-12"},{"lineNumber":57,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":58,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":59,"author":{"gitId":"ChongWeiJie29"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":60,"author":{"gitId":"ChongWeiJie29"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-12"},{"lineNumber":61,"author":{"gitId":"ChongWeiJie29"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-12"},{"lineNumber":62,"author":{"gitId":"ChongWeiJie29"},"content":"            return true;","lastModifiedDate":"2023-10-12"},{"lineNumber":63,"author":{"gitId":"ChongWeiJie29"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":64,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":65,"author":{"gitId":"ChongWeiJie29"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-12"},{"lineNumber":66,"author":{"gitId":"ChongWeiJie29"},"content":"        if (!(other instanceof UserPrefsPrescription)) {","lastModifiedDate":"2023-10-12"},{"lineNumber":67,"author":{"gitId":"ChongWeiJie29"},"content":"            return false;","lastModifiedDate":"2023-10-12"},{"lineNumber":68,"author":{"gitId":"ChongWeiJie29"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":69,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":70,"author":{"gitId":"ChongWeiJie29"},"content":"        UserPrefsPrescription otherUserPrefsPrescription \u003d (UserPrefsPrescription) other;","lastModifiedDate":"2023-10-12"},{"lineNumber":71,"author":{"gitId":"ChongWeiJie29"},"content":"        return guiSettings.equals(otherUserPrefsPrescription.guiSettings)","lastModifiedDate":"2023-10-12"},{"lineNumber":72,"author":{"gitId":"ChongWeiJie29"},"content":"                \u0026\u0026 prescriptionListFilePath.equals(otherUserPrefsPrescription.prescriptionListFilePath);","lastModifiedDate":"2023-10-12"},{"lineNumber":73,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":74,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":75,"author":{"gitId":"ChongWeiJie29"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":76,"author":{"gitId":"ChongWeiJie29"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-12"},{"lineNumber":77,"author":{"gitId":"ChongWeiJie29"},"content":"        return Objects.hash(guiSettings, prescriptionListFilePath);","lastModifiedDate":"2023-10-12"},{"lineNumber":78,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":79,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":80,"author":{"gitId":"ChongWeiJie29"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":81,"author":{"gitId":"ChongWeiJie29"},"content":"    public String toString() {","lastModifiedDate":"2023-10-12"},{"lineNumber":82,"author":{"gitId":"ChongWeiJie29"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-10-12"},{"lineNumber":83,"author":{"gitId":"ChongWeiJie29"},"content":"        sb.append(\"Gui Settings : \" + guiSettings);","lastModifiedDate":"2023-10-12"},{"lineNumber":84,"author":{"gitId":"ChongWeiJie29"},"content":"        sb.append(\"\\nLocal data file location : \" + prescriptionListFilePath);","lastModifiedDate":"2023-10-12"},{"lineNumber":85,"author":{"gitId":"ChongWeiJie29"},"content":"        return sb.toString();","lastModifiedDate":"2023-10-12"},{"lineNumber":86,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":87,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":88,"author":{"gitId":"ChongWeiJie29"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"ChongWeiJie29":88}},{"path":"src/main/java/seedu/address/model/prescription/Date.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ChongWeiJie29"},"content":"package seedu.address.model.prescription;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"ChongWeiJie29"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"ChongWeiJie29"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"ChongWeiJie29"},"content":"/**","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"ChongWeiJie29"},"content":" * Represents a Prescription\u0027s date in the prescription list.","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"ChongWeiJie29"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidDate(String)}","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"ChongWeiJie29"},"content":" */","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"ChongWeiJie29"},"content":"public class Date {","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"ChongWeiJie29"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"ChongWeiJie29"},"content":"            \"Dates should be in the dd/mm/yyyy format, and it should not be blank\";","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"ChongWeiJie29"},"content":"    /*","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"ChongWeiJie29"},"content":"     * The first character of the date must not be a whitespace,","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"ChongWeiJie29"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"ChongWeiJie29"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"ChongWeiJie29"},"content":"    public static final String VALIDATION_REGEX \u003d \"([0-9]{2})/([0-9]{2})/([0-9]{4})\";","lastModifiedDate":"2023-10-12"},{"lineNumber":20,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"ChongWeiJie29"},"content":"    public final String fullDate;","lastModifiedDate":"2023-10-12"},{"lineNumber":22,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"ChongWeiJie29"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":24,"author":{"gitId":"ChongWeiJie29"},"content":"     * Constructs a {@code Date}.","lastModifiedDate":"2023-10-12"},{"lineNumber":25,"author":{"gitId":"ChongWeiJie29"},"content":"     *","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"ChongWeiJie29"},"content":"     * @param date A valid date.","lastModifiedDate":"2023-10-12"},{"lineNumber":27,"author":{"gitId":"ChongWeiJie29"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":28,"author":{"gitId":"ChongWeiJie29"},"content":"    public Date(String date) {","lastModifiedDate":"2023-10-12"},{"lineNumber":29,"author":{"gitId":"ChongWeiJie29"},"content":"        requireNonNull(date);","lastModifiedDate":"2023-10-12"},{"lineNumber":30,"author":{"gitId":"ChongWeiJie29"},"content":"        checkArgument(isValidDate(date), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-12"},{"lineNumber":31,"author":{"gitId":"ChongWeiJie29"},"content":"        fullDate \u003d date;","lastModifiedDate":"2023-10-12"},{"lineNumber":32,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":33,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":34,"author":{"gitId":"ChongWeiJie29"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":35,"author":{"gitId":"ChongWeiJie29"},"content":"     * Returns true if a given string is a valid date.","lastModifiedDate":"2023-10-12"},{"lineNumber":36,"author":{"gitId":"ChongWeiJie29"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":37,"author":{"gitId":"ChongWeiJie29"},"content":"    public static boolean isValidDate(String test) {","lastModifiedDate":"2023-10-12"},{"lineNumber":38,"author":{"gitId":"ChongWeiJie29"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-10-12"},{"lineNumber":39,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":40,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":41,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":42,"author":{"gitId":"ChongWeiJie29"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":43,"author":{"gitId":"ChongWeiJie29"},"content":"    public String toString() {","lastModifiedDate":"2023-10-12"},{"lineNumber":44,"author":{"gitId":"ChongWeiJie29"},"content":"        return fullDate;","lastModifiedDate":"2023-10-12"},{"lineNumber":45,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":46,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":47,"author":{"gitId":"ChongWeiJie29"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":48,"author":{"gitId":"ChongWeiJie29"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-12"},{"lineNumber":49,"author":{"gitId":"ChongWeiJie29"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-12"},{"lineNumber":50,"author":{"gitId":"ChongWeiJie29"},"content":"            return true;","lastModifiedDate":"2023-10-12"},{"lineNumber":51,"author":{"gitId":"ChongWeiJie29"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":52,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":53,"author":{"gitId":"ChongWeiJie29"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-12"},{"lineNumber":54,"author":{"gitId":"ChongWeiJie29"},"content":"        if (!(other instanceof Date)) {","lastModifiedDate":"2023-10-12"},{"lineNumber":55,"author":{"gitId":"ChongWeiJie29"},"content":"            return false;","lastModifiedDate":"2023-10-12"},{"lineNumber":56,"author":{"gitId":"ChongWeiJie29"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":57,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":58,"author":{"gitId":"ChongWeiJie29"},"content":"        Date otherDate \u003d (Date) other;","lastModifiedDate":"2023-10-12"},{"lineNumber":59,"author":{"gitId":"ChongWeiJie29"},"content":"        return fullDate.equals(otherDate.fullDate);","lastModifiedDate":"2023-10-12"},{"lineNumber":60,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":61,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":62,"author":{"gitId":"ChongWeiJie29"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":63,"author":{"gitId":"ChongWeiJie29"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-12"},{"lineNumber":64,"author":{"gitId":"ChongWeiJie29"},"content":"        return fullDate.hashCode();","lastModifiedDate":"2023-10-12"},{"lineNumber":65,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":66,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":67,"author":{"gitId":"ChongWeiJie29"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"ChongWeiJie29":67}},{"path":"src/main/java/seedu/address/model/prescription/Dosage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ChongWeiJie29"},"content":"package seedu.address.model.prescription;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"ChongWeiJie29"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"ChongWeiJie29"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"ChongWeiJie29"},"content":"/**","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"ChongWeiJie29"},"content":" * Represents a Person\u0027s dosage in the address book.","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"ChongWeiJie29"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidDosage(String)}","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"ChongWeiJie29"},"content":" */","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"ChongWeiJie29"},"content":"public class Dosage {","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"ChongWeiJie29"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"ChongWeiJie29"},"content":"            \"Dosages should only contain numeric characters, and it should not be blank\";","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"ChongWeiJie29"},"content":"    /*","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"ChongWeiJie29"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"ChongWeiJie29"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"ChongWeiJie29"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"ChongWeiJie29"},"content":"    public static final String VALIDATION_REGEX \u003d \"[0-9]+\";","lastModifiedDate":"2023-10-12"},{"lineNumber":20,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"ChongWeiJie29"},"content":"    public final String fullDosage;","lastModifiedDate":"2023-10-12"},{"lineNumber":22,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"ChongWeiJie29"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":24,"author":{"gitId":"ChongWeiJie29"},"content":"     * Constructs a {@code Dosage}.","lastModifiedDate":"2023-10-12"},{"lineNumber":25,"author":{"gitId":"ChongWeiJie29"},"content":"     *","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"ChongWeiJie29"},"content":"     * @param dosage A valid dosage.","lastModifiedDate":"2023-10-12"},{"lineNumber":27,"author":{"gitId":"ChongWeiJie29"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":28,"author":{"gitId":"ChongWeiJie29"},"content":"    public Dosage(String dosage) {","lastModifiedDate":"2023-10-12"},{"lineNumber":29,"author":{"gitId":"ChongWeiJie29"},"content":"        requireNonNull(dosage);","lastModifiedDate":"2023-10-12"},{"lineNumber":30,"author":{"gitId":"ChongWeiJie29"},"content":"        checkArgument(isValidDosage(dosage), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-12"},{"lineNumber":31,"author":{"gitId":"ChongWeiJie29"},"content":"        fullDosage \u003d dosage;","lastModifiedDate":"2023-10-12"},{"lineNumber":32,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":33,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":34,"author":{"gitId":"ChongWeiJie29"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":35,"author":{"gitId":"ChongWeiJie29"},"content":"     * Returns true if a given string is a valid dosage.","lastModifiedDate":"2023-10-12"},{"lineNumber":36,"author":{"gitId":"ChongWeiJie29"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":37,"author":{"gitId":"ChongWeiJie29"},"content":"    public static boolean isValidDosage(String test) {","lastModifiedDate":"2023-10-12"},{"lineNumber":38,"author":{"gitId":"ChongWeiJie29"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-10-12"},{"lineNumber":39,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":40,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":41,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":42,"author":{"gitId":"ChongWeiJie29"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":43,"author":{"gitId":"ChongWeiJie29"},"content":"    public String toString() {","lastModifiedDate":"2023-10-12"},{"lineNumber":44,"author":{"gitId":"ChongWeiJie29"},"content":"        return fullDosage;","lastModifiedDate":"2023-10-12"},{"lineNumber":45,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":46,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":47,"author":{"gitId":"ChongWeiJie29"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":48,"author":{"gitId":"ChongWeiJie29"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-12"},{"lineNumber":49,"author":{"gitId":"ChongWeiJie29"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-12"},{"lineNumber":50,"author":{"gitId":"ChongWeiJie29"},"content":"            return true;","lastModifiedDate":"2023-10-12"},{"lineNumber":51,"author":{"gitId":"ChongWeiJie29"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":52,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":53,"author":{"gitId":"ChongWeiJie29"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-12"},{"lineNumber":54,"author":{"gitId":"ChongWeiJie29"},"content":"        if (!(other instanceof Dosage)) {","lastModifiedDate":"2023-10-12"},{"lineNumber":55,"author":{"gitId":"ChongWeiJie29"},"content":"            return false;","lastModifiedDate":"2023-10-12"},{"lineNumber":56,"author":{"gitId":"ChongWeiJie29"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":57,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":58,"author":{"gitId":"ChongWeiJie29"},"content":"        Dosage otherDosage \u003d (Dosage) other;","lastModifiedDate":"2023-10-12"},{"lineNumber":59,"author":{"gitId":"ChongWeiJie29"},"content":"        return fullDosage.equals(otherDosage.fullDosage);","lastModifiedDate":"2023-10-12"},{"lineNumber":60,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":61,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":62,"author":{"gitId":"ChongWeiJie29"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":63,"author":{"gitId":"ChongWeiJie29"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-12"},{"lineNumber":64,"author":{"gitId":"ChongWeiJie29"},"content":"        return fullDosage.hashCode();","lastModifiedDate":"2023-10-12"},{"lineNumber":65,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":66,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":67,"author":{"gitId":"ChongWeiJie29"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"ChongWeiJie29":67}},{"path":"src/main/java/seedu/address/model/prescription/Frequency.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ChongWeiJie29"},"content":"package seedu.address.model.prescription;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"ChongWeiJie29"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"ChongWeiJie29"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"ChongWeiJie29"},"content":"/**","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"ChongWeiJie29"},"content":" * Represents a Person\u0027s frequency in the address book.","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"ChongWeiJie29"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidFrequency(String)}","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"ChongWeiJie29"},"content":" */","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"ChongWeiJie29"},"content":"public class Frequency {","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"ChongWeiJie29"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"ChongWeiJie29"},"content":"            \"Frequencies should only be one of the following (Daily / Weekly / Monthly), and it should not be blank\";","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"ChongWeiJie29"},"content":"    /*","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"ChongWeiJie29"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"ChongWeiJie29"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"ChongWeiJie29"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"ChongWeiJie29"},"content":"    public static final String VALIDATION_REGEX \u003d \"[(Daily)(Weekly)(Monthly)]*\";","lastModifiedDate":"2023-10-12"},{"lineNumber":20,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"ChongWeiJie29"},"content":"    public final String fullFrequency;","lastModifiedDate":"2023-10-12"},{"lineNumber":22,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"ChongWeiJie29"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":24,"author":{"gitId":"ChongWeiJie29"},"content":"     * Constructs a {@code Frequency}.","lastModifiedDate":"2023-10-12"},{"lineNumber":25,"author":{"gitId":"ChongWeiJie29"},"content":"     *","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"ChongWeiJie29"},"content":"     * @param frequency A valid frequency.","lastModifiedDate":"2023-10-12"},{"lineNumber":27,"author":{"gitId":"ChongWeiJie29"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":28,"author":{"gitId":"ChongWeiJie29"},"content":"    public Frequency(String frequency) {","lastModifiedDate":"2023-10-12"},{"lineNumber":29,"author":{"gitId":"ChongWeiJie29"},"content":"        requireNonNull(frequency);","lastModifiedDate":"2023-10-12"},{"lineNumber":30,"author":{"gitId":"ChongWeiJie29"},"content":"        checkArgument(isValidFrequency(frequency), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-12"},{"lineNumber":31,"author":{"gitId":"ChongWeiJie29"},"content":"        fullFrequency \u003d frequency;","lastModifiedDate":"2023-10-12"},{"lineNumber":32,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":33,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":34,"author":{"gitId":"ChongWeiJie29"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":35,"author":{"gitId":"ChongWeiJie29"},"content":"     * Returns true if a given string is a valid frequency.","lastModifiedDate":"2023-10-12"},{"lineNumber":36,"author":{"gitId":"ChongWeiJie29"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":37,"author":{"gitId":"ChongWeiJie29"},"content":"    public static boolean isValidFrequency(String test) {","lastModifiedDate":"2023-10-12"},{"lineNumber":38,"author":{"gitId":"ChongWeiJie29"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-10-12"},{"lineNumber":39,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":40,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":41,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":42,"author":{"gitId":"ChongWeiJie29"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":43,"author":{"gitId":"ChongWeiJie29"},"content":"    public String toString() {","lastModifiedDate":"2023-10-12"},{"lineNumber":44,"author":{"gitId":"ChongWeiJie29"},"content":"        return fullFrequency;","lastModifiedDate":"2023-10-12"},{"lineNumber":45,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":46,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":47,"author":{"gitId":"ChongWeiJie29"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":48,"author":{"gitId":"ChongWeiJie29"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-12"},{"lineNumber":49,"author":{"gitId":"ChongWeiJie29"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-12"},{"lineNumber":50,"author":{"gitId":"ChongWeiJie29"},"content":"            return true;","lastModifiedDate":"2023-10-12"},{"lineNumber":51,"author":{"gitId":"ChongWeiJie29"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":52,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":53,"author":{"gitId":"ChongWeiJie29"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-12"},{"lineNumber":54,"author":{"gitId":"ChongWeiJie29"},"content":"        if (!(other instanceof Frequency)) {","lastModifiedDate":"2023-10-12"},{"lineNumber":55,"author":{"gitId":"ChongWeiJie29"},"content":"            return false;","lastModifiedDate":"2023-10-12"},{"lineNumber":56,"author":{"gitId":"ChongWeiJie29"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":57,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":58,"author":{"gitId":"ChongWeiJie29"},"content":"        Frequency otherFrequency \u003d (Frequency) other;","lastModifiedDate":"2023-10-12"},{"lineNumber":59,"author":{"gitId":"ChongWeiJie29"},"content":"        return fullFrequency.equals(otherFrequency.fullFrequency);","lastModifiedDate":"2023-10-12"},{"lineNumber":60,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":61,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":62,"author":{"gitId":"ChongWeiJie29"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":63,"author":{"gitId":"ChongWeiJie29"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-12"},{"lineNumber":64,"author":{"gitId":"ChongWeiJie29"},"content":"        return fullFrequency.hashCode();","lastModifiedDate":"2023-10-12"},{"lineNumber":65,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":66,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":67,"author":{"gitId":"ChongWeiJie29"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"ChongWeiJie29":67}},{"path":"src/main/java/seedu/address/model/prescription/Name.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ChongWeiJie29"},"content":"package seedu.address.model.prescription;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"ChongWeiJie29"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"ChongWeiJie29"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"ChongWeiJie29"},"content":"/**","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"ChongWeiJie29"},"content":" * Represents a Person\u0027s name in the address book.","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"ChongWeiJie29"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidName(String)}","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"ChongWeiJie29"},"content":" */","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"ChongWeiJie29"},"content":"public class Name {","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"ChongWeiJie29"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"ChongWeiJie29"},"content":"            \"Names should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"ChongWeiJie29"},"content":"    /*","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"ChongWeiJie29"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"ChongWeiJie29"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"ChongWeiJie29"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"ChongWeiJie29"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2023-10-12"},{"lineNumber":20,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"ChongWeiJie29"},"content":"    public final String fullName;","lastModifiedDate":"2023-10-12"},{"lineNumber":22,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"ChongWeiJie29"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":24,"author":{"gitId":"ChongWeiJie29"},"content":"     * Constructs a {@code Name}.","lastModifiedDate":"2023-10-12"},{"lineNumber":25,"author":{"gitId":"ChongWeiJie29"},"content":"     *","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"ChongWeiJie29"},"content":"     * @param name A valid name.","lastModifiedDate":"2023-10-12"},{"lineNumber":27,"author":{"gitId":"ChongWeiJie29"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":28,"author":{"gitId":"ChongWeiJie29"},"content":"    public Name(String name) {","lastModifiedDate":"2023-10-12"},{"lineNumber":29,"author":{"gitId":"ChongWeiJie29"},"content":"        requireNonNull(name);","lastModifiedDate":"2023-10-12"},{"lineNumber":30,"author":{"gitId":"ChongWeiJie29"},"content":"        checkArgument(isValidName(name), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-12"},{"lineNumber":31,"author":{"gitId":"ChongWeiJie29"},"content":"        fullName \u003d name;","lastModifiedDate":"2023-10-12"},{"lineNumber":32,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":33,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":34,"author":{"gitId":"ChongWeiJie29"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":35,"author":{"gitId":"ChongWeiJie29"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2023-10-12"},{"lineNumber":36,"author":{"gitId":"ChongWeiJie29"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":37,"author":{"gitId":"ChongWeiJie29"},"content":"    public static boolean isValidName(String test) {","lastModifiedDate":"2023-10-12"},{"lineNumber":38,"author":{"gitId":"ChongWeiJie29"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-10-12"},{"lineNumber":39,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":40,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":41,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":42,"author":{"gitId":"ChongWeiJie29"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":43,"author":{"gitId":"ChongWeiJie29"},"content":"    public String toString() {","lastModifiedDate":"2023-10-12"},{"lineNumber":44,"author":{"gitId":"ChongWeiJie29"},"content":"        return fullName;","lastModifiedDate":"2023-10-12"},{"lineNumber":45,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":46,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":47,"author":{"gitId":"ChongWeiJie29"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":48,"author":{"gitId":"ChongWeiJie29"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-12"},{"lineNumber":49,"author":{"gitId":"ChongWeiJie29"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-12"},{"lineNumber":50,"author":{"gitId":"ChongWeiJie29"},"content":"            return true;","lastModifiedDate":"2023-10-12"},{"lineNumber":51,"author":{"gitId":"ChongWeiJie29"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":52,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":53,"author":{"gitId":"ChongWeiJie29"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-12"},{"lineNumber":54,"author":{"gitId":"ChongWeiJie29"},"content":"        if (!(other instanceof Name)) {","lastModifiedDate":"2023-10-12"},{"lineNumber":55,"author":{"gitId":"ChongWeiJie29"},"content":"            return false;","lastModifiedDate":"2023-10-12"},{"lineNumber":56,"author":{"gitId":"ChongWeiJie29"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":57,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":58,"author":{"gitId":"ChongWeiJie29"},"content":"        Name otherName \u003d (Name) other;","lastModifiedDate":"2023-10-12"},{"lineNumber":59,"author":{"gitId":"ChongWeiJie29"},"content":"        return fullName.equals(otherName.fullName);","lastModifiedDate":"2023-10-12"},{"lineNumber":60,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":61,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":62,"author":{"gitId":"ChongWeiJie29"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":63,"author":{"gitId":"ChongWeiJie29"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-12"},{"lineNumber":64,"author":{"gitId":"ChongWeiJie29"},"content":"        return fullName.hashCode();","lastModifiedDate":"2023-10-12"},{"lineNumber":65,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":66,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":67,"author":{"gitId":"ChongWeiJie29"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"ChongWeiJie29":67}},{"path":"src/main/java/seedu/address/model/prescription/NameContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ChongWeiJie29"},"content":"package seedu.address.model.prescription;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"ChongWeiJie29"},"content":"import java.util.List;","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"ChongWeiJie29"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"ChongWeiJie29"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"ChongWeiJie29"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"ChongWeiJie29"},"content":"/**","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"ChongWeiJie29"},"content":" * Tests that a {@code Prescription}\u0027s {@code Name} matches any of the keywords given.","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"ChongWeiJie29"},"content":" */","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"ChongWeiJie29"},"content":"public class NameContainsKeywordsPredicate implements Predicate\u003cPrescription\u003e {","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"ChongWeiJie29"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"ChongWeiJie29"},"content":"    public NameContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"ChongWeiJie29"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"ChongWeiJie29"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":20,"author":{"gitId":"ChongWeiJie29"},"content":"    public boolean test(Prescription prescription) {","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"ChongWeiJie29"},"content":"        return keywords.stream()","lastModifiedDate":"2023-10-12"},{"lineNumber":22,"author":{"gitId":"ChongWeiJie29"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(prescription.getName().fullName, keyword));","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":24,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":25,"author":{"gitId":"ChongWeiJie29"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"ChongWeiJie29"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-12"},{"lineNumber":27,"author":{"gitId":"ChongWeiJie29"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-12"},{"lineNumber":28,"author":{"gitId":"ChongWeiJie29"},"content":"            return true;","lastModifiedDate":"2023-10-12"},{"lineNumber":29,"author":{"gitId":"ChongWeiJie29"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":30,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":31,"author":{"gitId":"ChongWeiJie29"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-12"},{"lineNumber":32,"author":{"gitId":"ChongWeiJie29"},"content":"        if (!(other instanceof NameContainsKeywordsPredicate)) {","lastModifiedDate":"2023-10-12"},{"lineNumber":33,"author":{"gitId":"ChongWeiJie29"},"content":"            return false;","lastModifiedDate":"2023-10-12"},{"lineNumber":34,"author":{"gitId":"ChongWeiJie29"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":35,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":36,"author":{"gitId":"ChongWeiJie29"},"content":"        NameContainsKeywordsPredicate otherNameContainsKeywordsPredicate \u003d (NameContainsKeywordsPredicate) other;","lastModifiedDate":"2023-10-12"},{"lineNumber":37,"author":{"gitId":"ChongWeiJie29"},"content":"        return keywords.equals(otherNameContainsKeywordsPredicate.keywords);","lastModifiedDate":"2023-10-12"},{"lineNumber":38,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":39,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":40,"author":{"gitId":"ChongWeiJie29"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":41,"author":{"gitId":"ChongWeiJie29"},"content":"    public String toString() {","lastModifiedDate":"2023-10-12"},{"lineNumber":42,"author":{"gitId":"ChongWeiJie29"},"content":"        return new ToStringBuilder(this).add(\"keywords\", keywords).toString();","lastModifiedDate":"2023-10-12"},{"lineNumber":43,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":44,"author":{"gitId":"ChongWeiJie29"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"ChongWeiJie29":44}},{"path":"src/main/java/seedu/address/model/prescription/Note.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ChongWeiJie29"},"content":"package seedu.address.model.prescription;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"ChongWeiJie29"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"ChongWeiJie29"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"ChongWeiJie29"},"content":"/**","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"ChongWeiJie29"},"content":" * Represents a Person\u0027s note in the address book.","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"ChongWeiJie29"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidNote(String)}","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"ChongWeiJie29"},"content":" */","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"ChongWeiJie29"},"content":"public class Note {","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"ChongWeiJie29"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"ChongWeiJie29"},"content":"            \"Notes should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"ChongWeiJie29"},"content":"    /*","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"ChongWeiJie29"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"ChongWeiJie29"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"ChongWeiJie29"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"ChongWeiJie29"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2023-10-12"},{"lineNumber":20,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"ChongWeiJie29"},"content":"    public final String fullNote;","lastModifiedDate":"2023-10-12"},{"lineNumber":22,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"ChongWeiJie29"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":24,"author":{"gitId":"ChongWeiJie29"},"content":"     * Constructs a {@code Note}.","lastModifiedDate":"2023-10-12"},{"lineNumber":25,"author":{"gitId":"ChongWeiJie29"},"content":"     *","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"ChongWeiJie29"},"content":"     * @param note A valid note.","lastModifiedDate":"2023-10-12"},{"lineNumber":27,"author":{"gitId":"ChongWeiJie29"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":28,"author":{"gitId":"ChongWeiJie29"},"content":"    public Note(String note) {","lastModifiedDate":"2023-10-12"},{"lineNumber":29,"author":{"gitId":"ChongWeiJie29"},"content":"        requireNonNull(note);","lastModifiedDate":"2023-10-12"},{"lineNumber":30,"author":{"gitId":"ChongWeiJie29"},"content":"        checkArgument(isValidNote(note), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-12"},{"lineNumber":31,"author":{"gitId":"ChongWeiJie29"},"content":"        fullNote \u003d note;","lastModifiedDate":"2023-10-12"},{"lineNumber":32,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":33,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":34,"author":{"gitId":"ChongWeiJie29"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":35,"author":{"gitId":"ChongWeiJie29"},"content":"     * Returns true if a given string is a valid note.","lastModifiedDate":"2023-10-12"},{"lineNumber":36,"author":{"gitId":"ChongWeiJie29"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":37,"author":{"gitId":"ChongWeiJie29"},"content":"    public static boolean isValidNote(String test) {","lastModifiedDate":"2023-10-12"},{"lineNumber":38,"author":{"gitId":"ChongWeiJie29"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-10-12"},{"lineNumber":39,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":40,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":41,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":42,"author":{"gitId":"ChongWeiJie29"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":43,"author":{"gitId":"ChongWeiJie29"},"content":"    public String toString() {","lastModifiedDate":"2023-10-12"},{"lineNumber":44,"author":{"gitId":"ChongWeiJie29"},"content":"        return fullNote;","lastModifiedDate":"2023-10-12"},{"lineNumber":45,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":46,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":47,"author":{"gitId":"ChongWeiJie29"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":48,"author":{"gitId":"ChongWeiJie29"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-12"},{"lineNumber":49,"author":{"gitId":"ChongWeiJie29"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-12"},{"lineNumber":50,"author":{"gitId":"ChongWeiJie29"},"content":"            return true;","lastModifiedDate":"2023-10-12"},{"lineNumber":51,"author":{"gitId":"ChongWeiJie29"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":52,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":53,"author":{"gitId":"ChongWeiJie29"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-12"},{"lineNumber":54,"author":{"gitId":"ChongWeiJie29"},"content":"        if (!(other instanceof Note)) {","lastModifiedDate":"2023-10-12"},{"lineNumber":55,"author":{"gitId":"ChongWeiJie29"},"content":"            return false;","lastModifiedDate":"2023-10-12"},{"lineNumber":56,"author":{"gitId":"ChongWeiJie29"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":57,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":58,"author":{"gitId":"ChongWeiJie29"},"content":"        Note otherNote \u003d (Note) other;","lastModifiedDate":"2023-10-12"},{"lineNumber":59,"author":{"gitId":"ChongWeiJie29"},"content":"        return fullNote.equals(otherNote.fullNote);","lastModifiedDate":"2023-10-12"},{"lineNumber":60,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":61,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":62,"author":{"gitId":"ChongWeiJie29"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":63,"author":{"gitId":"ChongWeiJie29"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-12"},{"lineNumber":64,"author":{"gitId":"ChongWeiJie29"},"content":"        return fullNote.hashCode();","lastModifiedDate":"2023-10-12"},{"lineNumber":65,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":66,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":67,"author":{"gitId":"ChongWeiJie29"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"ChongWeiJie29":67}},{"path":"src/main/java/seedu/address/model/prescription/Prescription.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ChongWeiJie29"},"content":"package seedu.address.model.prescription;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"ChongWeiJie29"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"ChongWeiJie29"},"content":"// import java.util.Collections;","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"ChongWeiJie29"},"content":"// import java.util.HashSet;","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"ChongWeiJie29"},"content":"import java.util.Objects;","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"ChongWeiJie29"},"content":"// import java.util.Set;","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"ChongWeiJie29"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"ChongWeiJie29"},"content":"// import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"ChongWeiJie29"},"content":"/**","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"ChongWeiJie29"},"content":" * Represents a Prescription in the address book.","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"ChongWeiJie29"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"ChongWeiJie29"},"content":" */","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"ChongWeiJie29"},"content":"public class Prescription {","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"ChongWeiJie29"},"content":"    // Identity fields","lastModifiedDate":"2023-10-12"},{"lineNumber":20,"author":{"gitId":"ChongWeiJie29"},"content":"    private final Name name;","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":22,"author":{"gitId":"ChongWeiJie29"},"content":"    // Data fields","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"ChongWeiJie29"},"content":"    private final Dosage dosage;","lastModifiedDate":"2023-10-12"},{"lineNumber":24,"author":{"gitId":"ChongWeiJie29"},"content":"    private final Frequency frequency;","lastModifiedDate":"2023-10-12"},{"lineNumber":25,"author":{"gitId":"ChongWeiJie29"},"content":"    private final Date startDate;","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"ChongWeiJie29"},"content":"    private final Date endDate;","lastModifiedDate":"2023-10-12"},{"lineNumber":27,"author":{"gitId":"ChongWeiJie29"},"content":"    private final Date expiryDate;","lastModifiedDate":"2023-10-12"},{"lineNumber":28,"author":{"gitId":"ChongWeiJie29"},"content":"    private final Stock totalStock;","lastModifiedDate":"2023-10-12"},{"lineNumber":29,"author":{"gitId":"ChongWeiJie29"},"content":"    private final Note note;","lastModifiedDate":"2023-10-12"},{"lineNumber":30,"author":{"gitId":"ChongWeiJie29"},"content":"    // private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-10-12"},{"lineNumber":31,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":32,"author":{"gitId":"ChongWeiJie29"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":33,"author":{"gitId":"ChongWeiJie29"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2023-10-12"},{"lineNumber":34,"author":{"gitId":"ChongWeiJie29"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":35,"author":{"gitId":"ChongWeiJie29"},"content":"    public Prescription(Name name, Dosage dosage, Frequency frequency, Date startDate,","lastModifiedDate":"2023-10-12"},{"lineNumber":36,"author":{"gitId":"ChongWeiJie29"},"content":"                        Date endDate, Date expiryDate, Stock totalStock, Note note) {","lastModifiedDate":"2023-10-12"},{"lineNumber":37,"author":{"gitId":"ChongWeiJie29"},"content":"        requireAllNonNull(name);","lastModifiedDate":"2023-10-12"},{"lineNumber":38,"author":{"gitId":"ChongWeiJie29"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-10-12"},{"lineNumber":39,"author":{"gitId":"ChongWeiJie29"},"content":"        this.dosage \u003d dosage;","lastModifiedDate":"2023-10-12"},{"lineNumber":40,"author":{"gitId":"ChongWeiJie29"},"content":"        this.frequency \u003d frequency;","lastModifiedDate":"2023-10-12"},{"lineNumber":41,"author":{"gitId":"ChongWeiJie29"},"content":"        this.startDate \u003d startDate;","lastModifiedDate":"2023-10-12"},{"lineNumber":42,"author":{"gitId":"ChongWeiJie29"},"content":"        this.endDate \u003d endDate;","lastModifiedDate":"2023-10-12"},{"lineNumber":43,"author":{"gitId":"ChongWeiJie29"},"content":"        this.expiryDate \u003d expiryDate;","lastModifiedDate":"2023-10-12"},{"lineNumber":44,"author":{"gitId":"ChongWeiJie29"},"content":"        this.totalStock \u003d totalStock;","lastModifiedDate":"2023-10-12"},{"lineNumber":45,"author":{"gitId":"ChongWeiJie29"},"content":"        this.note \u003d note;","lastModifiedDate":"2023-10-12"},{"lineNumber":46,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":47,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":48,"author":{"gitId":"ChongWeiJie29"},"content":"    public Name getName() {","lastModifiedDate":"2023-10-12"},{"lineNumber":49,"author":{"gitId":"ChongWeiJie29"},"content":"        return name;","lastModifiedDate":"2023-10-12"},{"lineNumber":50,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":51,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":52,"author":{"gitId":"ChongWeiJie29"},"content":"    public Dosage getDosage() {","lastModifiedDate":"2023-10-12"},{"lineNumber":53,"author":{"gitId":"ChongWeiJie29"},"content":"        return dosage;","lastModifiedDate":"2023-10-12"},{"lineNumber":54,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":55,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":56,"author":{"gitId":"ChongWeiJie29"},"content":"    public Frequency getFrequency() {","lastModifiedDate":"2023-10-12"},{"lineNumber":57,"author":{"gitId":"ChongWeiJie29"},"content":"        return frequency;","lastModifiedDate":"2023-10-12"},{"lineNumber":58,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":59,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":60,"author":{"gitId":"ChongWeiJie29"},"content":"    public Date getStartDate() {","lastModifiedDate":"2023-10-12"},{"lineNumber":61,"author":{"gitId":"ChongWeiJie29"},"content":"        return startDate;","lastModifiedDate":"2023-10-12"},{"lineNumber":62,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":63,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":64,"author":{"gitId":"ChongWeiJie29"},"content":"    public Date getEndDate() {","lastModifiedDate":"2023-10-12"},{"lineNumber":65,"author":{"gitId":"ChongWeiJie29"},"content":"        return endDate;","lastModifiedDate":"2023-10-12"},{"lineNumber":66,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":67,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":68,"author":{"gitId":"ChongWeiJie29"},"content":"    public Date getExpiryDate() {","lastModifiedDate":"2023-10-12"},{"lineNumber":69,"author":{"gitId":"ChongWeiJie29"},"content":"        return expiryDate;","lastModifiedDate":"2023-10-12"},{"lineNumber":70,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":71,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":72,"author":{"gitId":"ChongWeiJie29"},"content":"    public Stock getTotalStock() {","lastModifiedDate":"2023-10-12"},{"lineNumber":73,"author":{"gitId":"ChongWeiJie29"},"content":"        return totalStock;","lastModifiedDate":"2023-10-12"},{"lineNumber":74,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":75,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":76,"author":{"gitId":"ChongWeiJie29"},"content":"    public Note getNote() {","lastModifiedDate":"2023-10-12"},{"lineNumber":77,"author":{"gitId":"ChongWeiJie29"},"content":"        return note;","lastModifiedDate":"2023-10-12"},{"lineNumber":78,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":79,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":80,"author":{"gitId":"ChongWeiJie29"},"content":"    // /**","lastModifiedDate":"2023-10-12"},{"lineNumber":81,"author":{"gitId":"ChongWeiJie29"},"content":"    //  * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2023-10-12"},{"lineNumber":82,"author":{"gitId":"ChongWeiJie29"},"content":"    //  * if modification is attempted.","lastModifiedDate":"2023-10-12"},{"lineNumber":83,"author":{"gitId":"ChongWeiJie29"},"content":"    //  */","lastModifiedDate":"2023-10-12"},{"lineNumber":84,"author":{"gitId":"ChongWeiJie29"},"content":"    // public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2023-10-12"},{"lineNumber":85,"author":{"gitId":"ChongWeiJie29"},"content":"    //     return Collections.unmodifiableSet(tags);","lastModifiedDate":"2023-10-12"},{"lineNumber":86,"author":{"gitId":"ChongWeiJie29"},"content":"    // }","lastModifiedDate":"2023-10-12"},{"lineNumber":87,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":88,"author":{"gitId":"ChongWeiJie29"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":89,"author":{"gitId":"ChongWeiJie29"},"content":"     * Returns true if both prescriptions have the same name.","lastModifiedDate":"2023-10-12"},{"lineNumber":90,"author":{"gitId":"ChongWeiJie29"},"content":"     * This defines a weaker notion of equality between two prescriptions.","lastModifiedDate":"2023-10-12"},{"lineNumber":91,"author":{"gitId":"ChongWeiJie29"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":92,"author":{"gitId":"ChongWeiJie29"},"content":"    public boolean isSamePrescription(Prescription otherPrescription) {","lastModifiedDate":"2023-10-12"},{"lineNumber":93,"author":{"gitId":"ChongWeiJie29"},"content":"        if (otherPrescription \u003d\u003d this) {","lastModifiedDate":"2023-10-12"},{"lineNumber":94,"author":{"gitId":"ChongWeiJie29"},"content":"            return true;","lastModifiedDate":"2023-10-12"},{"lineNumber":95,"author":{"gitId":"ChongWeiJie29"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":96,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":97,"author":{"gitId":"ChongWeiJie29"},"content":"        return otherPrescription !\u003d null","lastModifiedDate":"2023-10-12"},{"lineNumber":98,"author":{"gitId":"ChongWeiJie29"},"content":"                \u0026\u0026 otherPrescription.getName().equals(getName())","lastModifiedDate":"2023-10-12"},{"lineNumber":99,"author":{"gitId":"ChongWeiJie29"},"content":"                \u0026\u0026 otherPrescription.getStartDate().equals(getStartDate());","lastModifiedDate":"2023-10-12"},{"lineNumber":100,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":101,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":102,"author":{"gitId":"ChongWeiJie29"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":103,"author":{"gitId":"ChongWeiJie29"},"content":"     * Returns true if both prescriptions have the same identity and data fields.","lastModifiedDate":"2023-10-12"},{"lineNumber":104,"author":{"gitId":"ChongWeiJie29"},"content":"     * This defines a stronger notion of equality between two prescriptions.","lastModifiedDate":"2023-10-12"},{"lineNumber":105,"author":{"gitId":"ChongWeiJie29"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":106,"author":{"gitId":"ChongWeiJie29"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":107,"author":{"gitId":"ChongWeiJie29"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-12"},{"lineNumber":108,"author":{"gitId":"ChongWeiJie29"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-12"},{"lineNumber":109,"author":{"gitId":"ChongWeiJie29"},"content":"            return true;","lastModifiedDate":"2023-10-12"},{"lineNumber":110,"author":{"gitId":"ChongWeiJie29"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":111,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":112,"author":{"gitId":"ChongWeiJie29"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-12"},{"lineNumber":113,"author":{"gitId":"ChongWeiJie29"},"content":"        if (!(other instanceof Prescription)) {","lastModifiedDate":"2023-10-12"},{"lineNumber":114,"author":{"gitId":"ChongWeiJie29"},"content":"            return false;","lastModifiedDate":"2023-10-12"},{"lineNumber":115,"author":{"gitId":"ChongWeiJie29"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":116,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":117,"author":{"gitId":"ChongWeiJie29"},"content":"        Prescription otherPrescription \u003d (Prescription) other;","lastModifiedDate":"2023-10-12"},{"lineNumber":118,"author":{"gitId":"ChongWeiJie29"},"content":"        return name.equals(otherPrescription.name)","lastModifiedDate":"2023-10-12"},{"lineNumber":119,"author":{"gitId":"ChongWeiJie29"},"content":"                \u0026\u0026 dosage.equals(otherPrescription.dosage)","lastModifiedDate":"2023-10-12"},{"lineNumber":120,"author":{"gitId":"ChongWeiJie29"},"content":"                \u0026\u0026 frequency.equals(otherPrescription.frequency)","lastModifiedDate":"2023-10-12"},{"lineNumber":121,"author":{"gitId":"ChongWeiJie29"},"content":"                \u0026\u0026 startDate.equals(otherPrescription.startDate)","lastModifiedDate":"2023-10-12"},{"lineNumber":122,"author":{"gitId":"ChongWeiJie29"},"content":"                \u0026\u0026 endDate.equals(otherPrescription.endDate)","lastModifiedDate":"2023-10-12"},{"lineNumber":123,"author":{"gitId":"ChongWeiJie29"},"content":"                \u0026\u0026 expiryDate.equals(otherPrescription.expiryDate)","lastModifiedDate":"2023-10-12"},{"lineNumber":124,"author":{"gitId":"ChongWeiJie29"},"content":"                \u0026\u0026 totalStock.equals(otherPrescription.totalStock)","lastModifiedDate":"2023-10-12"},{"lineNumber":125,"author":{"gitId":"ChongWeiJie29"},"content":"                \u0026\u0026 note.equals(otherPrescription.note);","lastModifiedDate":"2023-10-12"},{"lineNumber":126,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":127,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":128,"author":{"gitId":"ChongWeiJie29"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":129,"author":{"gitId":"ChongWeiJie29"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-12"},{"lineNumber":130,"author":{"gitId":"ChongWeiJie29"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2023-10-12"},{"lineNumber":131,"author":{"gitId":"ChongWeiJie29"},"content":"        return Objects.hash(name, dosage, frequency, startDate,","lastModifiedDate":"2023-10-12"},{"lineNumber":132,"author":{"gitId":"ChongWeiJie29"},"content":"                        endDate, expiryDate, totalStock, note);","lastModifiedDate":"2023-10-12"},{"lineNumber":133,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":134,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":135,"author":{"gitId":"ChongWeiJie29"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":136,"author":{"gitId":"ChongWeiJie29"},"content":"    public String toString() {","lastModifiedDate":"2023-10-12"},{"lineNumber":137,"author":{"gitId":"ChongWeiJie29"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-10-12"},{"lineNumber":138,"author":{"gitId":"ChongWeiJie29"},"content":"                .add(\"name\", name)","lastModifiedDate":"2023-10-12"},{"lineNumber":139,"author":{"gitId":"ChongWeiJie29"},"content":"                .add(\"dosage\", dosage)","lastModifiedDate":"2023-10-12"},{"lineNumber":140,"author":{"gitId":"ChongWeiJie29"},"content":"                .add(\"frequency\", frequency)","lastModifiedDate":"2023-10-12"},{"lineNumber":141,"author":{"gitId":"ChongWeiJie29"},"content":"                .add(\"startDate\", startDate)","lastModifiedDate":"2023-10-12"},{"lineNumber":142,"author":{"gitId":"ChongWeiJie29"},"content":"                .add(\"endDate\", endDate)","lastModifiedDate":"2023-10-12"},{"lineNumber":143,"author":{"gitId":"ChongWeiJie29"},"content":"                .add(\"expiryDate\", expiryDate)","lastModifiedDate":"2023-10-12"},{"lineNumber":144,"author":{"gitId":"ChongWeiJie29"},"content":"                .add(\"totalStock\", totalStock)","lastModifiedDate":"2023-10-12"},{"lineNumber":145,"author":{"gitId":"ChongWeiJie29"},"content":"                .add(\"note\", note)","lastModifiedDate":"2023-10-12"},{"lineNumber":146,"author":{"gitId":"ChongWeiJie29"},"content":"                .toString();","lastModifiedDate":"2023-10-12"},{"lineNumber":147,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":148,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":149,"author":{"gitId":"ChongWeiJie29"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"ChongWeiJie29":149}},{"path":"src/main/java/seedu/address/model/prescription/Stock.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ChongWeiJie29"},"content":"package seedu.address.model.prescription;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"ChongWeiJie29"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"ChongWeiJie29"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"ChongWeiJie29"},"content":"/**","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"ChongWeiJie29"},"content":" * Represents a Person\u0027s stock in the address book.","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"ChongWeiJie29"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidStock(String)}","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"ChongWeiJie29"},"content":" */","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"ChongWeiJie29"},"content":"public class Stock {","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"ChongWeiJie29"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"ChongWeiJie29"},"content":"            \"Stocks should only contain numeric characters, and it should not be blank\";","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"ChongWeiJie29"},"content":"    /*","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"ChongWeiJie29"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"ChongWeiJie29"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"ChongWeiJie29"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"ChongWeiJie29"},"content":"    public static final String VALIDATION_REGEX \u003d \"[0-9]+\";","lastModifiedDate":"2023-10-12"},{"lineNumber":20,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"ChongWeiJie29"},"content":"    public final String fullStock;","lastModifiedDate":"2023-10-12"},{"lineNumber":22,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"ChongWeiJie29"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":24,"author":{"gitId":"ChongWeiJie29"},"content":"     * Constructs a {@code Stock}.","lastModifiedDate":"2023-10-12"},{"lineNumber":25,"author":{"gitId":"ChongWeiJie29"},"content":"     *","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"ChongWeiJie29"},"content":"     * @param stock A valid stock.","lastModifiedDate":"2023-10-12"},{"lineNumber":27,"author":{"gitId":"ChongWeiJie29"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":28,"author":{"gitId":"ChongWeiJie29"},"content":"    public Stock(String stock) {","lastModifiedDate":"2023-10-12"},{"lineNumber":29,"author":{"gitId":"ChongWeiJie29"},"content":"        requireNonNull(stock);","lastModifiedDate":"2023-10-12"},{"lineNumber":30,"author":{"gitId":"ChongWeiJie29"},"content":"        checkArgument(isValidStock(stock), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-12"},{"lineNumber":31,"author":{"gitId":"ChongWeiJie29"},"content":"        fullStock \u003d stock;","lastModifiedDate":"2023-10-12"},{"lineNumber":32,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":33,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":34,"author":{"gitId":"ChongWeiJie29"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":35,"author":{"gitId":"ChongWeiJie29"},"content":"     * Returns true if a given string is a valid stock.","lastModifiedDate":"2023-10-12"},{"lineNumber":36,"author":{"gitId":"ChongWeiJie29"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":37,"author":{"gitId":"ChongWeiJie29"},"content":"    public static boolean isValidStock(String test) {","lastModifiedDate":"2023-10-12"},{"lineNumber":38,"author":{"gitId":"ChongWeiJie29"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-10-12"},{"lineNumber":39,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":40,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":41,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":42,"author":{"gitId":"ChongWeiJie29"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":43,"author":{"gitId":"ChongWeiJie29"},"content":"    public String toString() {","lastModifiedDate":"2023-10-12"},{"lineNumber":44,"author":{"gitId":"ChongWeiJie29"},"content":"        return fullStock;","lastModifiedDate":"2023-10-12"},{"lineNumber":45,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":46,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":47,"author":{"gitId":"ChongWeiJie29"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":48,"author":{"gitId":"ChongWeiJie29"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-12"},{"lineNumber":49,"author":{"gitId":"ChongWeiJie29"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-12"},{"lineNumber":50,"author":{"gitId":"ChongWeiJie29"},"content":"            return true;","lastModifiedDate":"2023-10-12"},{"lineNumber":51,"author":{"gitId":"ChongWeiJie29"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":52,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":53,"author":{"gitId":"ChongWeiJie29"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-12"},{"lineNumber":54,"author":{"gitId":"ChongWeiJie29"},"content":"        if (!(other instanceof Stock)) {","lastModifiedDate":"2023-10-12"},{"lineNumber":55,"author":{"gitId":"ChongWeiJie29"},"content":"            return false;","lastModifiedDate":"2023-10-12"},{"lineNumber":56,"author":{"gitId":"ChongWeiJie29"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":57,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":58,"author":{"gitId":"ChongWeiJie29"},"content":"        Stock otherStock \u003d (Stock) other;","lastModifiedDate":"2023-10-12"},{"lineNumber":59,"author":{"gitId":"ChongWeiJie29"},"content":"        return fullStock.equals(otherStock.fullStock);","lastModifiedDate":"2023-10-12"},{"lineNumber":60,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":61,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":62,"author":{"gitId":"ChongWeiJie29"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":63,"author":{"gitId":"ChongWeiJie29"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-12"},{"lineNumber":64,"author":{"gitId":"ChongWeiJie29"},"content":"        return fullStock.hashCode();","lastModifiedDate":"2023-10-12"},{"lineNumber":65,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":66,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":67,"author":{"gitId":"ChongWeiJie29"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"ChongWeiJie29":67}},{"path":"src/main/java/seedu/address/model/prescription/UniquePrescriptionList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ChongWeiJie29"},"content":"package seedu.address.model.prescription;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"ChongWeiJie29"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"ChongWeiJie29"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"ChongWeiJie29"},"content":"import java.util.Iterator;","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"ChongWeiJie29"},"content":"import java.util.List;","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"ChongWeiJie29"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"ChongWeiJie29"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"ChongWeiJie29"},"content":"import seedu.address.model.prescription.exceptions.DuplicatePrescriptionException;","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"ChongWeiJie29"},"content":"import seedu.address.model.prescription.exceptions.PrescriptionNotFoundException;","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"ChongWeiJie29"},"content":"/**","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"ChongWeiJie29"},"content":" * A list of prescriptions that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"ChongWeiJie29"},"content":" * A prescription is considered unique by comparing using","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"ChongWeiJie29"},"content":" * {@code Prescription#isSamePrescription(Prescription)}. As such, adding and updating of","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"ChongWeiJie29"},"content":" * prescriptions uses Prescription#isSamePrescription(Prescription) for equality so as to ensure","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"ChongWeiJie29"},"content":" * that the prescription being added or updated is unique in terms of identity in the","lastModifiedDate":"2023-10-12"},{"lineNumber":20,"author":{"gitId":"ChongWeiJie29"},"content":" * UniquePrescriptionList. However, the removal of a prescription uses Prescription#equals(Object)","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"ChongWeiJie29"},"content":" * so as to ensure that the prescription with exactly the same fields will be removed.","lastModifiedDate":"2023-10-12"},{"lineNumber":22,"author":{"gitId":"ChongWeiJie29"},"content":" *","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"ChongWeiJie29"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2023-10-12"},{"lineNumber":24,"author":{"gitId":"ChongWeiJie29"},"content":" *","lastModifiedDate":"2023-10-12"},{"lineNumber":25,"author":{"gitId":"ChongWeiJie29"},"content":" * @see Prescription#isSamePrescription(Prescription)","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"ChongWeiJie29"},"content":" */","lastModifiedDate":"2023-10-12"},{"lineNumber":27,"author":{"gitId":"ChongWeiJie29"},"content":"public class UniquePrescriptionList implements Iterable\u003cPrescription\u003e {","lastModifiedDate":"2023-10-12"},{"lineNumber":28,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":29,"author":{"gitId":"ChongWeiJie29"},"content":"    private final ObservableList\u003cPrescription\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2023-10-12"},{"lineNumber":30,"author":{"gitId":"ChongWeiJie29"},"content":"    private final ObservableList\u003cPrescription\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2023-10-12"},{"lineNumber":31,"author":{"gitId":"ChongWeiJie29"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2023-10-12"},{"lineNumber":32,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":33,"author":{"gitId":"ChongWeiJie29"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":34,"author":{"gitId":"ChongWeiJie29"},"content":"     * Returns true if the list contains an equivalent prescription as the given argument.","lastModifiedDate":"2023-10-12"},{"lineNumber":35,"author":{"gitId":"ChongWeiJie29"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":36,"author":{"gitId":"ChongWeiJie29"},"content":"    public boolean contains(Prescription toCheck) {","lastModifiedDate":"2023-10-12"},{"lineNumber":37,"author":{"gitId":"ChongWeiJie29"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2023-10-12"},{"lineNumber":38,"author":{"gitId":"ChongWeiJie29"},"content":"        return internalList.stream().anyMatch(toCheck::isSamePrescription);","lastModifiedDate":"2023-10-12"},{"lineNumber":39,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":40,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":41,"author":{"gitId":"ChongWeiJie29"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":42,"author":{"gitId":"ChongWeiJie29"},"content":"     * Adds a prescription to the list.","lastModifiedDate":"2023-10-12"},{"lineNumber":43,"author":{"gitId":"ChongWeiJie29"},"content":"     * The prescription must not already exist in the list.","lastModifiedDate":"2023-10-12"},{"lineNumber":44,"author":{"gitId":"ChongWeiJie29"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":45,"author":{"gitId":"ChongWeiJie29"},"content":"    public void add(Prescription toAdd) {","lastModifiedDate":"2023-10-12"},{"lineNumber":46,"author":{"gitId":"ChongWeiJie29"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2023-10-12"},{"lineNumber":47,"author":{"gitId":"ChongWeiJie29"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2023-10-12"},{"lineNumber":48,"author":{"gitId":"ChongWeiJie29"},"content":"            throw new DuplicatePrescriptionException();","lastModifiedDate":"2023-10-12"},{"lineNumber":49,"author":{"gitId":"ChongWeiJie29"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":50,"author":{"gitId":"ChongWeiJie29"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2023-10-12"},{"lineNumber":51,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":52,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":53,"author":{"gitId":"ChongWeiJie29"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":54,"author":{"gitId":"ChongWeiJie29"},"content":"     * Replaces the prescription {@code target} in the list with {@code editedPrescription}.","lastModifiedDate":"2023-10-12"},{"lineNumber":55,"author":{"gitId":"ChongWeiJie29"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2023-10-12"},{"lineNumber":56,"author":{"gitId":"ChongWeiJie29"},"content":"     * The prescription identity of {@code editedPrescription} must not be the same as","lastModifiedDate":"2023-10-12"},{"lineNumber":57,"author":{"gitId":"ChongWeiJie29"},"content":"     * another existing prescription in the list.","lastModifiedDate":"2023-10-12"},{"lineNumber":58,"author":{"gitId":"ChongWeiJie29"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":59,"author":{"gitId":"ChongWeiJie29"},"content":"    public void setPrescription(Prescription target, Prescription editedPrescription) {","lastModifiedDate":"2023-10-12"},{"lineNumber":60,"author":{"gitId":"ChongWeiJie29"},"content":"        requireAllNonNull(target, editedPrescription);","lastModifiedDate":"2023-10-12"},{"lineNumber":61,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":62,"author":{"gitId":"ChongWeiJie29"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2023-10-12"},{"lineNumber":63,"author":{"gitId":"ChongWeiJie29"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2023-10-12"},{"lineNumber":64,"author":{"gitId":"ChongWeiJie29"},"content":"            throw new PrescriptionNotFoundException();","lastModifiedDate":"2023-10-12"},{"lineNumber":65,"author":{"gitId":"ChongWeiJie29"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":66,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":67,"author":{"gitId":"ChongWeiJie29"},"content":"        if (!target.isSamePrescription(editedPrescription) \u0026\u0026 contains(editedPrescription)) {","lastModifiedDate":"2023-10-12"},{"lineNumber":68,"author":{"gitId":"ChongWeiJie29"},"content":"            throw new DuplicatePrescriptionException();","lastModifiedDate":"2023-10-12"},{"lineNumber":69,"author":{"gitId":"ChongWeiJie29"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":70,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":71,"author":{"gitId":"ChongWeiJie29"},"content":"        internalList.set(index, editedPrescription);","lastModifiedDate":"2023-10-12"},{"lineNumber":72,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":73,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":74,"author":{"gitId":"ChongWeiJie29"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":75,"author":{"gitId":"ChongWeiJie29"},"content":"     * Removes the equivalent prescription from the list.","lastModifiedDate":"2023-10-12"},{"lineNumber":76,"author":{"gitId":"ChongWeiJie29"},"content":"     * The prescription must exist in the list.","lastModifiedDate":"2023-10-12"},{"lineNumber":77,"author":{"gitId":"ChongWeiJie29"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":78,"author":{"gitId":"ChongWeiJie29"},"content":"    public void remove(Prescription toRemove) {","lastModifiedDate":"2023-10-12"},{"lineNumber":79,"author":{"gitId":"ChongWeiJie29"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2023-10-12"},{"lineNumber":80,"author":{"gitId":"ChongWeiJie29"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2023-10-12"},{"lineNumber":81,"author":{"gitId":"ChongWeiJie29"},"content":"            throw new PrescriptionNotFoundException();","lastModifiedDate":"2023-10-12"},{"lineNumber":82,"author":{"gitId":"ChongWeiJie29"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":83,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":84,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":85,"author":{"gitId":"ChongWeiJie29"},"content":"    public void setPrescriptions(UniquePrescriptionList replacement) {","lastModifiedDate":"2023-10-12"},{"lineNumber":86,"author":{"gitId":"ChongWeiJie29"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2023-10-12"},{"lineNumber":87,"author":{"gitId":"ChongWeiJie29"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2023-10-12"},{"lineNumber":88,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":89,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":90,"author":{"gitId":"ChongWeiJie29"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":91,"author":{"gitId":"ChongWeiJie29"},"content":"     * Replaces the contents of this list with {@code prescriptions}.","lastModifiedDate":"2023-10-12"},{"lineNumber":92,"author":{"gitId":"ChongWeiJie29"},"content":"     * {@code prescriptions} must not contain duplicate prescriptions.","lastModifiedDate":"2023-10-12"},{"lineNumber":93,"author":{"gitId":"ChongWeiJie29"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":94,"author":{"gitId":"ChongWeiJie29"},"content":"    public void setPrescriptions(List\u003cPrescription\u003e prescriptions) {","lastModifiedDate":"2023-10-12"},{"lineNumber":95,"author":{"gitId":"ChongWeiJie29"},"content":"        requireAllNonNull(prescriptions);","lastModifiedDate":"2023-10-12"},{"lineNumber":96,"author":{"gitId":"ChongWeiJie29"},"content":"        if (!prescriptionsAreUnique(prescriptions)) {","lastModifiedDate":"2023-10-12"},{"lineNumber":97,"author":{"gitId":"ChongWeiJie29"},"content":"            throw new DuplicatePrescriptionException();","lastModifiedDate":"2023-10-12"},{"lineNumber":98,"author":{"gitId":"ChongWeiJie29"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":99,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":100,"author":{"gitId":"ChongWeiJie29"},"content":"        internalList.setAll(prescriptions);","lastModifiedDate":"2023-10-12"},{"lineNumber":101,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":102,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":103,"author":{"gitId":"ChongWeiJie29"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":104,"author":{"gitId":"ChongWeiJie29"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2023-10-12"},{"lineNumber":105,"author":{"gitId":"ChongWeiJie29"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":106,"author":{"gitId":"ChongWeiJie29"},"content":"    public ObservableList\u003cPrescription\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2023-10-12"},{"lineNumber":107,"author":{"gitId":"ChongWeiJie29"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2023-10-12"},{"lineNumber":108,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":109,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":110,"author":{"gitId":"ChongWeiJie29"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":111,"author":{"gitId":"ChongWeiJie29"},"content":"    public Iterator\u003cPrescription\u003e iterator() {","lastModifiedDate":"2023-10-12"},{"lineNumber":112,"author":{"gitId":"ChongWeiJie29"},"content":"        return internalList.iterator();","lastModifiedDate":"2023-10-12"},{"lineNumber":113,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":114,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":115,"author":{"gitId":"ChongWeiJie29"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":116,"author":{"gitId":"ChongWeiJie29"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-12"},{"lineNumber":117,"author":{"gitId":"ChongWeiJie29"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-12"},{"lineNumber":118,"author":{"gitId":"ChongWeiJie29"},"content":"            return true;","lastModifiedDate":"2023-10-12"},{"lineNumber":119,"author":{"gitId":"ChongWeiJie29"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":120,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":121,"author":{"gitId":"ChongWeiJie29"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-12"},{"lineNumber":122,"author":{"gitId":"ChongWeiJie29"},"content":"        if (!(other instanceof UniquePrescriptionList)) {","lastModifiedDate":"2023-10-12"},{"lineNumber":123,"author":{"gitId":"ChongWeiJie29"},"content":"            return false;","lastModifiedDate":"2023-10-12"},{"lineNumber":124,"author":{"gitId":"ChongWeiJie29"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":125,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":126,"author":{"gitId":"ChongWeiJie29"},"content":"        UniquePrescriptionList otherUniquePrescriptionList \u003d (UniquePrescriptionList) other;","lastModifiedDate":"2023-10-12"},{"lineNumber":127,"author":{"gitId":"ChongWeiJie29"},"content":"        return internalList.equals(otherUniquePrescriptionList.internalList);","lastModifiedDate":"2023-10-12"},{"lineNumber":128,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":129,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":130,"author":{"gitId":"ChongWeiJie29"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":131,"author":{"gitId":"ChongWeiJie29"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-12"},{"lineNumber":132,"author":{"gitId":"ChongWeiJie29"},"content":"        return internalList.hashCode();","lastModifiedDate":"2023-10-12"},{"lineNumber":133,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":134,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":135,"author":{"gitId":"ChongWeiJie29"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":136,"author":{"gitId":"ChongWeiJie29"},"content":"    public String toString() {","lastModifiedDate":"2023-10-12"},{"lineNumber":137,"author":{"gitId":"ChongWeiJie29"},"content":"        return internalList.toString();","lastModifiedDate":"2023-10-12"},{"lineNumber":138,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":139,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":140,"author":{"gitId":"ChongWeiJie29"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":141,"author":{"gitId":"ChongWeiJie29"},"content":"     * Returns true if {@code prescriptions} contains only unique prescriptions.","lastModifiedDate":"2023-10-12"},{"lineNumber":142,"author":{"gitId":"ChongWeiJie29"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":143,"author":{"gitId":"ChongWeiJie29"},"content":"    private boolean prescriptionsAreUnique(List\u003cPrescription\u003e prescriptions) {","lastModifiedDate":"2023-10-12"},{"lineNumber":144,"author":{"gitId":"ChongWeiJie29"},"content":"        for (int i \u003d 0; i \u003c prescriptions.size() - 1; i++) {","lastModifiedDate":"2023-10-12"},{"lineNumber":145,"author":{"gitId":"ChongWeiJie29"},"content":"            for (int j \u003d i + 1; j \u003c prescriptions.size(); j++) {","lastModifiedDate":"2023-10-12"},{"lineNumber":146,"author":{"gitId":"ChongWeiJie29"},"content":"                if (prescriptions.get(i).isSamePrescription(prescriptions.get(j))) {","lastModifiedDate":"2023-10-12"},{"lineNumber":147,"author":{"gitId":"ChongWeiJie29"},"content":"                    return false;","lastModifiedDate":"2023-10-12"},{"lineNumber":148,"author":{"gitId":"ChongWeiJie29"},"content":"                }","lastModifiedDate":"2023-10-12"},{"lineNumber":149,"author":{"gitId":"ChongWeiJie29"},"content":"            }","lastModifiedDate":"2023-10-12"},{"lineNumber":150,"author":{"gitId":"ChongWeiJie29"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":151,"author":{"gitId":"ChongWeiJie29"},"content":"        return true;","lastModifiedDate":"2023-10-12"},{"lineNumber":152,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":153,"author":{"gitId":"ChongWeiJie29"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"ChongWeiJie29":153}},{"path":"src/main/java/seedu/address/model/prescription/exceptions/DuplicatePrescriptionException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ChongWeiJie29"},"content":"package seedu.address.model.prescription.exceptions;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"ChongWeiJie29"},"content":"/**","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"ChongWeiJie29"},"content":" * Signals that the operation will result in duplicate Prescriptions (Prescriptions","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"ChongWeiJie29"},"content":" * are considered duplicates if they have the same identity).","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"ChongWeiJie29"},"content":" */","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"ChongWeiJie29"},"content":"public class DuplicatePrescriptionException extends RuntimeException {","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"ChongWeiJie29"},"content":"    public DuplicatePrescriptionException() {","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"ChongWeiJie29"},"content":"        super(\"Operation would result in duplicate prescriptions\");","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"ChongWeiJie29"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"ChongWeiJie29":11}},{"path":"src/main/java/seedu/address/model/prescription/exceptions/PrescriptionNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ChongWeiJie29"},"content":"package seedu.address.model.prescription.exceptions;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"ChongWeiJie29"},"content":"/**","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"ChongWeiJie29"},"content":" * Signals that the operation is unable to find the specified prescription.","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"ChongWeiJie29"},"content":" */","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"ChongWeiJie29"},"content":"public class PrescriptionNotFoundException extends RuntimeException {}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"ChongWeiJie29":6}},{"path":"src/main/java/seedu/address/model/util/SampleDataUtilPrescription.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ChongWeiJie29"},"content":"package seedu.address.model.util;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"ChongWeiJie29"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"ChongWeiJie29"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"ChongWeiJie29"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"ChongWeiJie29"},"content":"import seedu.address.model.PrescriptionList;","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"ChongWeiJie29"},"content":"import seedu.address.model.ReadOnlyPrescriptionList;","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"ChongWeiJie29"},"content":"import seedu.address.model.prescription.Date;","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"ChongWeiJie29"},"content":"import seedu.address.model.prescription.Dosage;","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"ChongWeiJie29"},"content":"import seedu.address.model.prescription.Frequency;","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"ChongWeiJie29"},"content":"import seedu.address.model.prescription.Name;","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"ChongWeiJie29"},"content":"import seedu.address.model.prescription.Note;","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"ChongWeiJie29"},"content":"import seedu.address.model.prescription.Prescription;","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"ChongWeiJie29"},"content":"import seedu.address.model.prescription.Stock;","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"ChongWeiJie29"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"ChongWeiJie29"},"content":"/**","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"ChongWeiJie29"},"content":" * Contains utility methods for populating {@code PrescriptionList} with sample data.","lastModifiedDate":"2023-10-12"},{"lineNumber":20,"author":{"gitId":"ChongWeiJie29"},"content":" */","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"ChongWeiJie29"},"content":"public class SampleDataUtilPrescription {","lastModifiedDate":"2023-10-12"},{"lineNumber":22,"author":{"gitId":"ChongWeiJie29"},"content":"    public static Prescription[] getSamplePrescriptions() {","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"ChongWeiJie29"},"content":"        return new Prescription[] {","lastModifiedDate":"2023-10-12"},{"lineNumber":24,"author":{"gitId":"ChongWeiJie29"},"content":"            new Prescription(new Name(\"Aspirin\"), new Dosage(\"1\"), new Frequency(\"Daily\"),","lastModifiedDate":"2023-10-12"},{"lineNumber":25,"author":{"gitId":"ChongWeiJie29"},"content":"                            new Date(\"01/08/2023\"), new Date(\"25/12/2023\"), new Date(\"01/12/2024\"),","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"ChongWeiJie29"},"content":"                            new Stock(\"100\"), new Note(\"Test note\")),","lastModifiedDate":"2023-10-12"},{"lineNumber":27,"author":{"gitId":"ChongWeiJie29"},"content":"        };","lastModifiedDate":"2023-10-12"},{"lineNumber":28,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":29,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":30,"author":{"gitId":"ChongWeiJie29"},"content":"    public static ReadOnlyPrescriptionList getSamplePrescriptionList() {","lastModifiedDate":"2023-10-12"},{"lineNumber":31,"author":{"gitId":"ChongWeiJie29"},"content":"        PrescriptionList samplePrescriptionList \u003d new PrescriptionList();","lastModifiedDate":"2023-10-12"},{"lineNumber":32,"author":{"gitId":"ChongWeiJie29"},"content":"        for (Prescription samplePrescription : getSamplePrescriptions()) {","lastModifiedDate":"2023-10-12"},{"lineNumber":33,"author":{"gitId":"ChongWeiJie29"},"content":"            samplePrescriptionList.addPrescription(samplePrescription);","lastModifiedDate":"2023-10-12"},{"lineNumber":34,"author":{"gitId":"ChongWeiJie29"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":35,"author":{"gitId":"ChongWeiJie29"},"content":"        return samplePrescriptionList;","lastModifiedDate":"2023-10-12"},{"lineNumber":36,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":37,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":38,"author":{"gitId":"ChongWeiJie29"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":39,"author":{"gitId":"ChongWeiJie29"},"content":"     * Returns a tag set containing the list of strings given.","lastModifiedDate":"2023-10-12"},{"lineNumber":40,"author":{"gitId":"ChongWeiJie29"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":41,"author":{"gitId":"ChongWeiJie29"},"content":"    public static Set\u003cTag\u003e getTagSet(String... strings) {","lastModifiedDate":"2023-10-12"},{"lineNumber":42,"author":{"gitId":"ChongWeiJie29"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2023-10-12"},{"lineNumber":43,"author":{"gitId":"ChongWeiJie29"},"content":"                .map(Tag::new)","lastModifiedDate":"2023-10-12"},{"lineNumber":44,"author":{"gitId":"ChongWeiJie29"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2023-10-12"},{"lineNumber":45,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":46,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":47,"author":{"gitId":"ChongWeiJie29"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"ChongWeiJie29":47}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedPrescription.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ChongWeiJie29"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"ChongWeiJie29"},"content":"// import java.util.ArrayList;","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"ChongWeiJie29"},"content":"// import java.util.HashSet;","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"ChongWeiJie29"},"content":"// import java.util.List;","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"ChongWeiJie29"},"content":"// import java.util.Set;","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"ChongWeiJie29"},"content":"// import java.util.stream.Collectors;","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"ChongWeiJie29"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"ChongWeiJie29"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"ChongWeiJie29"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"ChongWeiJie29"},"content":"import seedu.address.model.prescription.Date;","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"ChongWeiJie29"},"content":"import seedu.address.model.prescription.Dosage;","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"ChongWeiJie29"},"content":"import seedu.address.model.prescription.Frequency;","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"ChongWeiJie29"},"content":"import seedu.address.model.prescription.Name;","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"ChongWeiJie29"},"content":"import seedu.address.model.prescription.Note;","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"ChongWeiJie29"},"content":"import seedu.address.model.prescription.Prescription;","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"ChongWeiJie29"},"content":"import seedu.address.model.prescription.Stock;","lastModifiedDate":"2023-10-12"},{"lineNumber":20,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"ChongWeiJie29"},"content":"/**","lastModifiedDate":"2023-10-12"},{"lineNumber":22,"author":{"gitId":"ChongWeiJie29"},"content":" * Jackson-friendly version of {@link Prescription}.","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"ChongWeiJie29"},"content":" */","lastModifiedDate":"2023-10-12"},{"lineNumber":24,"author":{"gitId":"ChongWeiJie29"},"content":"class JsonAdaptedPrescription {","lastModifiedDate":"2023-10-12"},{"lineNumber":25,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"ChongWeiJie29"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Prescription\u0027s %s field is missing!\";","lastModifiedDate":"2023-10-12"},{"lineNumber":27,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":28,"author":{"gitId":"ChongWeiJie29"},"content":"    private final String name;","lastModifiedDate":"2023-10-12"},{"lineNumber":29,"author":{"gitId":"ChongWeiJie29"},"content":"    private final String dosage;","lastModifiedDate":"2023-10-12"},{"lineNumber":30,"author":{"gitId":"ChongWeiJie29"},"content":"    private final String frequency;","lastModifiedDate":"2023-10-12"},{"lineNumber":31,"author":{"gitId":"ChongWeiJie29"},"content":"    private final String startDate;","lastModifiedDate":"2023-10-12"},{"lineNumber":32,"author":{"gitId":"ChongWeiJie29"},"content":"    private final String endDate;","lastModifiedDate":"2023-10-12"},{"lineNumber":33,"author":{"gitId":"ChongWeiJie29"},"content":"    private final String expiryDate;","lastModifiedDate":"2023-10-12"},{"lineNumber":34,"author":{"gitId":"ChongWeiJie29"},"content":"    private final String totalStock;","lastModifiedDate":"2023-10-12"},{"lineNumber":35,"author":{"gitId":"ChongWeiJie29"},"content":"    private final String note;","lastModifiedDate":"2023-10-12"},{"lineNumber":36,"author":{"gitId":"ChongWeiJie29"},"content":"    // private final List\u003cJsonAdaptedTag\u003e tags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-12"},{"lineNumber":37,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":38,"author":{"gitId":"ChongWeiJie29"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":39,"author":{"gitId":"ChongWeiJie29"},"content":"     * Constructs a {@code JsonAdaptedPrescription} with the given prescription details.","lastModifiedDate":"2023-10-12"},{"lineNumber":40,"author":{"gitId":"ChongWeiJie29"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":41,"author":{"gitId":"ChongWeiJie29"},"content":"    @JsonCreator","lastModifiedDate":"2023-10-12"},{"lineNumber":42,"author":{"gitId":"ChongWeiJie29"},"content":"    public JsonAdaptedPrescription(@JsonProperty(\"name\") String name, @JsonProperty(\"dosage\") String dosage,","lastModifiedDate":"2023-10-12"},{"lineNumber":43,"author":{"gitId":"ChongWeiJie29"},"content":"            @JsonProperty(\"frequency\") String frequency, @JsonProperty(\"startDate\") String startDate,","lastModifiedDate":"2023-10-12"},{"lineNumber":44,"author":{"gitId":"ChongWeiJie29"},"content":"            @JsonProperty(\"endDate\") String endDate, @JsonProperty(\"expiryDate\") String expiryDate,","lastModifiedDate":"2023-10-12"},{"lineNumber":45,"author":{"gitId":"ChongWeiJie29"},"content":"            @JsonProperty(\"totalStock\") String totalStock, @JsonProperty(\"note\") String note) {","lastModifiedDate":"2023-10-12"},{"lineNumber":46,"author":{"gitId":"ChongWeiJie29"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-10-12"},{"lineNumber":47,"author":{"gitId":"ChongWeiJie29"},"content":"        this.dosage \u003d dosage;","lastModifiedDate":"2023-10-12"},{"lineNumber":48,"author":{"gitId":"ChongWeiJie29"},"content":"        this.frequency \u003d frequency;","lastModifiedDate":"2023-10-12"},{"lineNumber":49,"author":{"gitId":"ChongWeiJie29"},"content":"        this.startDate \u003d startDate;","lastModifiedDate":"2023-10-12"},{"lineNumber":50,"author":{"gitId":"ChongWeiJie29"},"content":"        this.endDate \u003d endDate;","lastModifiedDate":"2023-10-12"},{"lineNumber":51,"author":{"gitId":"ChongWeiJie29"},"content":"        this.expiryDate \u003d expiryDate;","lastModifiedDate":"2023-10-12"},{"lineNumber":52,"author":{"gitId":"ChongWeiJie29"},"content":"        this.totalStock \u003d totalStock;","lastModifiedDate":"2023-10-12"},{"lineNumber":53,"author":{"gitId":"ChongWeiJie29"},"content":"        this.note \u003d note;","lastModifiedDate":"2023-10-12"},{"lineNumber":54,"author":{"gitId":"ChongWeiJie29"},"content":"        // if (tags !\u003d null) {","lastModifiedDate":"2023-10-12"},{"lineNumber":55,"author":{"gitId":"ChongWeiJie29"},"content":"        //     this.tags.addAll(tags);","lastModifiedDate":"2023-10-12"},{"lineNumber":56,"author":{"gitId":"ChongWeiJie29"},"content":"        // }","lastModifiedDate":"2023-10-12"},{"lineNumber":57,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":58,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":59,"author":{"gitId":"ChongWeiJie29"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":60,"author":{"gitId":"ChongWeiJie29"},"content":"     * Converts a given {@code Prescription} into this class for Jackson use.","lastModifiedDate":"2023-10-12"},{"lineNumber":61,"author":{"gitId":"ChongWeiJie29"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":62,"author":{"gitId":"ChongWeiJie29"},"content":"    public JsonAdaptedPrescription(Prescription source) {","lastModifiedDate":"2023-10-12"},{"lineNumber":63,"author":{"gitId":"ChongWeiJie29"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2023-10-12"},{"lineNumber":64,"author":{"gitId":"ChongWeiJie29"},"content":"        dosage \u003d source.getDosage().fullDosage;","lastModifiedDate":"2023-10-12"},{"lineNumber":65,"author":{"gitId":"ChongWeiJie29"},"content":"        frequency \u003d source.getFrequency().fullFrequency;","lastModifiedDate":"2023-10-12"},{"lineNumber":66,"author":{"gitId":"ChongWeiJie29"},"content":"        startDate \u003d source.getStartDate().fullDate;","lastModifiedDate":"2023-10-12"},{"lineNumber":67,"author":{"gitId":"ChongWeiJie29"},"content":"        endDate \u003d source.getEndDate().fullDate;","lastModifiedDate":"2023-10-12"},{"lineNumber":68,"author":{"gitId":"ChongWeiJie29"},"content":"        expiryDate \u003d source.getExpiryDate().fullDate;","lastModifiedDate":"2023-10-12"},{"lineNumber":69,"author":{"gitId":"ChongWeiJie29"},"content":"        totalStock \u003d source.getTotalStock().fullStock;","lastModifiedDate":"2023-10-12"},{"lineNumber":70,"author":{"gitId":"ChongWeiJie29"},"content":"        note \u003d source.getNote().fullNote;","lastModifiedDate":"2023-10-12"},{"lineNumber":71,"author":{"gitId":"ChongWeiJie29"},"content":"        // tags.addAll(source.getTags().stream()","lastModifiedDate":"2023-10-12"},{"lineNumber":72,"author":{"gitId":"ChongWeiJie29"},"content":"        //         .map(JsonAdaptedTag::new)","lastModifiedDate":"2023-10-12"},{"lineNumber":73,"author":{"gitId":"ChongWeiJie29"},"content":"        //         .collect(Collectors.toList()));","lastModifiedDate":"2023-10-12"},{"lineNumber":74,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":75,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":76,"author":{"gitId":"ChongWeiJie29"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":77,"author":{"gitId":"ChongWeiJie29"},"content":"     * Converts this Jackson-friendly adapted prescription object into the model\u0027s {@code Prescription} object.","lastModifiedDate":"2023-10-12"},{"lineNumber":78,"author":{"gitId":"ChongWeiJie29"},"content":"     *","lastModifiedDate":"2023-10-12"},{"lineNumber":79,"author":{"gitId":"ChongWeiJie29"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted prescription.","lastModifiedDate":"2023-10-12"},{"lineNumber":80,"author":{"gitId":"ChongWeiJie29"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":81,"author":{"gitId":"ChongWeiJie29"},"content":"    public Prescription toModelType() throws IllegalValueException {","lastModifiedDate":"2023-10-12"},{"lineNumber":82,"author":{"gitId":"ChongWeiJie29"},"content":"        // final List\u003cTag\u003e personTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-12"},{"lineNumber":83,"author":{"gitId":"ChongWeiJie29"},"content":"        // for (JsonAdaptedTag tag : tags) {","lastModifiedDate":"2023-10-12"},{"lineNumber":84,"author":{"gitId":"ChongWeiJie29"},"content":"        //     personTags.add(tag.toModelType());","lastModifiedDate":"2023-10-12"},{"lineNumber":85,"author":{"gitId":"ChongWeiJie29"},"content":"        // }","lastModifiedDate":"2023-10-12"},{"lineNumber":86,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":87,"author":{"gitId":"ChongWeiJie29"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2023-10-12"},{"lineNumber":88,"author":{"gitId":"ChongWeiJie29"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2023-10-12"},{"lineNumber":89,"author":{"gitId":"ChongWeiJie29"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":90,"author":{"gitId":"ChongWeiJie29"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2023-10-12"},{"lineNumber":91,"author":{"gitId":"ChongWeiJie29"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-12"},{"lineNumber":92,"author":{"gitId":"ChongWeiJie29"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":93,"author":{"gitId":"ChongWeiJie29"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2023-10-12"},{"lineNumber":94,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":95,"author":{"gitId":"ChongWeiJie29"},"content":"        if (dosage \u003d\u003d null) {","lastModifiedDate":"2023-10-12"},{"lineNumber":96,"author":{"gitId":"ChongWeiJie29"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Dosage.class.getSimpleName()));","lastModifiedDate":"2023-10-12"},{"lineNumber":97,"author":{"gitId":"ChongWeiJie29"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":98,"author":{"gitId":"ChongWeiJie29"},"content":"        if (!Dosage.isValidDosage(dosage)) {","lastModifiedDate":"2023-10-12"},{"lineNumber":99,"author":{"gitId":"ChongWeiJie29"},"content":"            throw new IllegalValueException(Dosage.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-12"},{"lineNumber":100,"author":{"gitId":"ChongWeiJie29"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":101,"author":{"gitId":"ChongWeiJie29"},"content":"        final Dosage modelDosage \u003d new Dosage(dosage);","lastModifiedDate":"2023-10-12"},{"lineNumber":102,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":103,"author":{"gitId":"ChongWeiJie29"},"content":"        if (frequency \u003d\u003d null) {","lastModifiedDate":"2023-10-12"},{"lineNumber":104,"author":{"gitId":"ChongWeiJie29"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2023-10-12"},{"lineNumber":105,"author":{"gitId":"ChongWeiJie29"},"content":"                Frequency.class.getSimpleName()));","lastModifiedDate":"2023-10-12"},{"lineNumber":106,"author":{"gitId":"ChongWeiJie29"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":107,"author":{"gitId":"ChongWeiJie29"},"content":"        if (!Frequency.isValidFrequency(frequency)) {","lastModifiedDate":"2023-10-12"},{"lineNumber":108,"author":{"gitId":"ChongWeiJie29"},"content":"            throw new IllegalValueException(Frequency.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-12"},{"lineNumber":109,"author":{"gitId":"ChongWeiJie29"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":110,"author":{"gitId":"ChongWeiJie29"},"content":"        final Frequency modelFrequency \u003d new Frequency(frequency);","lastModifiedDate":"2023-10-12"},{"lineNumber":111,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":112,"author":{"gitId":"ChongWeiJie29"},"content":"        if (startDate \u003d\u003d null) {","lastModifiedDate":"2023-10-12"},{"lineNumber":113,"author":{"gitId":"ChongWeiJie29"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Date.class.getSimpleName()));","lastModifiedDate":"2023-10-12"},{"lineNumber":114,"author":{"gitId":"ChongWeiJie29"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":115,"author":{"gitId":"ChongWeiJie29"},"content":"        if (!Date.isValidDate(startDate)) {","lastModifiedDate":"2023-10-12"},{"lineNumber":116,"author":{"gitId":"ChongWeiJie29"},"content":"            throw new IllegalValueException(Date.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-12"},{"lineNumber":117,"author":{"gitId":"ChongWeiJie29"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":118,"author":{"gitId":"ChongWeiJie29"},"content":"        final Date modelStartDate \u003d new Date(startDate);","lastModifiedDate":"2023-10-12"},{"lineNumber":119,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":120,"author":{"gitId":"ChongWeiJie29"},"content":"        if (endDate \u003d\u003d null) {","lastModifiedDate":"2023-10-12"},{"lineNumber":121,"author":{"gitId":"ChongWeiJie29"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Date.class.getSimpleName()));","lastModifiedDate":"2023-10-12"},{"lineNumber":122,"author":{"gitId":"ChongWeiJie29"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":123,"author":{"gitId":"ChongWeiJie29"},"content":"        if (!Date.isValidDate(expiryDate)) {","lastModifiedDate":"2023-10-12"},{"lineNumber":124,"author":{"gitId":"ChongWeiJie29"},"content":"            throw new IllegalValueException(Date.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-12"},{"lineNumber":125,"author":{"gitId":"ChongWeiJie29"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":126,"author":{"gitId":"ChongWeiJie29"},"content":"        final Date modelEndDate \u003d new Date(endDate);","lastModifiedDate":"2023-10-12"},{"lineNumber":127,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":128,"author":{"gitId":"ChongWeiJie29"},"content":"        if (expiryDate \u003d\u003d null) {","lastModifiedDate":"2023-10-12"},{"lineNumber":129,"author":{"gitId":"ChongWeiJie29"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Date.class.getSimpleName()));","lastModifiedDate":"2023-10-12"},{"lineNumber":130,"author":{"gitId":"ChongWeiJie29"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":131,"author":{"gitId":"ChongWeiJie29"},"content":"        if (!Date.isValidDate(expiryDate)) {","lastModifiedDate":"2023-10-12"},{"lineNumber":132,"author":{"gitId":"ChongWeiJie29"},"content":"            throw new IllegalValueException(Date.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-12"},{"lineNumber":133,"author":{"gitId":"ChongWeiJie29"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":134,"author":{"gitId":"ChongWeiJie29"},"content":"        final Date modelExpiryDate \u003d new Date(expiryDate);","lastModifiedDate":"2023-10-12"},{"lineNumber":135,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":136,"author":{"gitId":"ChongWeiJie29"},"content":"        if (totalStock \u003d\u003d null) {","lastModifiedDate":"2023-10-12"},{"lineNumber":137,"author":{"gitId":"ChongWeiJie29"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Stock.class.getSimpleName()));","lastModifiedDate":"2023-10-12"},{"lineNumber":138,"author":{"gitId":"ChongWeiJie29"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":139,"author":{"gitId":"ChongWeiJie29"},"content":"        if (!Stock.isValidStock(totalStock)) {","lastModifiedDate":"2023-10-12"},{"lineNumber":140,"author":{"gitId":"ChongWeiJie29"},"content":"            throw new IllegalValueException(Stock.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-12"},{"lineNumber":141,"author":{"gitId":"ChongWeiJie29"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":142,"author":{"gitId":"ChongWeiJie29"},"content":"        final Stock modelTotalStock \u003d new Stock(totalStock);","lastModifiedDate":"2023-10-12"},{"lineNumber":143,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":144,"author":{"gitId":"ChongWeiJie29"},"content":"        if (note \u003d\u003d null) {","lastModifiedDate":"2023-10-12"},{"lineNumber":145,"author":{"gitId":"ChongWeiJie29"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Note.class.getSimpleName()));","lastModifiedDate":"2023-10-12"},{"lineNumber":146,"author":{"gitId":"ChongWeiJie29"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":147,"author":{"gitId":"ChongWeiJie29"},"content":"        if (!Note.isValidNote(note)) {","lastModifiedDate":"2023-10-12"},{"lineNumber":148,"author":{"gitId":"ChongWeiJie29"},"content":"            throw new IllegalValueException(Note.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-12"},{"lineNumber":149,"author":{"gitId":"ChongWeiJie29"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":150,"author":{"gitId":"ChongWeiJie29"},"content":"        final Note modelNote \u003d new Note(note);","lastModifiedDate":"2023-10-12"},{"lineNumber":151,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":152,"author":{"gitId":"ChongWeiJie29"},"content":"        // final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(personTags);","lastModifiedDate":"2023-10-12"},{"lineNumber":153,"author":{"gitId":"ChongWeiJie29"},"content":"        return new Prescription(modelName, modelDosage, modelFrequency, modelStartDate,","lastModifiedDate":"2023-10-12"},{"lineNumber":154,"author":{"gitId":"ChongWeiJie29"},"content":"                        modelEndDate, modelExpiryDate, modelTotalStock, modelNote);","lastModifiedDate":"2023-10-12"},{"lineNumber":155,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":156,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":157,"author":{"gitId":"ChongWeiJie29"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"ChongWeiJie29":157}},{"path":"src/main/java/seedu/address/storage/JsonPrescriptionListStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ChongWeiJie29"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"ChongWeiJie29"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"ChongWeiJie29"},"content":"import java.io.IOException;","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"ChongWeiJie29"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"ChongWeiJie29"},"content":"import java.util.Optional;","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"ChongWeiJie29"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"ChongWeiJie29"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"ChongWeiJie29"},"content":"import seedu.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"ChongWeiJie29"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"ChongWeiJie29"},"content":"import seedu.address.commons.util.FileUtil;","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"ChongWeiJie29"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"ChongWeiJie29"},"content":"import seedu.address.model.ReadOnlyPrescriptionList;","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"ChongWeiJie29"},"content":"/**","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"ChongWeiJie29"},"content":" * A class to access PrescriptionList data stored as a json file on the hard disk.","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"ChongWeiJie29"},"content":" */","lastModifiedDate":"2023-10-12"},{"lineNumber":20,"author":{"gitId":"ChongWeiJie29"},"content":"public class JsonPrescriptionListStorage implements PrescriptionListStorage {","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":22,"author":{"gitId":"ChongWeiJie29"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonPrescriptionListStorage.class);","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":24,"author":{"gitId":"ChongWeiJie29"},"content":"    private Path filePath;","lastModifiedDate":"2023-10-12"},{"lineNumber":25,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"ChongWeiJie29"},"content":"    public JsonPrescriptionListStorage(Path filePath) {","lastModifiedDate":"2023-10-12"},{"lineNumber":27,"author":{"gitId":"ChongWeiJie29"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-10-12"},{"lineNumber":28,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":29,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":30,"author":{"gitId":"ChongWeiJie29"},"content":"    public Path getPrescriptionListFilePath() {","lastModifiedDate":"2023-10-12"},{"lineNumber":31,"author":{"gitId":"ChongWeiJie29"},"content":"        return filePath;","lastModifiedDate":"2023-10-12"},{"lineNumber":32,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":33,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":34,"author":{"gitId":"ChongWeiJie29"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":35,"author":{"gitId":"ChongWeiJie29"},"content":"    public Optional\u003cReadOnlyPrescriptionList\u003e readPrescriptionList() throws DataLoadingException {","lastModifiedDate":"2023-10-12"},{"lineNumber":36,"author":{"gitId":"ChongWeiJie29"},"content":"        return readPrescriptionList(filePath);","lastModifiedDate":"2023-10-12"},{"lineNumber":37,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":38,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":39,"author":{"gitId":"ChongWeiJie29"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":40,"author":{"gitId":"ChongWeiJie29"},"content":"     * Similar to {@link #readPrescriptionList()}.","lastModifiedDate":"2023-10-12"},{"lineNumber":41,"author":{"gitId":"ChongWeiJie29"},"content":"     *","lastModifiedDate":"2023-10-12"},{"lineNumber":42,"author":{"gitId":"ChongWeiJie29"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2023-10-12"},{"lineNumber":43,"author":{"gitId":"ChongWeiJie29"},"content":"     * @throws DataLoadingException if loading the data from storage failed.","lastModifiedDate":"2023-10-12"},{"lineNumber":44,"author":{"gitId":"ChongWeiJie29"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":45,"author":{"gitId":"ChongWeiJie29"},"content":"    public Optional\u003cReadOnlyPrescriptionList\u003e readPrescriptionList(Path filePath) throws DataLoadingException {","lastModifiedDate":"2023-10-12"},{"lineNumber":46,"author":{"gitId":"ChongWeiJie29"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2023-10-12"},{"lineNumber":47,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":48,"author":{"gitId":"ChongWeiJie29"},"content":"        Optional\u003cJsonSerializablePrescriptionList\u003e jsonPrescriptionList \u003d JsonUtil.readJsonFile(","lastModifiedDate":"2023-10-12"},{"lineNumber":49,"author":{"gitId":"ChongWeiJie29"},"content":"                filePath, JsonSerializablePrescriptionList.class);","lastModifiedDate":"2023-10-12"},{"lineNumber":50,"author":{"gitId":"ChongWeiJie29"},"content":"        if (!jsonPrescriptionList.isPresent()) {","lastModifiedDate":"2023-10-12"},{"lineNumber":51,"author":{"gitId":"ChongWeiJie29"},"content":"            return Optional.empty();","lastModifiedDate":"2023-10-12"},{"lineNumber":52,"author":{"gitId":"ChongWeiJie29"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":53,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":54,"author":{"gitId":"ChongWeiJie29"},"content":"        try {","lastModifiedDate":"2023-10-12"},{"lineNumber":55,"author":{"gitId":"ChongWeiJie29"},"content":"            return Optional.of(jsonPrescriptionList.get().toModelType());","lastModifiedDate":"2023-10-12"},{"lineNumber":56,"author":{"gitId":"ChongWeiJie29"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2023-10-12"},{"lineNumber":57,"author":{"gitId":"ChongWeiJie29"},"content":"            logger.info(\"Illegal values found in \" + filePath + \": \" + ive.getMessage());","lastModifiedDate":"2023-10-12"},{"lineNumber":58,"author":{"gitId":"ChongWeiJie29"},"content":"            throw new DataLoadingException(ive);","lastModifiedDate":"2023-10-12"},{"lineNumber":59,"author":{"gitId":"ChongWeiJie29"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":60,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":61,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":62,"author":{"gitId":"ChongWeiJie29"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":63,"author":{"gitId":"ChongWeiJie29"},"content":"    public void savePrescriptionList(ReadOnlyPrescriptionList prescriptionList) throws IOException {","lastModifiedDate":"2023-10-12"},{"lineNumber":64,"author":{"gitId":"ChongWeiJie29"},"content":"        savePrescriptionList(prescriptionList, filePath);","lastModifiedDate":"2023-10-12"},{"lineNumber":65,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":66,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":67,"author":{"gitId":"ChongWeiJie29"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":68,"author":{"gitId":"ChongWeiJie29"},"content":"     * Similar to {@link #savePrescriptionList(ReadOnlyPrescriptionList)}.","lastModifiedDate":"2023-10-12"},{"lineNumber":69,"author":{"gitId":"ChongWeiJie29"},"content":"     *","lastModifiedDate":"2023-10-12"},{"lineNumber":70,"author":{"gitId":"ChongWeiJie29"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2023-10-12"},{"lineNumber":71,"author":{"gitId":"ChongWeiJie29"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":72,"author":{"gitId":"ChongWeiJie29"},"content":"    public void savePrescriptionList(ReadOnlyPrescriptionList prescriptionList, Path filePath) throws IOException {","lastModifiedDate":"2023-10-12"},{"lineNumber":73,"author":{"gitId":"ChongWeiJie29"},"content":"        requireNonNull(prescriptionList);","lastModifiedDate":"2023-10-12"},{"lineNumber":74,"author":{"gitId":"ChongWeiJie29"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2023-10-12"},{"lineNumber":75,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":76,"author":{"gitId":"ChongWeiJie29"},"content":"        FileUtil.createIfMissing(filePath);","lastModifiedDate":"2023-10-12"},{"lineNumber":77,"author":{"gitId":"ChongWeiJie29"},"content":"        JsonUtil.saveJsonFile(new JsonSerializablePrescriptionList(prescriptionList), filePath);","lastModifiedDate":"2023-10-12"},{"lineNumber":78,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":79,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":80,"author":{"gitId":"ChongWeiJie29"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"ChongWeiJie29":80}},{"path":"src/main/java/seedu/address/storage/JsonSerializablePrescriptionList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ChongWeiJie29"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"ChongWeiJie29"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"ChongWeiJie29"},"content":"import java.util.List;","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"ChongWeiJie29"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"ChongWeiJie29"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"ChongWeiJie29"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"ChongWeiJie29"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"ChongWeiJie29"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"ChongWeiJie29"},"content":"import seedu.address.model.PrescriptionList;","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"ChongWeiJie29"},"content":"import seedu.address.model.ReadOnlyPrescriptionList;","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"ChongWeiJie29"},"content":"import seedu.address.model.prescription.Prescription;","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"ChongWeiJie29"},"content":"/**","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"ChongWeiJie29"},"content":" * An Immutable PrescriptionList that is serializable to JSON format.","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"ChongWeiJie29"},"content":" */","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"ChongWeiJie29"},"content":"@JsonRootName(value \u003d \"prescriptionlist\")","lastModifiedDate":"2023-10-12"},{"lineNumber":20,"author":{"gitId":"ChongWeiJie29"},"content":"class JsonSerializablePrescriptionList {","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":22,"author":{"gitId":"ChongWeiJie29"},"content":"    public static final String MESSAGE_DUPLICATE_PRESCRIPTION \u003d \"Prescriptions list \"","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"ChongWeiJie29"},"content":"        + \"contains duplicate prescription(s).\";","lastModifiedDate":"2023-10-12"},{"lineNumber":24,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":25,"author":{"gitId":"ChongWeiJie29"},"content":"    private final List\u003cJsonAdaptedPrescription\u003e prescriptions \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":27,"author":{"gitId":"ChongWeiJie29"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":28,"author":{"gitId":"ChongWeiJie29"},"content":"     * Constructs a {@code JsonSerializablePrescriptionList} with the given prescriptions.","lastModifiedDate":"2023-10-12"},{"lineNumber":29,"author":{"gitId":"ChongWeiJie29"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":30,"author":{"gitId":"ChongWeiJie29"},"content":"    @JsonCreator","lastModifiedDate":"2023-10-12"},{"lineNumber":31,"author":{"gitId":"ChongWeiJie29"},"content":"    public JsonSerializablePrescriptionList(","lastModifiedDate":"2023-10-12"},{"lineNumber":32,"author":{"gitId":"ChongWeiJie29"},"content":"            @JsonProperty(\"prescriptions\") List\u003cJsonAdaptedPrescription\u003e prescriptions) {","lastModifiedDate":"2023-10-12"},{"lineNumber":33,"author":{"gitId":"ChongWeiJie29"},"content":"        this.prescriptions.addAll(prescriptions);","lastModifiedDate":"2023-10-12"},{"lineNumber":34,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":35,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":36,"author":{"gitId":"ChongWeiJie29"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":37,"author":{"gitId":"ChongWeiJie29"},"content":"     * Converts a given {@code ReadOnlyPrescriptionList} into this class for Jackson use.","lastModifiedDate":"2023-10-12"},{"lineNumber":38,"author":{"gitId":"ChongWeiJie29"},"content":"     *","lastModifiedDate":"2023-10-12"},{"lineNumber":39,"author":{"gitId":"ChongWeiJie29"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializablePrescriptionList}.","lastModifiedDate":"2023-10-12"},{"lineNumber":40,"author":{"gitId":"ChongWeiJie29"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":41,"author":{"gitId":"ChongWeiJie29"},"content":"    public JsonSerializablePrescriptionList(ReadOnlyPrescriptionList source) {","lastModifiedDate":"2023-10-12"},{"lineNumber":42,"author":{"gitId":"ChongWeiJie29"},"content":"        prescriptions.addAll(source.getPrescriptionList().stream().map(","lastModifiedDate":"2023-10-12"},{"lineNumber":43,"author":{"gitId":"ChongWeiJie29"},"content":"            JsonAdaptedPrescription::new).collect(Collectors.toList()));","lastModifiedDate":"2023-10-12"},{"lineNumber":44,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":45,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":46,"author":{"gitId":"ChongWeiJie29"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":47,"author":{"gitId":"ChongWeiJie29"},"content":"     * Converts this prescription list into the model\u0027s {@code PrescriptionList} object.","lastModifiedDate":"2023-10-12"},{"lineNumber":48,"author":{"gitId":"ChongWeiJie29"},"content":"     *","lastModifiedDate":"2023-10-12"},{"lineNumber":49,"author":{"gitId":"ChongWeiJie29"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2023-10-12"},{"lineNumber":50,"author":{"gitId":"ChongWeiJie29"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":51,"author":{"gitId":"ChongWeiJie29"},"content":"    public PrescriptionList toModelType() throws IllegalValueException {","lastModifiedDate":"2023-10-12"},{"lineNumber":52,"author":{"gitId":"ChongWeiJie29"},"content":"        PrescriptionList prescriptionList \u003d new PrescriptionList();","lastModifiedDate":"2023-10-12"},{"lineNumber":53,"author":{"gitId":"ChongWeiJie29"},"content":"        for (JsonAdaptedPrescription jsonAdaptedPrescription : prescriptions) {","lastModifiedDate":"2023-10-12"},{"lineNumber":54,"author":{"gitId":"ChongWeiJie29"},"content":"            Prescription prescription \u003d jsonAdaptedPrescription.toModelType();","lastModifiedDate":"2023-10-12"},{"lineNumber":55,"author":{"gitId":"ChongWeiJie29"},"content":"            if (prescriptionList.hasPrescription(prescription)) {","lastModifiedDate":"2023-10-12"},{"lineNumber":56,"author":{"gitId":"ChongWeiJie29"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_PRESCRIPTION);","lastModifiedDate":"2023-10-12"},{"lineNumber":57,"author":{"gitId":"ChongWeiJie29"},"content":"            }","lastModifiedDate":"2023-10-12"},{"lineNumber":58,"author":{"gitId":"ChongWeiJie29"},"content":"            prescriptionList.addPrescription(prescription);","lastModifiedDate":"2023-10-12"},{"lineNumber":59,"author":{"gitId":"ChongWeiJie29"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":60,"author":{"gitId":"ChongWeiJie29"},"content":"        return prescriptionList;","lastModifiedDate":"2023-10-12"},{"lineNumber":61,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":62,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":63,"author":{"gitId":"ChongWeiJie29"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"ChongWeiJie29":63}},{"path":"src/main/java/seedu/address/storage/JsonUserPrefsStoragePrescription.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ChongWeiJie29"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"ChongWeiJie29"},"content":"import java.io.IOException;","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"ChongWeiJie29"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"ChongWeiJie29"},"content":"import java.util.Optional;","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"ChongWeiJie29"},"content":"import seedu.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"ChongWeiJie29"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"ChongWeiJie29"},"content":"import seedu.address.model.ReadOnlyUserPrefsPrescription;","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"ChongWeiJie29"},"content":"import seedu.address.model.UserPrefsPrescription;","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"ChongWeiJie29"},"content":"/**","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"ChongWeiJie29"},"content":" * A class to access UserPrefs stored in the hard disk as a json file","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"ChongWeiJie29"},"content":" */","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"ChongWeiJie29"},"content":"public class JsonUserPrefsStoragePrescription implements UserPrefsStoragePrescription {","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"ChongWeiJie29"},"content":"    private Path filePath;","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"ChongWeiJie29"},"content":"    public JsonUserPrefsStoragePrescription(Path filePath) {","lastModifiedDate":"2023-10-12"},{"lineNumber":20,"author":{"gitId":"ChongWeiJie29"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":22,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"ChongWeiJie29"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":24,"author":{"gitId":"ChongWeiJie29"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2023-10-12"},{"lineNumber":25,"author":{"gitId":"ChongWeiJie29"},"content":"        return filePath;","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":27,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":28,"author":{"gitId":"ChongWeiJie29"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":29,"author":{"gitId":"ChongWeiJie29"},"content":"    public Optional\u003cUserPrefsPrescription\u003e readUserPrefs() throws DataLoadingException {","lastModifiedDate":"2023-10-12"},{"lineNumber":30,"author":{"gitId":"ChongWeiJie29"},"content":"        return readUserPrefs(filePath);","lastModifiedDate":"2023-10-12"},{"lineNumber":31,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":32,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":33,"author":{"gitId":"ChongWeiJie29"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":34,"author":{"gitId":"ChongWeiJie29"},"content":"     * Similar to {@link #readUserPrefs()}","lastModifiedDate":"2023-10-12"},{"lineNumber":35,"author":{"gitId":"ChongWeiJie29"},"content":"     * @param prefsFilePath location of the data. Cannot be null.","lastModifiedDate":"2023-10-12"},{"lineNumber":36,"author":{"gitId":"ChongWeiJie29"},"content":"     * @throws DataLoadingException if the file format is not as expected.","lastModifiedDate":"2023-10-12"},{"lineNumber":37,"author":{"gitId":"ChongWeiJie29"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":38,"author":{"gitId":"ChongWeiJie29"},"content":"    public Optional\u003cUserPrefsPrescription\u003e readUserPrefs(Path prefsFilePath) throws DataLoadingException {","lastModifiedDate":"2023-10-12"},{"lineNumber":39,"author":{"gitId":"ChongWeiJie29"},"content":"        return JsonUtil.readJsonFile(prefsFilePath, UserPrefsPrescription.class);","lastModifiedDate":"2023-10-12"},{"lineNumber":40,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":41,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":42,"author":{"gitId":"ChongWeiJie29"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":43,"author":{"gitId":"ChongWeiJie29"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefsPrescription userPrefs) throws IOException {","lastModifiedDate":"2023-10-12"},{"lineNumber":44,"author":{"gitId":"ChongWeiJie29"},"content":"        JsonUtil.saveJsonFile(userPrefs, filePath);","lastModifiedDate":"2023-10-12"},{"lineNumber":45,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":46,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":47,"author":{"gitId":"ChongWeiJie29"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"ChongWeiJie29":47}},{"path":"src/main/java/seedu/address/storage/PrescriptionListStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ChongWeiJie29"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"ChongWeiJie29"},"content":"import java.io.IOException;","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"ChongWeiJie29"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"ChongWeiJie29"},"content":"import java.util.Optional;","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"ChongWeiJie29"},"content":"import seedu.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"ChongWeiJie29"},"content":"import seedu.address.model.ReadOnlyPrescriptionList;","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"ChongWeiJie29"},"content":"/**","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"ChongWeiJie29"},"content":" * Represents a storage for {@link seedu.address.model.PrescriptionList}.","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"ChongWeiJie29"},"content":" */","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"ChongWeiJie29"},"content":"public interface PrescriptionListStorage {","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"ChongWeiJie29"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"ChongWeiJie29"},"content":"     * Returns the file path of the data file.","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"ChongWeiJie29"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"ChongWeiJie29"},"content":"    Path getPrescriptionListFilePath();","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":20,"author":{"gitId":"ChongWeiJie29"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"ChongWeiJie29"},"content":"     * Returns PrescriptionList data as a {@link ReadOnlyPrescriptionList}.","lastModifiedDate":"2023-10-12"},{"lineNumber":22,"author":{"gitId":"ChongWeiJie29"},"content":"     * Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"ChongWeiJie29"},"content":"     *","lastModifiedDate":"2023-10-12"},{"lineNumber":24,"author":{"gitId":"ChongWeiJie29"},"content":"     * @throws DataLoadingException if loading the data from storage failed.","lastModifiedDate":"2023-10-12"},{"lineNumber":25,"author":{"gitId":"ChongWeiJie29"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"ChongWeiJie29"},"content":"    Optional\u003cReadOnlyPrescriptionList\u003e readPrescriptionList() throws DataLoadingException;","lastModifiedDate":"2023-10-12"},{"lineNumber":27,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":28,"author":{"gitId":"ChongWeiJie29"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":29,"author":{"gitId":"ChongWeiJie29"},"content":"     * @see #getPrescriptionListFilePath()","lastModifiedDate":"2023-10-12"},{"lineNumber":30,"author":{"gitId":"ChongWeiJie29"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":31,"author":{"gitId":"ChongWeiJie29"},"content":"    Optional\u003cReadOnlyPrescriptionList\u003e readPrescriptionList(Path filePath) throws DataLoadingException;","lastModifiedDate":"2023-10-12"},{"lineNumber":32,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":33,"author":{"gitId":"ChongWeiJie29"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":34,"author":{"gitId":"ChongWeiJie29"},"content":"     * Saves the given {@link ReadOnlyPrescriptionList} to the storage.","lastModifiedDate":"2023-10-12"},{"lineNumber":35,"author":{"gitId":"ChongWeiJie29"},"content":"     * @param prescriptionList cannot be null.","lastModifiedDate":"2023-10-12"},{"lineNumber":36,"author":{"gitId":"ChongWeiJie29"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2023-10-12"},{"lineNumber":37,"author":{"gitId":"ChongWeiJie29"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":38,"author":{"gitId":"ChongWeiJie29"},"content":"    void savePrescriptionList(ReadOnlyPrescriptionList prescriptionList) throws IOException;","lastModifiedDate":"2023-10-12"},{"lineNumber":39,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":40,"author":{"gitId":"ChongWeiJie29"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":41,"author":{"gitId":"ChongWeiJie29"},"content":"     * @see #savePrescriptionList(ReadOnlyPrescriptionList)","lastModifiedDate":"2023-10-12"},{"lineNumber":42,"author":{"gitId":"ChongWeiJie29"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":43,"author":{"gitId":"ChongWeiJie29"},"content":"    void savePrescriptionList(ReadOnlyPrescriptionList prescriptionList, Path filePath) throws IOException;","lastModifiedDate":"2023-10-12"},{"lineNumber":44,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":45,"author":{"gitId":"ChongWeiJie29"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"ChongWeiJie29":45}},{"path":"src/main/java/seedu/address/storage/StorageManagerPrescription.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ChongWeiJie29"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"ChongWeiJie29"},"content":"import java.io.IOException;","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"ChongWeiJie29"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"ChongWeiJie29"},"content":"import java.util.Optional;","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"ChongWeiJie29"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"ChongWeiJie29"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"ChongWeiJie29"},"content":"import seedu.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"ChongWeiJie29"},"content":"import seedu.address.model.ReadOnlyPrescriptionList;","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"ChongWeiJie29"},"content":"import seedu.address.model.ReadOnlyUserPrefsPrescription;","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"ChongWeiJie29"},"content":"import seedu.address.model.UserPrefsPrescription;","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"ChongWeiJie29"},"content":"/**","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"ChongWeiJie29"},"content":" * Manages storage of PrescriptionList data in local storage.","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"ChongWeiJie29"},"content":" */","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"ChongWeiJie29"},"content":"public class StorageManagerPrescription implements StoragePrescription {","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"ChongWeiJie29"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(StorageManagerPrescription.class);","lastModifiedDate":"2023-10-12"},{"lineNumber":20,"author":{"gitId":"ChongWeiJie29"},"content":"    private PrescriptionListStorage prescriptionListStorage;","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"ChongWeiJie29"},"content":"    private UserPrefsStoragePrescription userPrefsStorage;","lastModifiedDate":"2023-10-12"},{"lineNumber":22,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"ChongWeiJie29"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":24,"author":{"gitId":"ChongWeiJie29"},"content":"     * Creates a {@code StorageManagerPrescription} with the given {@code PrescriptionListStorage}","lastModifiedDate":"2023-10-12"},{"lineNumber":25,"author":{"gitId":"ChongWeiJie29"},"content":"     * and {@code UserPrefStorage}.","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"ChongWeiJie29"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":27,"author":{"gitId":"ChongWeiJie29"},"content":"    public StorageManagerPrescription(PrescriptionListStorage prescriptionListStorage,","lastModifiedDate":"2023-10-12"},{"lineNumber":28,"author":{"gitId":"ChongWeiJie29"},"content":"        UserPrefsStoragePrescription userPrefsStorage) {","lastModifiedDate":"2023-10-12"},{"lineNumber":29,"author":{"gitId":"ChongWeiJie29"},"content":"        this.prescriptionListStorage \u003d prescriptionListStorage;","lastModifiedDate":"2023-10-12"},{"lineNumber":30,"author":{"gitId":"ChongWeiJie29"},"content":"        this.userPrefsStorage \u003d userPrefsStorage;","lastModifiedDate":"2023-10-12"},{"lineNumber":31,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":32,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":33,"author":{"gitId":"ChongWeiJie29"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-10-12"},{"lineNumber":34,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":35,"author":{"gitId":"ChongWeiJie29"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":36,"author":{"gitId":"ChongWeiJie29"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2023-10-12"},{"lineNumber":37,"author":{"gitId":"ChongWeiJie29"},"content":"        return userPrefsStorage.getUserPrefsFilePath();","lastModifiedDate":"2023-10-12"},{"lineNumber":38,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":39,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":40,"author":{"gitId":"ChongWeiJie29"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":41,"author":{"gitId":"ChongWeiJie29"},"content":"    public Optional\u003cUserPrefsPrescription\u003e readUserPrefs() throws DataLoadingException {","lastModifiedDate":"2023-10-12"},{"lineNumber":42,"author":{"gitId":"ChongWeiJie29"},"content":"        return userPrefsStorage.readUserPrefs();","lastModifiedDate":"2023-10-12"},{"lineNumber":43,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":44,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":45,"author":{"gitId":"ChongWeiJie29"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":46,"author":{"gitId":"ChongWeiJie29"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefsPrescription userPrefs) throws IOException {","lastModifiedDate":"2023-10-12"},{"lineNumber":47,"author":{"gitId":"ChongWeiJie29"},"content":"        userPrefsStorage.saveUserPrefs(userPrefs);","lastModifiedDate":"2023-10-12"},{"lineNumber":48,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":49,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":50,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":51,"author":{"gitId":"ChongWeiJie29"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d PrescriptionList methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-10-12"},{"lineNumber":52,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":53,"author":{"gitId":"ChongWeiJie29"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":54,"author":{"gitId":"ChongWeiJie29"},"content":"    public Path getPrescriptionListFilePath() {","lastModifiedDate":"2023-10-12"},{"lineNumber":55,"author":{"gitId":"ChongWeiJie29"},"content":"        return prescriptionListStorage.getPrescriptionListFilePath();","lastModifiedDate":"2023-10-12"},{"lineNumber":56,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":57,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":58,"author":{"gitId":"ChongWeiJie29"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":59,"author":{"gitId":"ChongWeiJie29"},"content":"    public Optional\u003cReadOnlyPrescriptionList\u003e readPrescriptionList() throws DataLoadingException {","lastModifiedDate":"2023-10-12"},{"lineNumber":60,"author":{"gitId":"ChongWeiJie29"},"content":"        return readPrescriptionList(prescriptionListStorage.getPrescriptionListFilePath());","lastModifiedDate":"2023-10-12"},{"lineNumber":61,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":62,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":63,"author":{"gitId":"ChongWeiJie29"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":64,"author":{"gitId":"ChongWeiJie29"},"content":"    public Optional\u003cReadOnlyPrescriptionList\u003e readPrescriptionList(Path filePath) throws DataLoadingException {","lastModifiedDate":"2023-10-12"},{"lineNumber":65,"author":{"gitId":"ChongWeiJie29"},"content":"        logger.fine(\"Attempting to read data from file: \" + filePath);","lastModifiedDate":"2023-10-12"},{"lineNumber":66,"author":{"gitId":"ChongWeiJie29"},"content":"        return prescriptionListStorage.readPrescriptionList(filePath);","lastModifiedDate":"2023-10-12"},{"lineNumber":67,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":68,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":69,"author":{"gitId":"ChongWeiJie29"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":70,"author":{"gitId":"ChongWeiJie29"},"content":"    public void savePrescriptionList(ReadOnlyPrescriptionList prescriptionList) throws IOException {","lastModifiedDate":"2023-10-12"},{"lineNumber":71,"author":{"gitId":"ChongWeiJie29"},"content":"        savePrescriptionList(prescriptionList, prescriptionListStorage.getPrescriptionListFilePath());","lastModifiedDate":"2023-10-12"},{"lineNumber":72,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":73,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":74,"author":{"gitId":"ChongWeiJie29"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":75,"author":{"gitId":"ChongWeiJie29"},"content":"    public void savePrescriptionList(ReadOnlyPrescriptionList prescriptionList, Path filePath) throws IOException {","lastModifiedDate":"2023-10-12"},{"lineNumber":76,"author":{"gitId":"ChongWeiJie29"},"content":"        logger.fine(\"Attempting to write to data file: \" + filePath);","lastModifiedDate":"2023-10-12"},{"lineNumber":77,"author":{"gitId":"ChongWeiJie29"},"content":"        prescriptionListStorage.savePrescriptionList(prescriptionList, filePath);","lastModifiedDate":"2023-10-12"},{"lineNumber":78,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":79,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":80,"author":{"gitId":"ChongWeiJie29"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"ChongWeiJie29":80}},{"path":"src/main/java/seedu/address/storage/StoragePrescription.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ChongWeiJie29"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"ChongWeiJie29"},"content":"import java.io.IOException;","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"ChongWeiJie29"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"ChongWeiJie29"},"content":"import java.util.Optional;","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"ChongWeiJie29"},"content":"import seedu.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"ChongWeiJie29"},"content":"import seedu.address.model.ReadOnlyPrescriptionList;","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"ChongWeiJie29"},"content":"import seedu.address.model.ReadOnlyUserPrefsPrescription;","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"ChongWeiJie29"},"content":"import seedu.address.model.UserPrefsPrescription;","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"ChongWeiJie29"},"content":"/**","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"ChongWeiJie29"},"content":" * API of the StoragePrescription component","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"ChongWeiJie29"},"content":" */","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"ChongWeiJie29"},"content":"public interface StoragePrescription extends PrescriptionListStorage, UserPrefsStoragePrescription {","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"ChongWeiJie29"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"ChongWeiJie29"},"content":"    Optional\u003cUserPrefsPrescription\u003e readUserPrefs() throws DataLoadingException;","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":20,"author":{"gitId":"ChongWeiJie29"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"ChongWeiJie29"},"content":"    void saveUserPrefs(ReadOnlyUserPrefsPrescription userPrefs) throws IOException;","lastModifiedDate":"2023-10-12"},{"lineNumber":22,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"ChongWeiJie29"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":24,"author":{"gitId":"ChongWeiJie29"},"content":"    Path getPrescriptionListFilePath();","lastModifiedDate":"2023-10-12"},{"lineNumber":25,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"ChongWeiJie29"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":27,"author":{"gitId":"ChongWeiJie29"},"content":"    Optional\u003cReadOnlyPrescriptionList\u003e readPrescriptionList() throws DataLoadingException;","lastModifiedDate":"2023-10-12"},{"lineNumber":28,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":29,"author":{"gitId":"ChongWeiJie29"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":30,"author":{"gitId":"ChongWeiJie29"},"content":"    void savePrescriptionList(ReadOnlyPrescriptionList prescriptionList) throws IOException;","lastModifiedDate":"2023-10-12"},{"lineNumber":31,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":32,"author":{"gitId":"ChongWeiJie29"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"ChongWeiJie29":32}},{"path":"src/main/java/seedu/address/storage/UserPrefsStoragePrescription.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ChongWeiJie29"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"ChongWeiJie29"},"content":"import java.io.IOException;","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"ChongWeiJie29"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"ChongWeiJie29"},"content":"import java.util.Optional;","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"ChongWeiJie29"},"content":"import seedu.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"ChongWeiJie29"},"content":"import seedu.address.model.ReadOnlyUserPrefsPrescription;","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"ChongWeiJie29"},"content":"import seedu.address.model.UserPrefsPrescription;","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"ChongWeiJie29"},"content":"/**","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"ChongWeiJie29"},"content":" * Represents a storage for {@link seedu.address.model.UserPrefs}.","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"ChongWeiJie29"},"content":" */","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"ChongWeiJie29"},"content":"public interface UserPrefsStoragePrescription {","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"ChongWeiJie29"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"ChongWeiJie29"},"content":"     * Returns the file path of the UserPrefs data file.","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"ChongWeiJie29"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"ChongWeiJie29"},"content":"    Path getUserPrefsFilePath();","lastModifiedDate":"2023-10-12"},{"lineNumber":20,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"ChongWeiJie29"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":22,"author":{"gitId":"ChongWeiJie29"},"content":"     * Returns UserPrefs data from storage.","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"ChongWeiJie29"},"content":"     * Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2023-10-12"},{"lineNumber":24,"author":{"gitId":"ChongWeiJie29"},"content":"     *","lastModifiedDate":"2023-10-12"},{"lineNumber":25,"author":{"gitId":"ChongWeiJie29"},"content":"     * @throws DataLoadingException if the loading of data from preference file failed.","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"ChongWeiJie29"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":27,"author":{"gitId":"ChongWeiJie29"},"content":"    Optional\u003cUserPrefsPrescription\u003e readUserPrefs() throws DataLoadingException;","lastModifiedDate":"2023-10-12"},{"lineNumber":28,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":29,"author":{"gitId":"ChongWeiJie29"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":30,"author":{"gitId":"ChongWeiJie29"},"content":"     * Saves the given {@link seedu.address.model.ReadOnlyUserPrefs} to the storage.","lastModifiedDate":"2023-10-12"},{"lineNumber":31,"author":{"gitId":"ChongWeiJie29"},"content":"     * @param userPrefs cannot be null.","lastModifiedDate":"2023-10-12"},{"lineNumber":32,"author":{"gitId":"ChongWeiJie29"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2023-10-12"},{"lineNumber":33,"author":{"gitId":"ChongWeiJie29"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":34,"author":{"gitId":"ChongWeiJie29"},"content":"    void saveUserPrefs(ReadOnlyUserPrefsPrescription userPrefs) throws IOException;","lastModifiedDate":"2023-10-12"},{"lineNumber":35,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":36,"author":{"gitId":"ChongWeiJie29"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"ChongWeiJie29":36}},{"path":"src/main/java/seedu/address/ui/MainWindowPrescription.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ChongWeiJie29"},"content":"package seedu.address.ui;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"ChongWeiJie29"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"ChongWeiJie29"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"ChongWeiJie29"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"ChongWeiJie29"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"ChongWeiJie29"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"ChongWeiJie29"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"ChongWeiJie29"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"ChongWeiJie29"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"ChongWeiJie29"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"ChongWeiJie29"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"ChongWeiJie29"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"ChongWeiJie29"},"content":"import seedu.address.logic.LogicPrescription;","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"ChongWeiJie29"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"ChongWeiJie29"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"ChongWeiJie29"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":20,"author":{"gitId":"ChongWeiJie29"},"content":"/**","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"ChongWeiJie29"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2023-10-12"},{"lineNumber":22,"author":{"gitId":"ChongWeiJie29"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"ChongWeiJie29"},"content":" */","lastModifiedDate":"2023-10-12"},{"lineNumber":24,"author":{"gitId":"ChongWeiJie29"},"content":"public class MainWindowPrescription extends UiPart\u003cStage\u003e {","lastModifiedDate":"2023-10-12"},{"lineNumber":25,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"ChongWeiJie29"},"content":"    private static final String FXML \u003d \"MainWindowPrescription.fxml\";","lastModifiedDate":"2023-10-12"},{"lineNumber":27,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":28,"author":{"gitId":"ChongWeiJie29"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2023-10-12"},{"lineNumber":29,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":30,"author":{"gitId":"ChongWeiJie29"},"content":"    private Stage primaryStage;","lastModifiedDate":"2023-10-12"},{"lineNumber":31,"author":{"gitId":"ChongWeiJie29"},"content":"    private LogicPrescription logic;","lastModifiedDate":"2023-10-12"},{"lineNumber":32,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":33,"author":{"gitId":"ChongWeiJie29"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2023-10-12"},{"lineNumber":34,"author":{"gitId":"ChongWeiJie29"},"content":"    private PrescriptionListPanel prescriptionListPanel;","lastModifiedDate":"2023-10-12"},{"lineNumber":35,"author":{"gitId":"ChongWeiJie29"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2023-10-12"},{"lineNumber":36,"author":{"gitId":"ChongWeiJie29"},"content":"    private HelpWindow helpWindow;","lastModifiedDate":"2023-10-12"},{"lineNumber":37,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":38,"author":{"gitId":"ChongWeiJie29"},"content":"    @FXML","lastModifiedDate":"2023-10-12"},{"lineNumber":39,"author":{"gitId":"ChongWeiJie29"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2023-10-12"},{"lineNumber":40,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":41,"author":{"gitId":"ChongWeiJie29"},"content":"    @FXML","lastModifiedDate":"2023-10-12"},{"lineNumber":42,"author":{"gitId":"ChongWeiJie29"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2023-10-12"},{"lineNumber":43,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":44,"author":{"gitId":"ChongWeiJie29"},"content":"    @FXML","lastModifiedDate":"2023-10-12"},{"lineNumber":45,"author":{"gitId":"ChongWeiJie29"},"content":"    private StackPane prescriptionListPanelPlaceholder;","lastModifiedDate":"2023-10-12"},{"lineNumber":46,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":47,"author":{"gitId":"ChongWeiJie29"},"content":"    @FXML","lastModifiedDate":"2023-10-12"},{"lineNumber":48,"author":{"gitId":"ChongWeiJie29"},"content":"    private StackPane resultDisplayPlaceholder;","lastModifiedDate":"2023-10-12"},{"lineNumber":49,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":50,"author":{"gitId":"ChongWeiJie29"},"content":"    @FXML","lastModifiedDate":"2023-10-12"},{"lineNumber":51,"author":{"gitId":"ChongWeiJie29"},"content":"    private StackPane statusbarPlaceholder;","lastModifiedDate":"2023-10-12"},{"lineNumber":52,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":53,"author":{"gitId":"ChongWeiJie29"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":54,"author":{"gitId":"ChongWeiJie29"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2023-10-12"},{"lineNumber":55,"author":{"gitId":"ChongWeiJie29"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":56,"author":{"gitId":"ChongWeiJie29"},"content":"    public MainWindowPrescription(Stage primaryStage, LogicPrescription logic) {","lastModifiedDate":"2023-10-12"},{"lineNumber":57,"author":{"gitId":"ChongWeiJie29"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2023-10-12"},{"lineNumber":58,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":59,"author":{"gitId":"ChongWeiJie29"},"content":"        // Set dependencies","lastModifiedDate":"2023-10-12"},{"lineNumber":60,"author":{"gitId":"ChongWeiJie29"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2023-10-12"},{"lineNumber":61,"author":{"gitId":"ChongWeiJie29"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2023-10-12"},{"lineNumber":62,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":63,"author":{"gitId":"ChongWeiJie29"},"content":"        // Configure the UI","lastModifiedDate":"2023-10-12"},{"lineNumber":64,"author":{"gitId":"ChongWeiJie29"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2023-10-12"},{"lineNumber":65,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":66,"author":{"gitId":"ChongWeiJie29"},"content":"        setAccelerators();","lastModifiedDate":"2023-10-12"},{"lineNumber":67,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":68,"author":{"gitId":"ChongWeiJie29"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2023-10-12"},{"lineNumber":69,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":70,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":71,"author":{"gitId":"ChongWeiJie29"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2023-10-12"},{"lineNumber":72,"author":{"gitId":"ChongWeiJie29"},"content":"        return primaryStage;","lastModifiedDate":"2023-10-12"},{"lineNumber":73,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":74,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":75,"author":{"gitId":"ChongWeiJie29"},"content":"    private void setAccelerators() {","lastModifiedDate":"2023-10-12"},{"lineNumber":76,"author":{"gitId":"ChongWeiJie29"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2023-10-12"},{"lineNumber":77,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":78,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":79,"author":{"gitId":"ChongWeiJie29"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":80,"author":{"gitId":"ChongWeiJie29"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2023-10-12"},{"lineNumber":81,"author":{"gitId":"ChongWeiJie29"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","lastModifiedDate":"2023-10-12"},{"lineNumber":82,"author":{"gitId":"ChongWeiJie29"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":83,"author":{"gitId":"ChongWeiJie29"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2023-10-12"},{"lineNumber":84,"author":{"gitId":"ChongWeiJie29"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2023-10-12"},{"lineNumber":85,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":86,"author":{"gitId":"ChongWeiJie29"},"content":"        /*","lastModifiedDate":"2023-10-12"},{"lineNumber":87,"author":{"gitId":"ChongWeiJie29"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2023-10-12"},{"lineNumber":88,"author":{"gitId":"ChongWeiJie29"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","lastModifiedDate":"2023-10-12"},{"lineNumber":89,"author":{"gitId":"ChongWeiJie29"},"content":"         * is fixed in later version of SDK.","lastModifiedDate":"2023-10-12"},{"lineNumber":90,"author":{"gitId":"ChongWeiJie29"},"content":"         *","lastModifiedDate":"2023-10-12"},{"lineNumber":91,"author":{"gitId":"ChongWeiJie29"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2023-10-12"},{"lineNumber":92,"author":{"gitId":"ChongWeiJie29"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2023-10-12"},{"lineNumber":93,"author":{"gitId":"ChongWeiJie29"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will","lastModifiedDate":"2023-10-12"},{"lineNumber":94,"author":{"gitId":"ChongWeiJie29"},"content":"         * not work when the focus is in them because the key event is consumed by","lastModifiedDate":"2023-10-12"},{"lineNumber":95,"author":{"gitId":"ChongWeiJie29"},"content":"         * the TextInputControl(s).","lastModifiedDate":"2023-10-12"},{"lineNumber":96,"author":{"gitId":"ChongWeiJie29"},"content":"         *","lastModifiedDate":"2023-10-12"},{"lineNumber":97,"author":{"gitId":"ChongWeiJie29"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2023-10-12"},{"lineNumber":98,"author":{"gitId":"ChongWeiJie29"},"content":"         * help window purposely so to support accelerators even when focus is","lastModifiedDate":"2023-10-12"},{"lineNumber":99,"author":{"gitId":"ChongWeiJie29"},"content":"         * in CommandBox or ResultDisplay.","lastModifiedDate":"2023-10-12"},{"lineNumber":100,"author":{"gitId":"ChongWeiJie29"},"content":"         */","lastModifiedDate":"2023-10-12"},{"lineNumber":101,"author":{"gitId":"ChongWeiJie29"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2023-10-12"},{"lineNumber":102,"author":{"gitId":"ChongWeiJie29"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2023-10-12"},{"lineNumber":103,"author":{"gitId":"ChongWeiJie29"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2023-10-12"},{"lineNumber":104,"author":{"gitId":"ChongWeiJie29"},"content":"                event.consume();","lastModifiedDate":"2023-10-12"},{"lineNumber":105,"author":{"gitId":"ChongWeiJie29"},"content":"            }","lastModifiedDate":"2023-10-12"},{"lineNumber":106,"author":{"gitId":"ChongWeiJie29"},"content":"        });","lastModifiedDate":"2023-10-12"},{"lineNumber":107,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":108,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":109,"author":{"gitId":"ChongWeiJie29"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":110,"author":{"gitId":"ChongWeiJie29"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2023-10-12"},{"lineNumber":111,"author":{"gitId":"ChongWeiJie29"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":112,"author":{"gitId":"ChongWeiJie29"},"content":"    void fillInnerParts() {","lastModifiedDate":"2023-10-12"},{"lineNumber":113,"author":{"gitId":"ChongWeiJie29"},"content":"        prescriptionListPanel \u003d new PrescriptionListPanel(logic.getFilteredPrescriptionList());","lastModifiedDate":"2023-10-12"},{"lineNumber":114,"author":{"gitId":"ChongWeiJie29"},"content":"        prescriptionListPanelPlaceholder.getChildren().add(prescriptionListPanel.getRoot());","lastModifiedDate":"2023-10-12"},{"lineNumber":115,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":116,"author":{"gitId":"ChongWeiJie29"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2023-10-12"},{"lineNumber":117,"author":{"gitId":"ChongWeiJie29"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2023-10-12"},{"lineNumber":118,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":119,"author":{"gitId":"ChongWeiJie29"},"content":"        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(logic.getPrescriptionListFilePath());","lastModifiedDate":"2023-10-12"},{"lineNumber":120,"author":{"gitId":"ChongWeiJie29"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2023-10-12"},{"lineNumber":121,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":122,"author":{"gitId":"ChongWeiJie29"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeCommand);","lastModifiedDate":"2023-10-12"},{"lineNumber":123,"author":{"gitId":"ChongWeiJie29"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2023-10-12"},{"lineNumber":124,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":125,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":126,"author":{"gitId":"ChongWeiJie29"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":127,"author":{"gitId":"ChongWeiJie29"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2023-10-12"},{"lineNumber":128,"author":{"gitId":"ChongWeiJie29"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":129,"author":{"gitId":"ChongWeiJie29"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2023-10-12"},{"lineNumber":130,"author":{"gitId":"ChongWeiJie29"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2023-10-12"},{"lineNumber":131,"author":{"gitId":"ChongWeiJie29"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2023-10-12"},{"lineNumber":132,"author":{"gitId":"ChongWeiJie29"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2023-10-12"},{"lineNumber":133,"author":{"gitId":"ChongWeiJie29"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2023-10-12"},{"lineNumber":134,"author":{"gitId":"ChongWeiJie29"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2023-10-12"},{"lineNumber":135,"author":{"gitId":"ChongWeiJie29"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":136,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":137,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":138,"author":{"gitId":"ChongWeiJie29"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":139,"author":{"gitId":"ChongWeiJie29"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2023-10-12"},{"lineNumber":140,"author":{"gitId":"ChongWeiJie29"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":141,"author":{"gitId":"ChongWeiJie29"},"content":"    @FXML","lastModifiedDate":"2023-10-12"},{"lineNumber":142,"author":{"gitId":"ChongWeiJie29"},"content":"    public void handleHelp() {","lastModifiedDate":"2023-10-12"},{"lineNumber":143,"author":{"gitId":"ChongWeiJie29"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2023-10-12"},{"lineNumber":144,"author":{"gitId":"ChongWeiJie29"},"content":"            helpWindow.show();","lastModifiedDate":"2023-10-12"},{"lineNumber":145,"author":{"gitId":"ChongWeiJie29"},"content":"        } else {","lastModifiedDate":"2023-10-12"},{"lineNumber":146,"author":{"gitId":"ChongWeiJie29"},"content":"            helpWindow.focus();","lastModifiedDate":"2023-10-12"},{"lineNumber":147,"author":{"gitId":"ChongWeiJie29"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":148,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":149,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":150,"author":{"gitId":"ChongWeiJie29"},"content":"    void show() {","lastModifiedDate":"2023-10-12"},{"lineNumber":151,"author":{"gitId":"ChongWeiJie29"},"content":"        primaryStage.show();","lastModifiedDate":"2023-10-12"},{"lineNumber":152,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":153,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":154,"author":{"gitId":"ChongWeiJie29"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":155,"author":{"gitId":"ChongWeiJie29"},"content":"     * Closes the application.","lastModifiedDate":"2023-10-12"},{"lineNumber":156,"author":{"gitId":"ChongWeiJie29"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":157,"author":{"gitId":"ChongWeiJie29"},"content":"    @FXML","lastModifiedDate":"2023-10-12"},{"lineNumber":158,"author":{"gitId":"ChongWeiJie29"},"content":"    private void handleExit() {","lastModifiedDate":"2023-10-12"},{"lineNumber":159,"author":{"gitId":"ChongWeiJie29"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2023-10-12"},{"lineNumber":160,"author":{"gitId":"ChongWeiJie29"},"content":"                (int) primaryStage.getX(), (int) primaryStage.getY());","lastModifiedDate":"2023-10-12"},{"lineNumber":161,"author":{"gitId":"ChongWeiJie29"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2023-10-12"},{"lineNumber":162,"author":{"gitId":"ChongWeiJie29"},"content":"        helpWindow.hide();","lastModifiedDate":"2023-10-12"},{"lineNumber":163,"author":{"gitId":"ChongWeiJie29"},"content":"        primaryStage.hide();","lastModifiedDate":"2023-10-12"},{"lineNumber":164,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":165,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":166,"author":{"gitId":"ChongWeiJie29"},"content":"    public PrescriptionListPanel getPersonListPanel() {","lastModifiedDate":"2023-10-12"},{"lineNumber":167,"author":{"gitId":"ChongWeiJie29"},"content":"        return prescriptionListPanel;","lastModifiedDate":"2023-10-12"},{"lineNumber":168,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":169,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":170,"author":{"gitId":"ChongWeiJie29"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":171,"author":{"gitId":"ChongWeiJie29"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2023-10-12"},{"lineNumber":172,"author":{"gitId":"ChongWeiJie29"},"content":"     *","lastModifiedDate":"2023-10-12"},{"lineNumber":173,"author":{"gitId":"ChongWeiJie29"},"content":"     * @see seedu.address.logic.Logic#execute(String)","lastModifiedDate":"2023-10-12"},{"lineNumber":174,"author":{"gitId":"ChongWeiJie29"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":175,"author":{"gitId":"ChongWeiJie29"},"content":"    private CommandResult executeCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2023-10-12"},{"lineNumber":176,"author":{"gitId":"ChongWeiJie29"},"content":"        try {","lastModifiedDate":"2023-10-12"},{"lineNumber":177,"author":{"gitId":"ChongWeiJie29"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2023-10-12"},{"lineNumber":178,"author":{"gitId":"ChongWeiJie29"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2023-10-12"},{"lineNumber":179,"author":{"gitId":"ChongWeiJie29"},"content":"            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2023-10-12"},{"lineNumber":180,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":181,"author":{"gitId":"ChongWeiJie29"},"content":"            if (commandResult.isShowHelp()) {","lastModifiedDate":"2023-10-12"},{"lineNumber":182,"author":{"gitId":"ChongWeiJie29"},"content":"                handleHelp();","lastModifiedDate":"2023-10-12"},{"lineNumber":183,"author":{"gitId":"ChongWeiJie29"},"content":"            }","lastModifiedDate":"2023-10-12"},{"lineNumber":184,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":185,"author":{"gitId":"ChongWeiJie29"},"content":"            if (commandResult.isExit()) {","lastModifiedDate":"2023-10-12"},{"lineNumber":186,"author":{"gitId":"ChongWeiJie29"},"content":"                handleExit();","lastModifiedDate":"2023-10-12"},{"lineNumber":187,"author":{"gitId":"ChongWeiJie29"},"content":"            }","lastModifiedDate":"2023-10-12"},{"lineNumber":188,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":189,"author":{"gitId":"ChongWeiJie29"},"content":"            return commandResult;","lastModifiedDate":"2023-10-12"},{"lineNumber":190,"author":{"gitId":"ChongWeiJie29"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2023-10-12"},{"lineNumber":191,"author":{"gitId":"ChongWeiJie29"},"content":"            logger.info(\"An error occurred while executing command: \" + commandText);","lastModifiedDate":"2023-10-12"},{"lineNumber":192,"author":{"gitId":"ChongWeiJie29"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2023-10-12"},{"lineNumber":193,"author":{"gitId":"ChongWeiJie29"},"content":"            throw e;","lastModifiedDate":"2023-10-12"},{"lineNumber":194,"author":{"gitId":"ChongWeiJie29"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":195,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":196,"author":{"gitId":"ChongWeiJie29"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"ChongWeiJie29":196}},{"path":"src/main/java/seedu/address/ui/PrescriptionCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ChongWeiJie29"},"content":"package seedu.address.ui;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"ChongWeiJie29"},"content":"// import java.util.Comparator;","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"ChongWeiJie29"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"ChongWeiJie29"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"ChongWeiJie29"},"content":"// import javafx.scene.layout.FlowPane;","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"ChongWeiJie29"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"ChongWeiJie29"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"ChongWeiJie29"},"content":"import seedu.address.model.prescription.Prescription;","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"ChongWeiJie29"},"content":"/**","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"ChongWeiJie29"},"content":" * An UI component that displays information of a {@code Prescription}.","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"ChongWeiJie29"},"content":" */","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"ChongWeiJie29"},"content":"public class PrescriptionCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"ChongWeiJie29"},"content":"    private static final String FXML \u003d \"PrescriptionListCard.fxml\";","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"ChongWeiJie29"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":20,"author":{"gitId":"ChongWeiJie29"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"ChongWeiJie29"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2023-10-12"},{"lineNumber":22,"author":{"gitId":"ChongWeiJie29"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"ChongWeiJie29"},"content":"     *","lastModifiedDate":"2023-10-12"},{"lineNumber":24,"author":{"gitId":"ChongWeiJie29"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":25,"author":{"gitId":"ChongWeiJie29"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":27,"author":{"gitId":"ChongWeiJie29"},"content":"    public final Prescription prescription;","lastModifiedDate":"2023-10-12"},{"lineNumber":28,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":29,"author":{"gitId":"ChongWeiJie29"},"content":"    @FXML","lastModifiedDate":"2023-10-12"},{"lineNumber":30,"author":{"gitId":"ChongWeiJie29"},"content":"    private HBox cardPane;","lastModifiedDate":"2023-10-12"},{"lineNumber":31,"author":{"gitId":"ChongWeiJie29"},"content":"    @FXML","lastModifiedDate":"2023-10-12"},{"lineNumber":32,"author":{"gitId":"ChongWeiJie29"},"content":"    private Label name;","lastModifiedDate":"2023-10-12"},{"lineNumber":33,"author":{"gitId":"ChongWeiJie29"},"content":"    @FXML","lastModifiedDate":"2023-10-12"},{"lineNumber":34,"author":{"gitId":"ChongWeiJie29"},"content":"    private Label id;","lastModifiedDate":"2023-10-12"},{"lineNumber":35,"author":{"gitId":"ChongWeiJie29"},"content":"    @FXML","lastModifiedDate":"2023-10-12"},{"lineNumber":36,"author":{"gitId":"ChongWeiJie29"},"content":"    private Label dosage;","lastModifiedDate":"2023-10-12"},{"lineNumber":37,"author":{"gitId":"ChongWeiJie29"},"content":"    @FXML","lastModifiedDate":"2023-10-12"},{"lineNumber":38,"author":{"gitId":"ChongWeiJie29"},"content":"    private Label frequency;","lastModifiedDate":"2023-10-12"},{"lineNumber":39,"author":{"gitId":"ChongWeiJie29"},"content":"    @FXML","lastModifiedDate":"2023-10-12"},{"lineNumber":40,"author":{"gitId":"ChongWeiJie29"},"content":"    private Label startDate;","lastModifiedDate":"2023-10-12"},{"lineNumber":41,"author":{"gitId":"ChongWeiJie29"},"content":"    @FXML","lastModifiedDate":"2023-10-12"},{"lineNumber":42,"author":{"gitId":"ChongWeiJie29"},"content":"    private Label endDate;","lastModifiedDate":"2023-10-12"},{"lineNumber":43,"author":{"gitId":"ChongWeiJie29"},"content":"    @FXML","lastModifiedDate":"2023-10-12"},{"lineNumber":44,"author":{"gitId":"ChongWeiJie29"},"content":"    private Label expiryDate;","lastModifiedDate":"2023-10-12"},{"lineNumber":45,"author":{"gitId":"ChongWeiJie29"},"content":"    @FXML","lastModifiedDate":"2023-10-12"},{"lineNumber":46,"author":{"gitId":"ChongWeiJie29"},"content":"    private Label totalStock;","lastModifiedDate":"2023-10-12"},{"lineNumber":47,"author":{"gitId":"ChongWeiJie29"},"content":"    @FXML","lastModifiedDate":"2023-10-12"},{"lineNumber":48,"author":{"gitId":"ChongWeiJie29"},"content":"    private Label note;","lastModifiedDate":"2023-10-12"},{"lineNumber":49,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":50,"author":{"gitId":"RoeReRe"},"content":"    private String dosageHeader \u003d \"Dosage: \";","lastModifiedDate":"2023-10-15"},{"lineNumber":51,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":52,"author":{"gitId":"RoeReRe"},"content":"    private String frequencyHeader \u003d \"Frequency: \";","lastModifiedDate":"2023-10-15"},{"lineNumber":53,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":54,"author":{"gitId":"RoeReRe"},"content":"    private String startDateHeader \u003d \"Start date: \";","lastModifiedDate":"2023-10-15"},{"lineNumber":55,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":56,"author":{"gitId":"RoeReRe"},"content":"    private String endDateHeader \u003d \"End date: \";","lastModifiedDate":"2023-10-15"},{"lineNumber":57,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":58,"author":{"gitId":"RoeReRe"},"content":"    private String expiryDateHeader \u003d \"Expiry date: \";","lastModifiedDate":"2023-10-15"},{"lineNumber":59,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":60,"author":{"gitId":"RoeReRe"},"content":"    private String totalStockHeader \u003d \"Total stock: \";","lastModifiedDate":"2023-10-15"},{"lineNumber":61,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":62,"author":{"gitId":"RoeReRe"},"content":"    private String noteHeader \u003d \"Note: \";","lastModifiedDate":"2023-10-15"},{"lineNumber":63,"author":{"gitId":"RoeReRe"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":64,"author":{"gitId":"ChongWeiJie29"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":65,"author":{"gitId":"ChongWeiJie29"},"content":"     * Creates a {@code PrescriptionCode} with the given {@code Prescription} and index to display.","lastModifiedDate":"2023-10-12"},{"lineNumber":66,"author":{"gitId":"ChongWeiJie29"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":67,"author":{"gitId":"ChongWeiJie29"},"content":"    public PrescriptionCard(Prescription prescription, int displayedIndex) {","lastModifiedDate":"2023-10-12"},{"lineNumber":68,"author":{"gitId":"ChongWeiJie29"},"content":"        super(FXML);","lastModifiedDate":"2023-10-12"},{"lineNumber":69,"author":{"gitId":"ChongWeiJie29"},"content":"        this.prescription \u003d prescription;","lastModifiedDate":"2023-10-12"},{"lineNumber":70,"author":{"gitId":"ChongWeiJie29"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2023-10-12"},{"lineNumber":71,"author":{"gitId":"ChongWeiJie29"},"content":"        name.setText(prescription.getName().fullName);","lastModifiedDate":"2023-10-12"},{"lineNumber":72,"author":{"gitId":"RoeReRe"},"content":"        dosage.setText(dosageHeader + prescription.getDosage().fullDosage);","lastModifiedDate":"2023-10-15"},{"lineNumber":73,"author":{"gitId":"RoeReRe"},"content":"        frequency.setText(frequencyHeader + prescription.getFrequency().fullFrequency);","lastModifiedDate":"2023-10-15"},{"lineNumber":74,"author":{"gitId":"RoeReRe"},"content":"        startDate.setText(startDateHeader + prescription.getStartDate().fullDate);","lastModifiedDate":"2023-10-15"},{"lineNumber":75,"author":{"gitId":"RoeReRe"},"content":"        endDate.setText(endDateHeader + prescription.getEndDate().fullDate);","lastModifiedDate":"2023-10-15"},{"lineNumber":76,"author":{"gitId":"RoeReRe"},"content":"        expiryDate.setText(expiryDateHeader + prescription.getExpiryDate().fullDate);","lastModifiedDate":"2023-10-15"},{"lineNumber":77,"author":{"gitId":"RoeReRe"},"content":"        totalStock.setText(totalStockHeader + prescription.getTotalStock().fullStock);","lastModifiedDate":"2023-10-15"},{"lineNumber":78,"author":{"gitId":"RoeReRe"},"content":"        note.setText(noteHeader + prescription.getNote().fullNote);","lastModifiedDate":"2023-10-15"},{"lineNumber":79,"author":{"gitId":"ChongWeiJie29"},"content":"        // prescription.getTags().stream()","lastModifiedDate":"2023-10-12"},{"lineNumber":80,"author":{"gitId":"ChongWeiJie29"},"content":"        //         .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2023-10-12"},{"lineNumber":81,"author":{"gitId":"ChongWeiJie29"},"content":"        //         .forEach(tag -\u003e tags.getChildren().add(new Label(tag.tagName)));","lastModifiedDate":"2023-10-12"},{"lineNumber":82,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":83,"author":{"gitId":"ChongWeiJie29"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"ChongWeiJie29":62,"RoeReRe":21}},{"path":"src/main/java/seedu/address/ui/PrescriptionListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ChongWeiJie29"},"content":"package seedu.address.ui;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"ChongWeiJie29"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"ChongWeiJie29"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"ChongWeiJie29"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"ChongWeiJie29"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"ChongWeiJie29"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"ChongWeiJie29"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"ChongWeiJie29"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"ChongWeiJie29"},"content":"import seedu.address.model.prescription.Prescription;","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"ChongWeiJie29"},"content":"/**","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"ChongWeiJie29"},"content":" * Panel containing the list of prescriptions.","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"ChongWeiJie29"},"content":" */","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"ChongWeiJie29"},"content":"public class PrescriptionListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"ChongWeiJie29"},"content":"    private static final String FXML \u003d \"PrescriptionListPanel.fxml\";","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"ChongWeiJie29"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(PrescriptionListPanel.class);","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":20,"author":{"gitId":"ChongWeiJie29"},"content":"    @FXML","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"ChongWeiJie29"},"content":"    private ListView\u003cPrescription\u003e prescriptionListView;","lastModifiedDate":"2023-10-12"},{"lineNumber":22,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"ChongWeiJie29"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":24,"author":{"gitId":"ChongWeiJie29"},"content":"     * Creates a {@code PrescriptionListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2023-10-12"},{"lineNumber":25,"author":{"gitId":"ChongWeiJie29"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"ChongWeiJie29"},"content":"    public PrescriptionListPanel(ObservableList\u003cPrescription\u003e prescriptionList) {","lastModifiedDate":"2023-10-12"},{"lineNumber":27,"author":{"gitId":"ChongWeiJie29"},"content":"        super(FXML);","lastModifiedDate":"2023-10-12"},{"lineNumber":28,"author":{"gitId":"ChongWeiJie29"},"content":"        prescriptionListView.setItems(prescriptionList);","lastModifiedDate":"2023-10-12"},{"lineNumber":29,"author":{"gitId":"ChongWeiJie29"},"content":"        prescriptionListView.setCellFactory(listView -\u003e new PrescriptionListViewCell());","lastModifiedDate":"2023-10-12"},{"lineNumber":30,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":31,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":32,"author":{"gitId":"ChongWeiJie29"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":33,"author":{"gitId":"ChongWeiJie29"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Prescription} using a {@code PrescriptionCard}.","lastModifiedDate":"2023-10-12"},{"lineNumber":34,"author":{"gitId":"ChongWeiJie29"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":35,"author":{"gitId":"ChongWeiJie29"},"content":"    class PrescriptionListViewCell extends ListCell\u003cPrescription\u003e {","lastModifiedDate":"2023-10-12"},{"lineNumber":36,"author":{"gitId":"ChongWeiJie29"},"content":"        @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":37,"author":{"gitId":"ChongWeiJie29"},"content":"        protected void updateItem(Prescription prescription, boolean empty) {","lastModifiedDate":"2023-10-12"},{"lineNumber":38,"author":{"gitId":"ChongWeiJie29"},"content":"            super.updateItem(prescription, empty);","lastModifiedDate":"2023-10-12"},{"lineNumber":39,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":40,"author":{"gitId":"ChongWeiJie29"},"content":"            if (empty || prescription \u003d\u003d null) {","lastModifiedDate":"2023-10-12"},{"lineNumber":41,"author":{"gitId":"ChongWeiJie29"},"content":"                setGraphic(null);","lastModifiedDate":"2023-10-12"},{"lineNumber":42,"author":{"gitId":"ChongWeiJie29"},"content":"                setText(null);","lastModifiedDate":"2023-10-12"},{"lineNumber":43,"author":{"gitId":"ChongWeiJie29"},"content":"            } else {","lastModifiedDate":"2023-10-12"},{"lineNumber":44,"author":{"gitId":"ChongWeiJie29"},"content":"                setGraphic(new PrescriptionCard(prescription, getIndex() + 1).getRoot());","lastModifiedDate":"2023-10-12"},{"lineNumber":45,"author":{"gitId":"ChongWeiJie29"},"content":"            }","lastModifiedDate":"2023-10-12"},{"lineNumber":46,"author":{"gitId":"ChongWeiJie29"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":47,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":48,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":49,"author":{"gitId":"ChongWeiJie29"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"ChongWeiJie29":49}},{"path":"src/main/java/seedu/address/ui/UiManagerPrescription.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ChongWeiJie29"},"content":"package seedu.address.ui;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"ChongWeiJie29"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"ChongWeiJie29"},"content":"import javafx.application.Platform;","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"ChongWeiJie29"},"content":"import javafx.scene.control.Alert;","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"ChongWeiJie29"},"content":"import javafx.scene.control.Alert.AlertType;","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"ChongWeiJie29"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"ChongWeiJie29"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"ChongWeiJie29"},"content":"import seedu.address.MainAppPrescription;","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"ChongWeiJie29"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"ChongWeiJie29"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"ChongWeiJie29"},"content":"import seedu.address.logic.LogicPrescription;","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"ChongWeiJie29"},"content":"/**","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"ChongWeiJie29"},"content":" * The manager of the UI component.","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"ChongWeiJie29"},"content":" */","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"ChongWeiJie29"},"content":"public class UiManagerPrescription implements Ui {","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":20,"author":{"gitId":"ChongWeiJie29"},"content":"    public static final String ALERT_DIALOG_PANE_FIELD_ID \u003d \"alertDialogPane\";","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":22,"author":{"gitId":"ChongWeiJie29"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(UiManagerPrescription.class);","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"ChongWeiJie29"},"content":"    private static final String ICON_APPLICATION \u003d \"/images/address_book_32.png\";","lastModifiedDate":"2023-10-12"},{"lineNumber":24,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":25,"author":{"gitId":"ChongWeiJie29"},"content":"    private LogicPrescription logic;","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"ChongWeiJie29"},"content":"    private MainWindowPrescription mainWindow;","lastModifiedDate":"2023-10-12"},{"lineNumber":27,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":28,"author":{"gitId":"ChongWeiJie29"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":29,"author":{"gitId":"ChongWeiJie29"},"content":"     * Creates a {@code UiManagerPrescription} with the given {@code Logic}.","lastModifiedDate":"2023-10-12"},{"lineNumber":30,"author":{"gitId":"ChongWeiJie29"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":31,"author":{"gitId":"ChongWeiJie29"},"content":"    public UiManagerPrescription(LogicPrescription logic) {","lastModifiedDate":"2023-10-12"},{"lineNumber":32,"author":{"gitId":"ChongWeiJie29"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2023-10-12"},{"lineNumber":33,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":34,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":35,"author":{"gitId":"ChongWeiJie29"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":36,"author":{"gitId":"ChongWeiJie29"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2023-10-12"},{"lineNumber":37,"author":{"gitId":"ChongWeiJie29"},"content":"        logger.info(\"Starting UI...\");","lastModifiedDate":"2023-10-12"},{"lineNumber":38,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":39,"author":{"gitId":"ChongWeiJie29"},"content":"        //Set the application icon.","lastModifiedDate":"2023-10-12"},{"lineNumber":40,"author":{"gitId":"ChongWeiJie29"},"content":"        primaryStage.getIcons().add(getImage(ICON_APPLICATION));","lastModifiedDate":"2023-10-12"},{"lineNumber":41,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":42,"author":{"gitId":"ChongWeiJie29"},"content":"        try {","lastModifiedDate":"2023-10-12"},{"lineNumber":43,"author":{"gitId":"ChongWeiJie29"},"content":"            mainWindow \u003d new MainWindowPrescription(primaryStage, logic);","lastModifiedDate":"2023-10-12"},{"lineNumber":44,"author":{"gitId":"ChongWeiJie29"},"content":"            mainWindow.show(); //This should be called before creating other UI parts","lastModifiedDate":"2023-10-12"},{"lineNumber":45,"author":{"gitId":"ChongWeiJie29"},"content":"            mainWindow.fillInnerParts();","lastModifiedDate":"2023-10-12"},{"lineNumber":46,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":47,"author":{"gitId":"ChongWeiJie29"},"content":"        } catch (Throwable e) {","lastModifiedDate":"2023-10-12"},{"lineNumber":48,"author":{"gitId":"ChongWeiJie29"},"content":"            logger.severe(StringUtil.getDetails(e));","lastModifiedDate":"2023-10-12"},{"lineNumber":49,"author":{"gitId":"ChongWeiJie29"},"content":"            showFatalErrorDialogAndShutdown(\"Fatal error during initializing\", e);","lastModifiedDate":"2023-10-12"},{"lineNumber":50,"author":{"gitId":"ChongWeiJie29"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":51,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":52,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":53,"author":{"gitId":"ChongWeiJie29"},"content":"    private Image getImage(String imagePath) {","lastModifiedDate":"2023-10-12"},{"lineNumber":54,"author":{"gitId":"ChongWeiJie29"},"content":"        return new Image(MainAppPrescription.class.getResourceAsStream(imagePath));","lastModifiedDate":"2023-10-12"},{"lineNumber":55,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":56,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":57,"author":{"gitId":"ChongWeiJie29"},"content":"    void showAlertDialogAndWait(Alert.AlertType type, String title, String headerText, String contentText) {","lastModifiedDate":"2023-10-12"},{"lineNumber":58,"author":{"gitId":"ChongWeiJie29"},"content":"        showAlertDialogAndWait(mainWindow.getPrimaryStage(), type, title, headerText, contentText);","lastModifiedDate":"2023-10-12"},{"lineNumber":59,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":60,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":61,"author":{"gitId":"ChongWeiJie29"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":62,"author":{"gitId":"ChongWeiJie29"},"content":"     * Shows an alert dialog on {@code owner} with the given parameters.","lastModifiedDate":"2023-10-12"},{"lineNumber":63,"author":{"gitId":"ChongWeiJie29"},"content":"     * This method only returns after the user has closed the alert dialog.","lastModifiedDate":"2023-10-12"},{"lineNumber":64,"author":{"gitId":"ChongWeiJie29"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":65,"author":{"gitId":"ChongWeiJie29"},"content":"    private static void showAlertDialogAndWait(Stage owner, AlertType type, String title, String headerText,","lastModifiedDate":"2023-10-12"},{"lineNumber":66,"author":{"gitId":"ChongWeiJie29"},"content":"                                               String contentText) {","lastModifiedDate":"2023-10-12"},{"lineNumber":67,"author":{"gitId":"ChongWeiJie29"},"content":"        final Alert alert \u003d new Alert(type);","lastModifiedDate":"2023-10-12"},{"lineNumber":68,"author":{"gitId":"ChongWeiJie29"},"content":"        alert.getDialogPane().getStylesheets().add(\"view/DarkTheme.css\");","lastModifiedDate":"2023-10-12"},{"lineNumber":69,"author":{"gitId":"ChongWeiJie29"},"content":"        alert.initOwner(owner);","lastModifiedDate":"2023-10-12"},{"lineNumber":70,"author":{"gitId":"ChongWeiJie29"},"content":"        alert.setTitle(title);","lastModifiedDate":"2023-10-12"},{"lineNumber":71,"author":{"gitId":"ChongWeiJie29"},"content":"        alert.setHeaderText(headerText);","lastModifiedDate":"2023-10-12"},{"lineNumber":72,"author":{"gitId":"ChongWeiJie29"},"content":"        alert.setContentText(contentText);","lastModifiedDate":"2023-10-12"},{"lineNumber":73,"author":{"gitId":"ChongWeiJie29"},"content":"        alert.getDialogPane().setId(ALERT_DIALOG_PANE_FIELD_ID);","lastModifiedDate":"2023-10-12"},{"lineNumber":74,"author":{"gitId":"ChongWeiJie29"},"content":"        alert.showAndWait();","lastModifiedDate":"2023-10-12"},{"lineNumber":75,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":76,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":77,"author":{"gitId":"ChongWeiJie29"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":78,"author":{"gitId":"ChongWeiJie29"},"content":"     * Shows an error alert dialog with {@code title} and error message, {@code e},","lastModifiedDate":"2023-10-12"},{"lineNumber":79,"author":{"gitId":"ChongWeiJie29"},"content":"     * and exits the application after the user has closed the alert dialog.","lastModifiedDate":"2023-10-12"},{"lineNumber":80,"author":{"gitId":"ChongWeiJie29"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":81,"author":{"gitId":"ChongWeiJie29"},"content":"    private void showFatalErrorDialogAndShutdown(String title, Throwable e) {","lastModifiedDate":"2023-10-12"},{"lineNumber":82,"author":{"gitId":"ChongWeiJie29"},"content":"        logger.severe(title + \" \" + e.getMessage() + StringUtil.getDetails(e));","lastModifiedDate":"2023-10-12"},{"lineNumber":83,"author":{"gitId":"ChongWeiJie29"},"content":"        showAlertDialogAndWait(Alert.AlertType.ERROR, title, e.getMessage(), e.toString());","lastModifiedDate":"2023-10-12"},{"lineNumber":84,"author":{"gitId":"ChongWeiJie29"},"content":"        Platform.exit();","lastModifiedDate":"2023-10-12"},{"lineNumber":85,"author":{"gitId":"ChongWeiJie29"},"content":"        System.exit(1);","lastModifiedDate":"2023-10-12"},{"lineNumber":86,"author":{"gitId":"ChongWeiJie29"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":87,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":88,"author":{"gitId":"ChongWeiJie29"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"ChongWeiJie29":88}},{"path":"src/main/resources/view/MainWindowPrescription.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ChongWeiJie29"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"ChongWeiJie29"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"ChongWeiJie29"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"ChongWeiJie29"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"ChongWeiJie29"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"ChongWeiJie29"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"ChongWeiJie29"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"ChongWeiJie29"},"content":"\u003c?import javafx.scene.control.SplitPane?\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"ChongWeiJie29"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"ChongWeiJie29"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"ChongWeiJie29"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"ChongWeiJie29"},"content":"\u003cfx:root type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"ChongWeiJie29"},"content":"         title\u003d\"Address App\" minWidth\u003d\"450\" minHeight\u003d\"600\" onCloseRequest\u003d\"#handleExit\"\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"ChongWeiJie29"},"content":"  \u003cicons\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"ChongWeiJie29"},"content":"    \u003cImage url\u003d\"@/images/address_book_32.png\" /\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"ChongWeiJie29"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"ChongWeiJie29"},"content":"  \u003cscene\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":20,"author":{"gitId":"ChongWeiJie29"},"content":"    \u003cScene\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"ChongWeiJie29"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":22,"author":{"gitId":"ChongWeiJie29"},"content":"        \u003cURL value\u003d\"@DarkTheme.css\" /\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"ChongWeiJie29"},"content":"        \u003cURL value\u003d\"@Extensions.css\" /\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":24,"author":{"gitId":"ChongWeiJie29"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":25,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"ChongWeiJie29"},"content":"      \u003cVBox\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":27,"author":{"gitId":"ChongWeiJie29"},"content":"        \u003cMenuBar fx:id\u003d\"menuBar\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":28,"author":{"gitId":"ChongWeiJie29"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":29,"author":{"gitId":"ChongWeiJie29"},"content":"            \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\" /\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":30,"author":{"gitId":"ChongWeiJie29"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":31,"author":{"gitId":"ChongWeiJie29"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":32,"author":{"gitId":"ChongWeiJie29"},"content":"            \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\" /\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":33,"author":{"gitId":"ChongWeiJie29"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":34,"author":{"gitId":"ChongWeiJie29"},"content":"        \u003c/MenuBar\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":35,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":36,"author":{"gitId":"ChongWeiJie29"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"commandBoxPlaceholder\" styleClass\u003d\"pane-with-border\"\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":37,"author":{"gitId":"ChongWeiJie29"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":38,"author":{"gitId":"ChongWeiJie29"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":39,"author":{"gitId":"ChongWeiJie29"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":40,"author":{"gitId":"ChongWeiJie29"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":41,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":42,"author":{"gitId":"ChongWeiJie29"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"resultDisplayPlaceholder\" styleClass\u003d\"pane-with-border\"","lastModifiedDate":"2023-10-12"},{"lineNumber":43,"author":{"gitId":"ChongWeiJie29"},"content":"                   minHeight\u003d\"100\" prefHeight\u003d\"100\" maxHeight\u003d\"100\"\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":44,"author":{"gitId":"ChongWeiJie29"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":45,"author":{"gitId":"ChongWeiJie29"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":46,"author":{"gitId":"ChongWeiJie29"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":47,"author":{"gitId":"ChongWeiJie29"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":48,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":49,"author":{"gitId":"ChongWeiJie29"},"content":"        \u003cVBox fx:id\u003d\"personList\" styleClass\u003d\"pane-with-border\" minWidth\u003d\"340\" prefWidth\u003d\"340\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":50,"author":{"gitId":"ChongWeiJie29"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":51,"author":{"gitId":"ChongWeiJie29"},"content":"            \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\" /\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":52,"author":{"gitId":"ChongWeiJie29"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":53,"author":{"gitId":"ChongWeiJie29"},"content":"          \u003cStackPane fx:id\u003d\"prescriptionListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":54,"author":{"gitId":"ChongWeiJie29"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":55,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":56,"author":{"gitId":"ChongWeiJie29"},"content":"        \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" VBox.vgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":57,"author":{"gitId":"ChongWeiJie29"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":58,"author":{"gitId":"ChongWeiJie29"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":59,"author":{"gitId":"ChongWeiJie29"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":60,"author":{"gitId":"ChongWeiJie29"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"ChongWeiJie29":60}},{"path":"src/main/resources/view/PrescriptionListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ChongWeiJie29"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"ChongWeiJie29"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"ChongWeiJie29"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"ChongWeiJie29"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"ChongWeiJie29"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"ChongWeiJie29"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"ChongWeiJie29"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"ChongWeiJie29"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"ChongWeiJie29"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"ChongWeiJie29"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"ChongWeiJie29"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"ChongWeiJie29"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"ChongWeiJie29"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"ChongWeiJie29"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"ChongWeiJie29"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"ChongWeiJie29"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"ChongWeiJie29"},"content":"        \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":20,"author":{"gitId":"ChongWeiJie29"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"ChongWeiJie29"},"content":"      \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":22,"author":{"gitId":"ChongWeiJie29"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"ChongWeiJie29"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":24,"author":{"gitId":"ChongWeiJie29"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":25,"author":{"gitId":"ChongWeiJie29"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"ChongWeiJie29"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":27,"author":{"gitId":"ChongWeiJie29"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":28,"author":{"gitId":"ChongWeiJie29"},"content":"        \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":29,"author":{"gitId":"ChongWeiJie29"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":30,"author":{"gitId":"ChongWeiJie29"},"content":"      \u003c!--FlowPane fx:id\u003d\"tags\" /--\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":31,"author":{"gitId":"ChongWeiJie29"},"content":"      \u003cLabel fx:id\u003d\"dosage\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$dosage\" /\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":32,"author":{"gitId":"ChongWeiJie29"},"content":"      \u003cLabel fx:id\u003d\"frequency\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$frequency\" /\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":33,"author":{"gitId":"ChongWeiJie29"},"content":"      \u003cLabel fx:id\u003d\"startDate\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$startDate\" /\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":34,"author":{"gitId":"ChongWeiJie29"},"content":"      \u003cLabel fx:id\u003d\"endDate\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$endDate\" /\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":35,"author":{"gitId":"ChongWeiJie29"},"content":"      \u003cLabel fx:id\u003d\"expiryDate\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$expiryDate\" /\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":36,"author":{"gitId":"ChongWeiJie29"},"content":"      \u003cLabel fx:id\u003d\"totalStock\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$totalStock\" /\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":37,"author":{"gitId":"ChongWeiJie29"},"content":"      \u003cLabel fx:id\u003d\"note\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$note\" /\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":38,"author":{"gitId":"ChongWeiJie29"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":39,"author":{"gitId":"ChongWeiJie29"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":40,"author":{"gitId":"ChongWeiJie29"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"ChongWeiJie29":40}},{"path":"src/main/resources/view/PrescriptionListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ChongWeiJie29"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"ChongWeiJie29"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"ChongWeiJie29"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"ChongWeiJie29"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"ChongWeiJie29"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"ChongWeiJie29"},"content":"  \u003cListView fx:id\u003d\"prescriptionListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"ChongWeiJie29"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"ChongWeiJie29":8}}]

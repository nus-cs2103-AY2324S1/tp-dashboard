[{"path":".github/pull_request_template.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"chiayunrong"},"content":"### Description","lastModifiedDate":"2023-10-02"},{"lineNumber":2,"author":{"gitId":"chiayunrong"},"content":"[Provide a brief description of the changes made in this pull request.]","lastModifiedDate":"2023-10-02"},{"lineNumber":3,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":4,"author":{"gitId":"chiayunrong"},"content":"### Related Issue(s)","lastModifiedDate":"2023-10-02"},{"lineNumber":5,"author":{"gitId":"chiayunrong"},"content":"[Links to any related issues.]","lastModifiedDate":"2023-10-02"},{"lineNumber":6,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":7,"author":{"gitId":"chiayunrong"},"content":"### Checklist","lastModifiedDate":"2023-10-02"},{"lineNumber":8,"author":{"gitId":"chiayunrong"},"content":"[Make sure to check the boxes that apply. If an item is not applicable, you can remove it.]","lastModifiedDate":"2023-10-02"},{"lineNumber":9,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":10,"author":{"gitId":"chiayunrong"},"content":"- [ ] Unit tests have been added or updated.","lastModifiedDate":"2023-10-02"},{"lineNumber":11,"author":{"gitId":"chiayunrong"},"content":"- [ ] Code has been tested locally and works as expected.","lastModifiedDate":"2023-10-02"},{"lineNumber":12,"author":{"gitId":"chiayunrong"},"content":"- [ ] Documentation has been updated, if necessary.","lastModifiedDate":"2023-10-02"},{"lineNumber":13,"author":{"gitId":"chiayunrong"},"content":"- [ ] Dependencies have been checked and updated, if necessary.","lastModifiedDate":"2023-10-02"},{"lineNumber":14,"author":{"gitId":"chiayunrong"},"content":"- [ ] All code follows the project\u0027s coding standards and style guidelines.","lastModifiedDate":"2023-10-02"},{"lineNumber":15,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":16,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":17,"author":{"gitId":"chiayunrong"},"content":"### To-Do","lastModifiedDate":"2023-10-02"},{"lineNumber":18,"author":{"gitId":"chiayunrong"},"content":"[List any additional tasks or items that need to be completed or addressed before merging this pull request.]","lastModifiedDate":"2023-10-02"},{"lineNumber":19,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":20,"author":{"gitId":"chiayunrong"},"content":"- [ ] [Task 1]","lastModifiedDate":"2023-10-02"},{"lineNumber":21,"author":{"gitId":"chiayunrong"},"content":"- [ ] [Task 2]","lastModifiedDate":"2023-10-02"},{"lineNumber":22,"author":{"gitId":"chiayunrong"},"content":"- [ ] [Task 3]","lastModifiedDate":"2023-10-02"},{"lineNumber":23,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":24,"author":{"gitId":"chiayunrong"},"content":"### Screenshots (if applicable)","lastModifiedDate":"2023-10-02"},{"lineNumber":25,"author":{"gitId":"chiayunrong"},"content":"[Include any relevant screenshots to help reviewers understand the changes.]","lastModifiedDate":"2023-10-02"},{"lineNumber":26,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-02"}],"authorContributionMap":{"chiayunrong":26}},{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"chiayunrong"},"content":"# Notenote","lastModifiedDate":"2023-10-05"},{"lineNumber":2,"author":{"gitId":"chiayunrong"},"content":"[![CI Status](https://github.com/AY2324S1-CS2103-W14-2/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2324S1-CS2103-W14-2/tp/actions)","lastModifiedDate":"2023-10-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":4,"author":{"gitId":"chiayunrong"},"content":"![](docs/images/Ui.png)","lastModifiedDate":"2023-10-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":6,"author":{"gitId":"chiayunrong"},"content":"* This is a desktop meeting note-taking application that allows users to efficiently record notes for their contact.","lastModifiedDate":"2023-10-05"},{"lineNumber":7,"author":{"gitId":"chiayunrong"},"content":"* Notenote provide tools for organizing and categorizing contacts in a systematic and easy-to-navigate structure.","lastModifiedDate":"2023-10-05"},{"lineNumber":8,"author":{"gitId":"chiayunrong"},"content":"* Users interact with the application through a CLI, and it has a GUI created with JavaFX.","lastModifiedDate":"2023-10-05"},{"lineNumber":9,"author":{"gitId":"chiayunrong"},"content":"* The application is written in Java.","lastModifiedDate":"2023-10-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":11,"author":{"gitId":"chiayunrong"},"content":"# Sitemap","lastModifiedDate":"2023-10-05"},{"lineNumber":12,"author":{"gitId":"chiayunrong"},"content":"* [User guide](docs/UserGuide.md)","lastModifiedDate":"2023-10-05"},{"lineNumber":13,"author":{"gitId":"chiayunrong"},"content":"* [Developer guide](docs/DeveloperGuide.md)","lastModifiedDate":"2023-10-05"},{"lineNumber":14,"author":{"gitId":"chiayunrong"},"content":"* [About us](docs/AboutUs.md)","lastModifiedDate":"2023-10-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":16,"author":{"gitId":"chiayunrong"},"content":"# Acknowledgements","lastModifiedDate":"2023-10-05"},{"lineNumber":17,"author":{"gitId":"chiayunrong"},"content":"* Some parts of this sample application were inspired by the excellent [JavaFX tutorial](http://code.makery.ch/library/javafx-8-tutorial/[Java) by","lastModifiedDate":"2023-10-05"},{"lineNumber":18,"author":{"gitId":"chiayunrong"},"content":"  _Marco Jakob_.","lastModifiedDate":"2023-10-05"},{"lineNumber":19,"author":{"gitId":"chiayunrong"},"content":"* Libraries used: [JavaFX](https://openjfx.io/JavaFX), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2023-10-05"}],"authorContributionMap":{"chiayunrong":15,"-":4}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2016-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2022-06-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2016-12-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027jacoco\u0027","lastModifiedDate":"2020-08-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"mainClassName \u003d \u0027seedu.address.Main\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"sourceCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"targetCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2018-04-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-04-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2018-03-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2018-03-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    finalizedBy jacocoTestReport","lastModifiedDate":"2020-08-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-08-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"task coverage(type: JacocoReport) {","lastModifiedDate":"2020-08-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)","lastModifiedDate":"2020-08-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    classDirectories.from files(sourceSets.main.output)","lastModifiedDate":"2020-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    executionData.from files(jacocoTestReport.executionData)","lastModifiedDate":"2020-08-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    afterEvaluate {","lastModifiedDate":"2020-08-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        classDirectories.from files(classDirectories.files.collect {","lastModifiedDate":"2020-08-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])","lastModifiedDate":"2020-08-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        })","lastModifiedDate":"2020-08-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    reports {","lastModifiedDate":"2020-08-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        html.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        xml.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    String jUnitVersion \u003d \u00275.4.0\u0027","lastModifiedDate":"2019-02-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2023-07-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.7.0\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.7.4\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2016-08-29"},{"lineNumber":69,"author":{"gitId":"s-peiran"},"content":"    archiveFileName \u003d \u0027NoteNote.jar\u0027","lastModifiedDate":"2023-10-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"s-peiran"},"content":"jar {","lastModifiedDate":"2023-10-26"},{"lineNumber":73,"author":{"gitId":"s-peiran"},"content":"    duplicatesStrategy \u003d DuplicatesStrategy.EXCLUDE","lastModifiedDate":"2023-10-26"},{"lineNumber":74,"author":{"gitId":"s-peiran"},"content":"}","lastModifiedDate":"2023-10-26"},{"lineNumber":75,"author":{"gitId":"s-peiran"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":76,"author":{"gitId":"s-peiran"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"defaultTasks \u0027clean\u0027, \u0027test\u0027","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":79,"author":{"gitId":"chiayunrong"},"content":"run {","lastModifiedDate":"2023-10-24"},{"lineNumber":80,"author":{"gitId":"chiayunrong"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2023-10-24"},{"lineNumber":81,"author":{"gitId":"chiayunrong"},"content":"}","lastModifiedDate":"2023-10-24"}],"authorContributionMap":{"s-peiran":6,"chiayunrong":4,"-":71}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"You can reach us at the email `seer[at]comp.nus.edu.sg`","lastModifiedDate":"2020-06-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"chiayunrong"},"content":"### Chia Yun Rong","lastModifiedDate":"2023-09-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"chiayunrong"},"content":"\u003cimg src\u003d\"images/chiayunrong.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-09-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"chiayunrong"},"content":"[[github](https://github.com/chiayunrong)]","lastModifiedDate":"2023-09-30"},{"lineNumber":17,"author":{"gitId":"chiayunrong"},"content":"[[portfolio](team/chiayunrong.md)]","lastModifiedDate":"2023-09-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"chiayunrong"},"content":"* Role: Team lead, Testing","lastModifiedDate":"2023-09-30"},{"lineNumber":20,"author":{"gitId":"chiayunrong"},"content":"* Responsibilities:","lastModifiedDate":"2023-09-30"},{"lineNumber":21,"author":{"gitId":"chiayunrong"},"content":"    * Overall project coordination.","lastModifiedDate":"2023-09-30"},{"lineNumber":22,"author":{"gitId":"chiayunrong"},"content":"    * Ensures the testing of the project is done properly and on time.","lastModifiedDate":"2023-09-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"jonyeokj"},"content":"### Jonathan Yeo","lastModifiedDate":"2023-09-28"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"jonyeokj"},"content":"\u003cimg src\u003d\"images/jonyeokj.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-09-28"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"jonyeokj"},"content":"[[homepage](https://github.com/jonyeokj)]","lastModifiedDate":"2023-09-28"},{"lineNumber":29,"author":{"gitId":"jonyeokj"},"content":"[[github](https://github.com/jonyeokj)]","lastModifiedDate":"2023-09-28"},{"lineNumber":30,"author":{"gitId":"jonyeokj"},"content":"[[portfolio](team/jonyeokj.md)]","lastModifiedDate":"2023-09-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"jonyeokj"},"content":"* Role: Documentation, Integration","lastModifiedDate":"2023-09-28"},{"lineNumber":33,"author":{"gitId":"jonyeokj"},"content":"* Responsibilities:","lastModifiedDate":"2023-09-28"},{"lineNumber":34,"author":{"gitId":"jonyeokj"},"content":"    - Responsible for the quality of various project documents.","lastModifiedDate":"2023-09-28"},{"lineNumber":35,"author":{"gitId":"jonyeokj"},"content":"    - In charge of versioning the code, and maintaining the code repository.","lastModifiedDate":"2023-09-28"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"s-peiran"},"content":"### She Peiran","lastModifiedDate":"2023-10-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"s-peiran"},"content":"\u003cimg src\u003d\"images/s-peiran.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"s-peiran"},"content":"[[github](http://github.com/s-peiran)] [[portfolio](team/s-peiran.md)]","lastModifiedDate":"2023-10-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"s-peiran"},"content":"* Roles:","lastModifiedDate":"2023-10-03"},{"lineNumber":44,"author":{"gitId":"s-peiran"},"content":"    * Deliverables and Deadlines","lastModifiedDate":"2023-10-03"},{"lineNumber":45,"author":{"gitId":"s-peiran"},"content":"    * Scheduling and Tracking","lastModifiedDate":"2023-10-03"},{"lineNumber":46,"author":{"gitId":"s-peiran"},"content":"* Responsibilities:","lastModifiedDate":"2023-10-03"},{"lineNumber":47,"author":{"gitId":"s-peiran"},"content":"    * Ensure project deliverables are done on time and in the right format.","lastModifiedDate":"2023-10-03"},{"lineNumber":48,"author":{"gitId":"s-peiran"},"content":"    * In charge of defining, assigning, and tracking project tasks.","lastModifiedDate":"2023-10-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"jacobcuison"},"content":"### Jacob Cuison","lastModifiedDate":"2023-09-28"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"jacobcuison"},"content":"\u003cimg src\u003d\"images/jacobcuison.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-09-28"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"jacobcuison"},"content":"[[github](http://github.com/jacobcuison)]","lastModifiedDate":"2023-09-28"},{"lineNumber":55,"author":{"gitId":"jacobcuison"},"content":"[[portfolio](team/jacobcuison.md)]","lastModifiedDate":"2023-10-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"jacobcuison"},"content":"* Role: Code quality","lastModifiedDate":"2023-09-28"},{"lineNumber":58,"author":{"gitId":"jacobcuison"},"content":"* Responsibilities: Looks after code quality, ensures adherence to coding standards, etc.","lastModifiedDate":"2023-09-28"}],"authorContributionMap":{"jonyeokj":9,"jacobcuison":6,"s-peiran":9,"chiayunrong":8,"-":26}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"s-peiran"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"  {:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":13,"author":{"gitId":"s-peiran"},"content":"* {list here sources of all reused/adapted ideas, code, documentation, and third-party libraries -- include links to the","lastModifiedDate":"2023-10-03"},{"lineNumber":14,"author":{"gitId":"s-peiran"},"content":"  original source as well}","lastModifiedDate":"2023-10-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"s-peiran"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document `docs/diagrams` folder. Refer to the [_","lastModifiedDate":"2023-10-03"},{"lineNumber":29,"author":{"gitId":"s-peiran"},"content":"PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and","lastModifiedDate":"2023-10-03"},{"lineNumber":30,"author":{"gitId":"s-peiran"},"content":"edit diagrams.","lastModifiedDate":"2023-10-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":41,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"s-peiran"},"content":"**`Main`** (consisting of","lastModifiedDate":"2023-10-03"},{"lineNumber":44,"author":{"gitId":"s-peiran"},"content":"classes [`Main`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/Main.java)","lastModifiedDate":"2023-10-03"},{"lineNumber":45,"author":{"gitId":"s-peiran"},"content":"and [`MainApp`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/MainApp.java)) is","lastModifiedDate":"2023-10-03"},{"lineNumber":46,"author":{"gitId":"s-peiran"},"content":"in charge of the app launch and shut down.","lastModifiedDate":"2023-10-03"},{"lineNumber":47,"author":{"gitId":"s-peiran"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* At app launch, it initializes the other components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2023-09-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"* At shut down, it shuts down the other components and invokes cleanup methods where necessary.","lastModifiedDate":"2023-09-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"The bulk of the app\u0027s work is done by the following four components:","lastModifiedDate":"2023-09-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2023-09-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"s-peiran"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues","lastModifiedDate":"2023-10-03"},{"lineNumber":63,"author":{"gitId":"s-peiran"},"content":"the command `delete 1`.","lastModifiedDate":"2023-10-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":69,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":70,"author":{"gitId":"s-peiran"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding","lastModifiedDate":"2023-10-03"},{"lineNumber":71,"author":{"gitId":"s-peiran"},"content":"  API `interface` mentioned in the previous point.","lastModifiedDate":"2023-10-03"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":73,"author":{"gitId":"s-peiran"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using","lastModifiedDate":"2023-10-03"},{"lineNumber":74,"author":{"gitId":"s-peiran"},"content":"the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component","lastModifiedDate":"2023-10-03"},{"lineNumber":75,"author":{"gitId":"s-peiran"},"content":"through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the","lastModifiedDate":"2023-10-03"},{"lineNumber":76,"author":{"gitId":"s-peiran"},"content":"implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2023-10-03"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":78,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":80,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"s-peiran"},"content":"The **API** of this component is specified","lastModifiedDate":"2023-10-03"},{"lineNumber":85,"author":{"gitId":"s-peiran"},"content":"in [`Ui.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2023-10-03"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"s-peiran"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `ContactListPanel`","lastModifiedDate":"2023-10-26"},{"lineNumber":90,"author":{"gitId":"s-peiran"},"content":", `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures","lastModifiedDate":"2023-10-26"},{"lineNumber":91,"author":{"gitId":"s-peiran"},"content":"the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2023-10-26"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"s-peiran"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that","lastModifiedDate":"2023-10-03"},{"lineNumber":94,"author":{"gitId":"s-peiran"},"content":"are in the `src/main/resources/view` folder. For example, the layout of","lastModifiedDate":"2023-10-03"},{"lineNumber":95,"author":{"gitId":"s-peiran"},"content":"the [`MainWindow`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/MainWindow.java)","lastModifiedDate":"2023-10-03"},{"lineNumber":96,"author":{"gitId":"s-peiran"},"content":"is specified","lastModifiedDate":"2023-10-03"},{"lineNumber":97,"author":{"gitId":"s-peiran"},"content":"in [`MainWindow.fxml`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2023-10-03"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":103,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":104,"author":{"gitId":"jacobcuison"},"content":"* depends on some classes in the `Model` component, as it displays `Contact` object residing in the `Model`.","lastModifiedDate":"2023-10-03"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"s-peiran"},"content":"**","lastModifiedDate":"2023-10-03"},{"lineNumber":109,"author":{"gitId":"s-peiran"},"content":"API** : [`Logic.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2023-10-03"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"s-peiran"},"content":"The sequence diagram below illustrates the interactions within the `Logic` component, taking `execute(\"delete 1\")` API","lastModifiedDate":"2023-10-03"},{"lineNumber":116,"author":{"gitId":"s-peiran"},"content":"call as an example.","lastModifiedDate":"2023-10-03"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2023-09-03"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":125,"author":{"gitId":"s-peiran"},"content":"1. When `Logic` is called upon to execute a command, it is passed to an `AddressBookParser` object which in turn creates","lastModifiedDate":"2023-10-26"},{"lineNumber":126,"author":{"gitId":"s-peiran"},"content":"   a parser that matches the command (e.g., `DeleteCommandParser`) and uses it to parse the command.","lastModifiedDate":"2023-10-26"},{"lineNumber":127,"author":{"gitId":"s-peiran"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `DeleteCommand`) which","lastModifiedDate":"2023-10-26"},{"lineNumber":128,"author":{"gitId":"s-peiran"},"content":"   is executed by the `LogicManager`.","lastModifiedDate":"2023-10-26"},{"lineNumber":129,"author":{"gitId":"jacobcuison"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to delete a contact).","lastModifiedDate":"2023-10-03"},{"lineNumber":130,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2023-09-03"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":132,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":134,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":137,"author":{"gitId":"s-peiran"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":138,"author":{"gitId":"s-peiran"},"content":"* When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a","lastModifiedDate":"2023-10-03"},{"lineNumber":139,"author":{"gitId":"s-peiran"},"content":"  placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse","lastModifiedDate":"2023-10-03"},{"lineNumber":140,"author":{"gitId":"s-peiran"},"content":"  the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `AddressBookParser` returns back as","lastModifiedDate":"2023-10-03"},{"lineNumber":141,"author":{"gitId":"s-peiran"},"content":"  a `Command` object.","lastModifiedDate":"2023-10-03"},{"lineNumber":142,"author":{"gitId":"s-peiran"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser`","lastModifiedDate":"2023-10-03"},{"lineNumber":143,"author":{"gitId":"s-peiran"},"content":"  interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2023-10-03"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":146,"author":{"gitId":"s-peiran"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":147,"author":{"gitId":"s-peiran"},"content":"**","lastModifiedDate":"2023-10-03"},{"lineNumber":148,"author":{"gitId":"s-peiran"},"content":"API** : [`Model.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2023-10-03"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"jacobcuison"},"content":"* stores the address book data i.e., all `Contact` objects (which are contained in a `UniqueContactList` object).","lastModifiedDate":"2023-10-03"},{"lineNumber":156,"author":{"gitId":"s-peiran"},"content":"* stores the currently \u0027selected\u0027 `Contact` objects (e.g., results of a search query) as a separate _filtered_ list","lastModifiedDate":"2023-10-26"},{"lineNumber":157,"author":{"gitId":"s-peiran"},"content":"  which is exposed to outsiders as an unmodifiable `ObservableList\u003cContact\u003e` that can be \u0027observed\u0027 e.g. the UI can be","lastModifiedDate":"2023-10-26"},{"lineNumber":158,"author":{"gitId":"s-peiran"},"content":"  bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2023-10-26"},{"lineNumber":159,"author":{"gitId":"s-peiran"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as","lastModifiedDate":"2023-10-26"},{"lineNumber":160,"author":{"gitId":"s-peiran"},"content":"  a `ReadOnlyUserPref` objects.","lastModifiedDate":"2023-10-26"},{"lineNumber":161,"author":{"gitId":"s-peiran"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they","lastModifiedDate":"2023-10-26"},{"lineNumber":162,"author":{"gitId":"s-peiran"},"content":"  should make sense on their own without depending on other components)","lastModifiedDate":"2023-10-26"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":164,"author":{"gitId":"s-peiran"},"content":"\u003cimg src\u003d\"images/ModelMeeting.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":165,"author":{"gitId":"s-peiran"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":166,"author":{"gitId":"s-peiran"},"content":"* The AddressBook data contains all the `Meeting` objects contained in a `MeetingList` object.","lastModifiedDate":"2023-10-26"},{"lineNumber":167,"author":{"gitId":"s-peiran"},"content":"* stores the currently \u0027selected\u0027 `Meeting` objects as a separate _filtered_ list","lastModifiedDate":"2023-10-26"},{"lineNumber":168,"author":{"gitId":"s-peiran"},"content":"  which is exposed to outsiders as an unmodifiable `ObservableList\u003cMeeting\u003e` that can be \u0027observed\u0027 e.g. the UI can be","lastModifiedDate":"2023-10-26"},{"lineNumber":169,"author":{"gitId":"s-peiran"},"content":"  bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2023-10-26"},{"lineNumber":170,"author":{"gitId":"s-peiran"},"content":"* The `Meeting` object can store an infinite number of `Contact` object representing participants to the meeting.","lastModifiedDate":"2023-10-26"},{"lineNumber":171,"author":{"gitId":"s-peiran"},"content":"* Likewise the `Contact` Object can be removed from the `Meeting` Object.","lastModifiedDate":"2023-10-26"},{"lineNumber":172,"author":{"gitId":"s-peiran"},"content":"* The `Contact` object is identified by its name when adding it to `Meeting` object.","lastModifiedDate":"2023-10-26"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":174,"author":{"gitId":"jacobcuison"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `AddressBook`, which `Contact` references. This allows `AddressBook` to only require one `Tag` object per unique tag, instead of each `Contact` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":176,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/BetterModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"s-peiran"},"content":"**","lastModifiedDate":"2023-10-03"},{"lineNumber":183,"author":{"gitId":"s-peiran"},"content":"API** : [`Storage.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2023-10-03"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":187,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"s-peiran"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":189,"author":{"gitId":"s-peiran"},"content":"* can save both address book data and user preference data in JSON format, and read them back into corresponding","lastModifiedDate":"2023-10-03"},{"lineNumber":190,"author":{"gitId":"s-peiran"},"content":"  objects.","lastModifiedDate":"2023-10-03"},{"lineNumber":191,"author":{"gitId":"s-peiran"},"content":"* inherits from both `AddressBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only","lastModifiedDate":"2023-10-03"},{"lineNumber":192,"author":{"gitId":"s-peiran"},"content":"  the functionality of only one is needed).","lastModifiedDate":"2023-10-03"},{"lineNumber":193,"author":{"gitId":"s-peiran"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects","lastModifiedDate":"2023-10-03"},{"lineNumber":194,"author":{"gitId":"s-peiran"},"content":"  that belong to the `Model`)","lastModifiedDate":"2023-10-03"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.addressbook.commons` package.","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2020-06-07"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"s-peiran"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedAddressBook`. It extends `AddressBook` with an undo/redo","lastModifiedDate":"2023-10-03"},{"lineNumber":211,"author":{"gitId":"s-peiran"},"content":"history, stored internally as an `addressBookStateList` and `currentStatePointer`. Additionally, it implements the","lastModifiedDate":"2023-10-03"},{"lineNumber":212,"author":{"gitId":"s-peiran"},"content":"following operations:","lastModifiedDate":"2023-10-03"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"s-peiran"},"content":"* `VersionedAddressBook#commit()` — Saves the current address book state in its history.","lastModifiedDate":"2023-10-03"},{"lineNumber":215,"author":{"gitId":"s-peiran"},"content":"* `VersionedAddressBook#undo()` — Restores the previous address book state from its history.","lastModifiedDate":"2023-10-03"},{"lineNumber":216,"author":{"gitId":"s-peiran"},"content":"* `VersionedAddressBook#redo()` — Restores a previously undone address book state from its history.","lastModifiedDate":"2023-10-03"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"s-peiran"},"content":"These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()`","lastModifiedDate":"2023-10-03"},{"lineNumber":219,"author":{"gitId":"s-peiran"},"content":"and `Model#redoAddressBook()` respectively.","lastModifiedDate":"2023-10-03"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"s-peiran"},"content":"Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the","lastModifiedDate":"2023-10-03"},{"lineNumber":224,"author":{"gitId":"s-peiran"},"content":"initial address book state, and the `currentStatePointer` pointing to that single address book state.","lastModifiedDate":"2023-10-03"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"![UndoRedoState0](images/UndoRedoState0.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"s-peiran"},"content":"Step 2. The user executes `delete 5` command to delete the 5th contact in the address book. The `delete` command","lastModifiedDate":"2023-10-26"},{"lineNumber":229,"author":{"gitId":"s-peiran"},"content":"calls `Model#commitAddressBook()`, causing the modified state of the address book after the `delete 5` command executes","lastModifiedDate":"2023-10-26"},{"lineNumber":230,"author":{"gitId":"s-peiran"},"content":"to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted address book","lastModifiedDate":"2023-10-26"},{"lineNumber":231,"author":{"gitId":"s-peiran"},"content":"state.","lastModifiedDate":"2023-10-26"},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"![UndoRedoState1](images/UndoRedoState1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"s-peiran"},"content":"Step 3. The user executes `add n/David …​` to add a new contact. The `add` command also","lastModifiedDate":"2023-10-26"},{"lineNumber":236,"author":{"gitId":"s-peiran"},"content":"calls `Model#commitAddressBook()`, causing another modified address book state to be saved into","lastModifiedDate":"2023-10-26"},{"lineNumber":237,"author":{"gitId":"s-peiran"},"content":"the `addressBookStateList`.","lastModifiedDate":"2023-10-26"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"![UndoRedoState2](images/UndoRedoState2.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If a command fails its execution, it will not call `Model#commitAddressBook()`, so the address book state will not be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"s-peiran"},"content":"Step 4. The user now decides that adding the contact was a mistake, and decides to undo that action by executing","lastModifiedDate":"2023-10-26"},{"lineNumber":246,"author":{"gitId":"s-peiran"},"content":"the `undo` command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer`","lastModifiedDate":"2023-10-26"},{"lineNumber":247,"author":{"gitId":"s-peiran"},"content":"once to the left, pointing it to the previous address book state, and restores the address book to that state.","lastModifiedDate":"2023-10-26"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"![UndoRedoState3](images/UndoRedoState3.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index 0, pointing to the initial AddressBook state, then there are no previous AddressBook states to restore. The `undo` command uses `Model#canUndoAddressBook()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"The following sequence diagram shows how the undo operation works:","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"s-peiran"},"content":"The `redo` command does the opposite — it calls `Model#redoAddressBook()`, which shifts the `currentStatePointer` once","lastModifiedDate":"2023-10-03"},{"lineNumber":265,"author":{"gitId":"s-peiran"},"content":"to the right, pointing to the previously undone state, and restores the address book to that state.","lastModifiedDate":"2023-10-03"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index `addressBookStateList.size() - 1`, pointing to the latest address book state, then there are no undone AddressBook states to restore. The `redo` command uses `Model#canRedoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"s-peiran"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the address book, such","lastModifiedDate":"2023-10-03"},{"lineNumber":272,"author":{"gitId":"s-peiran"},"content":"as `list`, will usually not call `Model#commitAddressBook()`, `Model#undoAddressBook()` or `Model#redoAddressBook()`.","lastModifiedDate":"2023-10-03"},{"lineNumber":273,"author":{"gitId":"s-peiran"},"content":"Thus, the `addressBookStateList` remains unchanged.","lastModifiedDate":"2023-10-03"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":275,"author":{"gitId":"-"},"content":"![UndoRedoState4](images/UndoRedoState4.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":277,"author":{"gitId":"s-peiran"},"content":"Step 6. The user executes `clear`, which calls `Model#commitAddressBook()`. Since the `currentStatePointer` is not","lastModifiedDate":"2023-10-03"},{"lineNumber":278,"author":{"gitId":"s-peiran"},"content":"pointing at the end of the `addressBookStateList`, all address book states after the `currentStatePointer` will be","lastModifiedDate":"2023-10-03"},{"lineNumber":279,"author":{"gitId":"s-peiran"},"content":"purged. Reason: It no longer makes sense to redo the `add n/David …​` command. This is the behavior that most modern","lastModifiedDate":"2023-10-03"},{"lineNumber":280,"author":{"gitId":"s-peiran"},"content":"desktop applications follow.","lastModifiedDate":"2023-10-03"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":282,"author":{"gitId":"-"},"content":"![UndoRedoState5](images/UndoRedoState5.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":284,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":286,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/CommitActivityDiagram.png\" width\u003d\"250\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":288,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2021-07-31"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":290,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2021-07-31"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":292,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Saves the entire address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":293,"author":{"gitId":"-"},"content":"    * Pros: Easy to implement.","lastModifiedDate":"2020-05-23"},{"lineNumber":294,"author":{"gitId":"-"},"content":"    * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":296,"author":{"gitId":"-"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2020-05-23"},{"lineNumber":297,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2020-05-23"},{"lineNumber":298,"author":{"gitId":"jacobcuison"},"content":"    * Pros: Will use less memory (e.g. for `delete`, just save the contact being deleted).","lastModifiedDate":"2023-10-03"},{"lineNumber":299,"author":{"gitId":"-"},"content":"    * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2020-05-23"},{"lineNumber":300,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":301,"author":{"gitId":"-"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2020-05-23"},{"lineNumber":302,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":303,"author":{"gitId":"jonyeokj"},"content":"### \\[Proposed\\] Command History and Auto-Complete Feature","lastModifiedDate":"2023-10-26"},{"lineNumber":304,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":305,"author":{"gitId":"jonyeokj"},"content":"#### Proposed Implementation","lastModifiedDate":"2023-10-26"},{"lineNumber":306,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":307,"author":{"gitId":"jonyeokj"},"content":"The proposed command history and auto-complete mechanism is facilitated by `CommandHistory`. It extends `Notenote` with a command history, stored internally as `commandList`. Additionally, it implements the following operations:","lastModifiedDate":"2023-10-26"},{"lineNumber":308,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":309,"author":{"gitId":"jonyeokj"},"content":"* `CommandHistory#addCommand(String command)` - Adds the executed command to the command history.","lastModifiedDate":"2023-10-26"},{"lineNumber":310,"author":{"gitId":"jonyeokj"},"content":"* `CommandHistory#getFilteredCommands(String input)` - Retrieves a list of commands from the command history that starts with the given input.","lastModifiedDate":"2023-10-26"},{"lineNumber":311,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":312,"author":{"gitId":"jonyeokj"},"content":"These operations are exposed in the `Model` interface as `Model#addCommandHistory(String command)` and `Model#getFilteredCommandHistory(String input)` respectively.","lastModifiedDate":"2023-10-26"},{"lineNumber":313,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":314,"author":{"gitId":"jonyeokj"},"content":"When the user presses the up or down arrow key, the `UI` will call `Model#getFilteredCommandHistory(String input)`, where `input` is the current text in the command input box. The retrieved list of commands will be displayed in the command input box, allowing the user to cycle through the commands by continuing to press the up or down arrow key.","lastModifiedDate":"2023-10-26"},{"lineNumber":315,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":316,"author":{"gitId":"jonyeokj"},"content":"Given below is an example usage scenario and how the command history and auto-complete mechanism behaves at each step.","lastModifiedDate":"2023-10-26"},{"lineNumber":317,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":318,"author":{"gitId":"jonyeokj"},"content":"Step 1. The user launches the application for the first time. The `CommandHistory` will be initialized as an empty list.","lastModifiedDate":"2023-10-26"},{"lineNumber":319,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":320,"author":{"gitId":"jonyeokj"},"content":"Step 2. The user executes the command `add meeting -title Project Meeting -time 01/01/2023 12:00 -place Zoom`. The command calls `Model#addCommandHistory(String command)`, causing the executed command to be saved in the `commandList`.","lastModifiedDate":"2023-10-26"},{"lineNumber":321,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":322,"author":{"gitId":"jonyeokj"},"content":"Step 3. The user then executes the command `add meeting -title Tutorial -time 01/01/2023 13:00 -place Discord`. This command is also saved in the `commandList`.","lastModifiedDate":"2023-10-26"},{"lineNumber":323,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":324,"author":{"gitId":"jonyeokj"},"content":"Step 4. The user starts to type the command `add mee` and then presses the up or down arrow key. The `UI` will call `Model#getFilteredCommandHistory(String input)`, which retrieves the list of commands starting with `add mee` from the `commandList`. In this case, it will retrieve the two previous commands.","lastModifiedDate":"2023-10-26"},{"lineNumber":325,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":326,"author":{"gitId":"jonyeokj"},"content":"Step 5. The user can then cycle through the two commands by pressing the up or down arrow key. The commands will be displayed in the command input box in reverse chronological order.","lastModifiedDate":"2023-10-26"},{"lineNumber":327,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":328,"author":{"gitId":"chiayunrong"},"content":"#### Design Considerations:","lastModifiedDate":"2023-10-26"},{"lineNumber":329,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":330,"author":{"gitId":"chiayunrong"},"content":"**Aspect: How the command history and auto-complete feature is implemented:**","lastModifiedDate":"2023-10-26"},{"lineNumber":331,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":332,"author":{"gitId":"chiayunrong"},"content":"* **Alternative 1: Store Commands as Strings**","lastModifiedDate":"2023-10-26"},{"lineNumber":333,"author":{"gitId":"chiayunrong"},"content":"    * Implementation: Save each command as a string in a list. When the user presses the up or down arrow key, retrieve the commands that start with the current input.","lastModifiedDate":"2023-10-26"},{"lineNumber":334,"author":{"gitId":"chiayunrong"},"content":"    * Pros: Simple to implement; easy to retrieve commands.","lastModifiedDate":"2023-10-26"},{"lineNumber":335,"author":{"gitId":"chiayunrong"},"content":"    * Cons: May include unnecessary information if the command has multiple parameters.","lastModifiedDate":"2023-10-26"},{"lineNumber":336,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":337,"author":{"gitId":"chiayunrong"},"content":"* **Alternative 2: Store Commands as Objects**","lastModifiedDate":"2023-10-26"},{"lineNumber":338,"author":{"gitId":"chiayunrong"},"content":"    * Implementation: Save each command as an object that includes the command type and its parameters. Implement a method to convert the command object to a string for display. When the user presses the up or down arrow key, retrieve the command objects that match the current input and convert them to strings for display.","lastModifiedDate":"2023-10-26"},{"lineNumber":339,"author":{"gitId":"chiayunrong"},"content":"    * Pros: Allows for more flexible retrieval and display of commands; can easily extend functionality in the future.","lastModifiedDate":"2023-10-26"},{"lineNumber":340,"author":{"gitId":"chiayunrong"},"content":"    * Cons: More complex implementation; requires additional processing to convert command objects to strings for display.","lastModifiedDate":"2023-10-26"},{"lineNumber":341,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":342,"author":{"gitId":"chiayunrong"},"content":"### [Implemented] Mode feature","lastModifiedDate":"2023-10-26"},{"lineNumber":343,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":344,"author":{"gitId":"chiayunrong"},"content":"#### Context","lastModifiedDate":"2023-10-26"},{"lineNumber":345,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":346,"author":{"gitId":"chiayunrong"},"content":"At the time when this feature was implemented, the commands within the application were split into 3 broad categories: Commands for contacts, commands for meetings, and general commands.","lastModifiedDate":"2023-10-26"},{"lineNumber":347,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":348,"author":{"gitId":"chiayunrong"},"content":"However, users had to specify each command in entirety without regard for which category the command belonged to. For example when adding a contact to a meeting, the user had to type `add contact to meeting -name ContactName -title MeetingName`.","lastModifiedDate":"2023-10-26"},{"lineNumber":349,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":350,"author":{"gitId":"chiayunrong"},"content":"This format was too lengthy and it seemed highly likely that when a user is interacting with a specific category of commands, they would interact with it more often than the other categories. For example when a user adds a meeting, it more likely that the user follows up with adding contacts or notes to the meeting as compared to other functions of the application.","lastModifiedDate":"2023-10-26"},{"lineNumber":351,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":352,"author":{"gitId":"chiayunrong"},"content":"To improve upon this, a mode feature was implemented so that users can be either in the `contact mode` or `meeting mode` and when a command is run it will automatically be translated into the respective contact or meeting command. So instead of typing `add contact to meeting`, the user could instead type `add contact` while running in the `meeting mode`.","lastModifiedDate":"2023-10-26"},{"lineNumber":353,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":354,"author":{"gitId":"chiayunrong"},"content":"### Implementation","lastModifiedDate":"2023-10-26"},{"lineNumber":355,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":356,"author":{"gitId":"chiayunrong"},"content":"Firstly, in order to keep track of the current mode the application is running in, the Model interface and the ModelManager implementation had to be modified to keep track of what is now known as ModeType, which is an Enum and as of now can only be `CONTACTS` or `MEETINGS`. The general commands such as exit, help and mode itself does not need a ModeType because such commands can be run while in any ModeType. Additionally, the default ModeType when initializing a ModelManager is `CONTACTS` for no particular reason.","lastModifiedDate":"2023-10-26"},{"lineNumber":357,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":358,"author":{"gitId":"chiayunrong"},"content":"Secondly, the Mode command itself is implemented where upon executing the command, the model will update its `FilteredContactList` or `FilteredMeetingList` to show the user the entire contact or meeting list respectively.","lastModifiedDate":"2023-10-26"},{"lineNumber":359,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":360,"author":{"gitId":"chiayunrong"},"content":"Thirdly, all affected commands had to have their formats changed to suit the new style of running under a certain context.","lastModifiedDate":"2023-10-26"},{"lineNumber":361,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":362,"author":{"gitId":"chiayunrong"},"content":"Lastly, the AddressBookParser had to be modified to accomodate the new modes and command formats.","lastModifiedDate":"2023-10-26"},{"lineNumber":363,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":364,"author":{"gitId":"chiayunrong"},"content":"### Design considerations:","lastModifiedDate":"2023-10-26"},{"lineNumber":365,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":366,"author":{"gitId":"chiayunrong"},"content":"Alternative 1 (current choice): Implement the mode command as a standalone without arguments","lastModifiedDate":"2023-10-26"},{"lineNumber":367,"author":{"gitId":"chiayunrong"},"content":"* Pros: Easy to implement. User can easily toggle between `CONTACTS` and `MEETINGS` ModeType.","lastModifiedDate":"2023-10-26"},{"lineNumber":368,"author":{"gitId":"chiayunrong"},"content":"* Cons: Less extensible by developers if in the future there are new ModeTypes.","lastModifiedDate":"2023-10-26"},{"lineNumber":369,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":370,"author":{"gitId":"chiayunrong"},"content":"Alternative 2: Implement the mode command with arguments e.g `mode -type CONTACTS`","lastModifiedDate":"2023-10-26"},{"lineNumber":371,"author":{"gitId":"chiayunrong"},"content":"* Pros: Easily extensible by developers, can just add a new enum for a new ModeType.","lastModifiedDate":"2023-10-26"},{"lineNumber":372,"author":{"gitId":"chiayunrong"},"content":"* Cons: More troublesome to implement. Harder to use for the users.","lastModifiedDate":"2023-10-26"},{"lineNumber":373,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":374,"author":{"gitId":"jacobcuison"},"content":"### [Proposed] Note Feature","lastModifiedDate":"2023-10-27"},{"lineNumber":375,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":376,"author":{"gitId":"jacobcuison"},"content":"#### Context","lastModifiedDate":"2023-10-27"},{"lineNumber":377,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":378,"author":{"gitId":"jacobcuison"},"content":"Note-taking is the fundamental feature behind our app. It is critical for our users to be able to efficiently record","lastModifiedDate":"2023-10-27"},{"lineNumber":379,"author":{"gitId":"jacobcuison"},"content":"notes for contacts and meetings.","lastModifiedDate":"2023-10-27"},{"lineNumber":380,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":381,"author":{"gitId":"jacobcuison"},"content":"The full implementation of the feature will include creating, reading, and deleting notes. A possible extension is","lastModifiedDate":"2023-10-27"},{"lineNumber":382,"author":{"gitId":"jacobcuison"},"content":"giving users the ability to edit previous notes, but that is outside the scope of our project for now.","lastModifiedDate":"2023-10-27"},{"lineNumber":383,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":384,"author":{"gitId":"jacobcuison"},"content":"### Implementation (Add Notes)","lastModifiedDate":"2023-10-27"},{"lineNumber":385,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":386,"author":{"gitId":"jacobcuison"},"content":"A new `Note` class is created, which stores the contents of the note as a string. The `Contact`/`Meeting` model is then updated","lastModifiedDate":"2023-10-27"},{"lineNumber":387,"author":{"gitId":"jacobcuison"},"content":"to include a new `notes` attribute of type `LinkedHashSet\u003cNote\u003e`.","lastModifiedDate":"2023-11-02"},{"lineNumber":388,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":389,"author":{"gitId":"jacobcuison"},"content":"To distinguish between adding notes to contacts and meetings, 2 separate Command classes are created, namely ","lastModifiedDate":"2023-10-27"},{"lineNumber":390,"author":{"gitId":"jacobcuison"},"content":"`AddNoteCommand` (for contacts) and `AddMeetingNoteCommand` (for meetings). These classes will then call ","lastModifiedDate":"2023-10-27"},{"lineNumber":391,"author":{"gitId":"jacobcuison"},"content":"their respective parser classes, to get the arguments passed in by the user. The arguments include the","lastModifiedDate":"2023-10-27"},{"lineNumber":392,"author":{"gitId":"jacobcuison"},"content":"index of the target contact/meeting and the note itself.","lastModifiedDate":"2023-10-27"},{"lineNumber":393,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":394,"author":{"gitId":"jacobcuison"},"content":"When the respective commands are executed, NoteNote will get the indexed contact/meeting object from","lastModifiedDate":"2023-11-02"},{"lineNumber":395,"author":{"gitId":"jacobcuison"},"content":"the Model\u0027s `FilteredContactList`/`FilteredMeetingList`. Internally, the model will duplicate the existing list of notes","lastModifiedDate":"2023-10-27"},{"lineNumber":396,"author":{"gitId":"jacobcuison"},"content":"and append the additional note.","lastModifiedDate":"2023-10-27"},{"lineNumber":397,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":398,"author":{"gitId":"jacobcuison"},"content":"Then, a new `Contact`/`Meeting` will be created with identical attributes as the original, with the exception of the","lastModifiedDate":"2023-10-27"},{"lineNumber":399,"author":{"gitId":"jacobcuison"},"content":"updated `notes` list. The model is then updated with this new `Contact`/`Meeting`, and the filtered list is","lastModifiedDate":"2023-10-27"},{"lineNumber":400,"author":{"gitId":"jacobcuison"},"content":"updated as well.","lastModifiedDate":"2023-10-27"},{"lineNumber":401,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":402,"author":{"gitId":"jacobcuison"},"content":"### Implementation (Delete Notes)","lastModifiedDate":"2023-11-02"},{"lineNumber":403,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":404,"author":{"gitId":"jacobcuison"},"content":"Within each `Note` class, there is a `noteID` field which is stored as an `int`. `noteID` is assigned based on the total number","lastModifiedDate":"2023-11-02"},{"lineNumber":405,"author":{"gitId":"jacobcuison"},"content":"of notes in the system i.e. if there are 5 notes in the app now, the next note will have a `noteID` of 6. In this manner, each","lastModifiedDate":"2023-11-02"},{"lineNumber":406,"author":{"gitId":"jacobcuison"},"content":"Note thus has a unique `noteID`.","lastModifiedDate":"2023-11-02"},{"lineNumber":407,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":408,"author":{"gitId":"jacobcuison"},"content":"Once again, there are separate commands for deleting notes from contacts and from meetings. The relationship between the Command","lastModifiedDate":"2023-11-02"},{"lineNumber":409,"author":{"gitId":"jacobcuison"},"content":"and respective Parser classes is similar to the one described for adding Notes.","lastModifiedDate":"2023-11-02"},{"lineNumber":410,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":411,"author":{"gitId":"jacobcuison"},"content":"In terms of execution, a user will pass the `noteID` of the Note to be deleted as an argument. NoteNote will then iterate through","lastModifiedDate":"2023-11-02"},{"lineNumber":412,"author":{"gitId":"jacobcuison"},"content":"the HashSet, and when a Note\u0027s `noteID` matches the one specified by the user, will remove the Note from the LinkedHashSet accordingly.","lastModifiedDate":"2023-11-02"},{"lineNumber":413,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":414,"author":{"gitId":"jacobcuison"},"content":"The `Contact`/`Meeting` model will then be updated with the new LinkedHashSet of Notes.","lastModifiedDate":"2023-11-02"},{"lineNumber":415,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":416,"author":{"gitId":"jacobcuison"},"content":"Additionally, it is pertinent to note that the exact value of `noteID` is unimportant. In this implementation,","lastModifiedDate":"2023-11-02"},{"lineNumber":417,"author":{"gitId":"jacobcuison"},"content":"it is used as a way to index Notes in the LinkedHashSet. As such, on opening and shutting down the app, the noteID may change --","lastModifiedDate":"2023-11-02"},{"lineNumber":418,"author":{"gitId":"jacobcuison"},"content":"this is to be expected. However, the relative order of notes within each Contact/Meeting should be unchanged.","lastModifiedDate":"2023-11-02"},{"lineNumber":419,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":420,"author":{"gitId":"jacobcuison"},"content":"### Design Considerations","lastModifiedDate":"2023-10-27"},{"lineNumber":421,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":422,"author":{"gitId":"jacobcuison"},"content":"* **Alternative 1: store `notes` attribute in `Contact` model as `Set\u003cNote\u003e`**","lastModifiedDate":"2023-10-27"},{"lineNumber":423,"author":{"gitId":"jacobcuison"},"content":"  * Pros: Simpler to implement (similar to `Tag` implementation).","lastModifiedDate":"2023-10-27"},{"lineNumber":424,"author":{"gitId":"jacobcuison"},"content":"  * Cons: Notes will appear in an arbitrary order, rather than chronologically.","lastModifiedDate":"2023-10-27"},{"lineNumber":425,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":426,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Data archiving","lastModifiedDate":"2020-05-23"},{"lineNumber":427,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":428,"author":{"gitId":"-"},"content":"_{Explain here how the data archiving feature will be implemented}_","lastModifiedDate":"2020-05-23"},{"lineNumber":429,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":430,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":431,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":432,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":433,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":434,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":435,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":436,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":437,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":438,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":439,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":440,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":441,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":442,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":443,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":444,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":445,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":446,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":447,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":448,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":449,"author":{"gitId":"s-peiran"},"content":"* has a need to manage a significant number of contacts and meetings","lastModifiedDate":"2023-10-03"},{"lineNumber":450,"author":{"gitId":"-"},"content":"* prefer desktop apps over other types","lastModifiedDate":"2020-05-23"},{"lineNumber":451,"author":{"gitId":"-"},"content":"* can type fast","lastModifiedDate":"2020-05-23"},{"lineNumber":452,"author":{"gitId":"-"},"content":"* prefers typing to mouse interactions","lastModifiedDate":"2020-05-26"},{"lineNumber":453,"author":{"gitId":"-"},"content":"* is reasonably comfortable using CLI apps","lastModifiedDate":"2020-05-23"},{"lineNumber":454,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":455,"author":{"gitId":"s-peiran"},"content":"**Value proposition**:","lastModifiedDate":"2023-10-03"},{"lineNumber":456,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":457,"author":{"gitId":"s-peiran"},"content":"* Allow users to manage their meeting minutes based on their contacts","lastModifiedDate":"2023-10-03"},{"lineNumber":458,"author":{"gitId":"s-peiran"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":459,"author":{"gitId":"s-peiran"},"content":"* manage contacts faster than a typical mouse/GUI driven app","lastModifiedDate":"2023-10-03"},{"lineNumber":460,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":461,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":462,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":463,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":464,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":465,"author":{"gitId":"chiayunrong"},"content":"| Priority | As a …​          | I can …​                                                      | So that I can…​                                              |","lastModifiedDate":"2023-09-30"},{"lineNumber":466,"author":{"gitId":"chiayunrong"},"content":"|----------|------------------|---------------------------------------------------------------|--------------------------------------------------------------|","lastModifiedDate":"2023-10-12"},{"lineNumber":467,"author":{"gitId":"chiayunrong"},"content":"| `* * *`  | user             | create meeting cards                                          | keep track of meeting details                                |","lastModifiedDate":"2023-10-12"},{"lineNumber":468,"author":{"gitId":"chiayunrong"},"content":"| `* * *`  | user             | view my list of meetings                                      | see my upcoming meetings                                     |","lastModifiedDate":"2023-10-12"},{"lineNumber":469,"author":{"gitId":"chiayunrong"},"content":"| `* * *`  | user             | edit my meeting cards                                         | make changes to the meeting                                  |","lastModifiedDate":"2023-10-12"},{"lineNumber":470,"author":{"gitId":"chiayunrong"},"content":"| `* * *`  | user             | take notes about meetings                                     | remember key points of discussion                            |","lastModifiedDate":"2023-10-12"},{"lineNumber":471,"author":{"gitId":"chiayunrong"},"content":"| `* * *`  | user             | delete a meeting                                              | remove unwanted meeting cards                                |","lastModifiedDate":"2023-10-12"},{"lineNumber":472,"author":{"gitId":"chiayunrong"},"content":"| `* * *`  | user             | create contact cards                                          | keep track of a contact\u0027s details                            |","lastModifiedDate":"2023-10-12"},{"lineNumber":473,"author":{"gitId":"chiayunrong"},"content":"| `* * *`  | user             | view my list of contacts                                      | keep track of the people I know                              |","lastModifiedDate":"2023-10-12"},{"lineNumber":474,"author":{"gitId":"chiayunrong"},"content":"| `* * *`  | user             | edit my contact cards                                         | make changes to a contact\u0027s details                          |","lastModifiedDate":"2023-10-12"},{"lineNumber":475,"author":{"gitId":"s-peiran"},"content":"| `* * *`  | user             | delete contacts                                               | manage my contacts                                           |","lastModifiedDate":"2023-10-03"},{"lineNumber":476,"author":{"gitId":"chiayunrong"},"content":"| `* * *`  | user             | create notes for contacts                                     | keep track of additional information for my contacts         |","lastModifiedDate":"2023-10-12"},{"lineNumber":477,"author":{"gitId":"chiayunrong"},"content":"| `* *`    | user             | tag contacts                                                  | filter my contacts based on subjects or courses              |","lastModifiedDate":"2023-10-12"},{"lineNumber":478,"author":{"gitId":"jonyeokj"},"content":"| `* *`    | user             | attach a photo to a contact                                   | visually identify and remember my classmates                 |","lastModifiedDate":"2023-10-02"},{"lineNumber":479,"author":{"gitId":"chiayunrong"},"content":"| `* *`    | user             | color-code my contacts                                        | for a visual representation of my network                    |","lastModifiedDate":"2023-10-12"},{"lineNumber":480,"author":{"gitId":"chiayunrong"},"content":"| `* *`    | new user         | see a list of commands                                        | learn more about how to use the application                  |","lastModifiedDate":"2023-10-12"},{"lineNumber":481,"author":{"gitId":"chiayunrong"},"content":"| `* *`    | new user         | have a default timezone                                       | dates are accurately recorded in my timezone                 |","lastModifiedDate":"2023-10-12"},{"lineNumber":482,"author":{"gitId":"chiayunrong"},"content":"| `* *`    | user             | pin important contacts                                        | find my important contacts quickly                           |","lastModifiedDate":"2023-10-12"},{"lineNumber":483,"author":{"gitId":"chiayunrong"},"content":"| `* *`    | user             | see a list of upcoming meetings and tasks for the day         | know how to plan my day                                      |","lastModifiedDate":"2023-10-12"},{"lineNumber":484,"author":{"gitId":"chiayunrong"},"content":"| `* *`    | user             | add hyperlinks or references to online resources within notes | have the convenience of one-click access to online materials |","lastModifiedDate":"2023-10-12"},{"lineNumber":485,"author":{"gitId":"chiayunrong"},"content":"| `* *`    | forgetful user   | set a reminder for an upcoming meeting                        | I won\u0027t miss the meeting                                     |","lastModifiedDate":"2023-10-12"},{"lineNumber":486,"author":{"gitId":"chiayunrong"},"content":"| `* *`    | user             | create follow-up action items within a meeting\u0027s notes        | keep track of important tasks for a meeting                  |","lastModifiedDate":"2023-10-12"},{"lineNumber":487,"author":{"gitId":"chiayunrong"},"content":"| `* *`    | user             | set deadlines for action items                                | ensure action items are completed in a timely manner         |","lastModifiedDate":"2023-10-12"},{"lineNumber":488,"author":{"gitId":"chiayunrong"},"content":"| `* *`    | user             | set reminders for action items                                | I won\u0027t forget the action items                              |","lastModifiedDate":"2023-10-12"},{"lineNumber":489,"author":{"gitId":"chiayunrong"},"content":"| `* *`    | user             | view the edit history of my notes                             | backtrack on my note-taking changes                          |","lastModifiedDate":"2023-10-12"},{"lineNumber":490,"author":{"gitId":"chiayunrong"},"content":"| `*`      | experienced user | encrypt my contact and meeting cards                          | ensure the privacy and security of my data                   |","lastModifiedDate":"2023-09-30"},{"lineNumber":491,"author":{"gitId":"chiayunrong"},"content":"| `*`      | experienced user | backup my contact and meeting cards                           | ensure redundancy for my data                                |","lastModifiedDate":"2023-09-30"},{"lineNumber":492,"author":{"gitId":"chiayunrong"},"content":"| `*`      | user             | filter contacts based on collaboration frequency              | identify frequent collaborators                              |","lastModifiedDate":"2023-10-12"},{"lineNumber":493,"author":{"gitId":"jacobcuison"},"content":"| `*`      | forgetful user   | see a list of the most recent actions I have performed        | remember what I have added or deleted                        |","lastModifiedDate":"2023-10-03"},{"lineNumber":494,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":495,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":496,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":497,"author":{"gitId":"chiayunrong"},"content":"(For all use cases below, the **System** is the `Notenote` and the **Actor** is the `user`, unless specified otherwise)","lastModifiedDate":"2023-09-30"},{"lineNumber":498,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":499,"author":{"gitId":"chiayunrong"},"content":"**UC01 - Create a meeting**","lastModifiedDate":"2023-09-30"},{"lineNumber":500,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":501,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":502,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":503,"author":{"gitId":"chiayunrong"},"content":"1. User requests to create a meeting specifying meeting name, notes, and contact(s).","lastModifiedDate":"2023-09-30"},{"lineNumber":504,"author":{"gitId":"chiayunrong"},"content":"2. Notenote creates the meeting card.","lastModifiedDate":"2023-09-30"},{"lineNumber":505,"author":{"gitId":"chiayunrong"},"content":"3. Notenote displays the newly created meeting card.","lastModifiedDate":"2023-09-30"},{"lineNumber":506,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":507,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":508,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":509,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":510,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":511,"author":{"gitId":"chiayunrong"},"content":"* 1a. The request is in an improper format.","lastModifiedDate":"2023-09-30"},{"lineNumber":512,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":513,"author":{"gitId":"chiayunrong"},"content":"    * 1a1. Notenote shows an error message.","lastModifiedDate":"2023-09-30"},{"lineNumber":514,"author":{"gitId":"chiayunrong"},"content":"    * 1a2. User request to create a meeting in the correct format.","lastModifiedDate":"2023-10-26"},{"lineNumber":515,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":516,"author":{"gitId":"chiayunrong"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2023-09-30"},{"lineNumber":517,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":518,"author":{"gitId":"chiayunrong"},"content":"* 1b. The specified contact(s) do/does not exist in Notenote.","lastModifiedDate":"2023-09-30"},{"lineNumber":519,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":520,"author":{"gitId":"chiayunrong"},"content":"    * 1b1. Notenote shows an error message.","lastModifiedDate":"2023-09-30"},{"lineNumber":521,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":522,"author":{"gitId":"jonyeokj"},"content":"        Use case ends.","lastModifiedDate":"2023-10-26"},{"lineNumber":523,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":524,"author":{"gitId":"jonyeokj"},"content":"**UC02 - Delete a meeting**","lastModifiedDate":"2023-10-26"},{"lineNumber":525,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":526,"author":{"gitId":"jonyeokj"},"content":"**MSS**","lastModifiedDate":"2023-10-26"},{"lineNumber":527,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":528,"author":{"gitId":"jonyeokj"},"content":"1. User requests to delete a meeting specifying meeting index.","lastModifiedDate":"2023-10-26"},{"lineNumber":529,"author":{"gitId":"jonyeokj"},"content":"2. Notenote validates the provided index, retrieves the corresponding meeting, and deletes it.","lastModifiedDate":"2023-10-26"},{"lineNumber":530,"author":{"gitId":"jonyeokj"},"content":"3. Notenote confirms the deletion and updates the display.","lastModifiedDate":"2023-10-26"},{"lineNumber":531,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":532,"author":{"gitId":"jonyeokj"},"content":"    Use case ends.","lastModifiedDate":"2023-10-26"},{"lineNumber":533,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":534,"author":{"gitId":"jonyeokj"},"content":"**Extensions**","lastModifiedDate":"2023-10-26"},{"lineNumber":535,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":536,"author":{"gitId":"jonyeokj"},"content":"* 1a. The request is in an improper format.","lastModifiedDate":"2023-10-26"},{"lineNumber":537,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":538,"author":{"gitId":"jonyeokj"},"content":"    * \u003cins\u003e(Refer to UC01, 1a)\u003c/ins\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":539,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":540,"author":{"gitId":"jonyeokj"},"content":"* 1b. The specified meeting index is invalid or does not exist in Notenote.","lastModifiedDate":"2023-10-26"},{"lineNumber":541,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":542,"author":{"gitId":"jonyeokj"},"content":"    * \u003cins\u003e(Refer to UC01, 1b)\u003c/ins\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":543,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":544,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":545,"author":{"gitId":"jonyeokj"},"content":"**UC03 - Edit a meeting**","lastModifiedDate":"2023-10-26"},{"lineNumber":546,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":547,"author":{"gitId":"jonyeokj"},"content":"**MSS**","lastModifiedDate":"2023-10-26"},{"lineNumber":548,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":549,"author":{"gitId":"jonyeokj"},"content":"1. User requests to edit a meeting specifying meeting index and changes to be made (e.g., meeting title, time, etc.).","lastModifiedDate":"2023-10-26"},{"lineNumber":550,"author":{"gitId":"jonyeokj"},"content":"2. Notenote validates the provided index, retrieves the corresponding meeting, and applies the requested changes.","lastModifiedDate":"2023-10-26"},{"lineNumber":551,"author":{"gitId":"jonyeokj"},"content":"3. Notenote saves the changes and displays the updated meeting card.","lastModifiedDate":"2023-10-26"},{"lineNumber":552,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":553,"author":{"gitId":"chiayunrong"},"content":"    Use case ends.","lastModifiedDate":"2023-09-30"},{"lineNumber":554,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":555,"author":{"gitId":"jonyeokj"},"content":"**Extensions**","lastModifiedDate":"2023-10-26"},{"lineNumber":556,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":557,"author":{"gitId":"jonyeokj"},"content":"* 1a. The request is in an improper format.","lastModifiedDate":"2023-10-26"},{"lineNumber":558,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":559,"author":{"gitId":"jonyeokj"},"content":"    * \u003cins\u003e(Refer to UC01, 1a)\u003c/ins\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":560,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":561,"author":{"gitId":"jonyeokj"},"content":"* 1b. The specified meeting index is invalid or does not exist in Notenote.","lastModifiedDate":"2023-10-26"},{"lineNumber":562,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":563,"author":{"gitId":"jonyeokj"},"content":"    * \u003cins\u003e(Refer to UC01, 1b)\u003c/ins\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":564,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":565,"author":{"gitId":"jonyeokj"},"content":"**UC04 - Take notes about meetings**","lastModifiedDate":"2023-10-26"},{"lineNumber":566,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":567,"author":{"gitId":"s-peiran"},"content":"**MSS**","lastModifiedDate":"2023-10-03"},{"lineNumber":568,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":569,"author":{"gitId":"s-peiran"},"content":"1. User selects a meeting and updates it with notes/comments/remarks.","lastModifiedDate":"2023-10-03"},{"lineNumber":570,"author":{"gitId":"s-peiran"},"content":"2. The meeting is updated with the given notes/comments/remarks.","lastModifiedDate":"2023-10-03"},{"lineNumber":571,"author":{"gitId":"s-peiran"},"content":"3. Notenote displays the meeting with the updated notes/comments/remarks.","lastModifiedDate":"2023-10-03"},{"lineNumber":572,"author":{"gitId":"s-peiran"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":573,"author":{"gitId":"s-peiran"},"content":"    Use case ends.","lastModifiedDate":"2023-10-03"},{"lineNumber":574,"author":{"gitId":"s-peiran"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":575,"author":{"gitId":"s-peiran"},"content":"**Extensions**","lastModifiedDate":"2023-10-03"},{"lineNumber":576,"author":{"gitId":"s-peiran"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":577,"author":{"gitId":"s-peiran"},"content":"* 1a. The specified meeting(s) do/does not exist in Notenote.","lastModifiedDate":"2023-10-03"},{"lineNumber":578,"author":{"gitId":"s-peiran"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":579,"author":{"gitId":"s-peiran"},"content":"    * 1a1. Notenote shows an error message.","lastModifiedDate":"2023-10-03"},{"lineNumber":580,"author":{"gitId":"s-peiran"},"content":"    * 1a2. User acknowledges the error message.","lastModifiedDate":"2023-10-03"},{"lineNumber":581,"author":{"gitId":"s-peiran"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":582,"author":{"gitId":"s-peiran"},"content":"      Use case ends.","lastModifiedDate":"2023-10-03"},{"lineNumber":583,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":584,"author":{"gitId":"jonyeokj"},"content":"**UC05 - Add additional contacts to a meeting**","lastModifiedDate":"2023-10-26"},{"lineNumber":585,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":586,"author":{"gitId":"chiayunrong"},"content":"**MSS**","lastModifiedDate":"2023-10-26"},{"lineNumber":587,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":588,"author":{"gitId":"chiayunrong"},"content":"1. User \u003cins\u003ecreates a meeting (UC01) .\u003c/ins\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":589,"author":{"gitId":"chiayunrong"},"content":"2. User requests to add contacts to the meeting.","lastModifiedDate":"2023-10-26"},{"lineNumber":590,"author":{"gitId":"chiayunrong"},"content":"3. Notenote displays the details of the meeting with the newly added contact.","lastModifiedDate":"2023-10-26"},{"lineNumber":591,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":592,"author":{"gitId":"chiayunrong"},"content":"    Use case ends.","lastModifiedDate":"2023-10-26"},{"lineNumber":593,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":594,"author":{"gitId":"chiayunrong"},"content":"**Extensions**","lastModifiedDate":"2023-10-26"},{"lineNumber":595,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":596,"author":{"gitId":"chiayunrong"},"content":"* 2a. The request is in an improper format.","lastModifiedDate":"2023-10-26"},{"lineNumber":597,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":598,"author":{"gitId":"chiayunrong"},"content":"    * 2a1. Notenote shows an error message.","lastModifiedDate":"2023-10-26"},{"lineNumber":599,"author":{"gitId":"chiayunrong"},"content":"    * 2a2. User request to add contacts to the meeting in the correct format.","lastModifiedDate":"2023-10-26"},{"lineNumber":600,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":601,"author":{"gitId":"chiayunrong"},"content":"      Use case resumes at step 3.","lastModifiedDate":"2023-10-26"},{"lineNumber":602,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":603,"author":{"gitId":"chiayunrong"},"content":"* 2b. The specified contact(s)/meeting do/does not exist in Notenote.","lastModifiedDate":"2023-10-26"},{"lineNumber":604,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":605,"author":{"gitId":"chiayunrong"},"content":"    * 2b1. Notenote shows an error message.","lastModifiedDate":"2023-10-26"},{"lineNumber":606,"author":{"gitId":"chiayunrong"},"content":"    * 2b2. User requests to add contacts with existing contact(s)/meeting.","lastModifiedDate":"2023-10-26"},{"lineNumber":607,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":608,"author":{"gitId":"chiayunrong"},"content":"      Use case resumes at step 3.","lastModifiedDate":"2023-10-26"},{"lineNumber":609,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":610,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":611,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":612,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":613,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":614,"author":{"gitId":"-"},"content":"1. Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2020-05-23"},{"lineNumber":615,"author":{"gitId":"jacobcuison"},"content":"2. Should be able to hold up to 1000 contacts without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2023-10-03"},{"lineNumber":616,"author":{"gitId":"jonyeokj"},"content":"3. A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2023-10-26"},{"lineNumber":617,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":618,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":619,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":620,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":621,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":622,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, OS-X","lastModifiedDate":"2020-05-23"},{"lineNumber":623,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":624,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":625,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":626,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":627,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":628,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":629,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":630,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23"},{"lineNumber":631,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":632,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":633,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":634,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":635,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":636,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":637,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":638,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":639,"author":{"gitId":"-"},"content":"    1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":640,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":641,"author":{"gitId":"s-peiran"},"content":"    1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be","lastModifiedDate":"2023-10-03"},{"lineNumber":642,"author":{"gitId":"s-peiran"},"content":"       optimum.","lastModifiedDate":"2023-10-03"},{"lineNumber":643,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":644,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":645,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":646,"author":{"gitId":"-"},"content":"    1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":647,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":648,"author":{"gitId":"-"},"content":"    1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":649,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":650,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":651,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":652,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":653,"author":{"gitId":"jacobcuison"},"content":"### Deleting a contact","lastModifiedDate":"2023-10-03"},{"lineNumber":654,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":655,"author":{"gitId":"jacobcuison"},"content":"1. Deleting a contact while all contacts are being shown","lastModifiedDate":"2023-10-03"},{"lineNumber":656,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":657,"author":{"gitId":"jacobcuison"},"content":"    1. Prerequisites: List all contacts using the `list` command. Multiple contacts in the list.","lastModifiedDate":"2023-10-03"},{"lineNumber":658,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":659,"author":{"gitId":"chiayunrong"},"content":"    1. Test case: `delete -id 1`\u003cbr\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":660,"author":{"gitId":"s-peiran"},"content":"       Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message.","lastModifiedDate":"2023-10-03"},{"lineNumber":661,"author":{"gitId":"s-peiran"},"content":"       Timestamp in the status bar is updated.","lastModifiedDate":"2023-10-03"},{"lineNumber":662,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":663,"author":{"gitId":"chiayunrong"},"content":"    1. Test case: `delete -id 0`\u003cbr\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":664,"author":{"gitId":"jacobcuison"},"content":"       Expected: No contact is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2023-10-03"},{"lineNumber":665,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":666,"author":{"gitId":"-"},"content":"    1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":667,"author":{"gitId":"-"},"content":"       Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":668,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":669,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":670,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":671,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":672,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":673,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":674,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":675,"author":{"gitId":"-"},"content":"    1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23"},{"lineNumber":676,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":677,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"jonyeokj":73,"jacobcuison":63,"s-peiran":126,"chiayunrong":108,"-":307}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"s-peiran"},"content":"# User Guide","lastModifiedDate":"2023-10-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"s-peiran"},"content":"Notenote is a desktop meeting note-taking application that allows users to efficiently record notes for their contact.","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"chiayunrong"},"content":"Notenote provide tools for organizing and categorizing contacts in a systematic and easy-to-navigate structure.","lastModifiedDate":"2023-10-05"},{"lineNumber":5,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":6,"author":{"gitId":"s-peiran"},"content":"## Table of Contents","lastModifiedDate":"2023-10-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"s-peiran"},"content":"- [Contact Management](#contact-management)","lastModifiedDate":"2023-10-03"},{"lineNumber":9,"author":{"gitId":"chiayunrong"},"content":"    - [Create New Contact](#create-new-contact)","lastModifiedDate":"2023-10-05"},{"lineNumber":10,"author":{"gitId":"chiayunrong"},"content":"    - [View a Contact](#view-a-contact)","lastModifiedDate":"2023-10-05"},{"lineNumber":11,"author":{"gitId":"chiayunrong"},"content":"    - [List All Contacts](#list-all-contacts)","lastModifiedDate":"2023-10-05"},{"lineNumber":12,"author":{"gitId":"s-peiran"},"content":"    - [Delete a Contact](#delete-a-contact)","lastModifiedDate":"2023-10-03"},{"lineNumber":13,"author":{"gitId":"chiayunrong"},"content":"- [Meeting Management](#meeting-management)","lastModifiedDate":"2023-10-05"},{"lineNumber":14,"author":{"gitId":"chiayunrong"},"content":"    - [Create a New Meeting](#create-a-new-meeting)","lastModifiedDate":"2023-10-05"},{"lineNumber":15,"author":{"gitId":"chiayunrong"},"content":"    - [View a Meeting](#view-a-meeting)","lastModifiedDate":"2023-10-05"},{"lineNumber":16,"author":{"gitId":"chiayunrong"},"content":"    - [List All Meetings](#list-all-meetings)","lastModifiedDate":"2023-10-05"},{"lineNumber":17,"author":{"gitId":"chiayunrong"},"content":"    - [Delete a Meeting](#delete-a-meeting)","lastModifiedDate":"2023-10-05"},{"lineNumber":18,"author":{"gitId":"s-peiran"},"content":"    - [Edit a Meeting](#edit-a-meeting)","lastModifiedDate":"2023-10-27"},{"lineNumber":19,"author":{"gitId":"chiayunrong"},"content":"    - [Add Contact to Meeting](#add-contact-to-meeting)","lastModifiedDate":"2023-10-05"},{"lineNumber":20,"author":{"gitId":"chiayunrong"},"content":"    - [Delete Contact from Meeting](#delete-contact-from-meeting)","lastModifiedDate":"2023-10-05"},{"lineNumber":21,"author":{"gitId":"s-peiran"},"content":"- [Note-Taking](#note-taking)","lastModifiedDate":"2023-10-03"},{"lineNumber":22,"author":{"gitId":"chiayunrong"},"content":"    - [Add Notes to a Contact or Meeting](#add-notes-to-a-contact-or-meeting)","lastModifiedDate":"2023-10-05"},{"lineNumber":23,"author":{"gitId":"chiayunrong"},"content":"    - [Delete Notes from a Contact or Meeting](#delete-notes-from-a-contact-or-meeting)","lastModifiedDate":"2023-10-05"},{"lineNumber":24,"author":{"gitId":"s-peiran"},"content":"- [Miscellaneous](#miscellaneous)","lastModifiedDate":"2023-10-03"},{"lineNumber":25,"author":{"gitId":"chiayunrong"},"content":"    - [View List of Available Commands](#view-list-of-available-commands)","lastModifiedDate":"2023-10-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"s-peiran"},"content":"---","lastModifiedDate":"2023-10-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"chiayunrong"},"content":"### Mode","lastModifiedDate":"2023-10-26"},{"lineNumber":30,"author":{"gitId":"s-peiran"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":31,"author":{"gitId":"s-peiran"},"content":"- **What it does**: Toggles the mode of the application between \"contacts\" and \"meetings\". The application defaults to","lastModifiedDate":"2023-10-27"},{"lineNumber":32,"author":{"gitId":"s-peiran"},"content":"  the \"contacts\" mode. The mode of the application determines the context in which the following commands are executed","lastModifiedDate":"2023-10-27"},{"lineNumber":33,"author":{"gitId":"s-peiran"},"content":"  upon:","lastModifiedDate":"2023-10-27"},{"lineNumber":34,"author":{"gitId":"chiayunrong"},"content":"    1. add","lastModifiedDate":"2023-10-26"},{"lineNumber":35,"author":{"gitId":"chiayunrong"},"content":"    2. list","lastModifiedDate":"2023-10-26"},{"lineNumber":36,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":37,"author":{"gitId":"chiayunrong"},"content":"- **Command Format**: `mode`","lastModifiedDate":"2023-10-26"},{"lineNumber":38,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":39,"author":{"gitId":"chiayunrong"},"content":"- **Expected Outputs**:","lastModifiedDate":"2023-10-26"},{"lineNumber":40,"author":{"gitId":"chiayunrong"},"content":"    - “Application mode set: [CURRENT_MODE].”","lastModifiedDate":"2023-10-26"},{"lineNumber":41,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2023-10-26"},{"lineNumber":43,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":44,"author":{"gitId":"chiayunrong"},"content":"## Contact Management:","lastModifiedDate":"2023-10-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"chiayunrong"},"content":"### Create New Contact","lastModifiedDate":"2023-10-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"chiayunrong"},"content":"- **What it does**: Adds a new contact to the list when in the \"contacts\" mode.","lastModifiedDate":"2023-10-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"chiayunrong"},"content":"- **Command Format**: `add n/CONTACT_NAME p/PHONE_NUMBER e/EMAIL_ADDRESS a/RESIDENTIAL_ADDRESS [t/TAGS]`","lastModifiedDate":"2023-11-02"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"chiayunrong"},"content":"- **Example**: `add n/Sarah Woo p/82775346 e/sarah.woo@gmail.com a/Blk227 Sims Drive`","lastModifiedDate":"2023-11-02"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"chiayunrong"},"content":"- **Acceptable Values**:","lastModifiedDate":"2023-10-05"},{"lineNumber":55,"author":{"gitId":"chiayunrong"},"content":"    - CONTACT_NAME: String, at least 2 characters long.","lastModifiedDate":"2023-10-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"chiayunrong"},"content":"- **Expected Outputs**:","lastModifiedDate":"2023-10-05"},{"lineNumber":58,"author":{"gitId":"chiayunrong"},"content":"    - Success: “Successfully added [CONTACT_NAME].”","lastModifiedDate":"2023-10-05"},{"lineNumber":59,"author":{"gitId":"chiayunrong"},"content":"    - Failure:","lastModifiedDate":"2023-10-05"},{"lineNumber":60,"author":{"gitId":"s-peiran"},"content":"        - If the CONTACT_NAME already exists: `This contact already exists in the address book`","lastModifiedDate":"2023-10-13"},{"lineNumber":61,"author":{"gitId":"s-peiran"},"content":"        - If invalid command format: `Invalid command format!","lastModifiedDate":"2023-10-13"},{"lineNumber":62,"author":{"gitId":"chiayunrong"},"content":"          add contact: Adds a contact to the address book. Parameters: n/NAME p/PHONE e/EMAIL a/ADDRESS [t/TAG]... Example: add contact n/John Doe p/98765432 e/johnd@example.com a/311, Clementi Ave 2, #02-25 t/friends t/owesMoney`","lastModifiedDate":"2023-11-02"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2023-10-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"chiayunrong"},"content":"### View a Contact","lastModifiedDate":"2023-10-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"chiayunrong"},"content":"- **What it does**: Displays details of a specific contact when in the \"contacts\" mode.","lastModifiedDate":"2023-10-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"chiayunrong"},"content":"- **Command Format**: `view id/[CONTACT_ID]`","lastModifiedDate":"2023-11-02"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"chiayunrong"},"content":"- **Example**: `view id/1`","lastModifiedDate":"2023-11-02"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"chiayunrong"},"content":"- **Acceptable Values**:","lastModifiedDate":"2023-10-05"},{"lineNumber":75,"author":{"gitId":"chiayunrong"},"content":"    - CONTACT_ID: Non-negative integer.","lastModifiedDate":"2023-10-05"},{"lineNumber":76,"author":{"gitId":"chiayunrong"},"content":"    - CONTACT_NAME: String, at least 2 characters long. Not case sensitive.","lastModifiedDate":"2023-10-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"chiayunrong"},"content":"- **Expected Outputs**:","lastModifiedDate":"2023-10-05"},{"lineNumber":79,"author":{"gitId":"chiayunrong"},"content":"    - Success: \"Displaying details for [CONTACT_NAME].\"","lastModifiedDate":"2023-10-05"},{"lineNumber":80,"author":{"gitId":"chiayunrong"},"content":"    - Failure:","lastModifiedDate":"2023-10-05"},{"lineNumber":81,"author":{"gitId":"s-peiran"},"content":"        - If the CONTACT_ID or CONTACT_NAME does not exist: `Contact not found!`","lastModifiedDate":"2023-10-13"},{"lineNumber":82,"author":{"gitId":"s-peiran"},"content":"        - If invalid command","lastModifiedDate":"2023-10-13"},{"lineNumber":83,"author":{"gitId":"chiayunrong"},"content":"          format: `Invalid command format! view contact: View a contact to the address book. Parameters: id/[CONTACT_ID]","lastModifiedDate":"2023-11-02"},{"lineNumber":84,"author":{"gitId":"chiayunrong"},"content":"          Example: view contact id/1`","lastModifiedDate":"2023-11-02"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"s-peiran"},"content":"---","lastModifiedDate":"2023-10-03"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"chiayunrong"},"content":"### List All Contacts","lastModifiedDate":"2023-10-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"s-peiran"},"content":"- **What it does**: Shows all contacts in the list when in the \"contacts\" mode. All fields after list are optional","lastModifiedDate":"2023-10-31"},{"lineNumber":91,"author":{"gitId":"s-peiran"},"content":"  arguments.","lastModifiedDate":"2023-10-31"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"chiayunrong"},"content":"- **Command Format**: `list n/[NAME] p/[PHONE] e/[EMAIL] a/[ADDRESS] t/[TAG] c/[NOTE]`","lastModifiedDate":"2023-11-02"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"chiayunrong"},"content":"- **Expected Outputs**:","lastModifiedDate":"2023-10-05"},{"lineNumber":96,"author":{"gitId":"s-peiran"},"content":"    - Success: `%d contacts listed`","lastModifiedDate":"2023-10-31"},{"lineNumber":97,"author":{"gitId":"chiayunrong"},"content":"    - Failure:","lastModifiedDate":"2023-10-05"},{"lineNumber":98,"author":{"gitId":"s-peiran"},"content":"        - If no contacts are available: `No contacts available.`","lastModifiedDate":"2023-10-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"s-peiran"},"content":"### Editing A Contact","lastModifiedDate":"2023-10-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":104,"author":{"gitId":"s-peiran"},"content":"- **What it does**: Edits an existing person in the address book.","lastModifiedDate":"2023-10-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":106,"author":{"gitId":"chiayunrong"},"content":"- **Command Format**: `edit id/INDEX n/CONTACT_NAME p/PHONE_NUMBER e/EMAIL_ADDRESS a/RESIDENTIAL_ADDRESS [t/TAGS]`","lastModifiedDate":"2023-11-02"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":108,"author":{"gitId":"chiayunrong"},"content":"- **Example**: `edit id/3 p/90649923`","lastModifiedDate":"2023-11-02"},{"lineNumber":109,"author":{"gitId":"s-peiran"},"content":" ","lastModifiedDate":"2023-10-27"},{"lineNumber":110,"author":{"gitId":"s-peiran"},"content":"- **Expected Outputs**:","lastModifiedDate":"2023-10-27"},{"lineNumber":111,"author":{"gitId":"jacobcuison"},"content":"  - Success: `Edited Contact: Alex Yeoh; Phone: 90649923; Email: alex.yeoh@gmail.com; Address: Blk 30 Geylang Street 29; Tags: `","lastModifiedDate":"2023-11-02"},{"lineNumber":112,"author":{"gitId":"s-peiran"},"content":"  - Failure:","lastModifiedDate":"2023-10-27"},{"lineNumber":113,"author":{"gitId":"s-peiran"},"content":"      - If the MEETING_ID does not exist: `The contact index provided is invalid`","lastModifiedDate":"2023-10-27"},{"lineNumber":114,"author":{"gitId":"s-peiran"},"content":"      - If invalid command format: `Invalid command format!","lastModifiedDate":"2023-10-27"},{"lineNumber":115,"author":{"gitId":"chiayunrong"},"content":"        edit: Edits the details of the contact identified by the index number used in the displayed contact list. Existing values will be overwritten by the input values. Parameters: INDEX (must be a positive integer) [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [t/TAG] [c/NOTE]... Example: edit 1 p/91234567 -ejohndoe@example.com`","lastModifiedDate":"2023-11-02"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":117,"author":{"gitId":"s-peiran"},"content":"---","lastModifiedDate":"2023-10-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":119,"author":{"gitId":"chiayunrong"},"content":"### Delete a Contact","lastModifiedDate":"2023-10-05"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"chiayunrong"},"content":"- **What it does**: Removes a contact based on the given ID when in the \"contacts\" mode.","lastModifiedDate":"2023-10-26"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"chiayunrong"},"content":"- **Command Format**: `delete id/[CONTACT_ID]`","lastModifiedDate":"2023-11-02"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"chiayunrong"},"content":"- **Example**: `delete id/3`","lastModifiedDate":"2023-11-02"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"chiayunrong"},"content":"- **Acceptable Values**:","lastModifiedDate":"2023-10-05"},{"lineNumber":128,"author":{"gitId":"chiayunrong"},"content":"    - CONTACT_ID: Non-negative integer.","lastModifiedDate":"2023-10-05"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"chiayunrong"},"content":"- **Expected Outputs**:","lastModifiedDate":"2023-10-05"},{"lineNumber":131,"author":{"gitId":"chiayunrong"},"content":"    - Success: \"Successfully deleted [NAME of the contact] from the contact list.\"","lastModifiedDate":"2023-10-05"},{"lineNumber":132,"author":{"gitId":"chiayunrong"},"content":"    - Failure:","lastModifiedDate":"2023-10-05"},{"lineNumber":133,"author":{"gitId":"s-peiran"},"content":"        - If the CONTACT_ID does not exist: `Contact not found.`","lastModifiedDate":"2023-10-13"},{"lineNumber":134,"author":{"gitId":"s-peiran"},"content":"        - If the CONTACT_ID is not provided: `Please provide a contact ID.`","lastModifiedDate":"2023-10-13"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"chiayunrong"},"content":"## Meeting Management:","lastModifiedDate":"2023-10-05"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"chiayunrong"},"content":"### Create a New Meeting","lastModifiedDate":"2023-10-05"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"chiayunrong"},"content":"- **What it does**: Organizes a new meeting with optional notes and contacts when in the \"meetings\" mode.","lastModifiedDate":"2023-10-26"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"chiayunrong"},"content":"- **Command Format**: `add title/MEETING_NAME time/DD/MM/YYYY HH:MM place/OCATION [desc/DESCRIPTION]`","lastModifiedDate":"2023-11-02"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"chiayunrong"},"content":"- **Example**: `add title/Project Discussion time/03/10/2023 15:00 place/Terrace desc/Discussing milestones`","lastModifiedDate":"2023-11-02"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":148,"author":{"gitId":"chiayunrong"},"content":"- **Acceptable Values**:","lastModifiedDate":"2023-10-05"},{"lineNumber":149,"author":{"gitId":"chiayunrong"},"content":"    - MEETING_NAME: String, at least 2 characters long.","lastModifiedDate":"2023-10-05"},{"lineNumber":150,"author":{"gitId":"chiayunrong"},"content":"    - NOTES: String, at least 1 character long.","lastModifiedDate":"2023-10-05"},{"lineNumber":151,"author":{"gitId":"chiayunrong"},"content":"    - CONTACT_IDS: Non-negative integers delimited by commas.","lastModifiedDate":"2023-10-05"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":153,"author":{"gitId":"chiayunrong"},"content":"- **Expected Outputs**:","lastModifiedDate":"2023-10-05"},{"lineNumber":154,"author":{"gitId":"chiayunrong"},"content":"    - Success: \"[MEETING_NAME] successfully added.\"","lastModifiedDate":"2023-10-05"},{"lineNumber":155,"author":{"gitId":"chiayunrong"},"content":"    - Failure:","lastModifiedDate":"2023-10-05"},{"lineNumber":156,"author":{"gitId":"s-peiran"},"content":"        - If the MEETING_NAME already exists: `Meeting already exists.`","lastModifiedDate":"2023-10-13"},{"lineNumber":157,"author":{"gitId":"s-peiran"},"content":"        - If invalid command format: `Invalid command format`","lastModifiedDate":"2023-10-13"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":159,"author":{"gitId":"s-peiran"},"content":"---","lastModifiedDate":"2023-10-03"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"chiayunrong"},"content":"### View a Meeting","lastModifiedDate":"2023-10-05"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"chiayunrong"},"content":"- **What it does**: Displays details of a specific meeting when in the \"meetings\" mode.","lastModifiedDate":"2023-10-26"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"chiayunrong"},"content":"- **Command Format**: `view id/[MEETING_ID]`","lastModifiedDate":"2023-11-02"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"chiayunrong"},"content":"- **Example**: `view Project Discussion`","lastModifiedDate":"2023-10-26"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"chiayunrong"},"content":"- **Acceptable Values**:","lastModifiedDate":"2023-10-05"},{"lineNumber":170,"author":{"gitId":"chiayunrong"},"content":"    - MEETING_ID: Non-negative integer.","lastModifiedDate":"2023-10-05"},{"lineNumber":171,"author":{"gitId":"chiayunrong"},"content":"    - MEETING_NAME: String, at least 2 characters long. Not case sensitive.","lastModifiedDate":"2023-10-05"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"chiayunrong"},"content":"- **Expected Outputs**:","lastModifiedDate":"2023-10-05"},{"lineNumber":174,"author":{"gitId":"chiayunrong"},"content":"    - Success: \"Displaying details for [MEETING_NAME].\"","lastModifiedDate":"2023-10-05"},{"lineNumber":175,"author":{"gitId":"chiayunrong"},"content":"    - Failure:","lastModifiedDate":"2023-10-05"},{"lineNumber":176,"author":{"gitId":"s-peiran"},"content":"        - If the MEETING_ID or MEETING_NAME does not exist: `Meeting not found`","lastModifiedDate":"2023-10-13"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"chiayunrong"},"content":"---","lastModifiedDate":"2023-10-05"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"chiayunrong"},"content":"### List All Meetings","lastModifiedDate":"2023-10-05"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"s-peiran"},"content":"- **What it does**: Shows a list of all meetings when in the \"meetings\" mode. All arguments after `list` are optional","lastModifiedDate":"2023-10-31"},{"lineNumber":183,"author":{"gitId":"s-peiran"},"content":"  arguments.","lastModifiedDate":"2023-10-31"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"chiayunrong"},"content":"- **Command Format**: `list title/[TITLE] time/[TIME] place/[PLACE] desc/[DESCRIPTION] m/[NOTE]`","lastModifiedDate":"2023-11-02"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"chiayunrong"},"content":"- **Expected Outputs**:","lastModifiedDate":"2023-10-05"},{"lineNumber":188,"author":{"gitId":"s-peiran"},"content":"    - Success: `%d Meetings Listed!`","lastModifiedDate":"2023-10-31"},{"lineNumber":189,"author":{"gitId":"chiayunrong"},"content":"    - Failure:","lastModifiedDate":"2023-10-05"},{"lineNumber":190,"author":{"gitId":"s-peiran"},"content":"        - If no meetings are found: `No meetings found`","lastModifiedDate":"2023-10-13"},{"lineNumber":191,"author":{"gitId":"s-peiran"},"content":"        - If invalid command format: `Invalid command format`","lastModifiedDate":"2023-10-13"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"chiayunrong"},"content":"---","lastModifiedDate":"2023-10-05"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"chiayunrong"},"content":"### Delete a Meeting","lastModifiedDate":"2023-10-05"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"chiayunrong"},"content":"- **What it does**: Cancels a meeting based on the given ID or name when in the \"meetings\" mode.","lastModifiedDate":"2023-10-26"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"chiayunrong"},"content":"- **Command Format**: `delete -MEETING_ID`","lastModifiedDate":"2023-10-26"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"chiayunrong"},"content":"- **Example**: `delete Project Discussion`","lastModifiedDate":"2023-10-26"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"chiayunrong"},"content":"- **Acceptable Values**:","lastModifiedDate":"2023-10-05"},{"lineNumber":204,"author":{"gitId":"chiayunrong"},"content":"    - MEETING_ID: Non-negative integer.","lastModifiedDate":"2023-10-05"},{"lineNumber":205,"author":{"gitId":"s-peiran"},"content":"    - MEETING_NAME: String, at least 2 characters long.","lastModifiedDate":"2023-10-13"},{"lineNumber":206,"author":{"gitId":"chiayunrong"},"content":"- **Expected Outputs**:","lastModifiedDate":"2023-10-05"},{"lineNumber":207,"author":{"gitId":"chiayunrong"},"content":"    - Success: \"Successfully deleted [MEETING_NAME].\"","lastModifiedDate":"2023-10-05"},{"lineNumber":208,"author":{"gitId":"chiayunrong"},"content":"    - Failure:","lastModifiedDate":"2023-10-05"},{"lineNumber":209,"author":{"gitId":"s-peiran"},"content":"        - If the MEETING_ID does not exist: `Meeting not found`","lastModifiedDate":"2023-10-13"},{"lineNumber":210,"author":{"gitId":"s-peiran"},"content":"        - If the MEETING_ID is not provided: `Please specify a meeting`","lastModifiedDate":"2023-10-13"},{"lineNumber":211,"author":{"gitId":"s-peiran"},"content":"        - If invalid command format: `Invalid command format`","lastModifiedDate":"2023-10-13"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"chiayunrong"},"content":"---","lastModifiedDate":"2023-10-05"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"s-peiran"},"content":"### Edit A Meeting","lastModifiedDate":"2023-10-27"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":217,"author":{"gitId":"s-peiran"},"content":"- **What it does** Edits the details of an existing meeting in the address book.","lastModifiedDate":"2023-10-27"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":219,"author":{"gitId":"chiayunrong"},"content":"- **Command Format**: `edit id/MEETING_ID title/MEETING_NAME time/DD/MM/YYYY HH:MM place/LOCATION [desc/DESCRIPTION]`","lastModifiedDate":"2023-11-02"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":221,"author":{"gitId":"chiayunrong"},"content":"- **Example**: `edit id/1 title/Strategy Planning time/03/10/2023 16:00 place/u-town desc/Discuss prodcut strategy`","lastModifiedDate":"2023-11-02"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":223,"author":{"gitId":"s-peiran"},"content":"- **Acceptable Values**:","lastModifiedDate":"2023-10-27"},{"lineNumber":224,"author":{"gitId":"s-peiran"},"content":"    - MEETING_ID: Non-negative integer.","lastModifiedDate":"2023-10-27"},{"lineNumber":225,"author":{"gitId":"s-peiran"},"content":"    - MEETING_NAME: String, at least 2 characters long.","lastModifiedDate":"2023-10-27"},{"lineNumber":226,"author":{"gitId":"s-peiran"},"content":"- **Expected Outputs**:","lastModifiedDate":"2023-10-27"},{"lineNumber":227,"author":{"gitId":"s-peiran"},"content":"    - Success: \"Edited Meeting [MEETING_NAME].\"","lastModifiedDate":"2023-10-27"},{"lineNumber":228,"author":{"gitId":"s-peiran"},"content":"    - Failure:","lastModifiedDate":"2023-10-27"},{"lineNumber":229,"author":{"gitId":"s-peiran"},"content":"        - If the MEETING_ID does not exist: `The meeting index provided is invalid`","lastModifiedDate":"2023-10-27"},{"lineNumber":230,"author":{"gitId":"s-peiran"},"content":"        - If invalid command format: `Invalid command format!","lastModifiedDate":"2023-10-27"},{"lineNumber":231,"author":{"gitId":"chiayunrong"},"content":"          edit: Edits the details of the meeting identified by the index number used in the displayed meeting list. Existing values will be overwritten by the input values. Parameters: INDEX (must be a positive integer) [title/TITLE] [time/TIME] [place/PLACE] [desc/DESCRIPTION]... Example: edit id/1 place/Zoom desc/Discuss Project Details`","lastModifiedDate":"2023-11-02"},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":233,"author":{"gitId":"s-peiran"},"content":"---","lastModifiedDate":"2023-10-27"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":235,"author":{"gitId":"chiayunrong"},"content":"### Add Contact to Meeting","lastModifiedDate":"2023-10-05"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"chiayunrong"},"content":"- **What it does**: Adds a contact to an existing meeting as a participant when in the \"meetings\" mode.","lastModifiedDate":"2023-10-26"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"chiayunrong"},"content":"- **Command Format**: `addcontact n/CONTACT_NAME title/MEETING_NAME`","lastModifiedDate":"2023-11-02"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"chiayunrong"},"content":"- **Example**: `addcontact n/Sarah Woo title/Project Discussion`","lastModifiedDate":"2023-11-02"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"chiayunrong"},"content":"- **Acceptable Values**:","lastModifiedDate":"2023-10-05"},{"lineNumber":244,"author":{"gitId":"chiayunrong"},"content":"    - MEETING_NAME: String, at least 2 characters long. Not case sensitive.","lastModifiedDate":"2023-10-05"},{"lineNumber":245,"author":{"gitId":"chiayunrong"},"content":"    - CONTACT_NAME: String, at least 2 characters long. Not case sensitive.","lastModifiedDate":"2023-10-05"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"chiayunrong"},"content":"- **Expected Outputs**:","lastModifiedDate":"2023-10-05"},{"lineNumber":248,"author":{"gitId":"chiayunrong"},"content":"    - Success: \"Successfully added contact to [MEETING_NAME].\"","lastModifiedDate":"2023-10-05"},{"lineNumber":249,"author":{"gitId":"chiayunrong"},"content":"    - Failure:","lastModifiedDate":"2023-10-05"},{"lineNumber":250,"author":{"gitId":"s-peiran"},"content":"        - If the MEETING_NAME does not exist: `Meeting not found`","lastModifiedDate":"2023-10-13"},{"lineNumber":251,"author":{"gitId":"s-peiran"},"content":"        - If the CONTACT_NAME does not exist: `Contact not found`","lastModifiedDate":"2023-10-13"},{"lineNumber":252,"author":{"gitId":"s-peiran"},"content":"        - If invalid command format: `Invalid command format!","lastModifiedDate":"2023-10-13"},{"lineNumber":253,"author":{"gitId":"chiayunrong"},"content":"          add contact to meeting: Adds a contact to an existing meeting. Parameters: n/CONTACT_NAME title/MEETING_NAME Example: addcontact n/Sarah Woo title/Project Discussion`","lastModifiedDate":"2023-11-02"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"chiayunrong"},"content":"---","lastModifiedDate":"2023-10-05"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"chiayunrong"},"content":"### Delete Contact from Meeting","lastModifiedDate":"2023-10-05"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":259,"author":{"gitId":"chiayunrong"},"content":"- **What it does**: Removes a contact from an existing meeting when in the \"meetings\" mode.","lastModifiedDate":"2023-10-26"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":261,"author":{"gitId":"chiayunrong"},"content":"- **Command Format**: `deletecontact n/CONTACT_NAME title/MEETING_NAME`","lastModifiedDate":"2023-11-02"},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":263,"author":{"gitId":"chiayunrong"},"content":"- **Example**: `deletecontact n/Sarah Woo title/Project Discussion`","lastModifiedDate":"2023-11-02"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"chiayunrong"},"content":"- **Acceptable Values**:","lastModifiedDate":"2023-10-05"},{"lineNumber":266,"author":{"gitId":"chiayunrong"},"content":"    - MEETING_NAME: String, at least 2 characters long. Not case sensitive.","lastModifiedDate":"2023-10-05"},{"lineNumber":267,"author":{"gitId":"chiayunrong"},"content":"    - CONTACT_NAME: String, at least 2 characters long. Not case sensitive.","lastModifiedDate":"2023-10-05"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"chiayunrong"},"content":"- **Expected Outputs**:","lastModifiedDate":"2023-10-05"},{"lineNumber":270,"author":{"gitId":"chiayunrong"},"content":"    - Success: \"Successfully removed contact from [MEETING_NAME].\"","lastModifiedDate":"2023-10-05"},{"lineNumber":271,"author":{"gitId":"chiayunrong"},"content":"    - Failure:","lastModifiedDate":"2023-10-05"},{"lineNumber":272,"author":{"gitId":"s-peiran"},"content":"        - If the MEETING_NAME does not exist: `Meeting not found`","lastModifiedDate":"2023-10-13"},{"lineNumber":273,"author":{"gitId":"s-peiran"},"content":"        - If the CONTACT_NAME does not exist or isn\u0027t a part of the specified","lastModifiedDate":"2023-10-13"},{"lineNumber":274,"author":{"gitId":"s-peiran"},"content":"          meeting: `Contact not found or not part of the meeting`","lastModifiedDate":"2023-10-13"},{"lineNumber":275,"author":{"gitId":"s-peiran"},"content":"        - If invalid command format: `Invalid command format!","lastModifiedDate":"2023-10-13"},{"lineNumber":276,"author":{"gitId":"chiayunrong"},"content":"          deletecontact : Removes a contact from an existing meeting. Parameters: n/CONTACT_NAME title/MEETING_NAME Example: deletecontact n/Sarah Woo title/Project Discussion`","lastModifiedDate":"2023-11-02"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":278,"author":{"gitId":"chiayunrong"},"content":"---","lastModifiedDate":"2023-10-05"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":280,"author":{"gitId":"chiayunrong"},"content":"## Note-Taking:","lastModifiedDate":"2023-10-05"},{"lineNumber":281,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":282,"author":{"gitId":"chiayunrong"},"content":"### Add Notes to a Contact or Meeting","lastModifiedDate":"2023-10-05"},{"lineNumber":283,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":284,"author":{"gitId":"chiayunrong"},"content":"- **What it does**: Associates notes with a specific contact or meeting","lastModifiedDate":"2023-10-26"},{"lineNumber":285,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":286,"author":{"gitId":"chiayunrong"},"content":"- **Command Format**:","lastModifiedDate":"2023-10-05"},{"lineNumber":287,"author":{"gitId":"chiayunrong"},"content":"    - For Contacts when in \"contacts\" mode: `addnote id/CONTACT_ID_or_CONTACT_NAME c/NOTES`","lastModifiedDate":"2023-11-02"},{"lineNumber":288,"author":{"gitId":"chiayunrong"},"content":"    - For Meetings when in \"Meetings\" mode: `addnote id/MEETING_ID_or_MEETING_NAME m/NOTES`","lastModifiedDate":"2023-11-02"},{"lineNumber":289,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":290,"author":{"gitId":"chiayunrong"},"content":"- **Examples**:","lastModifiedDate":"2023-10-05"},{"lineNumber":291,"author":{"gitId":"chiayunrong"},"content":"    - `addnote id/ 5 c/ Has a dog named Benny`","lastModifiedDate":"2023-11-02"},{"lineNumber":292,"author":{"gitId":"chiayunrong"},"content":"    - `addnote id/ Project Discussion m/ Agenda: Discuss Q2 results`","lastModifiedDate":"2023-11-02"},{"lineNumber":293,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":294,"author":{"gitId":"chiayunrong"},"content":"- **Acceptable Values**:","lastModifiedDate":"2023-10-05"},{"lineNumber":295,"author":{"gitId":"chiayunrong"},"content":"    - CONTACT_ID: Non-negative integer.","lastModifiedDate":"2023-10-05"},{"lineNumber":296,"author":{"gitId":"chiayunrong"},"content":"    - CONTACT_NAME: String, at least 2 characters long. Not case sensitive.","lastModifiedDate":"2023-10-05"},{"lineNumber":297,"author":{"gitId":"chiayunrong"},"content":"    - MEETING_ID: Non-negative integer.","lastModifiedDate":"2023-10-05"},{"lineNumber":298,"author":{"gitId":"chiayunrong"},"content":"    - MEETING_NAME: String, at least 2 characters long. Not case sensitive.","lastModifiedDate":"2023-10-05"},{"lineNumber":299,"author":{"gitId":"chiayunrong"},"content":"    - NOTES: String, at least 1 character long.","lastModifiedDate":"2023-10-05"},{"lineNumber":300,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":301,"author":{"gitId":"chiayunrong"},"content":"- **Expected Outputs**:","lastModifiedDate":"2023-10-05"},{"lineNumber":302,"author":{"gitId":"chiayunrong"},"content":"    - Success:","lastModifiedDate":"2023-10-05"},{"lineNumber":303,"author":{"gitId":"chiayunrong"},"content":"        - \"Successfully added note to contact [CONTACT_NAME].\"","lastModifiedDate":"2023-10-05"},{"lineNumber":304,"author":{"gitId":"chiayunrong"},"content":"        - \"Successfully added note to [MEETING_NAME].\"","lastModifiedDate":"2023-10-05"},{"lineNumber":305,"author":{"gitId":"chiayunrong"},"content":"    - Failure:","lastModifiedDate":"2023-10-05"},{"lineNumber":306,"author":{"gitId":"s-peiran"},"content":"        - If the CONTACT_ID or CONTACT_NAME does not exist: `Contact not found`","lastModifiedDate":"2023-10-13"},{"lineNumber":307,"author":{"gitId":"s-peiran"},"content":"        - If the MEETING_ID or MEETING_NAME does not exist: `Meeting not found`","lastModifiedDate":"2023-10-13"},{"lineNumber":308,"author":{"gitId":"s-peiran"},"content":"        - If the NOTES aren\u0027t provided:  `Please provide the note content`","lastModifiedDate":"2023-10-13"},{"lineNumber":309,"author":{"gitId":"jacobcuison"},"content":"        - If the NOTES already exists for a given contact/meeting: `Error: duplicate notes`","lastModifiedDate":"2023-11-02"},{"lineNumber":310,"author":{"gitId":"s-peiran"},"content":"        - If invalid command format: `Invalid command format!","lastModifiedDate":"2023-10-13"},{"lineNumber":311,"author":{"gitId":"chiayunrong"},"content":"          addnote: Add notes to contact Parameters: id/CONTACT_ID_or_CONTACT_NAME c/NOTES Example: addnote id/5 c/ Has a dog named Benny`","lastModifiedDate":"2023-11-02"},{"lineNumber":312,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":313,"author":{"gitId":"chiayunrong"},"content":"### Delete Notes from a Contact or Meeting","lastModifiedDate":"2023-10-05"},{"lineNumber":314,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":315,"author":{"gitId":"chiayunrong"},"content":"- **What it does**: Removes specified notes from a contact or meeting.","lastModifiedDate":"2023-10-05"},{"lineNumber":316,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":317,"author":{"gitId":"chiayunrong"},"content":"- **Command Format**:","lastModifiedDate":"2023-10-05"},{"lineNumber":318,"author":{"gitId":"chiayunrong"},"content":"    - For Contacts when in \"contacts\" mode: `delete note id/CONTACT_ID_or_CONTACT_NAME noteid/NOTE_ID`","lastModifiedDate":"2023-11-02"},{"lineNumber":319,"author":{"gitId":"chiayunrong"},"content":"    - For Meetings when in \"Meetings\" mode: `delete note id/MEETING_ID_or_MEETING_NAME noteid/NOTE_ID`","lastModifiedDate":"2023-11-02"},{"lineNumber":320,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":321,"author":{"gitId":"chiayunrong"},"content":"- **Examples**:","lastModifiedDate":"2023-10-05"},{"lineNumber":322,"author":{"gitId":"chiayunrong"},"content":"    - `deletenote id/5 index noteid/2`","lastModifiedDate":"2023-11-02"},{"lineNumber":323,"author":{"gitId":"chiayunrong"},"content":"    - `deletenote id/Project Discussion noteid/ 1`","lastModifiedDate":"2023-11-02"},{"lineNumber":324,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":325,"author":{"gitId":"chiayunrong"},"content":"- **Acceptable Values**:","lastModifiedDate":"2023-10-05"},{"lineNumber":326,"author":{"gitId":"chiayunrong"},"content":"    - CONTACT_ID: Non-negative integer.","lastModifiedDate":"2023-10-05"},{"lineNumber":327,"author":{"gitId":"chiayunrong"},"content":"    - CONTACT_NAME: String, at least 2 characters long. Not case sensitive.","lastModifiedDate":"2023-10-05"},{"lineNumber":328,"author":{"gitId":"chiayunrong"},"content":"    - MEETING_ID: Non-negative integer.","lastModifiedDate":"2023-10-05"},{"lineNumber":329,"author":{"gitId":"chiayunrong"},"content":"    - MEETING_NAME: String, at least 2 characters long. Not case sensitive.","lastModifiedDate":"2023-10-05"},{"lineNumber":330,"author":{"gitId":"jacobcuison"},"content":"    - NOTE_INDEX: Non-negative integer. Index of the note as displayed in the notes list of a contact or meeting.","lastModifiedDate":"2023-11-02"},{"lineNumber":331,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":332,"author":{"gitId":"chiayunrong"},"content":"- **Expected Outputs**:","lastModifiedDate":"2023-10-05"},{"lineNumber":333,"author":{"gitId":"chiayunrong"},"content":"    - Success:","lastModifiedDate":"2023-10-05"},{"lineNumber":334,"author":{"gitId":"chiayunrong"},"content":"        - \"Successfully deleted note from contact [CONTACT_NAME].\"","lastModifiedDate":"2023-10-05"},{"lineNumber":335,"author":{"gitId":"chiayunrong"},"content":"        - \"Successfully deleted note from [MEETING_NAME].\"","lastModifiedDate":"2023-10-05"},{"lineNumber":336,"author":{"gitId":"chiayunrong"},"content":"    - Failure:","lastModifiedDate":"2023-10-05"},{"lineNumber":337,"author":{"gitId":"s-peiran"},"content":"        - If the CONTACT_ID or CONTACT_NAME does not exist: `Contact not found`","lastModifiedDate":"2023-10-13"},{"lineNumber":338,"author":{"gitId":"s-peiran"},"content":"        - If the MEETING_ID or MEETING_NAME does not exist: `Meeting not found`","lastModifiedDate":"2023-10-13"},{"lineNumber":339,"author":{"gitId":"s-peiran"},"content":"        - If no note exists for the specified note index in the contact or meeting: `No note found`","lastModifiedDate":"2023-10-13"},{"lineNumber":340,"author":{"gitId":"s-peiran"},"content":"        - If invalid command format: `Invalid command format!","lastModifiedDate":"2023-10-13"},{"lineNumber":341,"author":{"gitId":"chiayunrong"},"content":"          deletenote: Remove notes from contact Parameters: id/CONTACT_ID_or_CONTACT_NAME index/INDEX Example: deletenote id/5 noteid/1`","lastModifiedDate":"2023-11-02"},{"lineNumber":342,"author":{"gitId":"chiayunrong"},"content":"---","lastModifiedDate":"2023-10-05"},{"lineNumber":343,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":344,"author":{"gitId":"chiayunrong"},"content":"## Miscellaneous:","lastModifiedDate":"2023-10-05"},{"lineNumber":345,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":346,"author":{"gitId":"chiayunrong"},"content":"### View List of Available Commands","lastModifiedDate":"2023-10-05"},{"lineNumber":347,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":348,"author":{"gitId":"chiayunrong"},"content":"- **What it does**: Displays a list of available commands for the user.","lastModifiedDate":"2023-10-05"},{"lineNumber":349,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":350,"author":{"gitId":"chiayunrong"},"content":"- **Command Format**: `help`","lastModifiedDate":"2023-10-05"},{"lineNumber":351,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":352,"author":{"gitId":"chiayunrong"},"content":"- **Expected Outputs**:","lastModifiedDate":"2023-10-05"},{"lineNumber":353,"author":{"gitId":"chiayunrong"},"content":"    - Success: Displays a pop-up window with a link to the user guide.","lastModifiedDate":"2023-10-05"}],"authorContributionMap":{"jacobcuison":3,"s-peiran":71,"chiayunrong":188,"-":91}},{"path":"docs/diagrams/ArchitectureSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2023-07-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"Actor User as user USER_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Participant \":UI\" as ui UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Participant \":Logic\" as logic LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Participant \":Model\" as model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Participant \":Storage\" as storage STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"user -[USER_COLOR]\u003e ui : \"delete 1\"","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"activate ui UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"ui -[UI_COLOR]\u003e logic : execute(\"delete 1\")","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"activate logic LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"jacobcuison"},"content":"logic -[LOGIC_COLOR]\u003e model : deleteContact(p)","lastModifiedDate":"2023-10-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"activate model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"model -[MODEL_COLOR]-\u003e logic","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"deactivate model","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"logic -[LOGIC_COLOR]\u003e storage : saveAddressBook(addressBook)","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"activate storage STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"storage -[STORAGE_COLOR]\u003e storage : Save to file","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"activate storage STORAGE_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"storage --[STORAGE_COLOR]\u003e storage","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"deactivate storage","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"storage --[STORAGE_COLOR]\u003e logic","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"deactivate storage","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"logic --[LOGIC_COLOR]\u003e ui","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"deactivate logic","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"ui--[UI_COLOR]\u003e user","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"deactivate ui","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"jacobcuison":1,"-":38}},{"path":"docs/diagrams/BetterModelClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"jacobcuison"},"content":"AddressBook *-right-\u003e \"1\" UniqueContactList","lastModifiedDate":"2023-10-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"AddressBook *-right-\u003e \"1\" UniqueTagList","lastModifiedDate":"2019-07-30"},{"lineNumber":9,"author":{"gitId":"jacobcuison"},"content":"UniqueTagList -[hidden]down- UniqueContactList","lastModifiedDate":"2023-10-24"},{"lineNumber":10,"author":{"gitId":"jacobcuison"},"content":"UniqueTagList -[hidden]down- UniqueContactList","lastModifiedDate":"2023-10-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"UniqueTagList -right-\u003e \"*\" Tag","lastModifiedDate":"2023-01-01"},{"lineNumber":13,"author":{"gitId":"jacobcuison"},"content":"UniqueContactList -right-\u003e Contact","lastModifiedDate":"2023-10-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"jacobcuison"},"content":"Contact -up-\u003e \"*\" Tag","lastModifiedDate":"2023-10-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"jacobcuison"},"content":"Contact *--\u003e Name","lastModifiedDate":"2023-10-24"},{"lineNumber":18,"author":{"gitId":"jacobcuison"},"content":"Contact *--\u003e Phone","lastModifiedDate":"2023-10-24"},{"lineNumber":19,"author":{"gitId":"jacobcuison"},"content":"Contact *--\u003e Email","lastModifiedDate":"2023-10-24"},{"lineNumber":20,"author":{"gitId":"jacobcuison"},"content":"Contact *--\u003e Address","lastModifiedDate":"2023-10-24"},{"lineNumber":21,"author":{"gitId":"jacobcuison"},"content":"Contact *--\u003e \"*\" Note","lastModifiedDate":"2023-10-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"jacobcuison":10,"-":12}},{"path":"docs/diagrams/DeleteSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2023-07-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"participant \":DeleteCommandParser\" as DeleteCommandParser LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"participant \"d:DeleteCommand\" as DeleteCommand LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"end box","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"end box","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"[-\u003e LogicManager : execute(\"delete 1\")","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"activate LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"delete 1\")","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"activate AddressBookParser","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"create DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"AddressBookParser -\u003e DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"activate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"DeleteCommandParser --\u003e AddressBookParser","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"deactivate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"AddressBookParser -\u003e DeleteCommandParser : parse(\"1\")","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"activate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"create DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"DeleteCommandParser -\u003e DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"activate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"DeleteCommand --\u003e DeleteCommandParser : d","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"deactivate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"DeleteCommandParser --\u003e AddressBookParser : d","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"deactivate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2019-07-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"DeleteCommandParser -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"destroy DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"AddressBookParser --\u003e LogicManager : d","lastModifiedDate":"2019-07-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"deactivate AddressBookParser","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"LogicManager -\u003e DeleteCommand : execute()","lastModifiedDate":"2019-07-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"activate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":52,"author":{"gitId":"jacobcuison"},"content":"DeleteCommand -\u003e Model : deleteContact(1)","lastModifiedDate":"2023-10-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"activate Model","lastModifiedDate":"2019-07-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"Model --\u003e DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"deactivate Model","lastModifiedDate":"2019-07-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"create CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"DeleteCommand -\u003e CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"activate CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"CommandResult --\u003e DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"deactivate CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"DeleteCommand --\u003e LogicManager : result","lastModifiedDate":"2019-07-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"deactivate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"[\u003c--LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"deactivate LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":70,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"jacobcuison":1,"-":69}},{"path":"docs/diagrams/ModelClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Package Model as ModelPackage \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2023-07-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nReadOnlyAddressBook\" as ReadOnlyAddressBook","lastModifiedDate":"2022-01-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nReadOnlyUserPrefs\" as ReadOnlyUserPrefs","lastModifiedDate":"2022-01-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nModel\" as Model","lastModifiedDate":"2022-01-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class AddressBook","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class ModelManager","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class UserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":15,"author":{"gitId":"jacobcuison"},"content":"Class UniqueContactList","lastModifiedDate":"2023-10-24"},{"lineNumber":16,"author":{"gitId":"jacobcuison"},"content":"Class Contact","lastModifiedDate":"2023-10-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Class Address","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Class Email","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Class Name","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Class Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Class Tag","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"jacobcuison"},"content":"Class Note","lastModifiedDate":"2023-10-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"Class I #FFFFFF","lastModifiedDate":"2023-07-27"},{"lineNumber":26,"author":{"gitId":"s-peiran"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":27,"author":{"gitId":"s-peiran"},"content":"package Meetings \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2023-10-26"},{"lineNumber":28,"author":{"gitId":"s-peiran"},"content":"Class HiddenLogic #FFFFFF","lastModifiedDate":"2023-10-26"},{"lineNumber":29,"author":{"gitId":"s-peiran"},"content":"}","lastModifiedDate":"2023-10-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"s-peiran"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":33,"author":{"gitId":"s-peiran"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"AddressBook .up.|\u003e ReadOnlyAddressBook","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"ModelManager .up.|\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"Model .right.\u003e ReadOnlyUserPrefs","lastModifiedDate":"2021-07-31"},{"lineNumber":41,"author":{"gitId":"-"},"content":"Model .left.\u003e ReadOnlyAddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":42,"author":{"gitId":"-"},"content":"ModelManager -left-\u003e \"1\" AddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":43,"author":{"gitId":"-"},"content":"ModelManager -right-\u003e \"1\" UserPrefs","lastModifiedDate":"2021-07-31"},{"lineNumber":44,"author":{"gitId":"-"},"content":"UserPrefs .up.|\u003e ReadOnlyUserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":46,"author":{"gitId":"jacobcuison"},"content":"AddressBook *--\u003e \"1\" UniqueContactList","lastModifiedDate":"2023-10-24"},{"lineNumber":47,"author":{"gitId":"s-peiran"},"content":"AddressBook *--\u003e \"1\" Meetings","lastModifiedDate":"2023-10-26"},{"lineNumber":48,"author":{"gitId":"jacobcuison"},"content":"UniqueContactList --\u003e \"~* all\" Contact","lastModifiedDate":"2023-10-24"},{"lineNumber":49,"author":{"gitId":"jacobcuison"},"content":"Contact *--\u003e Name","lastModifiedDate":"2023-10-24"},{"lineNumber":50,"author":{"gitId":"jacobcuison"},"content":"Contact *--\u003e Phone","lastModifiedDate":"2023-10-24"},{"lineNumber":51,"author":{"gitId":"jacobcuison"},"content":"Contact *--\u003e Email","lastModifiedDate":"2023-10-24"},{"lineNumber":52,"author":{"gitId":"jacobcuison"},"content":"Contact *--\u003e Address","lastModifiedDate":"2023-10-24"},{"lineNumber":53,"author":{"gitId":"jacobcuison"},"content":"Contact *--\u003e \"*\" Tag","lastModifiedDate":"2023-10-24"},{"lineNumber":54,"author":{"gitId":"jacobcuison"},"content":"Contact *--\u003e \"*\" Note","lastModifiedDate":"2023-10-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":56,"author":{"gitId":"jacobcuison"},"content":"Contact -[hidden]up--\u003e I","lastModifiedDate":"2023-10-24"},{"lineNumber":57,"author":{"gitId":"jacobcuison"},"content":"UniqueContactList -[hidden]right-\u003e I","lastModifiedDate":"2023-10-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"Name -[hidden]right-\u003e Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"Phone -[hidden]right-\u003e Address","lastModifiedDate":"2019-07-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"Address -[hidden]right-\u003e Email","lastModifiedDate":"2019-07-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":63,"author":{"gitId":"jacobcuison"},"content":"ModelManager --\u003e \"~* filtered\" Contact","lastModifiedDate":"2023-10-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"jacobcuison":14,"s-peiran":7,"-":43}},{"path":"docs/diagrams/ModelMeeting.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"s-peiran"},"content":"@startuml","lastModifiedDate":"2023-10-26"},{"lineNumber":2,"author":{"gitId":"s-peiran"},"content":"!include style.puml","lastModifiedDate":"2023-10-26"},{"lineNumber":3,"author":{"gitId":"s-peiran"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":4,"author":{"gitId":"s-peiran"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2023-10-26"},{"lineNumber":5,"author":{"gitId":"s-peiran"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2023-10-26"},{"lineNumber":6,"author":{"gitId":"s-peiran"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2023-10-26"},{"lineNumber":7,"author":{"gitId":"s-peiran"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":8,"author":{"gitId":"s-peiran"},"content":"Package Meetings as MeetingPackage \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2023-10-26"},{"lineNumber":9,"author":{"gitId":"s-peiran"},"content":"Class MeetingList","lastModifiedDate":"2023-10-26"},{"lineNumber":10,"author":{"gitId":"s-peiran"},"content":"Class Meeting","lastModifiedDate":"2023-10-26"},{"lineNumber":11,"author":{"gitId":"s-peiran"},"content":"Class Title","lastModifiedDate":"2023-10-26"},{"lineNumber":12,"author":{"gitId":"s-peiran"},"content":"Class Time","lastModifiedDate":"2023-10-26"},{"lineNumber":13,"author":{"gitId":"s-peiran"},"content":"Class Place","lastModifiedDate":"2023-10-26"},{"lineNumber":14,"author":{"gitId":"s-peiran"},"content":"Class Desc","lastModifiedDate":"2023-10-26"},{"lineNumber":15,"author":{"gitId":"s-peiran"},"content":"Class Contact","lastModifiedDate":"2023-10-26"},{"lineNumber":16,"author":{"gitId":"s-peiran"},"content":"Class Note","lastModifiedDate":"2023-10-26"},{"lineNumber":17,"author":{"gitId":"s-peiran"},"content":"}","lastModifiedDate":"2023-10-26"},{"lineNumber":18,"author":{"gitId":"s-peiran"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":19,"author":{"gitId":"s-peiran"},"content":"MeetingList --\u003e \"~* all\" Meeting","lastModifiedDate":"2023-10-26"},{"lineNumber":20,"author":{"gitId":"s-peiran"},"content":"Meeting *--\u003e Title","lastModifiedDate":"2023-10-26"},{"lineNumber":21,"author":{"gitId":"s-peiran"},"content":"Meeting *--\u003e Time","lastModifiedDate":"2023-10-26"},{"lineNumber":22,"author":{"gitId":"s-peiran"},"content":"Meeting *--\u003e Place","lastModifiedDate":"2023-10-26"},{"lineNumber":23,"author":{"gitId":"s-peiran"},"content":"Meeting *--\u003e Desc","lastModifiedDate":"2023-10-26"},{"lineNumber":24,"author":{"gitId":"s-peiran"},"content":"Meeting *--\u003e \"*\" Note","lastModifiedDate":"2023-10-26"},{"lineNumber":25,"author":{"gitId":"s-peiran"},"content":"Meeting *--\u003e \"*\" Contact","lastModifiedDate":"2023-10-26"},{"lineNumber":26,"author":{"gitId":"s-peiran"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":27,"author":{"gitId":"s-peiran"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2023-10-26"},{"lineNumber":28,"author":{"gitId":"s-peiran"},"content":"HiddenOutside ..\u003e MeetingList","lastModifiedDate":"2023-10-26"},{"lineNumber":29,"author":{"gitId":"s-peiran"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":30,"author":{"gitId":"s-peiran"},"content":"Title -[hidden]right-\u003e Time","lastModifiedDate":"2023-10-26"},{"lineNumber":31,"author":{"gitId":"s-peiran"},"content":"Time -[hidden]right-\u003e Place","lastModifiedDate":"2023-10-26"},{"lineNumber":32,"author":{"gitId":"s-peiran"},"content":"Place -[hidden]right-\u003e Desc","lastModifiedDate":"2023-10-26"},{"lineNumber":33,"author":{"gitId":"s-peiran"},"content":"Desc -[hidden]right-\u003e Note","lastModifiedDate":"2023-10-26"},{"lineNumber":34,"author":{"gitId":"s-peiran"},"content":"Note -[hidden]right-\u003e Contact","lastModifiedDate":"2023-10-26"},{"lineNumber":35,"author":{"gitId":"s-peiran"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":36,"author":{"gitId":"s-peiran"},"content":"@enduml","lastModifiedDate":"2023-10-26"}],"authorContributionMap":{"s-peiran":36}},{"path":"docs/diagrams/StorageClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package Storage as StoragePackage {","lastModifiedDate":"2023-07-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":9,"author":{"gitId":"-"},"content":"package \"UserPrefs Storage\" #F4F6F6{","lastModifiedDate":"2021-07-31"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nUserPrefsStorage\" as UserPrefsStorage","lastModifiedDate":"2022-01-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class JsonUserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nStorage\" as Storage","lastModifiedDate":"2022-01-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class StorageManager","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"package \"AddressBook Storage\" #F4F6F6{","lastModifiedDate":"2021-07-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nAddressBookStorage\" as AddressBookStorage","lastModifiedDate":"2022-01-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Class JsonAddressBookStorage","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Class JsonSerializableAddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":21,"author":{"gitId":"jacobcuison"},"content":"Class JsonAdaptedContact","lastModifiedDate":"2023-10-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"Class JsonAdaptedTag","lastModifiedDate":"2021-07-31"},{"lineNumber":23,"author":{"gitId":"jacobcuison"},"content":"Class JsonAdaptedNote","lastModifiedDate":"2023-10-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2021-07-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Storage","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":31,"author":{"gitId":"-"},"content":"StorageManager .up.|\u003e Storage","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"StorageManager -up-\u003e \"1\" UserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"StorageManager -up-\u003e \"1\" AddressBookStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"Storage -left-|\u003e UserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"Storage -right-|\u003e AddressBookStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"JsonUserPrefsStorage .up.|\u003e UserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"JsonAddressBookStorage .up.|\u003e AddressBookStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":40,"author":{"gitId":"-"},"content":"JsonAddressBookStorage ..\u003e JsonSerializableAddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":41,"author":{"gitId":"jacobcuison"},"content":"JsonSerializableAddressBook --\u003e \"*\" JsonAdaptedContact","lastModifiedDate":"2023-10-24"},{"lineNumber":42,"author":{"gitId":"jacobcuison"},"content":"JsonAdaptedContact --\u003e \"*\" JsonAdaptedTag","lastModifiedDate":"2023-10-24"},{"lineNumber":43,"author":{"gitId":"jacobcuison"},"content":"JsonAdaptedContact --\u003e \"*\" JsonAdaptedNote","lastModifiedDate":"2023-10-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":45,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"jacobcuison":5,"-":40}},{"path":"docs/diagrams/UiClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor UI_COLOR_T4","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package UI \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nUi\" as Ui","lastModifiedDate":"2022-01-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Class \"{abstract}\\nUiPart\" as UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class UiManager","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class MainWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class HelpWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class ResultDisplay","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"jacobcuison"},"content":"Class ContactListPanel","lastModifiedDate":"2023-10-03"},{"lineNumber":15,"author":{"gitId":"jacobcuison"},"content":"Class ContactCard","lastModifiedDate":"2023-10-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class StatusBarFooter","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Class CommandBox","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"package Model \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Class HiddenModel #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"package Logic \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"Class HiddenLogic #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Ui","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"UiManager .left.|\u003e Ui","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"UiManager -down-\u003e \"1\" MainWindow","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e  \"1\" CommandBox","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e \"1\" ResultDisplay","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"jacobcuison"},"content":"MainWindow *-down-\u003e \"1\" ContactListPanel","lastModifiedDate":"2023-10-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e \"1\" StatusBarFooter","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"MainWindow --\u003e \"0..1\" HelpWindow","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"jacobcuison"},"content":"ContactListPanel -down-\u003e \"*\" ContactCard","lastModifiedDate":"2023-10-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"MainWindow -left-|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"ResultDisplay --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"CommandBox --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"jacobcuison"},"content":"ContactListPanel --|\u003e UiPart","lastModifiedDate":"2023-10-03"},{"lineNumber":46,"author":{"gitId":"jacobcuison"},"content":"ContactCard --|\u003e UiPart","lastModifiedDate":"2023-10-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"StatusBarFooter --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"HelpWindow --|\u003e UiPart","lastModifiedDate":"2021-07-31"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":50,"author":{"gitId":"jacobcuison"},"content":"ContactCard ..\u003e Model","lastModifiedDate":"2023-10-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"UiManager -right-\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"MainWindow -left-\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":54,"author":{"gitId":"jacobcuison"},"content":"ContactListPanel -[hidden]left- HelpWindow","lastModifiedDate":"2023-10-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"HelpWindow -[hidden]left- CommandBox","lastModifiedDate":"2019-07-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"CommandBox -[hidden]left- ResultDisplay","lastModifiedDate":"2019-07-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"ResultDisplay -[hidden]left- StatusBarFooter","lastModifiedDate":"2019-07-30"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"MainWindow -[hidden]-|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"jacobcuison":8,"-":52}},{"path":"docs/diagrams/tracing/LogicSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-06-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include ../style.puml","lastModifiedDate":"2019-06-17"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2023-07-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-06-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"Participant \":LogicManager\" as logic LOGIC_COLOR","lastModifiedDate":"2019-06-17"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Participant \":AddressBookParser\" as abp LOGIC_COLOR","lastModifiedDate":"2019-06-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Participant \":EditCommandParser\" as ecp LOGIC_COLOR","lastModifiedDate":"2019-06-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Participant \"command:EditCommand\" as ec LOGIC_COLOR","lastModifiedDate":"2019-06-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-06-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"[-\u003e logic : execute","lastModifiedDate":"2019-06-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"activate logic","lastModifiedDate":"2019-06-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"logic -\u003e abp ++: parseCommand(commandText)","lastModifiedDate":"2019-06-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"create ecp","lastModifiedDate":"2019-06-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"abp -\u003e ecp","lastModifiedDate":"2019-06-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":"abp -\u003e ecp ++: parse(arguments)","lastModifiedDate":"2019-06-17"},{"lineNumber":16,"author":{"gitId":"-"},"content":"create ec","lastModifiedDate":"2019-06-17"},{"lineNumber":17,"author":{"gitId":"jacobcuison"},"content":"ecp -\u003e ec ++: index, editContactDescriptor","lastModifiedDate":"2023-10-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"ec --\u003e ecp --","lastModifiedDate":"2019-06-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":"ecp --\u003e abp --: command","lastModifiedDate":"2019-06-17"},{"lineNumber":20,"author":{"gitId":"-"},"content":"abp --\u003e logic --: command","lastModifiedDate":"2019-06-17"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-06-17"},{"lineNumber":22,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-06-17"}],"authorContributionMap":{"jacobcuison":1,"-":21}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"s-peiran"},"content":"title: NoteNote","lastModifiedDate":"2023-10-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"s-peiran"},"content":"[![CI Status](https://github.com/AY2324S1-CS2103-W14-2/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2324S1-CS2103-W14-2/tp/actions)","lastModifiedDate":"2023-10-19"},{"lineNumber":7,"author":{"gitId":"s-peiran"},"content":"[![codecov](https://codecov.io/gh/AY2324S1-CS2103-W14-2/tp/graph/badge.svg?token\u003dMI7J4U49JT)](https://codecov.io/gh/AY2324S1-CS2103-W14-2/tp)","lastModifiedDate":"2023-10-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"s-peiran"},"content":"Download NoteNote [Here](https://github.com/AY2324S1-CS2103-W14-2/tp/releases/tag/v1.3(trial))!","lastModifiedDate":"2023-10-31"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":13,"author":{"gitId":"s-peiran"},"content":"This is a desktop meeting note-taking application that allows users to efficiently record notes for their contact.","lastModifiedDate":"2023-10-19"},{"lineNumber":14,"author":{"gitId":"s-peiran"},"content":"Notenote provide tools for organizing and categorizing contacts in a systematic and easy-to-navigate structure.","lastModifiedDate":"2023-10-19"},{"lineNumber":15,"author":{"gitId":"s-peiran"},"content":"Users interact with the application through a CLI, and it has a GUI created with JavaFX.","lastModifiedDate":"2023-10-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"s-peiran"},"content":"* If you are interested in using NoteNote, head over to the [**User","lastModifiedDate":"2023-10-19"},{"lineNumber":18,"author":{"gitId":"s-peiran"},"content":"  Guide**](UserGuide.md).","lastModifiedDate":"2023-10-19"},{"lineNumber":19,"author":{"gitId":"s-peiran"},"content":"* If you are interested about developing NoteNote, the [**Developer Guide**](DeveloperGuide.md) is a good place to","lastModifiedDate":"2023-10-19"},{"lineNumber":20,"author":{"gitId":"s-peiran"},"content":"  start.","lastModifiedDate":"2023-10-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"**Acknowledgements**","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"s-peiran"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson)","lastModifiedDate":"2023-10-19"},{"lineNumber":25,"author":{"gitId":"s-peiran"},"content":"  , [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2023-10-19"}],"authorContributionMap":{"s-peiran":13,"-":12}},{"path":"docs/team/chiayunrong.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"chiayunrong"},"content":"---","lastModifiedDate":"2023-09-30"},{"lineNumber":2,"author":{"gitId":"chiayunrong"},"content":"layout: page","lastModifiedDate":"2023-09-30"},{"lineNumber":3,"author":{"gitId":"chiayunrong"},"content":"title: Chia Yun Rong\u0027s Project Portfolio Page","lastModifiedDate":"2023-09-30"},{"lineNumber":4,"author":{"gitId":"chiayunrong"},"content":"---","lastModifiedDate":"2023-09-30"},{"lineNumber":5,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":6,"author":{"gitId":"chiayunrong"},"content":"### Project: Notenote","lastModifiedDate":"2023-09-30"},{"lineNumber":7,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":8,"author":{"gitId":"chiayunrong"},"content":"Notenote is a desktop note-taking application that allows users to efficiently record notes for their contacts. It provides tools for organizing and categorizing contacts in a systematic and easy-to-navigate structure. Users interact with it through a CLI, and it has a GUI created with JavaFX. It is written in Java","lastModifiedDate":"2023-09-30"},{"lineNumber":9,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":10,"author":{"gitId":"chiayunrong"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-09-30"},{"lineNumber":11,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":12,"author":{"gitId":"chiayunrong"},"content":"* **New Feature**: To be added","lastModifiedDate":"2023-09-30"},{"lineNumber":13,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":14,"author":{"gitId":"chiayunrong"},"content":"* **New Feature**: To be added","lastModifiedDate":"2023-09-30"},{"lineNumber":15,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":16,"author":{"gitId":"chiayunrong"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2023-09-30"},{"lineNumber":17,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":18,"author":{"gitId":"chiayunrong"},"content":"* **Project management**:","lastModifiedDate":"2023-09-30"},{"lineNumber":19,"author":{"gitId":"chiayunrong"},"content":"    * To be added","lastModifiedDate":"2023-09-30"},{"lineNumber":20,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":21,"author":{"gitId":"chiayunrong"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2023-09-30"},{"lineNumber":22,"author":{"gitId":"chiayunrong"},"content":"    * To be added","lastModifiedDate":"2023-09-30"},{"lineNumber":23,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":24,"author":{"gitId":"chiayunrong"},"content":"* **Documentation**:","lastModifiedDate":"2023-09-30"},{"lineNumber":25,"author":{"gitId":"chiayunrong"},"content":"    * User Guide:","lastModifiedDate":"2023-09-30"},{"lineNumber":26,"author":{"gitId":"chiayunrong"},"content":"        * To be added","lastModifiedDate":"2023-09-30"},{"lineNumber":27,"author":{"gitId":"chiayunrong"},"content":"    * Developer Guide:","lastModifiedDate":"2023-09-30"},{"lineNumber":28,"author":{"gitId":"chiayunrong"},"content":"        * To be added","lastModifiedDate":"2023-09-30"},{"lineNumber":29,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":30,"author":{"gitId":"chiayunrong"},"content":"* **Community**:","lastModifiedDate":"2023-09-30"},{"lineNumber":31,"author":{"gitId":"chiayunrong"},"content":"    * To be added","lastModifiedDate":"2023-09-30"},{"lineNumber":32,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":33,"author":{"gitId":"chiayunrong"},"content":"* **Tools**:","lastModifiedDate":"2023-09-30"},{"lineNumber":34,"author":{"gitId":"chiayunrong"},"content":"    * To be added","lastModifiedDate":"2023-09-30"}],"authorContributionMap":{"chiayunrong":34}},{"path":"docs/team/jacobcuison.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"jacobcuison"},"content":"---","lastModifiedDate":"2023-10-03"},{"lineNumber":2,"author":{"gitId":"jacobcuison"},"content":"layout: page","lastModifiedDate":"2023-10-03"},{"lineNumber":3,"author":{"gitId":"jacobcuison"},"content":"title: Jacob Cuison\u0027s Project Portfolio Page","lastModifiedDate":"2023-10-03"},{"lineNumber":4,"author":{"gitId":"jacobcuison"},"content":"---","lastModifiedDate":"2023-10-03"},{"lineNumber":5,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":6,"author":{"gitId":"jacobcuison"},"content":"### Project: Notenote","lastModifiedDate":"2023-10-03"},{"lineNumber":7,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":8,"author":{"gitId":"jacobcuison"},"content":"Notenote is a desktop note-taking application that allows users to efficiently record notes for their contacts. It provides tools for organizing and categorizing contacts in a systematic and easy-to-navigate structure. Users interact with it through a CLI, and it has a GUI created with JavaFX. It is written in Java","lastModifiedDate":"2023-10-03"},{"lineNumber":9,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":10,"author":{"gitId":"jacobcuison"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-10-03"},{"lineNumber":11,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":12,"author":{"gitId":"jacobcuison"},"content":"* **New Feature**: To be added","lastModifiedDate":"2023-10-03"},{"lineNumber":13,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":14,"author":{"gitId":"jacobcuison"},"content":"* **New Feature**: To be added","lastModifiedDate":"2023-10-03"},{"lineNumber":15,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":16,"author":{"gitId":"jacobcuison"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2324s1.github.io/tp-dashboard/?search\u003djacobcuison\u0026breakdown\u003dfalse\u0026sort\u003dgroupTitle%20dsc\u0026sortWithin\u003dtitle\u0026since\u003d2023-09-22\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos)","lastModifiedDate":"2023-10-03"},{"lineNumber":17,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":18,"author":{"gitId":"jacobcuison"},"content":"* **Project management**:","lastModifiedDate":"2023-10-03"},{"lineNumber":19,"author":{"gitId":"jacobcuison"},"content":"    * To be added","lastModifiedDate":"2023-10-03"},{"lineNumber":20,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":21,"author":{"gitId":"jacobcuison"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2023-10-03"},{"lineNumber":22,"author":{"gitId":"jacobcuison"},"content":"    * To be added","lastModifiedDate":"2023-10-03"},{"lineNumber":23,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":24,"author":{"gitId":"jacobcuison"},"content":"* **Documentation**:","lastModifiedDate":"2023-10-03"},{"lineNumber":25,"author":{"gitId":"jacobcuison"},"content":"    * User Guide:","lastModifiedDate":"2023-10-03"},{"lineNumber":26,"author":{"gitId":"jacobcuison"},"content":"        * To be added","lastModifiedDate":"2023-10-03"},{"lineNumber":27,"author":{"gitId":"jacobcuison"},"content":"    * Developer Guide:","lastModifiedDate":"2023-10-03"},{"lineNumber":28,"author":{"gitId":"jacobcuison"},"content":"        * To be added","lastModifiedDate":"2023-10-03"},{"lineNumber":29,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":30,"author":{"gitId":"jacobcuison"},"content":"* **Community**:","lastModifiedDate":"2023-10-03"},{"lineNumber":31,"author":{"gitId":"jacobcuison"},"content":"    * To be added","lastModifiedDate":"2023-10-03"},{"lineNumber":32,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":33,"author":{"gitId":"jacobcuison"},"content":"* **Tools**:","lastModifiedDate":"2023-10-03"},{"lineNumber":34,"author":{"gitId":"jacobcuison"},"content":"    * To be added","lastModifiedDate":"2023-10-03"}],"authorContributionMap":{"jacobcuison":34}},{"path":"docs/team/jonyeokj.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"jonyeokj"},"content":"---","lastModifiedDate":"2023-10-02"},{"lineNumber":2,"author":{"gitId":"jonyeokj"},"content":"layout: page","lastModifiedDate":"2023-10-02"},{"lineNumber":3,"author":{"gitId":"jonyeokj"},"content":"title: Jonathan Yeo\u0027s Project Portfolio Page","lastModifiedDate":"2023-10-02"},{"lineNumber":4,"author":{"gitId":"jonyeokj"},"content":"---","lastModifiedDate":"2023-10-02"},{"lineNumber":5,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":6,"author":{"gitId":"jonyeokj"},"content":"### Project: Notenote","lastModifiedDate":"2023-10-02"},{"lineNumber":7,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":8,"author":{"gitId":"jonyeokj"},"content":"Notenote is a desktop note-taking application that allows users to efficiently record notes for their contacts. It provides tools for organizing and categorizing contacts in a systematic and easy-to-navigate structure. Users interact with it through a CLI, and it has a GUI created with JavaFX. It is written in Java","lastModifiedDate":"2023-10-02"},{"lineNumber":9,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":10,"author":{"gitId":"jonyeokj"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-10-02"},{"lineNumber":11,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":12,"author":{"gitId":"jonyeokj"},"content":"* **New Feature**: To be added","lastModifiedDate":"2023-10-02"},{"lineNumber":13,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":14,"author":{"gitId":"jonyeokj"},"content":"* **New Feature**: To be added","lastModifiedDate":"2023-10-02"},{"lineNumber":15,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":16,"author":{"gitId":"jonyeokj"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2023-10-02"},{"lineNumber":17,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":18,"author":{"gitId":"jonyeokj"},"content":"* **Project management**:","lastModifiedDate":"2023-10-02"},{"lineNumber":19,"author":{"gitId":"jonyeokj"},"content":"    * To be added","lastModifiedDate":"2023-10-02"},{"lineNumber":20,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":21,"author":{"gitId":"jonyeokj"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2023-10-02"},{"lineNumber":22,"author":{"gitId":"jonyeokj"},"content":"    * To be added","lastModifiedDate":"2023-10-02"},{"lineNumber":23,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":24,"author":{"gitId":"jonyeokj"},"content":"* **Documentation**:","lastModifiedDate":"2023-10-02"},{"lineNumber":25,"author":{"gitId":"jonyeokj"},"content":"    * User Guide:","lastModifiedDate":"2023-10-02"},{"lineNumber":26,"author":{"gitId":"jonyeokj"},"content":"        * To be added","lastModifiedDate":"2023-10-02"},{"lineNumber":27,"author":{"gitId":"jonyeokj"},"content":"    * Developer Guide:","lastModifiedDate":"2023-10-02"},{"lineNumber":28,"author":{"gitId":"jonyeokj"},"content":"        * To be added","lastModifiedDate":"2023-10-02"},{"lineNumber":29,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":30,"author":{"gitId":"jonyeokj"},"content":"* **Community**:","lastModifiedDate":"2023-10-02"},{"lineNumber":31,"author":{"gitId":"jonyeokj"},"content":"    * To be added","lastModifiedDate":"2023-10-02"},{"lineNumber":32,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":33,"author":{"gitId":"jonyeokj"},"content":"* **Tools**:","lastModifiedDate":"2023-10-02"},{"lineNumber":34,"author":{"gitId":"jonyeokj"},"content":"    * To be added","lastModifiedDate":"2023-10-02"},{"lineNumber":35,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-03"}],"authorContributionMap":{"jonyeokj":35}},{"path":"docs/team/s-peiran.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"s-peiran"},"content":"# She Peiran\u0027s Project Portfolio Page","lastModifiedDate":"2023-10-03"},{"lineNumber":2,"author":{"gitId":"s-peiran"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":3,"author":{"gitId":"s-peiran"},"content":"## Project: NoteNote Meeting Management App","lastModifiedDate":"2023-10-03"},{"lineNumber":4,"author":{"gitId":"s-peiran"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":5,"author":{"gitId":"s-peiran"},"content":"Notenote is a command Line Interface tool that allows users to efficiently record notes for their contacts. It provides","lastModifiedDate":"2023-10-03"},{"lineNumber":6,"author":{"gitId":"s-peiran"},"content":"tools for organizing and categorizing contacts, ensuring a systematic and easy-to-navigate structure","lastModifiedDate":"2023-10-03"},{"lineNumber":7,"author":{"gitId":"s-peiran"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":8,"author":{"gitId":"s-peiran"},"content":"## Summary of Contributions","lastModifiedDate":"2023-10-03"},{"lineNumber":9,"author":{"gitId":"s-peiran"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":10,"author":{"gitId":"s-peiran"},"content":"### Code Contributed","lastModifiedDate":"2023-10-03"},{"lineNumber":11,"author":{"gitId":"s-peiran"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":12,"author":{"gitId":"s-peiran"},"content":"[Link to my code on tP Code Dashboard](https://nus-cs2103-ay2324s1.github.io/tp-dashboard/?search\u003ds-peiran\u0026breakdown\u003dtrue)","lastModifiedDate":"2023-10-03"},{"lineNumber":13,"author":{"gitId":"s-peiran"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":14,"author":{"gitId":"s-peiran"},"content":"### Enhancement Implemented","lastModifiedDate":"2023-10-03"},{"lineNumber":15,"author":{"gitId":"s-peiran"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":16,"author":{"gitId":"s-peiran"},"content":"    * To be added","lastModifiedDate":"2023-10-03"},{"lineNumber":17,"author":{"gitId":"s-peiran"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":18,"author":{"gitId":"s-peiran"},"content":"### Contributions to the UG","lastModifiedDate":"2023-10-03"},{"lineNumber":19,"author":{"gitId":"s-peiran"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":20,"author":{"gitId":"s-peiran"},"content":"    * To be added","lastModifiedDate":"2023-10-03"},{"lineNumber":21,"author":{"gitId":"s-peiran"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":22,"author":{"gitId":"s-peiran"},"content":"### Contributions to the DG","lastModifiedDate":"2023-10-03"},{"lineNumber":23,"author":{"gitId":"s-peiran"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":24,"author":{"gitId":"s-peiran"},"content":"    * To be added","lastModifiedDate":"2023-10-03"},{"lineNumber":25,"author":{"gitId":"s-peiran"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":26,"author":{"gitId":"s-peiran"},"content":"### Contributions to team-based tasks","lastModifiedDate":"2023-10-03"},{"lineNumber":27,"author":{"gitId":"s-peiran"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":28,"author":{"gitId":"s-peiran"},"content":"    * To be added","lastModifiedDate":"2023-10-03"},{"lineNumber":29,"author":{"gitId":"s-peiran"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":30,"author":{"gitId":"s-peiran"},"content":"### Review/Mentoring Contributions","lastModifiedDate":"2023-10-03"},{"lineNumber":31,"author":{"gitId":"s-peiran"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":32,"author":{"gitId":"s-peiran"},"content":"    * To be added","lastModifiedDate":"2023-10-03"},{"lineNumber":33,"author":{"gitId":"s-peiran"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":34,"author":{"gitId":"s-peiran"},"content":"### Contributions beyond the project team","lastModifiedDate":"2023-10-03"},{"lineNumber":35,"author":{"gitId":"s-peiran"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":36,"author":{"gitId":"s-peiran"},"content":"    * To be added","lastModifiedDate":"2023-10-03"}],"authorContributionMap":{"s-peiran":36}},{"path":"docs/tutorials/AddRemark.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Adding a command\"","lastModifiedDate":"2020-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Let\u0027s walk you through the implementation of a new command — `remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"This command allows users of the AddressBook application to add optional remarks to people in their address book and edit it if required. The command should have the following format:","lastModifiedDate":"2020-07-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"`remark INDEX r/REMARK` (e.g., `remark 2 r/Likes baseball`)","lastModifiedDate":"2020-07-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"We’ll assume that you have already set up the development environment as outlined in the Developer’s Guide.","lastModifiedDate":"2020-07-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Create a new `remark` command","lastModifiedDate":"2020-07-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Looking in the `logic.command` package, you will notice that each existing command have their own class. All the commands inherit from the abstract class `Command` which means that they must override `execute()`. Each `Command` returns an instance of `CommandResult` upon success and `CommandResult#feedbackToUser` is printed to the `ResultDisplay`.","lastModifiedDate":"2020-07-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Let’s start by creating a new `RemarkCommand` class in the `src/main/java/seedu/address/logic/command` directory.","lastModifiedDate":"2020-07-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"For now, let’s keep `RemarkCommand` as simple as possible and print some output. We accomplish that by returning a `CommandResult` with an accompanying message.","lastModifiedDate":"2020-07-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2020-07-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2020-07-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":31,"author":{"gitId":"jacobcuison"},"content":" * Changes the remark of an existing contact in the address book.","lastModifiedDate":"2023-10-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"remark\";","lastModifiedDate":"2020-07-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2020-07-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return new CommandResult(\"Hello from remark\");","lastModifiedDate":"2020-07-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"### Hook `RemarkCommand` into the application","lastModifiedDate":"2020-07-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"Now that we have our `RemarkCommand` ready to be executed, we need to update `AddressBookParser#parseCommand()` to recognize the `remark` keyword. Add the new command to the `switch` block by creating a new `case` that returns a new instance of `RemarkCommand`.","lastModifiedDate":"2020-07-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"You can refer to the changes in this [diff](https://github.com/se-edu/addressbook-level3/commit/35eb7286f18a029d39cb7a29df8f172a001e4fd8#diff-399c284cb892c20b7c04a69116fcff6ccc0666c5230a1db8e4a9145def8fa4ee).","lastModifiedDate":"2022-01-02"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"### Run the application","lastModifiedDate":"2020-07-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"Run `Main#main` and try out your new `RemarkCommand`. If everything went well, you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"![Output displayed](../images/add-remark/RemarkHello.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"## Change `RemarkCommand` to throw an exception","lastModifiedDate":"2020-07-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"While we have successfully printed a message to `ResultDisplay`, the command does not do what it is supposed to do. Let’s change the command to throw a `CommandException` to accurately reflect that our command is still a work in progress.","lastModifiedDate":"2020-12-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"![The relationship between RemarkCommand and Command](../images/add-remark/RemarkCommandClass.png)","lastModifiedDate":"2023-09-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"Following the convention in other commands, we add relevant messages as constants and use them.","lastModifiedDate":"2020-07-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-08-01"},{"lineNumber":68,"author":{"gitId":"jacobcuison"},"content":"            + \": Edits the remark of the contact identified \"","lastModifiedDate":"2023-10-03"},{"lineNumber":69,"author":{"gitId":"jacobcuison"},"content":"            + \"by the index number used in the last contact listing. \"","lastModifiedDate":"2023-10-03"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            + \"Existing remark will be overwritten by the input.\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2020-07-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            + \"r/ [REMARK]\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2020-07-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            + \"r/ Likes to swim.\";","lastModifiedDate":"2020-07-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_IMPLEMENTED_YET \u003d","lastModifiedDate":"2021-08-01"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            \"Remark command not implemented yet\";","lastModifiedDate":"2021-08-01"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        throw new CommandException(MESSAGE_NOT_IMPLEMENTED_YET);","lastModifiedDate":"2020-07-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"## Enhancing `RemarkCommand`","lastModifiedDate":"2020-07-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"Let’s change `RemarkCommand` to parse input from the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"### Make the command accept parameters","lastModifiedDate":"2020-07-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":91,"author":{"gitId":"-"},"content":"We start by modifying the constructor of `RemarkCommand` to accept an `Index` and a `String`. While we are at it, let’s change the error message to echo the values. While this is not a replacement for tests, it is an obvious way to tell if our code is functioning as intended.","lastModifiedDate":"2020-07-29"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":93,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":94,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2020-07-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ARGUMENTS \u003d \"Index: %1$d, Remark: %2$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    private final String remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":104,"author":{"gitId":"jacobcuison"},"content":"     * @param index of the contact in the filtered contact list to edit the remark","lastModifiedDate":"2023-10-03"},{"lineNumber":105,"author":{"gitId":"jacobcuison"},"content":"     * @param remark of the contact to be updated to","lastModifiedDate":"2023-10-03"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public RemarkCommand(Index index, String remark) {","lastModifiedDate":"2020-07-29"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        requireAllNonNull(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2020-07-29"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        throw new CommandException(","lastModifiedDate":"2021-08-01"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_ARGUMENTS, index.getOneBased(), remark));","lastModifiedDate":"2021-08-01"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2020-07-29"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2020-07-29"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2020-07-29"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2020-07-29"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        if (!(other instanceof RemarkCommand)) {","lastModifiedDate":"2020-07-29"},{"lineNumber":127,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2020-07-29"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        RemarkCommand e \u003d (RemarkCommand) other;","lastModifiedDate":"2020-07-29"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2020-07-29"},{"lineNumber":132,"author":{"gitId":"-"},"content":"                \u0026\u0026 remark.equals(e.remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":135,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":137,"author":{"gitId":"-"},"content":"Your code should look something like [this](https://github.com/se-edu/addressbook-level3/commit/dc6d5139d08f6403da0ec624ea32bd79a2ae0cbf#diff-a8e35af8f9c251525063fae36c9852922a7e7195763018eacec60f3a4d87c594) after you are done.","lastModifiedDate":"2022-01-02"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":139,"author":{"gitId":"-"},"content":"### Parse user input","lastModifiedDate":"2020-07-29"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":141,"author":{"gitId":"-"},"content":"Now let’s move on to writing a parser that will extract the index and remark from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":143,"author":{"gitId":"-"},"content":"Create a `RemarkCommandParser` class in the `seedu.address.logic.parser` package. The class must extend the `Parser` interface.","lastModifiedDate":"2020-07-29"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":145,"author":{"gitId":"-"},"content":"![The relationship between Parser and RemarkCommandParser](../images/add-remark/RemarkCommandParserClass.png)","lastModifiedDate":"2023-09-12"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":147,"author":{"gitId":"-"},"content":"Thankfully, `ArgumentTokenizer#tokenize()` makes it trivial to parse user input. Let’s take a look at the JavaDoc provided for the function to understand what it does.","lastModifiedDate":"2020-07-29"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":149,"author":{"gitId":"-"},"content":"**`ArgumentTokenizer.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":151,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":152,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":153,"author":{"gitId":"-"},"content":" * Tokenizes an arguments string and returns an {@code ArgumentMultimap}","lastModifiedDate":"2020-07-29"},{"lineNumber":154,"author":{"gitId":"-"},"content":" * object that maps prefixes to their respective argument values. Only the","lastModifiedDate":"2020-07-29"},{"lineNumber":155,"author":{"gitId":"-"},"content":" * given prefixes will be recognized in the arguments string.","lastModifiedDate":"2020-07-29"},{"lineNumber":156,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2020-07-29"},{"lineNumber":157,"author":{"gitId":"-"},"content":" * @param argsString Arguments string of the form:","lastModifiedDate":"2020-07-29"},{"lineNumber":158,"author":{"gitId":"-"},"content":" * {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2020-07-29"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * @param prefixes   Prefixes to tokenize the arguments string with","lastModifiedDate":"2020-07-29"},{"lineNumber":160,"author":{"gitId":"-"},"content":" * @return           ArgumentMultimap object that maps prefixes to their","lastModifiedDate":"2020-07-29"},{"lineNumber":161,"author":{"gitId":"-"},"content":" * arguments","lastModifiedDate":"2020-07-29"},{"lineNumber":162,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":163,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":165,"author":{"gitId":"-"},"content":"We can tell `ArgumentTokenizer#tokenize()` to look out for our new prefix `r/` and it will return us an instance of `ArgumentMultimap`. Now let’s find out what we need to do in order to obtain the Index and String that we need. Let’s look through `ArgumentMultimap` :","lastModifiedDate":"2020-07-29"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":167,"author":{"gitId":"-"},"content":"**`ArgumentMultimap.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":169,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":170,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":171,"author":{"gitId":"-"},"content":" * Returns the last value of {@code prefix}.","lastModifiedDate":"2020-07-29"},{"lineNumber":172,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":173,"author":{"gitId":"-"},"content":"public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2020-07-29"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2020-07-29"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    return values.isEmpty() ? Optional.empty() :","lastModifiedDate":"2020-07-29"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2020-07-29"},{"lineNumber":177,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":178,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":180,"author":{"gitId":"-"},"content":"This appears to be what we need to get a String of the remark. But what about the Index? Let\u0027s take a quick peek at existing `Command` that uses an index to see how it is done.","lastModifiedDate":"2020-07-29"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":182,"author":{"gitId":"-"},"content":"**`DeleteCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":184,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":185,"author":{"gitId":"-"},"content":"Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":186,"author":{"gitId":"-"},"content":"return new DeleteCommand(index);","lastModifiedDate":"2020-07-29"},{"lineNumber":187,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":189,"author":{"gitId":"-"},"content":"There appears to be another utility class that obtains an `Index` from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":191,"author":{"gitId":"-"},"content":"Now that we have the know-how to extract the data that we need from the user’s input, we can parse the user command and create a new instance of `RemarkCommand`, as given below.","lastModifiedDate":"2020-07-29"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":193,"author":{"gitId":"-"},"content":"**`RemarkCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":195,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":196,"author":{"gitId":"-"},"content":"public RemarkCommand parse(String args) throws ParseException {","lastModifiedDate":"2020-07-29"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    requireNonNull(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args,","lastModifiedDate":"2020-07-29"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        PREFIX_REMARK);","lastModifiedDate":"2020-07-29"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    try {","lastModifiedDate":"2020-07-29"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2020-07-29"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    } catch (IllegalValueException ive) {","lastModifiedDate":"2020-07-29"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2020-07-29"},{"lineNumber":206,"author":{"gitId":"-"},"content":"            RemarkCommand.MESSAGE_USAGE), ive);","lastModifiedDate":"2020-07-29"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    String remark \u003d argMultimap.getValue(PREFIX_REMARK).orElse(\"\");","lastModifiedDate":"2020-07-29"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    return new RemarkCommand(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":212,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":213,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":215,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":217,"author":{"gitId":"-"},"content":":information_source: Don’t forget to update `AddressBookParser` to use our new `RemarkCommandParser`!","lastModifiedDate":"2020-07-29"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":219,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":221,"author":{"gitId":"-"},"content":"If you are stuck, check out the sample","lastModifiedDate":"2020-07-29"},{"lineNumber":222,"author":{"gitId":"-"},"content":"[here](https://github.com/se-edu/addressbook-level3/commit/dc6d5139d08f6403da0ec624ea32bd79a2ae0cbf#diff-8bf239e8e9529369b577701303ddd96af93178b4ed6735f91c2d8488b20c6b4a).","lastModifiedDate":"2022-01-02"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":224,"author":{"gitId":"-"},"content":"## Add `Remark` to the model","lastModifiedDate":"2020-07-29"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":226,"author":{"gitId":"jacobcuison"},"content":"Now that we have all the information that we need, let’s lay the groundwork for propagating the remarks added into the in-memory storage of contact data. We achieve that by working with the `Contact` model. Each field in a Contact is implemented as a separate class (e.g. a `Name` object represents the contact’s name). That means we should add a `Remark` class so that we can use a `Remark` object to represent a remark given to a contact.","lastModifiedDate":"2023-10-03"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":228,"author":{"gitId":"-"},"content":"### Add a new `Remark` class","lastModifiedDate":"2020-07-29"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":230,"author":{"gitId":"jacobcuison"},"content":"Create a new `Remark` in `seedu.address.model.contact`. Since a `Remark` is a field that is similar to `Address`, we can reuse a significant bit of code.","lastModifiedDate":"2023-10-03"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":232,"author":{"gitId":"-"},"content":"A copy-paste and search-replace later, you should have something like [this](https://github.com/se-edu/addressbook-level3/commit/4516e099699baa9e2d51801bd26f016d812dedcc#diff-41bb13c581e280c686198251ad6cc337cd5e27032772f06ed9bf7f1440995ece). Note how `Remark` has no constrains and thus does not require input","lastModifiedDate":"2022-01-02"},{"lineNumber":233,"author":{"gitId":"-"},"content":"validation.","lastModifiedDate":"2020-07-29"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":235,"author":{"gitId":"-"},"content":"### Make use of `Remark`","lastModifiedDate":"2020-07-29"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":237,"author":{"gitId":"-"},"content":"Let’s change `RemarkCommand` and `RemarkCommandParser` to use the new `Remark` class instead of plain `String`. These should be relatively simple changes.","lastModifiedDate":"2020-07-29"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":239,"author":{"gitId":"-"},"content":"## Add a placeholder element for remark to the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":241,"author":{"gitId":"jacobcuison"},"content":"Without getting too deep into `fxml`, let’s go on a 5 minute adventure to get some placeholder text to show up for each contact.","lastModifiedDate":"2023-10-03"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":243,"author":{"gitId":"jacobcuison"},"content":"Simply add the following to [`seedu.address.ui.ContactCard`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-639834f1e05afe2276a86372adf0fe5f69314642c2d93cfa543d614ce5a76688).","lastModifiedDate":"2023-10-03"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":245,"author":{"gitId":"jacobcuison"},"content":"**`ContactCard.java`:**","lastModifiedDate":"2023-10-03"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":247,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":248,"author":{"gitId":"-"},"content":"@FXML","lastModifiedDate":"2020-07-29"},{"lineNumber":249,"author":{"gitId":"-"},"content":"private Label remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":250,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":253,"author":{"gitId":"-"},"content":"`@FXML` is an annotation that marks a private or protected field and makes it accessible to FXML. It might sound like Greek to you right now, don’t worry — we will get back to it later.","lastModifiedDate":"2020-07-29"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":255,"author":{"gitId":"jacobcuison"},"content":"Then insert the following into [`main/resources/view/ContactListCard.fxml`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-d44c4f51c24f6253c277a2bb9bc440b8064d9c15ad7cb7ceda280bca032efce9).","lastModifiedDate":"2023-10-03"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":257,"author":{"gitId":"jacobcuison"},"content":"**`ContactListCard.fxml`:**","lastModifiedDate":"2023-10-03"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":259,"author":{"gitId":"-"},"content":"``` xml","lastModifiedDate":"2020-07-29"},{"lineNumber":260,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"remark\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$remark\" /\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":261,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":263,"author":{"gitId":"-"},"content":"That’s it! Fire up the application again and you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":265,"author":{"gitId":"-"},"content":"![$remark shows up in each entry](../images/add-remark/$Remark.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":267,"author":{"gitId":"jacobcuison"},"content":"## Modify `Contact` to support a `Remark` field","lastModifiedDate":"2023-10-03"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":269,"author":{"gitId":"jacobcuison"},"content":"Since `ContactCard` displays data from a `Contact`, we need to update `Contact` to get our `Remark` displayed!","lastModifiedDate":"2023-10-03"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":271,"author":{"gitId":"jacobcuison"},"content":"### Modify `Contact`","lastModifiedDate":"2023-10-03"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":273,"author":{"gitId":"jacobcuison"},"content":"We change the constructor of `Contact` to take a `Remark`. We will also need to define new fields and accessors accordingly to store our new addition.","lastModifiedDate":"2023-10-03"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":275,"author":{"gitId":"jacobcuison"},"content":"### Update other usages of `Contact`","lastModifiedDate":"2023-10-03"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":277,"author":{"gitId":"jacobcuison"},"content":"Unfortunately, a change to `Contact` will cause other commands to break, you will have to modify these commands to use the updated `Contact`!","lastModifiedDate":"2023-10-03"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":279,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":281,"author":{"gitId":"jacobcuison"},"content":":bulb: Use the `Find Usages` feature in IntelliJ IDEA on the `Contact` class to find these commands.","lastModifiedDate":"2023-10-03"},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":283,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":285,"author":{"gitId":"-"},"content":"Refer to [this commit](https://github.com/se-edu/addressbook-level3/commit/ce998c37e65b92d35c91d28c7822cd139c2c0a5c) and check that you have got everything in order!","lastModifiedDate":"2020-07-29"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":288,"author":{"gitId":"-"},"content":"## Updating Storage","lastModifiedDate":"2020-07-29"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":290,"author":{"gitId":"jacobcuison"},"content":"AddressBook stores data by serializing `JsonAdaptedContact` into `json` with the help of an external library — Jackson. Let’s update `JsonAdaptedContact` to work with our new `Contact`!","lastModifiedDate":"2023-10-03"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":292,"author":{"gitId":"-"},"content":"While the changes to code may be minimal, the test data will have to be updated as well.","lastModifiedDate":"2020-07-29"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":294,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":296,"author":{"gitId":"-"},"content":":exclamation: You must delete AddressBook’s storage file located at `/data/addressbook.json` before running it! Not doing so will cause AddressBook to default to an empty address book!","lastModifiedDate":"2020-07-29"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":298,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":300,"author":{"gitId":"-"},"content":"Check out [this commit](https://github.com/se-edu/addressbook-level3/commit/556cbd0e03ff224d7a68afba171ad2eb0ce56bbf)","lastModifiedDate":"2020-07-29"},{"lineNumber":301,"author":{"gitId":"-"},"content":"to see what the changes entail.","lastModifiedDate":"2020-07-29"},{"lineNumber":302,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":303,"author":{"gitId":"-"},"content":"## Finalizing the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":305,"author":{"gitId":"jacobcuison"},"content":"Now that we have finalized the `Contact` class and its dependencies, we can now bind the `Remark` field to the UI.","lastModifiedDate":"2023-10-03"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":307,"author":{"gitId":"-"},"content":"Just add [this one line of code!](https://github.com/se-edu/addressbook-level3/commit/5b98fee11b6b3f5749b6b943c4f3bd3aa049b692)","lastModifiedDate":"2020-07-29"},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":309,"author":{"gitId":"jacobcuison"},"content":"**`ContactCard.java`:**","lastModifiedDate":"2023-10-03"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":311,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":312,"author":{"gitId":"jacobcuison"},"content":"public ContactCard(Contact contact, int displayedIndex) {","lastModifiedDate":"2023-10-03"},{"lineNumber":313,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":314,"author":{"gitId":"jacobcuison"},"content":"    remark.setText(contact.getRemark().value);","lastModifiedDate":"2023-10-03"},{"lineNumber":315,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":316,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":317,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":318,"author":{"gitId":"-"},"content":"![The remark label is bound properly!](../images/add-remark/RemarkBound.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":320,"author":{"gitId":"-"},"content":"## Putting everything together","lastModifiedDate":"2020-07-29"},{"lineNumber":321,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":322,"author":{"gitId":"-"},"content":"After the previous step, we notice a peculiar regression — we went from displaying something to nothing at all. However, this is expected behavior as we are yet to update the `RemarkCommand` to make use of the code we\u0027ve been adding in the last few steps.","lastModifiedDate":"2020-07-29"},{"lineNumber":323,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":324,"author":{"gitId":"-"},"content":"### Update `RemarkCommand` and `RemarkCommandParser`","lastModifiedDate":"2020-07-29"},{"lineNumber":325,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":326,"author":{"gitId":"jacobcuison"},"content":"In this last step, we modify `RemarkCommand#execute()` to change the `Remark` of a `Contact`. Since all fields in a `Contact` are immutable, we create a new instance of a `Contact` with the values that we want and","lastModifiedDate":"2023-10-03"},{"lineNumber":327,"author":{"gitId":"jacobcuison"},"content":"save it with `Model#setContact()`.","lastModifiedDate":"2023-10-03"},{"lineNumber":328,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":329,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":331,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":332,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":333,"author":{"gitId":"jacobcuison"},"content":"    public static final String MESSAGE_ADD_REMARK_SUCCESS \u003d \"Added remark to Contact: %1$s\";","lastModifiedDate":"2023-10-03"},{"lineNumber":334,"author":{"gitId":"jacobcuison"},"content":"    public static final String MESSAGE_DELETE_REMARK_SUCCESS \u003d \"Removed remark from Contact: %1$s\";","lastModifiedDate":"2023-10-03"},{"lineNumber":335,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":336,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":337,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":338,"author":{"gitId":"jacobcuison"},"content":"        List\u003cContact\u003e lastShownList \u003d model.getFilteredContactList();","lastModifiedDate":"2023-10-03"},{"lineNumber":339,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":340,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2020-07-29"},{"lineNumber":341,"author":{"gitId":"jacobcuison"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_CONTACT_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-03"},{"lineNumber":342,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":343,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":344,"author":{"gitId":"jacobcuison"},"content":"        Contact contactToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2023-10-03"},{"lineNumber":345,"author":{"gitId":"jacobcuison"},"content":"        Contact editedContact \u003d new Contact(","lastModifiedDate":"2023-10-03"},{"lineNumber":346,"author":{"gitId":"jacobcuison"},"content":"                contactToEdit.getName(), contactToEdit.getPhone(), contactToEdit.getEmail(),","lastModifiedDate":"2023-10-03"},{"lineNumber":347,"author":{"gitId":"jacobcuison"},"content":"                contactToEdit.getAddress(), remark, contactToEdit.getTags());","lastModifiedDate":"2023-10-03"},{"lineNumber":348,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":349,"author":{"gitId":"jacobcuison"},"content":"        model.setContact(contactToEdit, editedContact);","lastModifiedDate":"2023-10-03"},{"lineNumber":350,"author":{"gitId":"jacobcuison"},"content":"        model.updateFilteredContactList(PREDICATE_SHOW_ALL_CONTACTS);","lastModifiedDate":"2023-10-03"},{"lineNumber":351,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":352,"author":{"gitId":"jacobcuison"},"content":"        return new CommandResult(generateSuccessMessage(editedContact));","lastModifiedDate":"2023-10-03"},{"lineNumber":353,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":354,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":355,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":356,"author":{"gitId":"-"},"content":"     * Generates a command execution success message based on whether","lastModifiedDate":"2021-08-01"},{"lineNumber":357,"author":{"gitId":"-"},"content":"     * the remark is added to or removed from","lastModifiedDate":"2021-08-01"},{"lineNumber":358,"author":{"gitId":"jacobcuison"},"content":"     * {@code contactToEdit}.","lastModifiedDate":"2023-10-03"},{"lineNumber":359,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":360,"author":{"gitId":"jacobcuison"},"content":"    private String generateSuccessMessage(Contact contactToEdit) {","lastModifiedDate":"2023-10-03"},{"lineNumber":361,"author":{"gitId":"-"},"content":"        String message \u003d !remark.value.isEmpty() ? MESSAGE_ADD_REMARK_SUCCESS : MESSAGE_DELETE_REMARK_SUCCESS;","lastModifiedDate":"2020-07-29"},{"lineNumber":362,"author":{"gitId":"jacobcuison"},"content":"        return String.format(message, contactToEdit);","lastModifiedDate":"2023-10-03"},{"lineNumber":363,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":364,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":365,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":366,"author":{"gitId":"-"},"content":"![Congratulations!](../images/add-remark/RemarkComplete.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":367,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":368,"author":{"gitId":"-"},"content":"## Writing tests","lastModifiedDate":"2020-07-29"},{"lineNumber":369,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":370,"author":{"gitId":"-"},"content":"Tests are crucial to ensuring that bugs don’t slip into the codebase unnoticed. This is especially true for large code bases where a change might lead to unintended behavior.","lastModifiedDate":"2020-07-29"},{"lineNumber":371,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":372,"author":{"gitId":"-"},"content":"Let’s verify the correctness of our code by writing some tests!","lastModifiedDate":"2020-07-29"},{"lineNumber":373,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":374,"author":{"gitId":"-"},"content":"Of course you can simply add the test cases manually, like you\u0027ve been doing all along this tutorial. The result would be like the test cases in [here](https://github.com/se-edu/addressbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-ff58f7c10338b34f76645df49b71ecb2bafaf7611b20e7ff59ebc98475538a01). Alternatively, you can get the help of IntelliJ to generate the skeletons of the test cases, as explained in the next section.","lastModifiedDate":"2022-01-02"},{"lineNumber":375,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":376,"author":{"gitId":"-"},"content":"### Automatically generating tests","lastModifiedDate":"2020-07-29"},{"lineNumber":377,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":378,"author":{"gitId":"-"},"content":"The goal is to write effective and efficient tests to ensure that `RemarkCommand#execute()` behaves as expected.","lastModifiedDate":"2020-07-29"},{"lineNumber":379,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":380,"author":{"gitId":"-"},"content":"The convention for test names is `methodName_testScenario_expectedResult`. An example would be","lastModifiedDate":"2020-07-29"},{"lineNumber":381,"author":{"gitId":"-"},"content":"`execute_filteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":382,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":383,"author":{"gitId":"-"},"content":"Let’s create a test for `RemarkCommand#execute()` to test that adding a remark works. On `IntelliJ IDEA` you can bring up the context menu and choose to `Go To` \\\u003e `Test` or use the appropriate keyboard shortcut.","lastModifiedDate":"2020-07-29"},{"lineNumber":384,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":385,"author":{"gitId":"-"},"content":"![Using the context menu to jump to tests](../images/add-remark/ContextMenu.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":386,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":387,"author":{"gitId":"-"},"content":"Then, create a test for the `execute` method.","lastModifiedDate":"2020-07-29"},{"lineNumber":388,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":389,"author":{"gitId":"-"},"content":"![Creating a test for `execute`.](../images/add-remark/CreateTest.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":390,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":391,"author":{"gitId":"-"},"content":"Following convention, let’s change the name of the generated method to `execute_addRemarkUnfilteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":392,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":393,"author":{"gitId":"-"},"content":"Let’s use the utility functions provided in `CommandTestUtil`. The functions ensure that commands produce the expected `CommandResult` and output the correct message. In this case, `CommandTestUtil#assertCommandSuccess` is the best fit as we are testing that a `RemarkCommand` will successfully add a `Remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":394,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":395,"author":{"gitId":"-"},"content":"You should end up with a test that looks something like [this](https://github.com/se-edu/addressbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-ff58f7c10338b34f76645df49b71ecb2bafaf7611b20e7ff59ebc98475538a01R36-R49).","lastModifiedDate":"2022-01-02"},{"lineNumber":396,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":397,"author":{"gitId":"-"},"content":"## Conclusion","lastModifiedDate":"2020-07-29"},{"lineNumber":398,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":399,"author":{"gitId":"-"},"content":"This concludes the tutorial for adding a new `Command` to AddressBook.","lastModifiedDate":"2020-07-29"}],"authorContributionMap":{"jacobcuison":40,"-":359}},{"path":"docs/tutorials/RemovingFields.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Removing Fields\"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003e Perfection is achieved, not when there is nothing more to add, but when there is nothing left to take away.","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003e —  Antoine de Saint-Exupery","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"When working on an existing code base, you will most likely find that some features that are no longer necessary.","lastModifiedDate":"2021-08-01"},{"lineNumber":11,"author":{"gitId":"jacobcuison"},"content":"This tutorial aims to give you some practice on such a code \u0027removal\u0027 activity by removing the `address` field from `Contact` class.","lastModifiedDate":"2023-10-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-success\"\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"**If you have done the [Add `remark` command tutorial](AddRemark.html)  already**, you should know where the code had to be updated to add the field `remark`. From that experience, you can deduce where the code needs to be changed to _remove_ that field too. The removing of the `address` field can be done similarly.","lastModifiedDate":"2021-08-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"However, if you have no such prior knowledge, removing a field can take a quite a bit of detective work. This tutorial takes you through that process. **At least have a read even if you don\u0027t actually do the steps yourself.**","lastModifiedDate":"2021-08-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"## Safely deleting `Address`","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"IntelliJ IDEA provides a refactoring tool that can identify *most* parts of a removal easily. Let’s try to use it as much as we can.","lastModifiedDate":"2021-08-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"### Assisted refactoring","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"jacobcuison"},"content":"The `address` field in `Contact` is actually an instance of the `seedu.address.model.contact.Address` class. Since removing the `Address` class will break the application, we start by identifying `Address`\u0027s usages. This allows us to see code that depends on `Address` to function properly and edit them on a case-by-case basis. Right-click the `Address` class and select `Refactor` \\\u003e `Safe Delete` through the menu.","lastModifiedDate":"2023-10-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"* :bulb: To make things simpler, you can unselect the options `Search in comments and strings` and `Search for text occurrences`","lastModifiedDate":"2021-08-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"![Usages detected](../images/remove/UnsafeDelete.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"Choose to `View Usages` and you should be presented with a list of `Safe Delete Conflicts`. These conflicts describe locations in which the `Address` class is used.","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"![List of conflicts](../images/remove/SafeDeleteConflicts.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"jacobcuison"},"content":"Remove usages of `Address` by performing `Safe Delete`s on each entry i.e., double-click on the entry (which takes you to the code in concern, right-click on that entity, and choose `Refactor` -\u003e `Safe delete` as before). You will need to exercise discretion when removing usages of `Address`. Functions like `ParserUtil#parseAddress()` can be safely removed but its usages must be removed as well. Other usages like in `EditContactDescriptor` may require more careful inspection.","lastModifiedDate":"2023-10-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"jacobcuison"},"content":"Let’s try removing references to `Address` in `EditContactDescriptor`.","lastModifiedDate":"2023-10-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"jacobcuison"},"content":"1. Safe delete the field `address` in `EditContactDescriptor`.","lastModifiedDate":"2023-10-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"1. Select `Yes` when prompted to remove getters and setters.","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"1. Select `View Usages` again.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"   ![UnsafeDeleteOnField](../images/remove/UnsafeDeleteOnField.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"1. Remove the usages of `address` and select `Do refactor` when you are done.","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"jacobcuison"},"content":"   :bulb: **Tip:** Removing usages may result in errors. Exercise discretion and fix them. For example, removing the `address` field from the `Contact` class will require you to modify its constructor.","lastModifiedDate":"2023-10-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"1. Repeat the steps for the remaining usages of `Address`","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"After you are done, verify that the application still works by compiling and running it again.","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"### Manual refactoring","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"Unfortunately, there are usages of `Address` that IntelliJ IDEA cannot identify. You can find them by searching for instances of the word `address` in your code (`Edit` \\\u003e `Find` \\\u003e `Find in path`).","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"jacobcuison"},"content":"Places of interest to look out for would be resources used by the application. `main/resources` contains images and `fxml` files used by the application and `test/resources` contains test data. For example, there is a `$address` in each `ContactCard` that has not been removed nor identified.","lastModifiedDate":"2023-10-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"![$address](../images/remove/$address.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"jacobcuison"},"content":"A quick look at the `ContactCard` class and its `fxml` file quickly reveals why it slipped past the automated refactoring.","lastModifiedDate":"2023-10-03"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"jacobcuison"},"content":"**`ContactCard.java`**","lastModifiedDate":"2023-10-03"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"@FXML","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"private Label address;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"jacobcuison"},"content":"**`ContactCard.fxml`**","lastModifiedDate":"2023-10-03"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"``` xml","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"After removing the `Label`, we can proceed to formally test our code. If everything went well, you should have most of your tests pass. Fix any remaining errors until the tests all pass.","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"## Tidying up","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"At this point, your application is working as intended and all your tests are passing. What’s left to do is to clean up references to `Address` in test data and documentation.","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"In `src/test/data/`, data meant for testing purposes are stored. While keeping the `address` field in the json files does not cause the tests to fail, it is not good practice to let cruft from old features accumulate.","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"jacobcuison"},"content":"**`invalidContactAddressBook.json`:**","lastModifiedDate":"2023-10-03"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"```json","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"jacobcuison"},"content":"  \"contacts\": [ {","lastModifiedDate":"2023-10-03"},{"lineNumber":104,"author":{"gitId":"jacobcuison"},"content":"    \"name\": \"Contact with invalid name field: Ha!ns Mu@ster\",","lastModifiedDate":"2023-10-03"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    \"phone\": \"9482424\",","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    \"email\": \"hans@example.com\",","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    \"address\": \"4th street\"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"  } ]","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"You can go through each individual `json` file and manually remove the `address` field.","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"jacobcuison":13,"-":99}},{"path":"docs/tutorials/TracingCode.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Tracing code\"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003e Indeed, the ratio of time spent reading versus writing is well over 10 to 1. We are constantly reading old code as part of the effort to write new code. …​\\[Therefore,\\] making it easy to read makes it easier to write.","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003e —  Robert C. Martin Clean Code: A Handbook of Agile Software Craftsmanship","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"When trying to understand an unfamiliar code base, one common strategy used is to trace some representative execution path through the code base. One easy way to trace an execution path is to use a debugger to step through the code. In this tutorial, you will be using the IntelliJ IDEA’s debugger to trace the execution path of a specific user command.","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Before we start","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Before we jump into the code, it is useful to get an idea of the overall structure and the high-level behavior of the application. This is provided in the \u0027Architecture\u0027 section of the developer guide. In particular, the architecture diagram (reproduced below), tells us that the App consists of several components.","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"![ArchitectureDiagram](../images/ArchitectureDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"It also has a sequence diagram (reproduced below) that tells us how a command propagates through the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/ArchitectureSequenceDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"Note how the diagram shows only the execution flows _between_ the main components. That is, it does not show details of the execution path *inside* each component. By hiding those details, the diagram aims to inform the reader about the overall execution path of a command without overwhelming the reader with too much details. In this tutorial, you aim to find those omitted details so that you get a more in-depth understanding of how the code works.","lastModifiedDate":"2021-07-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"Before we proceed, ensure that you have done the following:","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"1. Read the [*Architecture* section of the DG](../DeveloperGuide.md#architecture)","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"1. Set up the project in Intellij IDEA","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"1. Learn basic debugging features of Intellij IDEA","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"   * If you are using a different IDE, we\u0027ll leave it to you to figure out the equivalent feature to use in your IDE.","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"   * If you are not using an IDE, we\u0027ll let you figure out how to achieve the same using your coding toolchain.","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"## Setting a breakpoint","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"As you know, the first step of debugging is to put in a breakpoint where you want the debugger to pause the execution. For example, if you are trying to understand how the App starts up, you would put a breakpoint in the first statement of the `main` method.","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"In our case, we would want to begin the tracing at the very point where the App start processing user input (i.e., somewhere in the UI component), and then trace through how the execution proceeds through the UI component. However, the execution path through a GUI is often somewhat obscure due to various *event-driven mechanisms* used by GUI frameworks, which happens to be the case here too. Therefore, let us put the breakpoint where the `UI` transfers control to the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/ArchitectureSequenceDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":42,"author":{"gitId":"-"},"content":"According to the sequence diagram you saw earlier (and repeated above for reference), the `UI` component yields control to the `Logic` component through a method named `execute`. Searching through the code base for an `execute()` method that belongs to the `Logic` component yields a promising candidate in `seedu.address.logic.Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":44,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/tracing/searchResultsForExecuteMethod.png\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":46,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":48,"author":{"gitId":"-"},"content":":bulb: **Intellij Tip:** The [\u0027**Search Everywhere**\u0027 feature](https://www.jetbrains.com/help/idea/searching-everywhere.html) can be used here. In particular, the \u0027**Find Symbol**\u0027 (\u0027Symbol\u0027 here refers to methods, variables, classes etc.) variant of that feature is quite useful here as we are looking for a _method_ named `execute`, not simply the text `execute`.","lastModifiedDate":"2021-07-31"},{"lineNumber":49,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":51,"author":{"gitId":"-"},"content":"A quick look at the `seedu.address.logic.Logic` (an extract given below) confirms that this indeed might be what we’re looking for.","lastModifiedDate":"2021-07-31"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":53,"author":{"gitId":"-"},"content":"```java","lastModifiedDate":"2021-07-31"},{"lineNumber":54,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2021-07-31"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-07-31"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2021-07-31"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2021-07-31"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2021-07-31"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"But apparently, this is an interface, not a concrete implementation.","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"That should be fine because the [Architecture section of the Developer Guide](../DeveloperGuide.html#architecture) tells us that components interact through interfaces. Here\u0027s the relevant diagram:","lastModifiedDate":"2021-07-31"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":70,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":72,"author":{"gitId":"-"},"content":"Next, let\u0027s find out which statement(s) in the `UI` code is calling this method, thus transferring control from the `UI` to the `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":74,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":76,"author":{"gitId":"-"},"content":":bulb: **Intellij Tip:** The [\u0027**Find Usages**\u0027 feature](https://www.jetbrains.com/help/idea/find-highlight-usages.html#find-usages) can find from which parts of the code a class/method/variable is being used.","lastModifiedDate":"2021-07-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"![`Find Usages` tool window. `Edit` \\\u003e `Find` \\\u003e `Find Usages`.](../images/tracing/FindUsages.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"Bingo\\! `MainWindow#executeCommand()` seems to be exactly what we’re looking for\\!","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"Now let’s set the breakpoint. First, double-click the item to reach the corresponding code. Once there, click on the left gutter to set a breakpoint, as shown below.","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":" ![LeftGutter](../images/tracing/LeftGutter.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"## Tracing the execution path","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"Recall from the User Guide that the `edit` command has the format: `edit INDEX [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [t/TAG]…​` For this tutorial we will be issuing the command `edit 1 n/Alice Yeoh`.","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":":bulb: **Tip:** Over the course of the debugging session, you will encounter every major component in the application. Try to keep track of what happens inside the component and where the execution transfers to another component.","lastModifiedDate":"2021-07-31"},{"lineNumber":93,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"1. To start the debugging session, simply `Run` \\\u003e `Debug Main`","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"1. When the GUI appears, enter `edit 1 n/Alice Yeoh` into the command box and press `Enter`.","lastModifiedDate":"2021-07-31"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"1. The Debugger tool window should show up and show something like this:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"   ![DebuggerStep1](../images/tracing/DebuggerStep1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"1. Use the _Show execution point_ feature to jump to the line of code that we stopped at:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":103,"author":{"gitId":"-"},"content":"   ![ShowExecutionPoint](../images/tracing/ShowExecutionPoint.png)\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":104,"author":{"gitId":"-"},"content":"   `CommandResult commandResult \u003d logic.execute(commandText);` is the line that you end up at (i.e., the place where we put the breakpoint).","lastModifiedDate":"2021-07-31"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"1. We are interested in the `logic.execute(commandText)` portion of that line so let’s _Step in_ into that method call:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    ![StepInto](../images/tracing/StepInto.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"1. We end up in `LogicManager#execute()` (not `Logic#execute` -- but this is expected because we know the `execute()` method in the `Logic` interface is actually implemented by the `LogicManager` class). Let’s take a look at the body of the method. Given below is the same code, with additional explanatory comments.","lastModifiedDate":"2021-07-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"   **LogicManager\\#execute().**","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"   @Override","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"   public CommandResult execute(String commandText)","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"           throws CommandException, ParseException {","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        //Logging, safe to ignore","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        //Parse user input from String to a Command","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        Command command \u003d addressBookParser.parseCommand(commandText);","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        //Executes the Command and stores the result","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            //We can deduce that the previous line of code modifies model in some way","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            // since it\u0027s being stored here.","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"1. `LogicManager#execute()` appears to delegate most of the heavy lifting to other components. Let’s take a closer look at each one.","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"1. _Step over_ the logging code since it is of no interest to us now.","lastModifiedDate":"2021-07-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"   ![StepOver](../images/tracing/StepOver.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"1. _Step into_ the line where user input in parsed from a String to a Command, which should bring you to the `AddressBookParser#parseCommand()` method (partial code given below):","lastModifiedDate":"2021-07-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"   public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"       final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"       final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"1. _Step over_ the statements in that method until you reach the `switch` statement. The \u0027Variables\u0027 window now shows the value of both `commandWord` and `arguments`:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    ![Variables](../images/tracing/Variables.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"1. We see that the value of `commandWord` is now `edit` but `arguments` is still not processed in any meaningful way.","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"1. Stepping through the `switch` block, we end up at a call to `EditCommandParser().parse()` as expected (because the command we typed is an edit command).","lastModifiedDate":"2021-07-31"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    ...","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    case EditCommand.COMMAND_WORD:","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        return new EditCommandParser().parse(arguments);","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    ...","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"1. Let’s see what `EditCommandParser#parse()` does by stepping into it. You might have to click the \u0027step into\u0027 button multiple times here because there are two method calls in that statement: `EditCommandParser()` and `parse()`.","lastModifiedDate":"2021-07-31"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Intellij Tip:** Sometimes, you might end up stepping into functions that are not of interest. Simply use the `step out` button to get out of them!","lastModifiedDate":"2021-07-31"},{"lineNumber":170,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"1. Stepping through the method shows that it calls `ArgumentTokenizer#tokenize()` and `ParserUtil#parseIndex()` to obtain the arguments and index required.","lastModifiedDate":"2021-07-31"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":174,"author":{"gitId":"jacobcuison"},"content":"1. The rest of the method seems to exhaustively check for the existence of each possible parameter of the `edit` command and store any possible changes in an `EditContactDescriptor`. Recall that we can verify the contents of `editContactDesciptor` through the \u0027Variables\u0027 window.\u003cbr\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":175,"author":{"gitId":"-"},"content":"   ![EditCommand](../images/tracing/EditCommand.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"1. As you just traced through some code involved in parsing a command, you can take a look at this class diagram to see where the various parsing-related classes you encountered fit into the design of the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":178,"author":{"gitId":"-"},"content":"   \u003cimg src\u003d\"../images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":180,"author":{"gitId":"-"},"content":"1. Let’s continue stepping through until we return to `LogicManager#execute()`.","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    The sequence diagram below shows the details of the execution path through the Logic component. Does the execution path you traced in the code so far match the diagram?\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    ![Tracing an `edit` command through the Logic component](../images/tracing/LogicSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"1. Now, step over until you read the statement that calls the `execute()` method of the `EditCommand` object received, and step into that `execute()` method (partial code given below):","lastModifiedDate":"2021-07-31"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"   **`EditCommand#execute()`:**","lastModifiedDate":"2021-07-31"},{"lineNumber":188,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"   @Override","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"   public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"jacobcuison"},"content":"       Contact contactToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2023-10-03"},{"lineNumber":193,"author":{"gitId":"jacobcuison"},"content":"       Contact editedContact \u003d createEditedContact(contactToEdit, editContactDescriptor);","lastModifiedDate":"2023-10-03"},{"lineNumber":194,"author":{"gitId":"jacobcuison"},"content":"       if (!contactToEdit.isSameContact(editedContact) \u0026\u0026 model.hasContact(editedContact)) {","lastModifiedDate":"2023-10-03"},{"lineNumber":195,"author":{"gitId":"jacobcuison"},"content":"           throw new CommandException(MESSAGE_DUPLICATE_CONTACT);","lastModifiedDate":"2023-10-03"},{"lineNumber":196,"author":{"gitId":"-"},"content":"       }","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"jacobcuison"},"content":"       model.setContact(contactToEdit, editedContact);","lastModifiedDate":"2023-10-03"},{"lineNumber":198,"author":{"gitId":"jacobcuison"},"content":"       model.updateFilteredContactList(PREDICATE_SHOW_ALL_CONTACTS);","lastModifiedDate":"2023-10-03"},{"lineNumber":199,"author":{"gitId":"jacobcuison"},"content":"       return new CommandResult(String.format(MESSAGE_EDIT_CONTACT_SUCCESS, editedContact));","lastModifiedDate":"2023-10-03"},{"lineNumber":200,"author":{"gitId":"-"},"content":"   }","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"1. As suspected, `command#execute()` does indeed make changes to the `model` object. Specifically,","lastModifiedDate":"2021-07-31"},{"lineNumber":204,"author":{"gitId":"jacobcuison"},"content":"   * it uses the `setContact()` method (defined in the interface `Model` and implemented in `ModelManager` as per the usual pattern) to update the contact data.","lastModifiedDate":"2023-10-03"},{"lineNumber":205,"author":{"gitId":"jacobcuison"},"content":"   * it uses the `updateFilteredContactList` method to ask the `Model` to populate the \u0027filtered list\u0027 with _all_ contacts.\u003cbr\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":206,"author":{"gitId":"jacobcuison"},"content":"     FYI, The \u0027filtered list\u0027 is the list of contacts resulting from the most recent operation that will be shown to the user immediately after. For the `edit` command, we populate it with all the contacts so that the user can see the edited contact along with all other contacts. If this was a `find` command, we would be setting that list to contain the search results instead.\u003cbr\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":207,"author":{"gitId":"jacobcuison"},"content":"     To provide some context, given below is the class diagram of the `Model` component. See if you can figure out where the \u0027filtered list\u0027 of contacts is being tracked.","lastModifiedDate":"2023-10-03"},{"lineNumber":208,"author":{"gitId":"-"},"content":"     \u003cimg src\u003d\"../images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":209,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Model` component section of the DG](../DeveloperGuide.html#model-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"1. As you step through the rest of the statements in the `EditCommand#execute()` method, you\u0027ll see that it creates a `CommandResult` object (containing information about the result of the execution) and returns it.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":212,"author":{"gitId":"-"},"content":"   Advancing the debugger by one more step should take you back to the middle of the `LogicManager#execute()` method.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"1. Given that you have already seen quite a few classes in the `Logic` component in action, see if you can identify in this partial class diagram some of the classes you\u0027ve encountered so far, and see how they fit into the class structure of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    \u003cimg src\u003d\"../images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":216,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Logic` component section of the DG](../DeveloperGuide.html#logic-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"1. Similar to before, you can step over/into statements in the `LogicManager#execute()` method to examine how the control is transferred to the `Storage` component and what happens inside that component.","lastModifiedDate":"2021-07-31"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":220,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Intellij Tip:** When trying to step into a statement such as `storage.saveAddressBook(model.getAddressBook())` which contains multiple method calls, Intellij will let you choose (by clicking) which one you want to step into.","lastModifiedDate":"2021-07-31"},{"lineNumber":221,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"1.  As you step through the code inside the `Storage` component, you will eventually arrive at the `JsonAddressBook#saveAddressBook()` method which calls the `JsonSerializableAddressBook` constructor, to create an object that can be _serialized_ (i.e., stored in storage medium) in JSON format. That constructor is given below (with added line breaks for easier readability):","lastModifiedDate":"2021-07-31"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    **`JsonSerializableAddressBook` constructor:**","lastModifiedDate":"2021-07-31"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"     * Converts a given {@code ReadOnlyAddressBook} into this class for Jackson use.","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"     * @param source future changes to this will not affect the created","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"     * {@code JsonSerializableAddressBook}.","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    public JsonSerializableAddressBook(ReadOnlyAddressBook source) {","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"jacobcuison"},"content":"        contacts.addAll(","lastModifiedDate":"2023-10-03"},{"lineNumber":235,"author":{"gitId":"jacobcuison"},"content":"            source.getContactList()","lastModifiedDate":"2023-10-03"},{"lineNumber":236,"author":{"gitId":"-"},"content":"                  .stream()","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"jacobcuison"},"content":"                  .map(JsonAdaptedContact::new)","lastModifiedDate":"2023-10-03"},{"lineNumber":238,"author":{"gitId":"-"},"content":"                  .collect(Collectors.toList()));","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"jacobcuison"},"content":"1. It appears that a `JsonAdaptedContact` is created for each `Contact` and then added to the `JsonSerializableAddressBook`.","lastModifiedDate":"2023-10-03"},{"lineNumber":243,"author":{"gitId":"-"},"content":"   This is because regular Java objects need to go through an _adaptation_ for them to be suitable to be saved in JSON format.","lastModifiedDate":"2021-07-31"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"1. While you are stepping through the classes in the `Storage` component, here is the component\u0027s class diagram to help you understand how those classes fit into the structure of the component.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":246,"author":{"gitId":"-"},"content":"   \u003cimg src\u003d\"../images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":247,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Storage` component section of the DG](../DeveloperGuide.html#storage-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"1. We can continue to step through until you reach the end of the `LogicManager#execute()` method and return to the `MainWindow#executeCommand()` method (the place where we put the original breakpoint).","lastModifiedDate":"2021-07-31"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"1. Stepping into `resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());`, we end up in:","lastModifiedDate":"2021-07-31"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    **`ResultDisplay#setFeedbackToUser()`**","lastModifiedDate":"2021-07-31"},{"lineNumber":254,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"    public void setFeedbackToUser(String feedbackToUser) {","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"        requireNonNull(feedbackToUser);","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"        resultDisplay.setText(feedbackToUser);","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"1. Finally, you can step through until you reach the end of`MainWindow#executeCommand()`.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":262,"author":{"gitId":"-"},"content":"   :bulb: This may be a good time to read through the [`UI` component section of the DG](../DeveloperGuide.html#ui-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"## Conclusion","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"In this tutorial, we traced a valid edit command from raw user input to the result being displayed to the user. From this tutorial, you learned more about how the various components work together to produce a response to a user command.","lastModifiedDate":"2021-07-31"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"Here are some quick questions you can try to answer based on your execution path tracing. In some cases, you can do further tracing for the given commands to find exactly what happens.","lastModifiedDate":"2021-07-31"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"1.  In this tutorial, we traced the \"happy path\" (i.e., no errors). What","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"    do you think will happen if we traced the following commands","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"    instead? What exceptions do you think will be thrown (if any), where","lastModifiedDate":"2020-05-23"},{"lineNumber":274,"author":{"gitId":"-"},"content":"    will the exceptions be thrown and where will they be handled?","lastModifiedDate":"2020-05-23"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":276,"author":{"gitId":"-"},"content":"    1.  `redit 1 n/Alice Yu`","lastModifiedDate":"2020-05-23"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":278,"author":{"gitId":"-"},"content":"    2.  `edit 0 n/Alice Yu`","lastModifiedDate":"2020-05-23"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":280,"author":{"gitId":"-"},"content":"    3.  `edit 1 n/Alex Yeoh`","lastModifiedDate":"2020-05-23"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":282,"author":{"gitId":"-"},"content":"    4.  `edit 1`","lastModifiedDate":"2020-05-23"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":284,"author":{"gitId":"-"},"content":"    5.  `edit 1 n/アリス ユー`","lastModifiedDate":"2020-05-23"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":286,"author":{"gitId":"-"},"content":"    6.  `edit 1 t/one t/two t/three t/one`","lastModifiedDate":"2020-05-23"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":288,"author":{"gitId":"-"},"content":"2.  What components will you have to modify to perform the following","lastModifiedDate":"2020-05-23"},{"lineNumber":289,"author":{"gitId":"-"},"content":"    enhancements to the application?","lastModifiedDate":"2020-05-23"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":291,"author":{"gitId":"-"},"content":"    1.  Make command words case-insensitive","lastModifiedDate":"2020-05-23"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":293,"author":{"gitId":"-"},"content":"    2.  Allow `delete` to remove more than one index at a time","lastModifiedDate":"2020-05-23"},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":295,"author":{"gitId":"-"},"content":"    3.  Save the address book in the CSV format instead","lastModifiedDate":"2020-05-23"},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":297,"author":{"gitId":"-"},"content":"    4.  Add a new command","lastModifiedDate":"2020-05-23"},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":299,"author":{"gitId":"jacobcuison"},"content":"    5.  Add a new field to `Contact`","lastModifiedDate":"2023-10-03"},{"lineNumber":300,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":301,"author":{"gitId":"-"},"content":"    6.  Add a new entity to the address book","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"jacobcuison":17,"-":284}},{"path":"src/main/java/seedu/address/Main.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address;","lastModifiedDate":"2019-02-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-07-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2019-02-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-07-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2019-02-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * The main entry point to the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":10,"author":{"gitId":"s-peiran"},"content":" * \u003cp\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * This is a workaround for the following error when MainApp is made the","lastModifiedDate":"2019-02-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * entry point of the application:","lastModifiedDate":"2019-02-08"},{"lineNumber":13,"author":{"gitId":"s-peiran"},"content":" * \u003cp\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Error: JavaFX runtime components are missing, and are required to run this application","lastModifiedDate":"2019-02-08"},{"lineNumber":15,"author":{"gitId":"s-peiran"},"content":" * \u003cp\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The reason is that MainApp extends Application. In that case, the","lastModifiedDate":"2019-02-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * LauncherHelper will check for the javafx.graphics module to be present","lastModifiedDate":"2019-02-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * as a named module. We don\u0027t use JavaFX via the module system so it can\u0027t","lastModifiedDate":"2019-02-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * find the javafx.graphics module, and so the launch is aborted.","lastModifiedDate":"2019-02-08"},{"lineNumber":20,"author":{"gitId":"s-peiran"},"content":" * \u003cp\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * By having a separate main class (Main) that doesn\u0027t extend Application","lastModifiedDate":"2019-02-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * to be the entry point of the application, we avoid this issue.","lastModifiedDate":"2019-02-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2019-02-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class Main {","lastModifiedDate":"2019-02-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static Logger logger \u003d LogsCenter.getLogger(Main.class);","lastModifiedDate":"2023-07-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-02-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // As per https://github.com/openjdk/jfx/blob/master/doc-files/release-notes-16.md","lastModifiedDate":"2023-07-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // JavaFX 16 (or later) runtime logs a warning at startup if JavaFX classes are loaded from","lastModifiedDate":"2023-07-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // the classpath instead of a module.","lastModifiedDate":"2023-07-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // Our application does not use Java modules yet. Even if it did, modules are ignored when","lastModifiedDate":"2023-07-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // packed into a FAT Jar file (as we do), which means this warning will persist even then.","lastModifiedDate":"2023-07-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // The warning however, can be safely ignored. Thus, the following log informs","lastModifiedDate":"2023-07-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // the user (if looking at the log output) that the said warning appearing in the log","lastModifiedDate":"2023-07-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // can be ignored.","lastModifiedDate":"2023-07-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        logger.warning(\"The warning about Unsupported JavaFX configuration below can be ignored.\");","lastModifiedDate":"2023-07-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        Application.launch(MainApp.class, args);","lastModifiedDate":"2019-02-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-02-08"}],"authorContributionMap":{"s-peiran":4,"-":36}},{"path":"src/main/java/seedu/address/MainApp.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Config;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Version;","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-06-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ConfigUtil;","lastModifiedDate":"2016-10-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.LogicManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-01-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-01-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-01-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-01-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-01-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2016-12-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.storage.AddressBookStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.storage.UserPrefsStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.ui.Ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.ui.UiManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":" * Runs the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"public class MainApp extends Application {","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"s-peiran"},"content":"    public static final Version VERSION \u003d new Version(1, 3, 0, true);","lastModifiedDate":"2023-10-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(MainApp.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    protected Ui ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    protected Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    protected Storage storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    protected Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    protected Config config;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void init() throws Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d[ Initializing AddressBook ]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2016-09-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        super.init();","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d AppParameters.parse(getParameters());","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        config \u003d initConfig(appParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        initLogging(config);","lastModifiedDate":"2023-07-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        UserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(config.getUserPrefsFilePath());","lastModifiedDate":"2017-02-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d initPrefs(userPrefsStorage);","lastModifiedDate":"2018-12-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        AddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(userPrefs.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2017-02-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        model \u003d initModelManager(storage, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        ui \u003d new UiManager(logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * Returns a {@code ModelManager} with the data from {@code storage}\u0027s address book and {@code userPrefs}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * The data from the sample address book will be used instead if {@code storage}\u0027s address book is not found,","lastModifiedDate":"2017-08-16"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * or an empty address book will be used instead if errors occur when reading {@code storage}\u0027s address book.","lastModifiedDate":"2017-08-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    private Model initModelManager(Storage storage, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        logger.info(\"Using data file : \" + storage.getAddressBookFilePath());","lastModifiedDate":"2023-07-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        Optional\u003cReadOnlyAddressBook\u003e addressBookOptional;","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook initialData;","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            addressBookOptional \u003d storage.readAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            if (!addressBookOptional.isPresent()) {","lastModifiedDate":"2016-09-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"                logger.info(\"Creating a new data file \" + storage.getAddressBookFilePath()","lastModifiedDate":"2023-05-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":"                    + \" populated with a sample AddressBook.\");","lastModifiedDate":"2023-05-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            initialData \u003d addressBookOptional.orElseGet(SampleDataUtil::getSampleAddressBook);","lastModifiedDate":"2016-12-20"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        } catch (DataLoadingException e) {","lastModifiedDate":"2023-06-14"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            logger.warning(\"Data file at \" + storage.getAddressBookFilePath() + \" could not be loaded.\"","lastModifiedDate":"2023-06-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"                + \" Will be starting with an empty AddressBook.\");","lastModifiedDate":"2023-05-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            initialData \u003d new AddressBook();","lastModifiedDate":"2016-09-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        return new ModelManager(initialData, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void initLogging(Config config) {","lastModifiedDate":"2016-09-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        LogsCenter.init(config);","lastModifiedDate":"2016-09-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Returns a {@code Config} using the file at {@code configFilePath}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * The default file path {@code Config#DEFAULT_CONFIG_FILE} will be used instead","lastModifiedDate":"2017-08-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * if {@code configFilePath} is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    protected Config initConfig(Path configFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        Config initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        Path configFilePathUsed;","lastModifiedDate":"2018-04-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        configFilePathUsed \u003d Config.DEFAULT_CONFIG_FILE;","lastModifiedDate":"2016-09-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        if (configFilePath !\u003d null) {","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            logger.info(\"Custom Config file specified \" + configFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            configFilePathUsed \u003d configFilePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        logger.info(\"Using config file : \" + configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            Optional\u003cConfig\u003e configOptional \u003d ConfigUtil.readConfig(configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            if (!configOptional.isPresent()) {","lastModifiedDate":"2023-01-03"},{"lineNumber":121,"author":{"gitId":"-"},"content":"                logger.info(\"Creating new config file \" + configFilePathUsed);","lastModifiedDate":"2023-05-15"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2023-01-03"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            initializedConfig \u003d configOptional.orElse(new Config());","lastModifiedDate":"2016-09-24"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        } catch (DataLoadingException e) {","lastModifiedDate":"2023-06-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            logger.warning(\"Config file at \" + configFilePathUsed + \" could not be loaded.\"","lastModifiedDate":"2023-06-15"},{"lineNumber":126,"author":{"gitId":"-"},"content":"                + \" Using default config properties.\");","lastModifiedDate":"2023-05-15"},{"lineNumber":127,"author":{"gitId":"-"},"content":"            initializedConfig \u003d new Config();","lastModifiedDate":"2016-09-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        //Update config file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            ConfigUtil.saveConfig(initializedConfig, configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        return initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * Returns a {@code UserPrefs} using the file at {@code storage}\u0027s user prefs file path,","lastModifiedDate":"2017-08-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * or a new {@code UserPrefs} with default configuration if errors occur when","lastModifiedDate":"2017-08-16"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     * reading from the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    protected UserPrefs initPrefs(UserPrefsStorage storage) {","lastModifiedDate":"2017-02-25"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d storage.getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        logger.info(\"Using preference file : \" + prefsFilePath);","lastModifiedDate":"2023-05-15"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        UserPrefs initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            Optional\u003cUserPrefs\u003e prefsOptional \u003d storage.readUserPrefs();","lastModifiedDate":"2016-09-25"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            if (!prefsOptional.isPresent()) {","lastModifiedDate":"2023-01-03"},{"lineNumber":152,"author":{"gitId":"-"},"content":"                logger.info(\"Creating new preference file \" + prefsFilePath);","lastModifiedDate":"2023-05-15"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2023-01-03"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d prefsOptional.orElse(new UserPrefs());","lastModifiedDate":"2016-09-24"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        } catch (DataLoadingException e) {","lastModifiedDate":"2023-06-14"},{"lineNumber":156,"author":{"gitId":"-"},"content":"            logger.warning(\"Preference file at \" + prefsFilePath + \" could not be loaded.\"","lastModifiedDate":"2023-06-15"},{"lineNumber":157,"author":{"gitId":"-"},"content":"                + \" Using default preferences.\");","lastModifiedDate":"2023-05-15"},{"lineNumber":158,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        //Update prefs file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":163,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(initializedPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":165,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        return initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        logger.info(\"Starting AddressBook \" + MainApp.VERSION);","lastModifiedDate":"2016-09-29"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        ui.start(primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    public void stop() {","lastModifiedDate":"2016-08-08"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d [ Stopping Address Book ] \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2016-09-29"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":181,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(model.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":183,"author":{"gitId":"-"},"content":"            logger.severe(\"Failed to save preferences \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":186,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"s-peiran":1,"-":185}},{"path":"src/main/java/seedu/address/commons/util/StringUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.StringWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Helper functions for handling strings.","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class StringUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * Returns true if the {@code sentence} contains the {@code word}.","lastModifiedDate":"2016-10-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Ignores case, but a full word match is required.","lastModifiedDate":"2016-10-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * \u003cbr\u003eexamples:\u003cpre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"abc\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"DEF\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"AB\") \u003d\u003d false //not a full word match","lastModifiedDate":"2016-10-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     *       \u003c/pre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":23,"author":{"gitId":"s-peiran"},"content":"     *","lastModifiedDate":"2023-10-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @param sentence cannot be null","lastModifiedDate":"2016-10-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @param word     cannot be null, cannot be empty, must be a single word","lastModifiedDate":"2016-10-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static boolean containsWordIgnoreCase(String sentence, String word) {","lastModifiedDate":"2016-10-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        requireNonNull(sentence);","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        requireNonNull(word);","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        String preppedWord \u003d word.trim();","lastModifiedDate":"2016-10-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        checkArgument(!preppedWord.isEmpty(), \"Word parameter cannot be empty\");","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        checkArgument(preppedWord.split(\"\\\\s+\").length \u003d\u003d 1, \"Word parameter should be a single word\");","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        String preppedSentence \u003d sentence;","lastModifiedDate":"2016-10-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        String[] wordsInPreppedSentence \u003d preppedSentence.split(\"\\\\s+\");","lastModifiedDate":"2016-10-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return Arrays.stream(wordsInPreppedSentence)","lastModifiedDate":"2018-01-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            .anyMatch(preppedWord::equalsIgnoreCase);","lastModifiedDate":"2018-01-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Returns a detailed message of the t, including the stack trace.","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static String getDetails(Throwable t) {","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        requireNonNull(t);","lastModifiedDate":"2017-05-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        StringWriter sw \u003d new StringWriter();","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        t.printStackTrace(new PrintWriter(sw));","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return t.getMessage() + \"\\n\" + sw.toString();","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-22"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Returns true if {@code s} represents a non-zero unsigned integer","lastModifiedDate":"2017-06-02"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * e.g. 1, 2, 3, ..., {@code Integer.MAX_VALUE} \u003cbr\u003e","lastModifiedDate":"2017-06-02"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Will return false for any other non-null string input","lastModifiedDate":"2017-06-02"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * e.g. empty string, \"-1\", \"0\", \"+1\", and \" 2 \" (untrimmed), \"3 0\" (contains whitespace), \"1 a\" (contains letters)","lastModifiedDate":"2017-06-02"},{"lineNumber":57,"author":{"gitId":"s-peiran"},"content":"     *","lastModifiedDate":"2023-10-31"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code s} is null.","lastModifiedDate":"2017-06-02"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static boolean isNonZeroUnsignedInteger(String s) {","lastModifiedDate":"2017-06-02"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        requireNonNull(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-06-02"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            int value \u003d Integer.parseInt(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return value \u003e 0 \u0026\u0026 !s.startsWith(\"+\"); // \"+1\" is successfully parsed by Integer#parseInt(String)","lastModifiedDate":"2017-06-02"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        } catch (NumberFormatException nfe) {","lastModifiedDate":"2017-06-02"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-06-02"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-02"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"s-peiran":2,"-":68}},{"path":"src/main/java/seedu/address/logic/Logic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":11,"author":{"gitId":"jacobcuison"},"content":"import seedu.address.model.contact.Contact;","lastModifiedDate":"2023-10-03"},{"lineNumber":12,"author":{"gitId":"jonyeokj"},"content":"import seedu.address.model.meeting.Meeting;","lastModifiedDate":"2023-10-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * API of the Logic component","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Returns the AddressBook.","lastModifiedDate":"2018-12-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * @see seedu.address.model.Model#getAddressBook()","lastModifiedDate":"2018-12-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":34,"author":{"gitId":"jacobcuison"},"content":"    /** Returns an unmodifiable view of the filtered list of contacts */","lastModifiedDate":"2023-10-03"},{"lineNumber":35,"author":{"gitId":"jacobcuison"},"content":"    ObservableList\u003cContact\u003e getFilteredContactList();","lastModifiedDate":"2023-10-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":37,"author":{"gitId":"jonyeokj"},"content":"    /** Returns an unmodifiable view of the filtered list of meetings */","lastModifiedDate":"2023-10-11"},{"lineNumber":38,"author":{"gitId":"jonyeokj"},"content":"    ObservableList\u003cMeeting\u003e getFilteredMeetingList();","lastModifiedDate":"2023-10-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Set the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"jonyeokj":3,"jacobcuison":3,"-":48}},{"path":"src/main/java/seedu/address/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.AccessDeniedException;","lastModifiedDate":"2023-06-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.AddressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":18,"author":{"gitId":"jacobcuison"},"content":"import seedu.address.model.contact.Contact;","lastModifiedDate":"2023-10-03"},{"lineNumber":19,"author":{"gitId":"jonyeokj"},"content":"import seedu.address.model.meeting.Meeting;","lastModifiedDate":"2023-10-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2016-09-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_FORMAT \u003d \"Could not save data due to the following error: %s\";","lastModifiedDate":"2023-06-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_PERMISSION_ERROR_FORMAT \u003d","lastModifiedDate":"2023-06-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            \"Could not save data to file %s due to insufficient permissions to write to the file or the folder.\";","lastModifiedDate":"2023-06-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2016-09-29"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private final Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private final Storage storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private final AddressBookParser addressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public LogicManager(Model model, Storage storage) {","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2016-09-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        addressBookParser \u003d new AddressBookParser();","lastModifiedDate":"2018-01-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2016-09-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        Command command \u003d addressBookParser.parseCommand(commandText);","lastModifiedDate":"2023-11-02"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2019-01-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        } catch (AccessDeniedException e) {","lastModifiedDate":"2023-06-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            throw new CommandException(String.format(FILE_OPS_PERMISSION_ERROR_FORMAT, e.getMessage()), e);","lastModifiedDate":"2023-06-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-12-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            throw new CommandException(String.format(FILE_OPS_ERROR_FORMAT, ioe.getMessage()), ioe);","lastModifiedDate":"2023-06-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2018-12-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return model.getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":71,"author":{"gitId":"jacobcuison"},"content":"    public ObservableList\u003cContact\u003e getFilteredContactList() {","lastModifiedDate":"2023-10-03"},{"lineNumber":72,"author":{"gitId":"jacobcuison"},"content":"        return model.getFilteredContactList();","lastModifiedDate":"2023-10-03"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-29"},{"lineNumber":75,"author":{"gitId":"jonyeokj"},"content":"    @Override","lastModifiedDate":"2023-10-11"},{"lineNumber":76,"author":{"gitId":"jonyeokj"},"content":"    public ObservableList\u003cMeeting\u003e getFilteredMeetingList() {","lastModifiedDate":"2023-10-11"},{"lineNumber":77,"author":{"gitId":"jonyeokj"},"content":"        return model.getFilteredMeetingList();","lastModifiedDate":"2023-10-11"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return model.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"jonyeokj":4,"jacobcuison":3,"-":87}},{"path":"src/main/java/seedu/address/logic/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2023-07-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"s-peiran"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2023-07-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-07-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-07-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.Prefix;","lastModifiedDate":"2023-07-14"},{"lineNumber":9,"author":{"gitId":"jacobcuison"},"content":"import seedu.address.model.contact.Contact;","lastModifiedDate":"2023-10-03"},{"lineNumber":10,"author":{"gitId":"chiayunrong"},"content":"import seedu.address.model.meeting.Meeting;","lastModifiedDate":"2023-10-02"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"jonyeokj"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command: %1$s\";","lastModifiedDate":"2023-11-01"},{"lineNumber":18,"author":{"gitId":"jacobcuison"},"content":"    public static final String MESSAGE_DUPLICATE_NOTES \u003d \"Error: the note already exists.\";","lastModifiedDate":"2023-11-02"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"jacobcuison"},"content":"    public static final String MESSAGE_INVALID_CONTACT_DISPLAYED_INDEX \u003d \"The contact index provided is invalid\";","lastModifiedDate":"2023-10-03"},{"lineNumber":21,"author":{"gitId":"jonyeokj"},"content":"    public static final String MESSAGE_INVALID_MEETING_DISPLAYED_INDEX \u003d \"The meeting index provided is invalid\";","lastModifiedDate":"2023-10-13"},{"lineNumber":22,"author":{"gitId":"jacobcuison"},"content":"    public static final String MESSAGE_INVALID_NOTEID \u003d \"The noteID provided is invalid\";","lastModifiedDate":"2023-11-02"},{"lineNumber":23,"author":{"gitId":"jacobcuison"},"content":"    public static final String MESSAGE_CONTACTS_LISTED_OVERVIEW \u003d \"%1$d contacts listed!\";","lastModifiedDate":"2023-10-03"},{"lineNumber":24,"author":{"gitId":"jonyeokj"},"content":"    public static final String MESSAGE_MEETINGS_LISTED_OVERVIEW \u003d \"%1$d meetings listed!\";","lastModifiedDate":"2023-10-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_FIELDS \u003d","lastModifiedDate":"2023-07-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            \"Multiple values specified for the following single-valued field(s): \";","lastModifiedDate":"2023-07-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-07-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Returns an error message indicating the duplicate prefixes.","lastModifiedDate":"2023-07-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-07-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static String getErrorMessageForDuplicatePrefixes(Prefix... duplicatePrefixes) {","lastModifiedDate":"2023-07-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assert duplicatePrefixes.length \u003e 0;","lastModifiedDate":"2023-07-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        Set\u003cString\u003e duplicateFields \u003d","lastModifiedDate":"2023-07-14"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                Stream.of(duplicatePrefixes).map(Prefix::toString).collect(Collectors.toSet());","lastModifiedDate":"2023-07-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return MESSAGE_DUPLICATE_FIELDS + String.join(\" \", duplicateFields);","lastModifiedDate":"2023-07-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-07-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-02-23"},{"lineNumber":41,"author":{"gitId":"jacobcuison"},"content":"     * Formats the {@code contact} for display to the user.","lastModifiedDate":"2023-10-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-02-23"},{"lineNumber":43,"author":{"gitId":"jonyeokj"},"content":"    public static String formatContact(Contact contact) {","lastModifiedDate":"2023-10-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2019-02-23"},{"lineNumber":45,"author":{"gitId":"jacobcuison"},"content":"        builder.append(contact.getName())","lastModifiedDate":"2023-10-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                .append(\"; Phone: \")","lastModifiedDate":"2019-02-23"},{"lineNumber":47,"author":{"gitId":"jacobcuison"},"content":"                .append(contact.getPhone())","lastModifiedDate":"2023-10-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                .append(\"; Email: \")","lastModifiedDate":"2019-02-23"},{"lineNumber":49,"author":{"gitId":"jacobcuison"},"content":"                .append(contact.getEmail())","lastModifiedDate":"2023-10-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                .append(\"; Address: \")","lastModifiedDate":"2019-02-23"},{"lineNumber":51,"author":{"gitId":"jacobcuison"},"content":"                .append(contact.getAddress())","lastModifiedDate":"2023-10-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                .append(\"; Tags: \");","lastModifiedDate":"2019-02-23"},{"lineNumber":53,"author":{"gitId":"jacobcuison"},"content":"        contact.getTags().forEach(builder::append);","lastModifiedDate":"2023-10-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":57,"author":{"gitId":"chiayunrong"},"content":"    /**","lastModifiedDate":"2023-10-02"},{"lineNumber":58,"author":{"gitId":"chiayunrong"},"content":"     * Formats the {@code meeting} for display to the user.","lastModifiedDate":"2023-10-02"},{"lineNumber":59,"author":{"gitId":"chiayunrong"},"content":"     */","lastModifiedDate":"2023-10-02"},{"lineNumber":60,"author":{"gitId":"chiayunrong"},"content":"    public static String formatMeeting(Meeting meeting) {","lastModifiedDate":"2023-10-02"},{"lineNumber":61,"author":{"gitId":"chiayunrong"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2023-10-02"},{"lineNumber":62,"author":{"gitId":"chiayunrong"},"content":"        builder.append(meeting.getTitle())","lastModifiedDate":"2023-10-03"},{"lineNumber":63,"author":{"gitId":"chiayunrong"},"content":"                .append(\"; Time: \")","lastModifiedDate":"2023-10-03"},{"lineNumber":64,"author":{"gitId":"chiayunrong"},"content":"                .append(meeting.getTime())","lastModifiedDate":"2023-10-03"},{"lineNumber":65,"author":{"gitId":"jonyeokj"},"content":"                .append(\"; Place: \")","lastModifiedDate":"2023-10-11"},{"lineNumber":66,"author":{"gitId":"jonyeokj"},"content":"                .append(meeting.getPlace())","lastModifiedDate":"2023-10-11"},{"lineNumber":67,"author":{"gitId":"chiayunrong"},"content":"                .append(\"; Description: \")","lastModifiedDate":"2023-10-03"},{"lineNumber":68,"author":{"gitId":"chiayunrong"},"content":"                .append(meeting.getDescription());","lastModifiedDate":"2023-10-03"},{"lineNumber":69,"author":{"gitId":"chiayunrong"},"content":"        return builder.toString();","lastModifiedDate":"2023-10-02"},{"lineNumber":70,"author":{"gitId":"chiayunrong"},"content":"    }","lastModifiedDate":"2023-10-02"},{"lineNumber":71,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":72,"author":{"gitId":"s-peiran"},"content":"    /**","lastModifiedDate":"2023-10-24"},{"lineNumber":73,"author":{"gitId":"s-peiran"},"content":"     * Formats the {@code contacts in a meeting} for display to the user.","lastModifiedDate":"2023-10-24"},{"lineNumber":74,"author":{"gitId":"s-peiran"},"content":"     */","lastModifiedDate":"2023-10-24"},{"lineNumber":75,"author":{"gitId":"s-peiran"},"content":"    public static String formatMeetingContacts(Meeting meeting) {","lastModifiedDate":"2023-10-24"},{"lineNumber":76,"author":{"gitId":"s-peiran"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2023-10-24"},{"lineNumber":77,"author":{"gitId":"s-peiran"},"content":"        ArrayList\u003cContact\u003e contactList \u003d new ArrayList\u003c\u003e(meeting.getContacts());","lastModifiedDate":"2023-10-24"},{"lineNumber":78,"author":{"gitId":"s-peiran"},"content":"        for (Contact c : contactList) {","lastModifiedDate":"2023-10-24"},{"lineNumber":79,"author":{"gitId":"s-peiran"},"content":"            builder.append(c.getName().toString() + \", \");","lastModifiedDate":"2023-10-24"},{"lineNumber":80,"author":{"gitId":"s-peiran"},"content":"        }","lastModifiedDate":"2023-10-24"},{"lineNumber":81,"author":{"gitId":"s-peiran"},"content":"        if (builder.length() \u003e 0) {","lastModifiedDate":"2023-10-24"},{"lineNumber":82,"author":{"gitId":"s-peiran"},"content":"            builder.deleteCharAt(builder.length() - 2);","lastModifiedDate":"2023-10-24"},{"lineNumber":83,"author":{"gitId":"s-peiran"},"content":"        }","lastModifiedDate":"2023-10-24"},{"lineNumber":84,"author":{"gitId":"s-peiran"},"content":"        return \"Contacts: \" + builder.toString();","lastModifiedDate":"2023-10-24"},{"lineNumber":85,"author":{"gitId":"s-peiran"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"jonyeokj":6,"jacobcuison":11,"s-peiran":15,"chiayunrong":14,"-":40}},{"path":"src/main/java/seedu/address/logic/commands/AddContactCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"jacobcuison"},"content":"import seedu.address.model.contact.Contact;","lastModifiedDate":"2023-10-03"},{"lineNumber":15,"author":{"gitId":"jonyeokj"},"content":"import seedu.address.ui.AppState;","lastModifiedDate":"2023-11-02"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"jacobcuison"},"content":" * Adds a contact to the address book.","lastModifiedDate":"2023-10-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"jacobcuison"},"content":"public class AddContactCommand extends Command {","lastModifiedDate":"2023-10-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"chiayunrong"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2023-10-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"jacobcuison"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a contact to the address book. \"","lastModifiedDate":"2023-10-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            + \"Parameters: \"","lastModifiedDate":"2017-06-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \" NAME \"","lastModifiedDate":"2017-06-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \" PHONE \"","lastModifiedDate":"2017-05-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \" EMAIL \"","lastModifiedDate":"2017-05-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \" ADDRESS \"","lastModifiedDate":"2017-05-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \" TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \" John Doe \"","lastModifiedDate":"2017-06-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \" 98765432 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \" johnd@example.com \"","lastModifiedDate":"2017-05-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \" 311, Clementi Ave 2, #02-25 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            + PREFIX_TAG + \" friends \"","lastModifiedDate":"2017-05-09"},{"lineNumber":37,"author":{"gitId":"jacobcuison"},"content":"            + PREFIX_TAG + \" owesMoney\";","lastModifiedDate":"2023-11-02"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"jacobcuison"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New contact added: %1$s\";","lastModifiedDate":"2023-10-03"},{"lineNumber":40,"author":{"gitId":"jacobcuison"},"content":"    public static final String MESSAGE_DUPLICATE_CONTACT \u003d \"This contact already exists in the address book\";","lastModifiedDate":"2023-10-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"jacobcuison"},"content":"    private final Contact toAdd;","lastModifiedDate":"2023-10-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"jacobcuison"},"content":"     * Creates an AddCommand to add the specified {@code Contact}","lastModifiedDate":"2023-10-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"jacobcuison"},"content":"    public AddContactCommand(Contact contact) {","lastModifiedDate":"2023-10-03"},{"lineNumber":48,"author":{"gitId":"jacobcuison"},"content":"        requireNonNull(contact);","lastModifiedDate":"2023-10-03"},{"lineNumber":49,"author":{"gitId":"jacobcuison"},"content":"        toAdd \u003d contact;","lastModifiedDate":"2023-10-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":56,"author":{"gitId":"jacobcuison"},"content":"        if (model.hasContact(toAdd)) {","lastModifiedDate":"2023-10-03"},{"lineNumber":57,"author":{"gitId":"jacobcuison"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_CONTACT);","lastModifiedDate":"2023-10-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":60,"author":{"gitId":"jacobcuison"},"content":"        model.addContact(toAdd);","lastModifiedDate":"2023-10-03"},{"lineNumber":61,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":62,"author":{"gitId":"jonyeokj"},"content":"        AppState appState \u003d AppState.getInstance();","lastModifiedDate":"2023-11-02"},{"lineNumber":63,"author":{"gitId":"jonyeokj"},"content":"        appState.setContact(toAdd);","lastModifiedDate":"2023-11-02"},{"lineNumber":64,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":65,"author":{"gitId":"jonyeokj"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, Messages.formatContact(toAdd)));","lastModifiedDate":"2023-10-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":75,"author":{"gitId":"jacobcuison"},"content":"        if (!(other instanceof AddContactCommand)) {","lastModifiedDate":"2023-10-03"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":79,"author":{"gitId":"jacobcuison"},"content":"        AddContactCommand otherAddCommand \u003d (AddContactCommand) other;","lastModifiedDate":"2023-10-03"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return toAdd.equals(otherAddCommand.toAdd);","lastModifiedDate":"2023-07-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"                .add(\"toAdd\", toAdd)","lastModifiedDate":"2019-02-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"jonyeokj":6,"jacobcuison":17,"chiayunrong":1,"-":65}},{"path":"src/main/java/seedu/address/logic/commands/AddContactToMeetingCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"s-peiran"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-24"},{"lineNumber":2,"author":{"gitId":"s-peiran"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":3,"author":{"gitId":"s-peiran"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-10-24"},{"lineNumber":4,"author":{"gitId":"s-peiran"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-10-24"},{"lineNumber":5,"author":{"gitId":"s-peiran"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TITLE;","lastModifiedDate":"2023-10-24"},{"lineNumber":6,"author":{"gitId":"s-peiran"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":7,"author":{"gitId":"s-peiran"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-24"},{"lineNumber":8,"author":{"gitId":"s-peiran"},"content":"import java.util.List;","lastModifiedDate":"2023-10-24"},{"lineNumber":9,"author":{"gitId":"s-peiran"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":10,"author":{"gitId":"s-peiran"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-24"},{"lineNumber":11,"author":{"gitId":"s-peiran"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-24"},{"lineNumber":12,"author":{"gitId":"s-peiran"},"content":"import seedu.address.model.contact.Contact;","lastModifiedDate":"2023-10-24"},{"lineNumber":13,"author":{"gitId":"s-peiran"},"content":"import seedu.address.model.meeting.Meeting;","lastModifiedDate":"2023-10-24"},{"lineNumber":14,"author":{"gitId":"jonyeokj"},"content":"import seedu.address.ui.AppState;","lastModifiedDate":"2023-11-02"},{"lineNumber":15,"author":{"gitId":"s-peiran"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":16,"author":{"gitId":"s-peiran"},"content":"/**","lastModifiedDate":"2023-10-24"},{"lineNumber":17,"author":{"gitId":"s-peiran"},"content":" * Adds a contact to a meeting.","lastModifiedDate":"2023-10-24"},{"lineNumber":18,"author":{"gitId":"s-peiran"},"content":" */","lastModifiedDate":"2023-10-24"},{"lineNumber":19,"author":{"gitId":"s-peiran"},"content":"public class AddContactToMeetingCommand extends Command {","lastModifiedDate":"2023-10-24"},{"lineNumber":20,"author":{"gitId":"chiayunrong"},"content":"    public static final String COMMAND_WORD \u003d \"addcontact\";","lastModifiedDate":"2023-10-26"},{"lineNumber":21,"author":{"gitId":"s-peiran"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":22,"author":{"gitId":"s-peiran"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2023-10-24"},{"lineNumber":23,"author":{"gitId":"s-peiran"},"content":"            + \": Adds the participants to the meeting identified \"","lastModifiedDate":"2023-10-24"},{"lineNumber":24,"author":{"gitId":"s-peiran"},"content":"            + \"by the name of the contact. \"","lastModifiedDate":"2023-10-24"},{"lineNumber":25,"author":{"gitId":"s-peiran"},"content":"            + \"Parameters: \" + PREFIX_NAME","lastModifiedDate":"2023-10-24"},{"lineNumber":26,"author":{"gitId":"s-peiran"},"content":"            + \" [CONTACT NAME] \"","lastModifiedDate":"2023-10-24"},{"lineNumber":27,"author":{"gitId":"s-peiran"},"content":"            + PREFIX_TITLE + \" [MEETING NAME]\\n\"","lastModifiedDate":"2023-10-24"},{"lineNumber":28,"author":{"gitId":"s-peiran"},"content":"            + \"Example: \" + COMMAND_WORD + \" \" + PREFIX_NAME","lastModifiedDate":"2023-10-27"},{"lineNumber":29,"author":{"gitId":"s-peiran"},"content":"            + \" Sarah Woo \" + PREFIX_TITLE + \" Project Discussion\";","lastModifiedDate":"2023-10-24"},{"lineNumber":30,"author":{"gitId":"s-peiran"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":31,"author":{"gitId":"s-peiran"},"content":"    public static final String MESSAGE_ADD_CONTACT_SUCCESS \u003d \"Added contact \u0027%s\u0027 to Meeting \u0027%s\u0027\";","lastModifiedDate":"2023-10-25"},{"lineNumber":32,"author":{"gitId":"s-peiran"},"content":"    public static final String MESSAGE_CONTACT_NOT_FOUND \u003d \"The person specified is not created\";","lastModifiedDate":"2023-10-24"},{"lineNumber":33,"author":{"gitId":"s-peiran"},"content":"    public static final String MESSAGE_MEETING_NOT_FOUND \u003d \"The meeting specified is not created\";","lastModifiedDate":"2023-10-24"},{"lineNumber":34,"author":{"gitId":"s-peiran"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":35,"author":{"gitId":"s-peiran"},"content":"    private final String meetingTitle;","lastModifiedDate":"2023-10-24"},{"lineNumber":36,"author":{"gitId":"s-peiran"},"content":"    private final String contactName;","lastModifiedDate":"2023-10-24"},{"lineNumber":37,"author":{"gitId":"s-peiran"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":38,"author":{"gitId":"s-peiran"},"content":"    /**","lastModifiedDate":"2023-10-24"},{"lineNumber":39,"author":{"gitId":"s-peiran"},"content":"     * @param meetingTitle String of the meeting which the contact is added to","lastModifiedDate":"2023-10-24"},{"lineNumber":40,"author":{"gitId":"s-peiran"},"content":"     * @param contactName  String of the contact to be added in the meeting","lastModifiedDate":"2023-10-24"},{"lineNumber":41,"author":{"gitId":"s-peiran"},"content":"     */","lastModifiedDate":"2023-10-24"},{"lineNumber":42,"author":{"gitId":"s-peiran"},"content":"    public AddContactToMeetingCommand(String meetingTitle, String contactName) {","lastModifiedDate":"2023-10-24"},{"lineNumber":43,"author":{"gitId":"s-peiran"},"content":"        requireAllNonNull(meetingTitle, contactName);","lastModifiedDate":"2023-10-24"},{"lineNumber":44,"author":{"gitId":"s-peiran"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":45,"author":{"gitId":"s-peiran"},"content":"        this.meetingTitle \u003d meetingTitle;","lastModifiedDate":"2023-10-24"},{"lineNumber":46,"author":{"gitId":"s-peiran"},"content":"        this.contactName \u003d contactName;","lastModifiedDate":"2023-10-24"},{"lineNumber":47,"author":{"gitId":"s-peiran"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":48,"author":{"gitId":"s-peiran"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":49,"author":{"gitId":"s-peiran"},"content":"    @Override","lastModifiedDate":"2023-10-24"},{"lineNumber":50,"author":{"gitId":"s-peiran"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-24"},{"lineNumber":51,"author":{"gitId":"s-peiran"},"content":"        List\u003cMeeting\u003e meetingList \u003d model.getFilteredMeetingList();","lastModifiedDate":"2023-10-24"},{"lineNumber":52,"author":{"gitId":"s-peiran"},"content":"        List\u003cContact\u003e contactList \u003d model.getFilteredContactList();","lastModifiedDate":"2023-10-24"},{"lineNumber":53,"author":{"gitId":"s-peiran"},"content":"        Contact contact \u003d null;","lastModifiedDate":"2023-10-24"},{"lineNumber":54,"author":{"gitId":"s-peiran"},"content":"        Meeting meetingToEdit \u003d null;","lastModifiedDate":"2023-10-24"},{"lineNumber":55,"author":{"gitId":"s-peiran"},"content":"        boolean contactFound \u003d false;","lastModifiedDate":"2023-10-24"},{"lineNumber":56,"author":{"gitId":"s-peiran"},"content":"        for (Contact c : contactList) {","lastModifiedDate":"2023-10-24"},{"lineNumber":57,"author":{"gitId":"s-peiran"},"content":"            if (c.getNameString().equals(contactName)) {","lastModifiedDate":"2023-10-25"},{"lineNumber":58,"author":{"gitId":"s-peiran"},"content":"                contact \u003d c;","lastModifiedDate":"2023-10-24"},{"lineNumber":59,"author":{"gitId":"s-peiran"},"content":"                contactFound \u003d true;","lastModifiedDate":"2023-10-24"},{"lineNumber":60,"author":{"gitId":"s-peiran"},"content":"                break;","lastModifiedDate":"2023-10-24"},{"lineNumber":61,"author":{"gitId":"s-peiran"},"content":"            }","lastModifiedDate":"2023-10-24"},{"lineNumber":62,"author":{"gitId":"s-peiran"},"content":"        }","lastModifiedDate":"2023-10-24"},{"lineNumber":63,"author":{"gitId":"s-peiran"},"content":"        if (!contactFound) {","lastModifiedDate":"2023-10-24"},{"lineNumber":64,"author":{"gitId":"s-peiran"},"content":"            throw new CommandException(MESSAGE_CONTACT_NOT_FOUND);","lastModifiedDate":"2023-10-24"},{"lineNumber":65,"author":{"gitId":"s-peiran"},"content":"        }","lastModifiedDate":"2023-10-24"},{"lineNumber":66,"author":{"gitId":"s-peiran"},"content":"        boolean meetingFound \u003d false;","lastModifiedDate":"2023-10-24"},{"lineNumber":67,"author":{"gitId":"s-peiran"},"content":"        for (Meeting m : meetingList) {","lastModifiedDate":"2023-10-24"},{"lineNumber":68,"author":{"gitId":"s-peiran"},"content":"            if (m.getTitleString().equals(meetingTitle)) {","lastModifiedDate":"2023-10-25"},{"lineNumber":69,"author":{"gitId":"s-peiran"},"content":"                meetingToEdit \u003d m;","lastModifiedDate":"2023-10-24"},{"lineNumber":70,"author":{"gitId":"s-peiran"},"content":"                meetingFound \u003d true;","lastModifiedDate":"2023-10-24"},{"lineNumber":71,"author":{"gitId":"s-peiran"},"content":"                break;","lastModifiedDate":"2023-10-24"},{"lineNumber":72,"author":{"gitId":"s-peiran"},"content":"            }","lastModifiedDate":"2023-10-24"},{"lineNumber":73,"author":{"gitId":"s-peiran"},"content":"        }","lastModifiedDate":"2023-10-24"},{"lineNumber":74,"author":{"gitId":"s-peiran"},"content":"        if (!meetingFound) {","lastModifiedDate":"2023-10-24"},{"lineNumber":75,"author":{"gitId":"s-peiran"},"content":"            throw new CommandException(MESSAGE_MEETING_NOT_FOUND);","lastModifiedDate":"2023-10-24"},{"lineNumber":76,"author":{"gitId":"s-peiran"},"content":"        }","lastModifiedDate":"2023-10-24"},{"lineNumber":77,"author":{"gitId":"s-peiran"},"content":"        ArrayList\u003cContact\u003e listOfContacts \u003d new ArrayList\u003c\u003e(meetingToEdit.getContacts());","lastModifiedDate":"2023-10-24"},{"lineNumber":78,"author":{"gitId":"s-peiran"},"content":"        listOfContacts.add(contact);","lastModifiedDate":"2023-10-24"},{"lineNumber":79,"author":{"gitId":"s-peiran"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":80,"author":{"gitId":"s-peiran"},"content":"        Meeting editedMeeting \u003d new Meeting(","lastModifiedDate":"2023-10-24"},{"lineNumber":81,"author":{"gitId":"s-peiran"},"content":"                meetingToEdit.getTitle(), meetingToEdit.getTime(), meetingToEdit.getPlace(),","lastModifiedDate":"2023-10-24"},{"lineNumber":82,"author":{"gitId":"s-peiran"},"content":"                meetingToEdit.getDescription(), meetingToEdit.getNotes(), listOfContacts);","lastModifiedDate":"2023-10-24"},{"lineNumber":83,"author":{"gitId":"s-peiran"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":84,"author":{"gitId":"s-peiran"},"content":"        model.setMeeting(meetingToEdit, editedMeeting);","lastModifiedDate":"2023-10-24"},{"lineNumber":85,"author":{"gitId":"s-peiran"},"content":"        model.updateFilteredMeetingList(Model.PREDICATE_SHOW_ALL_MEETINGS);","lastModifiedDate":"2023-10-24"},{"lineNumber":86,"author":{"gitId":"s-peiran"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":87,"author":{"gitId":"jonyeokj"},"content":"        AppState appState \u003d AppState.getInstance();","lastModifiedDate":"2023-11-02"},{"lineNumber":88,"author":{"gitId":"jonyeokj"},"content":"        appState.setMeeting(editedMeeting);","lastModifiedDate":"2023-11-02"},{"lineNumber":89,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":90,"author":{"gitId":"s-peiran"},"content":"        return new CommandResult(String.format(MESSAGE_ADD_CONTACT_SUCCESS,","lastModifiedDate":"2023-10-24"},{"lineNumber":91,"author":{"gitId":"jonyeokj"},"content":"                contactName, meetingTitle), false, false);","lastModifiedDate":"2023-11-02"},{"lineNumber":92,"author":{"gitId":"s-peiran"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":93,"author":{"gitId":"s-peiran"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":94,"author":{"gitId":"s-peiran"},"content":"    public String getContactName() {","lastModifiedDate":"2023-10-24"},{"lineNumber":95,"author":{"gitId":"s-peiran"},"content":"        return contactName;","lastModifiedDate":"2023-10-24"},{"lineNumber":96,"author":{"gitId":"s-peiran"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":97,"author":{"gitId":"s-peiran"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":98,"author":{"gitId":"s-peiran"},"content":"    public String getMeetingTitle() {","lastModifiedDate":"2023-10-24"},{"lineNumber":99,"author":{"gitId":"s-peiran"},"content":"        return meetingTitle;","lastModifiedDate":"2023-10-24"},{"lineNumber":100,"author":{"gitId":"s-peiran"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":101,"author":{"gitId":"s-peiran"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":102,"author":{"gitId":"s-peiran"},"content":"    @Override","lastModifiedDate":"2023-10-24"},{"lineNumber":103,"author":{"gitId":"s-peiran"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-24"},{"lineNumber":104,"author":{"gitId":"s-peiran"},"content":"        // short circuit if same object","lastModifiedDate":"2023-10-24"},{"lineNumber":105,"author":{"gitId":"s-peiran"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-24"},{"lineNumber":106,"author":{"gitId":"s-peiran"},"content":"            return true;","lastModifiedDate":"2023-10-24"},{"lineNumber":107,"author":{"gitId":"s-peiran"},"content":"        }","lastModifiedDate":"2023-10-24"},{"lineNumber":108,"author":{"gitId":"s-peiran"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":109,"author":{"gitId":"s-peiran"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-24"},{"lineNumber":110,"author":{"gitId":"s-peiran"},"content":"        if (!(other instanceof AddContactToMeetingCommand)) {","lastModifiedDate":"2023-10-24"},{"lineNumber":111,"author":{"gitId":"s-peiran"},"content":"            return false;","lastModifiedDate":"2023-10-24"},{"lineNumber":112,"author":{"gitId":"s-peiran"},"content":"        }","lastModifiedDate":"2023-10-24"},{"lineNumber":113,"author":{"gitId":"s-peiran"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":114,"author":{"gitId":"s-peiran"},"content":"        // state check","lastModifiedDate":"2023-10-24"},{"lineNumber":115,"author":{"gitId":"s-peiran"},"content":"        AddContactToMeetingCommand e \u003d (AddContactToMeetingCommand) other;","lastModifiedDate":"2023-10-24"},{"lineNumber":116,"author":{"gitId":"s-peiran"},"content":"        return this.meetingTitle.equals(e.getMeetingTitle()) \u0026\u0026 this.contactName.equals(e.getContactName());","lastModifiedDate":"2023-10-24"},{"lineNumber":117,"author":{"gitId":"s-peiran"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":118,"author":{"gitId":"s-peiran"},"content":"}","lastModifiedDate":"2023-10-24"}],"authorContributionMap":{"jonyeokj":5,"s-peiran":112,"chiayunrong":1}},{"path":"src/main/java/seedu/address/logic/commands/AddMeetingCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chiayunrong"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-02"},{"lineNumber":2,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":3,"author":{"gitId":"chiayunrong"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-02"},{"lineNumber":4,"author":{"gitId":"chiayunrong"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DESCRIPTION;","lastModifiedDate":"2023-10-26"},{"lineNumber":5,"author":{"gitId":"chiayunrong"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NOTE_MEETING;","lastModifiedDate":"2023-10-26"},{"lineNumber":6,"author":{"gitId":"chiayunrong"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PLACE;","lastModifiedDate":"2023-10-26"},{"lineNumber":7,"author":{"gitId":"chiayunrong"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TIME;","lastModifiedDate":"2023-10-26"},{"lineNumber":8,"author":{"gitId":"chiayunrong"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TITLE;","lastModifiedDate":"2023-10-26"},{"lineNumber":9,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":10,"author":{"gitId":"chiayunrong"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-02"},{"lineNumber":11,"author":{"gitId":"chiayunrong"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-02"},{"lineNumber":12,"author":{"gitId":"chiayunrong"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-02"},{"lineNumber":13,"author":{"gitId":"chiayunrong"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-02"},{"lineNumber":14,"author":{"gitId":"chiayunrong"},"content":"import seedu.address.model.meeting.Meeting;","lastModifiedDate":"2023-10-02"},{"lineNumber":15,"author":{"gitId":"jonyeokj"},"content":"import seedu.address.ui.AppState;","lastModifiedDate":"2023-11-02"},{"lineNumber":16,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":17,"author":{"gitId":"chiayunrong"},"content":"/**","lastModifiedDate":"2023-10-02"},{"lineNumber":18,"author":{"gitId":"chiayunrong"},"content":" * Add a meeting to Notenote.","lastModifiedDate":"2023-10-02"},{"lineNumber":19,"author":{"gitId":"chiayunrong"},"content":" */","lastModifiedDate":"2023-10-02"},{"lineNumber":20,"author":{"gitId":"chiayunrong"},"content":"public class AddMeetingCommand extends Command {","lastModifiedDate":"2023-10-02"},{"lineNumber":21,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":22,"author":{"gitId":"chiayunrong"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2023-10-26"},{"lineNumber":23,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":24,"author":{"gitId":"chiayunrong"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a meeting to the address book. \"","lastModifiedDate":"2023-10-26"},{"lineNumber":25,"author":{"gitId":"chiayunrong"},"content":"            + \"Parameters: \"","lastModifiedDate":"2023-10-26"},{"lineNumber":26,"author":{"gitId":"chiayunrong"},"content":"            + PREFIX_TITLE + \" TITLE \"","lastModifiedDate":"2023-10-26"},{"lineNumber":27,"author":{"gitId":"chiayunrong"},"content":"            + PREFIX_TIME + \" TIME \"","lastModifiedDate":"2023-10-26"},{"lineNumber":28,"author":{"gitId":"chiayunrong"},"content":"            + PREFIX_PLACE + \" PLACE \"","lastModifiedDate":"2023-10-26"},{"lineNumber":29,"author":{"gitId":"chiayunrong"},"content":"            + PREFIX_DESCRIPTION + \" DESCRIPTION \"","lastModifiedDate":"2023-10-26"},{"lineNumber":30,"author":{"gitId":"s-peiran"},"content":"            + PREFIX_NOTE_MEETING + \" NOTE\\n\"","lastModifiedDate":"2023-10-27"},{"lineNumber":31,"author":{"gitId":"chiayunrong"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2023-10-26"},{"lineNumber":32,"author":{"gitId":"chiayunrong"},"content":"            + PREFIX_TITLE + \" Project Discussion \"","lastModifiedDate":"2023-10-26"},{"lineNumber":33,"author":{"gitId":"chiayunrong"},"content":"            + PREFIX_TIME + \" 03/10/2023 15:00 \"","lastModifiedDate":"2023-10-26"},{"lineNumber":34,"author":{"gitId":"chiayunrong"},"content":"            + PREFIX_PLACE + \" Terrace \"","lastModifiedDate":"2023-10-26"},{"lineNumber":35,"author":{"gitId":"jacobcuison"},"content":"            + PREFIX_DESCRIPTION + \" Discussing milestones\";","lastModifiedDate":"2023-11-02"},{"lineNumber":36,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":37,"author":{"gitId":"chiayunrong"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New meeting added: %1$s\";","lastModifiedDate":"2023-10-02"},{"lineNumber":38,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":39,"author":{"gitId":"chiayunrong"},"content":"    private final Meeting toAdd;","lastModifiedDate":"2023-10-02"},{"lineNumber":40,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":41,"author":{"gitId":"chiayunrong"},"content":"    /**","lastModifiedDate":"2023-10-02"},{"lineNumber":42,"author":{"gitId":"chiayunrong"},"content":"     * Creates an AddMeetingCommand to add the specified {@code Meeting}","lastModifiedDate":"2023-10-02"},{"lineNumber":43,"author":{"gitId":"chiayunrong"},"content":"     */","lastModifiedDate":"2023-10-02"},{"lineNumber":44,"author":{"gitId":"chiayunrong"},"content":"    public AddMeetingCommand(Meeting meeting) {","lastModifiedDate":"2023-10-02"},{"lineNumber":45,"author":{"gitId":"chiayunrong"},"content":"        requireNonNull(meeting);","lastModifiedDate":"2023-10-02"},{"lineNumber":46,"author":{"gitId":"chiayunrong"},"content":"        toAdd \u003d meeting;","lastModifiedDate":"2023-10-02"},{"lineNumber":47,"author":{"gitId":"chiayunrong"},"content":"    }","lastModifiedDate":"2023-10-02"},{"lineNumber":48,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":49,"author":{"gitId":"chiayunrong"},"content":"    @Override","lastModifiedDate":"2023-10-02"},{"lineNumber":50,"author":{"gitId":"chiayunrong"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-02"},{"lineNumber":51,"author":{"gitId":"chiayunrong"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-02"},{"lineNumber":52,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":53,"author":{"gitId":"chiayunrong"},"content":"        model.addMeeting(toAdd);","lastModifiedDate":"2023-10-02"},{"lineNumber":54,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":55,"author":{"gitId":"jonyeokj"},"content":"        AppState appState \u003d AppState.getInstance();","lastModifiedDate":"2023-11-02"},{"lineNumber":56,"author":{"gitId":"jonyeokj"},"content":"        appState.setMeeting(toAdd);","lastModifiedDate":"2023-11-02"},{"lineNumber":57,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":58,"author":{"gitId":"jonyeokj"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, Messages.formatMeeting(toAdd)));","lastModifiedDate":"2023-10-18"},{"lineNumber":59,"author":{"gitId":"chiayunrong"},"content":"    }","lastModifiedDate":"2023-10-02"},{"lineNumber":60,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":61,"author":{"gitId":"chiayunrong"},"content":"    @Override","lastModifiedDate":"2023-10-02"},{"lineNumber":62,"author":{"gitId":"chiayunrong"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-02"},{"lineNumber":63,"author":{"gitId":"chiayunrong"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-02"},{"lineNumber":64,"author":{"gitId":"chiayunrong"},"content":"            return true;","lastModifiedDate":"2023-10-02"},{"lineNumber":65,"author":{"gitId":"chiayunrong"},"content":"        }","lastModifiedDate":"2023-10-02"},{"lineNumber":66,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":67,"author":{"gitId":"chiayunrong"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-02"},{"lineNumber":68,"author":{"gitId":"chiayunrong"},"content":"        if (!(other instanceof AddMeetingCommand)) {","lastModifiedDate":"2023-10-02"},{"lineNumber":69,"author":{"gitId":"chiayunrong"},"content":"            return false;","lastModifiedDate":"2023-10-02"},{"lineNumber":70,"author":{"gitId":"chiayunrong"},"content":"        }","lastModifiedDate":"2023-10-02"},{"lineNumber":71,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":72,"author":{"gitId":"chiayunrong"},"content":"        AddMeetingCommand otherAddCommand \u003d (AddMeetingCommand) other;","lastModifiedDate":"2023-10-02"},{"lineNumber":73,"author":{"gitId":"chiayunrong"},"content":"        boolean titleEquals \u003d toAdd.getTitle().equals(otherAddCommand.toAdd.getTitle());","lastModifiedDate":"2023-10-03"},{"lineNumber":74,"author":{"gitId":"chiayunrong"},"content":"        boolean timeEquals \u003d toAdd.getTime().equals(otherAddCommand.toAdd.getTime());","lastModifiedDate":"2023-10-03"},{"lineNumber":75,"author":{"gitId":"jonyeokj"},"content":"        boolean placeEquals \u003d toAdd.getPlace().equals(otherAddCommand.toAdd.getPlace());","lastModifiedDate":"2023-10-11"},{"lineNumber":76,"author":{"gitId":"chiayunrong"},"content":"        boolean descriptionEquals \u003d toAdd.getDescription().equals(otherAddCommand.toAdd.getDescription());","lastModifiedDate":"2023-10-03"},{"lineNumber":77,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":78,"author":{"gitId":"jonyeokj"},"content":"        return titleEquals \u0026\u0026 timeEquals \u0026\u0026 placeEquals \u0026\u0026 descriptionEquals;","lastModifiedDate":"2023-10-11"},{"lineNumber":79,"author":{"gitId":"chiayunrong"},"content":"    }","lastModifiedDate":"2023-10-02"},{"lineNumber":80,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":81,"author":{"gitId":"chiayunrong"},"content":"    @Override","lastModifiedDate":"2023-10-02"},{"lineNumber":82,"author":{"gitId":"chiayunrong"},"content":"    public String toString() {","lastModifiedDate":"2023-10-02"},{"lineNumber":83,"author":{"gitId":"chiayunrong"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-10-02"},{"lineNumber":84,"author":{"gitId":"chiayunrong"},"content":"                .add(\"toAdd\", toAdd)","lastModifiedDate":"2023-10-02"},{"lineNumber":85,"author":{"gitId":"chiayunrong"},"content":"                .toString();","lastModifiedDate":"2023-10-02"},{"lineNumber":86,"author":{"gitId":"chiayunrong"},"content":"    }","lastModifiedDate":"2023-10-02"},{"lineNumber":87,"author":{"gitId":"chiayunrong"},"content":"}","lastModifiedDate":"2023-10-02"}],"authorContributionMap":{"jonyeokj":8,"jacobcuison":1,"s-peiran":1,"chiayunrong":77}},{"path":"src/main/java/seedu/address/logic/commands/AddMeetingNoteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jacobcuison"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-18"},{"lineNumber":2,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":3,"author":{"gitId":"jacobcuison"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-10-18"},{"lineNumber":4,"author":{"gitId":"jacobcuison"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_INDEX;","lastModifiedDate":"2023-10-18"},{"lineNumber":5,"author":{"gitId":"jacobcuison"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NOTE_MEETING;","lastModifiedDate":"2023-10-18"},{"lineNumber":6,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":7,"author":{"gitId":"jacobcuison"},"content":"import java.util.LinkedHashSet;","lastModifiedDate":"2023-11-02"},{"lineNumber":8,"author":{"gitId":"jacobcuison"},"content":"import java.util.List;","lastModifiedDate":"2023-10-18"},{"lineNumber":9,"author":{"gitId":"jacobcuison"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-18"},{"lineNumber":10,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":11,"author":{"gitId":"jacobcuison"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-18"},{"lineNumber":12,"author":{"gitId":"jacobcuison"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-18"},{"lineNumber":13,"author":{"gitId":"jacobcuison"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-18"},{"lineNumber":14,"author":{"gitId":"jacobcuison"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-18"},{"lineNumber":15,"author":{"gitId":"jacobcuison"},"content":"import seedu.address.model.meeting.Meeting;","lastModifiedDate":"2023-10-18"},{"lineNumber":16,"author":{"gitId":"jacobcuison"},"content":"import seedu.address.model.note.Note;","lastModifiedDate":"2023-10-18"},{"lineNumber":17,"author":{"gitId":"jonyeokj"},"content":"import seedu.address.ui.AppState;","lastModifiedDate":"2023-11-02"},{"lineNumber":18,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":19,"author":{"gitId":"jacobcuison"},"content":"/**","lastModifiedDate":"2023-10-18"},{"lineNumber":20,"author":{"gitId":"jacobcuison"},"content":" * Changes the note of an existing meeting in the address book.","lastModifiedDate":"2023-10-18"},{"lineNumber":21,"author":{"gitId":"jacobcuison"},"content":" */","lastModifiedDate":"2023-10-18"},{"lineNumber":22,"author":{"gitId":"jacobcuison"},"content":"public class AddMeetingNoteCommand extends Command {","lastModifiedDate":"2023-10-18"},{"lineNumber":23,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":24,"author":{"gitId":"chiayunrong"},"content":"    public static final String COMMAND_WORD \u003d \"add note\";","lastModifiedDate":"2023-10-26"},{"lineNumber":25,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":26,"author":{"gitId":"jacobcuison"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2023-10-18"},{"lineNumber":27,"author":{"gitId":"jacobcuison"},"content":"            + \": Adds note to the meeting identified \"","lastModifiedDate":"2023-11-02"},{"lineNumber":28,"author":{"gitId":"jacobcuison"},"content":"            + \"by the index number used in the last meeting listing. \"","lastModifiedDate":"2023-10-18"},{"lineNumber":29,"author":{"gitId":"jacobcuison"},"content":"            + \"Parameters: \" + PREFIX_INDEX + \" (must be a positive integer) \"","lastModifiedDate":"2023-10-18"},{"lineNumber":30,"author":{"gitId":"jacobcuison"},"content":"            + PREFIX_NOTE_MEETING + \" [NOTE]\\n\"","lastModifiedDate":"2023-10-18"},{"lineNumber":31,"author":{"gitId":"s-peiran"},"content":"            + \"Example: \" + COMMAND_WORD + \" \" + PREFIX_INDEX + \" 1 \"","lastModifiedDate":"2023-10-27"},{"lineNumber":32,"author":{"gitId":"jacobcuison"},"content":"            + PREFIX_NOTE_MEETING + \" Likes to swim.\";","lastModifiedDate":"2023-10-18"},{"lineNumber":33,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":34,"author":{"gitId":"jacobcuison"},"content":"    public static final String MESSAGE_ADD_NOTE_SUCCESS \u003d \"Added note to Meeting: %1$s\";","lastModifiedDate":"2023-10-18"},{"lineNumber":35,"author":{"gitId":"jacobcuison"},"content":"    public static final String MESSAGE_DELETE_NOTE_SUCCESS \u003d \"Removed note from Meeting: %1$s\";","lastModifiedDate":"2023-10-18"},{"lineNumber":36,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":37,"author":{"gitId":"jacobcuison"},"content":"    private final Index index;","lastModifiedDate":"2023-10-18"},{"lineNumber":38,"author":{"gitId":"jacobcuison"},"content":"    private final Note note;","lastModifiedDate":"2023-10-18"},{"lineNumber":39,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":40,"author":{"gitId":"jacobcuison"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":41,"author":{"gitId":"jacobcuison"},"content":"     * @param index of the person in the filtered person list to edit the note","lastModifiedDate":"2023-10-18"},{"lineNumber":42,"author":{"gitId":"jacobcuison"},"content":"     * @param note  of the person to be updated to","lastModifiedDate":"2023-10-18"},{"lineNumber":43,"author":{"gitId":"jacobcuison"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":44,"author":{"gitId":"jacobcuison"},"content":"    public AddMeetingNoteCommand(Index index, Note note) {","lastModifiedDate":"2023-10-18"},{"lineNumber":45,"author":{"gitId":"jacobcuison"},"content":"        requireAllNonNull(index, note);","lastModifiedDate":"2023-10-18"},{"lineNumber":46,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":47,"author":{"gitId":"jacobcuison"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-10-18"},{"lineNumber":48,"author":{"gitId":"jacobcuison"},"content":"        this.note \u003d note;","lastModifiedDate":"2023-10-18"},{"lineNumber":49,"author":{"gitId":"jacobcuison"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":50,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":51,"author":{"gitId":"jacobcuison"},"content":"    @Override","lastModifiedDate":"2023-10-18"},{"lineNumber":52,"author":{"gitId":"jacobcuison"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-18"},{"lineNumber":53,"author":{"gitId":"jacobcuison"},"content":"        List\u003cMeeting\u003e lastShownList \u003d model.getFilteredMeetingList();","lastModifiedDate":"2023-10-18"},{"lineNumber":54,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":55,"author":{"gitId":"jacobcuison"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-10-18"},{"lineNumber":56,"author":{"gitId":"jacobcuison"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_MEETING_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-18"},{"lineNumber":57,"author":{"gitId":"jacobcuison"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":58,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":59,"author":{"gitId":"jacobcuison"},"content":"        Meeting meetingToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2023-10-18"},{"lineNumber":60,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":61,"author":{"gitId":"jacobcuison"},"content":"        Set\u003cNote\u003e mutableNotesList \u003d new LinkedHashSet\u003c\u003e(meetingToEdit.getNotes());","lastModifiedDate":"2023-11-02"},{"lineNumber":62,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":63,"author":{"gitId":"jacobcuison"},"content":"        if (mutableNotesList.contains(note)) {","lastModifiedDate":"2023-11-02"},{"lineNumber":64,"author":{"gitId":"jacobcuison"},"content":"            throw new CommandException(Messages.MESSAGE_DUPLICATE_NOTES);","lastModifiedDate":"2023-11-02"},{"lineNumber":65,"author":{"gitId":"jacobcuison"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":66,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":67,"author":{"gitId":"jacobcuison"},"content":"        mutableNotesList.add(note);","lastModifiedDate":"2023-10-18"},{"lineNumber":68,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":69,"author":{"gitId":"jacobcuison"},"content":"        Meeting editedMeeting \u003d new Meeting(","lastModifiedDate":"2023-10-18"},{"lineNumber":70,"author":{"gitId":"jacobcuison"},"content":"                meetingToEdit.getTitle(), meetingToEdit.getTime(), meetingToEdit.getPlace(),","lastModifiedDate":"2023-10-18"},{"lineNumber":71,"author":{"gitId":"s-peiran"},"content":"                meetingToEdit.getDescription(), mutableNotesList, meetingToEdit.getContacts());","lastModifiedDate":"2023-10-24"},{"lineNumber":72,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":73,"author":{"gitId":"jacobcuison"},"content":"        model.setMeeting(meetingToEdit, editedMeeting);","lastModifiedDate":"2023-10-18"},{"lineNumber":74,"author":{"gitId":"jacobcuison"},"content":"        model.updateFilteredMeetingList(Model.PREDICATE_SHOW_ALL_MEETINGS);","lastModifiedDate":"2023-10-18"},{"lineNumber":75,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":76,"author":{"gitId":"jonyeokj"},"content":"        AppState appState \u003d AppState.getInstance();","lastModifiedDate":"2023-11-02"},{"lineNumber":77,"author":{"gitId":"jonyeokj"},"content":"        appState.setMeeting(editedMeeting);","lastModifiedDate":"2023-11-02"},{"lineNumber":78,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":79,"author":{"gitId":"jonyeokj"},"content":"        return new CommandResult(generateSuccessMessage(editedMeeting), false, false);","lastModifiedDate":"2023-11-02"},{"lineNumber":80,"author":{"gitId":"jacobcuison"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":81,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":82,"author":{"gitId":"jacobcuison"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":83,"author":{"gitId":"jacobcuison"},"content":"     * Generates a command execution success message based on whether","lastModifiedDate":"2023-10-18"},{"lineNumber":84,"author":{"gitId":"jacobcuison"},"content":"     * the note is added to or removed from","lastModifiedDate":"2023-10-18"},{"lineNumber":85,"author":{"gitId":"jacobcuison"},"content":"     * {@code meetingToEdit}.","lastModifiedDate":"2023-10-18"},{"lineNumber":86,"author":{"gitId":"jacobcuison"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":87,"author":{"gitId":"jacobcuison"},"content":"    private String generateSuccessMessage(Meeting meetingToEdit) {","lastModifiedDate":"2023-10-18"},{"lineNumber":88,"author":{"gitId":"jacobcuison"},"content":"        String message \u003d !note.note.isEmpty() ? MESSAGE_ADD_NOTE_SUCCESS : MESSAGE_DELETE_NOTE_SUCCESS;","lastModifiedDate":"2023-10-18"},{"lineNumber":89,"author":{"gitId":"jacobcuison"},"content":"        return String.format(message, meetingToEdit);","lastModifiedDate":"2023-10-18"},{"lineNumber":90,"author":{"gitId":"jacobcuison"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":91,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":92,"author":{"gitId":"jacobcuison"},"content":"    @Override","lastModifiedDate":"2023-10-18"},{"lineNumber":93,"author":{"gitId":"jacobcuison"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-18"},{"lineNumber":94,"author":{"gitId":"jacobcuison"},"content":"        // short circuit if same object","lastModifiedDate":"2023-10-18"},{"lineNumber":95,"author":{"gitId":"jacobcuison"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-18"},{"lineNumber":96,"author":{"gitId":"jacobcuison"},"content":"            return true;","lastModifiedDate":"2023-10-18"},{"lineNumber":97,"author":{"gitId":"jacobcuison"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":98,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":99,"author":{"gitId":"jacobcuison"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-18"},{"lineNumber":100,"author":{"gitId":"jacobcuison"},"content":"        if (!(other instanceof AddMeetingNoteCommand)) {","lastModifiedDate":"2023-10-18"},{"lineNumber":101,"author":{"gitId":"jacobcuison"},"content":"            return false;","lastModifiedDate":"2023-10-18"},{"lineNumber":102,"author":{"gitId":"jacobcuison"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":103,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":104,"author":{"gitId":"jacobcuison"},"content":"        // state check","lastModifiedDate":"2023-10-18"},{"lineNumber":105,"author":{"gitId":"jacobcuison"},"content":"        AddMeetingNoteCommand e \u003d (AddMeetingNoteCommand) other;","lastModifiedDate":"2023-10-18"},{"lineNumber":106,"author":{"gitId":"jacobcuison"},"content":"        return index.equals(e.index)","lastModifiedDate":"2023-10-18"},{"lineNumber":107,"author":{"gitId":"jacobcuison"},"content":"                \u0026\u0026 note.equals(e.note);","lastModifiedDate":"2023-10-18"},{"lineNumber":108,"author":{"gitId":"jacobcuison"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":109,"author":{"gitId":"jacobcuison"},"content":"}","lastModifiedDate":"2023-10-18"}],"authorContributionMap":{"jonyeokj":5,"jacobcuison":101,"s-peiran":2,"chiayunrong":1}},{"path":"src/main/java/seedu/address/logic/commands/AddNoteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jacobcuison"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":3,"author":{"gitId":"jacobcuison"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"jacobcuison"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_INDEX;","lastModifiedDate":"2023-10-18"},{"lineNumber":5,"author":{"gitId":"jacobcuison"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NOTE_CONTACT;","lastModifiedDate":"2023-10-18"},{"lineNumber":6,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"jacobcuison"},"content":"import java.util.LinkedHashSet;","lastModifiedDate":"2023-11-02"},{"lineNumber":8,"author":{"gitId":"jacobcuison"},"content":"import java.util.List;","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"jacobcuison"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-18"},{"lineNumber":10,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"jacobcuison"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"jacobcuison"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"jacobcuison"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"jacobcuison"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"jacobcuison"},"content":"import seedu.address.model.contact.Contact;","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"jacobcuison"},"content":"import seedu.address.model.note.Note;","lastModifiedDate":"2023-10-18"},{"lineNumber":17,"author":{"gitId":"jonyeokj"},"content":"import seedu.address.ui.AppState;","lastModifiedDate":"2023-11-02"},{"lineNumber":18,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":19,"author":{"gitId":"jacobcuison"},"content":"/**","lastModifiedDate":"2023-10-13"},{"lineNumber":20,"author":{"gitId":"jacobcuison"},"content":" * Changes the note of an existing contact in the address book.","lastModifiedDate":"2023-10-13"},{"lineNumber":21,"author":{"gitId":"jacobcuison"},"content":" */","lastModifiedDate":"2023-10-13"},{"lineNumber":22,"author":{"gitId":"jacobcuison"},"content":"public class AddNoteCommand extends Command {","lastModifiedDate":"2023-10-13"},{"lineNumber":23,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":24,"author":{"gitId":"chiayunrong"},"content":"    public static final String COMMAND_WORD \u003d \"add note\";","lastModifiedDate":"2023-10-26"},{"lineNumber":25,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":26,"author":{"gitId":"jacobcuison"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2023-10-13"},{"lineNumber":27,"author":{"gitId":"jacobcuison"},"content":"            + \": Adds note to the contact identified \"","lastModifiedDate":"2023-11-02"},{"lineNumber":28,"author":{"gitId":"jacobcuison"},"content":"            + \"by the index number used in the last contact listing.\\n\"","lastModifiedDate":"2023-11-02"},{"lineNumber":29,"author":{"gitId":"jacobcuison"},"content":"            + \"Parameters: \" + PREFIX_INDEX + \" (must be a positive integer) \"","lastModifiedDate":"2023-10-18"},{"lineNumber":30,"author":{"gitId":"jacobcuison"},"content":"            + PREFIX_NOTE_CONTACT + \" [NOTE]\\n\"","lastModifiedDate":"2023-10-18"},{"lineNumber":31,"author":{"gitId":"jacobcuison"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2023-10-13"},{"lineNumber":32,"author":{"gitId":"jacobcuison"},"content":"            + PREFIX_NOTE_CONTACT + \" Likes to swim.\";","lastModifiedDate":"2023-10-18"},{"lineNumber":33,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":34,"author":{"gitId":"jacobcuison"},"content":"    public static final String MESSAGE_ADD_NOTE_SUCCESS \u003d \"Added note to Person: %1$s\";","lastModifiedDate":"2023-10-13"},{"lineNumber":35,"author":{"gitId":"jacobcuison"},"content":"    public static final String MESSAGE_DELETE_NOTE_SUCCESS \u003d \"Removed note from Person: %1$s\";","lastModifiedDate":"2023-10-13"},{"lineNumber":36,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":37,"author":{"gitId":"jacobcuison"},"content":"    private final Index index;","lastModifiedDate":"2023-10-13"},{"lineNumber":38,"author":{"gitId":"jacobcuison"},"content":"    private final Note note;","lastModifiedDate":"2023-10-13"},{"lineNumber":39,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":40,"author":{"gitId":"jacobcuison"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":41,"author":{"gitId":"jacobcuison"},"content":"     * @param index of the person in the filtered person list to edit the note","lastModifiedDate":"2023-10-13"},{"lineNumber":42,"author":{"gitId":"jacobcuison"},"content":"     * @param note  of the person to be updated to","lastModifiedDate":"2023-10-13"},{"lineNumber":43,"author":{"gitId":"jacobcuison"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":44,"author":{"gitId":"jacobcuison"},"content":"    public AddNoteCommand(Index index, Note note) {","lastModifiedDate":"2023-10-13"},{"lineNumber":45,"author":{"gitId":"jacobcuison"},"content":"        requireAllNonNull(index, note);","lastModifiedDate":"2023-10-13"},{"lineNumber":46,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":47,"author":{"gitId":"jacobcuison"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-10-13"},{"lineNumber":48,"author":{"gitId":"jacobcuison"},"content":"        this.note \u003d note;","lastModifiedDate":"2023-10-13"},{"lineNumber":49,"author":{"gitId":"jacobcuison"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":50,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":51,"author":{"gitId":"jacobcuison"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":52,"author":{"gitId":"jacobcuison"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-13"},{"lineNumber":53,"author":{"gitId":"jacobcuison"},"content":"        List\u003cContact\u003e lastShownList \u003d model.getFilteredContactList();","lastModifiedDate":"2023-10-13"},{"lineNumber":54,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":55,"author":{"gitId":"jacobcuison"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-10-13"},{"lineNumber":56,"author":{"gitId":"jacobcuison"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_CONTACT_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-13"},{"lineNumber":57,"author":{"gitId":"jacobcuison"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":58,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":59,"author":{"gitId":"jacobcuison"},"content":"        Contact contactToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2023-10-13"},{"lineNumber":60,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":61,"author":{"gitId":"jacobcuison"},"content":"        Set\u003cNote\u003e mutableNotesList \u003d new LinkedHashSet\u003c\u003e(contactToEdit.getNotes());","lastModifiedDate":"2023-11-02"},{"lineNumber":62,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":63,"author":{"gitId":"jacobcuison"},"content":"        if (mutableNotesList.contains(note)) {","lastModifiedDate":"2023-11-02"},{"lineNumber":64,"author":{"gitId":"jacobcuison"},"content":"            throw new CommandException(Messages.MESSAGE_DUPLICATE_NOTES);","lastModifiedDate":"2023-11-02"},{"lineNumber":65,"author":{"gitId":"jacobcuison"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":66,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":67,"author":{"gitId":"jacobcuison"},"content":"        mutableNotesList.add(note);","lastModifiedDate":"2023-10-18"},{"lineNumber":68,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":69,"author":{"gitId":"jacobcuison"},"content":"        Contact editedContact \u003d new Contact(","lastModifiedDate":"2023-10-13"},{"lineNumber":70,"author":{"gitId":"jacobcuison"},"content":"                contactToEdit.getName(), contactToEdit.getPhone(), contactToEdit.getEmail(),","lastModifiedDate":"2023-10-13"},{"lineNumber":71,"author":{"gitId":"jacobcuison"},"content":"                contactToEdit.getAddress(), contactToEdit.getTags(), mutableNotesList);","lastModifiedDate":"2023-10-18"},{"lineNumber":72,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":73,"author":{"gitId":"jacobcuison"},"content":"        model.setContact(contactToEdit, editedContact);","lastModifiedDate":"2023-10-13"},{"lineNumber":74,"author":{"gitId":"jacobcuison"},"content":"        model.updateFilteredContactList(Model.PREDICATE_SHOW_ALL_CONTACTS);","lastModifiedDate":"2023-10-13"},{"lineNumber":75,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":76,"author":{"gitId":"jonyeokj"},"content":"        AppState appState \u003d AppState.getInstance();","lastModifiedDate":"2023-11-02"},{"lineNumber":77,"author":{"gitId":"jonyeokj"},"content":"        appState.setContact(editedContact);","lastModifiedDate":"2023-11-02"},{"lineNumber":78,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":79,"author":{"gitId":"jonyeokj"},"content":"        return new CommandResult(generateSuccessMessage(editedContact), false, false);","lastModifiedDate":"2023-11-02"},{"lineNumber":80,"author":{"gitId":"jacobcuison"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":81,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":82,"author":{"gitId":"jacobcuison"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":83,"author":{"gitId":"jacobcuison"},"content":"     * Generates a command execution success message based on whether","lastModifiedDate":"2023-10-13"},{"lineNumber":84,"author":{"gitId":"jacobcuison"},"content":"     * the note is added to or removed from","lastModifiedDate":"2023-10-13"},{"lineNumber":85,"author":{"gitId":"jacobcuison"},"content":"     * {@code contactToEdit}.","lastModifiedDate":"2023-10-13"},{"lineNumber":86,"author":{"gitId":"jacobcuison"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":87,"author":{"gitId":"jacobcuison"},"content":"    private String generateSuccessMessage(Contact contactToEdit) {","lastModifiedDate":"2023-10-13"},{"lineNumber":88,"author":{"gitId":"jacobcuison"},"content":"        String message \u003d !note.note.isEmpty() ? MESSAGE_ADD_NOTE_SUCCESS : MESSAGE_DELETE_NOTE_SUCCESS;","lastModifiedDate":"2023-10-18"},{"lineNumber":89,"author":{"gitId":"jacobcuison"},"content":"        return String.format(message, contactToEdit);","lastModifiedDate":"2023-10-13"},{"lineNumber":90,"author":{"gitId":"jacobcuison"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":91,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":92,"author":{"gitId":"jacobcuison"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":93,"author":{"gitId":"jacobcuison"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-13"},{"lineNumber":94,"author":{"gitId":"jacobcuison"},"content":"        // short circuit if same object","lastModifiedDate":"2023-10-13"},{"lineNumber":95,"author":{"gitId":"jacobcuison"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-13"},{"lineNumber":96,"author":{"gitId":"jacobcuison"},"content":"            return true;","lastModifiedDate":"2023-10-13"},{"lineNumber":97,"author":{"gitId":"jacobcuison"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":98,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":99,"author":{"gitId":"jacobcuison"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-13"},{"lineNumber":100,"author":{"gitId":"jacobcuison"},"content":"        if (!(other instanceof AddNoteCommand)) {","lastModifiedDate":"2023-10-13"},{"lineNumber":101,"author":{"gitId":"jacobcuison"},"content":"            return false;","lastModifiedDate":"2023-10-13"},{"lineNumber":102,"author":{"gitId":"jacobcuison"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":103,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":104,"author":{"gitId":"jacobcuison"},"content":"        // state check","lastModifiedDate":"2023-10-13"},{"lineNumber":105,"author":{"gitId":"jacobcuison"},"content":"        AddNoteCommand e \u003d (AddNoteCommand) other;","lastModifiedDate":"2023-10-13"},{"lineNumber":106,"author":{"gitId":"jacobcuison"},"content":"        return index.equals(e.index)","lastModifiedDate":"2023-10-13"},{"lineNumber":107,"author":{"gitId":"jacobcuison"},"content":"                \u0026\u0026 note.equals(e.note);","lastModifiedDate":"2023-10-13"},{"lineNumber":108,"author":{"gitId":"jacobcuison"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":109,"author":{"gitId":"jacobcuison"},"content":"}","lastModifiedDate":"2023-10-13"}],"authorContributionMap":{"jonyeokj":5,"jacobcuison":103,"chiayunrong":1}},{"path":"src/main/java/seedu/address/logic/commands/CommandResult.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2018-12-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Represents the result of a command execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class CommandResult {","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private final String feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /** Help information should be shown to the user. */","lastModifiedDate":"2023-10-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private final boolean showHelp;","lastModifiedDate":"2023-10-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /** The application should exit. */","lastModifiedDate":"2023-10-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final boolean exit;","lastModifiedDate":"2023-10-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"jonyeokj"},"content":"     * Constructs a {@code CommandResult} with all specified fields.","lastModifiedDate":"2023-10-19"},{"lineNumber":24,"author":{"gitId":"jonyeokj"},"content":"     *","lastModifiedDate":"2023-10-19"},{"lineNumber":25,"author":{"gitId":"jonyeokj"},"content":"     * @param feedbackToUser The feedback message to be shown to the user.","lastModifiedDate":"2023-10-19"},{"lineNumber":26,"author":{"gitId":"jonyeokj"},"content":"     * @param showHelp Boolean indicating if help information should be shown.","lastModifiedDate":"2023-10-19"},{"lineNumber":27,"author":{"gitId":"jonyeokj"},"content":"     * @param exit Boolean indicating if the application should exit.","lastModifiedDate":"2023-10-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public CommandResult(String feedbackToUser, boolean showHelp, boolean exit) {","lastModifiedDate":"2023-11-02"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.feedbackToUser \u003d requireNonNull(feedbackToUser);","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.showHelp \u003d showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.exit \u003d exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"jonyeokj"},"content":"     * Constructs a {@code CommandResult} with the given feedback message,","lastModifiedDate":"2023-10-19"},{"lineNumber":37,"author":{"gitId":"jonyeokj"},"content":"     * and sets other fields to their default values.","lastModifiedDate":"2023-10-19"},{"lineNumber":38,"author":{"gitId":"jonyeokj"},"content":"     *","lastModifiedDate":"2023-10-19"},{"lineNumber":39,"author":{"gitId":"jonyeokj"},"content":"     * @param feedbackToUser The feedback message to be shown to the user.","lastModifiedDate":"2023-10-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public CommandResult(String feedbackToUser) {","lastModifiedDate":"2023-10-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        this(feedbackToUser, false, false);","lastModifiedDate":"2023-11-02"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public String getFeedbackToUser() {","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public boolean isShowHelp() {","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public boolean isExit() {","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2018-12-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-12-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-12-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2018-12-09"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        if (!(other instanceof CommandResult)) {","lastModifiedDate":"2018-12-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-12-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        CommandResult otherCommandResult \u003d (CommandResult) other;","lastModifiedDate":"2018-12-09"},{"lineNumber":69,"author":{"gitId":"chiayunrong"},"content":"        boolean eq \u003d feedbackToUser.equals(otherCommandResult.feedbackToUser)","lastModifiedDate":"2023-10-16"},{"lineNumber":70,"author":{"gitId":"-"},"content":"                    \u0026\u0026 showHelp \u003d\u003d otherCommandResult.showHelp","lastModifiedDate":"2018-12-09"},{"lineNumber":71,"author":{"gitId":"jonyeokj"},"content":"                    \u0026\u0026 exit \u003d\u003d otherCommandResult.exit;","lastModifiedDate":"2023-11-02"},{"lineNumber":72,"author":{"gitId":"chiayunrong"},"content":"        return eq;","lastModifiedDate":"2023-10-16"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return Objects.hash(feedbackToUser, showHelp, exit);","lastModifiedDate":"2023-11-02"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"                .add(\"feedbackToUser\", feedbackToUser)","lastModifiedDate":"2019-02-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"                .add(\"showHelp\", showHelp)","lastModifiedDate":"2019-02-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"                .add(\"exit\", exit)","lastModifiedDate":"2019-02-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"jonyeokj":10,"chiayunrong":2,"-":77}},{"path":"src/main/java/seedu/address/logic/commands/DeleteContactCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"s-peiran"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_INDEX;","lastModifiedDate":"2023-10-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"jacobcuison"},"content":"import seedu.address.model.contact.Contact;","lastModifiedDate":"2023-10-03"},{"lineNumber":14,"author":{"gitId":"jonyeokj"},"content":"import seedu.address.ui.AppState;","lastModifiedDate":"2023-11-02"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"jacobcuison"},"content":" * Deletes a contact identified using it\u0027s displayed index from the address book.","lastModifiedDate":"2023-10-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"jacobcuison"},"content":"public class DeleteContactCommand extends Command {","lastModifiedDate":"2023-10-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"chiayunrong"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2023-10-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"jacobcuison"},"content":"            + \": Deletes the contact identified by the index number used in the displayed contact list.\\n\"","lastModifiedDate":"2023-10-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2016-09-29"},{"lineNumber":26,"author":{"gitId":"s-peiran"},"content":"            + \"Example: \" + COMMAND_WORD + \" \" + PREFIX_INDEX + \" 1\";","lastModifiedDate":"2023-10-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"jacobcuison"},"content":"    public static final String MESSAGE_DELETE_CONTACT_SUCCESS \u003d \"Deleted Contact: %1$s\";","lastModifiedDate":"2023-10-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final Index targetIndex;","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"jacobcuison"},"content":"    public DeleteContactCommand(Index targetIndex) {","lastModifiedDate":"2023-10-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2016-09-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":39,"author":{"gitId":"jacobcuison"},"content":"        List\u003cContact\u003e lastShownList \u003d model.getFilteredContactList();","lastModifiedDate":"2023-10-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":42,"author":{"gitId":"jacobcuison"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_CONTACT_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":45,"author":{"gitId":"jacobcuison"},"content":"        Contact contactToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2023-10-03"},{"lineNumber":46,"author":{"gitId":"jacobcuison"},"content":"        model.deleteContact(contactToDelete);","lastModifiedDate":"2023-10-03"},{"lineNumber":47,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":48,"author":{"gitId":"jonyeokj"},"content":"        AppState appState \u003d AppState.getInstance();","lastModifiedDate":"2023-11-02"},{"lineNumber":49,"author":{"gitId":"jonyeokj"},"content":"        appState.deleteContact(contactToDelete);","lastModifiedDate":"2023-11-02"},{"lineNumber":50,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":51,"author":{"gitId":"jonyeokj"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_CONTACT_SUCCESS,","lastModifiedDate":"2023-10-13"},{"lineNumber":52,"author":{"gitId":"jonyeokj"},"content":"                Messages.formatContact(contactToDelete)));","lastModifiedDate":"2023-10-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":62,"author":{"gitId":"jacobcuison"},"content":"        if (!(other instanceof DeleteContactCommand)) {","lastModifiedDate":"2023-10-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":66,"author":{"gitId":"jacobcuison"},"content":"        DeleteContactCommand otherDeleteContactCommand \u003d (DeleteContactCommand) other;","lastModifiedDate":"2023-10-03"},{"lineNumber":67,"author":{"gitId":"jacobcuison"},"content":"        return targetIndex.equals(otherDeleteContactCommand.targetIndex);","lastModifiedDate":"2023-10-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"                .add(\"targetIndex\", targetIndex)","lastModifiedDate":"2019-02-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"jonyeokj":7,"jacobcuison":13,"s-peiran":2,"chiayunrong":1,"-":53}},{"path":"src/main/java/seedu/address/logic/commands/DeleteContactFromMeetingCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"s-peiran"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-24"},{"lineNumber":2,"author":{"gitId":"s-peiran"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":3,"author":{"gitId":"s-peiran"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-10-24"},{"lineNumber":4,"author":{"gitId":"s-peiran"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-10-24"},{"lineNumber":5,"author":{"gitId":"s-peiran"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TITLE;","lastModifiedDate":"2023-10-24"},{"lineNumber":6,"author":{"gitId":"s-peiran"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":7,"author":{"gitId":"s-peiran"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-24"},{"lineNumber":8,"author":{"gitId":"s-peiran"},"content":"import java.util.List;","lastModifiedDate":"2023-10-24"},{"lineNumber":9,"author":{"gitId":"s-peiran"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":10,"author":{"gitId":"s-peiran"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-24"},{"lineNumber":11,"author":{"gitId":"s-peiran"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-24"},{"lineNumber":12,"author":{"gitId":"s-peiran"},"content":"import seedu.address.model.contact.Contact;","lastModifiedDate":"2023-10-24"},{"lineNumber":13,"author":{"gitId":"s-peiran"},"content":"import seedu.address.model.meeting.Meeting;","lastModifiedDate":"2023-10-24"},{"lineNumber":14,"author":{"gitId":"jonyeokj"},"content":"import seedu.address.ui.AppState;","lastModifiedDate":"2023-11-02"},{"lineNumber":15,"author":{"gitId":"s-peiran"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":16,"author":{"gitId":"s-peiran"},"content":"/**","lastModifiedDate":"2023-10-24"},{"lineNumber":17,"author":{"gitId":"s-peiran"},"content":" * Deletes a contact from a meeting identified using it\u0027s name","lastModifiedDate":"2023-10-24"},{"lineNumber":18,"author":{"gitId":"s-peiran"},"content":" */","lastModifiedDate":"2023-10-24"},{"lineNumber":19,"author":{"gitId":"s-peiran"},"content":"public class DeleteContactFromMeetingCommand extends Command {","lastModifiedDate":"2023-10-24"},{"lineNumber":20,"author":{"gitId":"chiayunrong"},"content":"    public static final String COMMAND_WORD \u003d \"deletecontact\";","lastModifiedDate":"2023-10-26"},{"lineNumber":21,"author":{"gitId":"s-peiran"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":22,"author":{"gitId":"s-peiran"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2023-10-24"},{"lineNumber":23,"author":{"gitId":"s-peiran"},"content":"            + \": Removes the participants to the meeting identified \"","lastModifiedDate":"2023-10-24"},{"lineNumber":24,"author":{"gitId":"s-peiran"},"content":"            + \"by the name of the contact. \"","lastModifiedDate":"2023-10-24"},{"lineNumber":25,"author":{"gitId":"s-peiran"},"content":"            + \"Parameters: \" + PREFIX_NAME","lastModifiedDate":"2023-10-24"},{"lineNumber":26,"author":{"gitId":"s-peiran"},"content":"            + \" [CONTACT NAME] \"","lastModifiedDate":"2023-10-24"},{"lineNumber":27,"author":{"gitId":"s-peiran"},"content":"            + PREFIX_TITLE + \" [MEETING NAME]\\n\"","lastModifiedDate":"2023-10-24"},{"lineNumber":28,"author":{"gitId":"s-peiran"},"content":"            + \"Example: \" + COMMAND_WORD + \" \" + PREFIX_NAME","lastModifiedDate":"2023-10-27"},{"lineNumber":29,"author":{"gitId":"s-peiran"},"content":"            + \" Sarah Woo \" + PREFIX_TITLE + \" Project Discussion\";","lastModifiedDate":"2023-10-24"},{"lineNumber":30,"author":{"gitId":"s-peiran"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":31,"author":{"gitId":"s-peiran"},"content":"    public static final String MESSAGE_DELETE_CONTACT_SUCCESS \u003d \"Removed contact \u0027%s\u0027 from Meeting \u0027%s\u0027\";","lastModifiedDate":"2023-10-25"},{"lineNumber":32,"author":{"gitId":"s-peiran"},"content":"    public static final String MESSAGE_CONTACT_NOT_FOUND \u003d \"The person specified is not created\";","lastModifiedDate":"2023-10-24"},{"lineNumber":33,"author":{"gitId":"s-peiran"},"content":"    public static final String MESSAGE_MEETING_NOT_FOUND \u003d \"The meeting specified is not created\";","lastModifiedDate":"2023-10-24"},{"lineNumber":34,"author":{"gitId":"s-peiran"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":35,"author":{"gitId":"s-peiran"},"content":"    private final String meetingTitle;","lastModifiedDate":"2023-10-24"},{"lineNumber":36,"author":{"gitId":"s-peiran"},"content":"    private final String contactName;","lastModifiedDate":"2023-10-24"},{"lineNumber":37,"author":{"gitId":"s-peiran"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":38,"author":{"gitId":"s-peiran"},"content":"    /**","lastModifiedDate":"2023-10-24"},{"lineNumber":39,"author":{"gitId":"s-peiran"},"content":"     * @param meetingTitle String of the meeting which the contact is added to","lastModifiedDate":"2023-10-24"},{"lineNumber":40,"author":{"gitId":"s-peiran"},"content":"     * @param contactName  String of the contact to be added in the meeting","lastModifiedDate":"2023-10-24"},{"lineNumber":41,"author":{"gitId":"s-peiran"},"content":"     */","lastModifiedDate":"2023-10-24"},{"lineNumber":42,"author":{"gitId":"s-peiran"},"content":"    public DeleteContactFromMeetingCommand(String meetingTitle, String contactName) {","lastModifiedDate":"2023-10-24"},{"lineNumber":43,"author":{"gitId":"s-peiran"},"content":"        requireAllNonNull(meetingTitle, contactName);","lastModifiedDate":"2023-10-24"},{"lineNumber":44,"author":{"gitId":"s-peiran"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":45,"author":{"gitId":"s-peiran"},"content":"        this.meetingTitle \u003d meetingTitle;","lastModifiedDate":"2023-10-24"},{"lineNumber":46,"author":{"gitId":"s-peiran"},"content":"        this.contactName \u003d contactName;","lastModifiedDate":"2023-10-24"},{"lineNumber":47,"author":{"gitId":"s-peiran"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":48,"author":{"gitId":"s-peiran"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":49,"author":{"gitId":"s-peiran"},"content":"    @Override","lastModifiedDate":"2023-10-24"},{"lineNumber":50,"author":{"gitId":"s-peiran"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-24"},{"lineNumber":51,"author":{"gitId":"s-peiran"},"content":"        List\u003cMeeting\u003e meetingList \u003d model.getFilteredMeetingList();","lastModifiedDate":"2023-10-24"},{"lineNumber":52,"author":{"gitId":"s-peiran"},"content":"        Contact contact \u003d null;","lastModifiedDate":"2023-10-24"},{"lineNumber":53,"author":{"gitId":"s-peiran"},"content":"        Meeting meetingToEdit \u003d null;","lastModifiedDate":"2023-10-24"},{"lineNumber":54,"author":{"gitId":"s-peiran"},"content":"        boolean meetingFound \u003d false;","lastModifiedDate":"2023-10-24"},{"lineNumber":55,"author":{"gitId":"s-peiran"},"content":"        for (Meeting m : meetingList) {","lastModifiedDate":"2023-10-24"},{"lineNumber":56,"author":{"gitId":"s-peiran"},"content":"            if (m.getTitleString().equals(meetingTitle)) {","lastModifiedDate":"2023-10-25"},{"lineNumber":57,"author":{"gitId":"s-peiran"},"content":"                meetingToEdit \u003d m;","lastModifiedDate":"2023-10-24"},{"lineNumber":58,"author":{"gitId":"s-peiran"},"content":"                meetingFound \u003d true;","lastModifiedDate":"2023-10-24"},{"lineNumber":59,"author":{"gitId":"s-peiran"},"content":"                break;","lastModifiedDate":"2023-10-24"},{"lineNumber":60,"author":{"gitId":"s-peiran"},"content":"            }","lastModifiedDate":"2023-10-24"},{"lineNumber":61,"author":{"gitId":"s-peiran"},"content":"        }","lastModifiedDate":"2023-10-24"},{"lineNumber":62,"author":{"gitId":"s-peiran"},"content":"        if (!meetingFound) {","lastModifiedDate":"2023-10-24"},{"lineNumber":63,"author":{"gitId":"s-peiran"},"content":"            throw new CommandException(MESSAGE_MEETING_NOT_FOUND);","lastModifiedDate":"2023-10-24"},{"lineNumber":64,"author":{"gitId":"s-peiran"},"content":"        }","lastModifiedDate":"2023-10-24"},{"lineNumber":65,"author":{"gitId":"s-peiran"},"content":"        ArrayList\u003cContact\u003e listOfContacts \u003d new ArrayList\u003c\u003e(meetingToEdit.getContacts());","lastModifiedDate":"2023-10-24"},{"lineNumber":66,"author":{"gitId":"s-peiran"},"content":"        boolean contactFound \u003d false;","lastModifiedDate":"2023-10-24"},{"lineNumber":67,"author":{"gitId":"s-peiran"},"content":"        for (Contact c : listOfContacts) {","lastModifiedDate":"2023-10-24"},{"lineNumber":68,"author":{"gitId":"s-peiran"},"content":"            if (c.getNameString().equals(contactName)) {","lastModifiedDate":"2023-10-25"},{"lineNumber":69,"author":{"gitId":"s-peiran"},"content":"                contact \u003d c;","lastModifiedDate":"2023-10-24"},{"lineNumber":70,"author":{"gitId":"s-peiran"},"content":"                contactFound \u003d true;","lastModifiedDate":"2023-10-24"},{"lineNumber":71,"author":{"gitId":"s-peiran"},"content":"            }","lastModifiedDate":"2023-10-24"},{"lineNumber":72,"author":{"gitId":"s-peiran"},"content":"        }","lastModifiedDate":"2023-10-24"},{"lineNumber":73,"author":{"gitId":"s-peiran"},"content":"        if (!contactFound) {","lastModifiedDate":"2023-10-24"},{"lineNumber":74,"author":{"gitId":"s-peiran"},"content":"            throw new CommandException(MESSAGE_CONTACT_NOT_FOUND);","lastModifiedDate":"2023-10-24"},{"lineNumber":75,"author":{"gitId":"s-peiran"},"content":"        }","lastModifiedDate":"2023-10-24"},{"lineNumber":76,"author":{"gitId":"s-peiran"},"content":"        assert listOfContacts.contains(contact);","lastModifiedDate":"2023-10-25"},{"lineNumber":77,"author":{"gitId":"s-peiran"},"content":"        listOfContacts.remove(contact);","lastModifiedDate":"2023-10-24"},{"lineNumber":78,"author":{"gitId":"s-peiran"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":79,"author":{"gitId":"s-peiran"},"content":"        Meeting editedMeeting \u003d new Meeting(","lastModifiedDate":"2023-10-24"},{"lineNumber":80,"author":{"gitId":"s-peiran"},"content":"                meetingToEdit.getTitle(), meetingToEdit.getTime(), meetingToEdit.getPlace(),","lastModifiedDate":"2023-10-24"},{"lineNumber":81,"author":{"gitId":"s-peiran"},"content":"                meetingToEdit.getDescription(), meetingToEdit.getNotes(), listOfContacts);","lastModifiedDate":"2023-10-24"},{"lineNumber":82,"author":{"gitId":"s-peiran"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":83,"author":{"gitId":"s-peiran"},"content":"        model.setMeeting(meetingToEdit, editedMeeting);","lastModifiedDate":"2023-10-24"},{"lineNumber":84,"author":{"gitId":"s-peiran"},"content":"        model.updateFilteredMeetingList(Model.PREDICATE_SHOW_ALL_MEETINGS);","lastModifiedDate":"2023-10-24"},{"lineNumber":85,"author":{"gitId":"s-peiran"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":86,"author":{"gitId":"jonyeokj"},"content":"        AppState appState \u003d AppState.getInstance();","lastModifiedDate":"2023-11-02"},{"lineNumber":87,"author":{"gitId":"jonyeokj"},"content":"        appState.setMeeting(editedMeeting);","lastModifiedDate":"2023-11-02"},{"lineNumber":88,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":89,"author":{"gitId":"s-peiran"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_CONTACT_SUCCESS,","lastModifiedDate":"2023-10-24"},{"lineNumber":90,"author":{"gitId":"jonyeokj"},"content":"                contactName, meetingTitle), false, false);","lastModifiedDate":"2023-11-02"},{"lineNumber":91,"author":{"gitId":"s-peiran"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":92,"author":{"gitId":"s-peiran"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":93,"author":{"gitId":"s-peiran"},"content":"    public String getContactName() {","lastModifiedDate":"2023-10-24"},{"lineNumber":94,"author":{"gitId":"s-peiran"},"content":"        return contactName;","lastModifiedDate":"2023-10-24"},{"lineNumber":95,"author":{"gitId":"s-peiran"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":96,"author":{"gitId":"s-peiran"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":97,"author":{"gitId":"s-peiran"},"content":"    public String getMeetingTitle() {","lastModifiedDate":"2023-10-24"},{"lineNumber":98,"author":{"gitId":"s-peiran"},"content":"        return meetingTitle;","lastModifiedDate":"2023-10-24"},{"lineNumber":99,"author":{"gitId":"s-peiran"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":100,"author":{"gitId":"s-peiran"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":101,"author":{"gitId":"s-peiran"},"content":"    @Override","lastModifiedDate":"2023-10-24"},{"lineNumber":102,"author":{"gitId":"s-peiran"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-24"},{"lineNumber":103,"author":{"gitId":"s-peiran"},"content":"        // short circuit if same object","lastModifiedDate":"2023-10-24"},{"lineNumber":104,"author":{"gitId":"s-peiran"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-24"},{"lineNumber":105,"author":{"gitId":"s-peiran"},"content":"            return true;","lastModifiedDate":"2023-10-24"},{"lineNumber":106,"author":{"gitId":"s-peiran"},"content":"        }","lastModifiedDate":"2023-10-24"},{"lineNumber":107,"author":{"gitId":"s-peiran"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":108,"author":{"gitId":"s-peiran"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-24"},{"lineNumber":109,"author":{"gitId":"s-peiran"},"content":"        if (!(other instanceof DeleteContactFromMeetingCommand)) {","lastModifiedDate":"2023-10-24"},{"lineNumber":110,"author":{"gitId":"s-peiran"},"content":"            return false;","lastModifiedDate":"2023-10-24"},{"lineNumber":111,"author":{"gitId":"s-peiran"},"content":"        }","lastModifiedDate":"2023-10-24"},{"lineNumber":112,"author":{"gitId":"s-peiran"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":113,"author":{"gitId":"s-peiran"},"content":"        // state check","lastModifiedDate":"2023-10-24"},{"lineNumber":114,"author":{"gitId":"s-peiran"},"content":"        DeleteContactFromMeetingCommand e \u003d (DeleteContactFromMeetingCommand) other;","lastModifiedDate":"2023-10-24"},{"lineNumber":115,"author":{"gitId":"s-peiran"},"content":"        return this.meetingTitle.equals(e.getMeetingTitle()) \u0026\u0026 this.contactName.equals(e.getContactName());","lastModifiedDate":"2023-10-24"},{"lineNumber":116,"author":{"gitId":"s-peiran"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":117,"author":{"gitId":"s-peiran"},"content":"}","lastModifiedDate":"2023-10-24"}],"authorContributionMap":{"jonyeokj":5,"s-peiran":111,"chiayunrong":1}},{"path":"src/main/java/seedu/address/logic/commands/DeleteMeetingCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"s-peiran"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"s-peiran"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":3,"author":{"gitId":"jonyeokj"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"s-peiran"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_INDEX;","lastModifiedDate":"2023-10-27"},{"lineNumber":5,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"jonyeokj"},"content":"import java.util.List;","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"jonyeokj"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"s-peiran"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"jonyeokj"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"s-peiran"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"s-peiran"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"jonyeokj"},"content":"import seedu.address.model.meeting.Meeting;","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"jonyeokj"},"content":"import seedu.address.ui.AppState;","lastModifiedDate":"2023-11-02"},{"lineNumber":15,"author":{"gitId":"s-peiran"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"s-peiran"},"content":"/**","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"jonyeokj"},"content":" * Deletes a meeting identified using it\u0027s displaced index from the address book.","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"s-peiran"},"content":" */","lastModifiedDate":"2023-10-13"},{"lineNumber":19,"author":{"gitId":"s-peiran"},"content":"public class DeleteMeetingCommand extends Command {","lastModifiedDate":"2023-10-13"},{"lineNumber":20,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":21,"author":{"gitId":"chiayunrong"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2023-10-26"},{"lineNumber":22,"author":{"gitId":"s-peiran"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":23,"author":{"gitId":"jonyeokj"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2023-10-13"},{"lineNumber":24,"author":{"gitId":"jonyeokj"},"content":"        + \": Deletes the meeting identified by the index number used in the displayed meeting list.\\n\"","lastModifiedDate":"2023-10-13"},{"lineNumber":25,"author":{"gitId":"s-peiran"},"content":"        + \"Parameters: \"","lastModifiedDate":"2023-10-27"},{"lineNumber":26,"author":{"gitId":"s-peiran"},"content":"        + PREFIX_INDEX + \" INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2023-10-27"},{"lineNumber":27,"author":{"gitId":"s-peiran"},"content":"        + \"Example: \" + COMMAND_WORD + \" \" + PREFIX_INDEX + \" 1\";","lastModifiedDate":"2023-10-27"},{"lineNumber":28,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":29,"author":{"gitId":"jonyeokj"},"content":"    public static final String MESSAGE_DELETE_MEETING_SUCCESS \u003d \"Deleted Meeting: %1$s\";","lastModifiedDate":"2023-10-13"},{"lineNumber":30,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":31,"author":{"gitId":"jonyeokj"},"content":"    private final Index targetIndex;","lastModifiedDate":"2023-10-13"},{"lineNumber":32,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":33,"author":{"gitId":"jonyeokj"},"content":"    public DeleteMeetingCommand(Index targetIndex) {","lastModifiedDate":"2023-10-13"},{"lineNumber":34,"author":{"gitId":"jonyeokj"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2023-10-13"},{"lineNumber":35,"author":{"gitId":"s-peiran"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":36,"author":{"gitId":"s-peiran"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":37,"author":{"gitId":"s-peiran"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":38,"author":{"gitId":"s-peiran"},"content":"     * Executes the Delete Meeting command.","lastModifiedDate":"2023-10-13"},{"lineNumber":39,"author":{"gitId":"s-peiran"},"content":"     *","lastModifiedDate":"2023-10-13"},{"lineNumber":40,"author":{"gitId":"s-peiran"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2023-10-13"},{"lineNumber":41,"author":{"gitId":"s-peiran"},"content":"     * @return a CommandResult representing the outcome of the command execution.","lastModifiedDate":"2023-10-13"},{"lineNumber":42,"author":{"gitId":"s-peiran"},"content":"     * @throws CommandException if an error occurs during command execution.","lastModifiedDate":"2023-10-13"},{"lineNumber":43,"author":{"gitId":"s-peiran"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":44,"author":{"gitId":"jonyeokj"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":45,"author":{"gitId":"s-peiran"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-13"},{"lineNumber":46,"author":{"gitId":"jonyeokj"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-13"},{"lineNumber":47,"author":{"gitId":"jonyeokj"},"content":"        List\u003cMeeting\u003e lastShownList \u003d model.getFilteredMeetingList();","lastModifiedDate":"2023-10-13"},{"lineNumber":48,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":49,"author":{"gitId":"jonyeokj"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-10-13"},{"lineNumber":50,"author":{"gitId":"jonyeokj"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_MEETING_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-13"},{"lineNumber":51,"author":{"gitId":"jonyeokj"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":52,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":53,"author":{"gitId":"jonyeokj"},"content":"        Meeting meetingToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2023-10-13"},{"lineNumber":54,"author":{"gitId":"jonyeokj"},"content":"        model.deleteMeeting(meetingToDelete);","lastModifiedDate":"2023-10-13"},{"lineNumber":55,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":56,"author":{"gitId":"jonyeokj"},"content":"        AppState appState \u003d AppState.getInstance();","lastModifiedDate":"2023-11-02"},{"lineNumber":57,"author":{"gitId":"jonyeokj"},"content":"        appState.deleteMeeting(meetingToDelete);","lastModifiedDate":"2023-11-02"},{"lineNumber":58,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":59,"author":{"gitId":"jonyeokj"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_MEETING_SUCCESS,","lastModifiedDate":"2023-10-13"},{"lineNumber":60,"author":{"gitId":"jonyeokj"},"content":"            Messages.formatMeeting(meetingToDelete)));","lastModifiedDate":"2023-10-18"},{"lineNumber":61,"author":{"gitId":"s-peiran"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":62,"author":{"gitId":"s-peiran"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":63,"author":{"gitId":"s-peiran"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":64,"author":{"gitId":"s-peiran"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-13"},{"lineNumber":65,"author":{"gitId":"s-peiran"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-13"},{"lineNumber":66,"author":{"gitId":"s-peiran"},"content":"            return true;","lastModifiedDate":"2023-10-13"},{"lineNumber":67,"author":{"gitId":"s-peiran"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":68,"author":{"gitId":"s-peiran"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":69,"author":{"gitId":"s-peiran"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-13"},{"lineNumber":70,"author":{"gitId":"s-peiran"},"content":"        if (!(other instanceof DeleteMeetingCommand)) {","lastModifiedDate":"2023-10-13"},{"lineNumber":71,"author":{"gitId":"s-peiran"},"content":"            return false;","lastModifiedDate":"2023-10-13"},{"lineNumber":72,"author":{"gitId":"s-peiran"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":73,"author":{"gitId":"s-peiran"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":74,"author":{"gitId":"jonyeokj"},"content":"        DeleteMeetingCommand otherDeleteMeetingCommand \u003d (DeleteMeetingCommand) other;","lastModifiedDate":"2023-10-13"},{"lineNumber":75,"author":{"gitId":"jonyeokj"},"content":"        return targetIndex.equals(otherDeleteMeetingCommand.targetIndex);","lastModifiedDate":"2023-10-13"},{"lineNumber":76,"author":{"gitId":"s-peiran"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":77,"author":{"gitId":"s-peiran"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":78,"author":{"gitId":"s-peiran"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":79,"author":{"gitId":"s-peiran"},"content":"    public String toString() {","lastModifiedDate":"2023-10-13"},{"lineNumber":80,"author":{"gitId":"s-peiran"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-10-13"},{"lineNumber":81,"author":{"gitId":"jonyeokj"},"content":"            .add(\"targetIndex\", targetIndex)","lastModifiedDate":"2023-10-13"},{"lineNumber":82,"author":{"gitId":"s-peiran"},"content":"            .toString();","lastModifiedDate":"2023-10-13"},{"lineNumber":83,"author":{"gitId":"s-peiran"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":84,"author":{"gitId":"s-peiran"},"content":"}","lastModifiedDate":"2023-10-13"}],"authorContributionMap":{"jonyeokj":38,"s-peiran":45,"chiayunrong":1}},{"path":"src/main/java/seedu/address/logic/commands/DeleteMeetingNoteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jacobcuison"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-11-02"},{"lineNumber":2,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":3,"author":{"gitId":"jacobcuison"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-11-02"},{"lineNumber":4,"author":{"gitId":"jacobcuison"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_INDEX;","lastModifiedDate":"2023-11-02"},{"lineNumber":5,"author":{"gitId":"jacobcuison"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NOTE_ID;","lastModifiedDate":"2023-11-02"},{"lineNumber":6,"author":{"gitId":"jacobcuison"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NOTE_MEETING;","lastModifiedDate":"2023-11-02"},{"lineNumber":7,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":8,"author":{"gitId":"jacobcuison"},"content":"import java.util.Iterator;","lastModifiedDate":"2023-11-02"},{"lineNumber":9,"author":{"gitId":"jacobcuison"},"content":"import java.util.LinkedHashSet;","lastModifiedDate":"2023-11-02"},{"lineNumber":10,"author":{"gitId":"jacobcuison"},"content":"import java.util.List;","lastModifiedDate":"2023-11-02"},{"lineNumber":11,"author":{"gitId":"jacobcuison"},"content":"import java.util.Set;","lastModifiedDate":"2023-11-02"},{"lineNumber":12,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":13,"author":{"gitId":"jacobcuison"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-11-02"},{"lineNumber":14,"author":{"gitId":"jacobcuison"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-11-02"},{"lineNumber":15,"author":{"gitId":"jacobcuison"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-11-02"},{"lineNumber":16,"author":{"gitId":"jacobcuison"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-11-02"},{"lineNumber":17,"author":{"gitId":"jacobcuison"},"content":"import seedu.address.model.meeting.Meeting;","lastModifiedDate":"2023-11-02"},{"lineNumber":18,"author":{"gitId":"jacobcuison"},"content":"import seedu.address.model.note.Note;","lastModifiedDate":"2023-11-02"},{"lineNumber":19,"author":{"gitId":"jacobcuison"},"content":"import seedu.address.ui.AppState;","lastModifiedDate":"2023-11-02"},{"lineNumber":20,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":21,"author":{"gitId":"jacobcuison"},"content":"/**","lastModifiedDate":"2023-11-02"},{"lineNumber":22,"author":{"gitId":"jacobcuison"},"content":" * Deletes a note of an existing meeting in the address book.","lastModifiedDate":"2023-11-02"},{"lineNumber":23,"author":{"gitId":"jacobcuison"},"content":" */","lastModifiedDate":"2023-11-02"},{"lineNumber":24,"author":{"gitId":"jacobcuison"},"content":"public class DeleteMeetingNoteCommand extends Command {","lastModifiedDate":"2023-11-02"},{"lineNumber":25,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":26,"author":{"gitId":"jacobcuison"},"content":"    public static final String COMMAND_WORD \u003d \"deletenote\";","lastModifiedDate":"2023-11-02"},{"lineNumber":27,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":28,"author":{"gitId":"jacobcuison"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2023-11-02"},{"lineNumber":29,"author":{"gitId":"jacobcuison"},"content":"            + \": Deletes the note of the meeting identified \"","lastModifiedDate":"2023-11-02"},{"lineNumber":30,"author":{"gitId":"jacobcuison"},"content":"            + \"by the index number used in the last meeting listing. \"","lastModifiedDate":"2023-11-02"},{"lineNumber":31,"author":{"gitId":"jacobcuison"},"content":"            + \"Parameters: \" + PREFIX_INDEX + \" (must be a positive integer) \"","lastModifiedDate":"2023-11-02"},{"lineNumber":32,"author":{"gitId":"jacobcuison"},"content":"            + PREFIX_NOTE_MEETING + \" [NOTE]\\n\"","lastModifiedDate":"2023-11-02"},{"lineNumber":33,"author":{"gitId":"jacobcuison"},"content":"            + \"Example: \" + COMMAND_WORD + \" \" + PREFIX_INDEX + \" 1 \"","lastModifiedDate":"2023-11-02"},{"lineNumber":34,"author":{"gitId":"jacobcuison"},"content":"            + PREFIX_NOTE_ID + \" 1.\";","lastModifiedDate":"2023-11-02"},{"lineNumber":35,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":36,"author":{"gitId":"jacobcuison"},"content":"    public static final String MESSAGE_DELETE_NOTE_FAILURE \u003d \"Failed to remove note from Meeting: %1$s\";","lastModifiedDate":"2023-11-02"},{"lineNumber":37,"author":{"gitId":"jacobcuison"},"content":"    public static final String MESSAGE_DELETE_NOTE_SUCCESS \u003d \"Removed note from Meeting: %1$s\";","lastModifiedDate":"2023-11-02"},{"lineNumber":38,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":39,"author":{"gitId":"jacobcuison"},"content":"    private final Index index;","lastModifiedDate":"2023-11-02"},{"lineNumber":40,"author":{"gitId":"jacobcuison"},"content":"    private final int noteID;","lastModifiedDate":"2023-11-02"},{"lineNumber":41,"author":{"gitId":"jacobcuison"},"content":"    private boolean isSuccessful \u003d false;","lastModifiedDate":"2023-11-02"},{"lineNumber":42,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":43,"author":{"gitId":"jacobcuison"},"content":"    /**","lastModifiedDate":"2023-11-02"},{"lineNumber":44,"author":{"gitId":"jacobcuison"},"content":"     * @param index of the person in the filtered person list to edit the note","lastModifiedDate":"2023-11-02"},{"lineNumber":45,"author":{"gitId":"jacobcuison"},"content":"     * @param noteID of the note to be deleted","lastModifiedDate":"2023-11-02"},{"lineNumber":46,"author":{"gitId":"jacobcuison"},"content":"     */","lastModifiedDate":"2023-11-02"},{"lineNumber":47,"author":{"gitId":"jacobcuison"},"content":"    public DeleteMeetingNoteCommand(Index index, int noteID) {","lastModifiedDate":"2023-11-02"},{"lineNumber":48,"author":{"gitId":"jacobcuison"},"content":"        requireAllNonNull(index, noteID);","lastModifiedDate":"2023-11-02"},{"lineNumber":49,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":50,"author":{"gitId":"jacobcuison"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-11-02"},{"lineNumber":51,"author":{"gitId":"jacobcuison"},"content":"        this.noteID \u003d noteID;","lastModifiedDate":"2023-11-02"},{"lineNumber":52,"author":{"gitId":"jacobcuison"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":53,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":54,"author":{"gitId":"jacobcuison"},"content":"    @Override","lastModifiedDate":"2023-11-02"},{"lineNumber":55,"author":{"gitId":"jacobcuison"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-11-02"},{"lineNumber":56,"author":{"gitId":"jacobcuison"},"content":"        List\u003cMeeting\u003e lastShownList \u003d model.getFilteredMeetingList();","lastModifiedDate":"2023-11-02"},{"lineNumber":57,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":58,"author":{"gitId":"jacobcuison"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-11-02"},{"lineNumber":59,"author":{"gitId":"jacobcuison"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_MEETING_DISPLAYED_INDEX);","lastModifiedDate":"2023-11-02"},{"lineNumber":60,"author":{"gitId":"jacobcuison"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":61,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":62,"author":{"gitId":"jacobcuison"},"content":"        Meeting meetingToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2023-11-02"},{"lineNumber":63,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":64,"author":{"gitId":"jacobcuison"},"content":"        Set\u003cNote\u003e mutableNotesList \u003d new LinkedHashSet\u003c\u003e(meetingToEdit.getNotes());","lastModifiedDate":"2023-11-02"},{"lineNumber":65,"author":{"gitId":"jacobcuison"},"content":"        Iterator\u003cNote\u003e iterator \u003d mutableNotesList.iterator();","lastModifiedDate":"2023-11-02"},{"lineNumber":66,"author":{"gitId":"jacobcuison"},"content":"        while (iterator.hasNext()) {","lastModifiedDate":"2023-11-02"},{"lineNumber":67,"author":{"gitId":"jacobcuison"},"content":"            Note note \u003d iterator.next();","lastModifiedDate":"2023-11-02"},{"lineNumber":68,"author":{"gitId":"jacobcuison"},"content":"            if (note.getNoteID() \u003d\u003d noteID) {","lastModifiedDate":"2023-11-02"},{"lineNumber":69,"author":{"gitId":"jacobcuison"},"content":"                iterator.remove();","lastModifiedDate":"2023-11-02"},{"lineNumber":70,"author":{"gitId":"jacobcuison"},"content":"                isSuccessful \u003d true;","lastModifiedDate":"2023-11-02"},{"lineNumber":71,"author":{"gitId":"jacobcuison"},"content":"            }","lastModifiedDate":"2023-11-02"},{"lineNumber":72,"author":{"gitId":"jacobcuison"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":73,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":74,"author":{"gitId":"jacobcuison"},"content":"        LinkedHashSet\u003cNote\u003e newNoteSet \u003d new LinkedHashSet\u003c\u003e();","lastModifiedDate":"2023-11-02"},{"lineNumber":75,"author":{"gitId":"jacobcuison"},"content":"        iterator \u003d mutableNotesList.iterator();","lastModifiedDate":"2023-11-02"},{"lineNumber":76,"author":{"gitId":"jacobcuison"},"content":"        while (iterator.hasNext()) {","lastModifiedDate":"2023-11-02"},{"lineNumber":77,"author":{"gitId":"jacobcuison"},"content":"            newNoteSet.add(iterator.next());","lastModifiedDate":"2023-11-02"},{"lineNumber":78,"author":{"gitId":"jacobcuison"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":79,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":80,"author":{"gitId":"jacobcuison"},"content":"        Meeting editedMeeting \u003d new Meeting(","lastModifiedDate":"2023-11-02"},{"lineNumber":81,"author":{"gitId":"jacobcuison"},"content":"                meetingToEdit.getTitle(), meetingToEdit.getTime(), meetingToEdit.getPlace(),","lastModifiedDate":"2023-11-02"},{"lineNumber":82,"author":{"gitId":"jacobcuison"},"content":"                meetingToEdit.getDescription(), newNoteSet, meetingToEdit.getContacts());","lastModifiedDate":"2023-11-02"},{"lineNumber":83,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":84,"author":{"gitId":"jacobcuison"},"content":"        model.setMeeting(meetingToEdit, editedMeeting);","lastModifiedDate":"2023-11-02"},{"lineNumber":85,"author":{"gitId":"jacobcuison"},"content":"        model.updateFilteredMeetingList(Model.PREDICATE_SHOW_ALL_MEETINGS);","lastModifiedDate":"2023-11-02"},{"lineNumber":86,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":87,"author":{"gitId":"jacobcuison"},"content":"        AppState appState \u003d AppState.getInstance();","lastModifiedDate":"2023-11-02"},{"lineNumber":88,"author":{"gitId":"jacobcuison"},"content":"        appState.setMeeting(editedMeeting);","lastModifiedDate":"2023-11-02"},{"lineNumber":89,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":90,"author":{"gitId":"jacobcuison"},"content":"        return new CommandResult(generateSuccessMessage(editedMeeting), false, false);","lastModifiedDate":"2023-11-02"},{"lineNumber":91,"author":{"gitId":"jacobcuison"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":92,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":93,"author":{"gitId":"jacobcuison"},"content":"    /**","lastModifiedDate":"2023-11-02"},{"lineNumber":94,"author":{"gitId":"jacobcuison"},"content":"     * Generates a command execution success message based on whether","lastModifiedDate":"2023-11-02"},{"lineNumber":95,"author":{"gitId":"jacobcuison"},"content":"     * the note is added to or removed from","lastModifiedDate":"2023-11-02"},{"lineNumber":96,"author":{"gitId":"jacobcuison"},"content":"     * {@code meetingToEdit}.","lastModifiedDate":"2023-11-02"},{"lineNumber":97,"author":{"gitId":"jacobcuison"},"content":"     */","lastModifiedDate":"2023-11-02"},{"lineNumber":98,"author":{"gitId":"jacobcuison"},"content":"    private String generateSuccessMessage(Meeting meetingToEdit) {","lastModifiedDate":"2023-11-02"},{"lineNumber":99,"author":{"gitId":"jacobcuison"},"content":"        String message \u003d isSuccessful ? MESSAGE_DELETE_NOTE_SUCCESS : MESSAGE_DELETE_NOTE_FAILURE;","lastModifiedDate":"2023-11-02"},{"lineNumber":100,"author":{"gitId":"jacobcuison"},"content":"        return String.format(message, meetingToEdit);","lastModifiedDate":"2023-11-02"},{"lineNumber":101,"author":{"gitId":"jacobcuison"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":102,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":103,"author":{"gitId":"jacobcuison"},"content":"    @Override","lastModifiedDate":"2023-11-02"},{"lineNumber":104,"author":{"gitId":"jacobcuison"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-11-02"},{"lineNumber":105,"author":{"gitId":"jacobcuison"},"content":"        // short circuit if same object","lastModifiedDate":"2023-11-02"},{"lineNumber":106,"author":{"gitId":"jacobcuison"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-11-02"},{"lineNumber":107,"author":{"gitId":"jacobcuison"},"content":"            return true;","lastModifiedDate":"2023-11-02"},{"lineNumber":108,"author":{"gitId":"jacobcuison"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":109,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":110,"author":{"gitId":"jacobcuison"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-11-02"},{"lineNumber":111,"author":{"gitId":"jacobcuison"},"content":"        if (!(other instanceof DeleteMeetingNoteCommand)) {","lastModifiedDate":"2023-11-02"},{"lineNumber":112,"author":{"gitId":"jacobcuison"},"content":"            return false;","lastModifiedDate":"2023-11-02"},{"lineNumber":113,"author":{"gitId":"jacobcuison"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":114,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":115,"author":{"gitId":"jacobcuison"},"content":"        // state check","lastModifiedDate":"2023-11-02"},{"lineNumber":116,"author":{"gitId":"jacobcuison"},"content":"        DeleteMeetingNoteCommand e \u003d (DeleteMeetingNoteCommand) other;","lastModifiedDate":"2023-11-02"},{"lineNumber":117,"author":{"gitId":"jacobcuison"},"content":"        return index.equals(e.index)","lastModifiedDate":"2023-11-02"},{"lineNumber":118,"author":{"gitId":"jacobcuison"},"content":"                \u0026\u0026 noteID \u003d\u003d e.noteID;","lastModifiedDate":"2023-11-02"},{"lineNumber":119,"author":{"gitId":"jacobcuison"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":120,"author":{"gitId":"jacobcuison"},"content":"}","lastModifiedDate":"2023-11-02"}],"authorContributionMap":{"jacobcuison":120}},{"path":"src/main/java/seedu/address/logic/commands/DeleteNoteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jacobcuison"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-11-02"},{"lineNumber":2,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":3,"author":{"gitId":"jacobcuison"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-11-02"},{"lineNumber":4,"author":{"gitId":"jacobcuison"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_INDEX;","lastModifiedDate":"2023-11-02"},{"lineNumber":5,"author":{"gitId":"jacobcuison"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NOTE_CONTACT;","lastModifiedDate":"2023-11-02"},{"lineNumber":6,"author":{"gitId":"jacobcuison"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NOTE_ID;","lastModifiedDate":"2023-11-02"},{"lineNumber":7,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":8,"author":{"gitId":"jacobcuison"},"content":"import java.util.Iterator;","lastModifiedDate":"2023-11-02"},{"lineNumber":9,"author":{"gitId":"jacobcuison"},"content":"import java.util.LinkedHashSet;","lastModifiedDate":"2023-11-02"},{"lineNumber":10,"author":{"gitId":"jacobcuison"},"content":"import java.util.List;","lastModifiedDate":"2023-11-02"},{"lineNumber":11,"author":{"gitId":"jacobcuison"},"content":"import java.util.Set;","lastModifiedDate":"2023-11-02"},{"lineNumber":12,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":13,"author":{"gitId":"jacobcuison"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-11-02"},{"lineNumber":14,"author":{"gitId":"jacobcuison"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-11-02"},{"lineNumber":15,"author":{"gitId":"jacobcuison"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-11-02"},{"lineNumber":16,"author":{"gitId":"jacobcuison"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-11-02"},{"lineNumber":17,"author":{"gitId":"jacobcuison"},"content":"import seedu.address.model.contact.Contact;","lastModifiedDate":"2023-11-02"},{"lineNumber":18,"author":{"gitId":"jacobcuison"},"content":"import seedu.address.model.note.Note;","lastModifiedDate":"2023-11-02"},{"lineNumber":19,"author":{"gitId":"jacobcuison"},"content":"import seedu.address.ui.AppState;","lastModifiedDate":"2023-11-02"},{"lineNumber":20,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":21,"author":{"gitId":"jacobcuison"},"content":"/**","lastModifiedDate":"2023-11-02"},{"lineNumber":22,"author":{"gitId":"jacobcuison"},"content":" * Deletes a note of an existing Contact in the address book.","lastModifiedDate":"2023-11-02"},{"lineNumber":23,"author":{"gitId":"jacobcuison"},"content":" */","lastModifiedDate":"2023-11-02"},{"lineNumber":24,"author":{"gitId":"jacobcuison"},"content":"public class DeleteNoteCommand extends Command {","lastModifiedDate":"2023-11-02"},{"lineNumber":25,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":26,"author":{"gitId":"jacobcuison"},"content":"    public static final String COMMAND_WORD \u003d \"deletenote\";","lastModifiedDate":"2023-11-02"},{"lineNumber":27,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":28,"author":{"gitId":"jacobcuison"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2023-11-02"},{"lineNumber":29,"author":{"gitId":"jacobcuison"},"content":"            + \": Deletes the note of the meeting identified \"","lastModifiedDate":"2023-11-02"},{"lineNumber":30,"author":{"gitId":"jacobcuison"},"content":"            + \"by the index number used in the last meeting listing. \"","lastModifiedDate":"2023-11-02"},{"lineNumber":31,"author":{"gitId":"jacobcuison"},"content":"            + \"Parameters: \" + PREFIX_INDEX + \" (must be a positive integer) \"","lastModifiedDate":"2023-11-02"},{"lineNumber":32,"author":{"gitId":"jacobcuison"},"content":"            + PREFIX_NOTE_CONTACT + \" [NOTE]\\n\"","lastModifiedDate":"2023-11-02"},{"lineNumber":33,"author":{"gitId":"jacobcuison"},"content":"            + \"Example: \" + COMMAND_WORD + \" \" + PREFIX_INDEX + \" 1 \"","lastModifiedDate":"2023-11-02"},{"lineNumber":34,"author":{"gitId":"jacobcuison"},"content":"            + PREFIX_NOTE_ID + \" 1.\";","lastModifiedDate":"2023-11-02"},{"lineNumber":35,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":36,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":37,"author":{"gitId":"jacobcuison"},"content":"    public static final String MESSAGE_DELETE_NOTE_FAILURE \u003d \"Failed to remove note from Contact: %1$s\";","lastModifiedDate":"2023-11-02"},{"lineNumber":38,"author":{"gitId":"jacobcuison"},"content":"    public static final String MESSAGE_DELETE_NOTE_SUCCESS \u003d \"Removed note from Contact: %1$s\";","lastModifiedDate":"2023-11-02"},{"lineNumber":39,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":40,"author":{"gitId":"jacobcuison"},"content":"    private final Index index;","lastModifiedDate":"2023-11-02"},{"lineNumber":41,"author":{"gitId":"jacobcuison"},"content":"    private final int noteID;","lastModifiedDate":"2023-11-02"},{"lineNumber":42,"author":{"gitId":"jacobcuison"},"content":"    private boolean isSuccessful \u003d false;","lastModifiedDate":"2023-11-02"},{"lineNumber":43,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":44,"author":{"gitId":"jacobcuison"},"content":"    /**","lastModifiedDate":"2023-11-02"},{"lineNumber":45,"author":{"gitId":"jacobcuison"},"content":"     * @param index of the person in the filtered person list to edit the note","lastModifiedDate":"2023-11-02"},{"lineNumber":46,"author":{"gitId":"jacobcuison"},"content":"     * @param noteID of the note to be deleted","lastModifiedDate":"2023-11-02"},{"lineNumber":47,"author":{"gitId":"jacobcuison"},"content":"     */","lastModifiedDate":"2023-11-02"},{"lineNumber":48,"author":{"gitId":"jacobcuison"},"content":"    public DeleteNoteCommand(Index index, int noteID) {","lastModifiedDate":"2023-11-02"},{"lineNumber":49,"author":{"gitId":"jacobcuison"},"content":"        requireAllNonNull(index, noteID);","lastModifiedDate":"2023-11-02"},{"lineNumber":50,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":51,"author":{"gitId":"jacobcuison"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-11-02"},{"lineNumber":52,"author":{"gitId":"jacobcuison"},"content":"        this.noteID \u003d noteID;","lastModifiedDate":"2023-11-02"},{"lineNumber":53,"author":{"gitId":"jacobcuison"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":54,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":55,"author":{"gitId":"jacobcuison"},"content":"    @Override","lastModifiedDate":"2023-11-02"},{"lineNumber":56,"author":{"gitId":"jacobcuison"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-11-02"},{"lineNumber":57,"author":{"gitId":"jacobcuison"},"content":"        List\u003cContact\u003e lastShownList \u003d model.getFilteredContactList();","lastModifiedDate":"2023-11-02"},{"lineNumber":58,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":59,"author":{"gitId":"jacobcuison"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-11-02"},{"lineNumber":60,"author":{"gitId":"jacobcuison"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_CONTACT_DISPLAYED_INDEX);","lastModifiedDate":"2023-11-02"},{"lineNumber":61,"author":{"gitId":"jacobcuison"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":62,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":63,"author":{"gitId":"jacobcuison"},"content":"        Contact contactToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2023-11-02"},{"lineNumber":64,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":65,"author":{"gitId":"jacobcuison"},"content":"        Set\u003cNote\u003e mutableNotesList \u003d new LinkedHashSet\u003c\u003e(contactToEdit.getNotes());","lastModifiedDate":"2023-11-02"},{"lineNumber":66,"author":{"gitId":"jacobcuison"},"content":"        Iterator\u003cNote\u003e iterator \u003d mutableNotesList.iterator();","lastModifiedDate":"2023-11-02"},{"lineNumber":67,"author":{"gitId":"jacobcuison"},"content":"        while (iterator.hasNext()) {","lastModifiedDate":"2023-11-02"},{"lineNumber":68,"author":{"gitId":"jacobcuison"},"content":"            Note note \u003d iterator.next();","lastModifiedDate":"2023-11-02"},{"lineNumber":69,"author":{"gitId":"jacobcuison"},"content":"            if (note.getNoteID() \u003d\u003d noteID) {","lastModifiedDate":"2023-11-02"},{"lineNumber":70,"author":{"gitId":"jacobcuison"},"content":"                iterator.remove();","lastModifiedDate":"2023-11-02"},{"lineNumber":71,"author":{"gitId":"jacobcuison"},"content":"                isSuccessful \u003d true;","lastModifiedDate":"2023-11-02"},{"lineNumber":72,"author":{"gitId":"jacobcuison"},"content":"            }","lastModifiedDate":"2023-11-02"},{"lineNumber":73,"author":{"gitId":"jacobcuison"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":74,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":75,"author":{"gitId":"jacobcuison"},"content":"        LinkedHashSet\u003cNote\u003e newNoteSet \u003d new LinkedHashSet\u003c\u003e();","lastModifiedDate":"2023-11-02"},{"lineNumber":76,"author":{"gitId":"jacobcuison"},"content":"        iterator \u003d mutableNotesList.iterator();","lastModifiedDate":"2023-11-02"},{"lineNumber":77,"author":{"gitId":"jacobcuison"},"content":"        while (iterator.hasNext()) {","lastModifiedDate":"2023-11-02"},{"lineNumber":78,"author":{"gitId":"jacobcuison"},"content":"            newNoteSet.add(iterator.next());","lastModifiedDate":"2023-11-02"},{"lineNumber":79,"author":{"gitId":"jacobcuison"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":80,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":81,"author":{"gitId":"jacobcuison"},"content":"        Contact editedContact \u003d new Contact(","lastModifiedDate":"2023-11-02"},{"lineNumber":82,"author":{"gitId":"jacobcuison"},"content":"                contactToEdit.getName(), contactToEdit.getPhone(), contactToEdit.getEmail(),","lastModifiedDate":"2023-11-02"},{"lineNumber":83,"author":{"gitId":"jacobcuison"},"content":"                contactToEdit.getAddress(), contactToEdit.getTags(), newNoteSet);","lastModifiedDate":"2023-11-02"},{"lineNumber":84,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":85,"author":{"gitId":"jacobcuison"},"content":"        model.setContact(contactToEdit, editedContact);","lastModifiedDate":"2023-11-02"},{"lineNumber":86,"author":{"gitId":"jacobcuison"},"content":"        model.updateFilteredContactList(Model.PREDICATE_SHOW_ALL_CONTACTS);","lastModifiedDate":"2023-11-02"},{"lineNumber":87,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":88,"author":{"gitId":"jacobcuison"},"content":"        AppState appState \u003d AppState.getInstance();","lastModifiedDate":"2023-11-02"},{"lineNumber":89,"author":{"gitId":"jacobcuison"},"content":"        appState.setContact(editedContact);","lastModifiedDate":"2023-11-02"},{"lineNumber":90,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":91,"author":{"gitId":"jacobcuison"},"content":"        return new CommandResult(generateSuccessMessage(editedContact), false, false);","lastModifiedDate":"2023-11-02"},{"lineNumber":92,"author":{"gitId":"jacobcuison"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":93,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":94,"author":{"gitId":"jacobcuison"},"content":"    /**","lastModifiedDate":"2023-11-02"},{"lineNumber":95,"author":{"gitId":"jacobcuison"},"content":"     * Generates a command execution success message based on whether","lastModifiedDate":"2023-11-02"},{"lineNumber":96,"author":{"gitId":"jacobcuison"},"content":"     * the note is added to or removed from","lastModifiedDate":"2023-11-02"},{"lineNumber":97,"author":{"gitId":"jacobcuison"},"content":"     * {@code meetingToEdit}.","lastModifiedDate":"2023-11-02"},{"lineNumber":98,"author":{"gitId":"jacobcuison"},"content":"     */","lastModifiedDate":"2023-11-02"},{"lineNumber":99,"author":{"gitId":"jacobcuison"},"content":"    private String generateSuccessMessage(Contact contactToEdit) {","lastModifiedDate":"2023-11-02"},{"lineNumber":100,"author":{"gitId":"jacobcuison"},"content":"        String message \u003d isSuccessful ? MESSAGE_DELETE_NOTE_SUCCESS : MESSAGE_DELETE_NOTE_FAILURE;","lastModifiedDate":"2023-11-02"},{"lineNumber":101,"author":{"gitId":"jacobcuison"},"content":"        return String.format(message, contactToEdit);","lastModifiedDate":"2023-11-02"},{"lineNumber":102,"author":{"gitId":"jacobcuison"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":103,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":104,"author":{"gitId":"jacobcuison"},"content":"    @Override","lastModifiedDate":"2023-11-02"},{"lineNumber":105,"author":{"gitId":"jacobcuison"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-11-02"},{"lineNumber":106,"author":{"gitId":"jacobcuison"},"content":"        // short circuit if same object","lastModifiedDate":"2023-11-02"},{"lineNumber":107,"author":{"gitId":"jacobcuison"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-11-02"},{"lineNumber":108,"author":{"gitId":"jacobcuison"},"content":"            return true;","lastModifiedDate":"2023-11-02"},{"lineNumber":109,"author":{"gitId":"jacobcuison"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":110,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":111,"author":{"gitId":"jacobcuison"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-11-02"},{"lineNumber":112,"author":{"gitId":"jacobcuison"},"content":"        if (!(other instanceof DeleteNoteCommand)) {","lastModifiedDate":"2023-11-02"},{"lineNumber":113,"author":{"gitId":"jacobcuison"},"content":"            return false;","lastModifiedDate":"2023-11-02"},{"lineNumber":114,"author":{"gitId":"jacobcuison"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":115,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":116,"author":{"gitId":"jacobcuison"},"content":"        // state check","lastModifiedDate":"2023-11-02"},{"lineNumber":117,"author":{"gitId":"jacobcuison"},"content":"        DeleteNoteCommand e \u003d (DeleteNoteCommand) other;","lastModifiedDate":"2023-11-02"},{"lineNumber":118,"author":{"gitId":"jacobcuison"},"content":"        return index.equals(e.index)","lastModifiedDate":"2023-11-02"},{"lineNumber":119,"author":{"gitId":"jacobcuison"},"content":"                \u0026\u0026 noteID \u003d\u003d e.noteID;","lastModifiedDate":"2023-11-02"},{"lineNumber":120,"author":{"gitId":"jacobcuison"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":121,"author":{"gitId":"jacobcuison"},"content":"}","lastModifiedDate":"2023-11-02"}],"authorContributionMap":{"jacobcuison":121}},{"path":"src/main/java/seedu/address/logic/commands/EditContactCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-12-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"jacobcuison"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-10-18"},{"lineNumber":5,"author":{"gitId":"jacobcuison"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-10-18"},{"lineNumber":6,"author":{"gitId":"jacobcuison"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-10-18"},{"lineNumber":7,"author":{"gitId":"jacobcuison"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NOTE_CONTACT;","lastModifiedDate":"2023-10-18"},{"lineNumber":8,"author":{"gitId":"jacobcuison"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-10-18"},{"lineNumber":9,"author":{"gitId":"jacobcuison"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-10-18"},{"lineNumber":10,"author":{"gitId":"jacobcuison"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_CONTACTS;","lastModifiedDate":"2023-10-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-01-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-01-11"},{"lineNumber":14,"author":{"gitId":"jacobcuison"},"content":"import java.util.LinkedHashSet;","lastModifiedDate":"2023-11-02"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2023-07-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-12-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2016-12-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":26,"author":{"gitId":"jacobcuison"},"content":"import seedu.address.model.contact.Address;","lastModifiedDate":"2023-10-03"},{"lineNumber":27,"author":{"gitId":"jacobcuison"},"content":"import seedu.address.model.contact.Contact;","lastModifiedDate":"2023-10-03"},{"lineNumber":28,"author":{"gitId":"jacobcuison"},"content":"import seedu.address.model.contact.Email;","lastModifiedDate":"2023-10-03"},{"lineNumber":29,"author":{"gitId":"jacobcuison"},"content":"import seedu.address.model.contact.Name;","lastModifiedDate":"2023-10-03"},{"lineNumber":30,"author":{"gitId":"jacobcuison"},"content":"import seedu.address.model.contact.Phone;","lastModifiedDate":"2023-10-03"},{"lineNumber":31,"author":{"gitId":"jacobcuison"},"content":"import seedu.address.model.note.Note;","lastModifiedDate":"2023-10-18"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":33,"author":{"gitId":"jonyeokj"},"content":"import seedu.address.ui.AppState;","lastModifiedDate":"2023-11-02"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26"},{"lineNumber":36,"author":{"gitId":"jacobcuison"},"content":" * Edits the details of an existing contact in the address book.","lastModifiedDate":"2023-10-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26"},{"lineNumber":38,"author":{"gitId":"jacobcuison"},"content":"public class EditContactCommand extends Command {","lastModifiedDate":"2023-10-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":40,"author":{"gitId":"chiayunrong"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2023-10-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":42,"author":{"gitId":"jacobcuison"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the contact identified \"","lastModifiedDate":"2023-10-03"},{"lineNumber":43,"author":{"gitId":"jacobcuison"},"content":"            + \"by the index number used in the displayed contact list. \"","lastModifiedDate":"2023-10-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2016-12-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2017-06-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2017-06-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_ADDRESS + \"ADDRESS] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":50,"author":{"gitId":"jacobcuison"},"content":"            + \"[\" + PREFIX_TAG + \"TAG] \"","lastModifiedDate":"2023-10-18"},{"lineNumber":51,"author":{"gitId":"jacobcuison"},"content":"            + \"[\" + PREFIX_NOTE_CONTACT + \"NOTE]...\\n\"","lastModifiedDate":"2023-10-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \" 91234567 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \" johndoe@example.com\";","lastModifiedDate":"2017-05-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":56,"author":{"gitId":"jacobcuison"},"content":"    public static final String MESSAGE_EDIT_CONTACT_SUCCESS \u003d \"Edited Contact: %1$s\";","lastModifiedDate":"2023-10-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":58,"author":{"gitId":"jacobcuison"},"content":"    public static final String MESSAGE_DUPLICATE_CONTACT \u003d \"This contact already exists in the address book.\";","lastModifiedDate":"2023-10-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":61,"author":{"gitId":"jacobcuison"},"content":"    private final EditContactDescriptor editContactDescriptor;","lastModifiedDate":"2023-10-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":64,"author":{"gitId":"jacobcuison"},"content":"     * @param index                 of the contact in the filtered contact list to edit","lastModifiedDate":"2023-10-03"},{"lineNumber":65,"author":{"gitId":"jacobcuison"},"content":"     * @param editContactDescriptor details to edit the contact with","lastModifiedDate":"2023-10-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":67,"author":{"gitId":"jacobcuison"},"content":"    public EditContactCommand(Index index, EditContactDescriptor editContactDescriptor) {","lastModifiedDate":"2023-10-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        requireNonNull(index);","lastModifiedDate":"2017-05-25"},{"lineNumber":69,"author":{"gitId":"jacobcuison"},"content":"        requireNonNull(editContactDescriptor);","lastModifiedDate":"2023-10-03"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2017-05-25"},{"lineNumber":72,"author":{"gitId":"jacobcuison"},"content":"        this.editContactDescriptor \u003d new EditContactDescriptor(editContactDescriptor);","lastModifiedDate":"2023-10-03"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":78,"author":{"gitId":"jacobcuison"},"content":"        List\u003cContact\u003e lastShownList \u003d model.getFilteredContactList();","lastModifiedDate":"2023-10-03"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"jacobcuison"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_CONTACT_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-03"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":84,"author":{"gitId":"jacobcuison"},"content":"        Contact contactToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2023-10-03"},{"lineNumber":85,"author":{"gitId":"jacobcuison"},"content":"        Contact editedContact \u003d createEditedContact(contactToEdit, editContactDescriptor);","lastModifiedDate":"2023-10-03"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":87,"author":{"gitId":"jacobcuison"},"content":"        if (!contactToEdit.isSameContact(editedContact) \u0026\u0026 model.hasContact(editedContact)) {","lastModifiedDate":"2023-10-03"},{"lineNumber":88,"author":{"gitId":"jacobcuison"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_CONTACT);","lastModifiedDate":"2023-10-03"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":91,"author":{"gitId":"jacobcuison"},"content":"        model.setContact(contactToEdit, editedContact);","lastModifiedDate":"2023-10-03"},{"lineNumber":92,"author":{"gitId":"jacobcuison"},"content":"        model.updateFilteredContactList(PREDICATE_SHOW_ALL_CONTACTS);","lastModifiedDate":"2023-10-03"},{"lineNumber":93,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":94,"author":{"gitId":"jonyeokj"},"content":"        AppState appState \u003d AppState.getInstance();","lastModifiedDate":"2023-11-02"},{"lineNumber":95,"author":{"gitId":"jonyeokj"},"content":"        appState.setContact(editedContact);","lastModifiedDate":"2023-11-02"},{"lineNumber":96,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":97,"author":{"gitId":"jonyeokj"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_CONTACT_SUCCESS,","lastModifiedDate":"2023-10-17"},{"lineNumber":98,"author":{"gitId":"jonyeokj"},"content":"                Messages.formatContact(editedContact)), false, false);","lastModifiedDate":"2023-11-02"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":102,"author":{"gitId":"jacobcuison"},"content":"     * Creates and returns a {@code Contact} with the details of {@code contactToEdit}","lastModifiedDate":"2023-10-03"},{"lineNumber":103,"author":{"gitId":"jacobcuison"},"content":"     * edited with {@code editContactDescriptor}.","lastModifiedDate":"2023-10-03"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":105,"author":{"gitId":"jacobcuison"},"content":"    private static Contact createEditedContact(Contact contactToEdit, EditContactDescriptor editContactDescriptor) {","lastModifiedDate":"2023-10-03"},{"lineNumber":106,"author":{"gitId":"jacobcuison"},"content":"        assert contactToEdit !\u003d null;","lastModifiedDate":"2023-10-03"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":108,"author":{"gitId":"jacobcuison"},"content":"        Name updatedName \u003d editContactDescriptor.getName().orElse(contactToEdit.getName());","lastModifiedDate":"2023-10-03"},{"lineNumber":109,"author":{"gitId":"jacobcuison"},"content":"        Phone updatedPhone \u003d editContactDescriptor.getPhone().orElse(contactToEdit.getPhone());","lastModifiedDate":"2023-10-03"},{"lineNumber":110,"author":{"gitId":"jacobcuison"},"content":"        Email updatedEmail \u003d editContactDescriptor.getEmail().orElse(contactToEdit.getEmail());","lastModifiedDate":"2023-10-03"},{"lineNumber":111,"author":{"gitId":"jacobcuison"},"content":"        Address updatedAddress \u003d editContactDescriptor.getAddress().orElse(contactToEdit.getAddress());","lastModifiedDate":"2023-10-03"},{"lineNumber":112,"author":{"gitId":"jacobcuison"},"content":"        Set\u003cTag\u003e updatedTags \u003d editContactDescriptor.getTags().orElse(contactToEdit.getTags());","lastModifiedDate":"2023-10-03"},{"lineNumber":113,"author":{"gitId":"jacobcuison"},"content":"        Set\u003cNote\u003e updatedNotes \u003d editContactDescriptor.getNotes().orElse(contactToEdit.getNotes());","lastModifiedDate":"2023-10-18"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":115,"author":{"gitId":"jacobcuison"},"content":"        return new Contact(updatedName, updatedPhone, updatedEmail, updatedAddress, updatedTags, updatedNotes);","lastModifiedDate":"2023-10-18"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08"},{"lineNumber":125,"author":{"gitId":"jacobcuison"},"content":"        if (!(other instanceof EditContactCommand)) {","lastModifiedDate":"2023-10-03"},{"lineNumber":126,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":129,"author":{"gitId":"jacobcuison"},"content":"        EditContactCommand otherEditContactCommand \u003d (EditContactCommand) other;","lastModifiedDate":"2023-10-03"},{"lineNumber":130,"author":{"gitId":"jacobcuison"},"content":"        return index.equals(otherEditContactCommand.index)","lastModifiedDate":"2023-10-03"},{"lineNumber":131,"author":{"gitId":"jacobcuison"},"content":"                \u0026\u0026 editContactDescriptor.equals(otherEditContactCommand.editContactDescriptor);","lastModifiedDate":"2023-10-03"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"                .add(\"index\", index)","lastModifiedDate":"2019-02-23"},{"lineNumber":138,"author":{"gitId":"jacobcuison"},"content":"                .add(\"editContactDescriptor\", editContactDescriptor)","lastModifiedDate":"2023-10-03"},{"lineNumber":139,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":143,"author":{"gitId":"jacobcuison"},"content":"     * Stores the details to edit the contact with. Each non-empty field value will replace the","lastModifiedDate":"2023-10-03"},{"lineNumber":144,"author":{"gitId":"jacobcuison"},"content":"     * corresponding field value of the contact.","lastModifiedDate":"2023-10-03"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":146,"author":{"gitId":"jacobcuison"},"content":"    public static class EditContactDescriptor {","lastModifiedDate":"2023-10-03"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        private Name name;","lastModifiedDate":"2017-06-21"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        private Phone phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        private Email email;","lastModifiedDate":"2017-06-21"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        private Address address;","lastModifiedDate":"2017-06-21"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-06-21"},{"lineNumber":152,"author":{"gitId":"jacobcuison"},"content":"        private Set\u003cNote\u003e notes;","lastModifiedDate":"2023-10-18"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":154,"author":{"gitId":"s-peiran"},"content":"        public EditContactDescriptor() {","lastModifiedDate":"2023-10-13"},{"lineNumber":155,"author":{"gitId":"s-peiran"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":158,"author":{"gitId":"-"},"content":"         * Copy constructor.","lastModifiedDate":"2018-01-11"},{"lineNumber":159,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":160,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":161,"author":{"gitId":"jacobcuison"},"content":"        public EditContactDescriptor(EditContactDescriptor toCopy) {","lastModifiedDate":"2023-10-03"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            setName(toCopy.name);","lastModifiedDate":"2018-01-15"},{"lineNumber":163,"author":{"gitId":"-"},"content":"            setPhone(toCopy.phone);","lastModifiedDate":"2018-01-15"},{"lineNumber":164,"author":{"gitId":"-"},"content":"            setEmail(toCopy.email);","lastModifiedDate":"2018-01-15"},{"lineNumber":165,"author":{"gitId":"-"},"content":"            setAddress(toCopy.address);","lastModifiedDate":"2018-01-15"},{"lineNumber":166,"author":{"gitId":"-"},"content":"            setTags(toCopy.tags);","lastModifiedDate":"2018-01-11"},{"lineNumber":167,"author":{"gitId":"jacobcuison"},"content":"            setNotes(toCopy.notes);","lastModifiedDate":"2023-10-18"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-12-26"},{"lineNumber":171,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2016-12-26"},{"lineNumber":172,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-26"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2016-12-26"},{"lineNumber":174,"author":{"gitId":"-"},"content":"            return CollectionUtil.isAnyNonNull(name, phone, email, address, tags);","lastModifiedDate":"2018-08-14"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        public void setName(Name name) {","lastModifiedDate":"2017-06-21"},{"lineNumber":178,"author":{"gitId":"-"},"content":"            this.name \u003d name;","lastModifiedDate":"2017-06-21"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2016-12-26"},{"lineNumber":182,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2017-06-21"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        public void setPhone(Phone phone) {","lastModifiedDate":"2017-06-21"},{"lineNumber":186,"author":{"gitId":"-"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2016-12-26"},{"lineNumber":190,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(phone);","lastModifiedDate":"2017-06-21"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        public void setEmail(Email email) {","lastModifiedDate":"2017-06-21"},{"lineNumber":194,"author":{"gitId":"-"},"content":"            this.email \u003d email;","lastModifiedDate":"2017-06-21"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        public Optional\u003cEmail\u003e getEmail() {","lastModifiedDate":"2016-12-26"},{"lineNumber":198,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(email);","lastModifiedDate":"2017-06-21"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        public void setAddress(Address address) {","lastModifiedDate":"2017-06-21"},{"lineNumber":202,"author":{"gitId":"-"},"content":"            this.address \u003d address;","lastModifiedDate":"2017-06-21"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        public Optional\u003cAddress\u003e getAddress() {","lastModifiedDate":"2016-12-26"},{"lineNumber":206,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(address);","lastModifiedDate":"2017-06-21"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":210,"author":{"gitId":"-"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2018-01-11"},{"lineNumber":211,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":212,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2017-06-21"},{"lineNumber":214,"author":{"gitId":"-"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2018-01-11"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":217,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":218,"author":{"gitId":"-"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2018-01-11"},{"lineNumber":219,"author":{"gitId":"-"},"content":"         * if modification is attempted.","lastModifiedDate":"2018-01-11"},{"lineNumber":220,"author":{"gitId":"-"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2018-01-11"},{"lineNumber":221,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":222,"author":{"gitId":"-"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":223,"author":{"gitId":"-"},"content":"            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2018-01-11"},{"lineNumber":224,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":226,"author":{"gitId":"jacobcuison"},"content":"        /**","lastModifiedDate":"2023-10-18"},{"lineNumber":227,"author":{"gitId":"jacobcuison"},"content":"         * Sets {@code notes} to this object\u0027s {@code notes}.","lastModifiedDate":"2023-10-18"},{"lineNumber":228,"author":{"gitId":"jacobcuison"},"content":"         * A defensive copy of {@code notes} is used internally.","lastModifiedDate":"2023-10-18"},{"lineNumber":229,"author":{"gitId":"jacobcuison"},"content":"         */","lastModifiedDate":"2023-10-18"},{"lineNumber":230,"author":{"gitId":"jacobcuison"},"content":"        public void setNotes(Set\u003cNote\u003e notes) {","lastModifiedDate":"2023-10-18"},{"lineNumber":231,"author":{"gitId":"jacobcuison"},"content":"            this.notes \u003d (notes !\u003d null) ? new LinkedHashSet\u003c\u003e(notes) : null;","lastModifiedDate":"2023-11-02"},{"lineNumber":232,"author":{"gitId":"jacobcuison"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":233,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":234,"author":{"gitId":"jacobcuison"},"content":"        /**","lastModifiedDate":"2023-10-18"},{"lineNumber":235,"author":{"gitId":"jacobcuison"},"content":"         * Returns an unmodifiable note set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2023-10-18"},{"lineNumber":236,"author":{"gitId":"jacobcuison"},"content":"         * if modification is attempted.","lastModifiedDate":"2023-10-18"},{"lineNumber":237,"author":{"gitId":"jacobcuison"},"content":"         * Returns {@code Optional#empty()} if {@code notes} is null.","lastModifiedDate":"2023-10-18"},{"lineNumber":238,"author":{"gitId":"jacobcuison"},"content":"         */","lastModifiedDate":"2023-10-18"},{"lineNumber":239,"author":{"gitId":"jacobcuison"},"content":"        public Optional\u003cSet\u003cNote\u003e\u003e getNotes() {","lastModifiedDate":"2023-10-18"},{"lineNumber":240,"author":{"gitId":"jacobcuison"},"content":"            return (notes !\u003d null) ? Optional.of(Collections.unmodifiableSet(notes)) : Optional.empty();","lastModifiedDate":"2023-10-18"},{"lineNumber":241,"author":{"gitId":"jacobcuison"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":242,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":243,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-05"},{"lineNumber":244,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2017-05-05"},{"lineNumber":245,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-05"},{"lineNumber":246,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2017-05-05"},{"lineNumber":247,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":249,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2017-05-05"},{"lineNumber":250,"author":{"gitId":"jacobcuison"},"content":"            if (!(other instanceof EditContactDescriptor)) {","lastModifiedDate":"2023-10-03"},{"lineNumber":251,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2017-05-05"},{"lineNumber":252,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":254,"author":{"gitId":"jacobcuison"},"content":"            EditContactDescriptor otherEditContactDescriptor \u003d (EditContactDescriptor) other;","lastModifiedDate":"2023-10-03"},{"lineNumber":255,"author":{"gitId":"jacobcuison"},"content":"            return Objects.equals(name, otherEditContactDescriptor.name)","lastModifiedDate":"2023-10-03"},{"lineNumber":256,"author":{"gitId":"jacobcuison"},"content":"                    \u0026\u0026 Objects.equals(phone, otherEditContactDescriptor.phone)","lastModifiedDate":"2023-10-03"},{"lineNumber":257,"author":{"gitId":"jacobcuison"},"content":"                    \u0026\u0026 Objects.equals(email, otherEditContactDescriptor.email)","lastModifiedDate":"2023-10-03"},{"lineNumber":258,"author":{"gitId":"jacobcuison"},"content":"                    \u0026\u0026 Objects.equals(address, otherEditContactDescriptor.address)","lastModifiedDate":"2023-10-03"},{"lineNumber":259,"author":{"gitId":"jacobcuison"},"content":"                    \u0026\u0026 Objects.equals(tags, otherEditContactDescriptor.tags)","lastModifiedDate":"2023-10-18"},{"lineNumber":260,"author":{"gitId":"jacobcuison"},"content":"                    \u0026\u0026 Objects.equals(notes, otherEditContactDescriptor.notes);","lastModifiedDate":"2023-10-18"},{"lineNumber":261,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-05"},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"        public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"            return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"                    .add(\"name\", name)","lastModifiedDate":"2019-02-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"                    .add(\"phone\", phone)","lastModifiedDate":"2019-02-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"                    .add(\"email\", email)","lastModifiedDate":"2019-02-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"                    .add(\"address\", address)","lastModifiedDate":"2019-02-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"                    .add(\"tags\", tags)","lastModifiedDate":"2019-02-23"},{"lineNumber":271,"author":{"gitId":"jacobcuison"},"content":"                    .add(\"notes\", notes)","lastModifiedDate":"2023-10-18"},{"lineNumber":272,"author":{"gitId":"-"},"content":"                    .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2019-02-23"},{"lineNumber":274,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":275,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26"}],"authorContributionMap":{"jonyeokj":7,"jacobcuison":84,"s-peiran":2,"chiayunrong":1,"-":181}},{"path":"src/main/java/seedu/address/logic/commands/EditMeetingCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"s-peiran"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"s-peiran"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":3,"author":{"gitId":"jonyeokj"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"jonyeokj"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DESCRIPTION;","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"jonyeokj"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PLACE;","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"jonyeokj"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TIME;","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"jonyeokj"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TITLE;","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"jonyeokj"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_MEETINGS;","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"s-peiran"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-24"},{"lineNumber":11,"author":{"gitId":"jacobcuison"},"content":"import java.util.Collections;","lastModifiedDate":"2023-10-18"},{"lineNumber":12,"author":{"gitId":"jacobcuison"},"content":"import java.util.LinkedHashSet;","lastModifiedDate":"2023-11-02"},{"lineNumber":13,"author":{"gitId":"jonyeokj"},"content":"import java.util.List;","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"jonyeokj"},"content":"import java.util.Objects;","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"jonyeokj"},"content":"import java.util.Optional;","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"jacobcuison"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-18"},{"lineNumber":17,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"jonyeokj"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-13"},{"lineNumber":19,"author":{"gitId":"jonyeokj"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2023-10-13"},{"lineNumber":20,"author":{"gitId":"s-peiran"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-13"},{"lineNumber":21,"author":{"gitId":"jonyeokj"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-13"},{"lineNumber":22,"author":{"gitId":"s-peiran"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-13"},{"lineNumber":23,"author":{"gitId":"s-peiran"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-13"},{"lineNumber":24,"author":{"gitId":"s-peiran"},"content":"import seedu.address.model.contact.Contact;","lastModifiedDate":"2023-10-24"},{"lineNumber":25,"author":{"gitId":"jonyeokj"},"content":"import seedu.address.model.meeting.Description;","lastModifiedDate":"2023-10-13"},{"lineNumber":26,"author":{"gitId":"jonyeokj"},"content":"import seedu.address.model.meeting.Meeting;","lastModifiedDate":"2023-10-13"},{"lineNumber":27,"author":{"gitId":"jonyeokj"},"content":"import seedu.address.model.meeting.Place;","lastModifiedDate":"2023-10-13"},{"lineNumber":28,"author":{"gitId":"jonyeokj"},"content":"import seedu.address.model.meeting.Time;","lastModifiedDate":"2023-10-13"},{"lineNumber":29,"author":{"gitId":"jonyeokj"},"content":"import seedu.address.model.meeting.Title;","lastModifiedDate":"2023-10-13"},{"lineNumber":30,"author":{"gitId":"jacobcuison"},"content":"import seedu.address.model.note.Note;","lastModifiedDate":"2023-10-18"},{"lineNumber":31,"author":{"gitId":"jonyeokj"},"content":"import seedu.address.ui.AppState;","lastModifiedDate":"2023-11-02"},{"lineNumber":32,"author":{"gitId":"s-peiran"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":33,"author":{"gitId":"s-peiran"},"content":"/**","lastModifiedDate":"2023-10-13"},{"lineNumber":34,"author":{"gitId":"s-peiran"},"content":" * Edits the details of an existing meeting in the address book.","lastModifiedDate":"2023-10-13"},{"lineNumber":35,"author":{"gitId":"s-peiran"},"content":" */","lastModifiedDate":"2023-10-13"},{"lineNumber":36,"author":{"gitId":"jonyeokj"},"content":"public class EditMeetingCommand extends Command {","lastModifiedDate":"2023-10-13"},{"lineNumber":37,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":38,"author":{"gitId":"chiayunrong"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2023-10-26"},{"lineNumber":39,"author":{"gitId":"s-peiran"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":40,"author":{"gitId":"jonyeokj"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the meeting identified \"","lastModifiedDate":"2023-10-18"},{"lineNumber":41,"author":{"gitId":"jonyeokj"},"content":"        + \"by the index number used in the displayed meeting list. \"","lastModifiedDate":"2023-10-18"},{"lineNumber":42,"author":{"gitId":"jonyeokj"},"content":"        + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2023-10-13"},{"lineNumber":43,"author":{"gitId":"jonyeokj"},"content":"        + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2023-10-13"},{"lineNumber":44,"author":{"gitId":"jonyeokj"},"content":"        + \"[\" + PREFIX_TITLE + \" TITLE] \"","lastModifiedDate":"2023-10-13"},{"lineNumber":45,"author":{"gitId":"jonyeokj"},"content":"        + \"[\" + PREFIX_TIME + \" TIME] \"","lastModifiedDate":"2023-10-13"},{"lineNumber":46,"author":{"gitId":"jonyeokj"},"content":"        + \"[\" + PREFIX_PLACE + \" PLACE] \"","lastModifiedDate":"2023-10-13"},{"lineNumber":47,"author":{"gitId":"jonyeokj"},"content":"        + \"[\" + PREFIX_DESCRIPTION + \" DESCRIPTION]...\\n\"","lastModifiedDate":"2023-10-13"},{"lineNumber":48,"author":{"gitId":"jonyeokj"},"content":"        + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2023-10-13"},{"lineNumber":49,"author":{"gitId":"jonyeokj"},"content":"        + PREFIX_PLACE + \" Zoom \"","lastModifiedDate":"2023-10-13"},{"lineNumber":50,"author":{"gitId":"jonyeokj"},"content":"        + PREFIX_DESCRIPTION + \" Discuss Project Details\";","lastModifiedDate":"2023-10-13"},{"lineNumber":51,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":52,"author":{"gitId":"jonyeokj"},"content":"    public static final String MESSAGE_EDIT_MEETING_SUCCESS \u003d \"Edited Meeting: %1$s\";","lastModifiedDate":"2023-10-13"},{"lineNumber":53,"author":{"gitId":"jonyeokj"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2023-10-13"},{"lineNumber":54,"author":{"gitId":"jonyeokj"},"content":"    public static final String MESSAGE_DUPLICATE_MEETING \u003d \"This meeting already exists.\";","lastModifiedDate":"2023-10-13"},{"lineNumber":55,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":56,"author":{"gitId":"jonyeokj"},"content":"    private final Index index;","lastModifiedDate":"2023-10-13"},{"lineNumber":57,"author":{"gitId":"jonyeokj"},"content":"    private final EditMeetingDescriptor editMeetingDescriptor;","lastModifiedDate":"2023-10-13"},{"lineNumber":58,"author":{"gitId":"s-peiran"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":59,"author":{"gitId":"s-peiran"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":60,"author":{"gitId":"jonyeokj"},"content":"     * @param index                 of the meeting in the filtered meeting list to edit","lastModifiedDate":"2023-10-13"},{"lineNumber":61,"author":{"gitId":"jonyeokj"},"content":"     * @param editMeetingDescriptor details to edit the meeting with","lastModifiedDate":"2023-10-18"},{"lineNumber":62,"author":{"gitId":"s-peiran"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":63,"author":{"gitId":"jonyeokj"},"content":"    public EditMeetingCommand(Index index, EditMeetingDescriptor editMeetingDescriptor) {","lastModifiedDate":"2023-10-13"},{"lineNumber":64,"author":{"gitId":"jonyeokj"},"content":"        requireNonNull(index);","lastModifiedDate":"2023-10-13"},{"lineNumber":65,"author":{"gitId":"jonyeokj"},"content":"        requireNonNull(editMeetingDescriptor);","lastModifiedDate":"2023-10-13"},{"lineNumber":66,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":67,"author":{"gitId":"jonyeokj"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-10-13"},{"lineNumber":68,"author":{"gitId":"jonyeokj"},"content":"        this.editMeetingDescriptor \u003d new EditMeetingDescriptor(editMeetingDescriptor);","lastModifiedDate":"2023-10-13"},{"lineNumber":69,"author":{"gitId":"jonyeokj"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":70,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":71,"author":{"gitId":"jonyeokj"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":72,"author":{"gitId":"s-peiran"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-13"},{"lineNumber":73,"author":{"gitId":"jonyeokj"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-13"},{"lineNumber":74,"author":{"gitId":"jonyeokj"},"content":"        List\u003cMeeting\u003e lastShownList \u003d model.getFilteredMeetingList();","lastModifiedDate":"2023-10-13"},{"lineNumber":75,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":76,"author":{"gitId":"jonyeokj"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-10-13"},{"lineNumber":77,"author":{"gitId":"jonyeokj"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_MEETING_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-13"},{"lineNumber":78,"author":{"gitId":"jonyeokj"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":79,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":80,"author":{"gitId":"jonyeokj"},"content":"        Meeting meetingToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2023-10-13"},{"lineNumber":81,"author":{"gitId":"jonyeokj"},"content":"        Meeting editedMeeting \u003d createEditedMeeting(meetingToEdit, editMeetingDescriptor);","lastModifiedDate":"2023-10-13"},{"lineNumber":82,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":83,"author":{"gitId":"jonyeokj"},"content":"        if (!meetingToEdit.equals(editedMeeting) \u0026\u0026 model.hasMeeting(editedMeeting)) {","lastModifiedDate":"2023-10-18"},{"lineNumber":84,"author":{"gitId":"jonyeokj"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_MEETING);","lastModifiedDate":"2023-10-13"},{"lineNumber":85,"author":{"gitId":"jonyeokj"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":86,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":87,"author":{"gitId":"jonyeokj"},"content":"        model.setMeeting(meetingToEdit, editedMeeting);","lastModifiedDate":"2023-10-13"},{"lineNumber":88,"author":{"gitId":"jonyeokj"},"content":"        model.updateFilteredMeetingList(PREDICATE_SHOW_ALL_MEETINGS);","lastModifiedDate":"2023-10-13"},{"lineNumber":89,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":90,"author":{"gitId":"jonyeokj"},"content":"        AppState appState \u003d AppState.getInstance();","lastModifiedDate":"2023-11-02"},{"lineNumber":91,"author":{"gitId":"jonyeokj"},"content":"        appState.setMeeting(editedMeeting);","lastModifiedDate":"2023-11-02"},{"lineNumber":92,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":93,"author":{"gitId":"jonyeokj"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_MEETING_SUCCESS,","lastModifiedDate":"2023-10-17"},{"lineNumber":94,"author":{"gitId":"jonyeokj"},"content":"            Messages.formatMeeting(editedMeeting)), false, false);","lastModifiedDate":"2023-11-02"},{"lineNumber":95,"author":{"gitId":"jonyeokj"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":96,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":97,"author":{"gitId":"jonyeokj"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":98,"author":{"gitId":"jonyeokj"},"content":"     * Creates and returns a {@code Meeting} with the details of {@code meetingtToEdit}","lastModifiedDate":"2023-10-13"},{"lineNumber":99,"author":{"gitId":"jonyeokj"},"content":"     * edited with {@code editMeetingDescriptor}.","lastModifiedDate":"2023-10-13"},{"lineNumber":100,"author":{"gitId":"jonyeokj"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":101,"author":{"gitId":"jonyeokj"},"content":"    private static Meeting createEditedMeeting(Meeting meetingToEdit, EditMeetingDescriptor editMeetingDescriptor) {","lastModifiedDate":"2023-10-13"},{"lineNumber":102,"author":{"gitId":"jonyeokj"},"content":"        assert meetingToEdit !\u003d null;","lastModifiedDate":"2023-10-13"},{"lineNumber":103,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":104,"author":{"gitId":"jonyeokj"},"content":"        Title updatedTitle \u003d editMeetingDescriptor.getTitle().orElse(meetingToEdit.getTitle());","lastModifiedDate":"2023-10-13"},{"lineNumber":105,"author":{"gitId":"jonyeokj"},"content":"        Time updatedTime \u003d editMeetingDescriptor.getTime().orElse(meetingToEdit.getTime());","lastModifiedDate":"2023-10-13"},{"lineNumber":106,"author":{"gitId":"jonyeokj"},"content":"        Place updatedPlace \u003d editMeetingDescriptor.getPlace().orElse(meetingToEdit.getPlace());","lastModifiedDate":"2023-10-13"},{"lineNumber":107,"author":{"gitId":"jonyeokj"},"content":"        Description updatedDescription \u003d editMeetingDescriptor.getDescription().orElse(meetingToEdit.getDescription());","lastModifiedDate":"2023-10-13"},{"lineNumber":108,"author":{"gitId":"jacobcuison"},"content":"        Set\u003cNote\u003e updatedNotes \u003d editMeetingDescriptor.getNotes().orElse(meetingToEdit.getNotes());","lastModifiedDate":"2023-10-18"},{"lineNumber":109,"author":{"gitId":"s-peiran"},"content":"        ArrayList\u003cContact\u003e updatedContacts \u003d editMeetingDescriptor.getContacts().orElse(meetingToEdit.getContacts());","lastModifiedDate":"2023-10-24"},{"lineNumber":110,"author":{"gitId":"s-peiran"},"content":"        return new Meeting(updatedTitle, updatedTime, updatedPlace, updatedDescription, updatedNotes, updatedContacts);","lastModifiedDate":"2023-10-24"},{"lineNumber":111,"author":{"gitId":"s-peiran"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":112,"author":{"gitId":"s-peiran"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":113,"author":{"gitId":"s-peiran"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":114,"author":{"gitId":"s-peiran"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-13"},{"lineNumber":115,"author":{"gitId":"s-peiran"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-13"},{"lineNumber":116,"author":{"gitId":"s-peiran"},"content":"            return true;","lastModifiedDate":"2023-10-13"},{"lineNumber":117,"author":{"gitId":"s-peiran"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":118,"author":{"gitId":"s-peiran"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":119,"author":{"gitId":"s-peiran"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-13"},{"lineNumber":120,"author":{"gitId":"jonyeokj"},"content":"        if (!(other instanceof EditMeetingCommand)) {","lastModifiedDate":"2023-10-18"},{"lineNumber":121,"author":{"gitId":"s-peiran"},"content":"            return false;","lastModifiedDate":"2023-10-13"},{"lineNumber":122,"author":{"gitId":"s-peiran"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":123,"author":{"gitId":"s-peiran"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":124,"author":{"gitId":"jonyeokj"},"content":"        EditMeetingCommand otherEditMeetingCommand \u003d (EditMeetingCommand) other;","lastModifiedDate":"2023-10-13"},{"lineNumber":125,"author":{"gitId":"jonyeokj"},"content":"        return index.equals(otherEditMeetingCommand.index)","lastModifiedDate":"2023-10-13"},{"lineNumber":126,"author":{"gitId":"jonyeokj"},"content":"            \u0026\u0026 editMeetingDescriptor.equals(otherEditMeetingCommand.editMeetingDescriptor);","lastModifiedDate":"2023-10-13"},{"lineNumber":127,"author":{"gitId":"jonyeokj"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":128,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":129,"author":{"gitId":"jonyeokj"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":130,"author":{"gitId":"jonyeokj"},"content":"    public String toString() {","lastModifiedDate":"2023-10-13"},{"lineNumber":131,"author":{"gitId":"jonyeokj"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-10-13"},{"lineNumber":132,"author":{"gitId":"jonyeokj"},"content":"            .add(\"index\", index)","lastModifiedDate":"2023-10-13"},{"lineNumber":133,"author":{"gitId":"jonyeokj"},"content":"            .add(\"editMeetingDescriptor\", editMeetingDescriptor)","lastModifiedDate":"2023-10-13"},{"lineNumber":134,"author":{"gitId":"jonyeokj"},"content":"            .toString();","lastModifiedDate":"2023-10-13"},{"lineNumber":135,"author":{"gitId":"jonyeokj"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":136,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":137,"author":{"gitId":"jonyeokj"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":138,"author":{"gitId":"jonyeokj"},"content":"     * Stores the details to edit the meeting with. Each non-empty field value will replace the","lastModifiedDate":"2023-10-13"},{"lineNumber":139,"author":{"gitId":"jonyeokj"},"content":"     * corresponding field value of the meeting.","lastModifiedDate":"2023-10-13"},{"lineNumber":140,"author":{"gitId":"jonyeokj"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":141,"author":{"gitId":"jonyeokj"},"content":"    public static class EditMeetingDescriptor {","lastModifiedDate":"2023-10-13"},{"lineNumber":142,"author":{"gitId":"jonyeokj"},"content":"        private Title title;","lastModifiedDate":"2023-10-13"},{"lineNumber":143,"author":{"gitId":"jonyeokj"},"content":"        private Time time;","lastModifiedDate":"2023-10-13"},{"lineNumber":144,"author":{"gitId":"jonyeokj"},"content":"        private Place place;","lastModifiedDate":"2023-10-13"},{"lineNumber":145,"author":{"gitId":"jonyeokj"},"content":"        private Description description;","lastModifiedDate":"2023-10-13"},{"lineNumber":146,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":147,"author":{"gitId":"jacobcuison"},"content":"        private Set\u003cNote\u003e notes;","lastModifiedDate":"2023-10-18"},{"lineNumber":148,"author":{"gitId":"s-peiran"},"content":"        private ArrayList\u003cContact\u003e contacts;","lastModifiedDate":"2023-10-24"},{"lineNumber":149,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":150,"author":{"gitId":"jonyeokj"},"content":"        public EditMeetingDescriptor() {","lastModifiedDate":"2023-10-13"},{"lineNumber":151,"author":{"gitId":"jonyeokj"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":152,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":153,"author":{"gitId":"jonyeokj"},"content":"        /**","lastModifiedDate":"2023-10-13"},{"lineNumber":154,"author":{"gitId":"jonyeokj"},"content":"         * Copy constructor.","lastModifiedDate":"2023-10-13"},{"lineNumber":155,"author":{"gitId":"jonyeokj"},"content":"         */","lastModifiedDate":"2023-10-13"},{"lineNumber":156,"author":{"gitId":"jonyeokj"},"content":"        public EditMeetingDescriptor(EditMeetingDescriptor toCopy) {","lastModifiedDate":"2023-10-13"},{"lineNumber":157,"author":{"gitId":"jonyeokj"},"content":"            setTitle(toCopy.title);","lastModifiedDate":"2023-10-13"},{"lineNumber":158,"author":{"gitId":"jonyeokj"},"content":"            setTime(toCopy.time);","lastModifiedDate":"2023-10-13"},{"lineNumber":159,"author":{"gitId":"jonyeokj"},"content":"            setPlace(toCopy.place);","lastModifiedDate":"2023-10-13"},{"lineNumber":160,"author":{"gitId":"jonyeokj"},"content":"            setDescription(toCopy.description);","lastModifiedDate":"2023-10-13"},{"lineNumber":161,"author":{"gitId":"jacobcuison"},"content":"            setNotes(toCopy.notes);","lastModifiedDate":"2023-10-18"},{"lineNumber":162,"author":{"gitId":"s-peiran"},"content":"            setContacts(toCopy.contacts);","lastModifiedDate":"2023-10-24"},{"lineNumber":163,"author":{"gitId":"jonyeokj"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":164,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":165,"author":{"gitId":"jonyeokj"},"content":"        /**","lastModifiedDate":"2023-10-13"},{"lineNumber":166,"author":{"gitId":"jonyeokj"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2023-10-13"},{"lineNumber":167,"author":{"gitId":"jonyeokj"},"content":"         */","lastModifiedDate":"2023-10-13"},{"lineNumber":168,"author":{"gitId":"jonyeokj"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2023-10-13"},{"lineNumber":169,"author":{"gitId":"jonyeokj"},"content":"            return CollectionUtil.isAnyNonNull(title, time, place, description);","lastModifiedDate":"2023-10-13"},{"lineNumber":170,"author":{"gitId":"jonyeokj"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":171,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":172,"author":{"gitId":"jonyeokj"},"content":"        public void setTitle(Title title) {","lastModifiedDate":"2023-10-13"},{"lineNumber":173,"author":{"gitId":"jonyeokj"},"content":"            this.title \u003d title;","lastModifiedDate":"2023-10-13"},{"lineNumber":174,"author":{"gitId":"jonyeokj"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":175,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":176,"author":{"gitId":"jonyeokj"},"content":"        public Optional\u003cTitle\u003e getTitle() {","lastModifiedDate":"2023-10-13"},{"lineNumber":177,"author":{"gitId":"jonyeokj"},"content":"            return Optional.ofNullable(title);","lastModifiedDate":"2023-10-13"},{"lineNumber":178,"author":{"gitId":"jonyeokj"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":179,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":180,"author":{"gitId":"jonyeokj"},"content":"        public void setTime(Time time) {","lastModifiedDate":"2023-10-13"},{"lineNumber":181,"author":{"gitId":"jonyeokj"},"content":"            this.time \u003d time;","lastModifiedDate":"2023-10-13"},{"lineNumber":182,"author":{"gitId":"jonyeokj"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":183,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":184,"author":{"gitId":"jonyeokj"},"content":"        public Optional\u003cTime\u003e getTime() {","lastModifiedDate":"2023-10-13"},{"lineNumber":185,"author":{"gitId":"jonyeokj"},"content":"            return Optional.ofNullable(time);","lastModifiedDate":"2023-10-13"},{"lineNumber":186,"author":{"gitId":"jonyeokj"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":187,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":188,"author":{"gitId":"jonyeokj"},"content":"        public void setPlace(Place place) {","lastModifiedDate":"2023-10-13"},{"lineNumber":189,"author":{"gitId":"jonyeokj"},"content":"            this.place \u003d place;","lastModifiedDate":"2023-10-13"},{"lineNumber":190,"author":{"gitId":"jonyeokj"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":191,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":192,"author":{"gitId":"jonyeokj"},"content":"        public Optional\u003cPlace\u003e getPlace() {","lastModifiedDate":"2023-10-13"},{"lineNumber":193,"author":{"gitId":"jonyeokj"},"content":"            return Optional.ofNullable(place);","lastModifiedDate":"2023-10-13"},{"lineNumber":194,"author":{"gitId":"jonyeokj"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":195,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":196,"author":{"gitId":"jonyeokj"},"content":"        public void setDescription(Description description) {","lastModifiedDate":"2023-10-13"},{"lineNumber":197,"author":{"gitId":"jonyeokj"},"content":"            this.description \u003d description;","lastModifiedDate":"2023-10-13"},{"lineNumber":198,"author":{"gitId":"jonyeokj"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":199,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":200,"author":{"gitId":"jonyeokj"},"content":"        public Optional\u003cDescription\u003e getDescription() {","lastModifiedDate":"2023-10-13"},{"lineNumber":201,"author":{"gitId":"jonyeokj"},"content":"            return Optional.ofNullable(description);","lastModifiedDate":"2023-10-13"},{"lineNumber":202,"author":{"gitId":"jonyeokj"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":203,"author":{"gitId":"s-peiran"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":204,"author":{"gitId":"jacobcuison"},"content":"        /**","lastModifiedDate":"2023-10-18"},{"lineNumber":205,"author":{"gitId":"jacobcuison"},"content":"         * Sets {@code notes} to this object\u0027s {@code notes}.","lastModifiedDate":"2023-10-18"},{"lineNumber":206,"author":{"gitId":"jacobcuison"},"content":"         * A defensive copy of {@code notes} is used internally.","lastModifiedDate":"2023-10-18"},{"lineNumber":207,"author":{"gitId":"jacobcuison"},"content":"         */","lastModifiedDate":"2023-10-18"},{"lineNumber":208,"author":{"gitId":"jacobcuison"},"content":"        public void setNotes(Set\u003cNote\u003e notes) {","lastModifiedDate":"2023-10-18"},{"lineNumber":209,"author":{"gitId":"jacobcuison"},"content":"            this.notes \u003d (notes !\u003d null) ? new LinkedHashSet\u003c\u003e(notes) : null;","lastModifiedDate":"2023-11-02"},{"lineNumber":210,"author":{"gitId":"jacobcuison"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":211,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":212,"author":{"gitId":"jacobcuison"},"content":"        /**","lastModifiedDate":"2023-10-18"},{"lineNumber":213,"author":{"gitId":"jacobcuison"},"content":"         * Returns an unmodifiable note set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2023-10-18"},{"lineNumber":214,"author":{"gitId":"jacobcuison"},"content":"         * if modification is attempted.","lastModifiedDate":"2023-10-18"},{"lineNumber":215,"author":{"gitId":"jacobcuison"},"content":"         * Returns {@code Optional#empty()} if {@code notes} is null.","lastModifiedDate":"2023-10-18"},{"lineNumber":216,"author":{"gitId":"jacobcuison"},"content":"         */","lastModifiedDate":"2023-10-18"},{"lineNumber":217,"author":{"gitId":"jacobcuison"},"content":"        public Optional\u003cSet\u003cNote\u003e\u003e getNotes() {","lastModifiedDate":"2023-10-18"},{"lineNumber":218,"author":{"gitId":"jacobcuison"},"content":"            return (notes !\u003d null) ? Optional.of(Collections.unmodifiableSet(notes)) : Optional.empty();","lastModifiedDate":"2023-10-18"},{"lineNumber":219,"author":{"gitId":"jacobcuison"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":220,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":221,"author":{"gitId":"s-peiran"},"content":"        public void setContacts(ArrayList\u003cContact\u003e contacts) {","lastModifiedDate":"2023-10-24"},{"lineNumber":222,"author":{"gitId":"s-peiran"},"content":"            this.contacts \u003d (contacts !\u003d null) ? new ArrayList\u003c\u003e(contacts) : null;","lastModifiedDate":"2023-10-24"},{"lineNumber":223,"author":{"gitId":"s-peiran"},"content":"        }","lastModifiedDate":"2023-10-24"},{"lineNumber":224,"author":{"gitId":"s-peiran"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":225,"author":{"gitId":"s-peiran"},"content":"        public Optional\u003cArrayList\u003cContact\u003e\u003e getContacts() {","lastModifiedDate":"2023-10-24"},{"lineNumber":226,"author":{"gitId":"s-peiran"},"content":"            return (contacts !\u003d null)","lastModifiedDate":"2023-10-24"},{"lineNumber":227,"author":{"gitId":"s-peiran"},"content":"                ? Optional.of(new ArrayList\u003cContact\u003e(Collections.unmodifiableList(contacts)))","lastModifiedDate":"2023-10-24"},{"lineNumber":228,"author":{"gitId":"s-peiran"},"content":"                : Optional.empty();","lastModifiedDate":"2023-10-24"},{"lineNumber":229,"author":{"gitId":"s-peiran"},"content":"        }","lastModifiedDate":"2023-10-24"},{"lineNumber":230,"author":{"gitId":"s-peiran"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":231,"author":{"gitId":"jonyeokj"},"content":"        @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":232,"author":{"gitId":"jonyeokj"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2023-10-13"},{"lineNumber":233,"author":{"gitId":"jonyeokj"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-13"},{"lineNumber":234,"author":{"gitId":"jonyeokj"},"content":"                return true;","lastModifiedDate":"2023-10-13"},{"lineNumber":235,"author":{"gitId":"jonyeokj"},"content":"            }","lastModifiedDate":"2023-10-13"},{"lineNumber":236,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":237,"author":{"gitId":"jonyeokj"},"content":"            // instanceof handles nulls","lastModifiedDate":"2023-10-13"},{"lineNumber":238,"author":{"gitId":"jonyeokj"},"content":"            if (!(other instanceof EditMeetingDescriptor)) {","lastModifiedDate":"2023-10-13"},{"lineNumber":239,"author":{"gitId":"jonyeokj"},"content":"                return false;","lastModifiedDate":"2023-10-13"},{"lineNumber":240,"author":{"gitId":"jonyeokj"},"content":"            }","lastModifiedDate":"2023-10-13"},{"lineNumber":241,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":242,"author":{"gitId":"jonyeokj"},"content":"            EditMeetingDescriptor otherEditMeetingDescriptor \u003d (EditMeetingDescriptor) other;","lastModifiedDate":"2023-10-13"},{"lineNumber":243,"author":{"gitId":"jonyeokj"},"content":"            return Objects.equals(title, otherEditMeetingDescriptor.title)","lastModifiedDate":"2023-10-13"},{"lineNumber":244,"author":{"gitId":"jonyeokj"},"content":"                \u0026\u0026 Objects.equals(time, otherEditMeetingDescriptor.time)","lastModifiedDate":"2023-10-13"},{"lineNumber":245,"author":{"gitId":"jonyeokj"},"content":"                \u0026\u0026 Objects.equals(place, otherEditMeetingDescriptor.place)","lastModifiedDate":"2023-10-13"},{"lineNumber":246,"author":{"gitId":"jonyeokj"},"content":"                \u0026\u0026 Objects.equals(description, otherEditMeetingDescriptor.description);","lastModifiedDate":"2023-10-13"},{"lineNumber":247,"author":{"gitId":"s-peiran"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":248,"author":{"gitId":"s-peiran"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":249,"author":{"gitId":"s-peiran"},"content":"        @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":250,"author":{"gitId":"s-peiran"},"content":"        public String toString() {","lastModifiedDate":"2023-10-13"},{"lineNumber":251,"author":{"gitId":"s-peiran"},"content":"            return new ToStringBuilder(this)","lastModifiedDate":"2023-10-13"},{"lineNumber":252,"author":{"gitId":"jonyeokj"},"content":"                .add(\"title\", title)","lastModifiedDate":"2023-10-13"},{"lineNumber":253,"author":{"gitId":"jonyeokj"},"content":"                .add(\"time\", time)","lastModifiedDate":"2023-10-13"},{"lineNumber":254,"author":{"gitId":"jonyeokj"},"content":"                .add(\"place\", place)","lastModifiedDate":"2023-10-13"},{"lineNumber":255,"author":{"gitId":"jonyeokj"},"content":"                .add(\"description\", description)","lastModifiedDate":"2023-10-13"},{"lineNumber":256,"author":{"gitId":"s-peiran"},"content":"                .toString();","lastModifiedDate":"2023-10-13"},{"lineNumber":257,"author":{"gitId":"s-peiran"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":258,"author":{"gitId":"s-peiran"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":259,"author":{"gitId":"jonyeokj"},"content":"}","lastModifiedDate":"2023-10-13"}],"authorContributionMap":{"jonyeokj":183,"jacobcuison":24,"s-peiran":51,"chiayunrong":1}},{"path":"src/main/java/seedu/address/logic/commands/FindContactCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"jacobcuison"},"content":"import seedu.address.model.contact.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-10-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"jacobcuison"},"content":" * Finds and lists all contacts in address book whose name contains any of the argument keywords.","lastModifiedDate":"2023-10-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Keyword matching is case insensitive.","lastModifiedDate":"2018-04-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"jacobcuison"},"content":"public class FindContactCommand extends Command {","lastModifiedDate":"2023-10-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"find\";","lastModifiedDate":"2023-10-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":18,"author":{"gitId":"jacobcuison"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all contacts whose names contain any of \"","lastModifiedDate":"2023-10-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"the specified keywords (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2018-04-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"Parameters: KEYWORD [MORE_KEYWORDS]...\\n\"","lastModifiedDate":"2016-09-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" alice bob charlie\";","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final NameContainsKeywordsPredicate predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":25,"author":{"gitId":"jacobcuison"},"content":"    public FindContactCommand(NameContainsKeywordsPredicate predicate) {","lastModifiedDate":"2023-10-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":32,"author":{"gitId":"jacobcuison"},"content":"        model.updateFilteredContactList(predicate);","lastModifiedDate":"2023-10-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return new CommandResult(","lastModifiedDate":"2018-04-01"},{"lineNumber":34,"author":{"gitId":"jonyeokj"},"content":"                String.format(Messages.MESSAGE_CONTACTS_LISTED_OVERVIEW, model.getFilteredContactList().size()));","lastModifiedDate":"2023-10-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":44,"author":{"gitId":"jacobcuison"},"content":"        if (!(other instanceof FindContactCommand)) {","lastModifiedDate":"2023-10-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":48,"author":{"gitId":"jacobcuison"},"content":"        FindContactCommand otherFindContactCommand \u003d (FindContactCommand) other;","lastModifiedDate":"2023-10-03"},{"lineNumber":49,"author":{"gitId":"jacobcuison"},"content":"        return predicate.equals(otherFindContactCommand.predicate);","lastModifiedDate":"2023-10-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"                .add(\"predicate\", predicate)","lastModifiedDate":"2019-02-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"jonyeokj":1,"jacobcuison":9,"-":48}},{"path":"src/main/java/seedu/address/logic/commands/ListContactCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":6,"author":{"gitId":"s-peiran"},"content":"import seedu.address.model.contact.ContactFilterPredicate;","lastModifiedDate":"2023-10-31"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"jacobcuison"},"content":" * Lists all contacts in the address book to the user.","lastModifiedDate":"2023-10-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"jacobcuison"},"content":"public class ListContactCommand extends Command {","lastModifiedDate":"2023-10-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"chiayunrong"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2023-10-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"jonyeokj"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all contacts.\";","lastModifiedDate":"2023-10-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"s-peiran"},"content":"    private final ContactFilterPredicate predicate;","lastModifiedDate":"2023-10-31"},{"lineNumber":18,"author":{"gitId":"s-peiran"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":19,"author":{"gitId":"s-peiran"},"content":"    public ListContactCommand(ContactFilterPredicate predicate) {","lastModifiedDate":"2023-10-31"},{"lineNumber":20,"author":{"gitId":"s-peiran"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2023-10-31"},{"lineNumber":21,"author":{"gitId":"s-peiran"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":22,"author":{"gitId":"s-peiran"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":26,"author":{"gitId":"s-peiran"},"content":"        model.updateFilteredContactList(predicate);","lastModifiedDate":"2023-10-31"},{"lineNumber":27,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":28,"author":{"gitId":"jonyeokj"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2023-11-02"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"jonyeokj":3,"jacobcuison":2,"s-peiran":8,"chiayunrong":1,"-":16}},{"path":"src/main/java/seedu/address/logic/commands/ListMeetingCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jonyeokj"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-18"},{"lineNumber":2,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":3,"author":{"gitId":"jonyeokj"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-18"},{"lineNumber":4,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":5,"author":{"gitId":"s-peiran"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-31"},{"lineNumber":6,"author":{"gitId":"jonyeokj"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-18"},{"lineNumber":7,"author":{"gitId":"s-peiran"},"content":"import seedu.address.model.meeting.MeetingFilterPredicate;","lastModifiedDate":"2023-10-31"},{"lineNumber":8,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":9,"author":{"gitId":"jonyeokj"},"content":"/**","lastModifiedDate":"2023-10-18"},{"lineNumber":10,"author":{"gitId":"jonyeokj"},"content":" * Lists all meetings in the address book to the user.","lastModifiedDate":"2023-10-18"},{"lineNumber":11,"author":{"gitId":"jonyeokj"},"content":" */","lastModifiedDate":"2023-10-18"},{"lineNumber":12,"author":{"gitId":"jonyeokj"},"content":"public class ListMeetingCommand extends Command {","lastModifiedDate":"2023-10-18"},{"lineNumber":13,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":14,"author":{"gitId":"chiayunrong"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2023-10-26"},{"lineNumber":15,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":16,"author":{"gitId":"jonyeokj"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all meetings.\";","lastModifiedDate":"2023-10-18"},{"lineNumber":17,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":18,"author":{"gitId":"s-peiran"},"content":"    private final MeetingFilterPredicate predicate;","lastModifiedDate":"2023-10-31"},{"lineNumber":19,"author":{"gitId":"s-peiran"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":20,"author":{"gitId":"s-peiran"},"content":"    public ListMeetingCommand(MeetingFilterPredicate predicate) {","lastModifiedDate":"2023-10-31"},{"lineNumber":21,"author":{"gitId":"s-peiran"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2023-10-31"},{"lineNumber":22,"author":{"gitId":"s-peiran"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":23,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":24,"author":{"gitId":"jonyeokj"},"content":"    @Override","lastModifiedDate":"2023-10-18"},{"lineNumber":25,"author":{"gitId":"jonyeokj"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2023-10-18"},{"lineNumber":26,"author":{"gitId":"jonyeokj"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-18"},{"lineNumber":27,"author":{"gitId":"s-peiran"},"content":"        model.updateFilteredMeetingList(predicate);","lastModifiedDate":"2023-10-31"},{"lineNumber":28,"author":{"gitId":"s-peiran"},"content":"        return new CommandResult(String.format(Messages.MESSAGE_MEETINGS_LISTED_OVERVIEW,","lastModifiedDate":"2023-10-31"},{"lineNumber":29,"author":{"gitId":"s-peiran"},"content":"            model.getFilteredMeetingList().size()));","lastModifiedDate":"2023-10-31"},{"lineNumber":30,"author":{"gitId":"jonyeokj"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":31,"author":{"gitId":"jonyeokj"},"content":"}","lastModifiedDate":"2023-10-18"}],"authorContributionMap":{"jonyeokj":20,"s-peiran":10,"chiayunrong":1}},{"path":"src/main/java/seedu/address/logic/commands/ModeCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chiayunrong"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-26"},{"lineNumber":2,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":3,"author":{"gitId":"chiayunrong"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-26"},{"lineNumber":4,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":5,"author":{"gitId":"chiayunrong"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-26"},{"lineNumber":6,"author":{"gitId":"chiayunrong"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-26"},{"lineNumber":7,"author":{"gitId":"jonyeokj"},"content":"import seedu.address.ui.AppState;","lastModifiedDate":"2023-11-02"},{"lineNumber":8,"author":{"gitId":"jonyeokj"},"content":"import seedu.address.ui.AppState.ListType;","lastModifiedDate":"2023-11-02"},{"lineNumber":9,"author":{"gitId":"jonyeokj"},"content":"import seedu.address.ui.AppState.ModeType;","lastModifiedDate":"2023-11-02"},{"lineNumber":10,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":11,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":12,"author":{"gitId":"chiayunrong"},"content":"/**","lastModifiedDate":"2023-10-26"},{"lineNumber":13,"author":{"gitId":"chiayunrong"},"content":" * Toggles the mode of Notenote between contacts and meetings mode.","lastModifiedDate":"2023-10-26"},{"lineNumber":14,"author":{"gitId":"chiayunrong"},"content":" */","lastModifiedDate":"2023-10-26"},{"lineNumber":15,"author":{"gitId":"chiayunrong"},"content":"public class ModeCommand extends Command {","lastModifiedDate":"2023-10-26"},{"lineNumber":16,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":17,"author":{"gitId":"chiayunrong"},"content":"    public static final String COMMAND_WORD \u003d \"mode\";","lastModifiedDate":"2023-10-26"},{"lineNumber":18,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":19,"author":{"gitId":"chiayunrong"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Application mode set: %1$s\";","lastModifiedDate":"2023-10-26"},{"lineNumber":20,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":21,"author":{"gitId":"chiayunrong"},"content":"    @Override","lastModifiedDate":"2023-10-26"},{"lineNumber":22,"author":{"gitId":"chiayunrong"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-26"},{"lineNumber":23,"author":{"gitId":"chiayunrong"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-26"},{"lineNumber":24,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":25,"author":{"gitId":"jonyeokj"},"content":"        AppState appState \u003d AppState.getInstance();","lastModifiedDate":"2023-11-02"},{"lineNumber":26,"author":{"gitId":"jonyeokj"},"content":"        appState.changeMode();","lastModifiedDate":"2023-11-02"},{"lineNumber":27,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":28,"author":{"gitId":"jonyeokj"},"content":"        ModeType mode \u003d appState.getModeType();","lastModifiedDate":"2023-11-02"},{"lineNumber":29,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":30,"author":{"gitId":"chiayunrong"},"content":"        if (mode \u003d\u003d ModeType.CONTACTS) {","lastModifiedDate":"2023-10-26"},{"lineNumber":31,"author":{"gitId":"chiayunrong"},"content":"            model.updateFilteredContactList(Model.PREDICATE_SHOW_ALL_CONTACTS);","lastModifiedDate":"2023-10-26"},{"lineNumber":32,"author":{"gitId":"jonyeokj"},"content":"            appState.setListType(ListType.CONTACTS);","lastModifiedDate":"2023-11-02"},{"lineNumber":33,"author":{"gitId":"jonyeokj"},"content":"            return new CommandResult(String.format(MESSAGE_SUCCESS, mode.toString()));","lastModifiedDate":"2023-11-02"},{"lineNumber":34,"author":{"gitId":"chiayunrong"},"content":"        } else {","lastModifiedDate":"2023-10-26"},{"lineNumber":35,"author":{"gitId":"chiayunrong"},"content":"            model.updateFilteredMeetingList(Model.PREDICATE_SHOW_ALL_MEETINGS);","lastModifiedDate":"2023-10-26"},{"lineNumber":36,"author":{"gitId":"jonyeokj"},"content":"            appState.setListType(ListType.MEETINGS);","lastModifiedDate":"2023-11-02"},{"lineNumber":37,"author":{"gitId":"jonyeokj"},"content":"            return new CommandResult(String.format(MESSAGE_SUCCESS, mode.toString()));","lastModifiedDate":"2023-11-02"},{"lineNumber":38,"author":{"gitId":"chiayunrong"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":39,"author":{"gitId":"chiayunrong"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":40,"author":{"gitId":"chiayunrong"},"content":"}","lastModifiedDate":"2023-10-26"}],"authorContributionMap":{"jonyeokj":13,"chiayunrong":27}},{"path":"src/main/java/seedu/address/logic/commands/ViewContactCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chiayunrong"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-17"},{"lineNumber":2,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":3,"author":{"gitId":"chiayunrong"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"chiayunrong"},"content":"import java.util.List;","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"chiayunrong"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"chiayunrong"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"chiayunrong"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"chiayunrong"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"chiayunrong"},"content":"import seedu.address.logic.parser.CliSyntax;","lastModifiedDate":"2023-11-02"},{"lineNumber":12,"author":{"gitId":"chiayunrong"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"chiayunrong"},"content":"import seedu.address.model.contact.Contact;","lastModifiedDate":"2023-10-17"},{"lineNumber":14,"author":{"gitId":"jonyeokj"},"content":"import seedu.address.ui.AppState;","lastModifiedDate":"2023-11-02"},{"lineNumber":15,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"chiayunrong"},"content":"/**","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"chiayunrong"},"content":" * Shows a Contact identified using its id from the address book.","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"chiayunrong"},"content":" */","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"chiayunrong"},"content":"public class ViewContactCommand extends Command {","lastModifiedDate":"2023-10-17"},{"lineNumber":20,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":21,"author":{"gitId":"chiayunrong"},"content":"    public static final String COMMAND_WORD \u003d \"view\";","lastModifiedDate":"2023-10-26"},{"lineNumber":22,"author":{"gitId":"chiayunrong"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2023-10-17"},{"lineNumber":23,"author":{"gitId":"chiayunrong"},"content":"            + \": Shows the details of the contact identified by its id in the displayed contact list.\\n\"","lastModifiedDate":"2023-10-17"},{"lineNumber":24,"author":{"gitId":"chiayunrong"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2023-10-17"},{"lineNumber":25,"author":{"gitId":"chiayunrong"},"content":"            + \"Example: \" + COMMAND_WORD + \" \" + CliSyntax.PREFIX_INDEX + \" 1\";","lastModifiedDate":"2023-11-02"},{"lineNumber":26,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":27,"author":{"gitId":"chiayunrong"},"content":"    public static final String MESSAGE_VIEW_CONTACT_SUCCESS \u003d \"Showing Contact Note: %1$s\";","lastModifiedDate":"2023-10-17"},{"lineNumber":28,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":29,"author":{"gitId":"chiayunrong"},"content":"    private final Index targetIndex;","lastModifiedDate":"2023-10-17"},{"lineNumber":30,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":31,"author":{"gitId":"chiayunrong"},"content":"    public ViewContactCommand(Index targetIndex) {","lastModifiedDate":"2023-10-17"},{"lineNumber":32,"author":{"gitId":"chiayunrong"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2023-10-17"},{"lineNumber":33,"author":{"gitId":"chiayunrong"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":34,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":35,"author":{"gitId":"chiayunrong"},"content":"    @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":36,"author":{"gitId":"chiayunrong"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-17"},{"lineNumber":37,"author":{"gitId":"chiayunrong"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-17"},{"lineNumber":38,"author":{"gitId":"chiayunrong"},"content":"        List\u003cContact\u003e lastShownList \u003d model.getFilteredContactList();","lastModifiedDate":"2023-10-17"},{"lineNumber":39,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":40,"author":{"gitId":"chiayunrong"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-10-17"},{"lineNumber":41,"author":{"gitId":"chiayunrong"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_CONTACT_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-17"},{"lineNumber":42,"author":{"gitId":"chiayunrong"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":43,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":44,"author":{"gitId":"chiayunrong"},"content":"        Contact contactToDisplay \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2023-10-17"},{"lineNumber":45,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":46,"author":{"gitId":"jonyeokj"},"content":"        AppState appState \u003d AppState.getInstance();","lastModifiedDate":"2023-11-02"},{"lineNumber":47,"author":{"gitId":"jonyeokj"},"content":"        appState.setContact(contactToDisplay);","lastModifiedDate":"2023-11-02"},{"lineNumber":48,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":49,"author":{"gitId":"jonyeokj"},"content":"        return new CommandResult(String.format(MESSAGE_VIEW_CONTACT_SUCCESS,","lastModifiedDate":"2023-11-02"},{"lineNumber":50,"author":{"gitId":"jonyeokj"},"content":"            Messages.formatContact(contactToDisplay)));","lastModifiedDate":"2023-11-02"},{"lineNumber":51,"author":{"gitId":"chiayunrong"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":52,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":53,"author":{"gitId":"chiayunrong"},"content":"    @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":54,"author":{"gitId":"chiayunrong"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-17"},{"lineNumber":55,"author":{"gitId":"chiayunrong"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-17"},{"lineNumber":56,"author":{"gitId":"chiayunrong"},"content":"            return true;","lastModifiedDate":"2023-10-17"},{"lineNumber":57,"author":{"gitId":"chiayunrong"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":58,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":59,"author":{"gitId":"chiayunrong"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-17"},{"lineNumber":60,"author":{"gitId":"chiayunrong"},"content":"        if (!(other instanceof ViewContactCommand)) {","lastModifiedDate":"2023-10-17"},{"lineNumber":61,"author":{"gitId":"chiayunrong"},"content":"            return false;","lastModifiedDate":"2023-10-17"},{"lineNumber":62,"author":{"gitId":"chiayunrong"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":63,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":64,"author":{"gitId":"chiayunrong"},"content":"        ViewContactCommand otherViewContactCommand \u003d (ViewContactCommand) other;","lastModifiedDate":"2023-10-17"},{"lineNumber":65,"author":{"gitId":"chiayunrong"},"content":"        return targetIndex.equals(otherViewContactCommand.targetIndex);","lastModifiedDate":"2023-10-17"},{"lineNumber":66,"author":{"gitId":"chiayunrong"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":67,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":68,"author":{"gitId":"chiayunrong"},"content":"    @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":69,"author":{"gitId":"chiayunrong"},"content":"    public String toString() {","lastModifiedDate":"2023-10-17"},{"lineNumber":70,"author":{"gitId":"chiayunrong"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-10-17"},{"lineNumber":71,"author":{"gitId":"chiayunrong"},"content":"                .add(\"targetIndex\", targetIndex)","lastModifiedDate":"2023-10-17"},{"lineNumber":72,"author":{"gitId":"chiayunrong"},"content":"                .toString();","lastModifiedDate":"2023-10-17"},{"lineNumber":73,"author":{"gitId":"chiayunrong"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":74,"author":{"gitId":"chiayunrong"},"content":"}","lastModifiedDate":"2023-10-17"}],"authorContributionMap":{"jonyeokj":6,"chiayunrong":68}},{"path":"src/main/java/seedu/address/logic/commands/ViewMeetingCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chiayunrong"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-17"},{"lineNumber":2,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":3,"author":{"gitId":"chiayunrong"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"s-peiran"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_INDEX;","lastModifiedDate":"2023-10-27"},{"lineNumber":5,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"chiayunrong"},"content":"import java.util.List;","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"chiayunrong"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"chiayunrong"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"chiayunrong"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"chiayunrong"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"chiayunrong"},"content":"import seedu.address.logic.parser.CliSyntax;","lastModifiedDate":"2023-11-02"},{"lineNumber":13,"author":{"gitId":"chiayunrong"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-17"},{"lineNumber":14,"author":{"gitId":"chiayunrong"},"content":"import seedu.address.model.meeting.Meeting;","lastModifiedDate":"2023-10-17"},{"lineNumber":15,"author":{"gitId":"jonyeokj"},"content":"import seedu.address.ui.AppState;","lastModifiedDate":"2023-11-02"},{"lineNumber":16,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"chiayunrong"},"content":"/**","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"chiayunrong"},"content":" * Shows a Meeting identified using its id from the address book.","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"chiayunrong"},"content":" */","lastModifiedDate":"2023-10-17"},{"lineNumber":20,"author":{"gitId":"chiayunrong"},"content":"public class ViewMeetingCommand extends Command {","lastModifiedDate":"2023-10-17"},{"lineNumber":21,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":22,"author":{"gitId":"chiayunrong"},"content":"    public static final String COMMAND_WORD \u003d \"view\";","lastModifiedDate":"2023-10-26"},{"lineNumber":23,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":24,"author":{"gitId":"chiayunrong"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2023-10-17"},{"lineNumber":25,"author":{"gitId":"chiayunrong"},"content":"            + \": Shows the details of the meeting identified by its id in the displayed meeting list.\\n\"","lastModifiedDate":"2023-10-17"},{"lineNumber":26,"author":{"gitId":"s-peiran"},"content":"            + \"Parameters: \" + PREFIX_INDEX + \" INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2023-10-27"},{"lineNumber":27,"author":{"gitId":"chiayunrong"},"content":"            + \"Example: \" + COMMAND_WORD + \" \" + CliSyntax.PREFIX_INDEX + \" 1\";","lastModifiedDate":"2023-11-02"},{"lineNumber":28,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":29,"author":{"gitId":"chiayunrong"},"content":"    public static final String MESSAGE_VIEW_MEETING_SUCCESS \u003d \"Showing Meeting: %1$s\";","lastModifiedDate":"2023-10-17"},{"lineNumber":30,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":31,"author":{"gitId":"chiayunrong"},"content":"    private final Index targetIndex;","lastModifiedDate":"2023-10-17"},{"lineNumber":32,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":33,"author":{"gitId":"chiayunrong"},"content":"    public ViewMeetingCommand(Index targetIndex) {","lastModifiedDate":"2023-10-17"},{"lineNumber":34,"author":{"gitId":"chiayunrong"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2023-10-17"},{"lineNumber":35,"author":{"gitId":"chiayunrong"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":36,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":37,"author":{"gitId":"chiayunrong"},"content":"    @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":38,"author":{"gitId":"chiayunrong"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-17"},{"lineNumber":39,"author":{"gitId":"chiayunrong"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-17"},{"lineNumber":40,"author":{"gitId":"chiayunrong"},"content":"        List\u003cMeeting\u003e lastShownList \u003d model.getFilteredMeetingList();","lastModifiedDate":"2023-10-17"},{"lineNumber":41,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":42,"author":{"gitId":"chiayunrong"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-10-17"},{"lineNumber":43,"author":{"gitId":"chiayunrong"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_MEETING_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-17"},{"lineNumber":44,"author":{"gitId":"chiayunrong"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":45,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":46,"author":{"gitId":"chiayunrong"},"content":"        Meeting meetingToDisplay \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2023-10-17"},{"lineNumber":47,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":48,"author":{"gitId":"jonyeokj"},"content":"        AppState appState \u003d AppState.getInstance();","lastModifiedDate":"2023-11-02"},{"lineNumber":49,"author":{"gitId":"jonyeokj"},"content":"        appState.setMeeting(meetingToDisplay);","lastModifiedDate":"2023-11-02"},{"lineNumber":50,"author":{"gitId":"s-peiran"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":51,"author":{"gitId":"chiayunrong"},"content":"        //todo: change display to note when it is implemented","lastModifiedDate":"2023-10-17"},{"lineNumber":52,"author":{"gitId":"s-peiran"},"content":"        return new CommandResult(String.format(MESSAGE_VIEW_MEETING_SUCCESS,","lastModifiedDate":"2023-10-25"},{"lineNumber":53,"author":{"gitId":"jonyeokj"},"content":"                Messages.formatMeeting(meetingToDisplay)));","lastModifiedDate":"2023-11-02"},{"lineNumber":54,"author":{"gitId":"chiayunrong"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":55,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":56,"author":{"gitId":"chiayunrong"},"content":"    @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":57,"author":{"gitId":"chiayunrong"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-17"},{"lineNumber":58,"author":{"gitId":"chiayunrong"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-17"},{"lineNumber":59,"author":{"gitId":"chiayunrong"},"content":"            return true;","lastModifiedDate":"2023-10-17"},{"lineNumber":60,"author":{"gitId":"chiayunrong"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":61,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":62,"author":{"gitId":"chiayunrong"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-17"},{"lineNumber":63,"author":{"gitId":"chiayunrong"},"content":"        if (!(other instanceof ViewMeetingCommand)) {","lastModifiedDate":"2023-10-17"},{"lineNumber":64,"author":{"gitId":"chiayunrong"},"content":"            return false;","lastModifiedDate":"2023-10-17"},{"lineNumber":65,"author":{"gitId":"chiayunrong"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":66,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":67,"author":{"gitId":"chiayunrong"},"content":"        ViewMeetingCommand otherViewMeetingCommand \u003d (ViewMeetingCommand) other;","lastModifiedDate":"2023-10-17"},{"lineNumber":68,"author":{"gitId":"chiayunrong"},"content":"        return targetIndex.equals(otherViewMeetingCommand.targetIndex);","lastModifiedDate":"2023-10-17"},{"lineNumber":69,"author":{"gitId":"chiayunrong"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":70,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":71,"author":{"gitId":"chiayunrong"},"content":"    @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":72,"author":{"gitId":"chiayunrong"},"content":"    public String toString() {","lastModifiedDate":"2023-10-17"},{"lineNumber":73,"author":{"gitId":"chiayunrong"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-10-17"},{"lineNumber":74,"author":{"gitId":"chiayunrong"},"content":"                .add(\"targetIndex\", targetIndex)","lastModifiedDate":"2023-10-17"},{"lineNumber":75,"author":{"gitId":"chiayunrong"},"content":"                .toString();","lastModifiedDate":"2023-10-17"},{"lineNumber":76,"author":{"gitId":"chiayunrong"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":77,"author":{"gitId":"chiayunrong"},"content":"}","lastModifiedDate":"2023-10-17"}],"authorContributionMap":{"jonyeokj":4,"s-peiran":4,"chiayunrong":69}},{"path":"src/main/java/seedu/address/logic/parser/AddContactCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-10-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-10-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-10-18"},{"lineNumber":7,"author":{"gitId":"jacobcuison"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NOTE;","lastModifiedDate":"2023-10-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-10-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-10-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":13,"author":{"gitId":"jacobcuison"},"content":"import seedu.address.logic.commands.AddContactCommand;","lastModifiedDate":"2023-10-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"jacobcuison"},"content":"import seedu.address.model.contact.Address;","lastModifiedDate":"2023-10-03"},{"lineNumber":16,"author":{"gitId":"jacobcuison"},"content":"import seedu.address.model.contact.Contact;","lastModifiedDate":"2023-10-03"},{"lineNumber":17,"author":{"gitId":"jacobcuison"},"content":"import seedu.address.model.contact.Email;","lastModifiedDate":"2023-10-03"},{"lineNumber":18,"author":{"gitId":"jacobcuison"},"content":"import seedu.address.model.contact.Name;","lastModifiedDate":"2023-10-03"},{"lineNumber":19,"author":{"gitId":"jacobcuison"},"content":"import seedu.address.model.contact.Phone;","lastModifiedDate":"2023-10-03"},{"lineNumber":20,"author":{"gitId":"jacobcuison"},"content":"import seedu.address.model.note.Note;","lastModifiedDate":"2023-10-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-17"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2017-02-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":26,"author":{"gitId":"jonyeokj"},"content":"public class AddContactCommandParser implements Parser\u003cAddContactCommand\u003e {","lastModifiedDate":"2023-10-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2017-02-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05"},{"lineNumber":33,"author":{"gitId":"jacobcuison"},"content":"    public AddContactCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":35,"author":{"gitId":"jacobcuison"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_TAG,","lastModifiedDate":"2023-10-18"},{"lineNumber":36,"author":{"gitId":"jacobcuison"},"content":"                        PREFIX_NOTE);","lastModifiedDate":"2023-10-18"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":38,"author":{"gitId":"chiayunrong"},"content":"        if (!ArgumentMultimap.arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_ADDRESS, PREFIX_PHONE, PREFIX_EMAIL)","lastModifiedDate":"2023-10-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2017-12-23"},{"lineNumber":40,"author":{"gitId":"jacobcuison"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddContactCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-17"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS);","lastModifiedDate":"2023-07-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Email email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        Address address \u003d ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2017-03-17"},{"lineNumber":49,"author":{"gitId":"jacobcuison"},"content":"        Set\u003cNote\u003e noteList \u003d ParserUtil.parseNotes(argMultimap.getAllValues(PREFIX_NOTE));","lastModifiedDate":"2023-10-18"},{"lineNumber":50,"author":{"gitId":"jacobcuison"},"content":"        Contact contact \u003d new Contact(name, phone, email, address, tagList, noteList);","lastModifiedDate":"2023-10-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":52,"author":{"gitId":"jacobcuison"},"content":"        return new AddContactCommand(contact);","lastModifiedDate":"2023-10-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":55,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"jonyeokj":1,"jacobcuison":15,"chiayunrong":2,"-":39}},{"path":"src/main/java/seedu/address/logic/parser/AddContactToMeetingCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"s-peiran"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-24"},{"lineNumber":2,"author":{"gitId":"s-peiran"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":3,"author":{"gitId":"s-peiran"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-24"},{"lineNumber":4,"author":{"gitId":"s-peiran"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-27"},{"lineNumber":5,"author":{"gitId":"s-peiran"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-10-24"},{"lineNumber":6,"author":{"gitId":"s-peiran"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TITLE;","lastModifiedDate":"2023-10-24"},{"lineNumber":7,"author":{"gitId":"s-peiran"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":8,"author":{"gitId":"s-peiran"},"content":"import seedu.address.logic.commands.AddContactToMeetingCommand;","lastModifiedDate":"2023-10-24"},{"lineNumber":9,"author":{"gitId":"s-peiran"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-24"},{"lineNumber":10,"author":{"gitId":"s-peiran"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":11,"author":{"gitId":"s-peiran"},"content":"/**","lastModifiedDate":"2023-10-24"},{"lineNumber":12,"author":{"gitId":"s-peiran"},"content":" * Parses input arguments and creates a new AddContactToMeetingCommand object","lastModifiedDate":"2023-10-24"},{"lineNumber":13,"author":{"gitId":"s-peiran"},"content":" */","lastModifiedDate":"2023-10-24"},{"lineNumber":14,"author":{"gitId":"s-peiran"},"content":"public class AddContactToMeetingCommandParser implements Parser\u003cAddContactToMeetingCommand\u003e {","lastModifiedDate":"2023-10-24"},{"lineNumber":15,"author":{"gitId":"s-peiran"},"content":"    /**","lastModifiedDate":"2023-10-24"},{"lineNumber":16,"author":{"gitId":"s-peiran"},"content":"     * Parses the given {@code String} of arguments in the context of the {@code AddContactToMeetingCommand}","lastModifiedDate":"2023-10-24"},{"lineNumber":17,"author":{"gitId":"s-peiran"},"content":"     * and returns a {@code AddContactToMeetingCommand} object for execution.","lastModifiedDate":"2023-10-24"},{"lineNumber":18,"author":{"gitId":"s-peiran"},"content":"     *","lastModifiedDate":"2023-10-24"},{"lineNumber":19,"author":{"gitId":"s-peiran"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-10-24"},{"lineNumber":20,"author":{"gitId":"s-peiran"},"content":"     */","lastModifiedDate":"2023-10-24"},{"lineNumber":21,"author":{"gitId":"s-peiran"},"content":"    public AddContactToMeetingCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-24"},{"lineNumber":22,"author":{"gitId":"s-peiran"},"content":"        requireNonNull(args);","lastModifiedDate":"2023-10-24"},{"lineNumber":23,"author":{"gitId":"s-peiran"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_TITLE);","lastModifiedDate":"2023-10-24"},{"lineNumber":24,"author":{"gitId":"s-peiran"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":25,"author":{"gitId":"s-peiran"},"content":"        String contactName \u003d argMultimap.getValue(PREFIX_NAME).orElse(\"\");","lastModifiedDate":"2023-10-24"},{"lineNumber":26,"author":{"gitId":"s-peiran"},"content":"        String meetingTitle \u003d argMultimap.getValue(PREFIX_TITLE).orElse(\"\");","lastModifiedDate":"2023-10-24"},{"lineNumber":27,"author":{"gitId":"s-peiran"},"content":"        boolean raiseException \u003d contactName.length() \u003c 1 || meetingTitle.length() \u003c 1;","lastModifiedDate":"2023-10-27"},{"lineNumber":28,"author":{"gitId":"s-peiran"},"content":"        if (raiseException) {","lastModifiedDate":"2023-10-27"},{"lineNumber":29,"author":{"gitId":"s-peiran"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-10-27"},{"lineNumber":30,"author":{"gitId":"s-peiran"},"content":"                    AddContactToMeetingCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-27"},{"lineNumber":31,"author":{"gitId":"s-peiran"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":32,"author":{"gitId":"s-peiran"},"content":"        return new AddContactToMeetingCommand(meetingTitle, contactName);","lastModifiedDate":"2023-10-24"},{"lineNumber":33,"author":{"gitId":"s-peiran"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":34,"author":{"gitId":"s-peiran"},"content":"}","lastModifiedDate":"2023-10-24"}],"authorContributionMap":{"s-peiran":34}},{"path":"src/main/java/seedu/address/logic/parser/AddMeetingCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chiayunrong"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-02"},{"lineNumber":2,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":3,"author":{"gitId":"chiayunrong"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-02"},{"lineNumber":4,"author":{"gitId":"jacobcuison"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DESCRIPTION;","lastModifiedDate":"2023-10-18"},{"lineNumber":5,"author":{"gitId":"jacobcuison"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NOTE_MEETING;","lastModifiedDate":"2023-10-18"},{"lineNumber":6,"author":{"gitId":"jacobcuison"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PLACE;","lastModifiedDate":"2023-10-18"},{"lineNumber":7,"author":{"gitId":"jacobcuison"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TIME;","lastModifiedDate":"2023-10-18"},{"lineNumber":8,"author":{"gitId":"jacobcuison"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TITLE;","lastModifiedDate":"2023-10-18"},{"lineNumber":9,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":10,"author":{"gitId":"s-peiran"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-24"},{"lineNumber":11,"author":{"gitId":"jacobcuison"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-18"},{"lineNumber":12,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":13,"author":{"gitId":"chiayunrong"},"content":"import seedu.address.logic.commands.AddMeetingCommand;","lastModifiedDate":"2023-10-02"},{"lineNumber":14,"author":{"gitId":"chiayunrong"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-02"},{"lineNumber":15,"author":{"gitId":"chiayunrong"},"content":"import seedu.address.model.meeting.Description;","lastModifiedDate":"2023-10-02"},{"lineNumber":16,"author":{"gitId":"chiayunrong"},"content":"import seedu.address.model.meeting.Meeting;","lastModifiedDate":"2023-10-02"},{"lineNumber":17,"author":{"gitId":"jonyeokj"},"content":"import seedu.address.model.meeting.Place;","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"chiayunrong"},"content":"import seedu.address.model.meeting.Time;","lastModifiedDate":"2023-10-02"},{"lineNumber":19,"author":{"gitId":"chiayunrong"},"content":"import seedu.address.model.meeting.Title;","lastModifiedDate":"2023-10-02"},{"lineNumber":20,"author":{"gitId":"jacobcuison"},"content":"import seedu.address.model.note.Note;","lastModifiedDate":"2023-10-18"},{"lineNumber":21,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":22,"author":{"gitId":"chiayunrong"},"content":"/**","lastModifiedDate":"2023-10-02"},{"lineNumber":23,"author":{"gitId":"chiayunrong"},"content":" * Parses input arguments and creates a new AddMeetingCommand object","lastModifiedDate":"2023-10-02"},{"lineNumber":24,"author":{"gitId":"chiayunrong"},"content":" */","lastModifiedDate":"2023-10-02"},{"lineNumber":25,"author":{"gitId":"chiayunrong"},"content":"public class AddMeetingCommandParser implements Parser\u003cAddMeetingCommand\u003e {","lastModifiedDate":"2023-10-02"},{"lineNumber":26,"author":{"gitId":"chiayunrong"},"content":"    /**","lastModifiedDate":"2023-10-02"},{"lineNumber":27,"author":{"gitId":"chiayunrong"},"content":"     * Parses the given {@code String} of arguments in the context of the AddMeetingCommand","lastModifiedDate":"2023-10-02"},{"lineNumber":28,"author":{"gitId":"chiayunrong"},"content":"     * and returns an AddMeetingCommand object for execution.","lastModifiedDate":"2023-10-02"},{"lineNumber":29,"author":{"gitId":"s-peiran"},"content":"     *","lastModifiedDate":"2023-10-24"},{"lineNumber":30,"author":{"gitId":"chiayunrong"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-10-02"},{"lineNumber":31,"author":{"gitId":"chiayunrong"},"content":"     */","lastModifiedDate":"2023-10-02"},{"lineNumber":32,"author":{"gitId":"chiayunrong"},"content":"    public AddMeetingCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-02"},{"lineNumber":33,"author":{"gitId":"chiayunrong"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-10-02"},{"lineNumber":34,"author":{"gitId":"jonyeokj"},"content":"            ArgumentTokenizer.tokenize(args, PREFIX_TITLE, PREFIX_TIME, PREFIX_PLACE,","lastModifiedDate":"2023-10-11"},{"lineNumber":35,"author":{"gitId":"s-peiran"},"content":"                PREFIX_DESCRIPTION, PREFIX_NOTE_MEETING);","lastModifiedDate":"2023-10-31"},{"lineNumber":36,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":37,"author":{"gitId":"chiayunrong"},"content":"        if (!ArgumentMultimap.arePrefixesPresent(argMultimap, PREFIX_TITLE, PREFIX_TIME, PREFIX_PLACE,","lastModifiedDate":"2023-11-01"},{"lineNumber":38,"author":{"gitId":"chiayunrong"},"content":"                PREFIX_DESCRIPTION) || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2023-11-01"},{"lineNumber":39,"author":{"gitId":"chiayunrong"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddMeetingCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-03"},{"lineNumber":40,"author":{"gitId":"chiayunrong"},"content":"        }","lastModifiedDate":"2023-10-02"},{"lineNumber":41,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":42,"author":{"gitId":"jonyeokj"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_TITLE, PREFIX_TIME, PREFIX_PLACE, PREFIX_DESCRIPTION);","lastModifiedDate":"2023-10-11"},{"lineNumber":43,"author":{"gitId":"chiayunrong"},"content":"        Title title \u003d ParserUtil.parseTitle(argMultimap.getValue(PREFIX_TITLE).get());","lastModifiedDate":"2023-10-02"},{"lineNumber":44,"author":{"gitId":"chiayunrong"},"content":"        Time time \u003d ParserUtil.parseTime(argMultimap.getValue(PREFIX_TIME).get());","lastModifiedDate":"2023-11-01"},{"lineNumber":45,"author":{"gitId":"chiayunrong"},"content":"        Place place \u003d ParserUtil.parsePlace(argMultimap.getValue(PREFIX_PLACE).get());","lastModifiedDate":"2023-11-01"},{"lineNumber":46,"author":{"gitId":"chiayunrong"},"content":"        Description description \u003d","lastModifiedDate":"2023-10-02"},{"lineNumber":47,"author":{"gitId":"chiayunrong"},"content":"            ParserUtil.parseDescription(argMultimap.getValue(PREFIX_DESCRIPTION).get());","lastModifiedDate":"2023-11-01"},{"lineNumber":48,"author":{"gitId":"jacobcuison"},"content":"        Set\u003cNote\u003e noteList \u003d ParserUtil.parseNotes(argMultimap.getAllValues(PREFIX_NOTE_MEETING));","lastModifiedDate":"2023-10-18"},{"lineNumber":49,"author":{"gitId":"s-peiran"},"content":"        Meeting meeting \u003d new Meeting(title, time, place, description, noteList, new ArrayList\u003c\u003e());","lastModifiedDate":"2023-10-24"},{"lineNumber":50,"author":{"gitId":"chiayunrong"},"content":"        return new AddMeetingCommand(meeting);","lastModifiedDate":"2023-10-02"},{"lineNumber":51,"author":{"gitId":"chiayunrong"},"content":"    }","lastModifiedDate":"2023-10-02"},{"lineNumber":52,"author":{"gitId":"chiayunrong"},"content":"}","lastModifiedDate":"2023-10-02"}],"authorContributionMap":{"jonyeokj":3,"jacobcuison":8,"s-peiran":4,"chiayunrong":37}},{"path":"src/main/java/seedu/address/logic/parser/AddMeetingNoteCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jacobcuison"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-18"},{"lineNumber":2,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":3,"author":{"gitId":"jacobcuison"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-18"},{"lineNumber":4,"author":{"gitId":"jacobcuison"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-18"},{"lineNumber":5,"author":{"gitId":"jacobcuison"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_INDEX;","lastModifiedDate":"2023-11-02"},{"lineNumber":6,"author":{"gitId":"jacobcuison"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NOTE_MEETING;","lastModifiedDate":"2023-11-02"},{"lineNumber":7,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":8,"author":{"gitId":"jacobcuison"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-18"},{"lineNumber":9,"author":{"gitId":"jacobcuison"},"content":"import seedu.address.logic.commands.AddMeetingNoteCommand;","lastModifiedDate":"2023-10-18"},{"lineNumber":10,"author":{"gitId":"jacobcuison"},"content":"import seedu.address.logic.commands.AddNoteCommand;","lastModifiedDate":"2023-11-02"},{"lineNumber":11,"author":{"gitId":"jacobcuison"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-18"},{"lineNumber":12,"author":{"gitId":"jacobcuison"},"content":"import seedu.address.model.note.Note;","lastModifiedDate":"2023-10-18"},{"lineNumber":13,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":14,"author":{"gitId":"jacobcuison"},"content":"/**","lastModifiedDate":"2023-10-18"},{"lineNumber":15,"author":{"gitId":"jacobcuison"},"content":" * Parses input arguments and creates a new {@code AddMeetingNoteCommand} object","lastModifiedDate":"2023-10-18"},{"lineNumber":16,"author":{"gitId":"jacobcuison"},"content":" */","lastModifiedDate":"2023-10-18"},{"lineNumber":17,"author":{"gitId":"jacobcuison"},"content":"public class AddMeetingNoteCommandParser implements Parser\u003cAddMeetingNoteCommand\u003e {","lastModifiedDate":"2023-10-18"},{"lineNumber":18,"author":{"gitId":"jacobcuison"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":19,"author":{"gitId":"jacobcuison"},"content":"     * Parses the given {@code String} of arguments in the context of the {@code AddMeetingNoteCommand}","lastModifiedDate":"2023-10-18"},{"lineNumber":20,"author":{"gitId":"jacobcuison"},"content":"     * and returns a {@code AddMeetingNoteCommand} object for execution.","lastModifiedDate":"2023-10-18"},{"lineNumber":21,"author":{"gitId":"jacobcuison"},"content":"     *","lastModifiedDate":"2023-10-18"},{"lineNumber":22,"author":{"gitId":"jacobcuison"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-10-18"},{"lineNumber":23,"author":{"gitId":"jacobcuison"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":24,"author":{"gitId":"jacobcuison"},"content":"    public AddMeetingNoteCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-18"},{"lineNumber":25,"author":{"gitId":"jacobcuison"},"content":"        requireNonNull(args);","lastModifiedDate":"2023-10-18"},{"lineNumber":26,"author":{"gitId":"jacobcuison"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_INDEX, PREFIX_NOTE_MEETING);","lastModifiedDate":"2023-10-18"},{"lineNumber":27,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":28,"author":{"gitId":"jacobcuison"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_INDEX, PREFIX_NOTE_MEETING);","lastModifiedDate":"2023-11-02"},{"lineNumber":29,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":30,"author":{"gitId":"jacobcuison"},"content":"        Index index;","lastModifiedDate":"2023-10-18"},{"lineNumber":31,"author":{"gitId":"jacobcuison"},"content":"        try {","lastModifiedDate":"2023-10-18"},{"lineNumber":32,"author":{"gitId":"jacobcuison"},"content":"            index \u003d Index.fromOneBased(Integer.parseInt(argMultimap.getValue(PREFIX_INDEX).get()));","lastModifiedDate":"2023-10-18"},{"lineNumber":33,"author":{"gitId":"s-peiran"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-10-27"},{"lineNumber":34,"author":{"gitId":"s-peiran"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-10-27"},{"lineNumber":35,"author":{"gitId":"s-peiran"},"content":"                    AddMeetingNoteCommand.MESSAGE_USAGE), e);","lastModifiedDate":"2023-10-27"},{"lineNumber":36,"author":{"gitId":"jacobcuison"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":37,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":38,"author":{"gitId":"jacobcuison"},"content":"        String note \u003d argMultimap.getValue(PREFIX_NOTE_MEETING).orElse(\"\");","lastModifiedDate":"2023-11-02"},{"lineNumber":39,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":40,"author":{"gitId":"jacobcuison"},"content":"        if (note.equals(\"\")) {","lastModifiedDate":"2023-11-02"},{"lineNumber":41,"author":{"gitId":"jacobcuison"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddNoteCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-11-02"},{"lineNumber":42,"author":{"gitId":"jacobcuison"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":43,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":44,"author":{"gitId":"jacobcuison"},"content":"        return new AddMeetingNoteCommand(index, new Note(note));","lastModifiedDate":"2023-10-18"},{"lineNumber":45,"author":{"gitId":"jacobcuison"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":46,"author":{"gitId":"jacobcuison"},"content":"}","lastModifiedDate":"2023-10-18"}],"authorContributionMap":{"jacobcuison":43,"s-peiran":3}},{"path":"src/main/java/seedu/address/logic/parser/AddNoteCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jacobcuison"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":3,"author":{"gitId":"jacobcuison"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"jacobcuison"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"jacobcuison"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_INDEX;","lastModifiedDate":"2023-11-02"},{"lineNumber":6,"author":{"gitId":"jacobcuison"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NOTE_CONTACT;","lastModifiedDate":"2023-11-02"},{"lineNumber":7,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"jacobcuison"},"content":"import java.util.NoSuchElementException;","lastModifiedDate":"2023-10-18"},{"lineNumber":9,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":10,"author":{"gitId":"jacobcuison"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"jacobcuison"},"content":"import seedu.address.logic.commands.AddNoteCommand;","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"jacobcuison"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"jacobcuison"},"content":"import seedu.address.model.note.Note;","lastModifiedDate":"2023-10-18"},{"lineNumber":14,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"jacobcuison"},"content":"/**","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"jacobcuison"},"content":" * Parses input arguments and creates a new {@code AddNoteCommand} object","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"jacobcuison"},"content":" */","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"jacobcuison"},"content":"public class AddNoteCommandParser implements Parser\u003cAddNoteCommand\u003e {","lastModifiedDate":"2023-10-13"},{"lineNumber":19,"author":{"gitId":"jacobcuison"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":20,"author":{"gitId":"jacobcuison"},"content":"     * Parses the given {@code String} of arguments in the context of the {@code AddNoteCommand}","lastModifiedDate":"2023-10-13"},{"lineNumber":21,"author":{"gitId":"jacobcuison"},"content":"     * and returns a {@code AddNoteCommand} object for execution.","lastModifiedDate":"2023-10-13"},{"lineNumber":22,"author":{"gitId":"jacobcuison"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-10-13"},{"lineNumber":23,"author":{"gitId":"jacobcuison"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":24,"author":{"gitId":"jacobcuison"},"content":"    public AddNoteCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-13"},{"lineNumber":25,"author":{"gitId":"jacobcuison"},"content":"        requireNonNull(args);","lastModifiedDate":"2023-10-13"},{"lineNumber":26,"author":{"gitId":"jacobcuison"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_INDEX, PREFIX_NOTE_CONTACT);","lastModifiedDate":"2023-10-18"},{"lineNumber":27,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":28,"author":{"gitId":"jacobcuison"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_INDEX, PREFIX_NOTE_CONTACT);","lastModifiedDate":"2023-11-02"},{"lineNumber":29,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":30,"author":{"gitId":"jacobcuison"},"content":"        Index index;","lastModifiedDate":"2023-10-13"},{"lineNumber":31,"author":{"gitId":"jacobcuison"},"content":"        try {","lastModifiedDate":"2023-10-13"},{"lineNumber":32,"author":{"gitId":"jacobcuison"},"content":"            index \u003d Index.fromOneBased(Integer.parseInt(argMultimap.getValue(PREFIX_INDEX).get()));","lastModifiedDate":"2023-10-18"},{"lineNumber":33,"author":{"gitId":"jacobcuison"},"content":"        } catch (NoSuchElementException ive) {","lastModifiedDate":"2023-10-18"},{"lineNumber":34,"author":{"gitId":"jacobcuison"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddNoteCommand.MESSAGE_USAGE), ive);","lastModifiedDate":"2023-10-13"},{"lineNumber":35,"author":{"gitId":"jacobcuison"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":36,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":37,"author":{"gitId":"jacobcuison"},"content":"        String note \u003d argMultimap.getValue(PREFIX_NOTE_CONTACT).orElse(\"\");","lastModifiedDate":"2023-10-13"},{"lineNumber":38,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":39,"author":{"gitId":"jacobcuison"},"content":"        if (note.equals(\"\")) {","lastModifiedDate":"2023-11-02"},{"lineNumber":40,"author":{"gitId":"jacobcuison"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddNoteCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-11-02"},{"lineNumber":41,"author":{"gitId":"jacobcuison"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":42,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":43,"author":{"gitId":"jacobcuison"},"content":"        return new AddNoteCommand(index, new Note(note));","lastModifiedDate":"2023-10-13"},{"lineNumber":44,"author":{"gitId":"jacobcuison"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":45,"author":{"gitId":"jacobcuison"},"content":"}","lastModifiedDate":"2023-10-13"}],"authorContributionMap":{"jacobcuison":45}},{"path":"src/main/java/seedu/address/logic/parser/AddressBookParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-07-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-07-29"},{"lineNumber":11,"author":{"gitId":"jacobcuison"},"content":"import seedu.address.logic.commands.AddContactCommand;","lastModifiedDate":"2023-10-03"},{"lineNumber":12,"author":{"gitId":"s-peiran"},"content":"import seedu.address.logic.commands.AddContactToMeetingCommand;","lastModifiedDate":"2023-10-24"},{"lineNumber":13,"author":{"gitId":"chiayunrong"},"content":"import seedu.address.logic.commands.AddMeetingCommand;","lastModifiedDate":"2023-10-02"},{"lineNumber":14,"author":{"gitId":"jacobcuison"},"content":"import seedu.address.logic.commands.AddMeetingNoteCommand;","lastModifiedDate":"2023-10-18"},{"lineNumber":15,"author":{"gitId":"jacobcuison"},"content":"import seedu.address.logic.commands.AddNoteCommand;","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2017-01-18"},{"lineNumber":18,"author":{"gitId":"jacobcuison"},"content":"import seedu.address.logic.commands.DeleteContactCommand;","lastModifiedDate":"2023-10-03"},{"lineNumber":19,"author":{"gitId":"s-peiran"},"content":"import seedu.address.logic.commands.DeleteContactFromMeetingCommand;","lastModifiedDate":"2023-10-24"},{"lineNumber":20,"author":{"gitId":"jonyeokj"},"content":"import seedu.address.logic.commands.DeleteMeetingCommand;","lastModifiedDate":"2023-10-13"},{"lineNumber":21,"author":{"gitId":"jacobcuison"},"content":"import seedu.address.logic.commands.DeleteMeetingNoteCommand;","lastModifiedDate":"2023-11-02"},{"lineNumber":22,"author":{"gitId":"jacobcuison"},"content":"import seedu.address.logic.commands.DeleteNoteCommand;","lastModifiedDate":"2023-11-02"},{"lineNumber":23,"author":{"gitId":"jacobcuison"},"content":"import seedu.address.logic.commands.EditContactCommand;","lastModifiedDate":"2023-10-03"},{"lineNumber":24,"author":{"gitId":"jonyeokj"},"content":"import seedu.address.logic.commands.EditMeetingCommand;","lastModifiedDate":"2023-10-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":26,"author":{"gitId":"jacobcuison"},"content":"import seedu.address.logic.commands.FindContactCommand;","lastModifiedDate":"2023-10-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":28,"author":{"gitId":"jacobcuison"},"content":"import seedu.address.logic.commands.ListContactCommand;","lastModifiedDate":"2023-10-03"},{"lineNumber":29,"author":{"gitId":"jonyeokj"},"content":"import seedu.address.logic.commands.ListMeetingCommand;","lastModifiedDate":"2023-10-18"},{"lineNumber":30,"author":{"gitId":"chiayunrong"},"content":"import seedu.address.logic.commands.ModeCommand;","lastModifiedDate":"2023-10-26"},{"lineNumber":31,"author":{"gitId":"chiayunrong"},"content":"import seedu.address.logic.commands.ViewContactCommand;","lastModifiedDate":"2023-10-17"},{"lineNumber":32,"author":{"gitId":"chiayunrong"},"content":"import seedu.address.logic.commands.ViewMeetingCommand;","lastModifiedDate":"2023-10-17"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":34,"author":{"gitId":"jonyeokj"},"content":"import seedu.address.ui.AppState;","lastModifiedDate":"2023-11-02"},{"lineNumber":35,"author":{"gitId":"jonyeokj"},"content":"import seedu.address.ui.AppState.ModeType;","lastModifiedDate":"2023-11-02"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"public class AddressBookParser {","lastModifiedDate":"2017-07-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2023-11-02"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(AddressBookParser.class);","lastModifiedDate":"2023-07-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2023-11-02"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"jonyeokj"},"content":"        AppState appState \u003d AppState.getInstance();","lastModifiedDate":"2023-11-02"},{"lineNumber":61,"author":{"gitId":"jonyeokj"},"content":"        final ModeType mode \u003d appState.getModeType();","lastModifiedDate":"2023-11-02"},{"lineNumber":62,"author":{"gitId":"s-peiran"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\").trim();","lastModifiedDate":"2023-10-13"},{"lineNumber":63,"author":{"gitId":"s-peiran"},"content":"        final String arguments \u003d \" \" + matcher.group(\"arguments\");","lastModifiedDate":"2023-10-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // Note to developers: Change the log level in config.json to enable lower level (i.e., FINE, FINER and lower)","lastModifiedDate":"2023-07-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // log messages such as the one below.","lastModifiedDate":"2023-07-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // Lower level log messages are used sparingly to minimize noise in the code.","lastModifiedDate":"2023-07-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        logger.fine(\"Command word: \" + commandWord + \"; Arguments: \" + arguments);","lastModifiedDate":"2023-07-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2023-10-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":72,"author":{"gitId":"chiayunrong"},"content":"        case ModeCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-26"},{"lineNumber":73,"author":{"gitId":"chiayunrong"},"content":"            return new ModeCommand();","lastModifiedDate":"2023-10-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":75,"author":{"gitId":"chiayunrong"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-26"},{"lineNumber":76,"author":{"gitId":"chiayunrong"},"content":"            return new HelpCommand();","lastModifiedDate":"2023-10-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":78,"author":{"gitId":"chiayunrong"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-26"},{"lineNumber":79,"author":{"gitId":"chiayunrong"},"content":"            return new ExitCommand();","lastModifiedDate":"2023-10-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":81,"author":{"gitId":"chiayunrong"},"content":"        default:","lastModifiedDate":"2023-10-26"},{"lineNumber":82,"author":{"gitId":"chiayunrong"},"content":"            break;","lastModifiedDate":"2023-10-26"},{"lineNumber":83,"author":{"gitId":"chiayunrong"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":85,"author":{"gitId":"chiayunrong"},"content":"        if (mode \u003d\u003d ModeType.CONTACTS) {","lastModifiedDate":"2023-10-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":88,"author":{"gitId":"jacobcuison"},"content":"            case AddContactCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-03"},{"lineNumber":89,"author":{"gitId":"jonyeokj"},"content":"                return new AddContactCommandParser().parse(arguments);","lastModifiedDate":"2023-10-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":91,"author":{"gitId":"chiayunrong"},"content":"            case ViewContactCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-17"},{"lineNumber":92,"author":{"gitId":"chiayunrong"},"content":"                return new ViewContactCommandParser().parse(arguments);","lastModifiedDate":"2023-10-17"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":94,"author":{"gitId":"jacobcuison"},"content":"            case EditContactCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-03"},{"lineNumber":95,"author":{"gitId":"jonyeokj"},"content":"                return new EditContactCommandParser().parse(arguments);","lastModifiedDate":"2023-10-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":97,"author":{"gitId":"jonyeokj"},"content":"            case DeleteContactCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-13"},{"lineNumber":98,"author":{"gitId":"jonyeokj"},"content":"                return new DeleteContactCommandParser().parse(arguments);","lastModifiedDate":"2023-10-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":100,"author":{"gitId":"chiayunrong"},"content":"            case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-26"},{"lineNumber":101,"author":{"gitId":"chiayunrong"},"content":"                return new ClearCommand();","lastModifiedDate":"2023-10-26"},{"lineNumber":102,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":103,"author":{"gitId":"chiayunrong"},"content":"            case FindContactCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-26"},{"lineNumber":104,"author":{"gitId":"chiayunrong"},"content":"                return new FindCommandParser().parse(arguments);","lastModifiedDate":"2023-10-26"},{"lineNumber":105,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":106,"author":{"gitId":"chiayunrong"},"content":"            case ListContactCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-26"},{"lineNumber":107,"author":{"gitId":"s-peiran"},"content":"                return new ListContactCommandParser().parse(arguments);","lastModifiedDate":"2023-10-31"},{"lineNumber":108,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":109,"author":{"gitId":"chiayunrong"},"content":"            case AddNoteCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-26"},{"lineNumber":110,"author":{"gitId":"chiayunrong"},"content":"                return new AddNoteCommandParser().parse(arguments);","lastModifiedDate":"2023-10-26"},{"lineNumber":111,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":112,"author":{"gitId":"jacobcuison"},"content":"            case DeleteNoteCommand.COMMAND_WORD:","lastModifiedDate":"2023-11-02"},{"lineNumber":113,"author":{"gitId":"jacobcuison"},"content":"                return new DeleteNoteCommandParser().parse(arguments);","lastModifiedDate":"2023-11-02"},{"lineNumber":114,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":115,"author":{"gitId":"chiayunrong"},"content":"            default:","lastModifiedDate":"2023-10-26"},{"lineNumber":116,"author":{"gitId":"chiayunrong"},"content":"                break;","lastModifiedDate":"2023-10-26"},{"lineNumber":117,"author":{"gitId":"chiayunrong"},"content":"            }","lastModifiedDate":"2023-10-26"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":120,"author":{"gitId":"chiayunrong"},"content":"        if (mode \u003d\u003d ModeType.MEETINGS) {","lastModifiedDate":"2023-10-26"},{"lineNumber":121,"author":{"gitId":"chiayunrong"},"content":"            switch (commandWord) {","lastModifiedDate":"2023-10-26"},{"lineNumber":122,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":123,"author":{"gitId":"chiayunrong"},"content":"            case AddMeetingCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-02"},{"lineNumber":124,"author":{"gitId":"chiayunrong"},"content":"                return new AddMeetingCommandParser().parse(arguments);","lastModifiedDate":"2023-10-02"},{"lineNumber":125,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":126,"author":{"gitId":"chiayunrong"},"content":"            case ViewMeetingCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-17"},{"lineNumber":127,"author":{"gitId":"chiayunrong"},"content":"                return new ViewMeetingCommandParser().parse(arguments);","lastModifiedDate":"2023-10-17"},{"lineNumber":128,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":129,"author":{"gitId":"jonyeokj"},"content":"            case EditMeetingCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-13"},{"lineNumber":130,"author":{"gitId":"jonyeokj"},"content":"                return new EditMeetingCommandParser().parse(arguments);","lastModifiedDate":"2023-10-13"},{"lineNumber":131,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":132,"author":{"gitId":"jonyeokj"},"content":"            case DeleteMeetingCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-13"},{"lineNumber":133,"author":{"gitId":"jonyeokj"},"content":"                return new DeleteMeetingCommandParser().parse(arguments);","lastModifiedDate":"2023-10-13"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":135,"author":{"gitId":"s-peiran"},"content":"            case AddContactToMeetingCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-24"},{"lineNumber":136,"author":{"gitId":"s-peiran"},"content":"                return new AddContactToMeetingCommandParser().parse(arguments);","lastModifiedDate":"2023-10-24"},{"lineNumber":137,"author":{"gitId":"s-peiran"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":138,"author":{"gitId":"s-peiran"},"content":"            case DeleteContactFromMeetingCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-24"},{"lineNumber":139,"author":{"gitId":"s-peiran"},"content":"                return new DeleteContactFromMeetingCommandParser().parse(arguments);","lastModifiedDate":"2023-10-24"},{"lineNumber":140,"author":{"gitId":"s-peiran"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":141,"author":{"gitId":"jonyeokj"},"content":"            case ListMeetingCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-18"},{"lineNumber":142,"author":{"gitId":"s-peiran"},"content":"                return new ListMeetingCommandParser().parse(arguments);","lastModifiedDate":"2023-10-31"},{"lineNumber":143,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":144,"author":{"gitId":"jacobcuison"},"content":"            case AddMeetingNoteCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-18"},{"lineNumber":145,"author":{"gitId":"jacobcuison"},"content":"                return new AddMeetingNoteCommandParser().parse(arguments);","lastModifiedDate":"2023-10-18"},{"lineNumber":146,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":147,"author":{"gitId":"jacobcuison"},"content":"            case DeleteMeetingNoteCommand.COMMAND_WORD:","lastModifiedDate":"2023-11-02"},{"lineNumber":148,"author":{"gitId":"jacobcuison"},"content":"                return new DeleteMeetingNoteCommandParser().parse(arguments);","lastModifiedDate":"2023-11-02"},{"lineNumber":149,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            default:","lastModifiedDate":"2016-08-26"},{"lineNumber":151,"author":{"gitId":"chiayunrong"},"content":"                break;","lastModifiedDate":"2023-10-26"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-08-24"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":155,"author":{"gitId":"chiayunrong"},"content":"        logger.finer(\"This user input caused a ParseException: \" + userInput);","lastModifiedDate":"2023-10-26"},{"lineNumber":156,"author":{"gitId":"jonyeokj"},"content":"        throw new ParseException(String.format(MESSAGE_UNKNOWN_COMMAND, userInput));","lastModifiedDate":"2023-11-01"},{"lineNumber":157,"author":{"gitId":"chiayunrong"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":158,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"jonyeokj":19,"jacobcuison":20,"s-peiran":12,"chiayunrong":42,"-":65}},{"path":"src/main/java/seedu/address/logic/parser/ArgumentMultimap.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2017-03-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-03-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2017-03-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-03-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-07-14"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-07-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Stores mapping of prefixes to their respective arguments.","lastModifiedDate":"2017-03-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Each key may be associated with multiple argument values.","lastModifiedDate":"2017-03-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Values for a given key are stored in a list, and the insertion ordering is maintained.","lastModifiedDate":"2017-03-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Keys are unique, but the list of argument values may contain duplicate argument values, i.e. the same argument value","lastModifiedDate":"2017-03-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * can be inserted multiple times for the same prefix.","lastModifiedDate":"2017-03-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class ArgumentMultimap {","lastModifiedDate":"2017-03-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /** Prefixes mapped to their respective arguments**/","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final Map\u003cPrefix, List\u003cString\u003e\u003e argMultimap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Associates the specified argument value with {@code prefix} key in this map.","lastModifiedDate":"2017-03-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * If the map previously contained a mapping for the key, the new value is appended to the list of existing values.","lastModifiedDate":"2017-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * @param prefix   Prefix key with which the specified argument value is to be associated","lastModifiedDate":"2017-03-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * @param argValue Argument value to be associated with the specified prefix key","lastModifiedDate":"2017-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void put(Prefix prefix, String argValue) {","lastModifiedDate":"2017-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        List\u003cString\u003e argValues \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        argValues.add(argValue);","lastModifiedDate":"2017-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        argMultimap.put(prefix, argValues);","lastModifiedDate":"2017-03-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Returns the last value of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return values.isEmpty() ? Optional.empty() : Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2017-03-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Returns all values of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * If the prefix does not exist or has no values, this will return an empty list.","lastModifiedDate":"2017-03-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Modifying the returned list will not affect the underlying data structure of the ArgumentMultimap.","lastModifiedDate":"2017-03-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public List\u003cString\u003e getAllValues(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (!argMultimap.containsKey(prefix)) {","lastModifiedDate":"2017-03-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return new ArrayList\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(argMultimap.get(prefix));","lastModifiedDate":"2017-03-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * Returns the preamble (text before the first valid prefix). Trims any leading/trailing spaces.","lastModifiedDate":"2017-03-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public String getPreamble() {","lastModifiedDate":"2017-03-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return getValue(new Prefix(\"\")).orElse(\"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-07-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * Throws a {@code ParseException} if any of the prefixes given in {@code prefixes} appeared more than","lastModifiedDate":"2023-07-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * once among the arguments.","lastModifiedDate":"2023-07-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-07-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void verifyNoDuplicatePrefixesFor(Prefix... prefixes) throws ParseException {","lastModifiedDate":"2023-07-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        Prefix[] duplicatedPrefixes \u003d Stream.of(prefixes).distinct()","lastModifiedDate":"2023-07-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"                .filter(prefix -\u003e argMultimap.containsKey(prefix) \u0026\u0026 argMultimap.get(prefix).size() \u003e 1)","lastModifiedDate":"2023-07-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"                .toArray(Prefix[]::new);","lastModifiedDate":"2023-07-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        if (duplicatedPrefixes.length \u003e 0) {","lastModifiedDate":"2023-07-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            throw new ParseException(Messages.getErrorMessageForDuplicatePrefixes(duplicatedPrefixes));","lastModifiedDate":"2023-07-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-07-14"},{"lineNumber":78,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":79,"author":{"gitId":"chiayunrong"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":80,"author":{"gitId":"chiayunrong"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2023-10-26"},{"lineNumber":81,"author":{"gitId":"chiayunrong"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2023-10-26"},{"lineNumber":82,"author":{"gitId":"chiayunrong"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":83,"author":{"gitId":"chiayunrong"},"content":"    public static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2023-10-26"},{"lineNumber":84,"author":{"gitId":"chiayunrong"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2023-10-26"},{"lineNumber":85,"author":{"gitId":"chiayunrong"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-08"}],"authorContributionMap":{"chiayunrong":8,"-":78}},{"path":"src/main/java/seedu/address/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2023-11-02"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"p/\");","lastModifiedDate":"2023-11-02"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"e/\");","lastModifiedDate":"2023-11-02"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_ADDRESS \u003d new Prefix(\"a/\");","lastModifiedDate":"2023-11-02"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"t/\");","lastModifiedDate":"2023-11-02"},{"lineNumber":14,"author":{"gitId":"chiayunrong"},"content":"    public static final Prefix PREFIX_TITLE \u003d new Prefix(\"title/\");","lastModifiedDate":"2023-11-02"},{"lineNumber":15,"author":{"gitId":"chiayunrong"},"content":"    public static final Prefix PREFIX_TIME \u003d new Prefix(\"time/\");","lastModifiedDate":"2023-11-02"},{"lineNumber":16,"author":{"gitId":"chiayunrong"},"content":"    public static final Prefix PREFIX_TIME_START \u003d new Prefix(\"ts/\");","lastModifiedDate":"2023-11-02"},{"lineNumber":17,"author":{"gitId":"chiayunrong"},"content":"    public static final Prefix PREFIX_TIME_END \u003d new Prefix(\"te/\");","lastModifiedDate":"2023-11-02"},{"lineNumber":18,"author":{"gitId":"chiayunrong"},"content":"    public static final Prefix PREFIX_PLACE \u003d new Prefix(\"place/\");","lastModifiedDate":"2023-11-02"},{"lineNumber":19,"author":{"gitId":"chiayunrong"},"content":"    public static final Prefix PREFIX_DESCRIPTION \u003d new Prefix(\"desc/\");","lastModifiedDate":"2023-11-02"},{"lineNumber":20,"author":{"gitId":"chiayunrong"},"content":"    public static final Prefix PREFIX_INDEX \u003d new Prefix(\"id/\");","lastModifiedDate":"2023-11-02"},{"lineNumber":21,"author":{"gitId":"chiayunrong"},"content":"    public static final Prefix PREFIX_KEYWORD \u003d new Prefix(\"k/\");","lastModifiedDate":"2023-11-02"},{"lineNumber":22,"author":{"gitId":"chiayunrong"},"content":"    public static final Prefix PREFIX_NOTE \u003d new Prefix(\"z/\");","lastModifiedDate":"2023-11-02"},{"lineNumber":23,"author":{"gitId":"chiayunrong"},"content":"    public static final Prefix PREFIX_NOTE_CONTACT \u003d new Prefix(\"c/\");","lastModifiedDate":"2023-11-02"},{"lineNumber":24,"author":{"gitId":"chiayunrong"},"content":"    public static final Prefix PREFIX_NOTE_MEETING \u003d new Prefix(\"m/\");","lastModifiedDate":"2023-11-02"},{"lineNumber":25,"author":{"gitId":"chiayunrong"},"content":"    public static final Prefix PREFIX_NOTE_ID \u003d new Prefix(\"noteid/\");","lastModifiedDate":"2023-11-02"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"chiayunrong":12,"-":14}},{"path":"src/main/java/seedu/address/logic/parser/DeleteContactCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"s-peiran"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"s-peiran"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_INDEX;","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":6,"author":{"gitId":"s-peiran"},"content":"import java.util.NoSuchElementException;","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"s-peiran"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":9,"author":{"gitId":"jacobcuison"},"content":"import seedu.address.logic.commands.DeleteContactCommand;","lastModifiedDate":"2023-10-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new DeleteCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"jonyeokj"},"content":"public class DeleteContactCommandParser implements Parser\u003cDeleteContactCommand\u003e {","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * and returns a DeleteCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":20,"author":{"gitId":"s-peiran"},"content":"     *","lastModifiedDate":"2023-10-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":23,"author":{"gitId":"jacobcuison"},"content":"    public DeleteContactCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-03"},{"lineNumber":24,"author":{"gitId":"s-peiran"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-10-13"},{"lineNumber":25,"author":{"gitId":"s-peiran"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_INDEX);","lastModifiedDate":"2023-10-13"},{"lineNumber":26,"author":{"gitId":"s-peiran"},"content":"        Index index;","lastModifiedDate":"2023-10-13"},{"lineNumber":27,"author":{"gitId":"s-peiran"},"content":"        try {","lastModifiedDate":"2023-10-13"},{"lineNumber":28,"author":{"gitId":"s-peiran"},"content":"            index \u003d Index.fromOneBased(Integer.parseInt(argMultimap.getValue(PREFIX_INDEX).get()));","lastModifiedDate":"2023-10-13"},{"lineNumber":29,"author":{"gitId":"s-peiran"},"content":"        } catch (NoSuchElementException e) {","lastModifiedDate":"2023-10-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":31,"author":{"gitId":"s-peiran"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteContactCommand.MESSAGE_USAGE), e);","lastModifiedDate":"2023-10-13"},{"lineNumber":32,"author":{"gitId":"s-peiran"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":33,"author":{"gitId":"s-peiran"},"content":"        return new DeleteContactCommand(index);","lastModifiedDate":"2023-10-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"jonyeokj":1,"jacobcuison":2,"s-peiran":14,"-":19}},{"path":"src/main/java/seedu/address/logic/parser/DeleteContactFromMeetingCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"s-peiran"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-24"},{"lineNumber":2,"author":{"gitId":"s-peiran"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":3,"author":{"gitId":"s-peiran"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-24"},{"lineNumber":4,"author":{"gitId":"s-peiran"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-27"},{"lineNumber":5,"author":{"gitId":"s-peiran"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-10-24"},{"lineNumber":6,"author":{"gitId":"s-peiran"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TITLE;","lastModifiedDate":"2023-10-24"},{"lineNumber":7,"author":{"gitId":"s-peiran"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":8,"author":{"gitId":"s-peiran"},"content":"import seedu.address.logic.commands.DeleteContactFromMeetingCommand;","lastModifiedDate":"2023-10-24"},{"lineNumber":9,"author":{"gitId":"s-peiran"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-24"},{"lineNumber":10,"author":{"gitId":"s-peiran"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":11,"author":{"gitId":"s-peiran"},"content":"/**","lastModifiedDate":"2023-10-24"},{"lineNumber":12,"author":{"gitId":"s-peiran"},"content":" * Parses input arguments and creates a new DeleteContactFromMeetingCommandParser object","lastModifiedDate":"2023-10-24"},{"lineNumber":13,"author":{"gitId":"s-peiran"},"content":" */","lastModifiedDate":"2023-10-24"},{"lineNumber":14,"author":{"gitId":"s-peiran"},"content":"public class DeleteContactFromMeetingCommandParser implements Parser\u003cDeleteContactFromMeetingCommand\u003e {","lastModifiedDate":"2023-10-24"},{"lineNumber":15,"author":{"gitId":"s-peiran"},"content":"    /**","lastModifiedDate":"2023-10-24"},{"lineNumber":16,"author":{"gitId":"s-peiran"},"content":"     * Parses the given {@code String} of arguments in the context of the {@code DeleteContactFromMeetingCommand}","lastModifiedDate":"2023-10-24"},{"lineNumber":17,"author":{"gitId":"s-peiran"},"content":"     * and returns a {@code DeleteContactFromMeetingCommand} object for execution.","lastModifiedDate":"2023-10-24"},{"lineNumber":18,"author":{"gitId":"s-peiran"},"content":"     *","lastModifiedDate":"2023-10-24"},{"lineNumber":19,"author":{"gitId":"s-peiran"},"content":"     * @throws seedu.address.logic.parser.exceptions.ParseException if the user input does not conform to","lastModifiedDate":"2023-10-24"},{"lineNumber":20,"author":{"gitId":"s-peiran"},"content":"     *                                                              the expected format","lastModifiedDate":"2023-10-24"},{"lineNumber":21,"author":{"gitId":"s-peiran"},"content":"     */","lastModifiedDate":"2023-10-24"},{"lineNumber":22,"author":{"gitId":"s-peiran"},"content":"    public DeleteContactFromMeetingCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-24"},{"lineNumber":23,"author":{"gitId":"s-peiran"},"content":"        requireNonNull(args);","lastModifiedDate":"2023-10-24"},{"lineNumber":24,"author":{"gitId":"s-peiran"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_TITLE);","lastModifiedDate":"2023-10-24"},{"lineNumber":25,"author":{"gitId":"s-peiran"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":26,"author":{"gitId":"s-peiran"},"content":"        String contactName \u003d argMultimap.getValue(PREFIX_NAME).orElse(\"\");","lastModifiedDate":"2023-10-24"},{"lineNumber":27,"author":{"gitId":"s-peiran"},"content":"        String meetingTitle \u003d argMultimap.getValue(PREFIX_TITLE).orElse(\"\");","lastModifiedDate":"2023-10-24"},{"lineNumber":28,"author":{"gitId":"s-peiran"},"content":"        boolean raiseException \u003d contactName.length() \u003c 1 || meetingTitle.length() \u003c 1;","lastModifiedDate":"2023-10-27"},{"lineNumber":29,"author":{"gitId":"s-peiran"},"content":"        if (raiseException) {","lastModifiedDate":"2023-10-27"},{"lineNumber":30,"author":{"gitId":"s-peiran"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-10-27"},{"lineNumber":31,"author":{"gitId":"s-peiran"},"content":"                    DeleteContactFromMeetingCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-27"},{"lineNumber":32,"author":{"gitId":"s-peiran"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":33,"author":{"gitId":"s-peiran"},"content":"        return new DeleteContactFromMeetingCommand(meetingTitle, contactName);","lastModifiedDate":"2023-10-24"},{"lineNumber":34,"author":{"gitId":"s-peiran"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":35,"author":{"gitId":"s-peiran"},"content":"}","lastModifiedDate":"2023-10-24"}],"authorContributionMap":{"s-peiran":35}},{"path":"src/main/java/seedu/address/logic/parser/DeleteMeetingCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"s-peiran"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"s-peiran"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_INDEX;","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":7,"author":{"gitId":"jonyeokj"},"content":"import seedu.address.logic.commands.DeleteMeetingCommand;","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"jonyeokj"},"content":" * Parses input arguments and creates a new DeleteMeetingCommand object","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"jonyeokj"},"content":"public class DeleteMeetingCommandParser implements Parser\u003cDeleteMeetingCommand\u003e {","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"jonyeokj"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteMeetingCommand","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"jonyeokj"},"content":"     * and returns a DeleteMeetingCommand object for execution.","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"s-peiran"},"content":"     *","lastModifiedDate":"2023-10-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":21,"author":{"gitId":"jonyeokj"},"content":"    public DeleteMeetingCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-13"},{"lineNumber":22,"author":{"gitId":"s-peiran"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-10-13"},{"lineNumber":23,"author":{"gitId":"s-peiran"},"content":"            ArgumentTokenizer.tokenize(args, PREFIX_INDEX);","lastModifiedDate":"2023-10-13"},{"lineNumber":24,"author":{"gitId":"s-peiran"},"content":"        Index index;","lastModifiedDate":"2023-10-13"},{"lineNumber":25,"author":{"gitId":"s-peiran"},"content":"        try {","lastModifiedDate":"2023-10-13"},{"lineNumber":26,"author":{"gitId":"s-peiran"},"content":"            index \u003d Index.fromOneBased(Integer.parseInt(argMultimap.getValue(PREFIX_INDEX).get()));","lastModifiedDate":"2023-10-13"},{"lineNumber":27,"author":{"gitId":"s-peiran"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-10-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":29,"author":{"gitId":"jonyeokj"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteMeetingCommand.MESSAGE_USAGE), e);","lastModifiedDate":"2023-10-13"},{"lineNumber":30,"author":{"gitId":"s-peiran"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":31,"author":{"gitId":"jonyeokj"},"content":"        return new DeleteMeetingCommand(index);","lastModifiedDate":"2023-10-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"jonyeokj":8,"s-peiran":10,"-":15}},{"path":"src/main/java/seedu/address/logic/parser/DeleteMeetingNoteCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jacobcuison"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-11-02"},{"lineNumber":2,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":3,"author":{"gitId":"jacobcuison"},"content":"import static java.lang.Integer.parseInt;","lastModifiedDate":"2023-11-02"},{"lineNumber":4,"author":{"gitId":"jacobcuison"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-11-02"},{"lineNumber":5,"author":{"gitId":"jacobcuison"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-11-02"},{"lineNumber":6,"author":{"gitId":"jacobcuison"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_NOTEID;","lastModifiedDate":"2023-11-02"},{"lineNumber":7,"author":{"gitId":"jacobcuison"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_INDEX;","lastModifiedDate":"2023-11-02"},{"lineNumber":8,"author":{"gitId":"jacobcuison"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NOTE_ID;","lastModifiedDate":"2023-11-02"},{"lineNumber":9,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":10,"author":{"gitId":"jacobcuison"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-11-02"},{"lineNumber":11,"author":{"gitId":"jacobcuison"},"content":"import seedu.address.logic.commands.DeleteMeetingNoteCommand;","lastModifiedDate":"2023-11-02"},{"lineNumber":12,"author":{"gitId":"jacobcuison"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-11-02"},{"lineNumber":13,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":14,"author":{"gitId":"jacobcuison"},"content":"/**","lastModifiedDate":"2023-11-02"},{"lineNumber":15,"author":{"gitId":"jacobcuison"},"content":" * Parses input arguments and creates a new {@code DeleteMeetingNoteCommand} object","lastModifiedDate":"2023-11-02"},{"lineNumber":16,"author":{"gitId":"jacobcuison"},"content":" */","lastModifiedDate":"2023-11-02"},{"lineNumber":17,"author":{"gitId":"jacobcuison"},"content":"public class DeleteMeetingNoteCommandParser implements Parser\u003cDeleteMeetingNoteCommand\u003e {","lastModifiedDate":"2023-11-02"},{"lineNumber":18,"author":{"gitId":"jacobcuison"},"content":"    /**","lastModifiedDate":"2023-11-02"},{"lineNumber":19,"author":{"gitId":"jacobcuison"},"content":"     * Parses the given {@code String} of arguments in the context of the {@code DeleteMeetingNoteCommand}","lastModifiedDate":"2023-11-02"},{"lineNumber":20,"author":{"gitId":"jacobcuison"},"content":"     * and returns a {@code AddMeetingNoteCommand} object for execution.","lastModifiedDate":"2023-11-02"},{"lineNumber":21,"author":{"gitId":"jacobcuison"},"content":"     *","lastModifiedDate":"2023-11-02"},{"lineNumber":22,"author":{"gitId":"jacobcuison"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-11-02"},{"lineNumber":23,"author":{"gitId":"jacobcuison"},"content":"     */","lastModifiedDate":"2023-11-02"},{"lineNumber":24,"author":{"gitId":"jacobcuison"},"content":"    public DeleteMeetingNoteCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-11-02"},{"lineNumber":25,"author":{"gitId":"jacobcuison"},"content":"        requireNonNull(args);","lastModifiedDate":"2023-11-02"},{"lineNumber":26,"author":{"gitId":"jacobcuison"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_INDEX, PREFIX_NOTE_ID);","lastModifiedDate":"2023-11-02"},{"lineNumber":27,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":28,"author":{"gitId":"jacobcuison"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_INDEX, PREFIX_NOTE_ID);","lastModifiedDate":"2023-11-02"},{"lineNumber":29,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":30,"author":{"gitId":"jacobcuison"},"content":"        Index index;","lastModifiedDate":"2023-11-02"},{"lineNumber":31,"author":{"gitId":"jacobcuison"},"content":"        int noteID;","lastModifiedDate":"2023-11-02"},{"lineNumber":32,"author":{"gitId":"jacobcuison"},"content":"        try {","lastModifiedDate":"2023-11-02"},{"lineNumber":33,"author":{"gitId":"jacobcuison"},"content":"            index \u003d Index.fromOneBased(parseInt(argMultimap.getValue(PREFIX_INDEX).get()));","lastModifiedDate":"2023-11-02"},{"lineNumber":34,"author":{"gitId":"jacobcuison"},"content":"            noteID \u003d parseInt(argMultimap.getValue(PREFIX_NOTE_ID).orElse(\"\"));","lastModifiedDate":"2023-11-02"},{"lineNumber":35,"author":{"gitId":"jacobcuison"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-11-02"},{"lineNumber":36,"author":{"gitId":"jacobcuison"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-11-02"},{"lineNumber":37,"author":{"gitId":"jacobcuison"},"content":"                    DeleteMeetingNoteCommand.MESSAGE_USAGE), e);","lastModifiedDate":"2023-11-02"},{"lineNumber":38,"author":{"gitId":"jacobcuison"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":39,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":40,"author":{"gitId":"jacobcuison"},"content":"        if (noteID \u003c\u003d 0) {","lastModifiedDate":"2023-11-02"},{"lineNumber":41,"author":{"gitId":"jacobcuison"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_NOTEID,","lastModifiedDate":"2023-11-02"},{"lineNumber":42,"author":{"gitId":"jacobcuison"},"content":"                    DeleteMeetingNoteCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-11-02"},{"lineNumber":43,"author":{"gitId":"jacobcuison"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":44,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":45,"author":{"gitId":"jacobcuison"},"content":"        return new DeleteMeetingNoteCommand(index, noteID);","lastModifiedDate":"2023-11-02"},{"lineNumber":46,"author":{"gitId":"jacobcuison"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":47,"author":{"gitId":"jacobcuison"},"content":"}","lastModifiedDate":"2023-11-02"}],"authorContributionMap":{"jacobcuison":47}},{"path":"src/main/java/seedu/address/logic/parser/DeleteNoteCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jacobcuison"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-11-02"},{"lineNumber":2,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":3,"author":{"gitId":"jacobcuison"},"content":"import static java.lang.Integer.parseInt;","lastModifiedDate":"2023-11-02"},{"lineNumber":4,"author":{"gitId":"jacobcuison"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-11-02"},{"lineNumber":5,"author":{"gitId":"jacobcuison"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-11-02"},{"lineNumber":6,"author":{"gitId":"jacobcuison"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_NOTEID;","lastModifiedDate":"2023-11-02"},{"lineNumber":7,"author":{"gitId":"jacobcuison"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_INDEX;","lastModifiedDate":"2023-11-02"},{"lineNumber":8,"author":{"gitId":"jacobcuison"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NOTE_ID;","lastModifiedDate":"2023-11-02"},{"lineNumber":9,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":10,"author":{"gitId":"jacobcuison"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-11-02"},{"lineNumber":11,"author":{"gitId":"jacobcuison"},"content":"import seedu.address.logic.commands.DeleteNoteCommand;","lastModifiedDate":"2023-11-02"},{"lineNumber":12,"author":{"gitId":"jacobcuison"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-11-02"},{"lineNumber":13,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":14,"author":{"gitId":"jacobcuison"},"content":"/**","lastModifiedDate":"2023-11-02"},{"lineNumber":15,"author":{"gitId":"jacobcuison"},"content":" * Parses input arguments and creates a new {@code DeleteMeetingNoteCommand} object","lastModifiedDate":"2023-11-02"},{"lineNumber":16,"author":{"gitId":"jacobcuison"},"content":" */","lastModifiedDate":"2023-11-02"},{"lineNumber":17,"author":{"gitId":"jacobcuison"},"content":"public class DeleteNoteCommandParser implements Parser\u003cDeleteNoteCommand\u003e {","lastModifiedDate":"2023-11-02"},{"lineNumber":18,"author":{"gitId":"jacobcuison"},"content":"    /**","lastModifiedDate":"2023-11-02"},{"lineNumber":19,"author":{"gitId":"jacobcuison"},"content":"     * Parses the given {@code String} of arguments in the context of the {@code DeleteMeetingNoteCommand}","lastModifiedDate":"2023-11-02"},{"lineNumber":20,"author":{"gitId":"jacobcuison"},"content":"     * and returns a {@code AddMeetingNoteCommand} object for execution.","lastModifiedDate":"2023-11-02"},{"lineNumber":21,"author":{"gitId":"jacobcuison"},"content":"     *","lastModifiedDate":"2023-11-02"},{"lineNumber":22,"author":{"gitId":"jacobcuison"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-11-02"},{"lineNumber":23,"author":{"gitId":"jacobcuison"},"content":"     */","lastModifiedDate":"2023-11-02"},{"lineNumber":24,"author":{"gitId":"jacobcuison"},"content":"    public DeleteNoteCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-11-02"},{"lineNumber":25,"author":{"gitId":"jacobcuison"},"content":"        requireNonNull(args);","lastModifiedDate":"2023-11-02"},{"lineNumber":26,"author":{"gitId":"jacobcuison"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_INDEX, PREFIX_NOTE_ID);","lastModifiedDate":"2023-11-02"},{"lineNumber":27,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":28,"author":{"gitId":"jacobcuison"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_INDEX, PREFIX_NOTE_ID);","lastModifiedDate":"2023-11-02"},{"lineNumber":29,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":30,"author":{"gitId":"jacobcuison"},"content":"        Index index;","lastModifiedDate":"2023-11-02"},{"lineNumber":31,"author":{"gitId":"jacobcuison"},"content":"        int noteID;","lastModifiedDate":"2023-11-02"},{"lineNumber":32,"author":{"gitId":"jacobcuison"},"content":"        try {","lastModifiedDate":"2023-11-02"},{"lineNumber":33,"author":{"gitId":"jacobcuison"},"content":"            index \u003d Index.fromOneBased(parseInt(argMultimap.getValue(PREFIX_INDEX).get()));","lastModifiedDate":"2023-11-02"},{"lineNumber":34,"author":{"gitId":"jacobcuison"},"content":"            noteID \u003d parseInt(argMultimap.getValue(PREFIX_NOTE_ID).orElse(\"\"));","lastModifiedDate":"2023-11-02"},{"lineNumber":35,"author":{"gitId":"jacobcuison"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-11-02"},{"lineNumber":36,"author":{"gitId":"jacobcuison"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-11-02"},{"lineNumber":37,"author":{"gitId":"jacobcuison"},"content":"                    DeleteNoteCommand.MESSAGE_USAGE), e);","lastModifiedDate":"2023-11-02"},{"lineNumber":38,"author":{"gitId":"jacobcuison"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":39,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":40,"author":{"gitId":"jacobcuison"},"content":"        if (noteID \u003c\u003d 0) {","lastModifiedDate":"2023-11-02"},{"lineNumber":41,"author":{"gitId":"jacobcuison"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_NOTEID,","lastModifiedDate":"2023-11-02"},{"lineNumber":42,"author":{"gitId":"jacobcuison"},"content":"                    DeleteNoteCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-11-02"},{"lineNumber":43,"author":{"gitId":"jacobcuison"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":44,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":45,"author":{"gitId":"jacobcuison"},"content":"        return new DeleteNoteCommand(index, noteID);","lastModifiedDate":"2023-11-02"},{"lineNumber":46,"author":{"gitId":"jacobcuison"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":47,"author":{"gitId":"jacobcuison"},"content":"}","lastModifiedDate":"2023-11-02"}],"authorContributionMap":{"jacobcuison":47}},{"path":"src/main/java/seedu/address/logic/parser/EditContactCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-01-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-01-26"},{"lineNumber":7,"author":{"gitId":"s-peiran"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_INDEX;","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-01-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"s-peiran"},"content":"import java.util.NoSuchElementException;","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":19,"author":{"gitId":"jacobcuison"},"content":"import seedu.address.logic.commands.EditContactCommand;","lastModifiedDate":"2023-10-03"},{"lineNumber":20,"author":{"gitId":"jacobcuison"},"content":"import seedu.address.logic.commands.EditContactCommand.EditContactDescriptor;","lastModifiedDate":"2023-10-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":25,"author":{"gitId":"jonyeokj"},"content":" * Parses input arguments and creates a new EditContactCommand object","lastModifiedDate":"2023-10-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"jonyeokj"},"content":"public class EditContactCommandParser implements Parser\u003cEditContactCommand\u003e {","lastModifiedDate":"2023-10-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":30,"author":{"gitId":"jonyeokj"},"content":"     * Parses the given {@code String} of arguments in the context of the EditContactCommand","lastModifiedDate":"2023-10-13"},{"lineNumber":31,"author":{"gitId":"jonyeokj"},"content":"     * and returns an EditContactCommand object for execution.","lastModifiedDate":"2023-10-13"},{"lineNumber":32,"author":{"gitId":"s-peiran"},"content":"     *","lastModifiedDate":"2023-10-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":35,"author":{"gitId":"jacobcuison"},"content":"    public EditContactCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        requireNonNull(args);","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":38,"author":{"gitId":"s-peiran"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_INDEX, PREFIX_NAME, PREFIX_PHONE,","lastModifiedDate":"2023-10-13"},{"lineNumber":39,"author":{"gitId":"s-peiran"},"content":"                        PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_TAG);","lastModifiedDate":"2023-10-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":43,"author":{"gitId":"s-peiran"},"content":"            index \u003d Index.fromOneBased(Integer.parseInt(argMultimap.getValue(PREFIX_INDEX).get()));","lastModifiedDate":"2023-10-13"},{"lineNumber":44,"author":{"gitId":"s-peiran"},"content":"        } catch (NoSuchElementException pe) {","lastModifiedDate":"2023-10-13"},{"lineNumber":45,"author":{"gitId":"jacobcuison"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-10-03"},{"lineNumber":46,"author":{"gitId":"jacobcuison"},"content":"                    EditContactCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2023-10-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS);","lastModifiedDate":"2023-07-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":51,"author":{"gitId":"jacobcuison"},"content":"        EditContactDescriptor editContactDescriptor \u003d new EditContactDescriptor();","lastModifiedDate":"2023-10-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":54,"author":{"gitId":"jacobcuison"},"content":"            editContactDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2023-10-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_PHONE).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":57,"author":{"gitId":"jacobcuison"},"content":"            editContactDescriptor.setPhone(ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get()));","lastModifiedDate":"2023-10-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_EMAIL).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":60,"author":{"gitId":"jacobcuison"},"content":"            editContactDescriptor.setEmail(ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get()));","lastModifiedDate":"2023-10-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_ADDRESS).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":63,"author":{"gitId":"jacobcuison"},"content":"            editContactDescriptor.setAddress(ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get()));","lastModifiedDate":"2023-10-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":65,"author":{"gitId":"jacobcuison"},"content":"        parseTagsForEdit(argMultimap.getAllValues(PREFIX_TAG)).ifPresent(editContactDescriptor::setTags);","lastModifiedDate":"2023-10-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":67,"author":{"gitId":"jacobcuison"},"content":"        if (!editContactDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2023-10-03"},{"lineNumber":68,"author":{"gitId":"jacobcuison"},"content":"            throw new ParseException(EditContactCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2023-10-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":71,"author":{"gitId":"jacobcuison"},"content":"        return new EditContactCommand(index, editContactDescriptor);","lastModifiedDate":"2023-10-03"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if {@code tags} is non-empty.","lastModifiedDate":"2017-03-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2017-01-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * {@code Set\u003cTag\u003e} containing zero tags.","lastModifiedDate":"2017-03-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    private Optional\u003cSet\u003cTag\u003e\u003e parseTagsForEdit(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assert tags !\u003d null;","lastModifiedDate":"2017-01-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2017-01-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        Collection\u003cString\u003e tagSet \u003d tags.size() \u003d\u003d 1 \u0026\u0026 tags.contains(\"\") ? Collections.emptySet() : tags;","lastModifiedDate":"2017-01-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        return Optional.of(ParserUtil.parseTags(tagSet));","lastModifiedDate":"2017-01-26"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":89,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"jonyeokj":4,"jacobcuison":14,"s-peiran":7,"-":64}},{"path":"src/main/java/seedu/address/logic/parser/EditMeetingCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jonyeokj"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":3,"author":{"gitId":"jonyeokj"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"jonyeokj"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"jonyeokj"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DESCRIPTION;","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"jonyeokj"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_INDEX;","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"jonyeokj"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PLACE;","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"jonyeokj"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TIME;","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"jonyeokj"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TITLE;","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"jonyeokj"},"content":"import java.util.NoSuchElementException;","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"jonyeokj"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"jonyeokj"},"content":"import seedu.address.logic.commands.EditMeetingCommand;","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"jonyeokj"},"content":"import seedu.address.logic.commands.EditMeetingCommand.EditMeetingDescriptor;","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"jonyeokj"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"jonyeokj"},"content":"/**","lastModifiedDate":"2023-10-13"},{"lineNumber":19,"author":{"gitId":"jonyeokj"},"content":" * Parses input arguments and creates a new EditMeetingCommandParser object","lastModifiedDate":"2023-10-13"},{"lineNumber":20,"author":{"gitId":"jonyeokj"},"content":" */","lastModifiedDate":"2023-10-13"},{"lineNumber":21,"author":{"gitId":"jonyeokj"},"content":"public class EditMeetingCommandParser implements Parser\u003cEditMeetingCommand\u003e {","lastModifiedDate":"2023-10-13"},{"lineNumber":22,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":23,"author":{"gitId":"jonyeokj"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":24,"author":{"gitId":"jonyeokj"},"content":"     * Parses the given {@code String} of arguments in the context of the EditMeetingCommandParser","lastModifiedDate":"2023-10-13"},{"lineNumber":25,"author":{"gitId":"jonyeokj"},"content":"     * and returns an EditMeetingCommandParser object for execution.","lastModifiedDate":"2023-10-13"},{"lineNumber":26,"author":{"gitId":"jonyeokj"},"content":"     *","lastModifiedDate":"2023-10-13"},{"lineNumber":27,"author":{"gitId":"jonyeokj"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-10-13"},{"lineNumber":28,"author":{"gitId":"jonyeokj"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":29,"author":{"gitId":"jonyeokj"},"content":"    public EditMeetingCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-13"},{"lineNumber":30,"author":{"gitId":"jonyeokj"},"content":"        requireNonNull(args);","lastModifiedDate":"2023-10-13"},{"lineNumber":31,"author":{"gitId":"jonyeokj"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-10-13"},{"lineNumber":32,"author":{"gitId":"jonyeokj"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_INDEX, PREFIX_TITLE, PREFIX_TIME,","lastModifiedDate":"2023-10-13"},{"lineNumber":33,"author":{"gitId":"jonyeokj"},"content":"                        PREFIX_PLACE, PREFIX_DESCRIPTION);","lastModifiedDate":"2023-10-13"},{"lineNumber":34,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":35,"author":{"gitId":"jonyeokj"},"content":"        Index index;","lastModifiedDate":"2023-10-13"},{"lineNumber":36,"author":{"gitId":"jonyeokj"},"content":"        try {","lastModifiedDate":"2023-10-13"},{"lineNumber":37,"author":{"gitId":"jonyeokj"},"content":"            index \u003d Index.fromOneBased(Integer.parseInt(argMultimap.getValue(PREFIX_INDEX).get()));","lastModifiedDate":"2023-10-13"},{"lineNumber":38,"author":{"gitId":"jonyeokj"},"content":"        } catch (NoSuchElementException pe) {","lastModifiedDate":"2023-10-13"},{"lineNumber":39,"author":{"gitId":"jonyeokj"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-10-13"},{"lineNumber":40,"author":{"gitId":"jonyeokj"},"content":"                    EditMeetingCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2023-10-13"},{"lineNumber":41,"author":{"gitId":"jonyeokj"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":42,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":43,"author":{"gitId":"jonyeokj"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_TITLE, PREFIX_TIME, PREFIX_PLACE, PREFIX_DESCRIPTION);","lastModifiedDate":"2023-10-13"},{"lineNumber":44,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":45,"author":{"gitId":"jonyeokj"},"content":"        EditMeetingDescriptor editMeetingDescriptor \u003d new EditMeetingDescriptor();","lastModifiedDate":"2023-10-13"},{"lineNumber":46,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":47,"author":{"gitId":"jonyeokj"},"content":"        if (argMultimap.getValue(PREFIX_TITLE).isPresent()) {","lastModifiedDate":"2023-10-13"},{"lineNumber":48,"author":{"gitId":"jonyeokj"},"content":"            editMeetingDescriptor.setTitle(ParserUtil.parseTitle(argMultimap.getValue(PREFIX_TITLE).get()));","lastModifiedDate":"2023-10-13"},{"lineNumber":49,"author":{"gitId":"jonyeokj"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":50,"author":{"gitId":"jonyeokj"},"content":"        if (argMultimap.getValue(PREFIX_TIME).isPresent()) {","lastModifiedDate":"2023-10-13"},{"lineNumber":51,"author":{"gitId":"jonyeokj"},"content":"            editMeetingDescriptor.setTime(ParserUtil.parseTime(argMultimap.getValue(PREFIX_TIME).get()));","lastModifiedDate":"2023-10-13"},{"lineNumber":52,"author":{"gitId":"jonyeokj"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":53,"author":{"gitId":"jonyeokj"},"content":"        if (argMultimap.getValue(PREFIX_PLACE).isPresent()) {","lastModifiedDate":"2023-10-13"},{"lineNumber":54,"author":{"gitId":"jonyeokj"},"content":"            editMeetingDescriptor.setPlace(ParserUtil.parsePlace(argMultimap.getValue(PREFIX_PLACE).get()));","lastModifiedDate":"2023-10-13"},{"lineNumber":55,"author":{"gitId":"jonyeokj"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":56,"author":{"gitId":"jonyeokj"},"content":"        if (argMultimap.getValue(PREFIX_DESCRIPTION).isPresent()) {","lastModifiedDate":"2023-10-13"},{"lineNumber":57,"author":{"gitId":"jonyeokj"},"content":"            editMeetingDescriptor.setDescription(","lastModifiedDate":"2023-10-13"},{"lineNumber":58,"author":{"gitId":"jonyeokj"},"content":"                ParserUtil.parseDescription(argMultimap.getValue(PREFIX_DESCRIPTION).get()));","lastModifiedDate":"2023-10-13"},{"lineNumber":59,"author":{"gitId":"jonyeokj"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":60,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":61,"author":{"gitId":"jonyeokj"},"content":"        if (!editMeetingDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2023-10-13"},{"lineNumber":62,"author":{"gitId":"jonyeokj"},"content":"            throw new ParseException(EditMeetingCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2023-10-13"},{"lineNumber":63,"author":{"gitId":"jonyeokj"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":64,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":65,"author":{"gitId":"jonyeokj"},"content":"        return new EditMeetingCommand(index, editMeetingDescriptor);","lastModifiedDate":"2023-10-13"},{"lineNumber":66,"author":{"gitId":"jonyeokj"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":67,"author":{"gitId":"jonyeokj"},"content":"}","lastModifiedDate":"2023-10-13"}],"authorContributionMap":{"jonyeokj":67}},{"path":"src/main/java/seedu/address/logic/parser/FindCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"s-peiran"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_KEYWORD;","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-01-26"},{"lineNumber":7,"author":{"gitId":"s-peiran"},"content":"import java.util.NoSuchElementException;","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":9,"author":{"gitId":"jacobcuison"},"content":"import seedu.address.logic.commands.FindContactCommand;","lastModifiedDate":"2023-10-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":11,"author":{"gitId":"jacobcuison"},"content":"import seedu.address.model.contact.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-10-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new FindCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"jacobcuison"},"content":"public class FindCommandParser implements Parser\u003cFindContactCommand\u003e {","lastModifiedDate":"2023-10-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the FindCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * and returns a FindCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":21,"author":{"gitId":"s-peiran"},"content":"     *","lastModifiedDate":"2023-10-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":24,"author":{"gitId":"jacobcuison"},"content":"    public FindContactCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-03"},{"lineNumber":25,"author":{"gitId":"s-peiran"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_KEYWORD);","lastModifiedDate":"2023-10-13"},{"lineNumber":26,"author":{"gitId":"s-peiran"},"content":"        String trimmedArgs;","lastModifiedDate":"2023-10-13"},{"lineNumber":27,"author":{"gitId":"s-peiran"},"content":"        try {","lastModifiedDate":"2023-10-13"},{"lineNumber":28,"author":{"gitId":"s-peiran"},"content":"            trimmedArgs \u003d argMultimap.getValue(PREFIX_KEYWORD).get().trim();","lastModifiedDate":"2023-10-13"},{"lineNumber":29,"author":{"gitId":"s-peiran"},"content":"        } catch (NoSuchElementException pe) {","lastModifiedDate":"2023-10-13"},{"lineNumber":30,"author":{"gitId":"s-peiran"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-10-13"},{"lineNumber":31,"author":{"gitId":"s-peiran"},"content":"                    FindContactCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2023-10-13"},{"lineNumber":32,"author":{"gitId":"s-peiran"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2017-02-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":35,"author":{"gitId":"jacobcuison"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindContactCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        String[] nameKeywords \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"jacobcuison"},"content":"        return new FindContactCommand(new NameContainsKeywordsPredicate(Arrays.asList(nameKeywords)));","lastModifiedDate":"2023-10-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"jacobcuison":6,"s-peiran":11,"-":26}},{"path":"src/main/java/seedu/address/logic/parser/ListContactCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"s-peiran"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-31"},{"lineNumber":2,"author":{"gitId":"s-peiran"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":3,"author":{"gitId":"s-peiran"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-10-31"},{"lineNumber":4,"author":{"gitId":"s-peiran"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-10-31"},{"lineNumber":5,"author":{"gitId":"s-peiran"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-10-31"},{"lineNumber":6,"author":{"gitId":"s-peiran"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NOTE_CONTACT;","lastModifiedDate":"2023-10-31"},{"lineNumber":7,"author":{"gitId":"s-peiran"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-10-31"},{"lineNumber":8,"author":{"gitId":"s-peiran"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-10-31"},{"lineNumber":9,"author":{"gitId":"s-peiran"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":10,"author":{"gitId":"s-peiran"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-10-31"},{"lineNumber":11,"author":{"gitId":"s-peiran"},"content":"import java.util.List;","lastModifiedDate":"2023-10-31"},{"lineNumber":12,"author":{"gitId":"s-peiran"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":13,"author":{"gitId":"s-peiran"},"content":"import seedu.address.logic.commands.ListContactCommand;","lastModifiedDate":"2023-10-31"},{"lineNumber":14,"author":{"gitId":"s-peiran"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-31"},{"lineNumber":15,"author":{"gitId":"s-peiran"},"content":"import seedu.address.model.contact.ContactFilterPredicate;","lastModifiedDate":"2023-10-31"},{"lineNumber":16,"author":{"gitId":"s-peiran"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":17,"author":{"gitId":"s-peiran"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":18,"author":{"gitId":"s-peiran"},"content":"/**","lastModifiedDate":"2023-10-31"},{"lineNumber":19,"author":{"gitId":"s-peiran"},"content":" * Parses input arguments and creates a new ListMeetingCommand object","lastModifiedDate":"2023-10-31"},{"lineNumber":20,"author":{"gitId":"s-peiran"},"content":" */","lastModifiedDate":"2023-10-31"},{"lineNumber":21,"author":{"gitId":"s-peiran"},"content":"public class ListContactCommandParser implements Parser\u003cListContactCommand\u003e {","lastModifiedDate":"2023-10-31"},{"lineNumber":22,"author":{"gitId":"s-peiran"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":23,"author":{"gitId":"s-peiran"},"content":"     * Parses the given {@code String} of arguments in the context of the ListContactCommand","lastModifiedDate":"2023-10-31"},{"lineNumber":24,"author":{"gitId":"s-peiran"},"content":"     * and returns an ListContactCommand object for execution.","lastModifiedDate":"2023-10-31"},{"lineNumber":25,"author":{"gitId":"s-peiran"},"content":"     *","lastModifiedDate":"2023-10-31"},{"lineNumber":26,"author":{"gitId":"s-peiran"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-10-31"},{"lineNumber":27,"author":{"gitId":"s-peiran"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":28,"author":{"gitId":"s-peiran"},"content":"    public ListContactCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-31"},{"lineNumber":29,"author":{"gitId":"s-peiran"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-10-31"},{"lineNumber":30,"author":{"gitId":"s-peiran"},"content":"            ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL,","lastModifiedDate":"2023-10-31"},{"lineNumber":31,"author":{"gitId":"s-peiran"},"content":"                PREFIX_ADDRESS, PREFIX_TAG, PREFIX_NOTE_CONTACT);","lastModifiedDate":"2023-10-31"},{"lineNumber":32,"author":{"gitId":"s-peiran"},"content":"        String name \u003d argMultimap.getValue(PREFIX_NAME).orElse(\"\").trim();","lastModifiedDate":"2023-10-31"},{"lineNumber":33,"author":{"gitId":"s-peiran"},"content":"        List\u003cString\u003e nameKeywords \u003d Arrays.asList(name.split(\"\\\\s+\"));","lastModifiedDate":"2023-10-31"},{"lineNumber":34,"author":{"gitId":"s-peiran"},"content":"        String phone \u003d argMultimap.getValue(PREFIX_PHONE).orElse(\"\");","lastModifiedDate":"2023-10-31"},{"lineNumber":35,"author":{"gitId":"s-peiran"},"content":"        String email \u003d argMultimap.getValue(PREFIX_EMAIL).orElse(\"\").trim();","lastModifiedDate":"2023-10-31"},{"lineNumber":36,"author":{"gitId":"s-peiran"},"content":"        String address \u003d argMultimap.getValue(PREFIX_ADDRESS).orElse(\"\").trim();","lastModifiedDate":"2023-10-31"},{"lineNumber":37,"author":{"gitId":"s-peiran"},"content":"        List\u003cString\u003e addressKeywords \u003d Arrays.asList(address.split(\"\\\\s+\"));","lastModifiedDate":"2023-10-31"},{"lineNumber":38,"author":{"gitId":"s-peiran"},"content":"        String tag \u003d argMultimap.getValue(PREFIX_TAG).orElse(\"\").trim();","lastModifiedDate":"2023-10-31"},{"lineNumber":39,"author":{"gitId":"s-peiran"},"content":"        List\u003cString\u003e tagKeywords \u003d Arrays.asList(tag.split(\"\\\\s+\"));","lastModifiedDate":"2023-10-31"},{"lineNumber":40,"author":{"gitId":"s-peiran"},"content":"        String note \u003d argMultimap.getValue(PREFIX_NOTE_CONTACT).orElse(\"\");","lastModifiedDate":"2023-10-31"},{"lineNumber":41,"author":{"gitId":"s-peiran"},"content":"        List\u003cString\u003e noteKeywords \u003d Arrays.asList(note.split(\"\\\\s+\"));","lastModifiedDate":"2023-10-31"},{"lineNumber":42,"author":{"gitId":"s-peiran"},"content":"        return new ListContactCommand(new ContactFilterPredicate(nameKeywords,","lastModifiedDate":"2023-10-31"},{"lineNumber":43,"author":{"gitId":"s-peiran"},"content":"            phone, email, addressKeywords, tagKeywords, noteKeywords));","lastModifiedDate":"2023-10-31"},{"lineNumber":44,"author":{"gitId":"s-peiran"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":45,"author":{"gitId":"s-peiran"},"content":"}","lastModifiedDate":"2023-10-31"},{"lineNumber":46,"author":{"gitId":"s-peiran"},"content":"","lastModifiedDate":"2023-10-31"}],"authorContributionMap":{"s-peiran":46}},{"path":"src/main/java/seedu/address/logic/parser/ListMeetingCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"s-peiran"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-31"},{"lineNumber":2,"author":{"gitId":"s-peiran"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":3,"author":{"gitId":"s-peiran"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DESCRIPTION;","lastModifiedDate":"2023-10-31"},{"lineNumber":4,"author":{"gitId":"s-peiran"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NOTE_MEETING;","lastModifiedDate":"2023-10-31"},{"lineNumber":5,"author":{"gitId":"s-peiran"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PLACE;","lastModifiedDate":"2023-10-31"},{"lineNumber":6,"author":{"gitId":"s-peiran"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TIME_END;","lastModifiedDate":"2023-10-31"},{"lineNumber":7,"author":{"gitId":"s-peiran"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TIME_START;","lastModifiedDate":"2023-10-31"},{"lineNumber":8,"author":{"gitId":"s-peiran"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TITLE;","lastModifiedDate":"2023-10-31"},{"lineNumber":9,"author":{"gitId":"s-peiran"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":10,"author":{"gitId":"s-peiran"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-10-31"},{"lineNumber":11,"author":{"gitId":"s-peiran"},"content":"import java.util.List;","lastModifiedDate":"2023-10-31"},{"lineNumber":12,"author":{"gitId":"s-peiran"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":13,"author":{"gitId":"s-peiran"},"content":"import seedu.address.logic.commands.ListMeetingCommand;","lastModifiedDate":"2023-10-31"},{"lineNumber":14,"author":{"gitId":"s-peiran"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-31"},{"lineNumber":15,"author":{"gitId":"s-peiran"},"content":"import seedu.address.model.meeting.MeetingFilterPredicate;","lastModifiedDate":"2023-10-31"},{"lineNumber":16,"author":{"gitId":"s-peiran"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":17,"author":{"gitId":"s-peiran"},"content":"/**","lastModifiedDate":"2023-10-31"},{"lineNumber":18,"author":{"gitId":"s-peiran"},"content":" * Parses input arguments and creates a new ListMeetingCommand object","lastModifiedDate":"2023-10-31"},{"lineNumber":19,"author":{"gitId":"s-peiran"},"content":" */","lastModifiedDate":"2023-10-31"},{"lineNumber":20,"author":{"gitId":"s-peiran"},"content":"public class ListMeetingCommandParser implements Parser\u003cListMeetingCommand\u003e {","lastModifiedDate":"2023-10-31"},{"lineNumber":21,"author":{"gitId":"s-peiran"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":22,"author":{"gitId":"s-peiran"},"content":"     * Parses the given {@code String} of arguments in the context of the ListMeetingCommand","lastModifiedDate":"2023-10-31"},{"lineNumber":23,"author":{"gitId":"s-peiran"},"content":"     * and returns an ListMeetingCommand object for execution.","lastModifiedDate":"2023-10-31"},{"lineNumber":24,"author":{"gitId":"s-peiran"},"content":"     *","lastModifiedDate":"2023-10-31"},{"lineNumber":25,"author":{"gitId":"s-peiran"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-10-31"},{"lineNumber":26,"author":{"gitId":"s-peiran"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":27,"author":{"gitId":"s-peiran"},"content":"    public ListMeetingCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-31"},{"lineNumber":28,"author":{"gitId":"s-peiran"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-10-31"},{"lineNumber":29,"author":{"gitId":"s-peiran"},"content":"            ArgumentTokenizer.tokenize(args, PREFIX_TITLE, PREFIX_TIME_START, PREFIX_TIME_END, PREFIX_PLACE,","lastModifiedDate":"2023-10-31"},{"lineNumber":30,"author":{"gitId":"s-peiran"},"content":"                PREFIX_DESCRIPTION, PREFIX_NOTE_MEETING);","lastModifiedDate":"2023-10-31"},{"lineNumber":31,"author":{"gitId":"s-peiran"},"content":"        String title \u003d argMultimap.getValue(PREFIX_TITLE).orElse(\"\").trim();","lastModifiedDate":"2023-10-31"},{"lineNumber":32,"author":{"gitId":"s-peiran"},"content":"        List\u003cString\u003e titleKeywords \u003d Arrays.asList(title.split(\"\\\\s+\"));","lastModifiedDate":"2023-10-31"},{"lineNumber":33,"author":{"gitId":"s-peiran"},"content":"        String timeStart \u003d argMultimap.getValue(PREFIX_TIME_START).orElse(\"\");","lastModifiedDate":"2023-10-31"},{"lineNumber":34,"author":{"gitId":"s-peiran"},"content":"        if (!timeStart.equals(\"\")) { // check isValidTime","lastModifiedDate":"2023-10-31"},{"lineNumber":35,"author":{"gitId":"s-peiran"},"content":"            ParserUtil.parseTime(timeStart);","lastModifiedDate":"2023-10-31"},{"lineNumber":36,"author":{"gitId":"s-peiran"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":37,"author":{"gitId":"s-peiran"},"content":"        String timeEnd \u003d argMultimap.getValue(PREFIX_TIME_END).orElse(\"\");","lastModifiedDate":"2023-10-31"},{"lineNumber":38,"author":{"gitId":"s-peiran"},"content":"        if (!timeEnd.equals(\"\")) { // check isValidTime","lastModifiedDate":"2023-10-31"},{"lineNumber":39,"author":{"gitId":"s-peiran"},"content":"            ParserUtil.parseTime(timeStart);","lastModifiedDate":"2023-10-31"},{"lineNumber":40,"author":{"gitId":"s-peiran"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":41,"author":{"gitId":"s-peiran"},"content":"        String place \u003d argMultimap.getValue(PREFIX_PLACE).orElse(\"\").trim();","lastModifiedDate":"2023-10-31"},{"lineNumber":42,"author":{"gitId":"s-peiran"},"content":"        List\u003cString\u003e placeKeywords \u003d Arrays.asList(place.split(\"\\\\s+\"));","lastModifiedDate":"2023-10-31"},{"lineNumber":43,"author":{"gitId":"s-peiran"},"content":"        String description \u003d argMultimap.getValue(PREFIX_DESCRIPTION).orElse(\"\").trim();","lastModifiedDate":"2023-10-31"},{"lineNumber":44,"author":{"gitId":"s-peiran"},"content":"        List\u003cString\u003e descriptionKeywords \u003d Arrays.asList(description.split(\"\\\\s+\"));","lastModifiedDate":"2023-10-31"},{"lineNumber":45,"author":{"gitId":"s-peiran"},"content":"        String note \u003d argMultimap.getValue(PREFIX_NOTE_MEETING).orElse(\"\");","lastModifiedDate":"2023-10-31"},{"lineNumber":46,"author":{"gitId":"s-peiran"},"content":"        List\u003cString\u003e noteKeywords \u003d Arrays.asList(note.split(\"\\\\s+\"));","lastModifiedDate":"2023-10-31"},{"lineNumber":47,"author":{"gitId":"s-peiran"},"content":"        return new ListMeetingCommand(new MeetingFilterPredicate(titleKeywords,","lastModifiedDate":"2023-10-31"},{"lineNumber":48,"author":{"gitId":"s-peiran"},"content":"            List.of(timeStart, timeEnd), placeKeywords, descriptionKeywords, noteKeywords));","lastModifiedDate":"2023-10-31"},{"lineNumber":49,"author":{"gitId":"s-peiran"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":50,"author":{"gitId":"s-peiran"},"content":"}","lastModifiedDate":"2023-10-31"}],"authorContributionMap":{"s-peiran":50}},{"path":"src/main/java/seedu/address/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"jacobcuison"},"content":"import java.util.LinkedHashSet;","lastModifiedDate":"2023-11-02"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":13,"author":{"gitId":"jacobcuison"},"content":"import seedu.address.model.contact.Address;","lastModifiedDate":"2023-10-03"},{"lineNumber":14,"author":{"gitId":"jacobcuison"},"content":"import seedu.address.model.contact.Email;","lastModifiedDate":"2023-10-03"},{"lineNumber":15,"author":{"gitId":"jacobcuison"},"content":"import seedu.address.model.contact.Name;","lastModifiedDate":"2023-10-03"},{"lineNumber":16,"author":{"gitId":"jacobcuison"},"content":"import seedu.address.model.contact.Phone;","lastModifiedDate":"2023-10-03"},{"lineNumber":17,"author":{"gitId":"chiayunrong"},"content":"import seedu.address.model.meeting.Description;","lastModifiedDate":"2023-10-02"},{"lineNumber":18,"author":{"gitId":"jonyeokj"},"content":"import seedu.address.model.meeting.Place;","lastModifiedDate":"2023-10-11"},{"lineNumber":19,"author":{"gitId":"chiayunrong"},"content":"import seedu.address.model.meeting.Time;","lastModifiedDate":"2023-10-02"},{"lineNumber":20,"author":{"gitId":"chiayunrong"},"content":"import seedu.address.model.meeting.Title;","lastModifiedDate":"2023-10-02"},{"lineNumber":21,"author":{"gitId":"jacobcuison"},"content":"import seedu.address.model.note.Note;","lastModifiedDate":"2023-10-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-02-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":34,"author":{"gitId":"s-peiran"},"content":"     *","lastModifiedDate":"2023-10-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Parses a {@code String address} into an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code address} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public static Address parseAddress(String address) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-30"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        String trimmedAddress \u003d address.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(trimmedAddress)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            throw new ParseException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        return new Address(trimmedAddress);","lastModifiedDate":"2017-05-30"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-30"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2017-05-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public static Tag parseTag(String tag) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2017-05-30"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":115,"author":{"gitId":"-"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        return new Tag(trimmedTag);","lastModifiedDate":"2017-05-30"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2017-03-07"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2017-05-15"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2017-02-11"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2017-02-11"},{"lineNumber":127,"author":{"gitId":"-"},"content":"            tagSet.add(parseTag(tagName));","lastModifiedDate":"2017-05-30"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        return tagSet;","lastModifiedDate":"2017-03-07"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":131,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":132,"author":{"gitId":"jacobcuison"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":133,"author":{"gitId":"jacobcuison"},"content":"     * Parses a {@code String note} into a {@code Note}.","lastModifiedDate":"2023-10-18"},{"lineNumber":134,"author":{"gitId":"jacobcuison"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-10-18"},{"lineNumber":135,"author":{"gitId":"jacobcuison"},"content":"     *","lastModifiedDate":"2023-10-18"},{"lineNumber":136,"author":{"gitId":"jacobcuison"},"content":"     * @throws ParseException if the given {@code note} is invalid.","lastModifiedDate":"2023-10-18"},{"lineNumber":137,"author":{"gitId":"jacobcuison"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":138,"author":{"gitId":"jacobcuison"},"content":"    public static Note parseNote(String note) throws ParseException {","lastModifiedDate":"2023-10-18"},{"lineNumber":139,"author":{"gitId":"jacobcuison"},"content":"        requireNonNull(note);","lastModifiedDate":"2023-10-18"},{"lineNumber":140,"author":{"gitId":"jacobcuison"},"content":"        String trimmedNote \u003d note.trim();","lastModifiedDate":"2023-10-18"},{"lineNumber":141,"author":{"gitId":"jacobcuison"},"content":"        return new Note(trimmedNote);","lastModifiedDate":"2023-10-18"},{"lineNumber":142,"author":{"gitId":"jacobcuison"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":143,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":144,"author":{"gitId":"jacobcuison"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":145,"author":{"gitId":"jacobcuison"},"content":"     * Parses {@code Collection\u003cString\u003e notes} into a {@code Set\u003cNote\u003e}.","lastModifiedDate":"2023-10-18"},{"lineNumber":146,"author":{"gitId":"jacobcuison"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":147,"author":{"gitId":"jacobcuison"},"content":"    public static Set\u003cNote\u003e parseNotes(Collection\u003cString\u003e notes) throws ParseException {","lastModifiedDate":"2023-10-18"},{"lineNumber":148,"author":{"gitId":"jacobcuison"},"content":"        requireNonNull(notes);","lastModifiedDate":"2023-10-18"},{"lineNumber":149,"author":{"gitId":"jacobcuison"},"content":"        final Set\u003cNote\u003e noteSet \u003d new LinkedHashSet\u003c\u003e();","lastModifiedDate":"2023-11-02"},{"lineNumber":150,"author":{"gitId":"jacobcuison"},"content":"        for (String note : notes) {","lastModifiedDate":"2023-10-18"},{"lineNumber":151,"author":{"gitId":"jacobcuison"},"content":"            noteSet.add(parseNote(note));","lastModifiedDate":"2023-10-18"},{"lineNumber":152,"author":{"gitId":"jacobcuison"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":153,"author":{"gitId":"jacobcuison"},"content":"        return noteSet;","lastModifiedDate":"2023-10-18"},{"lineNumber":154,"author":{"gitId":"jacobcuison"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":155,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":156,"author":{"gitId":"chiayunrong"},"content":"    /**","lastModifiedDate":"2023-10-02"},{"lineNumber":157,"author":{"gitId":"chiayunrong"},"content":"     * Parses a {@code String title} into an {@code Title}.","lastModifiedDate":"2023-10-02"},{"lineNumber":158,"author":{"gitId":"chiayunrong"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-10-02"},{"lineNumber":159,"author":{"gitId":"chiayunrong"},"content":"     *","lastModifiedDate":"2023-10-02"},{"lineNumber":160,"author":{"gitId":"chiayunrong"},"content":"     * @throws ParseException if the given {@code title} is invalid.","lastModifiedDate":"2023-10-02"},{"lineNumber":161,"author":{"gitId":"chiayunrong"},"content":"     */","lastModifiedDate":"2023-10-02"},{"lineNumber":162,"author":{"gitId":"chiayunrong"},"content":"    public static Title parseTitle(String title) throws ParseException {","lastModifiedDate":"2023-10-02"},{"lineNumber":163,"author":{"gitId":"chiayunrong"},"content":"        requireNonNull(title);","lastModifiedDate":"2023-10-02"},{"lineNumber":164,"author":{"gitId":"chiayunrong"},"content":"        String trimmedTitle \u003d title.trim();","lastModifiedDate":"2023-10-02"},{"lineNumber":165,"author":{"gitId":"chiayunrong"},"content":"        if (!Title.isValidTitle(trimmedTitle)) {","lastModifiedDate":"2023-10-02"},{"lineNumber":166,"author":{"gitId":"chiayunrong"},"content":"            throw new ParseException(Title.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-02"},{"lineNumber":167,"author":{"gitId":"chiayunrong"},"content":"        }","lastModifiedDate":"2023-10-02"},{"lineNumber":168,"author":{"gitId":"chiayunrong"},"content":"        return new Title(trimmedTitle);","lastModifiedDate":"2023-10-02"},{"lineNumber":169,"author":{"gitId":"chiayunrong"},"content":"    }","lastModifiedDate":"2023-10-02"},{"lineNumber":170,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":171,"author":{"gitId":"chiayunrong"},"content":"    /**","lastModifiedDate":"2023-10-02"},{"lineNumber":172,"author":{"gitId":"chiayunrong"},"content":"     * Parses a {@code String time} into an {@code Time}.","lastModifiedDate":"2023-10-02"},{"lineNumber":173,"author":{"gitId":"chiayunrong"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-10-02"},{"lineNumber":174,"author":{"gitId":"chiayunrong"},"content":"     *","lastModifiedDate":"2023-10-02"},{"lineNumber":175,"author":{"gitId":"chiayunrong"},"content":"     * @throws ParseException if the given {@code time} is invalid.","lastModifiedDate":"2023-10-02"},{"lineNumber":176,"author":{"gitId":"chiayunrong"},"content":"     */","lastModifiedDate":"2023-10-02"},{"lineNumber":177,"author":{"gitId":"chiayunrong"},"content":"    public static Time parseTime(String time) throws ParseException {","lastModifiedDate":"2023-10-02"},{"lineNumber":178,"author":{"gitId":"chiayunrong"},"content":"        String trimmedTime \u003d time.trim();","lastModifiedDate":"2023-10-02"},{"lineNumber":179,"author":{"gitId":"chiayunrong"},"content":"        if (!Time.isValidTime(trimmedTime)) {","lastModifiedDate":"2023-10-02"},{"lineNumber":180,"author":{"gitId":"chiayunrong"},"content":"            throw new ParseException(Time.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-02"},{"lineNumber":181,"author":{"gitId":"chiayunrong"},"content":"        }","lastModifiedDate":"2023-10-02"},{"lineNumber":182,"author":{"gitId":"chiayunrong"},"content":"        return new Time(trimmedTime);","lastModifiedDate":"2023-10-02"},{"lineNumber":183,"author":{"gitId":"chiayunrong"},"content":"    }","lastModifiedDate":"2023-10-02"},{"lineNumber":184,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":185,"author":{"gitId":"chiayunrong"},"content":"    /**","lastModifiedDate":"2023-10-02"},{"lineNumber":186,"author":{"gitId":"jonyeokj"},"content":"     * Parses a {@code String place} into an {@code Place}.","lastModifiedDate":"2023-10-11"},{"lineNumber":187,"author":{"gitId":"chiayunrong"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-10-02"},{"lineNumber":188,"author":{"gitId":"chiayunrong"},"content":"     *","lastModifiedDate":"2023-10-02"},{"lineNumber":189,"author":{"gitId":"jonyeokj"},"content":"     * @throws ParseException if the given {@code place} is invalid.","lastModifiedDate":"2023-10-11"},{"lineNumber":190,"author":{"gitId":"chiayunrong"},"content":"     */","lastModifiedDate":"2023-10-02"},{"lineNumber":191,"author":{"gitId":"jonyeokj"},"content":"    public static Place parsePlace(String place) throws ParseException {","lastModifiedDate":"2023-10-11"},{"lineNumber":192,"author":{"gitId":"jonyeokj"},"content":"        String trimmedPlace \u003d place.trim();","lastModifiedDate":"2023-10-11"},{"lineNumber":193,"author":{"gitId":"jonyeokj"},"content":"        if (!Place.isValidPlace(trimmedPlace)) {","lastModifiedDate":"2023-10-11"},{"lineNumber":194,"author":{"gitId":"jonyeokj"},"content":"            throw new ParseException(Place.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-11"},{"lineNumber":195,"author":{"gitId":"chiayunrong"},"content":"        }","lastModifiedDate":"2023-10-02"},{"lineNumber":196,"author":{"gitId":"jonyeokj"},"content":"        return new Place(trimmedPlace);","lastModifiedDate":"2023-10-11"},{"lineNumber":197,"author":{"gitId":"chiayunrong"},"content":"    }","lastModifiedDate":"2023-10-02"},{"lineNumber":198,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":199,"author":{"gitId":"chiayunrong"},"content":"    /**","lastModifiedDate":"2023-10-02"},{"lineNumber":200,"author":{"gitId":"chiayunrong"},"content":"     * Parses a {@code String description} into an {@code Description}.","lastModifiedDate":"2023-10-02"},{"lineNumber":201,"author":{"gitId":"chiayunrong"},"content":"     */","lastModifiedDate":"2023-10-02"},{"lineNumber":202,"author":{"gitId":"chiayunrong"},"content":"    public static Description parseDescription(String description) {","lastModifiedDate":"2023-10-02"},{"lineNumber":203,"author":{"gitId":"chiayunrong"},"content":"        return new Description(description);","lastModifiedDate":"2023-10-02"},{"lineNumber":204,"author":{"gitId":"chiayunrong"},"content":"    }","lastModifiedDate":"2023-10-02"},{"lineNumber":205,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"jonyeokj":8,"jacobcuison":30,"s-peiran":1,"chiayunrong":46,"-":120}},{"path":"src/main/java/seedu/address/logic/parser/ViewContactCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chiayunrong"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-17"},{"lineNumber":2,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":3,"author":{"gitId":"chiayunrong"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"chiayunrong"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_INDEX;","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"chiayunrong"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"chiayunrong"},"content":"import seedu.address.logic.commands.ViewContactCommand;","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"chiayunrong"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"chiayunrong"},"content":"/**","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"chiayunrong"},"content":" * Parses input arguments and creates a new ViewContactCommand object","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"chiayunrong"},"content":" */","lastModifiedDate":"2023-10-17"},{"lineNumber":14,"author":{"gitId":"chiayunrong"},"content":"public class ViewContactCommandParser implements Parser\u003cViewContactCommand\u003e {","lastModifiedDate":"2023-10-17"},{"lineNumber":15,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"chiayunrong"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"chiayunrong"},"content":"     * Parses the given {@code String} of arguments in the context of the ViewContactCommand","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"chiayunrong"},"content":"     * and returns a ViewContactCommand object for execution.","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"chiayunrong"},"content":"     *","lastModifiedDate":"2023-10-17"},{"lineNumber":20,"author":{"gitId":"chiayunrong"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-10-17"},{"lineNumber":21,"author":{"gitId":"chiayunrong"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":22,"author":{"gitId":"chiayunrong"},"content":"    public ViewContactCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-17"},{"lineNumber":23,"author":{"gitId":"chiayunrong"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_INDEX);","lastModifiedDate":"2023-10-17"},{"lineNumber":24,"author":{"gitId":"chiayunrong"},"content":"        Index index;","lastModifiedDate":"2023-10-17"},{"lineNumber":25,"author":{"gitId":"chiayunrong"},"content":"        try {","lastModifiedDate":"2023-10-17"},{"lineNumber":26,"author":{"gitId":"chiayunrong"},"content":"            index \u003d Index.fromOneBased(Integer.parseInt(argMultimap.getValue(PREFIX_INDEX).get()));","lastModifiedDate":"2023-10-17"},{"lineNumber":27,"author":{"gitId":"s-peiran"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-10-27"},{"lineNumber":28,"author":{"gitId":"chiayunrong"},"content":"            throw new ParseException(","lastModifiedDate":"2023-10-17"},{"lineNumber":29,"author":{"gitId":"chiayunrong"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, ViewContactCommand.MESSAGE_USAGE), e);","lastModifiedDate":"2023-10-17"},{"lineNumber":30,"author":{"gitId":"chiayunrong"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":31,"author":{"gitId":"chiayunrong"},"content":"        return new ViewContactCommand(index);","lastModifiedDate":"2023-10-17"},{"lineNumber":32,"author":{"gitId":"chiayunrong"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":33,"author":{"gitId":"chiayunrong"},"content":"}","lastModifiedDate":"2023-10-17"}],"authorContributionMap":{"s-peiran":1,"chiayunrong":32}},{"path":"src/main/java/seedu/address/logic/parser/ViewMeetingCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chiayunrong"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-17"},{"lineNumber":2,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":3,"author":{"gitId":"chiayunrong"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"chiayunrong"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_INDEX;","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"chiayunrong"},"content":"import java.util.NoSuchElementException;","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"chiayunrong"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"chiayunrong"},"content":"import seedu.address.logic.commands.ViewMeetingCommand;","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"chiayunrong"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"chiayunrong"},"content":"/**","lastModifiedDate":"2023-10-17"},{"lineNumber":14,"author":{"gitId":"chiayunrong"},"content":" * Parses input arguments and creates a new ViewMeetingCommand object","lastModifiedDate":"2023-10-17"},{"lineNumber":15,"author":{"gitId":"chiayunrong"},"content":" */","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"chiayunrong"},"content":"public class ViewMeetingCommandParser implements Parser\u003cViewMeetingCommand\u003e {","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"chiayunrong"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"chiayunrong"},"content":"     * Parses the given {@code String} of arguments in the context of the ViewMeetingCommand","lastModifiedDate":"2023-10-17"},{"lineNumber":20,"author":{"gitId":"chiayunrong"},"content":"     * and returns a ViewMeetingCommand object for execution.","lastModifiedDate":"2023-10-17"},{"lineNumber":21,"author":{"gitId":"chiayunrong"},"content":"     *","lastModifiedDate":"2023-10-17"},{"lineNumber":22,"author":{"gitId":"chiayunrong"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-10-17"},{"lineNumber":23,"author":{"gitId":"chiayunrong"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":24,"author":{"gitId":"chiayunrong"},"content":"    public ViewMeetingCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-17"},{"lineNumber":25,"author":{"gitId":"chiayunrong"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_INDEX);","lastModifiedDate":"2023-10-17"},{"lineNumber":26,"author":{"gitId":"chiayunrong"},"content":"        Index index;","lastModifiedDate":"2023-10-17"},{"lineNumber":27,"author":{"gitId":"chiayunrong"},"content":"        try {","lastModifiedDate":"2023-10-17"},{"lineNumber":28,"author":{"gitId":"chiayunrong"},"content":"            index \u003d Index.fromOneBased(Integer.parseInt(argMultimap.getValue(PREFIX_INDEX).get()));","lastModifiedDate":"2023-10-17"},{"lineNumber":29,"author":{"gitId":"chiayunrong"},"content":"        } catch (NoSuchElementException e) {","lastModifiedDate":"2023-10-17"},{"lineNumber":30,"author":{"gitId":"chiayunrong"},"content":"            throw new ParseException(","lastModifiedDate":"2023-10-17"},{"lineNumber":31,"author":{"gitId":"chiayunrong"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, ViewMeetingCommand.MESSAGE_USAGE), e);","lastModifiedDate":"2023-10-17"},{"lineNumber":32,"author":{"gitId":"chiayunrong"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":33,"author":{"gitId":"chiayunrong"},"content":"        return new ViewMeetingCommand(index);","lastModifiedDate":"2023-10-17"},{"lineNumber":34,"author":{"gitId":"chiayunrong"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":35,"author":{"gitId":"chiayunrong"},"content":"}","lastModifiedDate":"2023-10-17"}],"authorContributionMap":{"chiayunrong":35}},{"path":"src/main/java/seedu/address/model/AddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"jonyeokj"},"content":"import java.util.Objects;","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":10,"author":{"gitId":"jacobcuison"},"content":"import seedu.address.model.contact.Contact;","lastModifiedDate":"2023-10-03"},{"lineNumber":11,"author":{"gitId":"jacobcuison"},"content":"import seedu.address.model.contact.UniqueContactList;","lastModifiedDate":"2023-10-03"},{"lineNumber":12,"author":{"gitId":"chiayunrong"},"content":"import seedu.address.model.meeting.Meeting;","lastModifiedDate":"2023-10-02"},{"lineNumber":13,"author":{"gitId":"chiayunrong"},"content":"import seedu.address.model.meeting.MeetingList;","lastModifiedDate":"2023-10-02"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Wraps all data at the address-book level","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"jacobcuison"},"content":" * Duplicates are not allowed (by .isSameContact comparison)","lastModifiedDate":"2023-10-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class AddressBook implements ReadOnlyAddressBook {","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"jacobcuison"},"content":"    private final UniqueContactList contacts;","lastModifiedDate":"2023-10-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"chiayunrong"},"content":"    private final MeetingList meetings;","lastModifiedDate":"2023-10-02"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2019-05-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2016-10-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2016-10-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     *   among constructors.","lastModifiedDate":"2016-10-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":32,"author":{"gitId":"s-peiran"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    {","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"jacobcuison"},"content":"        contacts \u003d new UniqueContactList();","lastModifiedDate":"2023-10-03"},{"lineNumber":35,"author":{"gitId":"chiayunrong"},"content":"        meetings \u003d new MeetingList();","lastModifiedDate":"2023-10-02"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"s-peiran"},"content":"    public AddressBook() {","lastModifiedDate":"2023-10-24"},{"lineNumber":39,"author":{"gitId":"s-peiran"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"jacobcuison"},"content":"     * Creates an AddressBook using the Contacts in the {@code toBeCopied}","lastModifiedDate":"2023-10-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public AddressBook(ReadOnlyAddressBook toBeCopied) {","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2016-12-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2016-12-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    //// list overwrite operations","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":52,"author":{"gitId":"jacobcuison"},"content":"     * Replaces the contents of the contact list with {@code contacts}.","lastModifiedDate":"2023-10-03"},{"lineNumber":53,"author":{"gitId":"jacobcuison"},"content":"     * {@code contacts} must not contain duplicate contacts.","lastModifiedDate":"2023-10-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":55,"author":{"gitId":"jacobcuison"},"content":"    public void setContacts(List\u003cContact\u003e contacts) {","lastModifiedDate":"2023-10-03"},{"lineNumber":56,"author":{"gitId":"jacobcuison"},"content":"        this.contacts.setContacts(contacts);","lastModifiedDate":"2023-10-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"jonyeokj"},"content":"    /**","lastModifiedDate":"2023-10-11"},{"lineNumber":60,"author":{"gitId":"jonyeokj"},"content":"     * Replaces the contents of the meeting list with {@code meetings}.","lastModifiedDate":"2023-10-11"},{"lineNumber":61,"author":{"gitId":"jonyeokj"},"content":"     * {@code meetings} must not contain duplicate meetings.","lastModifiedDate":"2023-10-11"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-11"},{"lineNumber":63,"author":{"gitId":"jonyeokj"},"content":"    public void setMeetings(List\u003cMeeting\u003e meetings) {","lastModifiedDate":"2023-10-11"},{"lineNumber":64,"author":{"gitId":"jonyeokj"},"content":"        this.meetings.setMeetings(meetings);","lastModifiedDate":"2023-10-11"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code AddressBook} with {@code newData}.","lastModifiedDate":"2017-08-16"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyAddressBook newData) {","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        requireNonNull(newData);","lastModifiedDate":"2017-05-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-20"},{"lineNumber":73,"author":{"gitId":"jacobcuison"},"content":"        setContacts(newData.getContactList());","lastModifiedDate":"2023-10-03"},{"lineNumber":74,"author":{"gitId":"jonyeokj"},"content":"        setMeetings(newData.getMeetingList());","lastModifiedDate":"2023-10-11"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"jacobcuison"},"content":"    //// contact-level operations","lastModifiedDate":"2023-10-03"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"jacobcuison"},"content":"     * Returns true if a contact with the same identity as {@code contact} exists in the address book.","lastModifiedDate":"2023-10-03"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"jacobcuison"},"content":"    public boolean hasContact(Contact contact) {","lastModifiedDate":"2023-10-03"},{"lineNumber":83,"author":{"gitId":"jacobcuison"},"content":"        requireNonNull(contact);","lastModifiedDate":"2023-10-03"},{"lineNumber":84,"author":{"gitId":"jacobcuison"},"content":"        return contacts.contains(contact);","lastModifiedDate":"2023-10-03"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":88,"author":{"gitId":"jacobcuison"},"content":"     * Adds a contact to the address book.","lastModifiedDate":"2023-10-03"},{"lineNumber":89,"author":{"gitId":"jacobcuison"},"content":"     * The contact must not already exist in the address book.","lastModifiedDate":"2023-10-03"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":91,"author":{"gitId":"jonyeokj"},"content":"    public void addContact(Contact c) {","lastModifiedDate":"2023-10-11"},{"lineNumber":92,"author":{"gitId":"jonyeokj"},"content":"        contacts.add(c);","lastModifiedDate":"2023-10-11"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":96,"author":{"gitId":"jacobcuison"},"content":"     * Replaces the given contact {@code target} in the list with {@code editedContact}.","lastModifiedDate":"2023-10-03"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":98,"author":{"gitId":"jacobcuison"},"content":"     * The contact identity of {@code editedContact} must not be the same as another existing contact","lastModifiedDate":"2023-10-03"},{"lineNumber":99,"author":{"gitId":"jacobcuison"},"content":"     * in the address book.","lastModifiedDate":"2023-10-03"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":101,"author":{"gitId":"jacobcuison"},"content":"    public void setContact(Contact target, Contact editedContact) {","lastModifiedDate":"2023-10-03"},{"lineNumber":102,"author":{"gitId":"jacobcuison"},"content":"        requireNonNull(editedContact);","lastModifiedDate":"2023-10-03"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":104,"author":{"gitId":"jacobcuison"},"content":"        contacts.setContact(target, editedContact);","lastModifiedDate":"2023-10-03"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * Removes {@code key} from this {@code AddressBook}.","lastModifiedDate":"2017-08-16"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":111,"author":{"gitId":"jacobcuison"},"content":"    public void removeContact(Contact key) {","lastModifiedDate":"2023-10-03"},{"lineNumber":112,"author":{"gitId":"jacobcuison"},"content":"        contacts.remove(key);","lastModifiedDate":"2023-10-03"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":116,"author":{"gitId":"jonyeokj"},"content":"     * Returns true if a meeting given {@code meeting} exists in Notenote.","lastModifiedDate":"2023-10-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":118,"author":{"gitId":"jonyeokj"},"content":"    public boolean hasMeeting(Meeting meeting) {","lastModifiedDate":"2023-10-13"},{"lineNumber":119,"author":{"gitId":"jonyeokj"},"content":"        requireNonNull(meeting);","lastModifiedDate":"2023-10-13"},{"lineNumber":120,"author":{"gitId":"jonyeokj"},"content":"        return meetings.contains(meeting);","lastModifiedDate":"2023-10-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-02"},{"lineNumber":124,"author":{"gitId":"chiayunrong"},"content":"     * Adds a meeting to Notenote.","lastModifiedDate":"2023-10-02"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-02"},{"lineNumber":126,"author":{"gitId":"chiayunrong"},"content":"    public void addMeeting(Meeting meeting) {","lastModifiedDate":"2023-10-02"},{"lineNumber":127,"author":{"gitId":"chiayunrong"},"content":"        meetings.add(meeting);","lastModifiedDate":"2023-10-02"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-02"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-03"},{"lineNumber":131,"author":{"gitId":"jonyeokj"},"content":"     * Replaces the given Meeting {@code target} in the list with {@code editedMeeting}.","lastModifiedDate":"2023-10-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2023-10-13"},{"lineNumber":133,"author":{"gitId":"jonyeokj"},"content":"     * The meeting identity of {@code editedMeeting} must not be the same as another existing meeting","lastModifiedDate":"2023-10-13"},{"lineNumber":134,"author":{"gitId":"jonyeokj"},"content":"     * in the address book.","lastModifiedDate":"2023-10-13"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-03"},{"lineNumber":136,"author":{"gitId":"jonyeokj"},"content":"    public void setMeeting(Meeting target, Meeting editedMeeting) {","lastModifiedDate":"2023-10-13"},{"lineNumber":137,"author":{"gitId":"jonyeokj"},"content":"        requireNonNull(editedMeeting);","lastModifiedDate":"2023-10-13"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":139,"author":{"gitId":"jonyeokj"},"content":"        meetings.setMeeting(target, editedMeeting);","lastModifiedDate":"2023-10-13"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-03"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     * Removes {@code key} from this {@code AddressBook}.","lastModifiedDate":"2023-10-13"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2023-10-13"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":146,"author":{"gitId":"jonyeokj"},"content":"    public void removeMeeting(Meeting key) {","lastModifiedDate":"2023-10-13"},{"lineNumber":147,"author":{"gitId":"jonyeokj"},"content":"        meetings.remove(key);","lastModifiedDate":"2023-10-13"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    //// util methods","lastModifiedDate":"2016-08-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":155,"author":{"gitId":"jacobcuison"},"content":"                .add(\"contacts\", contacts)","lastModifiedDate":"2023-10-03"},{"lineNumber":156,"author":{"gitId":"jonyeokj"},"content":"                .add(\"meetings\", meetings)","lastModifiedDate":"2023-10-11"},{"lineNumber":157,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":161,"author":{"gitId":"jacobcuison"},"content":"    public ObservableList\u003cContact\u003e getContactList() {","lastModifiedDate":"2023-10-03"},{"lineNumber":162,"author":{"gitId":"jacobcuison"},"content":"        return contacts.asUnmodifiableObservableList();","lastModifiedDate":"2023-10-03"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-01"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-01"},{"lineNumber":165,"author":{"gitId":"jonyeokj"},"content":"    @Override","lastModifiedDate":"2023-10-11"},{"lineNumber":166,"author":{"gitId":"jonyeokj"},"content":"    public ObservableList\u003cMeeting\u003e getMeetingList() {","lastModifiedDate":"2023-10-11"},{"lineNumber":167,"author":{"gitId":"jonyeokj"},"content":"        return meetings.asUnmodifiableObservableList();","lastModifiedDate":"2023-10-11"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":173,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        if (!(other instanceof AddressBook)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":178,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        AddressBook otherAddressBook \u003d (AddressBook) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":182,"author":{"gitId":"jonyeokj"},"content":"        return contacts.equals(otherAddressBook.contacts) \u0026\u0026 meetings.equals(otherAddressBook.meetings);","lastModifiedDate":"2023-10-11"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":187,"author":{"gitId":"jonyeokj"},"content":"        return Objects.hash(contacts, meetings);","lastModifiedDate":"2023-10-12"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":189,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"jonyeokj":27,"jacobcuison":29,"s-peiran":3,"chiayunrong":7,"-":123}},{"path":"src/main/java/seedu/address/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"jacobcuison"},"content":"import seedu.address.model.contact.Contact;","lastModifiedDate":"2023-10-03"},{"lineNumber":9,"author":{"gitId":"chiayunrong"},"content":"import seedu.address.model.meeting.Meeting;","lastModifiedDate":"2023-10-02"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2017-08-05"},{"lineNumber":16,"author":{"gitId":"jacobcuison"},"content":"    Predicate\u003cContact\u003e PREDICATE_SHOW_ALL_CONTACTS \u003d unused -\u003e true;","lastModifiedDate":"2023-10-03"},{"lineNumber":17,"author":{"gitId":"jonyeokj"},"content":"    Predicate\u003cMeeting\u003e PREDICATE_SHOW_ALL_MEETINGS \u003d unused -\u003e true;","lastModifiedDate":"2023-10-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":19,"author":{"gitId":"chiayunrong"},"content":"    public final String MESSAGE_CONSTRAINTS \u003d \"Mode type should be either contacts or meetings\";","lastModifiedDate":"2023-10-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    void setAddressBookFilePath(Path addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Replaces address book data with the data in {@code addressBook}.","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    void setAddressBook(ReadOnlyAddressBook addressBook);","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /** Returns the AddressBook */","lastModifiedDate":"2016-09-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":60,"author":{"gitId":"jacobcuison"},"content":"     * Returns true if a contact with the same identity as {@code contact} exists in the address book.","lastModifiedDate":"2023-10-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":62,"author":{"gitId":"jacobcuison"},"content":"    boolean hasContact(Contact contact);","lastModifiedDate":"2023-10-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":65,"author":{"gitId":"jacobcuison"},"content":"     * Deletes the given contact.","lastModifiedDate":"2023-10-03"},{"lineNumber":66,"author":{"gitId":"jacobcuison"},"content":"     * The contact must exist in the address book.","lastModifiedDate":"2023-10-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":68,"author":{"gitId":"jacobcuison"},"content":"    void deleteContact(Contact target);","lastModifiedDate":"2023-10-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":71,"author":{"gitId":"jacobcuison"},"content":"     * Adds the given contact.","lastModifiedDate":"2023-10-03"},{"lineNumber":72,"author":{"gitId":"jacobcuison"},"content":"     * {@code contact} must not already exist in the address book.","lastModifiedDate":"2023-10-03"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":74,"author":{"gitId":"jacobcuison"},"content":"    void addContact(Contact contact);","lastModifiedDate":"2023-10-03"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":77,"author":{"gitId":"jacobcuison"},"content":"     * Replaces the given contact {@code target} with {@code editedContact}.","lastModifiedDate":"2023-10-03"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":79,"author":{"gitId":"jacobcuison"},"content":"     * The contact identity of {@code editedContact} must not be the same as another existing contact","lastModifiedDate":"2023-10-03"},{"lineNumber":80,"author":{"gitId":"jacobcuison"},"content":"     * in the address book.","lastModifiedDate":"2023-10-03"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":82,"author":{"gitId":"jacobcuison"},"content":"    void setContact(Contact target, Contact editedContact);","lastModifiedDate":"2023-10-03"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":84,"author":{"gitId":"jacobcuison"},"content":"    /** Returns an unmodifiable view of the filtered contact list */","lastModifiedDate":"2023-10-03"},{"lineNumber":85,"author":{"gitId":"jacobcuison"},"content":"    ObservableList\u003cContact\u003e getFilteredContactList();","lastModifiedDate":"2023-10-03"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":88,"author":{"gitId":"jacobcuison"},"content":"     * Updates the filter of the filtered contact list to filter by the given {@code predicate}.","lastModifiedDate":"2023-10-03"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":91,"author":{"gitId":"jacobcuison"},"content":"    void updateFilteredContactList(Predicate\u003cContact\u003e predicate);","lastModifiedDate":"2023-10-03"},{"lineNumber":92,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":93,"author":{"gitId":"jonyeokj"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":94,"author":{"gitId":"jonyeokj"},"content":"     * Deletes the given meeting.","lastModifiedDate":"2023-10-13"},{"lineNumber":95,"author":{"gitId":"jonyeokj"},"content":"     * The meeting must exist in the address book.","lastModifiedDate":"2023-10-13"},{"lineNumber":96,"author":{"gitId":"jonyeokj"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":97,"author":{"gitId":"jonyeokj"},"content":"    void deleteMeeting(Meeting target);","lastModifiedDate":"2023-10-13"},{"lineNumber":98,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":99,"author":{"gitId":"chiayunrong"},"content":"    /**","lastModifiedDate":"2023-10-02"},{"lineNumber":100,"author":{"gitId":"chiayunrong"},"content":"     * Adds the given meeting.","lastModifiedDate":"2023-10-02"},{"lineNumber":101,"author":{"gitId":"chiayunrong"},"content":"     */","lastModifiedDate":"2023-10-02"},{"lineNumber":102,"author":{"gitId":"chiayunrong"},"content":"    void addMeeting(Meeting meeting);","lastModifiedDate":"2023-10-02"},{"lineNumber":103,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":104,"author":{"gitId":"jonyeokj"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":105,"author":{"gitId":"jonyeokj"},"content":"     * Replaces the given meeting {@code target} with {@code editedMeeting}.","lastModifiedDate":"2023-10-13"},{"lineNumber":106,"author":{"gitId":"jonyeokj"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2023-10-13"},{"lineNumber":107,"author":{"gitId":"jonyeokj"},"content":"     * The meeting identity of {@code editedMeeting} must not be the same as another existing meeting","lastModifiedDate":"2023-10-13"},{"lineNumber":108,"author":{"gitId":"jonyeokj"},"content":"     * in the address book.","lastModifiedDate":"2023-10-13"},{"lineNumber":109,"author":{"gitId":"jonyeokj"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":110,"author":{"gitId":"jonyeokj"},"content":"    void setMeeting(Meeting target, Meeting editedMeeting);","lastModifiedDate":"2023-10-13"},{"lineNumber":111,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":112,"author":{"gitId":"chiayunrong"},"content":"    /**","lastModifiedDate":"2023-10-03"},{"lineNumber":113,"author":{"gitId":"chiayunrong"},"content":"     * Returns true if a meeting with the same id {@code meeting} exists in Notenote.","lastModifiedDate":"2023-10-03"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-03"},{"lineNumber":115,"author":{"gitId":"chiayunrong"},"content":"    boolean hasMeeting(Meeting meeting);","lastModifiedDate":"2023-10-03"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":117,"author":{"gitId":"jonyeokj"},"content":"    /** Returns an unmodifiable view of the filtered contact list */","lastModifiedDate":"2023-10-11"},{"lineNumber":118,"author":{"gitId":"jonyeokj"},"content":"    ObservableList\u003cMeeting\u003e getFilteredMeetingList();","lastModifiedDate":"2023-10-11"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-11"},{"lineNumber":121,"author":{"gitId":"jonyeokj"},"content":"     * Updates the filter of the filtered meeting list to filter by the given {@code predicate}.","lastModifiedDate":"2023-10-11"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2023-10-11"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-11"},{"lineNumber":124,"author":{"gitId":"jonyeokj"},"content":"    void updateFilteredMeetingList(Predicate\u003cMeeting\u003e predicate);","lastModifiedDate":"2023-10-11"},{"lineNumber":125,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"jonyeokj":19,"jacobcuison":18,"chiayunrong":11,"-":77}},{"path":"src/main/java/seedu/address/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":14,"author":{"gitId":"jacobcuison"},"content":"import seedu.address.model.contact.Contact;","lastModifiedDate":"2023-10-03"},{"lineNumber":15,"author":{"gitId":"chiayunrong"},"content":"import seedu.address.model.meeting.Meeting;","lastModifiedDate":"2023-10-02"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Represents the in-memory model of the address book data.","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"jacobcuison"},"content":"    private final FilteredList\u003cContact\u003e filteredContacts;","lastModifiedDate":"2023-10-03"},{"lineNumber":26,"author":{"gitId":"jonyeokj"},"content":"    private final FilteredList\u003cMeeting\u003e filteredMeetings;","lastModifiedDate":"2023-10-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Initializes a ModelManager with the given addressBook and userPrefs.","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public ModelManager(ReadOnlyAddressBook addressBook, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        requireAllNonNull(addressBook, userPrefs);","lastModifiedDate":"2017-05-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        logger.fine(\"Initializing with address book: \" + addressBook + \" and user prefs \" + userPrefs);","lastModifiedDate":"2016-12-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.addressBook \u003d new AddressBook(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":38,"author":{"gitId":"jacobcuison"},"content":"        filteredContacts \u003d new FilteredList\u003c\u003e(this.addressBook.getContactList());","lastModifiedDate":"2023-10-03"},{"lineNumber":39,"author":{"gitId":"jonyeokj"},"content":"        filteredMeetings \u003d new FilteredList\u003c\u003e(this.addressBook.getMeetingList());","lastModifiedDate":"2023-10-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        this(new AddressBook(), new UserPrefs());","lastModifiedDate":"2016-09-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return userPrefs.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void setAddressBook(ReadOnlyAddressBook addressBook) {","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        this.addressBook.resetData(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2016-09-21"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":94,"author":{"gitId":"jacobcuison"},"content":"    public boolean hasContact(Contact contact) {","lastModifiedDate":"2023-10-03"},{"lineNumber":95,"author":{"gitId":"jacobcuison"},"content":"        requireNonNull(contact);","lastModifiedDate":"2023-10-03"},{"lineNumber":96,"author":{"gitId":"jacobcuison"},"content":"        return addressBook.hasContact(contact);","lastModifiedDate":"2023-10-03"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":100,"author":{"gitId":"jacobcuison"},"content":"    public void deleteContact(Contact target) {","lastModifiedDate":"2023-10-03"},{"lineNumber":101,"author":{"gitId":"jacobcuison"},"content":"        addressBook.removeContact(target);","lastModifiedDate":"2023-10-03"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":105,"author":{"gitId":"jacobcuison"},"content":"    public void addContact(Contact contact) {","lastModifiedDate":"2023-10-03"},{"lineNumber":106,"author":{"gitId":"jacobcuison"},"content":"        addressBook.addContact(contact);","lastModifiedDate":"2023-10-03"},{"lineNumber":107,"author":{"gitId":"jacobcuison"},"content":"        updateFilteredContactList(PREDICATE_SHOW_ALL_CONTACTS);","lastModifiedDate":"2023-10-03"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":111,"author":{"gitId":"jacobcuison"},"content":"    public void setContact(Contact target, Contact editedContact) {","lastModifiedDate":"2023-10-03"},{"lineNumber":112,"author":{"gitId":"jacobcuison"},"content":"        requireAllNonNull(target, editedContact);","lastModifiedDate":"2023-10-03"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":114,"author":{"gitId":"jacobcuison"},"content":"        addressBook.setContact(target, editedContact);","lastModifiedDate":"2023-10-03"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":117,"author":{"gitId":"jonyeokj"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":118,"author":{"gitId":"jonyeokj"},"content":"    public void deleteMeeting(Meeting target) {","lastModifiedDate":"2023-10-13"},{"lineNumber":119,"author":{"gitId":"jonyeokj"},"content":"        addressBook.removeMeeting(target);","lastModifiedDate":"2023-10-13"},{"lineNumber":120,"author":{"gitId":"jonyeokj"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":121,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":122,"author":{"gitId":"jonyeokj"},"content":"    @Override","lastModifiedDate":"2023-10-11"},{"lineNumber":123,"author":{"gitId":"jonyeokj"},"content":"    public void addMeeting(Meeting meeting) {","lastModifiedDate":"2023-10-11"},{"lineNumber":124,"author":{"gitId":"jonyeokj"},"content":"        addressBook.addMeeting(meeting);","lastModifiedDate":"2023-10-11"},{"lineNumber":125,"author":{"gitId":"jonyeokj"},"content":"        updateFilteredMeetingList(PREDICATE_SHOW_ALL_MEETINGS);","lastModifiedDate":"2023-10-11"},{"lineNumber":126,"author":{"gitId":"jonyeokj"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":127,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":128,"author":{"gitId":"jonyeokj"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":129,"author":{"gitId":"jonyeokj"},"content":"    public void setMeeting(Meeting target, Meeting editedMeeting) {","lastModifiedDate":"2023-10-13"},{"lineNumber":130,"author":{"gitId":"jonyeokj"},"content":"        requireAllNonNull(target, editedMeeting);","lastModifiedDate":"2023-10-13"},{"lineNumber":131,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":132,"author":{"gitId":"jonyeokj"},"content":"        addressBook.setMeeting(target, editedMeeting);","lastModifiedDate":"2023-10-13"},{"lineNumber":133,"author":{"gitId":"jonyeokj"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":134,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":135,"author":{"gitId":"jonyeokj"},"content":"    @Override","lastModifiedDate":"2023-10-11"},{"lineNumber":136,"author":{"gitId":"jonyeokj"},"content":"    public boolean hasMeeting(Meeting meeting) {","lastModifiedDate":"2023-10-11"},{"lineNumber":137,"author":{"gitId":"jonyeokj"},"content":"        requireNonNull(meeting);","lastModifiedDate":"2023-10-11"},{"lineNumber":138,"author":{"gitId":"jonyeokj"},"content":"        return addressBook.hasMeeting(meeting);","lastModifiedDate":"2023-10-11"},{"lineNumber":139,"author":{"gitId":"jonyeokj"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":142,"author":{"gitId":"jacobcuison"},"content":"     * Returns an unmodifiable view of the list of {@code Contact} backed by the internal list of","lastModifiedDate":"2023-10-03"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2018-06-11"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":146,"author":{"gitId":"jacobcuison"},"content":"    public ObservableList\u003cContact\u003e getFilteredContactList() {","lastModifiedDate":"2023-10-03"},{"lineNumber":147,"author":{"gitId":"jacobcuison"},"content":"        return filteredContacts;","lastModifiedDate":"2023-10-03"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":151,"author":{"gitId":"jonyeokj"},"content":"    public ObservableList\u003cMeeting\u003e getFilteredMeetingList() {","lastModifiedDate":"2023-10-11"},{"lineNumber":152,"author":{"gitId":"jonyeokj"},"content":"        return filteredMeetings;","lastModifiedDate":"2023-10-11"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-10-02"},{"lineNumber":156,"author":{"gitId":"jonyeokj"},"content":"    public void updateFilteredContactList(Predicate\u003cContact\u003e predicate) {","lastModifiedDate":"2023-10-11"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2023-10-11"},{"lineNumber":158,"author":{"gitId":"jonyeokj"},"content":"        filteredContacts.setPredicate(predicate);","lastModifiedDate":"2023-10-11"},{"lineNumber":159,"author":{"gitId":"chiayunrong"},"content":"    }","lastModifiedDate":"2023-10-03"},{"lineNumber":160,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":161,"author":{"gitId":"chiayunrong"},"content":"    @Override","lastModifiedDate":"2023-10-03"},{"lineNumber":162,"author":{"gitId":"jonyeokj"},"content":"    public void updateFilteredMeetingList(Predicate\u003cMeeting\u003e predicate) {","lastModifiedDate":"2023-10-11"},{"lineNumber":163,"author":{"gitId":"jonyeokj"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2023-10-11"},{"lineNumber":164,"author":{"gitId":"jonyeokj"},"content":"        filteredMeetings.setPredicate(predicate);","lastModifiedDate":"2023-10-11"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-02"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-07-13"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":170,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        if (!(other instanceof ModelManager)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":175,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        ModelManager otherModelManager \u003d (ModelManager) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        return addressBook.equals(otherModelManager.addressBook)","lastModifiedDate":"2023-07-13"},{"lineNumber":180,"author":{"gitId":"-"},"content":"            \u0026\u0026 userPrefs.equals(otherModelManager.userPrefs)","lastModifiedDate":"2023-07-13"},{"lineNumber":181,"author":{"gitId":"jonyeokj"},"content":"            \u0026\u0026 filteredContacts.equals(otherModelManager.filteredContacts)","lastModifiedDate":"2023-10-11"},{"lineNumber":182,"author":{"gitId":"jonyeokj"},"content":"            \u0026\u0026 filteredMeetings.equals(otherModelManager.filteredMeetings);","lastModifiedDate":"2023-10-11"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":184,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"jonyeokj":34,"jacobcuison":17,"chiayunrong":4,"-":129}},{"path":"src/main/java/seedu/address/model/ReadOnlyAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"jacobcuison"},"content":"import seedu.address.model.contact.Contact;","lastModifiedDate":"2023-10-03"},{"lineNumber":5,"author":{"gitId":"jonyeokj"},"content":"import seedu.address.model.meeting.Meeting;","lastModifiedDate":"2023-10-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Unmodifiable view of an address book","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public interface ReadOnlyAddressBook {","lastModifiedDate":"2019-01-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"jacobcuison"},"content":"     * Returns an unmodifiable view of the contacts list.","lastModifiedDate":"2023-10-03"},{"lineNumber":14,"author":{"gitId":"jacobcuison"},"content":"     * This list will not contain any duplicate contacts.","lastModifiedDate":"2023-10-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"jacobcuison"},"content":"    ObservableList\u003cContact\u003e getContactList();","lastModifiedDate":"2023-10-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"jonyeokj"},"content":"    /**","lastModifiedDate":"2023-10-11"},{"lineNumber":19,"author":{"gitId":"jonyeokj"},"content":"     * Returns an unmodifiable view of the meetings list.","lastModifiedDate":"2023-10-11"},{"lineNumber":20,"author":{"gitId":"jonyeokj"},"content":"     * This list will not contain any duplicate contacts.","lastModifiedDate":"2023-10-11"},{"lineNumber":21,"author":{"gitId":"jonyeokj"},"content":"     */","lastModifiedDate":"2023-10-11"},{"lineNumber":22,"author":{"gitId":"jonyeokj"},"content":"    ObservableList\u003cMeeting\u003e getMeetingList();","lastModifiedDate":"2023-10-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"jonyeokj":6,"jacobcuison":4,"-":14}},{"path":"src/main/java/seedu/address/model/contact/Address.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jacobcuison"},"content":"package seedu.address.model.contact;","lastModifiedDate":"2023-10-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"jacobcuison"},"content":" * Represents a Contact\u0027s address in the address book.","lastModifiedDate":"2023-10-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidAddress(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Address {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Addresses can take any values, and it should not be blank\";","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2017-01-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[^\\\\s].*\";","lastModifiedDate":"2018-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Constructs an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @param address A valid address.","lastModifiedDate":"2017-05-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public Address(String address) {","lastModifiedDate":"2017-05-30"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        checkArgument(isValidAddress(address), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        value \u003d address;","lastModifiedDate":"2018-08-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid email.","lastModifiedDate":"2018-04-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static boolean isValidAddress(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (!(other instanceof Address)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        Address otherAddress \u003d (Address) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return value.equals(otherAddress.value);","lastModifiedDate":"2023-07-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"jacobcuison":2,"-":63}},{"path":"src/main/java/seedu/address/model/contact/Contact.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jacobcuison"},"content":"package seedu.address.model.contact;","lastModifiedDate":"2023-10-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-03-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-03-26"},{"lineNumber":7,"author":{"gitId":"jacobcuison"},"content":"import java.util.LinkedHashSet;","lastModifiedDate":"2023-11-02"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":12,"author":{"gitId":"jacobcuison"},"content":"import seedu.address.model.note.Note;","lastModifiedDate":"2023-10-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"jacobcuison"},"content":" * Represents a Contact in the address book.","lastModifiedDate":"2023-10-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2017-12-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"jacobcuison"},"content":"public class Contact {","lastModifiedDate":"2023-10-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    // Data fields","lastModifiedDate":"2018-04-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final Address address;","lastModifiedDate":"2018-04-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":29,"author":{"gitId":"jacobcuison"},"content":"    private final Set\u003cNote\u003e notes \u003d new LinkedHashSet\u003c\u003e();","lastModifiedDate":"2023-11-02"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"jacobcuison"},"content":"    public Contact(Name name, Phone phone, Email email, Address address, Set\u003cTag\u003e tags, Set\u003cNote\u003e notes) {","lastModifiedDate":"2023-10-18"},{"lineNumber":35,"author":{"gitId":"jacobcuison"},"content":"        requireAllNonNull(name, phone, email, address, tags, notes);","lastModifiedDate":"2023-10-18"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2017-12-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2017-12-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2017-12-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":41,"author":{"gitId":"jacobcuison"},"content":"        this.notes.addAll(notes);","lastModifiedDate":"2023-10-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public Name getName() {","lastModifiedDate":"2017-07-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2017-12-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"s-peiran"},"content":"    public String getNameString() {","lastModifiedDate":"2023-10-25"},{"lineNumber":49,"author":{"gitId":"s-peiran"},"content":"        return name.toString();","lastModifiedDate":"2023-10-25"},{"lineNumber":50,"author":{"gitId":"s-peiran"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":51,"author":{"gitId":"s-peiran"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public Phone getPhone() {","lastModifiedDate":"2017-07-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public Email getEmail() {","lastModifiedDate":"2017-07-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return email;","lastModifiedDate":"2017-12-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public Address getAddress() {","lastModifiedDate":"2017-07-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return address;","lastModifiedDate":"2017-12-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-12"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2017-03-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * if modification is attempted.","lastModifiedDate":"2017-03-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":72,"author":{"gitId":"s-peiran"},"content":"    public String getTagString() {","lastModifiedDate":"2023-10-31"},{"lineNumber":73,"author":{"gitId":"s-peiran"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-10-31"},{"lineNumber":74,"author":{"gitId":"s-peiran"},"content":"        Set\u003cTag\u003e setTags \u003d getTags();","lastModifiedDate":"2023-10-31"},{"lineNumber":75,"author":{"gitId":"s-peiran"},"content":"        for (Tag tags : setTags) {","lastModifiedDate":"2023-10-31"},{"lineNumber":76,"author":{"gitId":"s-peiran"},"content":"            sb.append(tags.toString() + \" \");","lastModifiedDate":"2023-10-31"},{"lineNumber":77,"author":{"gitId":"s-peiran"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":78,"author":{"gitId":"s-peiran"},"content":"        if (sb.length() \u003e 0) {","lastModifiedDate":"2023-10-31"},{"lineNumber":79,"author":{"gitId":"s-peiran"},"content":"            sb.setLength(sb.length() - 1);","lastModifiedDate":"2023-10-31"},{"lineNumber":80,"author":{"gitId":"s-peiran"},"content":"        } else {","lastModifiedDate":"2023-10-31"},{"lineNumber":81,"author":{"gitId":"s-peiran"},"content":"            return \"\";","lastModifiedDate":"2023-10-31"},{"lineNumber":82,"author":{"gitId":"s-peiran"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":83,"author":{"gitId":"s-peiran"},"content":"        return sb.toString();","lastModifiedDate":"2023-10-31"},{"lineNumber":84,"author":{"gitId":"s-peiran"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":85,"author":{"gitId":"s-peiran"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":86,"author":{"gitId":"jacobcuison"},"content":"    public Set\u003cNote\u003e getNotes() {","lastModifiedDate":"2023-10-18"},{"lineNumber":87,"author":{"gitId":"jacobcuison"},"content":"        return Collections.unmodifiableSet(notes);","lastModifiedDate":"2023-10-18"},{"lineNumber":88,"author":{"gitId":"jacobcuison"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":89,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":90,"author":{"gitId":"s-peiran"},"content":"    public String getNoteString() {","lastModifiedDate":"2023-10-27"},{"lineNumber":91,"author":{"gitId":"s-peiran"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-10-27"},{"lineNumber":92,"author":{"gitId":"s-peiran"},"content":"        Set\u003cNote\u003e setNotes \u003d getNotes();","lastModifiedDate":"2023-10-27"},{"lineNumber":93,"author":{"gitId":"s-peiran"},"content":"        for (Note notes : setNotes) {","lastModifiedDate":"2023-10-27"},{"lineNumber":94,"author":{"gitId":"jacobcuison"},"content":"            sb.append(notes.toString() + \" #\" + notes.getNoteID() + \"\\n\");","lastModifiedDate":"2023-11-02"},{"lineNumber":95,"author":{"gitId":"s-peiran"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":96,"author":{"gitId":"s-peiran"},"content":"        if (sb.length() \u003e 0) {","lastModifiedDate":"2023-10-27"},{"lineNumber":97,"author":{"gitId":"s-peiran"},"content":"            sb.setLength(sb.length() - 1);","lastModifiedDate":"2023-10-27"},{"lineNumber":98,"author":{"gitId":"s-peiran"},"content":"        } else {","lastModifiedDate":"2023-10-27"},{"lineNumber":99,"author":{"gitId":"s-peiran"},"content":"            return \"\";","lastModifiedDate":"2023-10-31"},{"lineNumber":100,"author":{"gitId":"s-peiran"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":101,"author":{"gitId":"s-peiran"},"content":"        return sb.toString();","lastModifiedDate":"2023-10-27"},{"lineNumber":102,"author":{"gitId":"s-peiran"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":103,"author":{"gitId":"s-peiran"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":105,"author":{"gitId":"jacobcuison"},"content":"     * Returns true if both contacts have the same name.","lastModifiedDate":"2023-10-03"},{"lineNumber":106,"author":{"gitId":"jacobcuison"},"content":"     * This defines a weaker notion of equality between two contacts.","lastModifiedDate":"2023-10-03"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":108,"author":{"gitId":"jacobcuison"},"content":"    public boolean isSameContact(Contact otherContact) {","lastModifiedDate":"2023-10-03"},{"lineNumber":109,"author":{"gitId":"jacobcuison"},"content":"        if (otherContact \u003d\u003d this) {","lastModifiedDate":"2023-10-03"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":113,"author":{"gitId":"jacobcuison"},"content":"        return otherContact !\u003d null","lastModifiedDate":"2023-10-03"},{"lineNumber":114,"author":{"gitId":"jacobcuison"},"content":"            \u0026\u0026 otherContact.getName().equals(getName());","lastModifiedDate":"2023-10-03"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":118,"author":{"gitId":"jacobcuison"},"content":"     * Returns true if both contacts have the same identity and data fields.","lastModifiedDate":"2023-10-03"},{"lineNumber":119,"author":{"gitId":"jacobcuison"},"content":"     * This defines a stronger notion of equality between two contacts.","lastModifiedDate":"2023-10-03"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":128,"author":{"gitId":"jacobcuison"},"content":"        if (!(other instanceof Contact)) {","lastModifiedDate":"2023-10-03"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":132,"author":{"gitId":"jacobcuison"},"content":"        Contact otherContact \u003d (Contact) other;","lastModifiedDate":"2023-10-03"},{"lineNumber":133,"author":{"gitId":"jacobcuison"},"content":"        return name.equals(otherContact.name)","lastModifiedDate":"2023-10-03"},{"lineNumber":134,"author":{"gitId":"jacobcuison"},"content":"            \u0026\u0026 phone.equals(otherContact.phone)","lastModifiedDate":"2023-10-03"},{"lineNumber":135,"author":{"gitId":"jacobcuison"},"content":"            \u0026\u0026 email.equals(otherContact.email)","lastModifiedDate":"2023-10-03"},{"lineNumber":136,"author":{"gitId":"jacobcuison"},"content":"            \u0026\u0026 address.equals(otherContact.address)","lastModifiedDate":"2023-10-03"},{"lineNumber":137,"author":{"gitId":"jacobcuison"},"content":"            \u0026\u0026 tags.equals(otherContact.tags)","lastModifiedDate":"2023-10-18"},{"lineNumber":138,"author":{"gitId":"jacobcuison"},"content":"            \u0026\u0026 notes.equals(otherContact.notes);","lastModifiedDate":"2023-10-18"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2016-08-24"},{"lineNumber":144,"author":{"gitId":"jacobcuison"},"content":"        return Objects.hash(name, phone, email, address, tags, notes);","lastModifiedDate":"2023-10-18"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            .add(\"name\", name)","lastModifiedDate":"2019-02-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            .add(\"phone\", phone)","lastModifiedDate":"2019-02-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            .add(\"email\", email)","lastModifiedDate":"2019-02-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            .add(\"address\", address)","lastModifiedDate":"2019-02-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            .add(\"tags\", tags)","lastModifiedDate":"2019-02-23"},{"lineNumber":155,"author":{"gitId":"jacobcuison"},"content":"            .add(\"notes\", notes)","lastModifiedDate":"2023-10-18"},{"lineNumber":156,"author":{"gitId":"-"},"content":"            .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":159,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"jacobcuison":32,"s-peiran":31,"-":96}},{"path":"src/main/java/seedu/address/model/contact/ContactFilterPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"s-peiran"},"content":"package seedu.address.model.contact;","lastModifiedDate":"2023-10-31"},{"lineNumber":2,"author":{"gitId":"s-peiran"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":3,"author":{"gitId":"s-peiran"},"content":"import java.util.List;","lastModifiedDate":"2023-10-31"},{"lineNumber":4,"author":{"gitId":"s-peiran"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-10-31"},{"lineNumber":5,"author":{"gitId":"s-peiran"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":6,"author":{"gitId":"s-peiran"},"content":"/**","lastModifiedDate":"2023-10-31"},{"lineNumber":7,"author":{"gitId":"s-peiran"},"content":" * Tests that a {@code Contact}\u0027s {@code all values} matches any of the keywords given.","lastModifiedDate":"2023-10-31"},{"lineNumber":8,"author":{"gitId":"s-peiran"},"content":" */","lastModifiedDate":"2023-10-31"},{"lineNumber":9,"author":{"gitId":"s-peiran"},"content":"public class ContactFilterPredicate implements Predicate\u003cContact\u003e {","lastModifiedDate":"2023-10-31"},{"lineNumber":10,"author":{"gitId":"s-peiran"},"content":"    private final List\u003cString\u003e nameKeywords;","lastModifiedDate":"2023-10-31"},{"lineNumber":11,"author":{"gitId":"s-peiran"},"content":"    private final String phoneNumber;","lastModifiedDate":"2023-10-31"},{"lineNumber":12,"author":{"gitId":"s-peiran"},"content":"    private final String emailAddress;","lastModifiedDate":"2023-10-31"},{"lineNumber":13,"author":{"gitId":"s-peiran"},"content":"    private final List\u003cString\u003e addressKeywords;","lastModifiedDate":"2023-10-31"},{"lineNumber":14,"author":{"gitId":"s-peiran"},"content":"    private final List\u003cString\u003e tagKeywords;","lastModifiedDate":"2023-10-31"},{"lineNumber":15,"author":{"gitId":"s-peiran"},"content":"    private final List\u003cString\u003e noteKeywords;","lastModifiedDate":"2023-10-31"},{"lineNumber":16,"author":{"gitId":"s-peiran"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":17,"author":{"gitId":"s-peiran"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":18,"author":{"gitId":"s-peiran"},"content":"     * Contructs the ContactFilterPredicate class","lastModifiedDate":"2023-10-31"},{"lineNumber":19,"author":{"gitId":"s-peiran"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":20,"author":{"gitId":"s-peiran"},"content":"    public ContactFilterPredicate(List\u003cString\u003e nameKeywords, String phoneNumber,","lastModifiedDate":"2023-10-31"},{"lineNumber":21,"author":{"gitId":"s-peiran"},"content":"                                  String emailAddress, List\u003cString\u003e addressKeywords,","lastModifiedDate":"2023-10-31"},{"lineNumber":22,"author":{"gitId":"s-peiran"},"content":"                                  List\u003cString\u003e tagKeywords, List\u003cString\u003e noteKeywords) {","lastModifiedDate":"2023-10-31"},{"lineNumber":23,"author":{"gitId":"s-peiran"},"content":"        this.nameKeywords \u003d nameKeywords;","lastModifiedDate":"2023-10-31"},{"lineNumber":24,"author":{"gitId":"s-peiran"},"content":"        this.phoneNumber \u003d phoneNumber;","lastModifiedDate":"2023-10-31"},{"lineNumber":25,"author":{"gitId":"s-peiran"},"content":"        this.emailAddress \u003d emailAddress;","lastModifiedDate":"2023-10-31"},{"lineNumber":26,"author":{"gitId":"s-peiran"},"content":"        this.addressKeywords \u003d addressKeywords;","lastModifiedDate":"2023-10-31"},{"lineNumber":27,"author":{"gitId":"s-peiran"},"content":"        this.tagKeywords \u003d tagKeywords;","lastModifiedDate":"2023-10-31"},{"lineNumber":28,"author":{"gitId":"s-peiran"},"content":"        this.noteKeywords \u003d noteKeywords;","lastModifiedDate":"2023-10-31"},{"lineNumber":29,"author":{"gitId":"s-peiran"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":30,"author":{"gitId":"s-peiran"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":31,"author":{"gitId":"s-peiran"},"content":"    @Override","lastModifiedDate":"2023-10-31"},{"lineNumber":32,"author":{"gitId":"s-peiran"},"content":"    public boolean test(Contact contact) {","lastModifiedDate":"2023-10-31"},{"lineNumber":33,"author":{"gitId":"s-peiran"},"content":"        boolean name \u003d (nameKeywords.size() \u003d\u003d 1 \u0026\u0026 nameKeywords.get(0).isEmpty()) || nameKeywords.stream()","lastModifiedDate":"2023-10-31"},{"lineNumber":34,"author":{"gitId":"jonyeokj"},"content":"            .anyMatch(keyword -\u003e contact.getName().fullName.toLowerCase().contains(keyword.toLowerCase()));","lastModifiedDate":"2023-11-02"},{"lineNumber":35,"author":{"gitId":"jonyeokj"},"content":"        boolean email \u003d emailAddress.isEmpty() || contact.getEmail().value.toLowerCase()","lastModifiedDate":"2023-11-02"},{"lineNumber":36,"author":{"gitId":"jonyeokj"},"content":"            .contains(emailAddress.toLowerCase());","lastModifiedDate":"2023-11-02"},{"lineNumber":37,"author":{"gitId":"jonyeokj"},"content":"        boolean phone \u003d phoneNumber.isEmpty() || contact.getPhone().value.contains(phoneNumber);","lastModifiedDate":"2023-11-02"},{"lineNumber":38,"author":{"gitId":"s-peiran"},"content":"        boolean address \u003d (addressKeywords.size() \u003d\u003d 1 \u0026\u0026 addressKeywords.get(0).isEmpty()) || addressKeywords.stream()","lastModifiedDate":"2023-10-31"},{"lineNumber":39,"author":{"gitId":"jonyeokj"},"content":"            .anyMatch(keyword -\u003e contact.getAddress().value.toLowerCase().contains(keyword.toLowerCase()));","lastModifiedDate":"2023-11-02"},{"lineNumber":40,"author":{"gitId":"s-peiran"},"content":"        boolean tag \u003d (tagKeywords.size() \u003d\u003d 1 \u0026\u0026 tagKeywords.get(0).isEmpty())","lastModifiedDate":"2023-10-31"},{"lineNumber":41,"author":{"gitId":"jonyeokj"},"content":"            || tagKeywords.stream().anyMatch(keyword -\u003e contact.getTagString().toLowerCase()","lastModifiedDate":"2023-11-02"},{"lineNumber":42,"author":{"gitId":"jonyeokj"},"content":"                .contains(keyword.toLowerCase()));","lastModifiedDate":"2023-11-02"},{"lineNumber":43,"author":{"gitId":"s-peiran"},"content":"        boolean note \u003d (noteKeywords.size() \u003d\u003d 1 \u0026\u0026 noteKeywords.get(0).isEmpty())","lastModifiedDate":"2023-10-31"},{"lineNumber":44,"author":{"gitId":"jonyeokj"},"content":"            || noteKeywords.stream().anyMatch(keyword -\u003e contact.getNoteString().toLowerCase()","lastModifiedDate":"2023-11-02"},{"lineNumber":45,"author":{"gitId":"jonyeokj"},"content":"                .contains(keyword.toLowerCase()));","lastModifiedDate":"2023-11-02"},{"lineNumber":46,"author":{"gitId":"s-peiran"},"content":"        return name \u0026\u0026 email \u0026\u0026 phone \u0026\u0026 address \u0026\u0026 tag \u0026\u0026 note;","lastModifiedDate":"2023-10-31"},{"lineNumber":47,"author":{"gitId":"s-peiran"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":48,"author":{"gitId":"s-peiran"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":49,"author":{"gitId":"s-peiran"},"content":"    @Override","lastModifiedDate":"2023-10-31"},{"lineNumber":50,"author":{"gitId":"s-peiran"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-31"},{"lineNumber":51,"author":{"gitId":"s-peiran"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-31"},{"lineNumber":52,"author":{"gitId":"s-peiran"},"content":"            return true;","lastModifiedDate":"2023-10-31"},{"lineNumber":53,"author":{"gitId":"s-peiran"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":54,"author":{"gitId":"s-peiran"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":55,"author":{"gitId":"s-peiran"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-31"},{"lineNumber":56,"author":{"gitId":"s-peiran"},"content":"        if (!(other instanceof ContactFilterPredicate)) {","lastModifiedDate":"2023-10-31"},{"lineNumber":57,"author":{"gitId":"s-peiran"},"content":"            return false;","lastModifiedDate":"2023-10-31"},{"lineNumber":58,"author":{"gitId":"s-peiran"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":59,"author":{"gitId":"s-peiran"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":60,"author":{"gitId":"s-peiran"},"content":"        ContactFilterPredicate otherContactFilterPredicate \u003d (ContactFilterPredicate) other;","lastModifiedDate":"2023-10-31"},{"lineNumber":61,"author":{"gitId":"s-peiran"},"content":"        return nameKeywords.equals(otherContactFilterPredicate.nameKeywords)","lastModifiedDate":"2023-10-31"},{"lineNumber":62,"author":{"gitId":"s-peiran"},"content":"            \u0026\u0026 phoneNumber.equals(otherContactFilterPredicate.phoneNumber)","lastModifiedDate":"2023-10-31"},{"lineNumber":63,"author":{"gitId":"s-peiran"},"content":"            \u0026\u0026 emailAddress.equals(otherContactFilterPredicate.emailAddress)","lastModifiedDate":"2023-10-31"},{"lineNumber":64,"author":{"gitId":"s-peiran"},"content":"            \u0026\u0026 addressKeywords.equals(otherContactFilterPredicate.addressKeywords)","lastModifiedDate":"2023-10-31"},{"lineNumber":65,"author":{"gitId":"s-peiran"},"content":"            \u0026\u0026 tagKeywords.equals(otherContactFilterPredicate.tagKeywords)","lastModifiedDate":"2023-10-31"},{"lineNumber":66,"author":{"gitId":"s-peiran"},"content":"            \u0026\u0026 noteKeywords.equals(otherContactFilterPredicate.noteKeywords);","lastModifiedDate":"2023-10-31"},{"lineNumber":67,"author":{"gitId":"s-peiran"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":68,"author":{"gitId":"s-peiran"},"content":"}","lastModifiedDate":"2023-10-31"}],"authorContributionMap":{"jonyeokj":9,"s-peiran":59}},{"path":"src/main/java/seedu/address/model/contact/Email.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jacobcuison"},"content":"package seedu.address.model.contact;","lastModifiedDate":"2023-10-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"jacobcuison"},"content":" * Represents a Contact\u0027s email in the address book.","lastModifiedDate":"2023-10-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidEmail(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Email {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private static final String SPECIAL_CHARACTERS \u003d \"+_.-\";","lastModifiedDate":"2021-07-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Emails should be of the format local-part@domain \"","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            + \"and adhere to the following constraints:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"            + \"1. The local-part should only contain alphanumeric characters and these special characters, excluding \"","lastModifiedDate":"2018-02-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"            + \"the parentheses, (\" + SPECIAL_CHARACTERS + \"). The local-part may not start or end with any special \"","lastModifiedDate":"2021-07-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"            + \"characters.\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"2. This is followed by a \u0027@\u0027 and then a domain name. The domain name is made up of domain labels \"","lastModifiedDate":"2021-07-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"separated by periods.\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"The domain name must:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"    - end with a domain label at least 2 characters long\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"    - have each domain label start and end with alphanumeric characters\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"    - have each domain label consist of alphanumeric characters, separated only by hyphens, if any.\";","lastModifiedDate":"2021-07-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    // alphanumeric and special characters","lastModifiedDate":"2018-02-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String ALPHANUMERIC_NO_UNDERSCORE \u003d \"[^\\\\W_]+\"; // alphanumeric characters except underscore","lastModifiedDate":"2021-07-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String LOCAL_PART_REGEX \u003d \"^\" + ALPHANUMERIC_NO_UNDERSCORE + \"([\" + SPECIAL_CHARACTERS + \"]\"","lastModifiedDate":"2021-07-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2021-07-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_PART_REGEX \u003d ALPHANUMERIC_NO_UNDERSCORE","lastModifiedDate":"2021-07-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + \"(-\" + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2021-07-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_LAST_PART_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"){2,}$\"; // At least two chars","lastModifiedDate":"2021-07-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"\\\\.)*\" + DOMAIN_LAST_PART_REGEX;","lastModifiedDate":"2021-07-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d LOCAL_PART_REGEX + \"@\" + DOMAIN_REGEX;","lastModifiedDate":"2021-07-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Constructs an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @param email A valid email address.","lastModifiedDate":"2017-05-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Email(String email) {","lastModifiedDate":"2017-05-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        checkArgument(isValidEmail(email), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        value \u003d email;","lastModifiedDate":"2018-08-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Returns if a given string is a valid email.","lastModifiedDate":"2018-04-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static boolean isValidEmail(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        if (!(other instanceof Email)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        Email otherEmail \u003d (Email) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return value.equals(otherEmail.value);","lastModifiedDate":"2023-07-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"jacobcuison":2,"-":77}},{"path":"src/main/java/seedu/address/model/contact/Name.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jacobcuison"},"content":"package seedu.address.model.contact;","lastModifiedDate":"2023-10-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"jacobcuison"},"content":" * Represents a Contact\u0027s name in the address book.","lastModifiedDate":"2023-10-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Name {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            \"Names should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2018-04-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2017-01-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2018-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public final String fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Constructs a {@code Name}.","lastModifiedDate":"2017-05-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @param name A valid name.","lastModifiedDate":"2017-05-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public Name(String name) {","lastModifiedDate":"2017-05-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        checkArgument(isValidName(name), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        fullName \u003d name;","lastModifiedDate":"2018-08-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2018-04-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static boolean isValidName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        if (!(other instanceof Name)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Name otherName \u003d (Name) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return fullName.equals(otherName.fullName);","lastModifiedDate":"2023-07-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return fullName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"jacobcuison":2,"-":65}},{"path":"src/main/java/seedu/address/model/contact/NameContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jacobcuison"},"content":"package seedu.address.model.contact;","lastModifiedDate":"2023-10-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"jacobcuison"},"content":" * Tests that a {@code Contact}\u0027s {@code Name} matches any of the keywords given.","lastModifiedDate":"2023-10-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"jacobcuison"},"content":"public class NameContainsKeywordsPredicate implements Predicate\u003cContact\u003e {","lastModifiedDate":"2023-10-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public NameContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"jacobcuison"},"content":"    public boolean test(Contact contact) {","lastModifiedDate":"2023-10-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        return keywords.stream()","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"jacobcuison"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(contact.getName().fullName, keyword));","lastModifiedDate":"2023-10-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        if (!(other instanceof NameContainsKeywordsPredicate)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate otherNameContainsKeywordsPredicate \u003d (NameContainsKeywordsPredicate) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return keywords.equals(otherNameContainsKeywordsPredicate.keywords);","lastModifiedDate":"2023-07-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this).add(\"keywords\", keywords).toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"jacobcuison":5,"-":39}},{"path":"src/main/java/seedu/address/model/contact/Phone.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jacobcuison"},"content":"package seedu.address.model.contact;","lastModifiedDate":"2023-10-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"jacobcuison"},"content":" * Represents a Contact\u0027s phone number in the address book.","lastModifiedDate":"2023-10-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidPhone(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Phone {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        \"Phone numbers should only contain numbers, and it should be at least 3 digits long\";","lastModifiedDate":"2018-04-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\d{3,}\";","lastModifiedDate":"2018-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Constructs a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @param phone A valid phone number.","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public Phone(String phone) {","lastModifiedDate":"2017-05-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        checkArgument(isValidPhone(phone), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        value \u003d phone;","lastModifiedDate":"2018-08-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid phone number.","lastModifiedDate":"2018-04-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static boolean isValidPhone(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        if (!(other instanceof Phone)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        Phone otherPhone \u003d (Phone) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return value.equals(otherPhone.value);","lastModifiedDate":"2023-07-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"jacobcuison":2,"-":58}},{"path":"src/main/java/seedu/address/model/contact/UniqueContactList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jacobcuison"},"content":"package seedu.address.model.contact;","lastModifiedDate":"2023-10-03"},{"lineNumber":2,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":3,"author":{"gitId":"jacobcuison"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-03"},{"lineNumber":4,"author":{"gitId":"jacobcuison"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-10-03"},{"lineNumber":5,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":6,"author":{"gitId":"jacobcuison"},"content":"import java.util.Iterator;","lastModifiedDate":"2023-10-03"},{"lineNumber":7,"author":{"gitId":"jacobcuison"},"content":"import java.util.List;","lastModifiedDate":"2023-10-03"},{"lineNumber":8,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":9,"author":{"gitId":"jacobcuison"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-10-03"},{"lineNumber":10,"author":{"gitId":"jacobcuison"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-10-03"},{"lineNumber":11,"author":{"gitId":"jacobcuison"},"content":"import seedu.address.model.contact.exceptions.ContactNotFoundException;","lastModifiedDate":"2023-10-03"},{"lineNumber":12,"author":{"gitId":"jacobcuison"},"content":"import seedu.address.model.contact.exceptions.DuplicateContactException;","lastModifiedDate":"2023-10-03"},{"lineNumber":13,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":14,"author":{"gitId":"jacobcuison"},"content":"/**","lastModifiedDate":"2023-10-03"},{"lineNumber":15,"author":{"gitId":"jacobcuison"},"content":" * A list of contacts that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2023-10-03"},{"lineNumber":16,"author":{"gitId":"jacobcuison"},"content":" * A contact is considered unique by comparing using {@code Contact#isSameContact(Contact)}. As such, adding","lastModifiedDate":"2023-10-03"},{"lineNumber":17,"author":{"gitId":"jacobcuison"},"content":" * and updating of contacts uses Contact#isSameContact(Contact) for equality so as to ensure that","lastModifiedDate":"2023-10-03"},{"lineNumber":18,"author":{"gitId":"jacobcuison"},"content":" * the contact being added or updated is unique in terms of identity in the UniqueContactList. However, the removal of","lastModifiedDate":"2023-10-03"},{"lineNumber":19,"author":{"gitId":"jacobcuison"},"content":" * a contact uses Contact#equals(Object) so as to ensure that the contact with exactly the same fields will be removed.","lastModifiedDate":"2023-10-03"},{"lineNumber":20,"author":{"gitId":"jacobcuison"},"content":" *","lastModifiedDate":"2023-10-03"},{"lineNumber":21,"author":{"gitId":"jacobcuison"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2023-10-03"},{"lineNumber":22,"author":{"gitId":"jacobcuison"},"content":" *","lastModifiedDate":"2023-10-03"},{"lineNumber":23,"author":{"gitId":"jacobcuison"},"content":" * @see Contact#isSameContact(Contact)","lastModifiedDate":"2023-10-03"},{"lineNumber":24,"author":{"gitId":"jacobcuison"},"content":" */","lastModifiedDate":"2023-10-03"},{"lineNumber":25,"author":{"gitId":"jacobcuison"},"content":"public class UniqueContactList implements Iterable\u003cContact\u003e {","lastModifiedDate":"2023-10-03"},{"lineNumber":26,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":27,"author":{"gitId":"jacobcuison"},"content":"    private final ObservableList\u003cContact\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2023-10-03"},{"lineNumber":28,"author":{"gitId":"jacobcuison"},"content":"    private final ObservableList\u003cContact\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2023-10-03"},{"lineNumber":29,"author":{"gitId":"jacobcuison"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2023-10-03"},{"lineNumber":30,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":31,"author":{"gitId":"jacobcuison"},"content":"    /**","lastModifiedDate":"2023-10-03"},{"lineNumber":32,"author":{"gitId":"jacobcuison"},"content":"     * Returns true if the list contains an equivalent contact as the given argument.","lastModifiedDate":"2023-10-03"},{"lineNumber":33,"author":{"gitId":"jacobcuison"},"content":"     */","lastModifiedDate":"2023-10-03"},{"lineNumber":34,"author":{"gitId":"jacobcuison"},"content":"    public boolean contains(Contact toCheck) {","lastModifiedDate":"2023-10-03"},{"lineNumber":35,"author":{"gitId":"jacobcuison"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2023-10-03"},{"lineNumber":36,"author":{"gitId":"jacobcuison"},"content":"        return internalList.stream().anyMatch(toCheck::isSameContact);","lastModifiedDate":"2023-10-03"},{"lineNumber":37,"author":{"gitId":"jacobcuison"},"content":"    }","lastModifiedDate":"2023-10-03"},{"lineNumber":38,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":39,"author":{"gitId":"jacobcuison"},"content":"    /**","lastModifiedDate":"2023-10-03"},{"lineNumber":40,"author":{"gitId":"jacobcuison"},"content":"     * Adds a contact to the list.","lastModifiedDate":"2023-10-03"},{"lineNumber":41,"author":{"gitId":"jacobcuison"},"content":"     * The contact must not already exist in the list.","lastModifiedDate":"2023-10-03"},{"lineNumber":42,"author":{"gitId":"jacobcuison"},"content":"     */","lastModifiedDate":"2023-10-03"},{"lineNumber":43,"author":{"gitId":"jacobcuison"},"content":"    public void add(Contact toAdd) {","lastModifiedDate":"2023-10-03"},{"lineNumber":44,"author":{"gitId":"jacobcuison"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2023-10-03"},{"lineNumber":45,"author":{"gitId":"jacobcuison"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2023-10-03"},{"lineNumber":46,"author":{"gitId":"jacobcuison"},"content":"            throw new DuplicateContactException();","lastModifiedDate":"2023-10-03"},{"lineNumber":47,"author":{"gitId":"jacobcuison"},"content":"        }","lastModifiedDate":"2023-10-03"},{"lineNumber":48,"author":{"gitId":"jacobcuison"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2023-10-03"},{"lineNumber":49,"author":{"gitId":"jacobcuison"},"content":"    }","lastModifiedDate":"2023-10-03"},{"lineNumber":50,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":51,"author":{"gitId":"jacobcuison"},"content":"    /**","lastModifiedDate":"2023-10-03"},{"lineNumber":52,"author":{"gitId":"jacobcuison"},"content":"     * Replaces the contact {@code target} in the list with {@code editedContact}.","lastModifiedDate":"2023-10-03"},{"lineNumber":53,"author":{"gitId":"jacobcuison"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2023-10-03"},{"lineNumber":54,"author":{"gitId":"jacobcuison"},"content":"     * The contact identity of {@code editedContact} must not be the same as another existing contact in the list.","lastModifiedDate":"2023-10-03"},{"lineNumber":55,"author":{"gitId":"jacobcuison"},"content":"     */","lastModifiedDate":"2023-10-03"},{"lineNumber":56,"author":{"gitId":"jacobcuison"},"content":"    public void setContact(Contact target, Contact editedContact) {","lastModifiedDate":"2023-10-03"},{"lineNumber":57,"author":{"gitId":"jacobcuison"},"content":"        requireAllNonNull(target, editedContact);","lastModifiedDate":"2023-10-03"},{"lineNumber":58,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":59,"author":{"gitId":"jacobcuison"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2023-10-03"},{"lineNumber":60,"author":{"gitId":"jacobcuison"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2023-10-03"},{"lineNumber":61,"author":{"gitId":"jacobcuison"},"content":"            throw new ContactNotFoundException();","lastModifiedDate":"2023-10-03"},{"lineNumber":62,"author":{"gitId":"jacobcuison"},"content":"        }","lastModifiedDate":"2023-10-03"},{"lineNumber":63,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":64,"author":{"gitId":"jacobcuison"},"content":"        if (!target.isSameContact(editedContact) \u0026\u0026 contains(editedContact)) {","lastModifiedDate":"2023-10-03"},{"lineNumber":65,"author":{"gitId":"jacobcuison"},"content":"            throw new DuplicateContactException();","lastModifiedDate":"2023-10-03"},{"lineNumber":66,"author":{"gitId":"jacobcuison"},"content":"        }","lastModifiedDate":"2023-10-03"},{"lineNumber":67,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":68,"author":{"gitId":"jacobcuison"},"content":"        internalList.set(index, editedContact);","lastModifiedDate":"2023-10-03"},{"lineNumber":69,"author":{"gitId":"jacobcuison"},"content":"    }","lastModifiedDate":"2023-10-03"},{"lineNumber":70,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":71,"author":{"gitId":"jacobcuison"},"content":"    /**","lastModifiedDate":"2023-10-03"},{"lineNumber":72,"author":{"gitId":"jacobcuison"},"content":"     * Removes the equivalent contact from the list.","lastModifiedDate":"2023-10-03"},{"lineNumber":73,"author":{"gitId":"jacobcuison"},"content":"     * The contact must exist in the list.","lastModifiedDate":"2023-10-03"},{"lineNumber":74,"author":{"gitId":"jacobcuison"},"content":"     */","lastModifiedDate":"2023-10-03"},{"lineNumber":75,"author":{"gitId":"jacobcuison"},"content":"    public void remove(Contact toRemove) {","lastModifiedDate":"2023-10-03"},{"lineNumber":76,"author":{"gitId":"jacobcuison"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2023-10-03"},{"lineNumber":77,"author":{"gitId":"jacobcuison"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2023-10-03"},{"lineNumber":78,"author":{"gitId":"jacobcuison"},"content":"            throw new ContactNotFoundException();","lastModifiedDate":"2023-10-03"},{"lineNumber":79,"author":{"gitId":"jacobcuison"},"content":"        }","lastModifiedDate":"2023-10-03"},{"lineNumber":80,"author":{"gitId":"jacobcuison"},"content":"    }","lastModifiedDate":"2023-10-03"},{"lineNumber":81,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":82,"author":{"gitId":"jacobcuison"},"content":"    public void setContacts(UniqueContactList replacement) {","lastModifiedDate":"2023-10-03"},{"lineNumber":83,"author":{"gitId":"jacobcuison"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2023-10-03"},{"lineNumber":84,"author":{"gitId":"jacobcuison"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2023-10-03"},{"lineNumber":85,"author":{"gitId":"jacobcuison"},"content":"    }","lastModifiedDate":"2023-10-03"},{"lineNumber":86,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":87,"author":{"gitId":"jacobcuison"},"content":"    /**","lastModifiedDate":"2023-10-03"},{"lineNumber":88,"author":{"gitId":"jacobcuison"},"content":"     * Replaces the contents of this list with {@code contacts}.","lastModifiedDate":"2023-10-03"},{"lineNumber":89,"author":{"gitId":"jacobcuison"},"content":"     * {@code contacts} must not contain duplicate contacts.","lastModifiedDate":"2023-10-03"},{"lineNumber":90,"author":{"gitId":"jacobcuison"},"content":"     */","lastModifiedDate":"2023-10-03"},{"lineNumber":91,"author":{"gitId":"jacobcuison"},"content":"    public void setContacts(List\u003cContact\u003e contacts) {","lastModifiedDate":"2023-10-03"},{"lineNumber":92,"author":{"gitId":"jacobcuison"},"content":"        requireAllNonNull(contacts);","lastModifiedDate":"2023-10-03"},{"lineNumber":93,"author":{"gitId":"jacobcuison"},"content":"        if (!contactsAreUnique(contacts)) {","lastModifiedDate":"2023-10-03"},{"lineNumber":94,"author":{"gitId":"jacobcuison"},"content":"            throw new DuplicateContactException();","lastModifiedDate":"2023-10-03"},{"lineNumber":95,"author":{"gitId":"jacobcuison"},"content":"        }","lastModifiedDate":"2023-10-03"},{"lineNumber":96,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":97,"author":{"gitId":"jacobcuison"},"content":"        internalList.setAll(contacts);","lastModifiedDate":"2023-10-03"},{"lineNumber":98,"author":{"gitId":"jacobcuison"},"content":"    }","lastModifiedDate":"2023-10-03"},{"lineNumber":99,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":100,"author":{"gitId":"jacobcuison"},"content":"    /**","lastModifiedDate":"2023-10-03"},{"lineNumber":101,"author":{"gitId":"jacobcuison"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2023-10-03"},{"lineNumber":102,"author":{"gitId":"jacobcuison"},"content":"     */","lastModifiedDate":"2023-10-03"},{"lineNumber":103,"author":{"gitId":"jacobcuison"},"content":"    public ObservableList\u003cContact\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2023-10-03"},{"lineNumber":104,"author":{"gitId":"jacobcuison"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2023-10-03"},{"lineNumber":105,"author":{"gitId":"jacobcuison"},"content":"    }","lastModifiedDate":"2023-10-03"},{"lineNumber":106,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":107,"author":{"gitId":"jacobcuison"},"content":"    @Override","lastModifiedDate":"2023-10-03"},{"lineNumber":108,"author":{"gitId":"jacobcuison"},"content":"    public Iterator\u003cContact\u003e iterator() {","lastModifiedDate":"2023-10-03"},{"lineNumber":109,"author":{"gitId":"jacobcuison"},"content":"        return internalList.iterator();","lastModifiedDate":"2023-10-03"},{"lineNumber":110,"author":{"gitId":"jacobcuison"},"content":"    }","lastModifiedDate":"2023-10-03"},{"lineNumber":111,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":112,"author":{"gitId":"jacobcuison"},"content":"    @Override","lastModifiedDate":"2023-10-03"},{"lineNumber":113,"author":{"gitId":"jacobcuison"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-03"},{"lineNumber":114,"author":{"gitId":"jacobcuison"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-03"},{"lineNumber":115,"author":{"gitId":"jacobcuison"},"content":"            return true;","lastModifiedDate":"2023-10-03"},{"lineNumber":116,"author":{"gitId":"jacobcuison"},"content":"        }","lastModifiedDate":"2023-10-03"},{"lineNumber":117,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":118,"author":{"gitId":"jacobcuison"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-03"},{"lineNumber":119,"author":{"gitId":"jacobcuison"},"content":"        if (!(other instanceof UniqueContactList)) {","lastModifiedDate":"2023-10-03"},{"lineNumber":120,"author":{"gitId":"jacobcuison"},"content":"            return false;","lastModifiedDate":"2023-10-03"},{"lineNumber":121,"author":{"gitId":"jacobcuison"},"content":"        }","lastModifiedDate":"2023-10-03"},{"lineNumber":122,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":123,"author":{"gitId":"jacobcuison"},"content":"        UniqueContactList otherUniqueContactList \u003d (UniqueContactList) other;","lastModifiedDate":"2023-10-03"},{"lineNumber":124,"author":{"gitId":"jacobcuison"},"content":"        return internalList.equals(otherUniqueContactList.internalList);","lastModifiedDate":"2023-10-03"},{"lineNumber":125,"author":{"gitId":"jacobcuison"},"content":"    }","lastModifiedDate":"2023-10-03"},{"lineNumber":126,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":127,"author":{"gitId":"jacobcuison"},"content":"    @Override","lastModifiedDate":"2023-10-03"},{"lineNumber":128,"author":{"gitId":"jacobcuison"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-03"},{"lineNumber":129,"author":{"gitId":"jacobcuison"},"content":"        return internalList.hashCode();","lastModifiedDate":"2023-10-03"},{"lineNumber":130,"author":{"gitId":"jacobcuison"},"content":"    }","lastModifiedDate":"2023-10-03"},{"lineNumber":131,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":132,"author":{"gitId":"jacobcuison"},"content":"    @Override","lastModifiedDate":"2023-10-03"},{"lineNumber":133,"author":{"gitId":"jacobcuison"},"content":"    public String toString() {","lastModifiedDate":"2023-10-03"},{"lineNumber":134,"author":{"gitId":"jacobcuison"},"content":"        return internalList.toString();","lastModifiedDate":"2023-10-03"},{"lineNumber":135,"author":{"gitId":"jacobcuison"},"content":"    }","lastModifiedDate":"2023-10-03"},{"lineNumber":136,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":137,"author":{"gitId":"jacobcuison"},"content":"    /**","lastModifiedDate":"2023-10-03"},{"lineNumber":138,"author":{"gitId":"jacobcuison"},"content":"     * Returns true if {@code contacts} contains only unique contacts.","lastModifiedDate":"2023-10-03"},{"lineNumber":139,"author":{"gitId":"jacobcuison"},"content":"     */","lastModifiedDate":"2023-10-03"},{"lineNumber":140,"author":{"gitId":"jacobcuison"},"content":"    private boolean contactsAreUnique(List\u003cContact\u003e contacts) {","lastModifiedDate":"2023-10-03"},{"lineNumber":141,"author":{"gitId":"jacobcuison"},"content":"        for (int i \u003d 0; i \u003c contacts.size() - 1; i++) {","lastModifiedDate":"2023-10-03"},{"lineNumber":142,"author":{"gitId":"jacobcuison"},"content":"            for (int j \u003d i + 1; j \u003c contacts.size(); j++) {","lastModifiedDate":"2023-10-03"},{"lineNumber":143,"author":{"gitId":"jacobcuison"},"content":"                if (contacts.get(i).isSameContact(contacts.get(j))) {","lastModifiedDate":"2023-10-03"},{"lineNumber":144,"author":{"gitId":"jacobcuison"},"content":"                    return false;","lastModifiedDate":"2023-10-03"},{"lineNumber":145,"author":{"gitId":"jacobcuison"},"content":"                }","lastModifiedDate":"2023-10-03"},{"lineNumber":146,"author":{"gitId":"jacobcuison"},"content":"            }","lastModifiedDate":"2023-10-03"},{"lineNumber":147,"author":{"gitId":"jacobcuison"},"content":"        }","lastModifiedDate":"2023-10-03"},{"lineNumber":148,"author":{"gitId":"jacobcuison"},"content":"        return true;","lastModifiedDate":"2023-10-03"},{"lineNumber":149,"author":{"gitId":"jacobcuison"},"content":"    }","lastModifiedDate":"2023-10-03"},{"lineNumber":150,"author":{"gitId":"jacobcuison"},"content":"}","lastModifiedDate":"2023-10-03"}],"authorContributionMap":{"jacobcuison":150}},{"path":"src/main/java/seedu/address/model/contact/exceptions/ContactNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jacobcuison"},"content":"package seedu.address.model.contact.exceptions;","lastModifiedDate":"2023-10-03"},{"lineNumber":2,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":3,"author":{"gitId":"jacobcuison"},"content":"/**","lastModifiedDate":"2023-10-03"},{"lineNumber":4,"author":{"gitId":"jacobcuison"},"content":" * Signals that the operation is unable to find the specified contact.","lastModifiedDate":"2023-10-03"},{"lineNumber":5,"author":{"gitId":"jacobcuison"},"content":" */","lastModifiedDate":"2023-10-03"},{"lineNumber":6,"author":{"gitId":"jacobcuison"},"content":"public class ContactNotFoundException extends RuntimeException {}","lastModifiedDate":"2023-10-03"}],"authorContributionMap":{"jacobcuison":6}},{"path":"src/main/java/seedu/address/model/contact/exceptions/DuplicateContactException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jacobcuison"},"content":"package seedu.address.model.contact.exceptions;","lastModifiedDate":"2023-10-03"},{"lineNumber":2,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":3,"author":{"gitId":"jacobcuison"},"content":"/**","lastModifiedDate":"2023-10-03"},{"lineNumber":4,"author":{"gitId":"jacobcuison"},"content":" * Signals that the operation will result in duplicate Contacts (Contacts are considered duplicates if","lastModifiedDate":"2023-10-03"},{"lineNumber":5,"author":{"gitId":"jacobcuison"},"content":" * they have the same identity).","lastModifiedDate":"2023-10-03"},{"lineNumber":6,"author":{"gitId":"jacobcuison"},"content":" */","lastModifiedDate":"2023-10-03"},{"lineNumber":7,"author":{"gitId":"jacobcuison"},"content":"public class DuplicateContactException extends RuntimeException {","lastModifiedDate":"2023-10-03"},{"lineNumber":8,"author":{"gitId":"jacobcuison"},"content":"    public DuplicateContactException() {","lastModifiedDate":"2023-10-03"},{"lineNumber":9,"author":{"gitId":"jacobcuison"},"content":"        super(\"Operation would result in duplicate contacts\");","lastModifiedDate":"2023-10-03"},{"lineNumber":10,"author":{"gitId":"jacobcuison"},"content":"    }","lastModifiedDate":"2023-10-03"},{"lineNumber":11,"author":{"gitId":"jacobcuison"},"content":"}","lastModifiedDate":"2023-10-03"}],"authorContributionMap":{"jacobcuison":11}},{"path":"src/main/java/seedu/address/model/meeting/Description.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chiayunrong"},"content":"package seedu.address.model.meeting;","lastModifiedDate":"2023-10-02"},{"lineNumber":2,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":3,"author":{"gitId":"chiayunrong"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-02"},{"lineNumber":4,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":5,"author":{"gitId":"chiayunrong"},"content":"/**","lastModifiedDate":"2023-10-02"},{"lineNumber":6,"author":{"gitId":"chiayunrong"},"content":" * Represents a Meeting\u0027s description in Notenote.","lastModifiedDate":"2023-10-02"},{"lineNumber":7,"author":{"gitId":"chiayunrong"},"content":" * Guarantees: immutable;","lastModifiedDate":"2023-10-02"},{"lineNumber":8,"author":{"gitId":"chiayunrong"},"content":" */","lastModifiedDate":"2023-10-02"},{"lineNumber":9,"author":{"gitId":"chiayunrong"},"content":"public class Description {","lastModifiedDate":"2023-10-02"},{"lineNumber":10,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":11,"author":{"gitId":"chiayunrong"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-10-02"},{"lineNumber":12,"author":{"gitId":"chiayunrong"},"content":"            \"Descriptions can be any character including empty string and newline\";","lastModifiedDate":"2023-10-02"},{"lineNumber":13,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":14,"author":{"gitId":"chiayunrong"},"content":"    public final String fullDescription;","lastModifiedDate":"2023-10-02"},{"lineNumber":15,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":16,"author":{"gitId":"chiayunrong"},"content":"    /**","lastModifiedDate":"2023-10-02"},{"lineNumber":17,"author":{"gitId":"chiayunrong"},"content":"     * Constructs a {@code Description}.","lastModifiedDate":"2023-10-02"},{"lineNumber":18,"author":{"gitId":"chiayunrong"},"content":"     *","lastModifiedDate":"2023-10-02"},{"lineNumber":19,"author":{"gitId":"chiayunrong"},"content":"     * @param description A valid meeting description.","lastModifiedDate":"2023-10-02"},{"lineNumber":20,"author":{"gitId":"chiayunrong"},"content":"     */","lastModifiedDate":"2023-10-02"},{"lineNumber":21,"author":{"gitId":"chiayunrong"},"content":"    public Description(String description) {","lastModifiedDate":"2023-10-02"},{"lineNumber":22,"author":{"gitId":"chiayunrong"},"content":"        requireNonNull(description);","lastModifiedDate":"2023-10-02"},{"lineNumber":23,"author":{"gitId":"chiayunrong"},"content":"        fullDescription \u003d description;","lastModifiedDate":"2023-10-02"},{"lineNumber":24,"author":{"gitId":"chiayunrong"},"content":"    }","lastModifiedDate":"2023-10-02"},{"lineNumber":25,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":26,"author":{"gitId":"chiayunrong"},"content":"    public String toString() {","lastModifiedDate":"2023-10-02"},{"lineNumber":27,"author":{"gitId":"chiayunrong"},"content":"        return fullDescription;","lastModifiedDate":"2023-10-02"},{"lineNumber":28,"author":{"gitId":"chiayunrong"},"content":"    }","lastModifiedDate":"2023-10-02"},{"lineNumber":29,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":30,"author":{"gitId":"chiayunrong"},"content":"    @Override","lastModifiedDate":"2023-10-02"},{"lineNumber":31,"author":{"gitId":"chiayunrong"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-02"},{"lineNumber":32,"author":{"gitId":"chiayunrong"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-02"},{"lineNumber":33,"author":{"gitId":"chiayunrong"},"content":"            return true;","lastModifiedDate":"2023-10-02"},{"lineNumber":34,"author":{"gitId":"chiayunrong"},"content":"        }","lastModifiedDate":"2023-10-02"},{"lineNumber":35,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":36,"author":{"gitId":"chiayunrong"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-02"},{"lineNumber":37,"author":{"gitId":"chiayunrong"},"content":"        if (!(other instanceof Description)) {","lastModifiedDate":"2023-10-02"},{"lineNumber":38,"author":{"gitId":"chiayunrong"},"content":"            return false;","lastModifiedDate":"2023-10-02"},{"lineNumber":39,"author":{"gitId":"chiayunrong"},"content":"        }","lastModifiedDate":"2023-10-02"},{"lineNumber":40,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":41,"author":{"gitId":"chiayunrong"},"content":"        Description otherDescription \u003d (Description) other;","lastModifiedDate":"2023-10-02"},{"lineNumber":42,"author":{"gitId":"chiayunrong"},"content":"        return fullDescription.equals(otherDescription.fullDescription);","lastModifiedDate":"2023-10-02"},{"lineNumber":43,"author":{"gitId":"chiayunrong"},"content":"    }","lastModifiedDate":"2023-10-02"},{"lineNumber":44,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":45,"author":{"gitId":"chiayunrong"},"content":"    @Override","lastModifiedDate":"2023-10-02"},{"lineNumber":46,"author":{"gitId":"chiayunrong"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-02"},{"lineNumber":47,"author":{"gitId":"chiayunrong"},"content":"        return fullDescription.hashCode();","lastModifiedDate":"2023-10-02"},{"lineNumber":48,"author":{"gitId":"chiayunrong"},"content":"    }","lastModifiedDate":"2023-10-02"},{"lineNumber":49,"author":{"gitId":"chiayunrong"},"content":"}","lastModifiedDate":"2023-10-02"}],"authorContributionMap":{"chiayunrong":49}},{"path":"src/main/java/seedu/address/model/meeting/Meeting.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chiayunrong"},"content":"package seedu.address.model.meeting;","lastModifiedDate":"2023-10-02"},{"lineNumber":2,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":3,"author":{"gitId":"jacobcuison"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-10-18"},{"lineNumber":4,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":5,"author":{"gitId":"s-peiran"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-24"},{"lineNumber":6,"author":{"gitId":"jacobcuison"},"content":"import java.util.Collections;","lastModifiedDate":"2023-10-18"},{"lineNumber":7,"author":{"gitId":"jacobcuison"},"content":"import java.util.LinkedHashSet;","lastModifiedDate":"2023-11-02"},{"lineNumber":8,"author":{"gitId":"chiayunrong"},"content":"import java.util.Objects;","lastModifiedDate":"2023-10-02"},{"lineNumber":9,"author":{"gitId":"jacobcuison"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-18"},{"lineNumber":10,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":11,"author":{"gitId":"chiayunrong"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-02"},{"lineNumber":12,"author":{"gitId":"s-peiran"},"content":"import seedu.address.model.contact.Contact;","lastModifiedDate":"2023-10-24"},{"lineNumber":13,"author":{"gitId":"jacobcuison"},"content":"import seedu.address.model.note.Note;","lastModifiedDate":"2023-10-18"},{"lineNumber":14,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":15,"author":{"gitId":"chiayunrong"},"content":"/**","lastModifiedDate":"2023-10-02"},{"lineNumber":16,"author":{"gitId":"chiayunrong"},"content":" * Represents a Meeting in Notenote.","lastModifiedDate":"2023-10-02"},{"lineNumber":17,"author":{"gitId":"chiayunrong"},"content":" * Guarantees: details are present and not null, field values are validated.","lastModifiedDate":"2023-10-03"},{"lineNumber":18,"author":{"gitId":"chiayunrong"},"content":" */","lastModifiedDate":"2023-10-02"},{"lineNumber":19,"author":{"gitId":"chiayunrong"},"content":"public class Meeting {","lastModifiedDate":"2023-10-02"},{"lineNumber":20,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":21,"author":{"gitId":"chiayunrong"},"content":"    private Title title;","lastModifiedDate":"2023-10-02"},{"lineNumber":22,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":23,"author":{"gitId":"chiayunrong"},"content":"    private Time time;","lastModifiedDate":"2023-10-02"},{"lineNumber":24,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":25,"author":{"gitId":"jonyeokj"},"content":"    private Place place;","lastModifiedDate":"2023-10-11"},{"lineNumber":26,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":27,"author":{"gitId":"chiayunrong"},"content":"    private Description description;","lastModifiedDate":"2023-10-02"},{"lineNumber":28,"author":{"gitId":"jacobcuison"},"content":"    private Set\u003cNote\u003e notes \u003d new LinkedHashSet\u003c\u003e();","lastModifiedDate":"2023-11-02"},{"lineNumber":29,"author":{"gitId":"s-peiran"},"content":"    private ArrayList\u003cContact\u003e contacts \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-25"},{"lineNumber":30,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":31,"author":{"gitId":"chiayunrong"},"content":"    /**","lastModifiedDate":"2023-10-02"},{"lineNumber":32,"author":{"gitId":"chiayunrong"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2023-10-03"},{"lineNumber":33,"author":{"gitId":"chiayunrong"},"content":"     */","lastModifiedDate":"2023-10-02"},{"lineNumber":34,"author":{"gitId":"s-peiran"},"content":"    public Meeting(Title title, Time time, Place place, Description description,","lastModifiedDate":"2023-10-24"},{"lineNumber":35,"author":{"gitId":"s-peiran"},"content":"                   Set\u003cNote\u003e notes, ArrayList\u003cContact\u003e contacts) {","lastModifiedDate":"2023-10-24"},{"lineNumber":36,"author":{"gitId":"s-peiran"},"content":"        requireAllNonNull(title, time, place, description, notes, contacts);","lastModifiedDate":"2023-10-24"},{"lineNumber":37,"author":{"gitId":"chiayunrong"},"content":"        this.title \u003d title;","lastModifiedDate":"2023-10-02"},{"lineNumber":38,"author":{"gitId":"chiayunrong"},"content":"        this.time \u003d time;","lastModifiedDate":"2023-10-02"},{"lineNumber":39,"author":{"gitId":"jonyeokj"},"content":"        this.place \u003d place;","lastModifiedDate":"2023-10-11"},{"lineNumber":40,"author":{"gitId":"chiayunrong"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-10-02"},{"lineNumber":41,"author":{"gitId":"jacobcuison"},"content":"        this.notes.addAll(notes);","lastModifiedDate":"2023-10-18"},{"lineNumber":42,"author":{"gitId":"s-peiran"},"content":"        this.contacts.addAll(contacts);","lastModifiedDate":"2023-10-25"},{"lineNumber":43,"author":{"gitId":"chiayunrong"},"content":"    }","lastModifiedDate":"2023-10-02"},{"lineNumber":44,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":45,"author":{"gitId":"chiayunrong"},"content":"    public Title getTitle() {","lastModifiedDate":"2023-10-02"},{"lineNumber":46,"author":{"gitId":"chiayunrong"},"content":"        return title;","lastModifiedDate":"2023-10-02"},{"lineNumber":47,"author":{"gitId":"chiayunrong"},"content":"    }","lastModifiedDate":"2023-10-02"},{"lineNumber":48,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":49,"author":{"gitId":"s-peiran"},"content":"    public String getTitleString() {","lastModifiedDate":"2023-10-25"},{"lineNumber":50,"author":{"gitId":"s-peiran"},"content":"        return title.toString();","lastModifiedDate":"2023-10-25"},{"lineNumber":51,"author":{"gitId":"s-peiran"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":52,"author":{"gitId":"s-peiran"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":53,"author":{"gitId":"chiayunrong"},"content":"    public Time getTime() {","lastModifiedDate":"2023-10-02"},{"lineNumber":54,"author":{"gitId":"chiayunrong"},"content":"        return time;","lastModifiedDate":"2023-10-02"},{"lineNumber":55,"author":{"gitId":"chiayunrong"},"content":"    }","lastModifiedDate":"2023-10-02"},{"lineNumber":56,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":57,"author":{"gitId":"jonyeokj"},"content":"    public Place getPlace() {","lastModifiedDate":"2023-10-11"},{"lineNumber":58,"author":{"gitId":"jonyeokj"},"content":"        return place;","lastModifiedDate":"2023-10-11"},{"lineNumber":59,"author":{"gitId":"chiayunrong"},"content":"    }","lastModifiedDate":"2023-10-02"},{"lineNumber":60,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":61,"author":{"gitId":"chiayunrong"},"content":"    public Description getDescription() {","lastModifiedDate":"2023-10-02"},{"lineNumber":62,"author":{"gitId":"chiayunrong"},"content":"        return description;","lastModifiedDate":"2023-10-02"},{"lineNumber":63,"author":{"gitId":"chiayunrong"},"content":"    }","lastModifiedDate":"2023-10-02"},{"lineNumber":64,"author":{"gitId":"s-peiran"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":65,"author":{"gitId":"jacobcuison"},"content":"    public Set\u003cNote\u003e getNotes() {","lastModifiedDate":"2023-10-18"},{"lineNumber":66,"author":{"gitId":"jacobcuison"},"content":"        return Collections.unmodifiableSet(notes);","lastModifiedDate":"2023-10-18"},{"lineNumber":67,"author":{"gitId":"jacobcuison"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":68,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":69,"author":{"gitId":"s-peiran"},"content":"    public ArrayList\u003cContact\u003e getContacts() {","lastModifiedDate":"2023-10-24"},{"lineNumber":70,"author":{"gitId":"s-peiran"},"content":"        return new ArrayList\u003c\u003e(Collections.unmodifiableList(contacts));","lastModifiedDate":"2023-10-25"},{"lineNumber":71,"author":{"gitId":"s-peiran"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":72,"author":{"gitId":"s-peiran"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":73,"author":{"gitId":"s-peiran"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":74,"author":{"gitId":"s-peiran"},"content":"     * Returns the list of notes that belongs to this contact to be displayed","lastModifiedDate":"2023-10-27"},{"lineNumber":75,"author":{"gitId":"s-peiran"},"content":"     *","lastModifiedDate":"2023-10-27"},{"lineNumber":76,"author":{"gitId":"s-peiran"},"content":"     * @return String of the list of notes belonging to this contact","lastModifiedDate":"2023-10-27"},{"lineNumber":77,"author":{"gitId":"s-peiran"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":78,"author":{"gitId":"s-peiran"},"content":"    public String getNoteString() {","lastModifiedDate":"2023-10-27"},{"lineNumber":79,"author":{"gitId":"s-peiran"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-10-27"},{"lineNumber":80,"author":{"gitId":"s-peiran"},"content":"        for (Note notes : notes) {","lastModifiedDate":"2023-10-27"},{"lineNumber":81,"author":{"gitId":"jacobcuison"},"content":"            sb.append(notes.toString() + \" #\" + notes.getNoteID() + \"\\n\");","lastModifiedDate":"2023-11-02"},{"lineNumber":82,"author":{"gitId":"s-peiran"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":83,"author":{"gitId":"s-peiran"},"content":"        if (sb.length() \u003e 0) {","lastModifiedDate":"2023-10-27"},{"lineNumber":84,"author":{"gitId":"s-peiran"},"content":"            sb.setLength(sb.length() - 1);","lastModifiedDate":"2023-10-27"},{"lineNumber":85,"author":{"gitId":"s-peiran"},"content":"        } else {","lastModifiedDate":"2023-10-27"},{"lineNumber":86,"author":{"gitId":"s-peiran"},"content":"            return \"\";","lastModifiedDate":"2023-10-31"},{"lineNumber":87,"author":{"gitId":"s-peiran"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":88,"author":{"gitId":"s-peiran"},"content":"        return sb.toString();","lastModifiedDate":"2023-10-27"},{"lineNumber":89,"author":{"gitId":"s-peiran"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":90,"author":{"gitId":"s-peiran"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":91,"author":{"gitId":"chiayunrong"},"content":"    @Override","lastModifiedDate":"2023-10-02"},{"lineNumber":92,"author":{"gitId":"chiayunrong"},"content":"    public String toString() {","lastModifiedDate":"2023-10-02"},{"lineNumber":93,"author":{"gitId":"chiayunrong"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-10-02"},{"lineNumber":94,"author":{"gitId":"chiayunrong"},"content":"            .add(\"title\", title)","lastModifiedDate":"2023-10-02"},{"lineNumber":95,"author":{"gitId":"chiayunrong"},"content":"            .add(\"time\", time)","lastModifiedDate":"2023-10-02"},{"lineNumber":96,"author":{"gitId":"jonyeokj"},"content":"            .add(\"place\", place)","lastModifiedDate":"2023-10-11"},{"lineNumber":97,"author":{"gitId":"chiayunrong"},"content":"            .add(\"description\", description)","lastModifiedDate":"2023-10-02"},{"lineNumber":98,"author":{"gitId":"jacobcuison"},"content":"            .add(\"notes\", notes)","lastModifiedDate":"2023-10-18"},{"lineNumber":99,"author":{"gitId":"s-peiran"},"content":"            .add(\"contacts\", contacts)","lastModifiedDate":"2023-10-25"},{"lineNumber":100,"author":{"gitId":"chiayunrong"},"content":"            .toString();","lastModifiedDate":"2023-10-02"},{"lineNumber":101,"author":{"gitId":"chiayunrong"},"content":"    }","lastModifiedDate":"2023-10-02"},{"lineNumber":102,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":103,"author":{"gitId":"chiayunrong"},"content":"    @Override","lastModifiedDate":"2023-10-02"},{"lineNumber":104,"author":{"gitId":"chiayunrong"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-02"},{"lineNumber":105,"author":{"gitId":"chiayunrong"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-02"},{"lineNumber":106,"author":{"gitId":"chiayunrong"},"content":"            return true;","lastModifiedDate":"2023-10-02"},{"lineNumber":107,"author":{"gitId":"chiayunrong"},"content":"        }","lastModifiedDate":"2023-10-02"},{"lineNumber":108,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":109,"author":{"gitId":"chiayunrong"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-02"},{"lineNumber":110,"author":{"gitId":"chiayunrong"},"content":"        if (!(other instanceof Meeting)) {","lastModifiedDate":"2023-10-02"},{"lineNumber":111,"author":{"gitId":"chiayunrong"},"content":"            return false;","lastModifiedDate":"2023-10-02"},{"lineNumber":112,"author":{"gitId":"chiayunrong"},"content":"        }","lastModifiedDate":"2023-10-02"},{"lineNumber":113,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":114,"author":{"gitId":"chiayunrong"},"content":"        Meeting otherMeeting \u003d (Meeting) other;","lastModifiedDate":"2023-10-02"},{"lineNumber":115,"author":{"gitId":"jonyeokj"},"content":"        return title.equals(otherMeeting.title)","lastModifiedDate":"2023-10-12"},{"lineNumber":116,"author":{"gitId":"jonyeokj"},"content":"            \u0026\u0026 time.equals(otherMeeting.time)","lastModifiedDate":"2023-10-12"},{"lineNumber":117,"author":{"gitId":"jonyeokj"},"content":"            \u0026\u0026 place.equals(otherMeeting.place)","lastModifiedDate":"2023-10-12"},{"lineNumber":118,"author":{"gitId":"jacobcuison"},"content":"            \u0026\u0026 description.equals(otherMeeting.description)","lastModifiedDate":"2023-10-18"},{"lineNumber":119,"author":{"gitId":"s-peiran"},"content":"            \u0026\u0026 notes.equals(otherMeeting.notes)","lastModifiedDate":"2023-10-24"},{"lineNumber":120,"author":{"gitId":"s-peiran"},"content":"            \u0026\u0026 contacts.equals(otherMeeting.contacts);","lastModifiedDate":"2023-10-25"},{"lineNumber":121,"author":{"gitId":"chiayunrong"},"content":"    }","lastModifiedDate":"2023-10-02"},{"lineNumber":122,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":123,"author":{"gitId":"chiayunrong"},"content":"    @Override","lastModifiedDate":"2023-10-02"},{"lineNumber":124,"author":{"gitId":"chiayunrong"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-02"},{"lineNumber":125,"author":{"gitId":"chiayunrong"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2023-10-02"},{"lineNumber":126,"author":{"gitId":"chiayunrong"},"content":"        return Objects.hash(title, time, place, description);","lastModifiedDate":"2023-10-17"},{"lineNumber":127,"author":{"gitId":"chiayunrong"},"content":"    }","lastModifiedDate":"2023-10-02"},{"lineNumber":128,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":129,"author":{"gitId":"chiayunrong"},"content":"}","lastModifiedDate":"2023-10-02"}],"authorContributionMap":{"jonyeokj":8,"jacobcuison":14,"s-peiran":36,"chiayunrong":71}},{"path":"src/main/java/seedu/address/model/meeting/MeetingFilterPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"s-peiran"},"content":"package seedu.address.model.meeting;","lastModifiedDate":"2023-10-31"},{"lineNumber":2,"author":{"gitId":"s-peiran"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":3,"author":{"gitId":"s-peiran"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-10-31"},{"lineNumber":4,"author":{"gitId":"s-peiran"},"content":"import java.util.List;","lastModifiedDate":"2023-10-31"},{"lineNumber":5,"author":{"gitId":"s-peiran"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-10-31"},{"lineNumber":6,"author":{"gitId":"s-peiran"},"content":"import java.util.function.Supplier;","lastModifiedDate":"2023-10-31"},{"lineNumber":7,"author":{"gitId":"s-peiran"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":8,"author":{"gitId":"s-peiran"},"content":"/**","lastModifiedDate":"2023-10-31"},{"lineNumber":9,"author":{"gitId":"s-peiran"},"content":" * Tests that a {@code Meeting}\u0027s {@code all values} matches any of the keywords given.","lastModifiedDate":"2023-10-31"},{"lineNumber":10,"author":{"gitId":"s-peiran"},"content":" */","lastModifiedDate":"2023-10-31"},{"lineNumber":11,"author":{"gitId":"s-peiran"},"content":"public class MeetingFilterPredicate implements Predicate\u003cMeeting\u003e {","lastModifiedDate":"2023-10-31"},{"lineNumber":12,"author":{"gitId":"s-peiran"},"content":"    private final List\u003cString\u003e titleKeywords;","lastModifiedDate":"2023-10-31"},{"lineNumber":13,"author":{"gitId":"s-peiran"},"content":"    private final List\u003cString\u003e time;","lastModifiedDate":"2023-10-31"},{"lineNumber":14,"author":{"gitId":"s-peiran"},"content":"    private final List\u003cString\u003e placeKeywords;","lastModifiedDate":"2023-10-31"},{"lineNumber":15,"author":{"gitId":"s-peiran"},"content":"    private final List\u003cString\u003e descriptionKeywords;","lastModifiedDate":"2023-10-31"},{"lineNumber":16,"author":{"gitId":"s-peiran"},"content":"    private final List\u003cString\u003e noteListKeywords;","lastModifiedDate":"2023-10-31"},{"lineNumber":17,"author":{"gitId":"s-peiran"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":18,"author":{"gitId":"s-peiran"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":19,"author":{"gitId":"s-peiran"},"content":"     * Constructor for the MeetinFilterPredicate class","lastModifiedDate":"2023-10-31"},{"lineNumber":20,"author":{"gitId":"s-peiran"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":21,"author":{"gitId":"s-peiran"},"content":"    public MeetingFilterPredicate(List\u003cString\u003e titleKeywords, List\u003cString\u003e time,","lastModifiedDate":"2023-10-31"},{"lineNumber":22,"author":{"gitId":"s-peiran"},"content":"                                  List\u003cString\u003e placeKeywords, List\u003cString\u003e descriptionKeywords,","lastModifiedDate":"2023-10-31"},{"lineNumber":23,"author":{"gitId":"s-peiran"},"content":"                                  List\u003cString\u003e noteKeywords) {","lastModifiedDate":"2023-10-31"},{"lineNumber":24,"author":{"gitId":"s-peiran"},"content":"        this.titleKeywords \u003d titleKeywords;","lastModifiedDate":"2023-10-31"},{"lineNumber":25,"author":{"gitId":"s-peiran"},"content":"        this.time \u003d time;","lastModifiedDate":"2023-10-31"},{"lineNumber":26,"author":{"gitId":"s-peiran"},"content":"        this.placeKeywords \u003d placeKeywords;","lastModifiedDate":"2023-10-31"},{"lineNumber":27,"author":{"gitId":"s-peiran"},"content":"        this.descriptionKeywords \u003d descriptionKeywords;","lastModifiedDate":"2023-10-31"},{"lineNumber":28,"author":{"gitId":"s-peiran"},"content":"        this.noteListKeywords \u003d noteKeywords;","lastModifiedDate":"2023-10-31"},{"lineNumber":29,"author":{"gitId":"s-peiran"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":30,"author":{"gitId":"s-peiran"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":31,"author":{"gitId":"s-peiran"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":32,"author":{"gitId":"s-peiran"},"content":"    @Override","lastModifiedDate":"2023-10-31"},{"lineNumber":33,"author":{"gitId":"s-peiran"},"content":"    public boolean test(Meeting meeting) {","lastModifiedDate":"2023-10-31"},{"lineNumber":34,"author":{"gitId":"jonyeokj"},"content":"        boolean title \u003d (titleKeywords.size() \u003d\u003d 1 \u0026\u0026 titleKeywords.get(0)","lastModifiedDate":"2023-11-02"},{"lineNumber":35,"author":{"gitId":"jonyeokj"},"content":"            .isEmpty()) || titleKeywords.stream().anyMatch(keyword -\u003e meeting.getTitle()","lastModifiedDate":"2023-11-02"},{"lineNumber":36,"author":{"gitId":"jonyeokj"},"content":"            .fullTitle.toLowerCase().contains(keyword.toLowerCase()));","lastModifiedDate":"2023-11-02"},{"lineNumber":37,"author":{"gitId":"s-peiran"},"content":"        // writing of stream assisted by chatGPT","lastModifiedDate":"2023-10-31"},{"lineNumber":38,"author":{"gitId":"s-peiran"},"content":"        boolean chrono \u003d false;","lastModifiedDate":"2023-10-31"},{"lineNumber":39,"author":{"gitId":"s-peiran"},"content":"        Time meetingTime \u003d meeting.getTime();","lastModifiedDate":"2023-10-31"},{"lineNumber":40,"author":{"gitId":"s-peiran"},"content":"        Supplier\u003cBoolean\u003e case2 \u003d () -\u003e LocalDateTime.parse(time.get(0), Time.FORMATTER)","lastModifiedDate":"2023-10-31"},{"lineNumber":41,"author":{"gitId":"s-peiran"},"content":"            .isBefore(meetingTime.getValue());","lastModifiedDate":"2023-10-31"},{"lineNumber":42,"author":{"gitId":"s-peiran"},"content":"        Supplier\u003cBoolean\u003e case3 \u003d () -\u003e LocalDateTime.parse(time.get(1), Time.FORMATTER)","lastModifiedDate":"2023-10-31"},{"lineNumber":43,"author":{"gitId":"s-peiran"},"content":"            .isAfter(meetingTime.getValue());","lastModifiedDate":"2023-10-31"},{"lineNumber":44,"author":{"gitId":"s-peiran"},"content":"        Supplier\u003cBoolean\u003e case4 \u003d () -\u003e {","lastModifiedDate":"2023-10-31"},{"lineNumber":45,"author":{"gitId":"s-peiran"},"content":"            LocalDateTime startTime \u003d LocalDateTime.parse(time.get(0), Time.FORMATTER);","lastModifiedDate":"2023-10-31"},{"lineNumber":46,"author":{"gitId":"s-peiran"},"content":"            LocalDateTime endTime \u003d LocalDateTime.parse(time.get(1), Time.FORMATTER);","lastModifiedDate":"2023-10-31"},{"lineNumber":47,"author":{"gitId":"s-peiran"},"content":"            return startTime.isBefore(meetingTime.getValue()) \u0026\u0026 endTime.isAfter(meetingTime.getValue());","lastModifiedDate":"2023-10-31"},{"lineNumber":48,"author":{"gitId":"s-peiran"},"content":"        };","lastModifiedDate":"2023-10-31"},{"lineNumber":49,"author":{"gitId":"s-peiran"},"content":"        // use of supplier suggested by chatGPT. In original code the logic is nested in if-else statements","lastModifiedDate":"2023-10-31"},{"lineNumber":50,"author":{"gitId":"s-peiran"},"content":"        String timeStart \u003d time.get(0);","lastModifiedDate":"2023-10-31"},{"lineNumber":51,"author":{"gitId":"s-peiran"},"content":"        String timeEnd \u003d time.get(1);","lastModifiedDate":"2023-10-31"},{"lineNumber":52,"author":{"gitId":"s-peiran"},"content":"        if (timeStart.equals(\"\") \u0026\u0026 timeEnd.equals(\"\")) {","lastModifiedDate":"2023-10-31"},{"lineNumber":53,"author":{"gitId":"s-peiran"},"content":"            chrono \u003d true;","lastModifiedDate":"2023-10-31"},{"lineNumber":54,"author":{"gitId":"s-peiran"},"content":"        } else if (!timeStart.equals(\"\") \u0026\u0026 timeEnd.equals(\"\")) {","lastModifiedDate":"2023-10-31"},{"lineNumber":55,"author":{"gitId":"s-peiran"},"content":"            chrono \u003d case2.get();","lastModifiedDate":"2023-10-31"},{"lineNumber":56,"author":{"gitId":"s-peiran"},"content":"        } else if (timeStart.equals(\"\") \u0026\u0026 !timeEnd.equals(\"\")) {","lastModifiedDate":"2023-10-31"},{"lineNumber":57,"author":{"gitId":"s-peiran"},"content":"            chrono \u003d case3.get();","lastModifiedDate":"2023-10-31"},{"lineNumber":58,"author":{"gitId":"s-peiran"},"content":"        } else if (!timeStart.equals(\"\") \u0026\u0026 !timeEnd.equals(\"\")) {","lastModifiedDate":"2023-10-31"},{"lineNumber":59,"author":{"gitId":"s-peiran"},"content":"            chrono \u003d case4.get();","lastModifiedDate":"2023-10-31"},{"lineNumber":60,"author":{"gitId":"s-peiran"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":61,"author":{"gitId":"jonyeokj"},"content":"        boolean place \u003d (placeKeywords.size() \u003d\u003d 1 \u0026\u0026 placeKeywords.get(0).isEmpty()) || placeKeywords.stream()","lastModifiedDate":"2023-11-02"},{"lineNumber":62,"author":{"gitId":"jonyeokj"},"content":"            .anyMatch(keyword -\u003e meeting.getPlace().fullPlace.toLowerCase().contains(keyword.toLowerCase()));","lastModifiedDate":"2023-11-02"},{"lineNumber":63,"author":{"gitId":"jonyeokj"},"content":"        boolean description \u003d (descriptionKeywords.size() \u003d\u003d 1 \u0026\u0026 descriptionKeywords.get(0)","lastModifiedDate":"2023-11-02"},{"lineNumber":64,"author":{"gitId":"jonyeokj"},"content":"            .isEmpty()) || descriptionKeywords.stream().anyMatch(keyword -\u003e meeting.getDescription()","lastModifiedDate":"2023-11-02"},{"lineNumber":65,"author":{"gitId":"jonyeokj"},"content":"            .fullDescription.toLowerCase().contains(keyword.toLowerCase()));","lastModifiedDate":"2023-11-02"},{"lineNumber":66,"author":{"gitId":"s-peiran"},"content":"        boolean note \u003d (noteListKeywords.size() \u003d\u003d 1 \u0026\u0026 noteListKeywords.get(0).isEmpty())","lastModifiedDate":"2023-10-31"},{"lineNumber":67,"author":{"gitId":"jonyeokj"},"content":"            || noteListKeywords.stream().anyMatch(keyword -\u003e meeting.getNoteString()","lastModifiedDate":"2023-11-02"},{"lineNumber":68,"author":{"gitId":"jonyeokj"},"content":"            .toLowerCase().contains(keyword.toLowerCase()));","lastModifiedDate":"2023-11-02"},{"lineNumber":69,"author":{"gitId":"s-peiran"},"content":"        return title \u0026\u0026 chrono \u0026\u0026 place \u0026\u0026 description \u0026\u0026 note;","lastModifiedDate":"2023-10-31"},{"lineNumber":70,"author":{"gitId":"s-peiran"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":71,"author":{"gitId":"s-peiran"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":72,"author":{"gitId":"s-peiran"},"content":"    @Override","lastModifiedDate":"2023-10-31"},{"lineNumber":73,"author":{"gitId":"s-peiran"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-31"},{"lineNumber":74,"author":{"gitId":"s-peiran"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-31"},{"lineNumber":75,"author":{"gitId":"s-peiran"},"content":"            return true;","lastModifiedDate":"2023-10-31"},{"lineNumber":76,"author":{"gitId":"s-peiran"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":77,"author":{"gitId":"s-peiran"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":78,"author":{"gitId":"s-peiran"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-31"},{"lineNumber":79,"author":{"gitId":"s-peiran"},"content":"        if (!(other instanceof MeetingFilterPredicate)) {","lastModifiedDate":"2023-10-31"},{"lineNumber":80,"author":{"gitId":"s-peiran"},"content":"            return false;","lastModifiedDate":"2023-10-31"},{"lineNumber":81,"author":{"gitId":"s-peiran"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":82,"author":{"gitId":"s-peiran"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":83,"author":{"gitId":"s-peiran"},"content":"        MeetingFilterPredicate otherMeetingFilterPredicate \u003d (MeetingFilterPredicate) other;","lastModifiedDate":"2023-10-31"},{"lineNumber":84,"author":{"gitId":"s-peiran"},"content":"        return titleKeywords.equals(otherMeetingFilterPredicate.titleKeywords)","lastModifiedDate":"2023-10-31"},{"lineNumber":85,"author":{"gitId":"s-peiran"},"content":"            \u0026\u0026 time.equals(otherMeetingFilterPredicate.time)","lastModifiedDate":"2023-10-31"},{"lineNumber":86,"author":{"gitId":"s-peiran"},"content":"            \u0026\u0026 placeKeywords.equals(otherMeetingFilterPredicate.placeKeywords)","lastModifiedDate":"2023-10-31"},{"lineNumber":87,"author":{"gitId":"s-peiran"},"content":"            \u0026\u0026 descriptionKeywords.equals(otherMeetingFilterPredicate.descriptionKeywords)","lastModifiedDate":"2023-10-31"},{"lineNumber":88,"author":{"gitId":"s-peiran"},"content":"            \u0026\u0026 noteListKeywords.equals(otherMeetingFilterPredicate.noteListKeywords);","lastModifiedDate":"2023-10-31"},{"lineNumber":89,"author":{"gitId":"s-peiran"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":90,"author":{"gitId":"s-peiran"},"content":"}","lastModifiedDate":"2023-10-31"}],"authorContributionMap":{"jonyeokj":10,"s-peiran":80}},{"path":"src/main/java/seedu/address/model/meeting/MeetingList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chiayunrong"},"content":"package seedu.address.model.meeting;","lastModifiedDate":"2023-10-02"},{"lineNumber":2,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":3,"author":{"gitId":"chiayunrong"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-02"},{"lineNumber":4,"author":{"gitId":"jonyeokj"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-10-11"},{"lineNumber":5,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":6,"author":{"gitId":"chiayunrong"},"content":"import java.util.Iterator;","lastModifiedDate":"2023-10-02"},{"lineNumber":7,"author":{"gitId":"jonyeokj"},"content":"import java.util.List;","lastModifiedDate":"2023-10-11"},{"lineNumber":8,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":9,"author":{"gitId":"chiayunrong"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-10-02"},{"lineNumber":10,"author":{"gitId":"chiayunrong"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-10-02"},{"lineNumber":11,"author":{"gitId":"chiayunrong"},"content":"import seedu.address.model.meeting.exceptions.DuplicateMeetingException;","lastModifiedDate":"2023-10-03"},{"lineNumber":12,"author":{"gitId":"jonyeokj"},"content":"import seedu.address.model.meeting.exceptions.MeetingNotFoundException;","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":14,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":15,"author":{"gitId":"chiayunrong"},"content":"/**","lastModifiedDate":"2023-10-02"},{"lineNumber":16,"author":{"gitId":"chiayunrong"},"content":" * A list of meetings that does not allow nulls.","lastModifiedDate":"2023-10-02"},{"lineNumber":17,"author":{"gitId":"chiayunrong"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2023-10-02"},{"lineNumber":18,"author":{"gitId":"chiayunrong"},"content":" */","lastModifiedDate":"2023-10-02"},{"lineNumber":19,"author":{"gitId":"chiayunrong"},"content":"public class MeetingList implements Iterable\u003cMeeting\u003e {","lastModifiedDate":"2023-10-02"},{"lineNumber":20,"author":{"gitId":"chiayunrong"},"content":"    private final ObservableList\u003cMeeting\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2023-10-02"},{"lineNumber":21,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":22,"author":{"gitId":"chiayunrong"},"content":"    private final ObservableList\u003cMeeting\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2023-10-02"},{"lineNumber":23,"author":{"gitId":"chiayunrong"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2023-10-02"},{"lineNumber":24,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":25,"author":{"gitId":"chiayunrong"},"content":"    /**","lastModifiedDate":"2023-10-02"},{"lineNumber":26,"author":{"gitId":"chiayunrong"},"content":"     * Adds a meeting to the list.","lastModifiedDate":"2023-10-02"},{"lineNumber":27,"author":{"gitId":"chiayunrong"},"content":"     */","lastModifiedDate":"2023-10-02"},{"lineNumber":28,"author":{"gitId":"chiayunrong"},"content":"    public void add(Meeting toAdd) {","lastModifiedDate":"2023-10-02"},{"lineNumber":29,"author":{"gitId":"chiayunrong"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2023-10-02"},{"lineNumber":30,"author":{"gitId":"chiayunrong"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2023-10-03"},{"lineNumber":31,"author":{"gitId":"chiayunrong"},"content":"            throw new DuplicateMeetingException();","lastModifiedDate":"2023-10-03"},{"lineNumber":32,"author":{"gitId":"chiayunrong"},"content":"        }","lastModifiedDate":"2023-10-03"},{"lineNumber":33,"author":{"gitId":"chiayunrong"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2023-10-02"},{"lineNumber":34,"author":{"gitId":"chiayunrong"},"content":"    }","lastModifiedDate":"2023-10-02"},{"lineNumber":35,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":36,"author":{"gitId":"jonyeokj"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":37,"author":{"gitId":"jonyeokj"},"content":"     * Removes the equivalent meeting from the list.","lastModifiedDate":"2023-10-18"},{"lineNumber":38,"author":{"gitId":"jonyeokj"},"content":"     * The meeting must exist in the list.","lastModifiedDate":"2023-10-18"},{"lineNumber":39,"author":{"gitId":"jonyeokj"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":40,"author":{"gitId":"jonyeokj"},"content":"    public void remove(Meeting toRemove) {","lastModifiedDate":"2023-10-13"},{"lineNumber":41,"author":{"gitId":"jonyeokj"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2023-10-13"},{"lineNumber":42,"author":{"gitId":"jonyeokj"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2023-10-13"},{"lineNumber":43,"author":{"gitId":"jonyeokj"},"content":"            throw new MeetingNotFoundException();","lastModifiedDate":"2023-10-13"},{"lineNumber":44,"author":{"gitId":"jonyeokj"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":45,"author":{"gitId":"jonyeokj"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":46,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":47,"author":{"gitId":"chiayunrong"},"content":"    /**","lastModifiedDate":"2023-10-03"},{"lineNumber":48,"author":{"gitId":"chiayunrong"},"content":"     * Checks if a given meeting exists in the list.","lastModifiedDate":"2023-10-03"},{"lineNumber":49,"author":{"gitId":"chiayunrong"},"content":"     */","lastModifiedDate":"2023-10-03"},{"lineNumber":50,"author":{"gitId":"chiayunrong"},"content":"    public boolean contains(Meeting toCheck) {","lastModifiedDate":"2023-10-03"},{"lineNumber":51,"author":{"gitId":"chiayunrong"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2023-10-03"},{"lineNumber":52,"author":{"gitId":"chiayunrong"},"content":"        return internalList.stream().anyMatch(toCheck::equals);","lastModifiedDate":"2023-10-03"},{"lineNumber":53,"author":{"gitId":"chiayunrong"},"content":"    }","lastModifiedDate":"2023-10-03"},{"lineNumber":54,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":55,"author":{"gitId":"chiayunrong"},"content":"    @Override","lastModifiedDate":"2023-10-02"},{"lineNumber":56,"author":{"gitId":"chiayunrong"},"content":"    public Iterator\u003cMeeting\u003e iterator() {","lastModifiedDate":"2023-10-02"},{"lineNumber":57,"author":{"gitId":"chiayunrong"},"content":"        return internalList.iterator();","lastModifiedDate":"2023-10-02"},{"lineNumber":58,"author":{"gitId":"chiayunrong"},"content":"    }","lastModifiedDate":"2023-10-02"},{"lineNumber":59,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":60,"author":{"gitId":"chiayunrong"},"content":"    /**","lastModifiedDate":"2023-10-03"},{"lineNumber":61,"author":{"gitId":"chiayunrong"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2023-10-03"},{"lineNumber":62,"author":{"gitId":"chiayunrong"},"content":"     */","lastModifiedDate":"2023-10-03"},{"lineNumber":63,"author":{"gitId":"chiayunrong"},"content":"    public ObservableList\u003cMeeting\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2023-10-03"},{"lineNumber":64,"author":{"gitId":"chiayunrong"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2023-10-03"},{"lineNumber":65,"author":{"gitId":"chiayunrong"},"content":"    }","lastModifiedDate":"2023-10-03"},{"lineNumber":66,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":67,"author":{"gitId":"jonyeokj"},"content":"    /**","lastModifiedDate":"2023-10-11"},{"lineNumber":68,"author":{"gitId":"jonyeokj"},"content":"     * Replaces the meeting {@code target} in the list with {@code editedMeeting}.","lastModifiedDate":"2023-10-11"},{"lineNumber":69,"author":{"gitId":"jonyeokj"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2023-10-11"},{"lineNumber":70,"author":{"gitId":"jonyeokj"},"content":"     * The meeting identity of {@code editedMeeting} must not be the same as another existing meeting in the list.","lastModifiedDate":"2023-10-18"},{"lineNumber":71,"author":{"gitId":"jonyeokj"},"content":"     */","lastModifiedDate":"2023-10-11"},{"lineNumber":72,"author":{"gitId":"jonyeokj"},"content":"    public void setMeeting(Meeting target, Meeting editedMeeting) {","lastModifiedDate":"2023-10-11"},{"lineNumber":73,"author":{"gitId":"jonyeokj"},"content":"        requireAllNonNull(target, editedMeeting);","lastModifiedDate":"2023-10-11"},{"lineNumber":74,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":75,"author":{"gitId":"jonyeokj"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2023-10-11"},{"lineNumber":76,"author":{"gitId":"jonyeokj"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2023-10-11"},{"lineNumber":77,"author":{"gitId":"jonyeokj"},"content":"            throw new MeetingNotFoundException();","lastModifiedDate":"2023-10-18"},{"lineNumber":78,"author":{"gitId":"jonyeokj"},"content":"        }","lastModifiedDate":"2023-10-11"},{"lineNumber":79,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":80,"author":{"gitId":"chiayunrong"},"content":"        if (!target.equals(editedMeeting) \u0026\u0026 contains(editedMeeting)) {","lastModifiedDate":"2023-10-17"},{"lineNumber":81,"author":{"gitId":"chiayunrong"},"content":"            throw new DuplicateMeetingException();","lastModifiedDate":"2023-10-17"},{"lineNumber":82,"author":{"gitId":"jonyeokj"},"content":"        }","lastModifiedDate":"2023-10-11"},{"lineNumber":83,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":84,"author":{"gitId":"jonyeokj"},"content":"        internalList.set(index, editedMeeting);","lastModifiedDate":"2023-10-11"},{"lineNumber":85,"author":{"gitId":"jonyeokj"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":86,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":87,"author":{"gitId":"jonyeokj"},"content":"    /**","lastModifiedDate":"2023-10-11"},{"lineNumber":88,"author":{"gitId":"jonyeokj"},"content":"     * Replaces the contents of this list with {@code meetings}.","lastModifiedDate":"2023-10-11"},{"lineNumber":89,"author":{"gitId":"jonyeokj"},"content":"     * {@code meetings} must not contain duplicate meetings.","lastModifiedDate":"2023-10-11"},{"lineNumber":90,"author":{"gitId":"jonyeokj"},"content":"     */","lastModifiedDate":"2023-10-11"},{"lineNumber":91,"author":{"gitId":"jonyeokj"},"content":"    public void setMeetings(List\u003cMeeting\u003e meetings) {","lastModifiedDate":"2023-10-11"},{"lineNumber":92,"author":{"gitId":"jonyeokj"},"content":"        requireAllNonNull(meetings);","lastModifiedDate":"2023-10-11"},{"lineNumber":93,"author":{"gitId":"jonyeokj"},"content":"        if (!meetingsAreUnique(meetings)) {","lastModifiedDate":"2023-10-11"},{"lineNumber":94,"author":{"gitId":"chiayunrong"},"content":"            throw new DuplicateMeetingException();","lastModifiedDate":"2023-10-17"},{"lineNumber":95,"author":{"gitId":"jonyeokj"},"content":"        }","lastModifiedDate":"2023-10-11"},{"lineNumber":96,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":97,"author":{"gitId":"jonyeokj"},"content":"        internalList.setAll(meetings);","lastModifiedDate":"2023-10-11"},{"lineNumber":98,"author":{"gitId":"jonyeokj"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":99,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":100,"author":{"gitId":"chiayunrong"},"content":"    @Override","lastModifiedDate":"2023-10-02"},{"lineNumber":101,"author":{"gitId":"chiayunrong"},"content":"    public String toString() {","lastModifiedDate":"2023-10-02"},{"lineNumber":102,"author":{"gitId":"chiayunrong"},"content":"        return internalList.toString();","lastModifiedDate":"2023-10-02"},{"lineNumber":103,"author":{"gitId":"chiayunrong"},"content":"    }","lastModifiedDate":"2023-10-02"},{"lineNumber":104,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":105,"author":{"gitId":"chiayunrong"},"content":"    @Override","lastModifiedDate":"2023-10-02"},{"lineNumber":106,"author":{"gitId":"chiayunrong"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-02"},{"lineNumber":107,"author":{"gitId":"chiayunrong"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-02"},{"lineNumber":108,"author":{"gitId":"chiayunrong"},"content":"            return true;","lastModifiedDate":"2023-10-02"},{"lineNumber":109,"author":{"gitId":"chiayunrong"},"content":"        }","lastModifiedDate":"2023-10-02"},{"lineNumber":110,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":111,"author":{"gitId":"chiayunrong"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-02"},{"lineNumber":112,"author":{"gitId":"chiayunrong"},"content":"        if (!(other instanceof MeetingList)) {","lastModifiedDate":"2023-10-02"},{"lineNumber":113,"author":{"gitId":"chiayunrong"},"content":"            return false;","lastModifiedDate":"2023-10-02"},{"lineNumber":114,"author":{"gitId":"chiayunrong"},"content":"        }","lastModifiedDate":"2023-10-02"},{"lineNumber":115,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":116,"author":{"gitId":"chiayunrong"},"content":"        MeetingList otherMeetingList \u003d (MeetingList) other;","lastModifiedDate":"2023-10-02"},{"lineNumber":117,"author":{"gitId":"chiayunrong"},"content":"        return internalList.equals(otherMeetingList.internalList);","lastModifiedDate":"2023-10-02"},{"lineNumber":118,"author":{"gitId":"chiayunrong"},"content":"    }","lastModifiedDate":"2023-10-02"},{"lineNumber":119,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":120,"author":{"gitId":"chiayunrong"},"content":"    @Override","lastModifiedDate":"2023-10-02"},{"lineNumber":121,"author":{"gitId":"chiayunrong"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-02"},{"lineNumber":122,"author":{"gitId":"chiayunrong"},"content":"        return internalList.hashCode();","lastModifiedDate":"2023-10-02"},{"lineNumber":123,"author":{"gitId":"chiayunrong"},"content":"    }","lastModifiedDate":"2023-10-02"},{"lineNumber":124,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":125,"author":{"gitId":"jonyeokj"},"content":"    /**","lastModifiedDate":"2023-10-11"},{"lineNumber":126,"author":{"gitId":"jonyeokj"},"content":"     * Returns true if {@code meetings} contains only unique meetings.","lastModifiedDate":"2023-10-11"},{"lineNumber":127,"author":{"gitId":"jonyeokj"},"content":"     */","lastModifiedDate":"2023-10-11"},{"lineNumber":128,"author":{"gitId":"jonyeokj"},"content":"    private boolean meetingsAreUnique(List\u003cMeeting\u003e meetings) {","lastModifiedDate":"2023-10-11"},{"lineNumber":129,"author":{"gitId":"jonyeokj"},"content":"        for (int i \u003d 0; i \u003c meetings.size() - 1; i++) {","lastModifiedDate":"2023-10-11"},{"lineNumber":130,"author":{"gitId":"jonyeokj"},"content":"            for (int j \u003d i + 1; j \u003c meetings.size(); j++) {","lastModifiedDate":"2023-10-11"},{"lineNumber":131,"author":{"gitId":"chiayunrong"},"content":"                if (meetings.get(i).equals(meetings.get(j))) {","lastModifiedDate":"2023-10-17"},{"lineNumber":132,"author":{"gitId":"jonyeokj"},"content":"                    return false;","lastModifiedDate":"2023-10-11"},{"lineNumber":133,"author":{"gitId":"jonyeokj"},"content":"                }","lastModifiedDate":"2023-10-11"},{"lineNumber":134,"author":{"gitId":"jonyeokj"},"content":"            }","lastModifiedDate":"2023-10-11"},{"lineNumber":135,"author":{"gitId":"jonyeokj"},"content":"        }","lastModifiedDate":"2023-10-11"},{"lineNumber":136,"author":{"gitId":"jonyeokj"},"content":"        return true;","lastModifiedDate":"2023-10-11"},{"lineNumber":137,"author":{"gitId":"jonyeokj"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":138,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":139,"author":{"gitId":"chiayunrong"},"content":"}","lastModifiedDate":"2023-10-02"}],"authorContributionMap":{"jonyeokj":56,"chiayunrong":83}},{"path":"src/main/java/seedu/address/model/meeting/Place.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jonyeokj"},"content":"package seedu.address.model.meeting;","lastModifiedDate":"2023-10-11"},{"lineNumber":2,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":3,"author":{"gitId":"jonyeokj"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-11"},{"lineNumber":4,"author":{"gitId":"jonyeokj"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-10-11"},{"lineNumber":5,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":6,"author":{"gitId":"jonyeokj"},"content":"/**","lastModifiedDate":"2023-10-11"},{"lineNumber":7,"author":{"gitId":"jonyeokj"},"content":" * Represents a Meeting\u0027s place in Notenote.","lastModifiedDate":"2023-10-11"},{"lineNumber":8,"author":{"gitId":"jonyeokj"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidPlace(String)}","lastModifiedDate":"2023-10-11"},{"lineNumber":9,"author":{"gitId":"jonyeokj"},"content":" */","lastModifiedDate":"2023-10-11"},{"lineNumber":10,"author":{"gitId":"jonyeokj"},"content":"public class Place {","lastModifiedDate":"2023-10-11"},{"lineNumber":11,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":12,"author":{"gitId":"jonyeokj"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-10-11"},{"lineNumber":13,"author":{"gitId":"jonyeokj"},"content":"            \"Places should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2023-10-11"},{"lineNumber":14,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":15,"author":{"gitId":"jonyeokj"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2023-10-11"},{"lineNumber":16,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":17,"author":{"gitId":"jonyeokj"},"content":"    public final String fullPlace;","lastModifiedDate":"2023-10-11"},{"lineNumber":18,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":19,"author":{"gitId":"jonyeokj"},"content":"    /**","lastModifiedDate":"2023-10-11"},{"lineNumber":20,"author":{"gitId":"jonyeokj"},"content":"     * Constructs a {@code Place}.","lastModifiedDate":"2023-10-11"},{"lineNumber":21,"author":{"gitId":"jonyeokj"},"content":"     *","lastModifiedDate":"2023-10-11"},{"lineNumber":22,"author":{"gitId":"jonyeokj"},"content":"     * @param place A valid place.","lastModifiedDate":"2023-10-11"},{"lineNumber":23,"author":{"gitId":"jonyeokj"},"content":"     */","lastModifiedDate":"2023-10-11"},{"lineNumber":24,"author":{"gitId":"jonyeokj"},"content":"    public Place(String place) {","lastModifiedDate":"2023-10-11"},{"lineNumber":25,"author":{"gitId":"jonyeokj"},"content":"        requireNonNull(place);","lastModifiedDate":"2023-10-11"},{"lineNumber":26,"author":{"gitId":"jonyeokj"},"content":"        checkArgument(isValidPlace(place), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-11"},{"lineNumber":27,"author":{"gitId":"jonyeokj"},"content":"        fullPlace \u003d place;","lastModifiedDate":"2023-10-11"},{"lineNumber":28,"author":{"gitId":"jonyeokj"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":29,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":30,"author":{"gitId":"jonyeokj"},"content":"    /**","lastModifiedDate":"2023-10-11"},{"lineNumber":31,"author":{"gitId":"jonyeokj"},"content":"     * Returns true if a given string is a valid place.","lastModifiedDate":"2023-10-11"},{"lineNumber":32,"author":{"gitId":"jonyeokj"},"content":"     */","lastModifiedDate":"2023-10-11"},{"lineNumber":33,"author":{"gitId":"jonyeokj"},"content":"    public static boolean isValidPlace(String test) {","lastModifiedDate":"2023-10-11"},{"lineNumber":34,"author":{"gitId":"jonyeokj"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-10-11"},{"lineNumber":35,"author":{"gitId":"jonyeokj"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":36,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":37,"author":{"gitId":"jonyeokj"},"content":"    @Override","lastModifiedDate":"2023-10-11"},{"lineNumber":38,"author":{"gitId":"jonyeokj"},"content":"    public String toString() {","lastModifiedDate":"2023-10-11"},{"lineNumber":39,"author":{"gitId":"jonyeokj"},"content":"        return fullPlace;","lastModifiedDate":"2023-10-11"},{"lineNumber":40,"author":{"gitId":"jonyeokj"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":41,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":42,"author":{"gitId":"jonyeokj"},"content":"    @Override","lastModifiedDate":"2023-10-11"},{"lineNumber":43,"author":{"gitId":"jonyeokj"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-11"},{"lineNumber":44,"author":{"gitId":"jonyeokj"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-11"},{"lineNumber":45,"author":{"gitId":"jonyeokj"},"content":"            return true;","lastModifiedDate":"2023-10-11"},{"lineNumber":46,"author":{"gitId":"jonyeokj"},"content":"        }","lastModifiedDate":"2023-10-11"},{"lineNumber":47,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":48,"author":{"gitId":"jonyeokj"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-11"},{"lineNumber":49,"author":{"gitId":"jonyeokj"},"content":"        if (!(other instanceof Place)) {","lastModifiedDate":"2023-10-11"},{"lineNumber":50,"author":{"gitId":"jonyeokj"},"content":"            return false;","lastModifiedDate":"2023-10-11"},{"lineNumber":51,"author":{"gitId":"jonyeokj"},"content":"        }","lastModifiedDate":"2023-10-11"},{"lineNumber":52,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":53,"author":{"gitId":"jonyeokj"},"content":"        Place otherPlace \u003d (Place) other;","lastModifiedDate":"2023-10-11"},{"lineNumber":54,"author":{"gitId":"jonyeokj"},"content":"        return fullPlace.equals(otherPlace.fullPlace);","lastModifiedDate":"2023-10-11"},{"lineNumber":55,"author":{"gitId":"jonyeokj"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":56,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":57,"author":{"gitId":"jonyeokj"},"content":"    @Override","lastModifiedDate":"2023-10-11"},{"lineNumber":58,"author":{"gitId":"jonyeokj"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-11"},{"lineNumber":59,"author":{"gitId":"jonyeokj"},"content":"        return fullPlace.hashCode();","lastModifiedDate":"2023-10-11"},{"lineNumber":60,"author":{"gitId":"jonyeokj"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":61,"author":{"gitId":"jonyeokj"},"content":"}","lastModifiedDate":"2023-10-11"}],"authorContributionMap":{"jonyeokj":61}},{"path":"src/main/java/seedu/address/model/meeting/Time.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chiayunrong"},"content":"package seedu.address.model.meeting;","lastModifiedDate":"2023-10-02"},{"lineNumber":2,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":3,"author":{"gitId":"chiayunrong"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-02"},{"lineNumber":4,"author":{"gitId":"chiayunrong"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-10-02"},{"lineNumber":5,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":6,"author":{"gitId":"chiayunrong"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-10-02"},{"lineNumber":7,"author":{"gitId":"chiayunrong"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-10-02"},{"lineNumber":8,"author":{"gitId":"chiayunrong"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-10-02"},{"lineNumber":9,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":10,"author":{"gitId":"chiayunrong"},"content":"/**","lastModifiedDate":"2023-10-02"},{"lineNumber":11,"author":{"gitId":"chiayunrong"},"content":" * Represents a Meeting\u0027s time in Notenote.","lastModifiedDate":"2023-10-02"},{"lineNumber":12,"author":{"gitId":"chiayunrong"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidTime(String)}","lastModifiedDate":"2023-10-02"},{"lineNumber":13,"author":{"gitId":"chiayunrong"},"content":" */","lastModifiedDate":"2023-10-02"},{"lineNumber":14,"author":{"gitId":"chiayunrong"},"content":"public class Time {","lastModifiedDate":"2023-10-02"},{"lineNumber":15,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":16,"author":{"gitId":"chiayunrong"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-10-02"},{"lineNumber":17,"author":{"gitId":"chiayunrong"},"content":"        \"Time should match the exact format of dd/MM/yyyy HH:mm\";","lastModifiedDate":"2023-10-02"},{"lineNumber":18,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":19,"author":{"gitId":"chiayunrong"},"content":"    public static final DateTimeFormatter FORMATTER \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HH:mm\");","lastModifiedDate":"2023-10-02"},{"lineNumber":20,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":21,"author":{"gitId":"jonyeokj"},"content":"    public final LocalDateTime value;","lastModifiedDate":"2023-10-11"},{"lineNumber":22,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":23,"author":{"gitId":"chiayunrong"},"content":"    /**","lastModifiedDate":"2023-10-02"},{"lineNumber":24,"author":{"gitId":"chiayunrong"},"content":"     * Constructs a {@code Time}.","lastModifiedDate":"2023-10-02"},{"lineNumber":25,"author":{"gitId":"chiayunrong"},"content":"     *","lastModifiedDate":"2023-10-02"},{"lineNumber":26,"author":{"gitId":"jonyeokj"},"content":"     * @param time A valid meeting time String.","lastModifiedDate":"2023-10-12"},{"lineNumber":27,"author":{"gitId":"chiayunrong"},"content":"     */","lastModifiedDate":"2023-10-02"},{"lineNumber":28,"author":{"gitId":"chiayunrong"},"content":"    public Time(String time) {","lastModifiedDate":"2023-10-02"},{"lineNumber":29,"author":{"gitId":"chiayunrong"},"content":"        requireNonNull(time);","lastModifiedDate":"2023-10-02"},{"lineNumber":30,"author":{"gitId":"chiayunrong"},"content":"        checkArgument(isValidTime(time), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-02"},{"lineNumber":31,"author":{"gitId":"chiayunrong"},"content":"        value \u003d LocalDateTime.parse(time, FORMATTER);","lastModifiedDate":"2023-10-02"},{"lineNumber":32,"author":{"gitId":"chiayunrong"},"content":"    }","lastModifiedDate":"2023-10-02"},{"lineNumber":33,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":34,"author":{"gitId":"jonyeokj"},"content":"    /**","lastModifiedDate":"2023-10-11"},{"lineNumber":35,"author":{"gitId":"jonyeokj"},"content":"     * Constructs a {@code Time}.","lastModifiedDate":"2023-10-11"},{"lineNumber":36,"author":{"gitId":"jonyeokj"},"content":"     *","lastModifiedDate":"2023-10-11"},{"lineNumber":37,"author":{"gitId":"jonyeokj"},"content":"     * @param time A valid meeting time LocalDateTime.","lastModifiedDate":"2023-10-12"},{"lineNumber":38,"author":{"gitId":"jonyeokj"},"content":"     */","lastModifiedDate":"2023-10-11"},{"lineNumber":39,"author":{"gitId":"jonyeokj"},"content":"    public Time(LocalDateTime time) {","lastModifiedDate":"2023-10-11"},{"lineNumber":40,"author":{"gitId":"jonyeokj"},"content":"        requireNonNull(time);","lastModifiedDate":"2023-10-11"},{"lineNumber":41,"author":{"gitId":"jonyeokj"},"content":"        value \u003d time;","lastModifiedDate":"2023-10-11"},{"lineNumber":42,"author":{"gitId":"jonyeokj"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":43,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":44,"author":{"gitId":"chiayunrong"},"content":"    /**","lastModifiedDate":"2023-10-02"},{"lineNumber":45,"author":{"gitId":"chiayunrong"},"content":"     * Returns true if a given string is a valid time.","lastModifiedDate":"2023-10-02"},{"lineNumber":46,"author":{"gitId":"chiayunrong"},"content":"     */","lastModifiedDate":"2023-10-02"},{"lineNumber":47,"author":{"gitId":"chiayunrong"},"content":"    public static boolean isValidTime(String test) {","lastModifiedDate":"2023-10-02"},{"lineNumber":48,"author":{"gitId":"chiayunrong"},"content":"        try {","lastModifiedDate":"2023-10-02"},{"lineNumber":49,"author":{"gitId":"chiayunrong"},"content":"            LocalDateTime.parse(test, FORMATTER);","lastModifiedDate":"2023-10-02"},{"lineNumber":50,"author":{"gitId":"chiayunrong"},"content":"            return true;","lastModifiedDate":"2023-10-02"},{"lineNumber":51,"author":{"gitId":"chiayunrong"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-10-02"},{"lineNumber":52,"author":{"gitId":"chiayunrong"},"content":"            return false;","lastModifiedDate":"2023-10-02"},{"lineNumber":53,"author":{"gitId":"chiayunrong"},"content":"        }","lastModifiedDate":"2023-10-02"},{"lineNumber":54,"author":{"gitId":"chiayunrong"},"content":"    }","lastModifiedDate":"2023-10-02"},{"lineNumber":55,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":56,"author":{"gitId":"chiayunrong"},"content":"    @Override","lastModifiedDate":"2023-10-02"},{"lineNumber":57,"author":{"gitId":"chiayunrong"},"content":"    public String toString() {","lastModifiedDate":"2023-10-02"},{"lineNumber":58,"author":{"gitId":"chiayunrong"},"content":"        return value.format(FORMATTER);","lastModifiedDate":"2023-10-03"},{"lineNumber":59,"author":{"gitId":"chiayunrong"},"content":"    }","lastModifiedDate":"2023-10-02"},{"lineNumber":60,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":61,"author":{"gitId":"jonyeokj"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":62,"author":{"gitId":"jonyeokj"},"content":"     * Converts time String to a time LocalDateTime.","lastModifiedDate":"2023-10-12"},{"lineNumber":63,"author":{"gitId":"jonyeokj"},"content":"     *","lastModifiedDate":"2023-10-12"},{"lineNumber":64,"author":{"gitId":"jonyeokj"},"content":"     * @param timeStr A valid meeting time.","lastModifiedDate":"2023-10-12"},{"lineNumber":65,"author":{"gitId":"jonyeokj"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":66,"author":{"gitId":"jonyeokj"},"content":"    public static Time fromString(String timeStr) {","lastModifiedDate":"2023-10-11"},{"lineNumber":67,"author":{"gitId":"jonyeokj"},"content":"        LocalDateTime parsedDateTime \u003d LocalDateTime.parse(timeStr, FORMATTER);","lastModifiedDate":"2023-10-11"},{"lineNumber":68,"author":{"gitId":"jonyeokj"},"content":"        return new Time(parsedDateTime);","lastModifiedDate":"2023-10-11"},{"lineNumber":69,"author":{"gitId":"jonyeokj"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":70,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":71,"author":{"gitId":"s-peiran"},"content":"    public LocalDateTime getValue() {","lastModifiedDate":"2023-10-31"},{"lineNumber":72,"author":{"gitId":"s-peiran"},"content":"        return value;","lastModifiedDate":"2023-10-31"},{"lineNumber":73,"author":{"gitId":"s-peiran"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":74,"author":{"gitId":"s-peiran"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":75,"author":{"gitId":"chiayunrong"},"content":"    @Override","lastModifiedDate":"2023-10-02"},{"lineNumber":76,"author":{"gitId":"chiayunrong"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-02"},{"lineNumber":77,"author":{"gitId":"chiayunrong"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-02"},{"lineNumber":78,"author":{"gitId":"chiayunrong"},"content":"            return true;","lastModifiedDate":"2023-10-02"},{"lineNumber":79,"author":{"gitId":"chiayunrong"},"content":"        }","lastModifiedDate":"2023-10-02"},{"lineNumber":80,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":81,"author":{"gitId":"chiayunrong"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-02"},{"lineNumber":82,"author":{"gitId":"chiayunrong"},"content":"        if (!(other instanceof Time)) {","lastModifiedDate":"2023-10-02"},{"lineNumber":83,"author":{"gitId":"chiayunrong"},"content":"            return false;","lastModifiedDate":"2023-10-02"},{"lineNumber":84,"author":{"gitId":"chiayunrong"},"content":"        }","lastModifiedDate":"2023-10-02"},{"lineNumber":85,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":86,"author":{"gitId":"chiayunrong"},"content":"        Time otherTime \u003d (Time) other;","lastModifiedDate":"2023-10-02"},{"lineNumber":87,"author":{"gitId":"chiayunrong"},"content":"        return value.equals(otherTime.value);","lastModifiedDate":"2023-10-02"},{"lineNumber":88,"author":{"gitId":"chiayunrong"},"content":"    }","lastModifiedDate":"2023-10-02"},{"lineNumber":89,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":90,"author":{"gitId":"chiayunrong"},"content":"    @Override","lastModifiedDate":"2023-10-02"},{"lineNumber":91,"author":{"gitId":"chiayunrong"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-02"},{"lineNumber":92,"author":{"gitId":"chiayunrong"},"content":"        return value.hashCode();","lastModifiedDate":"2023-10-02"},{"lineNumber":93,"author":{"gitId":"chiayunrong"},"content":"    }","lastModifiedDate":"2023-10-02"},{"lineNumber":94,"author":{"gitId":"chiayunrong"},"content":"}","lastModifiedDate":"2023-10-02"}],"authorContributionMap":{"jonyeokj":22,"s-peiran":4,"chiayunrong":68}},{"path":"src/main/java/seedu/address/model/meeting/Title.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chiayunrong"},"content":"package seedu.address.model.meeting;","lastModifiedDate":"2023-10-02"},{"lineNumber":2,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":3,"author":{"gitId":"chiayunrong"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-02"},{"lineNumber":4,"author":{"gitId":"chiayunrong"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-10-02"},{"lineNumber":5,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":6,"author":{"gitId":"chiayunrong"},"content":"/**","lastModifiedDate":"2023-10-02"},{"lineNumber":7,"author":{"gitId":"chiayunrong"},"content":" * Represents a Meeting\u0027s title in Notenote.","lastModifiedDate":"2023-10-02"},{"lineNumber":8,"author":{"gitId":"chiayunrong"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidTitle(String)}","lastModifiedDate":"2023-10-02"},{"lineNumber":9,"author":{"gitId":"chiayunrong"},"content":" */","lastModifiedDate":"2023-10-02"},{"lineNumber":10,"author":{"gitId":"chiayunrong"},"content":"public class Title {","lastModifiedDate":"2023-10-02"},{"lineNumber":11,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":12,"author":{"gitId":"chiayunrong"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-10-02"},{"lineNumber":13,"author":{"gitId":"chiayunrong"},"content":"            \"Titles should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2023-10-02"},{"lineNumber":14,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":15,"author":{"gitId":"chiayunrong"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2023-10-02"},{"lineNumber":16,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":17,"author":{"gitId":"chiayunrong"},"content":"    public final String fullTitle;","lastModifiedDate":"2023-10-02"},{"lineNumber":18,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":19,"author":{"gitId":"chiayunrong"},"content":"    /**","lastModifiedDate":"2023-10-02"},{"lineNumber":20,"author":{"gitId":"chiayunrong"},"content":"     * Constructs a {@code Title}.","lastModifiedDate":"2023-10-02"},{"lineNumber":21,"author":{"gitId":"chiayunrong"},"content":"     *","lastModifiedDate":"2023-10-02"},{"lineNumber":22,"author":{"gitId":"chiayunrong"},"content":"     * @param title A valid title.","lastModifiedDate":"2023-10-02"},{"lineNumber":23,"author":{"gitId":"chiayunrong"},"content":"     */","lastModifiedDate":"2023-10-02"},{"lineNumber":24,"author":{"gitId":"chiayunrong"},"content":"    public Title(String title) {","lastModifiedDate":"2023-10-02"},{"lineNumber":25,"author":{"gitId":"chiayunrong"},"content":"        requireNonNull(title);","lastModifiedDate":"2023-10-02"},{"lineNumber":26,"author":{"gitId":"chiayunrong"},"content":"        checkArgument(isValidTitle(title), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-02"},{"lineNumber":27,"author":{"gitId":"chiayunrong"},"content":"        fullTitle \u003d title;","lastModifiedDate":"2023-10-02"},{"lineNumber":28,"author":{"gitId":"chiayunrong"},"content":"    }","lastModifiedDate":"2023-10-02"},{"lineNumber":29,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":30,"author":{"gitId":"chiayunrong"},"content":"    /**","lastModifiedDate":"2023-10-02"},{"lineNumber":31,"author":{"gitId":"chiayunrong"},"content":"     * Returns true if a given string is a valid title.","lastModifiedDate":"2023-10-02"},{"lineNumber":32,"author":{"gitId":"chiayunrong"},"content":"     */","lastModifiedDate":"2023-10-02"},{"lineNumber":33,"author":{"gitId":"chiayunrong"},"content":"    public static boolean isValidTitle(String test) {","lastModifiedDate":"2023-10-02"},{"lineNumber":34,"author":{"gitId":"chiayunrong"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-10-02"},{"lineNumber":35,"author":{"gitId":"chiayunrong"},"content":"    }","lastModifiedDate":"2023-10-02"},{"lineNumber":36,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":37,"author":{"gitId":"chiayunrong"},"content":"    @Override","lastModifiedDate":"2023-10-02"},{"lineNumber":38,"author":{"gitId":"chiayunrong"},"content":"    public String toString() {","lastModifiedDate":"2023-10-02"},{"lineNumber":39,"author":{"gitId":"chiayunrong"},"content":"        return fullTitle;","lastModifiedDate":"2023-10-02"},{"lineNumber":40,"author":{"gitId":"chiayunrong"},"content":"    }","lastModifiedDate":"2023-10-02"},{"lineNumber":41,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":42,"author":{"gitId":"chiayunrong"},"content":"    @Override","lastModifiedDate":"2023-10-02"},{"lineNumber":43,"author":{"gitId":"chiayunrong"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-02"},{"lineNumber":44,"author":{"gitId":"chiayunrong"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-02"},{"lineNumber":45,"author":{"gitId":"chiayunrong"},"content":"            return true;","lastModifiedDate":"2023-10-02"},{"lineNumber":46,"author":{"gitId":"chiayunrong"},"content":"        }","lastModifiedDate":"2023-10-02"},{"lineNumber":47,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":48,"author":{"gitId":"chiayunrong"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-02"},{"lineNumber":49,"author":{"gitId":"chiayunrong"},"content":"        if (!(other instanceof Title)) {","lastModifiedDate":"2023-10-02"},{"lineNumber":50,"author":{"gitId":"chiayunrong"},"content":"            return false;","lastModifiedDate":"2023-10-02"},{"lineNumber":51,"author":{"gitId":"chiayunrong"},"content":"        }","lastModifiedDate":"2023-10-02"},{"lineNumber":52,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":53,"author":{"gitId":"chiayunrong"},"content":"        Title otherTitle \u003d (Title) other;","lastModifiedDate":"2023-10-02"},{"lineNumber":54,"author":{"gitId":"chiayunrong"},"content":"        return fullTitle.equals(otherTitle.fullTitle);","lastModifiedDate":"2023-10-02"},{"lineNumber":55,"author":{"gitId":"chiayunrong"},"content":"    }","lastModifiedDate":"2023-10-02"},{"lineNumber":56,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":57,"author":{"gitId":"chiayunrong"},"content":"    @Override","lastModifiedDate":"2023-10-02"},{"lineNumber":58,"author":{"gitId":"chiayunrong"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-02"},{"lineNumber":59,"author":{"gitId":"chiayunrong"},"content":"        return fullTitle.hashCode();","lastModifiedDate":"2023-10-02"},{"lineNumber":60,"author":{"gitId":"chiayunrong"},"content":"    }","lastModifiedDate":"2023-10-02"},{"lineNumber":61,"author":{"gitId":"chiayunrong"},"content":"}","lastModifiedDate":"2023-10-02"}],"authorContributionMap":{"chiayunrong":61}},{"path":"src/main/java/seedu/address/model/meeting/TitleContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chiayunrong"},"content":"package seedu.address.model.meeting;","lastModifiedDate":"2023-10-17"},{"lineNumber":2,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":3,"author":{"gitId":"chiayunrong"},"content":"import java.util.List;","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"chiayunrong"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"chiayunrong"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"chiayunrong"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"chiayunrong"},"content":"/**","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"chiayunrong"},"content":" * Tests that a {@code Contact}\u0027s {@code Name} matches any of the keywords given.","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"chiayunrong"},"content":" */","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"chiayunrong"},"content":"public class TitleContainsKeywordsPredicate implements Predicate\u003cMeeting\u003e {","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"chiayunrong"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2023-10-17"},{"lineNumber":14,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":15,"author":{"gitId":"chiayunrong"},"content":"    public TitleContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"chiayunrong"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"chiayunrong"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"chiayunrong"},"content":"    @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":20,"author":{"gitId":"chiayunrong"},"content":"    public boolean test(Meeting meeting) {","lastModifiedDate":"2023-10-17"},{"lineNumber":21,"author":{"gitId":"chiayunrong"},"content":"        return keywords.stream()","lastModifiedDate":"2023-10-17"},{"lineNumber":22,"author":{"gitId":"chiayunrong"},"content":"        .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(meeting.getTitle().fullTitle, keyword));","lastModifiedDate":"2023-10-17"},{"lineNumber":23,"author":{"gitId":"chiayunrong"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":24,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":25,"author":{"gitId":"chiayunrong"},"content":"    @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":26,"author":{"gitId":"chiayunrong"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-17"},{"lineNumber":27,"author":{"gitId":"chiayunrong"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-17"},{"lineNumber":28,"author":{"gitId":"chiayunrong"},"content":"            return true;","lastModifiedDate":"2023-10-17"},{"lineNumber":29,"author":{"gitId":"chiayunrong"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":30,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":31,"author":{"gitId":"chiayunrong"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-17"},{"lineNumber":32,"author":{"gitId":"chiayunrong"},"content":"        if (!(other instanceof TitleContainsKeywordsPredicate)) {","lastModifiedDate":"2023-10-17"},{"lineNumber":33,"author":{"gitId":"chiayunrong"},"content":"            return false;","lastModifiedDate":"2023-10-17"},{"lineNumber":34,"author":{"gitId":"chiayunrong"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":35,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":36,"author":{"gitId":"chiayunrong"},"content":"        TitleContainsKeywordsPredicate otherTitleContainsKeywordsPredicate \u003d (TitleContainsKeywordsPredicate) other;","lastModifiedDate":"2023-10-17"},{"lineNumber":37,"author":{"gitId":"chiayunrong"},"content":"        return keywords.equals(otherTitleContainsKeywordsPredicate.keywords);","lastModifiedDate":"2023-10-17"},{"lineNumber":38,"author":{"gitId":"chiayunrong"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":39,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":40,"author":{"gitId":"chiayunrong"},"content":"    @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":41,"author":{"gitId":"chiayunrong"},"content":"    public String toString() {","lastModifiedDate":"2023-10-17"},{"lineNumber":42,"author":{"gitId":"chiayunrong"},"content":"        return new ToStringBuilder(this).add(\"keywords\", keywords).toString();","lastModifiedDate":"2023-10-17"},{"lineNumber":43,"author":{"gitId":"chiayunrong"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":44,"author":{"gitId":"chiayunrong"},"content":"}","lastModifiedDate":"2023-10-17"}],"authorContributionMap":{"chiayunrong":44}},{"path":"src/main/java/seedu/address/model/meeting/exceptions/DuplicateMeetingException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chiayunrong"},"content":"package seedu.address.model.meeting.exceptions;","lastModifiedDate":"2023-10-03"},{"lineNumber":2,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":3,"author":{"gitId":"chiayunrong"},"content":"/**","lastModifiedDate":"2023-10-03"},{"lineNumber":4,"author":{"gitId":"chiayunrong"},"content":" * Signals that the operation will result in duplicate Meetings (Meetings are considered duplicates","lastModifiedDate":"2023-10-03"},{"lineNumber":5,"author":{"gitId":"chiayunrong"},"content":" * if they have the same id).","lastModifiedDate":"2023-10-03"},{"lineNumber":6,"author":{"gitId":"chiayunrong"},"content":" */","lastModifiedDate":"2023-10-03"},{"lineNumber":7,"author":{"gitId":"chiayunrong"},"content":"public class DuplicateMeetingException extends RuntimeException {","lastModifiedDate":"2023-10-03"},{"lineNumber":8,"author":{"gitId":"chiayunrong"},"content":"    public DuplicateMeetingException() {","lastModifiedDate":"2023-10-03"},{"lineNumber":9,"author":{"gitId":"chiayunrong"},"content":"        super(\"Operation would result in duplicate meetings\");","lastModifiedDate":"2023-10-03"},{"lineNumber":10,"author":{"gitId":"chiayunrong"},"content":"    }","lastModifiedDate":"2023-10-03"},{"lineNumber":11,"author":{"gitId":"chiayunrong"},"content":"}","lastModifiedDate":"2023-10-03"}],"authorContributionMap":{"chiayunrong":11}},{"path":"src/main/java/seedu/address/model/meeting/exceptions/MeetingNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chiayunrong"},"content":"package seedu.address.model.meeting.exceptions;","lastModifiedDate":"2023-10-02"},{"lineNumber":2,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":3,"author":{"gitId":"chiayunrong"},"content":"/**","lastModifiedDate":"2023-10-02"},{"lineNumber":4,"author":{"gitId":"chiayunrong"},"content":" * Signals that the operation is unable to find the specified meeting.","lastModifiedDate":"2023-10-02"},{"lineNumber":5,"author":{"gitId":"chiayunrong"},"content":" */","lastModifiedDate":"2023-10-02"},{"lineNumber":6,"author":{"gitId":"jonyeokj"},"content":"public class MeetingNotFoundException extends RuntimeException {}","lastModifiedDate":"2023-10-13"}],"authorContributionMap":{"jonyeokj":1,"chiayunrong":5}},{"path":"src/main/java/seedu/address/model/note/Note.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jacobcuison"},"content":"package seedu.address.model.note;","lastModifiedDate":"2023-10-18"},{"lineNumber":2,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":3,"author":{"gitId":"jacobcuison"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"jacobcuison"},"content":"/**","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"jacobcuison"},"content":" * Represents a Contact\u0027s note in the address book.","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"jacobcuison"},"content":" * Guarantees: immutable; is always valid","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"jacobcuison"},"content":" */","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"jacobcuison"},"content":"public class Note {","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"jacobcuison"},"content":"    private static int noteCount \u003d 1;","lastModifiedDate":"2023-11-02"},{"lineNumber":11,"author":{"gitId":"jacobcuison"},"content":"    public final String note;","lastModifiedDate":"2023-10-18"},{"lineNumber":12,"author":{"gitId":"jacobcuison"},"content":"    public final int noteID;","lastModifiedDate":"2023-11-02"},{"lineNumber":13,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"jacobcuison"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"jacobcuison"},"content":"     * Constructs a {@code Note}.","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"jacobcuison"},"content":"     *","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"jacobcuison"},"content":"     * @param note A valid note.","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"jacobcuison"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":19,"author":{"gitId":"jacobcuison"},"content":"    public Note(String note) {","lastModifiedDate":"2023-10-13"},{"lineNumber":20,"author":{"gitId":"jacobcuison"},"content":"        requireNonNull(note);","lastModifiedDate":"2023-10-13"},{"lineNumber":21,"author":{"gitId":"jacobcuison"},"content":"        this.note \u003d note;","lastModifiedDate":"2023-10-18"},{"lineNumber":22,"author":{"gitId":"jacobcuison"},"content":"        this.noteID \u003d noteCount++;","lastModifiedDate":"2023-11-02"},{"lineNumber":23,"author":{"gitId":"jacobcuison"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":24,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":25,"author":{"gitId":"jacobcuison"},"content":"    public int getNoteID() {","lastModifiedDate":"2023-11-02"},{"lineNumber":26,"author":{"gitId":"jacobcuison"},"content":"        return noteID;","lastModifiedDate":"2023-11-02"},{"lineNumber":27,"author":{"gitId":"jacobcuison"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":28,"author":{"gitId":"jacobcuison"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":29,"author":{"gitId":"jacobcuison"},"content":"    public String toString() {","lastModifiedDate":"2023-10-13"},{"lineNumber":30,"author":{"gitId":"jacobcuison"},"content":"        return note;","lastModifiedDate":"2023-11-02"},{"lineNumber":31,"author":{"gitId":"jacobcuison"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":32,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":33,"author":{"gitId":"jacobcuison"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":34,"author":{"gitId":"jacobcuison"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-13"},{"lineNumber":35,"author":{"gitId":"jacobcuison"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-10-13"},{"lineNumber":36,"author":{"gitId":"jacobcuison"},"content":"                || (other instanceof Note // instanceof handles nulls","lastModifiedDate":"2023-10-13"},{"lineNumber":37,"author":{"gitId":"jacobcuison"},"content":"                \u0026\u0026 note.equals(((Note) other).note)); // state check","lastModifiedDate":"2023-10-18"},{"lineNumber":38,"author":{"gitId":"jacobcuison"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":39,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":40,"author":{"gitId":"jacobcuison"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":41,"author":{"gitId":"jacobcuison"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-13"},{"lineNumber":42,"author":{"gitId":"jacobcuison"},"content":"        return note.hashCode();","lastModifiedDate":"2023-10-18"},{"lineNumber":43,"author":{"gitId":"jacobcuison"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":44,"author":{"gitId":"jacobcuison"},"content":"}","lastModifiedDate":"2023-10-13"}],"authorContributionMap":{"jacobcuison":44}},{"path":"src/main/java/seedu/address/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.util;","lastModifiedDate":"2016-12-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":9,"author":{"gitId":"jacobcuison"},"content":"import seedu.address.model.contact.Address;","lastModifiedDate":"2023-10-03"},{"lineNumber":10,"author":{"gitId":"jacobcuison"},"content":"import seedu.address.model.contact.Contact;","lastModifiedDate":"2023-10-03"},{"lineNumber":11,"author":{"gitId":"jacobcuison"},"content":"import seedu.address.model.contact.Email;","lastModifiedDate":"2023-10-03"},{"lineNumber":12,"author":{"gitId":"jacobcuison"},"content":"import seedu.address.model.contact.Name;","lastModifiedDate":"2023-10-03"},{"lineNumber":13,"author":{"gitId":"jacobcuison"},"content":"import seedu.address.model.contact.Phone;","lastModifiedDate":"2023-10-03"},{"lineNumber":14,"author":{"gitId":"jacobcuison"},"content":"import seedu.address.model.note.Note;","lastModifiedDate":"2023-10-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-14"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Contains utility methods for populating {@code AddressBook} with sample data.","lastModifiedDate":"2017-08-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":21,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":22,"author":{"gitId":"jacobcuison"},"content":"    private static final Set\u003cNote\u003e EMPTY_NOTE \u003d getNoteSet(\"\");","lastModifiedDate":"2023-10-18"},{"lineNumber":23,"author":{"gitId":"s-peiran"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":24,"author":{"gitId":"jacobcuison"},"content":"    public static Contact[] getSampleContacts() {","lastModifiedDate":"2023-10-03"},{"lineNumber":25,"author":{"gitId":"jacobcuison"},"content":"        return new Contact[]{","lastModifiedDate":"2023-10-03"},{"lineNumber":26,"author":{"gitId":"jacobcuison"},"content":"            new Contact(new Name(\"Alex Yeoh\"), new Phone(\"87438807\"), new Email(\"alexyeoh@example.com\"),","lastModifiedDate":"2023-10-03"},{"lineNumber":27,"author":{"gitId":"jacobcuison"},"content":"                new Address(\"Blk 30 Geylang Street 29, #06-40\"), getTagSet(\"friends\"), EMPTY_NOTE),","lastModifiedDate":"2023-10-13"},{"lineNumber":28,"author":{"gitId":"jacobcuison"},"content":"            new Contact(new Name(\"Bernice Yu\"), new Phone(\"99272758\"), new Email(\"berniceyu@example.com\"),","lastModifiedDate":"2023-10-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"                new Address(\"Blk 30 Lorong 3 Serangoon Gardens, #07-18\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":30,"author":{"gitId":"jacobcuison"},"content":"                getTagSet(\"colleagues\", \"friends\"), EMPTY_NOTE),","lastModifiedDate":"2023-10-13"},{"lineNumber":31,"author":{"gitId":"jacobcuison"},"content":"            new Contact(new Name(\"Charlotte Oliveiro\"), new Phone(\"93210283\"), new Email(\"charlotte@example.com\"),","lastModifiedDate":"2023-10-03"},{"lineNumber":32,"author":{"gitId":"jacobcuison"},"content":"                new Address(\"Blk 11 Ang Mo Kio Street 74, #11-04\"), getTagSet(\"neighbours\"), EMPTY_NOTE),","lastModifiedDate":"2023-10-13"},{"lineNumber":33,"author":{"gitId":"jacobcuison"},"content":"            new Contact(new Name(\"David Li\"), new Phone(\"91031282\"), new Email(\"lidavid@example.com\"),","lastModifiedDate":"2023-10-03"},{"lineNumber":34,"author":{"gitId":"jacobcuison"},"content":"                new Address(\"Blk 436 Serangoon Gardens Street 26, #16-43\"), getTagSet(\"family\"), EMPTY_NOTE),","lastModifiedDate":"2023-10-13"},{"lineNumber":35,"author":{"gitId":"jacobcuison"},"content":"            new Contact(new Name(\"Irfan Ibrahim\"), new Phone(\"92492021\"), new Email(\"irfan@example.com\"),","lastModifiedDate":"2023-10-03"},{"lineNumber":36,"author":{"gitId":"jacobcuison"},"content":"                new Address(\"Blk 47 Tampines Street 20, #17-35\"), getTagSet(\"classmates\"), EMPTY_NOTE),","lastModifiedDate":"2023-10-13"},{"lineNumber":37,"author":{"gitId":"jacobcuison"},"content":"            new Contact(new Name(\"Roy Balakrishnan\"), new Phone(\"92624417\"), new Email(\"royb@example.com\"),","lastModifiedDate":"2023-10-03"},{"lineNumber":38,"author":{"gitId":"jacobcuison"},"content":"                new Address(\"Blk 45 Aljunied Street 85, #11-31\"), getTagSet(\"colleagues\"), EMPTY_NOTE)","lastModifiedDate":"2023-10-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static ReadOnlyAddressBook getSampleAddressBook() {","lastModifiedDate":"2016-12-20"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        AddressBook sampleAb \u003d new AddressBook();","lastModifiedDate":"2017-04-07"},{"lineNumber":44,"author":{"gitId":"jacobcuison"},"content":"        for (Contact sampleContact : getSampleContacts()) {","lastModifiedDate":"2023-10-03"},{"lineNumber":45,"author":{"gitId":"jacobcuison"},"content":"            sampleAb.addContact(sampleContact);","lastModifiedDate":"2023-10-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return sampleAb;","lastModifiedDate":"2017-04-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-14"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Returns a tag set containing the list of strings given.","lastModifiedDate":"2017-03-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e getTagSet(String... strings) {","lastModifiedDate":"2017-05-30"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2018-01-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            .map(Tag::new)","lastModifiedDate":"2018-01-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            .collect(Collectors.toSet());","lastModifiedDate":"2018-01-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":59,"author":{"gitId":"jacobcuison"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":60,"author":{"gitId":"jacobcuison"},"content":"     * Returns a note set containing the list of strings given.","lastModifiedDate":"2023-10-18"},{"lineNumber":61,"author":{"gitId":"jacobcuison"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":62,"author":{"gitId":"jacobcuison"},"content":"    public static Set\u003cNote\u003e getNoteSet(String... strings) {","lastModifiedDate":"2023-10-18"},{"lineNumber":63,"author":{"gitId":"jacobcuison"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2023-10-18"},{"lineNumber":64,"author":{"gitId":"jacobcuison"},"content":"            .map(Note::new)","lastModifiedDate":"2023-10-18"},{"lineNumber":65,"author":{"gitId":"jacobcuison"},"content":"            .collect(Collectors.toSet());","lastModifiedDate":"2023-10-18"},{"lineNumber":66,"author":{"gitId":"jacobcuison"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"jacobcuison":32,"s-peiran":1,"-":34}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedContact.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"jacobcuison"},"content":"import java.util.LinkedHashSet;","lastModifiedDate":"2023-11-02"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"jacobcuison"},"content":"import seedu.address.model.contact.Address;","lastModifiedDate":"2023-10-03"},{"lineNumber":15,"author":{"gitId":"jacobcuison"},"content":"import seedu.address.model.contact.Contact;","lastModifiedDate":"2023-10-03"},{"lineNumber":16,"author":{"gitId":"jacobcuison"},"content":"import seedu.address.model.contact.Email;","lastModifiedDate":"2023-10-03"},{"lineNumber":17,"author":{"gitId":"jacobcuison"},"content":"import seedu.address.model.contact.Name;","lastModifiedDate":"2023-10-03"},{"lineNumber":18,"author":{"gitId":"jacobcuison"},"content":"import seedu.address.model.contact.Phone;","lastModifiedDate":"2023-10-03"},{"lineNumber":19,"author":{"gitId":"jacobcuison"},"content":"import seedu.address.model.note.Note;","lastModifiedDate":"2023-10-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"jacobcuison"},"content":" * Jackson-friendly version of {@link Contact}.","lastModifiedDate":"2023-10-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"jacobcuison"},"content":"class JsonAdaptedContact {","lastModifiedDate":"2023-10-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"jacobcuison"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Contact\u0027s %s field is missing!\";","lastModifiedDate":"2023-10-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final String name;","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final String phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final String email;","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private final String address;","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedTag\u003e tags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"jacobcuison"},"content":"    private final List\u003cJsonAdaptedNote\u003e notes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-18"},{"lineNumber":36,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"jacobcuison"},"content":"     * Constructs a {@code JsonAdaptedContact} with the given contact details.","lastModifiedDate":"2023-10-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"jacobcuison"},"content":"    public JsonAdaptedContact(@JsonProperty(\"name\") String name, @JsonProperty(\"phone\") String phone,","lastModifiedDate":"2023-10-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            @JsonProperty(\"email\") String email, @JsonProperty(\"address\") String address,","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"jacobcuison"},"content":"            @JsonProperty(\"tags\") List\u003cJsonAdaptedTag\u003e tags, @JsonProperty(\"notes\") List\u003cJsonAdaptedNote\u003e notes) {","lastModifiedDate":"2023-10-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (tags !\u003d null) {","lastModifiedDate":"2023-01-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            this.tags.addAll(tags);","lastModifiedDate":"2023-01-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"jacobcuison"},"content":"        if (notes !\u003d null) {","lastModifiedDate":"2023-10-18"},{"lineNumber":52,"author":{"gitId":"jacobcuison"},"content":"            this.notes.addAll(notes);","lastModifiedDate":"2023-10-18"},{"lineNumber":53,"author":{"gitId":"jacobcuison"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"jacobcuison"},"content":"     * Converts a given {@code Contact} into this class for Jackson use.","lastModifiedDate":"2023-10-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"jacobcuison"},"content":"    public JsonAdaptedContact(Contact source) {","lastModifiedDate":"2023-10-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        phone \u003d source.getPhone().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        email \u003d source.getEmail().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        address \u003d source.getAddress().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        tags.addAll(source.getTags().stream()","lastModifiedDate":"2023-01-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"jacobcuison"},"content":"        notes.addAll(source.getNotes().stream()","lastModifiedDate":"2023-10-18"},{"lineNumber":68,"author":{"gitId":"jacobcuison"},"content":"                .map(JsonAdaptedNote::new)","lastModifiedDate":"2023-10-18"},{"lineNumber":69,"author":{"gitId":"jacobcuison"},"content":"                .collect(Collectors.toList()));;","lastModifiedDate":"2023-10-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"jacobcuison"},"content":"     * Converts this Jackson-friendly adapted contact object into the model\u0027s {@code Contact} object.","lastModifiedDate":"2023-10-03"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"jacobcuison"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted contact.","lastModifiedDate":"2023-10-03"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"jacobcuison"},"content":"    public Contact toModelType() throws IllegalValueException {","lastModifiedDate":"2023-10-03"},{"lineNumber":78,"author":{"gitId":"jacobcuison"},"content":"        final List\u003cTag\u003e contactTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-03"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        for (JsonAdaptedTag tag : tags) {","lastModifiedDate":"2023-01-09"},{"lineNumber":80,"author":{"gitId":"jacobcuison"},"content":"            contactTags.add(tag.toModelType());","lastModifiedDate":"2023-10-03"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"jacobcuison"},"content":"        final List\u003cNote\u003e contactNotes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-18"},{"lineNumber":84,"author":{"gitId":"jacobcuison"},"content":"        for (JsonAdaptedNote note : notes) {","lastModifiedDate":"2023-10-18"},{"lineNumber":85,"author":{"gitId":"jacobcuison"},"content":"            contactNotes.add(note.toModelType());","lastModifiedDate":"2023-10-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        if (phone \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(phone)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        final Phone modelPhone \u003d new Phone(phone);","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        if (email \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(email)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        final Email modelEmail \u003d new Email(email);","lastModifiedDate":"2018-08-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        if (address \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(address)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        final Address modelAddress \u003d new Address(address);","lastModifiedDate":"2018-08-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":120,"author":{"gitId":"jacobcuison"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(contactTags);","lastModifiedDate":"2023-10-03"},{"lineNumber":121,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":122,"author":{"gitId":"jacobcuison"},"content":"        final Set\u003cNote\u003e modelNotes \u003d new LinkedHashSet\u003c\u003e(contactNotes);","lastModifiedDate":"2023-11-02"},{"lineNumber":123,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":124,"author":{"gitId":"jacobcuison"},"content":"        return new Contact(modelName, modelPhone, modelEmail, modelAddress, modelTags, modelNotes);","lastModifiedDate":"2023-10-18"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"jacobcuison":36,"-":91}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedMeeting.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jonyeokj"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-10-11"},{"lineNumber":2,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":3,"author":{"gitId":"jacobcuison"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-18"},{"lineNumber":4,"author":{"gitId":"jacobcuison"},"content":"import java.util.LinkedHashSet;","lastModifiedDate":"2023-11-02"},{"lineNumber":5,"author":{"gitId":"jacobcuison"},"content":"import java.util.List;","lastModifiedDate":"2023-10-18"},{"lineNumber":6,"author":{"gitId":"jacobcuison"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-18"},{"lineNumber":7,"author":{"gitId":"jacobcuison"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-10-18"},{"lineNumber":8,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":9,"author":{"gitId":"jonyeokj"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2023-10-11"},{"lineNumber":10,"author":{"gitId":"jonyeokj"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2023-10-11"},{"lineNumber":11,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":12,"author":{"gitId":"jonyeokj"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-10-11"},{"lineNumber":13,"author":{"gitId":"s-peiran"},"content":"import seedu.address.model.contact.Contact;","lastModifiedDate":"2023-10-24"},{"lineNumber":14,"author":{"gitId":"jonyeokj"},"content":"import seedu.address.model.meeting.Description;","lastModifiedDate":"2023-10-11"},{"lineNumber":15,"author":{"gitId":"jonyeokj"},"content":"import seedu.address.model.meeting.Meeting;","lastModifiedDate":"2023-10-11"},{"lineNumber":16,"author":{"gitId":"jonyeokj"},"content":"import seedu.address.model.meeting.Place;","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"jonyeokj"},"content":"import seedu.address.model.meeting.Time;","lastModifiedDate":"2023-10-11"},{"lineNumber":18,"author":{"gitId":"jonyeokj"},"content":"import seedu.address.model.meeting.Title;","lastModifiedDate":"2023-10-11"},{"lineNumber":19,"author":{"gitId":"jacobcuison"},"content":"import seedu.address.model.note.Note;","lastModifiedDate":"2023-10-18"},{"lineNumber":20,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":21,"author":{"gitId":"jonyeokj"},"content":"/**","lastModifiedDate":"2023-10-11"},{"lineNumber":22,"author":{"gitId":"jonyeokj"},"content":" * Jackson-friendly version of {@link Meeting}.","lastModifiedDate":"2023-10-11"},{"lineNumber":23,"author":{"gitId":"jonyeokj"},"content":" */","lastModifiedDate":"2023-10-11"},{"lineNumber":24,"author":{"gitId":"jonyeokj"},"content":"class JsonAdaptedMeeting {","lastModifiedDate":"2023-10-11"},{"lineNumber":25,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":26,"author":{"gitId":"jonyeokj"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Meeting\u0027s %s field is missing!\";","lastModifiedDate":"2023-10-11"},{"lineNumber":27,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":28,"author":{"gitId":"jonyeokj"},"content":"    private final String title;","lastModifiedDate":"2023-10-11"},{"lineNumber":29,"author":{"gitId":"jonyeokj"},"content":"    private final String time;","lastModifiedDate":"2023-10-11"},{"lineNumber":30,"author":{"gitId":"jonyeokj"},"content":"    private final String place;","lastModifiedDate":"2023-10-11"},{"lineNumber":31,"author":{"gitId":"jonyeokj"},"content":"    private final String description;","lastModifiedDate":"2023-10-11"},{"lineNumber":32,"author":{"gitId":"jacobcuison"},"content":"    private final List\u003cJsonAdaptedNote\u003e notes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-18"},{"lineNumber":33,"author":{"gitId":"s-peiran"},"content":"    private final List\u003cJsonAdaptedContact\u003e contacts \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-24"},{"lineNumber":34,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":35,"author":{"gitId":"jonyeokj"},"content":"    /**","lastModifiedDate":"2023-10-11"},{"lineNumber":36,"author":{"gitId":"jonyeokj"},"content":"     * Constructs a {@code JsonAdaptedMeeting} with the given meeting details.","lastModifiedDate":"2023-10-11"},{"lineNumber":37,"author":{"gitId":"jonyeokj"},"content":"     */","lastModifiedDate":"2023-10-11"},{"lineNumber":38,"author":{"gitId":"jonyeokj"},"content":"    @JsonCreator","lastModifiedDate":"2023-10-11"},{"lineNumber":39,"author":{"gitId":"jonyeokj"},"content":"    public JsonAdaptedMeeting(@JsonProperty(\"title\") String title, @JsonProperty(\"time\") String time,","lastModifiedDate":"2023-10-11"},{"lineNumber":40,"author":{"gitId":"jacobcuison"},"content":"                              @JsonProperty(\"place\") String place, @JsonProperty(\"description\") String description,","lastModifiedDate":"2023-10-18"},{"lineNumber":41,"author":{"gitId":"s-peiran"},"content":"                              @JsonProperty(\"notes\") List\u003cJsonAdaptedNote\u003e notes,","lastModifiedDate":"2023-10-24"},{"lineNumber":42,"author":{"gitId":"s-peiran"},"content":"                              @JsonProperty(\"contacts\") List\u003cJsonAdaptedContact\u003e contacts) {","lastModifiedDate":"2023-10-24"},{"lineNumber":43,"author":{"gitId":"jonyeokj"},"content":"        this.title \u003d title;","lastModifiedDate":"2023-10-11"},{"lineNumber":44,"author":{"gitId":"jonyeokj"},"content":"        this.time \u003d time;","lastModifiedDate":"2023-10-11"},{"lineNumber":45,"author":{"gitId":"jonyeokj"},"content":"        this.place \u003d place;","lastModifiedDate":"2023-10-11"},{"lineNumber":46,"author":{"gitId":"jonyeokj"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-10-11"},{"lineNumber":47,"author":{"gitId":"jacobcuison"},"content":"        if (notes !\u003d null) {","lastModifiedDate":"2023-10-18"},{"lineNumber":48,"author":{"gitId":"jacobcuison"},"content":"            this.notes.addAll(notes);","lastModifiedDate":"2023-10-18"},{"lineNumber":49,"author":{"gitId":"jacobcuison"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":50,"author":{"gitId":"s-peiran"},"content":"        if (contacts !\u003d null) {","lastModifiedDate":"2023-10-24"},{"lineNumber":51,"author":{"gitId":"s-peiran"},"content":"            this.contacts.addAll(contacts);","lastModifiedDate":"2023-10-24"},{"lineNumber":52,"author":{"gitId":"s-peiran"},"content":"        }","lastModifiedDate":"2023-10-24"},{"lineNumber":53,"author":{"gitId":"jonyeokj"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":54,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":55,"author":{"gitId":"jonyeokj"},"content":"    /**","lastModifiedDate":"2023-10-11"},{"lineNumber":56,"author":{"gitId":"jonyeokj"},"content":"     * Converts a given {@code Meeting} into this class for Jackson use.","lastModifiedDate":"2023-10-11"},{"lineNumber":57,"author":{"gitId":"jonyeokj"},"content":"     */","lastModifiedDate":"2023-10-11"},{"lineNumber":58,"author":{"gitId":"jonyeokj"},"content":"    public JsonAdaptedMeeting(Meeting source) {","lastModifiedDate":"2023-10-11"},{"lineNumber":59,"author":{"gitId":"jonyeokj"},"content":"        title \u003d source.getTitle().fullTitle;","lastModifiedDate":"2023-10-11"},{"lineNumber":60,"author":{"gitId":"jonyeokj"},"content":"        time \u003d source.getTime().toString();","lastModifiedDate":"2023-10-11"},{"lineNumber":61,"author":{"gitId":"jonyeokj"},"content":"        place \u003d source.getPlace().fullPlace;","lastModifiedDate":"2023-10-11"},{"lineNumber":62,"author":{"gitId":"jonyeokj"},"content":"        description \u003d source.getDescription().fullDescription;","lastModifiedDate":"2023-10-11"},{"lineNumber":63,"author":{"gitId":"jacobcuison"},"content":"        notes.addAll(source.getNotes().stream()","lastModifiedDate":"2023-10-18"},{"lineNumber":64,"author":{"gitId":"jacobcuison"},"content":"            .map(JsonAdaptedNote::new)","lastModifiedDate":"2023-10-18"},{"lineNumber":65,"author":{"gitId":"s-peiran"},"content":"            .collect(Collectors.toList()));","lastModifiedDate":"2023-10-24"},{"lineNumber":66,"author":{"gitId":"s-peiran"},"content":"        ;","lastModifiedDate":"2023-10-24"},{"lineNumber":67,"author":{"gitId":"s-peiran"},"content":"        contacts.addAll(source.getContacts().stream()","lastModifiedDate":"2023-10-24"},{"lineNumber":68,"author":{"gitId":"s-peiran"},"content":"            .map(JsonAdaptedContact::new)","lastModifiedDate":"2023-10-24"},{"lineNumber":69,"author":{"gitId":"s-peiran"},"content":"            .collect(Collectors.toList()));","lastModifiedDate":"2023-10-24"},{"lineNumber":70,"author":{"gitId":"jonyeokj"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":71,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":72,"author":{"gitId":"jonyeokj"},"content":"    /**","lastModifiedDate":"2023-10-11"},{"lineNumber":73,"author":{"gitId":"jonyeokj"},"content":"     * Converts this Jackson-friendly adapted meeting object into the model\u0027s {@code Meeting} object.","lastModifiedDate":"2023-10-11"},{"lineNumber":74,"author":{"gitId":"jonyeokj"},"content":"     *","lastModifiedDate":"2023-10-11"},{"lineNumber":75,"author":{"gitId":"jonyeokj"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted meeting.","lastModifiedDate":"2023-10-11"},{"lineNumber":76,"author":{"gitId":"jonyeokj"},"content":"     */","lastModifiedDate":"2023-10-11"},{"lineNumber":77,"author":{"gitId":"jonyeokj"},"content":"    public Meeting toModelType() throws IllegalValueException {","lastModifiedDate":"2023-10-11"},{"lineNumber":78,"author":{"gitId":"jacobcuison"},"content":"        final List\u003cNote\u003e meetingNotes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-18"},{"lineNumber":79,"author":{"gitId":"s-peiran"},"content":"        final List\u003cContact\u003e contactList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-25"},{"lineNumber":80,"author":{"gitId":"jacobcuison"},"content":"        for (JsonAdaptedNote note : notes) {","lastModifiedDate":"2023-10-18"},{"lineNumber":81,"author":{"gitId":"jacobcuison"},"content":"            meetingNotes.add(note.toModelType());","lastModifiedDate":"2023-10-18"},{"lineNumber":82,"author":{"gitId":"jacobcuison"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":83,"author":{"gitId":"s-peiran"},"content":"        for (JsonAdaptedContact c : contacts) {","lastModifiedDate":"2023-10-24"},{"lineNumber":84,"author":{"gitId":"s-peiran"},"content":"            contactList.add(c.toModelType());","lastModifiedDate":"2023-10-25"},{"lineNumber":85,"author":{"gitId":"s-peiran"},"content":"        }","lastModifiedDate":"2023-10-24"},{"lineNumber":86,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":87,"author":{"gitId":"jonyeokj"},"content":"        if (title \u003d\u003d null) {","lastModifiedDate":"2023-10-11"},{"lineNumber":88,"author":{"gitId":"jonyeokj"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Title.class.getSimpleName()));","lastModifiedDate":"2023-10-11"},{"lineNumber":89,"author":{"gitId":"jonyeokj"},"content":"        }","lastModifiedDate":"2023-10-11"},{"lineNumber":90,"author":{"gitId":"jonyeokj"},"content":"        if (!Title.isValidTitle(title)) {","lastModifiedDate":"2023-10-11"},{"lineNumber":91,"author":{"gitId":"jonyeokj"},"content":"            throw new IllegalValueException(Title.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-18"},{"lineNumber":92,"author":{"gitId":"jonyeokj"},"content":"        }","lastModifiedDate":"2023-10-11"},{"lineNumber":93,"author":{"gitId":"jonyeokj"},"content":"        final Title modelTitle \u003d new Title(title);","lastModifiedDate":"2023-10-11"},{"lineNumber":94,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":95,"author":{"gitId":"jonyeokj"},"content":"        if (time \u003d\u003d null) {","lastModifiedDate":"2023-10-11"},{"lineNumber":96,"author":{"gitId":"jonyeokj"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Time.class.getSimpleName()));","lastModifiedDate":"2023-10-11"},{"lineNumber":97,"author":{"gitId":"jonyeokj"},"content":"        }","lastModifiedDate":"2023-10-11"},{"lineNumber":98,"author":{"gitId":"jonyeokj"},"content":"        if (!Time.isValidTime(time)) {","lastModifiedDate":"2023-10-11"},{"lineNumber":99,"author":{"gitId":"jonyeokj"},"content":"            throw new IllegalValueException(Time.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-11"},{"lineNumber":100,"author":{"gitId":"jonyeokj"},"content":"        }","lastModifiedDate":"2023-10-11"},{"lineNumber":101,"author":{"gitId":"jonyeokj"},"content":"        final Time modelTime \u003d Time.fromString(time);","lastModifiedDate":"2023-10-11"},{"lineNumber":102,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":103,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":104,"author":{"gitId":"jonyeokj"},"content":"        if (place \u003d\u003d null) {","lastModifiedDate":"2023-10-11"},{"lineNumber":105,"author":{"gitId":"jonyeokj"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Place.class.getSimpleName()));","lastModifiedDate":"2023-10-11"},{"lineNumber":106,"author":{"gitId":"jonyeokj"},"content":"        }","lastModifiedDate":"2023-10-11"},{"lineNumber":107,"author":{"gitId":"jonyeokj"},"content":"        if (!Place.isValidPlace(place)) {","lastModifiedDate":"2023-10-11"},{"lineNumber":108,"author":{"gitId":"jonyeokj"},"content":"            throw new IllegalValueException(Place.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-11"},{"lineNumber":109,"author":{"gitId":"jonyeokj"},"content":"        }","lastModifiedDate":"2023-10-11"},{"lineNumber":110,"author":{"gitId":"jonyeokj"},"content":"        final Place modelPlace \u003d new Place(place);","lastModifiedDate":"2023-10-11"},{"lineNumber":111,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":112,"author":{"gitId":"jonyeokj"},"content":"        if (description \u003d\u003d null) {","lastModifiedDate":"2023-10-11"},{"lineNumber":113,"author":{"gitId":"jonyeokj"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2023-10-12"},{"lineNumber":114,"author":{"gitId":"jonyeokj"},"content":"                Description.class.getSimpleName()));","lastModifiedDate":"2023-10-12"},{"lineNumber":115,"author":{"gitId":"jonyeokj"},"content":"        }","lastModifiedDate":"2023-10-11"},{"lineNumber":116,"author":{"gitId":"jonyeokj"},"content":"        final Description modelDescription \u003d new Description(description);","lastModifiedDate":"2023-10-11"},{"lineNumber":117,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":118,"author":{"gitId":"jacobcuison"},"content":"        final Set\u003cNote\u003e modelNotes \u003d new LinkedHashSet\u003c\u003e(meetingNotes);","lastModifiedDate":"2023-11-02"},{"lineNumber":119,"author":{"gitId":"s-peiran"},"content":"        final ArrayList\u003cContact\u003e modelContacts \u003d new ArrayList\u003c\u003e(contactList);","lastModifiedDate":"2023-10-25"},{"lineNumber":120,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":121,"author":{"gitId":"s-peiran"},"content":"        return new Meeting(modelTitle, modelTime, modelPlace, modelDescription, modelNotes, modelContacts);","lastModifiedDate":"2023-10-24"},{"lineNumber":122,"author":{"gitId":"jonyeokj"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":123,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":124,"author":{"gitId":"jonyeokj"},"content":"}","lastModifiedDate":"2023-10-11"}],"authorContributionMap":{"jonyeokj":85,"jacobcuison":21,"s-peiran":18}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedNote.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jacobcuison"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-10-18"},{"lineNumber":2,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":3,"author":{"gitId":"jacobcuison"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2023-10-18"},{"lineNumber":4,"author":{"gitId":"jacobcuison"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2023-10-18"},{"lineNumber":5,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":6,"author":{"gitId":"jacobcuison"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-10-18"},{"lineNumber":7,"author":{"gitId":"jacobcuison"},"content":"import seedu.address.model.note.Note;","lastModifiedDate":"2023-10-18"},{"lineNumber":8,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":9,"author":{"gitId":"jacobcuison"},"content":"/**","lastModifiedDate":"2023-10-18"},{"lineNumber":10,"author":{"gitId":"jacobcuison"},"content":" * Jackson-friendly version of {@link Note}.","lastModifiedDate":"2023-10-18"},{"lineNumber":11,"author":{"gitId":"jacobcuison"},"content":" */","lastModifiedDate":"2023-10-18"},{"lineNumber":12,"author":{"gitId":"jacobcuison"},"content":"class JsonAdaptedNote {","lastModifiedDate":"2023-10-18"},{"lineNumber":13,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":14,"author":{"gitId":"jacobcuison"},"content":"    private final String note;","lastModifiedDate":"2023-10-18"},{"lineNumber":15,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":16,"author":{"gitId":"jacobcuison"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":17,"author":{"gitId":"jacobcuison"},"content":"     * Constructs a {@code JsonAdaptedNote} with the given {@code note}.","lastModifiedDate":"2023-10-18"},{"lineNumber":18,"author":{"gitId":"jacobcuison"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":19,"author":{"gitId":"jacobcuison"},"content":"    @JsonCreator","lastModifiedDate":"2023-10-18"},{"lineNumber":20,"author":{"gitId":"jacobcuison"},"content":"    public JsonAdaptedNote(String note) {","lastModifiedDate":"2023-10-18"},{"lineNumber":21,"author":{"gitId":"jacobcuison"},"content":"        this.note \u003d note;","lastModifiedDate":"2023-10-18"},{"lineNumber":22,"author":{"gitId":"jacobcuison"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":23,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":24,"author":{"gitId":"jacobcuison"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":25,"author":{"gitId":"jacobcuison"},"content":"     * Converts a given {@code Note} into this class for Jackson use.","lastModifiedDate":"2023-10-18"},{"lineNumber":26,"author":{"gitId":"jacobcuison"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":27,"author":{"gitId":"jacobcuison"},"content":"    public JsonAdaptedNote(Note source) {","lastModifiedDate":"2023-10-18"},{"lineNumber":28,"author":{"gitId":"jacobcuison"},"content":"        note \u003d source.note;","lastModifiedDate":"2023-10-18"},{"lineNumber":29,"author":{"gitId":"jacobcuison"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":30,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":31,"author":{"gitId":"jacobcuison"},"content":"    @JsonValue","lastModifiedDate":"2023-10-18"},{"lineNumber":32,"author":{"gitId":"jacobcuison"},"content":"    public String getNote() {","lastModifiedDate":"2023-10-18"},{"lineNumber":33,"author":{"gitId":"jacobcuison"},"content":"        return note;","lastModifiedDate":"2023-10-18"},{"lineNumber":34,"author":{"gitId":"jacobcuison"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":35,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":36,"author":{"gitId":"jacobcuison"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":37,"author":{"gitId":"jacobcuison"},"content":"     * Converts this Jackson-friendly adapted note object into the model\u0027s {@code Note} object.","lastModifiedDate":"2023-10-18"},{"lineNumber":38,"author":{"gitId":"jacobcuison"},"content":"     *","lastModifiedDate":"2023-10-18"},{"lineNumber":39,"author":{"gitId":"jacobcuison"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted note.","lastModifiedDate":"2023-10-18"},{"lineNumber":40,"author":{"gitId":"jacobcuison"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":41,"author":{"gitId":"jacobcuison"},"content":"    public Note toModelType() throws IllegalValueException {","lastModifiedDate":"2023-10-18"},{"lineNumber":42,"author":{"gitId":"jacobcuison"},"content":"        return new Note(note);","lastModifiedDate":"2023-10-18"},{"lineNumber":43,"author":{"gitId":"jacobcuison"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":44,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":45,"author":{"gitId":"jacobcuison"},"content":"}","lastModifiedDate":"2023-10-18"}],"authorContributionMap":{"jacobcuison":45}},{"path":"src/main/java/seedu/address/storage/JsonSerializableAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"jacobcuison"},"content":"import seedu.address.model.contact.Contact;","lastModifiedDate":"2023-10-03"},{"lineNumber":15,"author":{"gitId":"jonyeokj"},"content":"import seedu.address.model.meeting.Meeting;","lastModifiedDate":"2023-10-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * An Immutable AddressBook that is serializable to JSON format.","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"@JsonRootName(value \u003d \"addressbook\")","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"class JsonSerializableAddressBook {","lastModifiedDate":"2018-12-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"jacobcuison"},"content":"    public static final String MESSAGE_DUPLICATE_CONTACT \u003d \"Contacts list contains duplicate contact(s).\";","lastModifiedDate":"2023-10-03"},{"lineNumber":24,"author":{"gitId":"jonyeokj"},"content":"    public static final String MESSAGE_DUPLICATE_MEETING \u003d \"Meetings list contains duplicate meeting(s).\";","lastModifiedDate":"2023-10-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"jacobcuison"},"content":"    private final List\u003cJsonAdaptedContact\u003e contacts \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-03"},{"lineNumber":27,"author":{"gitId":"jonyeokj"},"content":"    private final List\u003cJsonAdaptedMeeting\u003e meetings \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"jonyeokj"},"content":"     * Constructs a {@code JsonSerializableAddressBook} with the given contacts and meetings.","lastModifiedDate":"2023-10-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"jonyeokj"},"content":"    public JsonSerializableAddressBook(","lastModifiedDate":"2023-10-12"},{"lineNumber":34,"author":{"gitId":"jonyeokj"},"content":"        @JsonProperty(\"contacts\") List\u003cJsonAdaptedContact\u003e contacts,","lastModifiedDate":"2023-10-12"},{"lineNumber":35,"author":{"gitId":"jonyeokj"},"content":"        @JsonProperty(\"meetings\") List\u003cJsonAdaptedMeeting\u003e meetings) {","lastModifiedDate":"2023-10-11"},{"lineNumber":36,"author":{"gitId":"jonyeokj"},"content":"        if (contacts !\u003d null) {","lastModifiedDate":"2023-10-12"},{"lineNumber":37,"author":{"gitId":"jacobcuison"},"content":"            this.contacts.addAll(contacts);","lastModifiedDate":"2023-10-03"},{"lineNumber":38,"author":{"gitId":"jonyeokj"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":39,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":40,"author":{"gitId":"jonyeokj"},"content":"        if (meetings !\u003d null) {","lastModifiedDate":"2023-10-12"},{"lineNumber":41,"author":{"gitId":"jonyeokj"},"content":"            this.meetings.addAll(meetings);","lastModifiedDate":"2023-10-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Converts a given {@code ReadOnlyAddressBook} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableAddressBook}.","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public JsonSerializableAddressBook(ReadOnlyAddressBook source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"jacobcuison"},"content":"        contacts.addAll(source.getContactList().stream().map(JsonAdaptedContact::new).collect(Collectors.toList()));","lastModifiedDate":"2023-10-03"},{"lineNumber":52,"author":{"gitId":"jonyeokj"},"content":"        meetings.addAll(source.getMeetingList().stream().map(JsonAdaptedMeeting::new).collect(Collectors.toList()));","lastModifiedDate":"2023-10-11"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Converts this address book into the model\u0027s {@code AddressBook} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public AddressBook toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"jacobcuison"},"content":"        for (JsonAdaptedContact jsonAdaptedContact : contacts) {","lastModifiedDate":"2023-10-03"},{"lineNumber":63,"author":{"gitId":"jacobcuison"},"content":"            Contact contact \u003d jsonAdaptedContact.toModelType();","lastModifiedDate":"2023-10-03"},{"lineNumber":64,"author":{"gitId":"jacobcuison"},"content":"            if (addressBook.hasContact(contact)) {","lastModifiedDate":"2023-10-03"},{"lineNumber":65,"author":{"gitId":"jacobcuison"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_CONTACT);","lastModifiedDate":"2023-10-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"jacobcuison"},"content":"            addressBook.addContact(contact);","lastModifiedDate":"2023-10-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":70,"author":{"gitId":"jonyeokj"},"content":"        for (JsonAdaptedMeeting jsonAdaptedMeeting : meetings) {","lastModifiedDate":"2023-10-11"},{"lineNumber":71,"author":{"gitId":"jonyeokj"},"content":"            Meeting meeting \u003d jsonAdaptedMeeting.toModelType();","lastModifiedDate":"2023-10-11"},{"lineNumber":72,"author":{"gitId":"jonyeokj"},"content":"            if (addressBook.hasMeeting(meeting)) {","lastModifiedDate":"2023-10-11"},{"lineNumber":73,"author":{"gitId":"jonyeokj"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_MEETING);","lastModifiedDate":"2023-10-11"},{"lineNumber":74,"author":{"gitId":"jonyeokj"},"content":"            }","lastModifiedDate":"2023-10-11"},{"lineNumber":75,"author":{"gitId":"jonyeokj"},"content":"            addressBook.addMeeting(meeting);","lastModifiedDate":"2023-10-11"},{"lineNumber":76,"author":{"gitId":"jonyeokj"},"content":"        }","lastModifiedDate":"2023-10-11"},{"lineNumber":77,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"jonyeokj":22,"jacobcuison":10,"-":49}},{"path":"src/main/java/seedu/address/ui/AppState.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jonyeokj"},"content":"package seedu.address.ui;","lastModifiedDate":"2023-11-02"},{"lineNumber":2,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":3,"author":{"gitId":"jonyeokj"},"content":"import java.util.Optional;","lastModifiedDate":"2023-11-02"},{"lineNumber":4,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":5,"author":{"gitId":"jonyeokj"},"content":"import seedu.address.model.contact.Contact;","lastModifiedDate":"2023-11-02"},{"lineNumber":6,"author":{"gitId":"jonyeokj"},"content":"import seedu.address.model.meeting.Meeting;","lastModifiedDate":"2023-11-02"},{"lineNumber":7,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":8,"author":{"gitId":"jonyeokj"},"content":"/**","lastModifiedDate":"2023-11-02"},{"lineNumber":9,"author":{"gitId":"jonyeokj"},"content":" * Represents the state of the application, which includes the mode the application","lastModifiedDate":"2023-11-02"},{"lineNumber":10,"author":{"gitId":"jonyeokj"},"content":" * is currently in (Contacts or Meetings),the type of list to be displayed on the UI (Contacts or Meetings),","lastModifiedDate":"2023-11-02"},{"lineNumber":11,"author":{"gitId":"jonyeokj"},"content":" * and the contact/meeting viewed.","lastModifiedDate":"2023-11-02"},{"lineNumber":12,"author":{"gitId":"jonyeokj"},"content":" */","lastModifiedDate":"2023-11-02"},{"lineNumber":13,"author":{"gitId":"jonyeokj"},"content":"public class AppState {","lastModifiedDate":"2023-11-02"},{"lineNumber":14,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":15,"author":{"gitId":"jonyeokj"},"content":"    private static AppState instance;","lastModifiedDate":"2023-11-02"},{"lineNumber":16,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":17,"author":{"gitId":"jonyeokj"},"content":"    private ListType listType;","lastModifiedDate":"2023-11-02"},{"lineNumber":18,"author":{"gitId":"jonyeokj"},"content":"    private ModeType mode;","lastModifiedDate":"2023-11-02"},{"lineNumber":19,"author":{"gitId":"jonyeokj"},"content":"    private Optional\u003cContact\u003e contactToView;","lastModifiedDate":"2023-11-02"},{"lineNumber":20,"author":{"gitId":"jonyeokj"},"content":"    private Optional\u003cMeeting\u003e meetingToView;","lastModifiedDate":"2023-11-02"},{"lineNumber":21,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":22,"author":{"gitId":"jonyeokj"},"content":"    /**","lastModifiedDate":"2023-11-02"},{"lineNumber":23,"author":{"gitId":"jonyeokj"},"content":"     * List of modes that the application can be in.","lastModifiedDate":"2023-11-02"},{"lineNumber":24,"author":{"gitId":"jonyeokj"},"content":"     */","lastModifiedDate":"2023-11-02"},{"lineNumber":25,"author":{"gitId":"jonyeokj"},"content":"    public enum ModeType {","lastModifiedDate":"2023-11-02"},{"lineNumber":26,"author":{"gitId":"jonyeokj"},"content":"        CONTACTS, MEETINGS","lastModifiedDate":"2023-11-02"},{"lineNumber":27,"author":{"gitId":"jonyeokj"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":28,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":29,"author":{"gitId":"jonyeokj"},"content":"    /**","lastModifiedDate":"2023-11-02"},{"lineNumber":30,"author":{"gitId":"jonyeokj"},"content":"     * Type of list to be displayed on the GUI.","lastModifiedDate":"2023-11-02"},{"lineNumber":31,"author":{"gitId":"jonyeokj"},"content":"     */","lastModifiedDate":"2023-11-02"},{"lineNumber":32,"author":{"gitId":"jonyeokj"},"content":"    public enum ListType {","lastModifiedDate":"2023-11-02"},{"lineNumber":33,"author":{"gitId":"jonyeokj"},"content":"        CONTACTS, MEETINGS","lastModifiedDate":"2023-11-02"},{"lineNumber":34,"author":{"gitId":"jonyeokj"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":35,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":36,"author":{"gitId":"jonyeokj"},"content":"    /**","lastModifiedDate":"2023-11-02"},{"lineNumber":37,"author":{"gitId":"jonyeokj"},"content":"     * Private constructor to prevent creating instance externally. Initializes the listType and mode to CONTACTS.","lastModifiedDate":"2023-11-02"},{"lineNumber":38,"author":{"gitId":"jonyeokj"},"content":"     */","lastModifiedDate":"2023-11-02"},{"lineNumber":39,"author":{"gitId":"jonyeokj"},"content":"    private AppState() {","lastModifiedDate":"2023-11-02"},{"lineNumber":40,"author":{"gitId":"jonyeokj"},"content":"        this.listType \u003d ListType.CONTACTS;","lastModifiedDate":"2023-11-02"},{"lineNumber":41,"author":{"gitId":"jonyeokj"},"content":"        this.mode \u003d ModeType.CONTACTS;","lastModifiedDate":"2023-11-02"},{"lineNumber":42,"author":{"gitId":"jonyeokj"},"content":"        this.contactToView \u003d Optional.empty();","lastModifiedDate":"2023-11-02"},{"lineNumber":43,"author":{"gitId":"jonyeokj"},"content":"        this.meetingToView \u003d Optional.empty();","lastModifiedDate":"2023-11-02"},{"lineNumber":44,"author":{"gitId":"jonyeokj"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":45,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":46,"author":{"gitId":"jonyeokj"},"content":"    /**","lastModifiedDate":"2023-11-02"},{"lineNumber":47,"author":{"gitId":"jonyeokj"},"content":"     * Gets the instance of AppState, creating one if it doesn\u0027t exist.","lastModifiedDate":"2023-11-02"},{"lineNumber":48,"author":{"gitId":"jonyeokj"},"content":"     *","lastModifiedDate":"2023-11-02"},{"lineNumber":49,"author":{"gitId":"jonyeokj"},"content":"     * @return The instance of AppState.","lastModifiedDate":"2023-11-02"},{"lineNumber":50,"author":{"gitId":"jonyeokj"},"content":"     */","lastModifiedDate":"2023-11-02"},{"lineNumber":51,"author":{"gitId":"jonyeokj"},"content":"    public static AppState getInstance() {","lastModifiedDate":"2023-11-02"},{"lineNumber":52,"author":{"gitId":"jonyeokj"},"content":"        if (instance \u003d\u003d null) {","lastModifiedDate":"2023-11-02"},{"lineNumber":53,"author":{"gitId":"jonyeokj"},"content":"            instance \u003d new AppState();","lastModifiedDate":"2023-11-02"},{"lineNumber":54,"author":{"gitId":"jonyeokj"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":55,"author":{"gitId":"jonyeokj"},"content":"        return instance;","lastModifiedDate":"2023-11-02"},{"lineNumber":56,"author":{"gitId":"jonyeokj"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":57,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":58,"author":{"gitId":"jonyeokj"},"content":"    /**","lastModifiedDate":"2023-11-02"},{"lineNumber":59,"author":{"gitId":"jonyeokj"},"content":"     * Gets the current list type of the application.","lastModifiedDate":"2023-11-02"},{"lineNumber":60,"author":{"gitId":"jonyeokj"},"content":"     *","lastModifiedDate":"2023-11-02"},{"lineNumber":61,"author":{"gitId":"jonyeokj"},"content":"     * @return The current list type of the application.","lastModifiedDate":"2023-11-02"},{"lineNumber":62,"author":{"gitId":"jonyeokj"},"content":"     */","lastModifiedDate":"2023-11-02"},{"lineNumber":63,"author":{"gitId":"jonyeokj"},"content":"    public ListType getListType() {","lastModifiedDate":"2023-11-02"},{"lineNumber":64,"author":{"gitId":"jonyeokj"},"content":"        return listType;","lastModifiedDate":"2023-11-02"},{"lineNumber":65,"author":{"gitId":"jonyeokj"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":66,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":67,"author":{"gitId":"jonyeokj"},"content":"    /**","lastModifiedDate":"2023-11-02"},{"lineNumber":68,"author":{"gitId":"jonyeokj"},"content":"     * Sets the list type of the application.","lastModifiedDate":"2023-11-02"},{"lineNumber":69,"author":{"gitId":"jonyeokj"},"content":"     *","lastModifiedDate":"2023-11-02"},{"lineNumber":70,"author":{"gitId":"jonyeokj"},"content":"     * @param listType The list type to be set.","lastModifiedDate":"2023-11-02"},{"lineNumber":71,"author":{"gitId":"jonyeokj"},"content":"     */","lastModifiedDate":"2023-11-02"},{"lineNumber":72,"author":{"gitId":"jonyeokj"},"content":"    public void setListType(ListType listType) {","lastModifiedDate":"2023-11-02"},{"lineNumber":73,"author":{"gitId":"jonyeokj"},"content":"        this.listType \u003d listType;","lastModifiedDate":"2023-11-02"},{"lineNumber":74,"author":{"gitId":"jonyeokj"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":75,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":76,"author":{"gitId":"jonyeokj"},"content":"    /**","lastModifiedDate":"2023-11-02"},{"lineNumber":77,"author":{"gitId":"jonyeokj"},"content":"     * Gets the contact currently being viewed.","lastModifiedDate":"2023-11-02"},{"lineNumber":78,"author":{"gitId":"jonyeokj"},"content":"     *","lastModifiedDate":"2023-11-02"},{"lineNumber":79,"author":{"gitId":"jonyeokj"},"content":"     * @return The contact currently being viewed.","lastModifiedDate":"2023-11-02"},{"lineNumber":80,"author":{"gitId":"jonyeokj"},"content":"     * @throws IllegalStateException If no contact is currently being viewed.","lastModifiedDate":"2023-11-02"},{"lineNumber":81,"author":{"gitId":"jonyeokj"},"content":"     */","lastModifiedDate":"2023-11-02"},{"lineNumber":82,"author":{"gitId":"jonyeokj"},"content":"    public Contact getContact() {","lastModifiedDate":"2023-11-02"},{"lineNumber":83,"author":{"gitId":"jonyeokj"},"content":"        return contactToView.orElseThrow(() -\u003e new IllegalStateException(\"No contact is currently being viewed.\"));","lastModifiedDate":"2023-11-02"},{"lineNumber":84,"author":{"gitId":"jonyeokj"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":85,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":86,"author":{"gitId":"jonyeokj"},"content":"    /**","lastModifiedDate":"2023-11-02"},{"lineNumber":87,"author":{"gitId":"jonyeokj"},"content":"     * Gets the meeting currently being viewed.","lastModifiedDate":"2023-11-02"},{"lineNumber":88,"author":{"gitId":"jonyeokj"},"content":"     *","lastModifiedDate":"2023-11-02"},{"lineNumber":89,"author":{"gitId":"jonyeokj"},"content":"     * @return The meeting currently being viewed.","lastModifiedDate":"2023-11-02"},{"lineNumber":90,"author":{"gitId":"jonyeokj"},"content":"     * @throws IllegalStateException If no meeting is currently being viewed.","lastModifiedDate":"2023-11-02"},{"lineNumber":91,"author":{"gitId":"jonyeokj"},"content":"     */","lastModifiedDate":"2023-11-02"},{"lineNumber":92,"author":{"gitId":"jonyeokj"},"content":"    public Meeting getMeeting() {","lastModifiedDate":"2023-11-02"},{"lineNumber":93,"author":{"gitId":"jonyeokj"},"content":"        return meetingToView.orElseThrow(() -\u003e new IllegalStateException(\"No meeting is currently being viewed.\"));","lastModifiedDate":"2023-11-02"},{"lineNumber":94,"author":{"gitId":"jonyeokj"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":95,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":96,"author":{"gitId":"jonyeokj"},"content":"    /**","lastModifiedDate":"2023-11-02"},{"lineNumber":97,"author":{"gitId":"jonyeokj"},"content":"     * Sets the contact to be viewed. This will clear the meeting being viewed.","lastModifiedDate":"2023-11-02"},{"lineNumber":98,"author":{"gitId":"jonyeokj"},"content":"     *","lastModifiedDate":"2023-11-02"},{"lineNumber":99,"author":{"gitId":"jonyeokj"},"content":"     * @param contact The contact to be viewed.","lastModifiedDate":"2023-11-02"},{"lineNumber":100,"author":{"gitId":"jonyeokj"},"content":"     */","lastModifiedDate":"2023-11-02"},{"lineNumber":101,"author":{"gitId":"jonyeokj"},"content":"    public void setContact(Contact contact) {","lastModifiedDate":"2023-11-02"},{"lineNumber":102,"author":{"gitId":"jonyeokj"},"content":"        this.contactToView \u003d Optional.of(contact);","lastModifiedDate":"2023-11-02"},{"lineNumber":103,"author":{"gitId":"jonyeokj"},"content":"        this.meetingToView \u003d Optional.empty();","lastModifiedDate":"2023-11-02"},{"lineNumber":104,"author":{"gitId":"jonyeokj"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":105,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":106,"author":{"gitId":"jonyeokj"},"content":"    /**","lastModifiedDate":"2023-11-02"},{"lineNumber":107,"author":{"gitId":"jonyeokj"},"content":"     * Sets the meeting to be viewed. This will clear the contact being viewed.","lastModifiedDate":"2023-11-02"},{"lineNumber":108,"author":{"gitId":"jonyeokj"},"content":"     *","lastModifiedDate":"2023-11-02"},{"lineNumber":109,"author":{"gitId":"jonyeokj"},"content":"     * @param meeting The meeting to be viewed.","lastModifiedDate":"2023-11-02"},{"lineNumber":110,"author":{"gitId":"jonyeokj"},"content":"     */","lastModifiedDate":"2023-11-02"},{"lineNumber":111,"author":{"gitId":"jonyeokj"},"content":"    public void setMeeting(Meeting meeting) {","lastModifiedDate":"2023-11-02"},{"lineNumber":112,"author":{"gitId":"jonyeokj"},"content":"        this.contactToView \u003d Optional.empty();","lastModifiedDate":"2023-11-02"},{"lineNumber":113,"author":{"gitId":"jonyeokj"},"content":"        this.meetingToView \u003d Optional.of(meeting);","lastModifiedDate":"2023-11-02"},{"lineNumber":114,"author":{"gitId":"jonyeokj"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":115,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":116,"author":{"gitId":"jonyeokj"},"content":"    /**","lastModifiedDate":"2023-11-02"},{"lineNumber":117,"author":{"gitId":"jonyeokj"},"content":"     * Deletes the contact currently being viewed if it is the same as the given contact.","lastModifiedDate":"2023-11-02"},{"lineNumber":118,"author":{"gitId":"jonyeokj"},"content":"     *","lastModifiedDate":"2023-11-02"},{"lineNumber":119,"author":{"gitId":"jonyeokj"},"content":"     * @param contact The contact to be deleted.","lastModifiedDate":"2023-11-02"},{"lineNumber":120,"author":{"gitId":"jonyeokj"},"content":"     */","lastModifiedDate":"2023-11-02"},{"lineNumber":121,"author":{"gitId":"jonyeokj"},"content":"    public void deleteContact(Contact contact) {","lastModifiedDate":"2023-11-02"},{"lineNumber":122,"author":{"gitId":"jonyeokj"},"content":"        if (contactToView.map(c -\u003e c.equals(contact)).orElse(false)) {","lastModifiedDate":"2023-11-02"},{"lineNumber":123,"author":{"gitId":"jonyeokj"},"content":"            contactToView \u003d Optional.empty();","lastModifiedDate":"2023-11-02"},{"lineNumber":124,"author":{"gitId":"jonyeokj"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":125,"author":{"gitId":"jonyeokj"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":126,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":127,"author":{"gitId":"jonyeokj"},"content":"    /**","lastModifiedDate":"2023-11-02"},{"lineNumber":128,"author":{"gitId":"jonyeokj"},"content":"     * Deletes the meeting currently being viewed if it is the same as the given meeting.","lastModifiedDate":"2023-11-02"},{"lineNumber":129,"author":{"gitId":"jonyeokj"},"content":"     *","lastModifiedDate":"2023-11-02"},{"lineNumber":130,"author":{"gitId":"jonyeokj"},"content":"     * @param meeting The meeting to be deleted.","lastModifiedDate":"2023-11-02"},{"lineNumber":131,"author":{"gitId":"jonyeokj"},"content":"     */","lastModifiedDate":"2023-11-02"},{"lineNumber":132,"author":{"gitId":"jonyeokj"},"content":"    public void deleteMeeting(Meeting meeting) {","lastModifiedDate":"2023-11-02"},{"lineNumber":133,"author":{"gitId":"jonyeokj"},"content":"        if (meetingToView.map(m -\u003e m.equals(meeting)).orElse(false)) {","lastModifiedDate":"2023-11-02"},{"lineNumber":134,"author":{"gitId":"jonyeokj"},"content":"            meetingToView \u003d Optional.empty();","lastModifiedDate":"2023-11-02"},{"lineNumber":135,"author":{"gitId":"jonyeokj"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":136,"author":{"gitId":"jonyeokj"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":137,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":138,"author":{"gitId":"jonyeokj"},"content":"    /**","lastModifiedDate":"2023-11-02"},{"lineNumber":139,"author":{"gitId":"jonyeokj"},"content":"     * Checks if there is a contact currently being viewed.","lastModifiedDate":"2023-11-02"},{"lineNumber":140,"author":{"gitId":"jonyeokj"},"content":"     *","lastModifiedDate":"2023-11-02"},{"lineNumber":141,"author":{"gitId":"jonyeokj"},"content":"     * @return True if there is a contact currently being viewed, false otherwise.","lastModifiedDate":"2023-11-02"},{"lineNumber":142,"author":{"gitId":"jonyeokj"},"content":"     */","lastModifiedDate":"2023-11-02"},{"lineNumber":143,"author":{"gitId":"jonyeokj"},"content":"    public boolean isContactPresent() {","lastModifiedDate":"2023-11-02"},{"lineNumber":144,"author":{"gitId":"jonyeokj"},"content":"        return contactToView.isPresent();","lastModifiedDate":"2023-11-02"},{"lineNumber":145,"author":{"gitId":"jonyeokj"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":146,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":147,"author":{"gitId":"jonyeokj"},"content":"    /**","lastModifiedDate":"2023-11-02"},{"lineNumber":148,"author":{"gitId":"jonyeokj"},"content":"     * Checks if there is a meeting currently being viewed.","lastModifiedDate":"2023-11-02"},{"lineNumber":149,"author":{"gitId":"jonyeokj"},"content":"     *","lastModifiedDate":"2023-11-02"},{"lineNumber":150,"author":{"gitId":"jonyeokj"},"content":"     * @return True if there is a meeting currently being viewed, false otherwise.","lastModifiedDate":"2023-11-02"},{"lineNumber":151,"author":{"gitId":"jonyeokj"},"content":"     */","lastModifiedDate":"2023-11-02"},{"lineNumber":152,"author":{"gitId":"jonyeokj"},"content":"    public boolean isMeetingPresent() {","lastModifiedDate":"2023-11-02"},{"lineNumber":153,"author":{"gitId":"jonyeokj"},"content":"        return meetingToView.isPresent();","lastModifiedDate":"2023-11-02"},{"lineNumber":154,"author":{"gitId":"jonyeokj"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":155,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":156,"author":{"gitId":"jonyeokj"},"content":"    /**","lastModifiedDate":"2023-11-02"},{"lineNumber":157,"author":{"gitId":"jonyeokj"},"content":"     * Gets the current mode of the application.","lastModifiedDate":"2023-11-02"},{"lineNumber":158,"author":{"gitId":"jonyeokj"},"content":"     *","lastModifiedDate":"2023-11-02"},{"lineNumber":159,"author":{"gitId":"jonyeokj"},"content":"     * @return The current mode of the application.","lastModifiedDate":"2023-11-02"},{"lineNumber":160,"author":{"gitId":"jonyeokj"},"content":"     */","lastModifiedDate":"2023-11-02"},{"lineNumber":161,"author":{"gitId":"jonyeokj"},"content":"    public ModeType getModeType() {","lastModifiedDate":"2023-11-02"},{"lineNumber":162,"author":{"gitId":"jonyeokj"},"content":"        return mode;","lastModifiedDate":"2023-11-02"},{"lineNumber":163,"author":{"gitId":"jonyeokj"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":164,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":165,"author":{"gitId":"jonyeokj"},"content":"    /**","lastModifiedDate":"2023-11-02"},{"lineNumber":166,"author":{"gitId":"jonyeokj"},"content":"     * Sets the mode of the application.","lastModifiedDate":"2023-11-02"},{"lineNumber":167,"author":{"gitId":"jonyeokj"},"content":"     *","lastModifiedDate":"2023-11-02"},{"lineNumber":168,"author":{"gitId":"jonyeokj"},"content":"     * @param mode The mode to be set.","lastModifiedDate":"2023-11-02"},{"lineNumber":169,"author":{"gitId":"jonyeokj"},"content":"     */","lastModifiedDate":"2023-11-02"},{"lineNumber":170,"author":{"gitId":"jonyeokj"},"content":"    public void setModeType(ModeType mode) {","lastModifiedDate":"2023-11-02"},{"lineNumber":171,"author":{"gitId":"jonyeokj"},"content":"        this.mode \u003d mode;","lastModifiedDate":"2023-11-02"},{"lineNumber":172,"author":{"gitId":"jonyeokj"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":173,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":174,"author":{"gitId":"jonyeokj"},"content":"    /**","lastModifiedDate":"2023-11-02"},{"lineNumber":175,"author":{"gitId":"jonyeokj"},"content":"     * Toggles the mode of the application between Contacts and Meetings.","lastModifiedDate":"2023-11-02"},{"lineNumber":176,"author":{"gitId":"jonyeokj"},"content":"     */","lastModifiedDate":"2023-11-02"},{"lineNumber":177,"author":{"gitId":"jonyeokj"},"content":"    public void changeMode() {","lastModifiedDate":"2023-11-02"},{"lineNumber":178,"author":{"gitId":"jonyeokj"},"content":"        if (mode \u003d\u003d ModeType.CONTACTS) {","lastModifiedDate":"2023-11-02"},{"lineNumber":179,"author":{"gitId":"jonyeokj"},"content":"            mode \u003d ModeType.MEETINGS;","lastModifiedDate":"2023-11-02"},{"lineNumber":180,"author":{"gitId":"jonyeokj"},"content":"        } else {","lastModifiedDate":"2023-11-02"},{"lineNumber":181,"author":{"gitId":"jonyeokj"},"content":"            mode \u003d ModeType.CONTACTS;","lastModifiedDate":"2023-11-02"},{"lineNumber":182,"author":{"gitId":"jonyeokj"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":183,"author":{"gitId":"jonyeokj"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":184,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":185,"author":{"gitId":"jonyeokj"},"content":"    /**","lastModifiedDate":"2023-11-02"},{"lineNumber":186,"author":{"gitId":"jonyeokj"},"content":"     * Gets the current mode of the application. This method is a duplicate of getModeType.","lastModifiedDate":"2023-11-02"},{"lineNumber":187,"author":{"gitId":"jonyeokj"},"content":"     *","lastModifiedDate":"2023-11-02"},{"lineNumber":188,"author":{"gitId":"jonyeokj"},"content":"     * @return The current mode of the application.","lastModifiedDate":"2023-11-02"},{"lineNumber":189,"author":{"gitId":"jonyeokj"},"content":"     */","lastModifiedDate":"2023-11-02"},{"lineNumber":190,"author":{"gitId":"jonyeokj"},"content":"    public ModeType getMode() {","lastModifiedDate":"2023-11-02"},{"lineNumber":191,"author":{"gitId":"jonyeokj"},"content":"        return mode;","lastModifiedDate":"2023-11-02"},{"lineNumber":192,"author":{"gitId":"jonyeokj"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":193,"author":{"gitId":"jonyeokj"},"content":"}","lastModifiedDate":"2023-11-02"}],"authorContributionMap":{"jonyeokj":193}},{"path":"src/main/java/seedu/address/ui/CommandBox.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"jonyeokj"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-11-01"},{"lineNumber":4,"author":{"gitId":"jonyeokj"},"content":"import java.util.List;","lastModifiedDate":"2023-11-01"},{"lineNumber":5,"author":{"gitId":"jonyeokj"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-11-01"},{"lineNumber":6,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-03-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-14"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2016-09-14"},{"lineNumber":10,"author":{"gitId":"jonyeokj"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2023-11-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-10-15"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * The UI component that is responsible for receiving user command inputs.","lastModifiedDate":"2017-08-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class CommandBox extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String ERROR_STYLE_CLASS \u003d \"error\";","lastModifiedDate":"2017-02-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"CommandBox.fxml\";","lastModifiedDate":"2017-04-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final CommandExecutor commandExecutor;","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private TextField commandTextField;","lastModifiedDate":"2016-09-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":29,"author":{"gitId":"jonyeokj"},"content":"    private List\u003cString\u003e commandHistory \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-11-01"},{"lineNumber":30,"author":{"gitId":"jonyeokj"},"content":"    private int currentHistoryPointer \u003d 0;","lastModifiedDate":"2023-11-01"},{"lineNumber":31,"author":{"gitId":"jonyeokj"},"content":"    private String initialInput;","lastModifiedDate":"2023-11-01"},{"lineNumber":32,"author":{"gitId":"jonyeokj"},"content":"    private boolean hasStartedHistoryNavigation \u003d false;","lastModifiedDate":"2023-11-01"},{"lineNumber":33,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Creates a {@code CommandBox} with the given {@code CommandExecutor}.","lastModifiedDate":"2020-05-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public CommandBox(CommandExecutor commandExecutor) {","lastModifiedDate":"2019-01-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        this.commandExecutor \u003d commandExecutor;","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"jonyeokj"},"content":"        // calls #setStyleToDefault() and handleTextChange whenever there is a change to the text of the command box.","lastModifiedDate":"2023-11-01"},{"lineNumber":41,"author":{"gitId":"jonyeokj"},"content":"        commandTextField.textProperty().addListener((unused1, unused2, unused3) -\u003e {","lastModifiedDate":"2023-11-01"},{"lineNumber":42,"author":{"gitId":"jonyeokj"},"content":"            setStyleToDefault();","lastModifiedDate":"2023-11-01"},{"lineNumber":43,"author":{"gitId":"jonyeokj"},"content":"            handleTextChange();","lastModifiedDate":"2023-11-01"},{"lineNumber":44,"author":{"gitId":"jonyeokj"},"content":"        });","lastModifiedDate":"2023-11-01"},{"lineNumber":45,"author":{"gitId":"jonyeokj"},"content":"        commandTextField.addEventFilter(KeyEvent.KEY_PRESSED, this::handleKeyPress);","lastModifiedDate":"2023-11-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-14"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    private void handleCommandEntered() {","lastModifiedDate":"2018-04-01"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        String commandText \u003d commandTextField.getText();","lastModifiedDate":"2020-12-04"},{"lineNumber":51,"author":{"gitId":"jonyeokj"},"content":"        if (commandText.isEmpty()) {","lastModifiedDate":"2023-11-01"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2020-12-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-04"},{"lineNumber":55,"author":{"gitId":"jonyeokj"},"content":"        // Prevent accidental duplicate command entries and pop commandText to the front","lastModifiedDate":"2023-11-01"},{"lineNumber":56,"author":{"gitId":"jonyeokj"},"content":"        commandHistory.remove(commandText);","lastModifiedDate":"2023-11-01"},{"lineNumber":57,"author":{"gitId":"jonyeokj"},"content":"        commandHistory.add(commandText);","lastModifiedDate":"2023-11-01"},{"lineNumber":58,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":59,"author":{"gitId":"jonyeokj"},"content":"        currentHistoryPointer \u003d commandHistory.size();","lastModifiedDate":"2023-11-01"},{"lineNumber":60,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-02-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            commandExecutor.execute(commandText);","lastModifiedDate":"2020-12-04"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2017-03-11"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            setStyleToIndicateCommandFailure();","lastModifiedDate":"2017-02-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-14"},{"lineNumber":66,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":67,"author":{"gitId":"jonyeokj"},"content":"        commandTextField.setText(\"\");","lastModifiedDate":"2023-11-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":70,"author":{"gitId":"jonyeokj"},"content":"    /**","lastModifiedDate":"2023-11-01"},{"lineNumber":71,"author":{"gitId":"jonyeokj"},"content":"     * Handles key press events in the command text field.","lastModifiedDate":"2023-11-01"},{"lineNumber":72,"author":{"gitId":"jonyeokj"},"content":"     *","lastModifiedDate":"2023-11-01"},{"lineNumber":73,"author":{"gitId":"jonyeokj"},"content":"     * @param event The key press event.","lastModifiedDate":"2023-11-01"},{"lineNumber":74,"author":{"gitId":"jonyeokj"},"content":"     */","lastModifiedDate":"2023-11-01"},{"lineNumber":75,"author":{"gitId":"jonyeokj"},"content":"    private void handleKeyPress(KeyEvent event) {","lastModifiedDate":"2023-11-01"},{"lineNumber":76,"author":{"gitId":"jonyeokj"},"content":"        switch (event.getCode()) {","lastModifiedDate":"2023-11-01"},{"lineNumber":77,"author":{"gitId":"jonyeokj"},"content":"        case UP:","lastModifiedDate":"2023-11-01"},{"lineNumber":78,"author":{"gitId":"jonyeokj"},"content":"            if (!hasStartedHistoryNavigation) {","lastModifiedDate":"2023-11-01"},{"lineNumber":79,"author":{"gitId":"jonyeokj"},"content":"                initialInput \u003d commandTextField.getText();","lastModifiedDate":"2023-11-01"},{"lineNumber":80,"author":{"gitId":"jonyeokj"},"content":"                hasStartedHistoryNavigation \u003d true;","lastModifiedDate":"2023-11-01"},{"lineNumber":81,"author":{"gitId":"jonyeokj"},"content":"            }","lastModifiedDate":"2023-11-01"},{"lineNumber":82,"author":{"gitId":"jonyeokj"},"content":"            navigateCommandHistory(-1);","lastModifiedDate":"2023-11-01"},{"lineNumber":83,"author":{"gitId":"jonyeokj"},"content":"            event.consume();","lastModifiedDate":"2023-11-01"},{"lineNumber":84,"author":{"gitId":"jonyeokj"},"content":"            break;","lastModifiedDate":"2023-11-01"},{"lineNumber":85,"author":{"gitId":"jonyeokj"},"content":"        case DOWN:","lastModifiedDate":"2023-11-01"},{"lineNumber":86,"author":{"gitId":"jonyeokj"},"content":"            if (!hasStartedHistoryNavigation) {","lastModifiedDate":"2023-11-01"},{"lineNumber":87,"author":{"gitId":"jonyeokj"},"content":"                initialInput \u003d commandTextField.getText();","lastModifiedDate":"2023-11-01"},{"lineNumber":88,"author":{"gitId":"jonyeokj"},"content":"                hasStartedHistoryNavigation \u003d true;","lastModifiedDate":"2023-11-01"},{"lineNumber":89,"author":{"gitId":"jonyeokj"},"content":"            }","lastModifiedDate":"2023-11-01"},{"lineNumber":90,"author":{"gitId":"jonyeokj"},"content":"            navigateCommandHistory(1);","lastModifiedDate":"2023-11-01"},{"lineNumber":91,"author":{"gitId":"jonyeokj"},"content":"            event.consume();","lastModifiedDate":"2023-11-01"},{"lineNumber":92,"author":{"gitId":"jonyeokj"},"content":"            break;","lastModifiedDate":"2023-11-01"},{"lineNumber":93,"author":{"gitId":"jonyeokj"},"content":"        default:","lastModifiedDate":"2023-11-01"},{"lineNumber":94,"author":{"gitId":"jonyeokj"},"content":"            hasStartedHistoryNavigation \u003d false;","lastModifiedDate":"2023-11-01"},{"lineNumber":95,"author":{"gitId":"jonyeokj"},"content":"            break;","lastModifiedDate":"2023-11-01"},{"lineNumber":96,"author":{"gitId":"jonyeokj"},"content":"        }","lastModifiedDate":"2023-11-01"},{"lineNumber":97,"author":{"gitId":"jonyeokj"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":98,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":99,"author":{"gitId":"jonyeokj"},"content":"    /**","lastModifiedDate":"2023-11-01"},{"lineNumber":100,"author":{"gitId":"jonyeokj"},"content":"     * Handles the current History pointer based on text change.","lastModifiedDate":"2023-11-01"},{"lineNumber":101,"author":{"gitId":"jonyeokj"},"content":"     */","lastModifiedDate":"2023-11-01"},{"lineNumber":102,"author":{"gitId":"jonyeokj"},"content":"    private void handleTextChange() {","lastModifiedDate":"2023-11-01"},{"lineNumber":103,"author":{"gitId":"jonyeokj"},"content":"        if (!hasStartedHistoryNavigation) {","lastModifiedDate":"2023-11-01"},{"lineNumber":104,"author":{"gitId":"jonyeokj"},"content":"            currentHistoryPointer \u003d getFilteredHistory().size();","lastModifiedDate":"2023-11-01"},{"lineNumber":105,"author":{"gitId":"jonyeokj"},"content":"        }","lastModifiedDate":"2023-11-01"},{"lineNumber":106,"author":{"gitId":"jonyeokj"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":107,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":108,"author":{"gitId":"jonyeokj"},"content":"    /**","lastModifiedDate":"2023-11-01"},{"lineNumber":109,"author":{"gitId":"jonyeokj"},"content":"     * Navigates through the filtered command history based on the given offset.","lastModifiedDate":"2023-11-01"},{"lineNumber":110,"author":{"gitId":"jonyeokj"},"content":"     *","lastModifiedDate":"2023-11-01"},{"lineNumber":111,"author":{"gitId":"jonyeokj"},"content":"     * @param offset The offset used to navigate the command history.","lastModifiedDate":"2023-11-01"},{"lineNumber":112,"author":{"gitId":"jonyeokj"},"content":"     */","lastModifiedDate":"2023-11-01"},{"lineNumber":113,"author":{"gitId":"jonyeokj"},"content":"    private void navigateCommandHistory(int offset) {","lastModifiedDate":"2023-11-01"},{"lineNumber":114,"author":{"gitId":"jonyeokj"},"content":"        List\u003cString\u003e history \u003d getFilteredHistory();","lastModifiedDate":"2023-11-01"},{"lineNumber":115,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":116,"author":{"gitId":"jonyeokj"},"content":"        if (history.isEmpty()) {","lastModifiedDate":"2023-11-01"},{"lineNumber":117,"author":{"gitId":"jonyeokj"},"content":"            return;","lastModifiedDate":"2023-11-01"},{"lineNumber":118,"author":{"gitId":"jonyeokj"},"content":"        }","lastModifiedDate":"2023-11-01"},{"lineNumber":119,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":120,"author":{"gitId":"jonyeokj"},"content":"        if (!hasStartedHistoryNavigation) {","lastModifiedDate":"2023-11-01"},{"lineNumber":121,"author":{"gitId":"jonyeokj"},"content":"            currentHistoryPointer \u003d history.size();","lastModifiedDate":"2023-11-01"},{"lineNumber":122,"author":{"gitId":"jonyeokj"},"content":"        }","lastModifiedDate":"2023-11-01"},{"lineNumber":123,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":124,"author":{"gitId":"jonyeokj"},"content":"        int newHistoryPointer \u003d currentHistoryPointer + offset;","lastModifiedDate":"2023-11-01"},{"lineNumber":125,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":126,"author":{"gitId":"jonyeokj"},"content":"        if (newHistoryPointer \u003d\u003d history.size()) {","lastModifiedDate":"2023-11-01"},{"lineNumber":127,"author":{"gitId":"jonyeokj"},"content":"            commandTextField.setText(initialInput);","lastModifiedDate":"2023-11-01"},{"lineNumber":128,"author":{"gitId":"jonyeokj"},"content":"        } else if (newHistoryPointer \u003c 0 || newHistoryPointer \u003e history.size()) {","lastModifiedDate":"2023-11-01"},{"lineNumber":129,"author":{"gitId":"jonyeokj"},"content":"            return;","lastModifiedDate":"2023-11-01"},{"lineNumber":130,"author":{"gitId":"jonyeokj"},"content":"        }","lastModifiedDate":"2023-11-01"},{"lineNumber":131,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":132,"author":{"gitId":"jonyeokj"},"content":"        currentHistoryPointer \u003d newHistoryPointer;","lastModifiedDate":"2023-11-01"},{"lineNumber":133,"author":{"gitId":"jonyeokj"},"content":"        if (newHistoryPointer \u003d\u003d history.size()) {","lastModifiedDate":"2023-11-01"},{"lineNumber":134,"author":{"gitId":"jonyeokj"},"content":"            commandTextField.setText(initialInput);","lastModifiedDate":"2023-11-01"},{"lineNumber":135,"author":{"gitId":"jonyeokj"},"content":"        } else {","lastModifiedDate":"2023-11-01"},{"lineNumber":136,"author":{"gitId":"jonyeokj"},"content":"            commandTextField.setText(history.get(currentHistoryPointer));","lastModifiedDate":"2023-11-01"},{"lineNumber":137,"author":{"gitId":"jonyeokj"},"content":"        }","lastModifiedDate":"2023-11-01"},{"lineNumber":138,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":139,"author":{"gitId":"jonyeokj"},"content":"        commandTextField.positionCaret(commandTextField.getText().length());","lastModifiedDate":"2023-11-01"},{"lineNumber":140,"author":{"gitId":"jonyeokj"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":141,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":142,"author":{"gitId":"jonyeokj"},"content":"    /**","lastModifiedDate":"2023-11-01"},{"lineNumber":143,"author":{"gitId":"jonyeokj"},"content":"     * Returns a filtered list of command history based on the current input.","lastModifiedDate":"2023-11-01"},{"lineNumber":144,"author":{"gitId":"jonyeokj"},"content":"     *","lastModifiedDate":"2023-11-01"},{"lineNumber":145,"author":{"gitId":"jonyeokj"},"content":"     * @return Filtered list of command history.","lastModifiedDate":"2023-11-01"},{"lineNumber":146,"author":{"gitId":"jonyeokj"},"content":"     */","lastModifiedDate":"2023-11-01"},{"lineNumber":147,"author":{"gitId":"jonyeokj"},"content":"    private List\u003cString\u003e getFilteredHistory() {","lastModifiedDate":"2023-11-01"},{"lineNumber":148,"author":{"gitId":"jonyeokj"},"content":"        // If navigation has started, filter history based on initial input","lastModifiedDate":"2023-11-01"},{"lineNumber":149,"author":{"gitId":"jonyeokj"},"content":"        if (hasStartedHistoryNavigation) {","lastModifiedDate":"2023-11-01"},{"lineNumber":150,"author":{"gitId":"jonyeokj"},"content":"            return commandHistory.stream()","lastModifiedDate":"2023-11-01"},{"lineNumber":151,"author":{"gitId":"jonyeokj"},"content":"                    .filter(command -\u003e command.startsWith(initialInput))","lastModifiedDate":"2023-11-01"},{"lineNumber":152,"author":{"gitId":"jonyeokj"},"content":"                    .collect(Collectors.toList());","lastModifiedDate":"2023-11-01"},{"lineNumber":153,"author":{"gitId":"jonyeokj"},"content":"        }","lastModifiedDate":"2023-11-01"},{"lineNumber":154,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":155,"author":{"gitId":"jonyeokj"},"content":"        // If text field is empty, return full command history","lastModifiedDate":"2023-11-01"},{"lineNumber":156,"author":{"gitId":"jonyeokj"},"content":"        if (commandTextField.getText().isEmpty()) {","lastModifiedDate":"2023-11-01"},{"lineNumber":157,"author":{"gitId":"jonyeokj"},"content":"            return new ArrayList\u003c\u003e(commandHistory);","lastModifiedDate":"2023-11-01"},{"lineNumber":158,"author":{"gitId":"jonyeokj"},"content":"        }","lastModifiedDate":"2023-11-01"},{"lineNumber":159,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":160,"author":{"gitId":"jonyeokj"},"content":"        // Otherwise, filter history based on text field input","lastModifiedDate":"2023-11-01"},{"lineNumber":161,"author":{"gitId":"jonyeokj"},"content":"        return commandHistory.stream()","lastModifiedDate":"2023-11-01"},{"lineNumber":162,"author":{"gitId":"jonyeokj"},"content":"                .filter(command -\u003e command.startsWith(commandTextField.getText()))","lastModifiedDate":"2023-11-01"},{"lineNumber":163,"author":{"gitId":"jonyeokj"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2023-11-01"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-28"},{"lineNumber":167,"author":{"gitId":"-"},"content":"     * Sets the command box style to use the default style.","lastModifiedDate":"2017-06-28"},{"lineNumber":168,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-28"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    private void setStyleToDefault() {","lastModifiedDate":"2017-06-28"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        commandTextField.getStyleClass().remove(ERROR_STYLE_CLASS);","lastModifiedDate":"2017-02-05"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-28"},{"lineNumber":174,"author":{"gitId":"-"},"content":"     * Sets the command box style to indicate a failed command.","lastModifiedDate":"2017-02-05"},{"lineNumber":175,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-28"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    private void setStyleToIndicateCommandFailure() {","lastModifiedDate":"2017-02-05"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        ObservableList\u003cString\u003e styleClass \u003d commandTextField.getStyleClass();","lastModifiedDate":"2017-03-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        if (styleClass.contains(ERROR_STYLE_CLASS)) {","lastModifiedDate":"2017-03-08"},{"lineNumber":180,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2017-03-08"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        styleClass.add(ERROR_STYLE_CLASS);","lastModifiedDate":"2017-03-08"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-14"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":187,"author":{"gitId":"-"},"content":"     * Represents a function that can execute commands.","lastModifiedDate":"2018-12-09"},{"lineNumber":188,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    @FunctionalInterface","lastModifiedDate":"2018-12-09"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    public interface CommandExecutor {","lastModifiedDate":"2018-12-09"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-12-09"},{"lineNumber":192,"author":{"gitId":"-"},"content":"         * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":193,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2018-12-09"},{"lineNumber":194,"author":{"gitId":"-"},"content":"         * @see seedu.address.logic.Logic#execute(String)","lastModifiedDate":"2018-12-09"},{"lineNumber":195,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-12-09"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":198,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"}],"authorContributionMap":{"jonyeokj":119,"-":79}},{"path":"src/main/java/seedu/address/ui/ContactCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2016-09-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":7,"author":{"gitId":"jacobcuison"},"content":"import seedu.address.model.contact.Contact;","lastModifiedDate":"2023-10-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":10,"author":{"gitId":"jacobcuison"},"content":" * An UI component that displays information of a {@code Contact}.","lastModifiedDate":"2023-10-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":12,"author":{"gitId":"jacobcuison"},"content":"public class ContactCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-10-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":14,"author":{"gitId":"jacobcuison"},"content":"    private static final String FXML \u003d \"ContactListCard.fxml\";","lastModifiedDate":"2023-10-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2017-03-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2017-03-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2017-03-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":24,"author":{"gitId":"jacobcuison"},"content":"    public final Contact contact;","lastModifiedDate":"2023-10-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":27,"author":{"gitId":"jonyeokj"},"content":"    private HBox contactCardPane;","lastModifiedDate":"2023-10-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private Label name;","lastModifiedDate":"2016-09-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Label id;","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":35,"author":{"gitId":"jacobcuison"},"content":"     * Creates a {@code ContactCode} with the given {@code Contact} and index to display.","lastModifiedDate":"2023-10-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":37,"author":{"gitId":"jacobcuison"},"content":"    public ContactCard(Contact contact, int displayedIndex) {","lastModifiedDate":"2023-10-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":39,"author":{"gitId":"jacobcuison"},"content":"        this.contact \u003d contact;","lastModifiedDate":"2023-10-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"jacobcuison"},"content":"        name.setText(contact.getName().fullName);","lastModifiedDate":"2023-10-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"jonyeokj":1,"jacobcuison":10,"-":32}},{"path":"src/main/java/seedu/address/ui/ContactDetailPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jonyeokj"},"content":"package seedu.address.ui;","lastModifiedDate":"2023-10-19"},{"lineNumber":2,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":3,"author":{"gitId":"jonyeokj"},"content":"import java.util.Comparator;","lastModifiedDate":"2023-10-19"},{"lineNumber":4,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":5,"author":{"gitId":"jonyeokj"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-10-19"},{"lineNumber":6,"author":{"gitId":"jonyeokj"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-10-19"},{"lineNumber":7,"author":{"gitId":"jonyeokj"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2023-10-19"},{"lineNumber":8,"author":{"gitId":"jonyeokj"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-10-19"},{"lineNumber":9,"author":{"gitId":"jonyeokj"},"content":"import seedu.address.model.contact.Contact;","lastModifiedDate":"2023-10-19"},{"lineNumber":10,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":11,"author":{"gitId":"jonyeokj"},"content":"/**","lastModifiedDate":"2023-10-19"},{"lineNumber":12,"author":{"gitId":"jonyeokj"},"content":" * A UI component that displays the details of a {@code Contact}.","lastModifiedDate":"2023-10-19"},{"lineNumber":13,"author":{"gitId":"jonyeokj"},"content":" */","lastModifiedDate":"2023-10-19"},{"lineNumber":14,"author":{"gitId":"jonyeokj"},"content":"public class ContactDetailPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-10-19"},{"lineNumber":15,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":16,"author":{"gitId":"jonyeokj"},"content":"    private static final String FXML \u003d \"ContactDetailPanel.fxml\";","lastModifiedDate":"2023-10-19"},{"lineNumber":17,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":18,"author":{"gitId":"jonyeokj"},"content":"    @FXML","lastModifiedDate":"2023-10-19"},{"lineNumber":19,"author":{"gitId":"jonyeokj"},"content":"    private Label name;","lastModifiedDate":"2023-10-19"},{"lineNumber":20,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":21,"author":{"gitId":"jonyeokj"},"content":"    @FXML","lastModifiedDate":"2023-10-19"},{"lineNumber":22,"author":{"gitId":"jonyeokj"},"content":"    private Label phone;","lastModifiedDate":"2023-10-19"},{"lineNumber":23,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":24,"author":{"gitId":"jonyeokj"},"content":"    @FXML","lastModifiedDate":"2023-10-19"},{"lineNumber":25,"author":{"gitId":"jonyeokj"},"content":"    private Label address;","lastModifiedDate":"2023-10-19"},{"lineNumber":26,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":27,"author":{"gitId":"jonyeokj"},"content":"    @FXML","lastModifiedDate":"2023-10-19"},{"lineNumber":28,"author":{"gitId":"jonyeokj"},"content":"    private Label email;","lastModifiedDate":"2023-10-19"},{"lineNumber":29,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":30,"author":{"gitId":"jonyeokj"},"content":"    @FXML","lastModifiedDate":"2023-10-19"},{"lineNumber":31,"author":{"gitId":"jonyeokj"},"content":"    private FlowPane tags;","lastModifiedDate":"2023-10-19"},{"lineNumber":32,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":33,"author":{"gitId":"jonyeokj"},"content":"    public ContactDetailPanel() {","lastModifiedDate":"2023-10-19"},{"lineNumber":34,"author":{"gitId":"jonyeokj"},"content":"        super(FXML);","lastModifiedDate":"2023-10-19"},{"lineNumber":35,"author":{"gitId":"jonyeokj"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":36,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":37,"author":{"gitId":"jonyeokj"},"content":"    public void setContact(Contact contact) {","lastModifiedDate":"2023-10-19"},{"lineNumber":38,"author":{"gitId":"jonyeokj"},"content":"        name.setText(contact.getName().toString());","lastModifiedDate":"2023-10-19"},{"lineNumber":39,"author":{"gitId":"jonyeokj"},"content":"        phone.setText(contact.getPhone().toString());","lastModifiedDate":"2023-10-19"},{"lineNumber":40,"author":{"gitId":"jonyeokj"},"content":"        address.setText(contact.getAddress().toString());","lastModifiedDate":"2023-10-19"},{"lineNumber":41,"author":{"gitId":"jonyeokj"},"content":"        email.setText(contact.getEmail().toString());","lastModifiedDate":"2023-10-19"},{"lineNumber":42,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":43,"author":{"gitId":"jonyeokj"},"content":"        tags.getChildren().clear();","lastModifiedDate":"2023-10-19"},{"lineNumber":44,"author":{"gitId":"jonyeokj"},"content":"        contact.getTags().stream()","lastModifiedDate":"2023-10-19"},{"lineNumber":45,"author":{"gitId":"jonyeokj"},"content":"                .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2023-10-19"},{"lineNumber":46,"author":{"gitId":"jonyeokj"},"content":"                .forEach(tag -\u003e tags.getChildren().add(new Label(tag.tagName)));","lastModifiedDate":"2023-10-19"},{"lineNumber":47,"author":{"gitId":"jonyeokj"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":48,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":49,"author":{"gitId":"jonyeokj"},"content":"}","lastModifiedDate":"2023-10-19"}],"authorContributionMap":{"jonyeokj":49}},{"path":"src/main/java/seedu/address/ui/ContactListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-08-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2016-08-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"jacobcuison"},"content":"import seedu.address.model.contact.Contact;","lastModifiedDate":"2023-10-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"jacobcuison"},"content":" * Panel containing the list of contacts.","lastModifiedDate":"2023-10-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"jacobcuison"},"content":"public class ContactListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-10-03"},{"lineNumber":17,"author":{"gitId":"jacobcuison"},"content":"    private static final String FXML \u003d \"ContactListPanel.fxml\";","lastModifiedDate":"2023-10-03"},{"lineNumber":18,"author":{"gitId":"jacobcuison"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(ContactListPanel.class);","lastModifiedDate":"2023-10-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"jacobcuison"},"content":"    private ListView\u003cContact\u003e contactListView;","lastModifiedDate":"2023-10-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":24,"author":{"gitId":"jacobcuison"},"content":"     * Creates a {@code ContactListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2023-10-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"jacobcuison"},"content":"    public ContactListPanel(ObservableList\u003cContact\u003e contactList) {","lastModifiedDate":"2023-10-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":28,"author":{"gitId":"jacobcuison"},"content":"        contactListView.setItems(contactList);","lastModifiedDate":"2023-10-03"},{"lineNumber":29,"author":{"gitId":"jacobcuison"},"content":"        contactListView.setCellFactory(listView -\u003e new ContactListViewCell());","lastModifiedDate":"2023-10-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":33,"author":{"gitId":"jacobcuison"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Contact} using a {@code ContactCard}.","lastModifiedDate":"2023-10-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":35,"author":{"gitId":"jacobcuison"},"content":"    class ContactListViewCell extends ListCell\u003cContact\u003e {","lastModifiedDate":"2023-10-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"jacobcuison"},"content":"        protected void updateItem(Contact contact, boolean empty) {","lastModifiedDate":"2023-10-03"},{"lineNumber":38,"author":{"gitId":"jacobcuison"},"content":"            super.updateItem(contact, empty);","lastModifiedDate":"2023-10-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"jacobcuison"},"content":"            if (empty || contact \u003d\u003d null) {","lastModifiedDate":"2023-10-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                setGraphic(null);","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                setText(null);","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"jacobcuison"},"content":"                setGraphic(new ContactCard(contact, getIndex() + 1).getRoot());","lastModifiedDate":"2023-10-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"jacobcuison":16,"-":33}},{"path":"src/main/java/seedu/address/ui/HelpWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2019-08-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2019-08-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.input.Clipboard;","lastModifiedDate":"2019-08-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.ClipboardContent;","lastModifiedDate":"2019-08-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Controller for a help page","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class HelpWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-12-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"chiayunrong"},"content":"    public static final String USERGUIDE_URL \u003d \"https://ay2324s1-cs2103-w14-2.github.io/tp/UserGuide.html\";","lastModifiedDate":"2023-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String HELP_MESSAGE \u003d \"Refer to the user guide: \" + USERGUIDE_URL;","lastModifiedDate":"2019-08-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(HelpWindow.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"HelpWindow.fxml\";","lastModifiedDate":"2016-09-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Button copyButton;","lastModifiedDate":"2019-08-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Label helpMessage;","lastModifiedDate":"2019-08-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-12-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @param root Stage to use as the root of the HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public HelpWindow(Stage root) {","lastModifiedDate":"2017-12-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        super(FXML, root);","lastModifiedDate":"2017-12-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        helpMessage.setText(HELP_MESSAGE);","lastModifiedDate":"2019-08-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public HelpWindow() {","lastModifiedDate":"2017-12-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this(new Stage());","lastModifiedDate":"2017-12-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Shows the help window.","lastModifiedDate":"2017-08-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * @throws IllegalStateException","lastModifiedDate":"2017-08-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     *     \u003cul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     *             if this method is called on a thread other than the JavaFX Application Thread.","lastModifiedDate":"2017-08-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     *             if this method is called during animation or layout processing.","lastModifiedDate":"2017-08-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     *             if this method is called on the primary stage.","lastModifiedDate":"2017-08-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     *             if {@code dialogStage} is already showing.","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     *     \u003c/ul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void show() {","lastModifiedDate":"2016-08-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        logger.fine(\"Showing help page about the application.\");","lastModifiedDate":"2016-12-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        getRoot().show();","lastModifiedDate":"2018-02-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2019-08-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Returns true if the help window is currently being shown.","lastModifiedDate":"2018-03-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public boolean isShowing() {","lastModifiedDate":"2018-03-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2018-03-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Hides the help window.","lastModifiedDate":"2018-12-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void hide() {","lastModifiedDate":"2018-12-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        getRoot().hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Focuses on the help window.","lastModifiedDate":"2018-03-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void focus() {","lastModifiedDate":"2018-03-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        getRoot().requestFocus();","lastModifiedDate":"2018-03-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-08-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Copies the URL to the user guide to the clipboard.","lastModifiedDate":"2019-08-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-08-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void copyUrl() {","lastModifiedDate":"2019-08-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        final Clipboard clipboard \u003d Clipboard.getSystemClipboard();","lastModifiedDate":"2019-08-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        final ClipboardContent url \u003d new ClipboardContent();","lastModifiedDate":"2019-08-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        url.putString(USERGUIDE_URL);","lastModifiedDate":"2019-08-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        clipboard.setContent(url);","lastModifiedDate":"2019-08-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-08-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"chiayunrong":1,"-":101}},{"path":"src/main/java/seedu/address/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-06-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2016-08-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"jonyeokj"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-10-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2016-09-28"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2017-06-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"jonyeokj"},"content":"import seedu.address.model.contact.Contact;","lastModifiedDate":"2023-10-19"},{"lineNumber":21,"author":{"gitId":"jonyeokj"},"content":"import seedu.address.model.meeting.Meeting;","lastModifiedDate":"2023-10-19"},{"lineNumber":22,"author":{"gitId":"jonyeokj"},"content":"import seedu.address.ui.AppState.ListType;","lastModifiedDate":"2023-11-02"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2016-08-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-11-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2016-08-18"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2018-08-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Stage primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2016-08-18"},{"lineNumber":38,"author":{"gitId":"jacobcuison"},"content":"    private ContactListPanel contactListPanel;","lastModifiedDate":"2023-10-03"},{"lineNumber":39,"author":{"gitId":"jonyeokj"},"content":"    private MeetingListPanel meetingListPanel;","lastModifiedDate":"2023-10-11"},{"lineNumber":40,"author":{"gitId":"jonyeokj"},"content":"    private ContactDetailPanel contactDetailPanel;","lastModifiedDate":"2023-10-19"},{"lineNumber":41,"author":{"gitId":"jonyeokj"},"content":"    private MeetingDetailPanel meetingDetailPanel;","lastModifiedDate":"2023-10-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private HelpWindow helpWindow;","lastModifiedDate":"2018-03-15"},{"lineNumber":44,"author":{"gitId":"chiayunrong"},"content":"    private NoteDisplay noteDisplay;","lastModifiedDate":"2023-10-16"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2016-08-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"jonyeokj"},"content":"    private VBox contactListPanelPlaceholder;","lastModifiedDate":"2023-10-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"jonyeokj"},"content":"    @FXML","lastModifiedDate":"2023-10-11"},{"lineNumber":56,"author":{"gitId":"jonyeokj"},"content":"    private VBox meetingListPanelPlaceholder;","lastModifiedDate":"2023-10-18"},{"lineNumber":57,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":58,"author":{"gitId":"jonyeokj"},"content":"    @FXML","lastModifiedDate":"2023-10-19"},{"lineNumber":59,"author":{"gitId":"jonyeokj"},"content":"    private VBox contactDetailPanelPlaceholder;","lastModifiedDate":"2023-10-19"},{"lineNumber":60,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":61,"author":{"gitId":"jonyeokj"},"content":"    @FXML","lastModifiedDate":"2023-10-19"},{"lineNumber":62,"author":{"gitId":"jonyeokj"},"content":"    private VBox meetingDetailPanelPlaceholder;","lastModifiedDate":"2023-10-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    private StackPane resultDisplayPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":68,"author":{"gitId":"chiayunrong"},"content":"    private StackPane noteDisplayPlaceholder;","lastModifiedDate":"2023-10-16"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public MainWindow(Stage primaryStage, Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2016-09-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2016-09-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        setAccelerators();","lastModifiedDate":"2016-09-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2018-03-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2016-12-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2016-12-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    private void setAccelerators() {","lastModifiedDate":"2016-09-21"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2016-12-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2016-12-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","lastModifiedDate":"2016-12-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2016-12-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2016-12-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-12-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2016-12-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","lastModifiedDate":"2016-12-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"         * is fixed in later version of SDK.","lastModifiedDate":"2016-12-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2016-12-18"},{"lineNumber":109,"author":{"gitId":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2016-12-18"},{"lineNumber":110,"author":{"gitId":"-"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will","lastModifiedDate":"2016-12-18"},{"lineNumber":111,"author":{"gitId":"-"},"content":"         * not work when the focus is in them because the key event is consumed by","lastModifiedDate":"2016-12-18"},{"lineNumber":112,"author":{"gitId":"-"},"content":"         * the TextInputControl(s).","lastModifiedDate":"2016-12-18"},{"lineNumber":113,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":114,"author":{"gitId":"-"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2016-12-18"},{"lineNumber":115,"author":{"gitId":"-"},"content":"         * help window purposely so to support accelerators even when focus is","lastModifiedDate":"2016-12-18"},{"lineNumber":116,"author":{"gitId":"-"},"content":"         * in CommandBox or ResultDisplay.","lastModifiedDate":"2016-12-18"},{"lineNumber":117,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-18"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2016-12-18"},{"lineNumber":120,"author":{"gitId":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2016-12-18"},{"lineNumber":121,"author":{"gitId":"-"},"content":"                event.consume();","lastModifiedDate":"2016-12-18"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-12-18"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2016-12-18"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2017-08-16"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","lastModifiedDate":"2016-09-21"},{"lineNumber":130,"author":{"gitId":"jacobcuison"},"content":"        contactListPanel \u003d new ContactListPanel(logic.getFilteredContactList());","lastModifiedDate":"2023-10-03"},{"lineNumber":131,"author":{"gitId":"jonyeokj"},"content":"        contactListPanelPlaceholder.getChildren().addAll(contactListPanel.getRoot());","lastModifiedDate":"2023-10-18"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":133,"author":{"gitId":"jonyeokj"},"content":"        meetingListPanel \u003d new MeetingListPanel(logic.getFilteredMeetingList());","lastModifiedDate":"2023-10-18"},{"lineNumber":134,"author":{"gitId":"jonyeokj"},"content":"        meetingListPanelPlaceholder.getChildren().add(meetingListPanel.getRoot());","lastModifiedDate":"2023-10-18"},{"lineNumber":135,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":136,"author":{"gitId":"jonyeokj"},"content":"        contactDetailPanel \u003d new ContactDetailPanel();","lastModifiedDate":"2023-10-19"},{"lineNumber":137,"author":{"gitId":"jonyeokj"},"content":"        contactDetailPanelPlaceholder.getChildren().add(contactDetailPanel.getRoot());","lastModifiedDate":"2023-10-19"},{"lineNumber":138,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":139,"author":{"gitId":"jonyeokj"},"content":"        meetingDetailPanel \u003d new MeetingDetailPanel();","lastModifiedDate":"2023-10-19"},{"lineNumber":140,"author":{"gitId":"jonyeokj"},"content":"        meetingDetailPanelPlaceholder.getChildren().add(meetingDetailPanel.getRoot());","lastModifiedDate":"2023-10-19"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2018-12-09"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":145,"author":{"gitId":"chiayunrong"},"content":"        noteDisplay \u003d new NoteDisplay();","lastModifiedDate":"2023-10-16"},{"lineNumber":146,"author":{"gitId":"chiayunrong"},"content":"        noteDisplayPlaceholder.getChildren().add(noteDisplay.getRoot());","lastModifiedDate":"2023-10-16"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeCommand);","lastModifiedDate":"2019-01-25"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":153,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2018-11-27"},{"lineNumber":154,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2018-11-27"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2018-11-27"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2018-11-27"},{"lineNumber":159,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2018-11-27"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2018-11-27"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":165,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2018-03-15"},{"lineNumber":166,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    public void handleHelp() {","lastModifiedDate":"2016-08-31"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2018-03-15"},{"lineNumber":170,"author":{"gitId":"-"},"content":"            helpWindow.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2018-03-15"},{"lineNumber":172,"author":{"gitId":"-"},"content":"            helpWindow.focus();","lastModifiedDate":"2018-03-15"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-15"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    void show() {","lastModifiedDate":"2016-10-15"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        primaryStage.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":181,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2016-08-18"},{"lineNumber":182,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    private void handleExit() {","lastModifiedDate":"2016-08-18"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2018-12-08"},{"lineNumber":186,"author":{"gitId":"-"},"content":"                (int) primaryStage.getX(), (int) primaryStage.getY());","lastModifiedDate":"2018-12-08"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2018-12-08"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        helpWindow.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        primaryStage.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":192,"author":{"gitId":"jonyeokj"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":193,"author":{"gitId":"jonyeokj"},"content":"     * Displays the contact list and hides the meeting list.","lastModifiedDate":"2023-10-18"},{"lineNumber":194,"author":{"gitId":"jonyeokj"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":195,"author":{"gitId":"jonyeokj"},"content":"    public void showContactList() {","lastModifiedDate":"2023-10-18"},{"lineNumber":196,"author":{"gitId":"jonyeokj"},"content":"        contactListPanelPlaceholder.setVisible(true);","lastModifiedDate":"2023-10-18"},{"lineNumber":197,"author":{"gitId":"jonyeokj"},"content":"        meetingListPanelPlaceholder.setVisible(false);","lastModifiedDate":"2023-10-18"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-25"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":200,"author":{"gitId":"jonyeokj"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":201,"author":{"gitId":"jonyeokj"},"content":"     * Displays the meeting list and hides the contact list.","lastModifiedDate":"2023-10-18"},{"lineNumber":202,"author":{"gitId":"jonyeokj"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":203,"author":{"gitId":"jonyeokj"},"content":"    public void showMeetingList() {","lastModifiedDate":"2023-10-18"},{"lineNumber":204,"author":{"gitId":"jonyeokj"},"content":"        contactListPanelPlaceholder.setVisible(false);","lastModifiedDate":"2023-10-18"},{"lineNumber":205,"author":{"gitId":"jonyeokj"},"content":"        meetingListPanelPlaceholder.setVisible(true);","lastModifiedDate":"2023-10-18"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":208,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":209,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":210,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-09"},{"lineNumber":211,"author":{"gitId":"-"},"content":"     * @see seedu.address.logic.Logic#execute(String)","lastModifiedDate":"2018-12-09"},{"lineNumber":212,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    private CommandResult executeCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2018-12-09"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":215,"author":{"gitId":"-"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":216,"author":{"gitId":"-"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":217,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":219,"author":{"gitId":"-"},"content":"            if (commandResult.isShowHelp()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":220,"author":{"gitId":"-"},"content":"                handleHelp();","lastModifiedDate":"2018-12-09"},{"lineNumber":221,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":223,"author":{"gitId":"-"},"content":"            if (commandResult.isExit()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":224,"author":{"gitId":"-"},"content":"                handleExit();","lastModifiedDate":"2018-12-09"},{"lineNumber":225,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":227,"author":{"gitId":"jonyeokj"},"content":"            AppState appState \u003d AppState.getInstance();","lastModifiedDate":"2023-11-02"},{"lineNumber":228,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":229,"author":{"gitId":"jonyeokj"},"content":"            ListType listType \u003d appState.getListType();","lastModifiedDate":"2023-11-02"},{"lineNumber":230,"author":{"gitId":"jonyeokj"},"content":"            if (listType \u003d\u003d ListType.CONTACTS) {","lastModifiedDate":"2023-11-02"},{"lineNumber":231,"author":{"gitId":"jonyeokj"},"content":"                showContactList();","lastModifiedDate":"2023-10-18"},{"lineNumber":232,"author":{"gitId":"jonyeokj"},"content":"            } else if (listType \u003d\u003d ListType.MEETINGS) {","lastModifiedDate":"2023-11-02"},{"lineNumber":233,"author":{"gitId":"jonyeokj"},"content":"                showMeetingList();","lastModifiedDate":"2023-10-18"},{"lineNumber":234,"author":{"gitId":"jonyeokj"},"content":"            }","lastModifiedDate":"2023-10-18"},{"lineNumber":235,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":236,"author":{"gitId":"jonyeokj"},"content":"            if (appState.isContactPresent()) {","lastModifiedDate":"2023-11-02"},{"lineNumber":237,"author":{"gitId":"jonyeokj"},"content":"                Contact displayedContact \u003d appState.getContact();","lastModifiedDate":"2023-11-02"},{"lineNumber":238,"author":{"gitId":"jonyeokj"},"content":"                contactDetailPanel.setContact(displayedContact);","lastModifiedDate":"2023-10-19"},{"lineNumber":239,"author":{"gitId":"jonyeokj"},"content":"                noteDisplay.setNoteToDisplay(displayedContact.getNoteString());","lastModifiedDate":"2023-11-02"},{"lineNumber":240,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":241,"author":{"gitId":"jonyeokj"},"content":"                contactDetailPanelPlaceholder.setVisible(true);","lastModifiedDate":"2023-10-19"},{"lineNumber":242,"author":{"gitId":"jonyeokj"},"content":"                contactDetailPanelPlaceholder.setManaged(true);","lastModifiedDate":"2023-10-19"},{"lineNumber":243,"author":{"gitId":"jonyeokj"},"content":"                meetingDetailPanelPlaceholder.setVisible(false);","lastModifiedDate":"2023-10-19"},{"lineNumber":244,"author":{"gitId":"jonyeokj"},"content":"                meetingDetailPanelPlaceholder.setManaged(false);","lastModifiedDate":"2023-10-19"},{"lineNumber":245,"author":{"gitId":"jacobcuison"},"content":"                noteDisplayPlaceholder.setVisible(true);","lastModifiedDate":"2023-11-02"},{"lineNumber":246,"author":{"gitId":"jacobcuison"},"content":"                noteDisplayPlaceholder.setManaged(true);","lastModifiedDate":"2023-11-02"},{"lineNumber":247,"author":{"gitId":"jonyeokj"},"content":"            } else if (appState.isMeetingPresent()) {","lastModifiedDate":"2023-11-02"},{"lineNumber":248,"author":{"gitId":"jonyeokj"},"content":"                Meeting displayedMeeting \u003d appState.getMeeting();","lastModifiedDate":"2023-11-02"},{"lineNumber":249,"author":{"gitId":"jonyeokj"},"content":"                meetingDetailPanel.setMeeting(displayedMeeting);","lastModifiedDate":"2023-10-19"},{"lineNumber":250,"author":{"gitId":"jonyeokj"},"content":"                noteDisplay.setNoteToDisplay(displayedMeeting.getNoteString());","lastModifiedDate":"2023-11-02"},{"lineNumber":251,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":252,"author":{"gitId":"jonyeokj"},"content":"                contactDetailPanelPlaceholder.setVisible(false);","lastModifiedDate":"2023-10-19"},{"lineNumber":253,"author":{"gitId":"jonyeokj"},"content":"                contactDetailPanelPlaceholder.setManaged(false);","lastModifiedDate":"2023-10-19"},{"lineNumber":254,"author":{"gitId":"jonyeokj"},"content":"                meetingDetailPanelPlaceholder.setVisible(true);","lastModifiedDate":"2023-10-19"},{"lineNumber":255,"author":{"gitId":"jonyeokj"},"content":"                meetingDetailPanelPlaceholder.setManaged(true);","lastModifiedDate":"2023-10-19"},{"lineNumber":256,"author":{"gitId":"jacobcuison"},"content":"                noteDisplayPlaceholder.setVisible(true);","lastModifiedDate":"2023-11-02"},{"lineNumber":257,"author":{"gitId":"jacobcuison"},"content":"                noteDisplayPlaceholder.setManaged(true);","lastModifiedDate":"2023-11-02"},{"lineNumber":258,"author":{"gitId":"jonyeokj"},"content":"            } else {","lastModifiedDate":"2023-11-02"},{"lineNumber":259,"author":{"gitId":"jonyeokj"},"content":"                contactDetailPanelPlaceholder.setVisible(false);","lastModifiedDate":"2023-11-02"},{"lineNumber":260,"author":{"gitId":"jonyeokj"},"content":"                contactDetailPanelPlaceholder.setManaged(true);","lastModifiedDate":"2023-11-02"},{"lineNumber":261,"author":{"gitId":"jonyeokj"},"content":"                meetingDetailPanelPlaceholder.setVisible(false);","lastModifiedDate":"2023-11-02"},{"lineNumber":262,"author":{"gitId":"jonyeokj"},"content":"                meetingDetailPanelPlaceholder.setManaged(false);","lastModifiedDate":"2023-11-02"},{"lineNumber":263,"author":{"gitId":"jacobcuison"},"content":"                noteDisplayPlaceholder.setVisible(false);","lastModifiedDate":"2023-11-02"},{"lineNumber":264,"author":{"gitId":"jacobcuison"},"content":"                noteDisplayPlaceholder.setManaged(false);","lastModifiedDate":"2023-11-02"},{"lineNumber":265,"author":{"gitId":"jonyeokj"},"content":"            }","lastModifiedDate":"2023-10-19"},{"lineNumber":266,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":267,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":268,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":269,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2018-12-09"},{"lineNumber":270,"author":{"gitId":"-"},"content":"            logger.info(\"An error occurred while executing command: \" + commandText);","lastModifiedDate":"2023-06-13"},{"lineNumber":271,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2018-12-09"},{"lineNumber":272,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2018-12-09"},{"lineNumber":273,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":274,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":275,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":276,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"jonyeokj":73,"jacobcuison":8,"chiayunrong":4,"-":191}},{"path":"src/main/java/seedu/address/ui/MeetingCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jonyeokj"},"content":"package seedu.address.ui;","lastModifiedDate":"2023-10-11"},{"lineNumber":2,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":3,"author":{"gitId":"jonyeokj"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-10-11"},{"lineNumber":4,"author":{"gitId":"jonyeokj"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-10-11"},{"lineNumber":5,"author":{"gitId":"jonyeokj"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-10-11"},{"lineNumber":6,"author":{"gitId":"jonyeokj"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-10-11"},{"lineNumber":7,"author":{"gitId":"jonyeokj"},"content":"import seedu.address.model.meeting.Meeting;","lastModifiedDate":"2023-10-11"},{"lineNumber":8,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":9,"author":{"gitId":"jonyeokj"},"content":"/**","lastModifiedDate":"2023-10-11"},{"lineNumber":10,"author":{"gitId":"jonyeokj"},"content":" * An UI component that displays information of a {@code Meeting}.","lastModifiedDate":"2023-10-11"},{"lineNumber":11,"author":{"gitId":"jonyeokj"},"content":" */","lastModifiedDate":"2023-10-11"},{"lineNumber":12,"author":{"gitId":"jonyeokj"},"content":"public class MeetingCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-10-11"},{"lineNumber":13,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":14,"author":{"gitId":"jonyeokj"},"content":"    private static final String FXML \u003d \"MeetingListCard.fxml\";","lastModifiedDate":"2023-10-11"},{"lineNumber":15,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":16,"author":{"gitId":"jonyeokj"},"content":"    /**","lastModifiedDate":"2023-10-11"},{"lineNumber":17,"author":{"gitId":"jonyeokj"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2023-10-11"},{"lineNumber":18,"author":{"gitId":"jonyeokj"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2023-10-11"},{"lineNumber":19,"author":{"gitId":"jonyeokj"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2023-10-11"},{"lineNumber":20,"author":{"gitId":"jonyeokj"},"content":"     *","lastModifiedDate":"2023-10-11"},{"lineNumber":21,"author":{"gitId":"jonyeokj"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2023-10-11"},{"lineNumber":22,"author":{"gitId":"jonyeokj"},"content":"     */","lastModifiedDate":"2023-10-11"},{"lineNumber":23,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":24,"author":{"gitId":"jonyeokj"},"content":"    public final Meeting meeting;","lastModifiedDate":"2023-10-11"},{"lineNumber":25,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":26,"author":{"gitId":"jonyeokj"},"content":"    @FXML","lastModifiedDate":"2023-10-11"},{"lineNumber":27,"author":{"gitId":"jonyeokj"},"content":"    private HBox meetingCardPane;","lastModifiedDate":"2023-10-11"},{"lineNumber":28,"author":{"gitId":"jonyeokj"},"content":"    @FXML","lastModifiedDate":"2023-10-11"},{"lineNumber":29,"author":{"gitId":"jonyeokj"},"content":"    private Label title;","lastModifiedDate":"2023-10-11"},{"lineNumber":30,"author":{"gitId":"jonyeokj"},"content":"    @FXML","lastModifiedDate":"2023-10-11"},{"lineNumber":31,"author":{"gitId":"jonyeokj"},"content":"    private Label id;","lastModifiedDate":"2023-10-11"},{"lineNumber":32,"author":{"gitId":"jonyeokj"},"content":"    @FXML","lastModifiedDate":"2023-10-11"},{"lineNumber":33,"author":{"gitId":"jonyeokj"},"content":"    private Label time;","lastModifiedDate":"2023-10-11"},{"lineNumber":34,"author":{"gitId":"jonyeokj"},"content":"    @FXML","lastModifiedDate":"2023-10-11"},{"lineNumber":35,"author":{"gitId":"jonyeokj"},"content":"    private Label place;","lastModifiedDate":"2023-10-11"},{"lineNumber":36,"author":{"gitId":"jonyeokj"},"content":"    @FXML","lastModifiedDate":"2023-10-11"},{"lineNumber":37,"author":{"gitId":"jonyeokj"},"content":"    private Label description;","lastModifiedDate":"2023-10-11"},{"lineNumber":38,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":39,"author":{"gitId":"jonyeokj"},"content":"    /**","lastModifiedDate":"2023-10-11"},{"lineNumber":40,"author":{"gitId":"jonyeokj"},"content":"     * Creates a {@code MeetingCode} with the given {@code Meeting} and index to display.","lastModifiedDate":"2023-10-11"},{"lineNumber":41,"author":{"gitId":"jonyeokj"},"content":"     */","lastModifiedDate":"2023-10-11"},{"lineNumber":42,"author":{"gitId":"jonyeokj"},"content":"    public MeetingCard(Meeting meeting, int displayedIndex) {","lastModifiedDate":"2023-10-11"},{"lineNumber":43,"author":{"gitId":"jonyeokj"},"content":"        super(FXML);","lastModifiedDate":"2023-10-11"},{"lineNumber":44,"author":{"gitId":"jonyeokj"},"content":"        this.meeting \u003d meeting;","lastModifiedDate":"2023-10-11"},{"lineNumber":45,"author":{"gitId":"jonyeokj"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2023-10-11"},{"lineNumber":46,"author":{"gitId":"jonyeokj"},"content":"        title.setText(meeting.getTitle().fullTitle);","lastModifiedDate":"2023-10-11"},{"lineNumber":47,"author":{"gitId":"jonyeokj"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":48,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":49,"author":{"gitId":"jonyeokj"},"content":"}","lastModifiedDate":"2023-10-11"}],"authorContributionMap":{"jonyeokj":49}},{"path":"src/main/java/seedu/address/ui/MeetingDetailPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jonyeokj"},"content":"package seedu.address.ui;","lastModifiedDate":"2023-10-19"},{"lineNumber":2,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":3,"author":{"gitId":"jonyeokj"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-10-19"},{"lineNumber":4,"author":{"gitId":"jonyeokj"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-10-19"},{"lineNumber":5,"author":{"gitId":"jonyeokj"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-10-19"},{"lineNumber":6,"author":{"gitId":"s-peiran"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-25"},{"lineNumber":7,"author":{"gitId":"jonyeokj"},"content":"import seedu.address.model.meeting.Meeting;","lastModifiedDate":"2023-10-19"},{"lineNumber":8,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":9,"author":{"gitId":"jonyeokj"},"content":"/**","lastModifiedDate":"2023-10-19"},{"lineNumber":10,"author":{"gitId":"jonyeokj"},"content":" * A UI component that displays the details of a {@code Meeting}.","lastModifiedDate":"2023-10-19"},{"lineNumber":11,"author":{"gitId":"jonyeokj"},"content":" */","lastModifiedDate":"2023-10-19"},{"lineNumber":12,"author":{"gitId":"jonyeokj"},"content":"public class MeetingDetailPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-10-19"},{"lineNumber":13,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":14,"author":{"gitId":"jonyeokj"},"content":"    private static final String FXML \u003d \"MeetingDetailPanel.fxml\";","lastModifiedDate":"2023-10-19"},{"lineNumber":15,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":16,"author":{"gitId":"jonyeokj"},"content":"    @FXML","lastModifiedDate":"2023-10-19"},{"lineNumber":17,"author":{"gitId":"jonyeokj"},"content":"    private Label title;","lastModifiedDate":"2023-10-19"},{"lineNumber":18,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":19,"author":{"gitId":"jonyeokj"},"content":"    @FXML","lastModifiedDate":"2023-10-19"},{"lineNumber":20,"author":{"gitId":"jonyeokj"},"content":"    private Label time;","lastModifiedDate":"2023-10-19"},{"lineNumber":21,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":22,"author":{"gitId":"jonyeokj"},"content":"    @FXML","lastModifiedDate":"2023-10-19"},{"lineNumber":23,"author":{"gitId":"jonyeokj"},"content":"    private Label place;","lastModifiedDate":"2023-10-19"},{"lineNumber":24,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":25,"author":{"gitId":"jonyeokj"},"content":"    @FXML","lastModifiedDate":"2023-10-19"},{"lineNumber":26,"author":{"gitId":"jonyeokj"},"content":"    private Label description;","lastModifiedDate":"2023-10-19"},{"lineNumber":27,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":28,"author":{"gitId":"s-peiran"},"content":"    @FXML","lastModifiedDate":"2023-10-25"},{"lineNumber":29,"author":{"gitId":"s-peiran"},"content":"    private Label contacts;","lastModifiedDate":"2023-10-25"},{"lineNumber":30,"author":{"gitId":"s-peiran"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":31,"author":{"gitId":"jonyeokj"},"content":"    public MeetingDetailPanel() {","lastModifiedDate":"2023-10-19"},{"lineNumber":32,"author":{"gitId":"jonyeokj"},"content":"        super(FXML);","lastModifiedDate":"2023-10-19"},{"lineNumber":33,"author":{"gitId":"jonyeokj"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":34,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":35,"author":{"gitId":"jonyeokj"},"content":"    public void setMeeting(Meeting meeting) {","lastModifiedDate":"2023-10-19"},{"lineNumber":36,"author":{"gitId":"jonyeokj"},"content":"        title.setText(meeting.getTitle().toString());","lastModifiedDate":"2023-10-19"},{"lineNumber":37,"author":{"gitId":"jonyeokj"},"content":"        time.setText(meeting.getTime().toString());","lastModifiedDate":"2023-10-19"},{"lineNumber":38,"author":{"gitId":"jonyeokj"},"content":"        place.setText(meeting.getPlace().toString());","lastModifiedDate":"2023-10-19"},{"lineNumber":39,"author":{"gitId":"jonyeokj"},"content":"        description.setText(meeting.getDescription().toString());","lastModifiedDate":"2023-10-19"},{"lineNumber":40,"author":{"gitId":"s-peiran"},"content":"        contacts.setText(Messages.formatMeetingContacts(meeting));","lastModifiedDate":"2023-10-25"},{"lineNumber":41,"author":{"gitId":"jonyeokj"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":42,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":43,"author":{"gitId":"jonyeokj"},"content":"}","lastModifiedDate":"2023-10-19"}],"authorContributionMap":{"jonyeokj":38,"s-peiran":5}},{"path":"src/main/java/seedu/address/ui/MeetingListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jonyeokj"},"content":"package seedu.address.ui;","lastModifiedDate":"2023-10-11"},{"lineNumber":2,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":3,"author":{"gitId":"jonyeokj"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-10-11"},{"lineNumber":4,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":5,"author":{"gitId":"jonyeokj"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-10-11"},{"lineNumber":6,"author":{"gitId":"jonyeokj"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-10-11"},{"lineNumber":7,"author":{"gitId":"jonyeokj"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2023-10-11"},{"lineNumber":8,"author":{"gitId":"jonyeokj"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2023-10-11"},{"lineNumber":9,"author":{"gitId":"jonyeokj"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-10-11"},{"lineNumber":10,"author":{"gitId":"jonyeokj"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-10-11"},{"lineNumber":11,"author":{"gitId":"jonyeokj"},"content":"import seedu.address.model.meeting.Meeting;","lastModifiedDate":"2023-10-11"},{"lineNumber":12,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":13,"author":{"gitId":"jonyeokj"},"content":"/**","lastModifiedDate":"2023-10-11"},{"lineNumber":14,"author":{"gitId":"jonyeokj"},"content":" * Panel containing the list of meetings.","lastModifiedDate":"2023-10-11"},{"lineNumber":15,"author":{"gitId":"jonyeokj"},"content":" */","lastModifiedDate":"2023-10-11"},{"lineNumber":16,"author":{"gitId":"jonyeokj"},"content":"public class MeetingListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-10-11"},{"lineNumber":17,"author":{"gitId":"jonyeokj"},"content":"    private static final String FXML \u003d \"MeetingListPanel.fxml\";","lastModifiedDate":"2023-10-11"},{"lineNumber":18,"author":{"gitId":"jonyeokj"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(MeetingListPanel.class);","lastModifiedDate":"2023-10-11"},{"lineNumber":19,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":20,"author":{"gitId":"jonyeokj"},"content":"    @FXML","lastModifiedDate":"2023-10-11"},{"lineNumber":21,"author":{"gitId":"jonyeokj"},"content":"    private ListView\u003cMeeting\u003e meetingListView;","lastModifiedDate":"2023-10-11"},{"lineNumber":22,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":23,"author":{"gitId":"jonyeokj"},"content":"    /**","lastModifiedDate":"2023-10-11"},{"lineNumber":24,"author":{"gitId":"jonyeokj"},"content":"     * Creates a {@code MeetingListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2023-10-11"},{"lineNumber":25,"author":{"gitId":"jonyeokj"},"content":"     */","lastModifiedDate":"2023-10-11"},{"lineNumber":26,"author":{"gitId":"jonyeokj"},"content":"    public MeetingListPanel(ObservableList\u003cMeeting\u003e meetingList) {","lastModifiedDate":"2023-10-12"},{"lineNumber":27,"author":{"gitId":"jonyeokj"},"content":"        super(FXML);","lastModifiedDate":"2023-10-11"},{"lineNumber":28,"author":{"gitId":"jonyeokj"},"content":"        meetingListView.setItems(meetingList);","lastModifiedDate":"2023-10-12"},{"lineNumber":29,"author":{"gitId":"jonyeokj"},"content":"        meetingListView.setCellFactory(listView -\u003e new MeetingListViewCell());","lastModifiedDate":"2023-10-11"},{"lineNumber":30,"author":{"gitId":"jonyeokj"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":31,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":32,"author":{"gitId":"jonyeokj"},"content":"    /**","lastModifiedDate":"2023-10-11"},{"lineNumber":33,"author":{"gitId":"jonyeokj"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Meeting} using a {@code MeetingCard}.","lastModifiedDate":"2023-10-11"},{"lineNumber":34,"author":{"gitId":"jonyeokj"},"content":"     */","lastModifiedDate":"2023-10-11"},{"lineNumber":35,"author":{"gitId":"jonyeokj"},"content":"    class MeetingListViewCell extends ListCell\u003cMeeting\u003e {","lastModifiedDate":"2023-10-11"},{"lineNumber":36,"author":{"gitId":"jonyeokj"},"content":"        @Override","lastModifiedDate":"2023-10-11"},{"lineNumber":37,"author":{"gitId":"jonyeokj"},"content":"        protected void updateItem(Meeting meeting, boolean empty) {","lastModifiedDate":"2023-10-11"},{"lineNumber":38,"author":{"gitId":"jonyeokj"},"content":"            super.updateItem(meeting, empty);","lastModifiedDate":"2023-10-11"},{"lineNumber":39,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":40,"author":{"gitId":"jonyeokj"},"content":"            if (empty || meeting \u003d\u003d null) {","lastModifiedDate":"2023-10-11"},{"lineNumber":41,"author":{"gitId":"jonyeokj"},"content":"                setGraphic(null);","lastModifiedDate":"2023-10-11"},{"lineNumber":42,"author":{"gitId":"jonyeokj"},"content":"                setText(null);","lastModifiedDate":"2023-10-11"},{"lineNumber":43,"author":{"gitId":"jonyeokj"},"content":"            } else {","lastModifiedDate":"2023-10-11"},{"lineNumber":44,"author":{"gitId":"jonyeokj"},"content":"                setGraphic(new MeetingCard(meeting, getIndex() + 1).getRoot());","lastModifiedDate":"2023-10-11"},{"lineNumber":45,"author":{"gitId":"jonyeokj"},"content":"            }","lastModifiedDate":"2023-10-11"},{"lineNumber":46,"author":{"gitId":"jonyeokj"},"content":"        }","lastModifiedDate":"2023-10-11"},{"lineNumber":47,"author":{"gitId":"jonyeokj"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":48,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":49,"author":{"gitId":"jonyeokj"},"content":"}","lastModifiedDate":"2023-10-11"}],"authorContributionMap":{"jonyeokj":49}},{"path":"src/main/java/seedu/address/ui/NoteDisplay.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chiayunrong"},"content":"package seedu.address.ui;","lastModifiedDate":"2023-10-16"},{"lineNumber":2,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":3,"author":{"gitId":"chiayunrong"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-10-16"},{"lineNumber":4,"author":{"gitId":"chiayunrong"},"content":"import javafx.scene.control.TextArea;","lastModifiedDate":"2023-10-16"},{"lineNumber":5,"author":{"gitId":"chiayunrong"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-10-16"},{"lineNumber":6,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":7,"author":{"gitId":"chiayunrong"},"content":"/**","lastModifiedDate":"2023-10-16"},{"lineNumber":8,"author":{"gitId":"jacobcuison"},"content":" * A UI for the note area that is displayed beside the contact/meeting list.","lastModifiedDate":"2023-11-02"},{"lineNumber":9,"author":{"gitId":"chiayunrong"},"content":" */","lastModifiedDate":"2023-10-16"},{"lineNumber":10,"author":{"gitId":"chiayunrong"},"content":"public class NoteDisplay extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-10-16"},{"lineNumber":11,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":12,"author":{"gitId":"chiayunrong"},"content":"    private static final String FXML \u003d \"NoteArea.fxml\";","lastModifiedDate":"2023-10-16"},{"lineNumber":13,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":14,"author":{"gitId":"chiayunrong"},"content":"    @FXML","lastModifiedDate":"2023-10-16"},{"lineNumber":15,"author":{"gitId":"chiayunrong"},"content":"    private TextArea noteDisplay;","lastModifiedDate":"2023-10-16"},{"lineNumber":16,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":17,"author":{"gitId":"chiayunrong"},"content":"    public NoteDisplay() {","lastModifiedDate":"2023-10-16"},{"lineNumber":18,"author":{"gitId":"chiayunrong"},"content":"        super(FXML);","lastModifiedDate":"2023-10-16"},{"lineNumber":19,"author":{"gitId":"chiayunrong"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":20,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":21,"author":{"gitId":"chiayunrong"},"content":"    public void setNoteToDisplay(String noteToDisplay) {","lastModifiedDate":"2023-10-16"},{"lineNumber":22,"author":{"gitId":"chiayunrong"},"content":"        if (noteToDisplay !\u003d null) {","lastModifiedDate":"2023-10-16"},{"lineNumber":23,"author":{"gitId":"chiayunrong"},"content":"            noteDisplay.setText(noteToDisplay);","lastModifiedDate":"2023-10-16"},{"lineNumber":24,"author":{"gitId":"chiayunrong"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":25,"author":{"gitId":"chiayunrong"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":26,"author":{"gitId":"chiayunrong"},"content":"}","lastModifiedDate":"2023-10-16"}],"authorContributionMap":{"jacobcuison":1,"chiayunrong":25}},{"path":"src/main/java/seedu/address/ui/UiManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.application.Platform;","lastModifiedDate":"2016-08-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert;","lastModifiedDate":"2016-08-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert.AlertType;","lastModifiedDate":"2016-08-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.MainApp;","lastModifiedDate":"2016-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The manager of the UI component.","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class UiManager implements Ui {","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String ALERT_DIALOG_PANE_FIELD_ID \u003d \"alertDialogPane\";","lastModifiedDate":"2017-04-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(UiManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":23,"author":{"gitId":"jacobcuison"},"content":"    private static final String ICON_APPLICATION \u003d \"/images/notenote.png\";","lastModifiedDate":"2023-11-02"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private MainWindow mainWindow;","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Creates a {@code UiManager} with the given {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public UiManager(Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-09-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        logger.info(\"Starting UI...\");","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        //Set the application icon.","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        primaryStage.getIcons().add(getImage(ICON_APPLICATION));","lastModifiedDate":"2016-08-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            mainWindow \u003d new MainWindow(primaryStage, logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            mainWindow.show(); //This should be called before creating other UI parts","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            mainWindow.fillInnerParts();","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        } catch (Throwable e) {","lastModifiedDate":"2016-08-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            logger.severe(StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            showFatalErrorDialogAndShutdown(\"Fatal error during initializing\", e);","lastModifiedDate":"2016-08-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2016-08-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    void showAlertDialogAndWait(Alert.AlertType type, String title, String headerText, String contentText) {","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(mainWindow.getPrimaryStage(), type, title, headerText, contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Shows an alert dialog on {@code owner} with the given parameters.","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * This method only returns after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    private static void showAlertDialogAndWait(Stage owner, AlertType type, String title, String headerText,","lastModifiedDate":"2016-09-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                                               String contentText) {","lastModifiedDate":"2016-08-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        final Alert alert \u003d new Alert(type);","lastModifiedDate":"2016-08-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        alert.getDialogPane().getStylesheets().add(\"view/DarkTheme.css\");","lastModifiedDate":"2016-08-20"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        alert.initOwner(owner);","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        alert.setTitle(title);","lastModifiedDate":"2016-08-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        alert.setHeaderText(headerText);","lastModifiedDate":"2016-08-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        alert.setContentText(contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        alert.getDialogPane().setId(ALERT_DIALOG_PANE_FIELD_ID);","lastModifiedDate":"2016-10-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        alert.showAndWait();","lastModifiedDate":"2016-08-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Shows an error alert dialog with {@code title} and error message, {@code e},","lastModifiedDate":"2017-08-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * and exits the application after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private void showFatalErrorDialogAndShutdown(String title, Throwable e) {","lastModifiedDate":"2016-09-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        logger.severe(title + \" \" + e.getMessage() + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(Alert.AlertType.ERROR, title, e.getMessage(), e.toString());","lastModifiedDate":"2016-08-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        Platform.exit();","lastModifiedDate":"2016-08-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        System.exit(1);","lastModifiedDate":"2016-08-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"jacobcuison":1,"-":87}},{"path":"src/main/resources/view/ContactDetailPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jonyeokj"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":2,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":3,"author":{"gitId":"jonyeokj"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":4,"author":{"gitId":"jonyeokj"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":5,"author":{"gitId":"jonyeokj"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":6,"author":{"gitId":"jonyeokj"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":7,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":8,"author":{"gitId":"jacobcuison"},"content":"\u003cVBox id\u003d\"contactDetailPane\" fx:id\u003d\"contactDetailPane\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" alignment\u003d\"TOP_LEFT\"\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":9,"author":{"gitId":"jonyeokj"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":10,"author":{"gitId":"jonyeokj"},"content":"        \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\" /\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":11,"author":{"gitId":"jonyeokj"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":12,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":13,"author":{"gitId":"jonyeokj"},"content":"    \u003c!-- Name --\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":14,"author":{"gitId":"jonyeokj"},"content":"    \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":15,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":16,"author":{"gitId":"jonyeokj"},"content":"    \u003c!-- Tags --\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":17,"author":{"gitId":"jonyeokj"},"content":"    \u003cFlowPane fx:id\u003d\"tags\" /\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":18,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":19,"author":{"gitId":"jonyeokj"},"content":"    \u003c!-- Phone --\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":20,"author":{"gitId":"jonyeokj"},"content":"    \u003cVBox spacing\u003d\"1\"\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":21,"author":{"gitId":"jonyeokj"},"content":"        \u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":22,"author":{"gitId":"jonyeokj"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":23,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":24,"author":{"gitId":"jonyeokj"},"content":"    \u003c!-- Address --\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":25,"author":{"gitId":"jonyeokj"},"content":"    \u003cVBox spacing\u003d\"1\"\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":26,"author":{"gitId":"jonyeokj"},"content":"        \u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" /\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":27,"author":{"gitId":"jonyeokj"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":28,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":29,"author":{"gitId":"jonyeokj"},"content":"    \u003c!-- Email --\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":30,"author":{"gitId":"jonyeokj"},"content":"    \u003cVBox spacing\u003d\"1\"\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":31,"author":{"gitId":"jonyeokj"},"content":"        \u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":32,"author":{"gitId":"jonyeokj"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":33,"author":{"gitId":"jonyeokj"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2023-10-19"}],"authorContributionMap":{"jonyeokj":32,"jacobcuison":1}},{"path":"src/main/resources/view/ContactListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"jonyeokj"},"content":"\u003cHBox id\u003d\"ContactCardPane\" fx:id\u003d\"ContactCardPane\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"chiayunrong"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"50\" /\u003e","lastModifiedDate":"2023-10-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"chiayunrong"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"50\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2023-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"      \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2016-09-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"jonyeokj":1,"chiayunrong":2,"-":28}},{"path":"src/main/resources/view/ContactListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-07-27"},{"lineNumber":7,"author":{"gitId":"jacobcuison"},"content":"  \u003cListView fx:id\u003d\"contactListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"jacobcuison":1,"-":7}},{"path":"src/main/resources/view/DarkTheme.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":".background {","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    background-color: #383838; /* Used in the default.html file */","lastModifiedDate":"2017-03-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":".label {","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    -fx-text-fill: #555555;","lastModifiedDate":"2016-08-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":".label-bright {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":".label-header {","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"jonyeokj"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2023-10-18"},{"lineNumber":22,"author":{"gitId":"jacobcuison"},"content":"    -fx-font-family: \"Segoe UI\";","lastModifiedDate":"2023-11-02"},{"lineNumber":23,"author":{"gitId":"jacobcuison"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2023-11-02"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"jonyeokj"},"content":"    -fx-padding: 20px 20px;","lastModifiedDate":"2023-10-18"},{"lineNumber":27,"author":{"gitId":"jonyeokj"},"content":"    -fx-background-color: #2A2A2A;","lastModifiedDate":"2023-10-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":".text-field {","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":".tab-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":".tab-pane .tab-header-area {","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    -fx-min-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    -fx-max-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":".table-view {","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    -fx-base: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    -fx-control-inner-background: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    -fx-table-cell-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    -fx-table-header-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    -fx-padding: 5;","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":".table-view .column-header-background {","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":".table-view .column-header, .table-view .filler {","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    -fx-size: 35;","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    -fx-border-width: 0 0 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    -fx-border-color:","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        derive(-fx-base, 80%)","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0 10 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":".table-view .column-header .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    -fx-font-size: 20pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    -fx-alignment: center-left;","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":".table-view:focused .table-row-cell:filled:focused:selected {","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":".split-pane:horizontal .split-pane-divider {","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-03-02"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    -fx-border-color: transparent transparent transparent #4d4d4d;","lastModifiedDate":"2017-03-02"},{"lineNumber":85,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":".split-pane {","lastModifiedDate":"2016-08-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    -fx-border-radius: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":".list-view {","lastModifiedDate":"2017-03-02"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    -fx-padding: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2018-01-10"},{"lineNumber":97,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":99,"author":{"gitId":"-"},"content":".list-cell {","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    -fx-label-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    -fx-graphic-text-gap : 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":".list-cell:filled:even {","lastModifiedDate":"2017-03-02"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    -fx-background-color: #3c3e3f;","lastModifiedDate":"2017-03-02"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":109,"author":{"gitId":"-"},"content":".list-cell:filled:odd {","lastModifiedDate":"2017-03-02"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    -fx-background-color: #515658;","lastModifiedDate":"2017-03-02"},{"lineNumber":111,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":113,"author":{"gitId":"-"},"content":".list-cell:filled:selected {","lastModifiedDate":"2017-03-02"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    -fx-background-color: #424d5f;","lastModifiedDate":"2017-03-02"},{"lineNumber":115,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":117,"author":{"gitId":"jonyeokj"},"content":".list-cell:filled:selected #contactCardPane {","lastModifiedDate":"2023-10-11"},{"lineNumber":118,"author":{"gitId":"jonyeokj"},"content":"    -fx-border-color: #3e7b91;","lastModifiedDate":"2023-10-11"},{"lineNumber":119,"author":{"gitId":"jonyeokj"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2023-10-11"},{"lineNumber":120,"author":{"gitId":"jonyeokj"},"content":"}","lastModifiedDate":"2023-10-11"},{"lineNumber":121,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":122,"author":{"gitId":"jonyeokj"},"content":".list-cell:filled:selected #meetingCardPane {","lastModifiedDate":"2023-10-11"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    -fx-border-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":125,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":127,"author":{"gitId":"-"},"content":".list-cell .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":129,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":".cell_big_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    -fx-font-size: 16px;","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"jacobcuison"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2023-11-02"},{"lineNumber":135,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":".cell_small_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\";","lastModifiedDate":"2022-01-13"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    -fx-font-size: 13px;","lastModifiedDate":"2017-03-02"},{"lineNumber":140,"author":{"gitId":"jacobcuison"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2023-11-02"},{"lineNumber":141,"author":{"gitId":"jacobcuison"},"content":"}","lastModifiedDate":"2023-11-02"},{"lineNumber":142,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":143,"author":{"gitId":"jacobcuison"},"content":".cell_note {","lastModifiedDate":"2023-11-02"},{"lineNumber":144,"author":{"gitId":"jacobcuison"},"content":"    -fx-font-family: \"Segoe UI\";","lastModifiedDate":"2023-11-02"},{"lineNumber":145,"author":{"gitId":"jacobcuison"},"content":"    -fx-font-size: 13px;","lastModifiedDate":"2023-11-02"},{"lineNumber":146,"author":{"gitId":"jacobcuison"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2023-11-02"},{"lineNumber":147,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":149,"author":{"gitId":"-"},"content":".stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":150,"author":{"gitId":"-"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":151,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":".pane-with-border {","lastModifiedDate":"2017-05-15"},{"lineNumber":154,"author":{"gitId":"-"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-05-09"},{"lineNumber":155,"author":{"gitId":"-"},"content":"     -fx-border-color: derive(#1d1d1d, 10%);","lastModifiedDate":"2017-05-09"},{"lineNumber":156,"author":{"gitId":"-"},"content":"     -fx-border-top-width: 1px;","lastModifiedDate":"2017-05-09"},{"lineNumber":157,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-09"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":159,"author":{"gitId":"-"},"content":".status-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2018-12-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":163,"author":{"gitId":"chiayunrong"},"content":".text-area {","lastModifiedDate":"2023-10-16"},{"lineNumber":164,"author":{"gitId":"chiayunrong"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2023-10-16"},{"lineNumber":165,"author":{"gitId":"chiayunrong"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2023-10-16"},{"lineNumber":166,"author":{"gitId":"chiayunrong"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2023-10-16"},{"lineNumber":167,"author":{"gitId":"chiayunrong"},"content":"    -fx-font-size: 18pt;","lastModifiedDate":"2023-10-16"},{"lineNumber":168,"author":{"gitId":"chiayunrong"},"content":"}","lastModifiedDate":"2023-10-16"},{"lineNumber":169,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":170,"author":{"gitId":"chiayunrong"},"content":".text-area .content {","lastModifiedDate":"2023-10-16"},{"lineNumber":171,"author":{"gitId":"chiayunrong"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2023-10-16"},{"lineNumber":172,"author":{"gitId":"chiayunrong"},"content":"    -fx-padding: 10px;","lastModifiedDate":"2023-10-16"},{"lineNumber":173,"author":{"gitId":"chiayunrong"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2023-10-16"},{"lineNumber":174,"author":{"gitId":"chiayunrong"},"content":"}","lastModifiedDate":"2023-10-16"},{"lineNumber":175,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":176,"author":{"gitId":"-"},"content":".result-display {","lastModifiedDate":"2016-09-14"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2017-03-02"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":181,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":183,"author":{"gitId":"-"},"content":".result-display .label {","lastModifiedDate":"2016-09-14"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    -fx-text-fill: black !important;","lastModifiedDate":"2016-09-14"},{"lineNumber":185,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":187,"author":{"gitId":"-"},"content":".status-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    -fx-padding: 4px;","lastModifiedDate":"2018-12-08"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    -fx-pref-height: 30px;","lastModifiedDate":"2018-12-08"},{"lineNumber":192,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":194,"author":{"gitId":"-"},"content":".status-bar-with-border {","lastModifiedDate":"2016-08-08"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":198,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":200,"author":{"gitId":"-"},"content":".status-bar-with-border .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":202,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":204,"author":{"gitId":"-"},"content":".grid-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":208,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":210,"author":{"gitId":"-"},"content":".grid-pane .stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":212,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":214,"author":{"gitId":"-"},"content":".context-menu {","lastModifiedDate":"2016-08-08"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":216,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":218,"author":{"gitId":"-"},"content":".context-menu .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":219,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":220,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":222,"author":{"gitId":"-"},"content":".menu-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":224,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":226,"author":{"gitId":"-"},"content":".menu-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    -fx-font-size: 14pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":228,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":229,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":230,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":231,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":233,"author":{"gitId":"-"},"content":".menu .left-container {","lastModifiedDate":"2016-08-08"},{"lineNumber":234,"author":{"gitId":"-"},"content":"    -fx-background-color: black;","lastModifiedDate":"2016-08-08"},{"lineNumber":235,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":237,"author":{"gitId":"-"},"content":"/*","lastModifiedDate":"2016-08-08"},{"lineNumber":238,"author":{"gitId":"-"},"content":" * Metro style Push Button","lastModifiedDate":"2016-08-08"},{"lineNumber":239,"author":{"gitId":"-"},"content":" * Author: Pedro Duque Vieira","lastModifiedDate":"2016-08-08"},{"lineNumber":240,"author":{"gitId":"-"},"content":" * http://pixelduke.wordpress.com/2012/10/23/jmetro-windows-8-controls-on-java/","lastModifiedDate":"2016-08-08"},{"lineNumber":241,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":242,"author":{"gitId":"-"},"content":".button {","lastModifiedDate":"2016-08-08"},{"lineNumber":243,"author":{"gitId":"-"},"content":"    -fx-padding: 5 22 5 22;","lastModifiedDate":"2016-08-08"},{"lineNumber":244,"author":{"gitId":"-"},"content":"    -fx-border-color: #e2e2e2;","lastModifiedDate":"2016-08-08"},{"lineNumber":245,"author":{"gitId":"-"},"content":"    -fx-border-width: 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":246,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":247,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":248,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\", Helvetica, Arial, sans-serif;","lastModifiedDate":"2022-01-13"},{"lineNumber":249,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":250,"author":{"gitId":"-"},"content":"    -fx-text-fill: #d8d8d8;","lastModifiedDate":"2016-08-08"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0 0 0 0, 0, 1, 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":252,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":254,"author":{"gitId":"-"},"content":".button:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":255,"author":{"gitId":"-"},"content":"    -fx-background-color: #3a3a3a;","lastModifiedDate":"2016-08-08"},{"lineNumber":256,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":258,"author":{"gitId":"-"},"content":".button:pressed, .button:default:hover:pressed {","lastModifiedDate":"2016-08-08"},{"lineNumber":259,"author":{"gitId":"-"},"content":"  -fx-background-color: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":260,"author":{"gitId":"-"},"content":"  -fx-text-fill: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":261,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":263,"author":{"gitId":"-"},"content":".button:focused {","lastModifiedDate":"2016-08-08"},{"lineNumber":264,"author":{"gitId":"-"},"content":"    -fx-border-color: white, white;","lastModifiedDate":"2016-08-08"},{"lineNumber":265,"author":{"gitId":"-"},"content":"    -fx-border-width: 1, 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":266,"author":{"gitId":"-"},"content":"    -fx-border-style: solid, segments(1, 1);","lastModifiedDate":"2016-08-08"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    -fx-border-radius: 0, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    -fx-border-insets: 1 1 1 1, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":269,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":271,"author":{"gitId":"-"},"content":".button:disabled, .button:default:disabled {","lastModifiedDate":"2016-08-08"},{"lineNumber":272,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.4;","lastModifiedDate":"2016-08-08"},{"lineNumber":273,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":274,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":275,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":277,"author":{"gitId":"-"},"content":".button:default {","lastModifiedDate":"2016-08-08"},{"lineNumber":278,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    -fx-text-fill: #ffffff;","lastModifiedDate":"2016-08-08"},{"lineNumber":280,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":282,"author":{"gitId":"-"},"content":".button:default:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":283,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(-fx-focus-color, 30%);","lastModifiedDate":"2016-08-08"},{"lineNumber":284,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":286,"author":{"gitId":"-"},"content":".dialog-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":287,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":288,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":290,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.button-bar \u003e *.container {","lastModifiedDate":"2016-08-08"},{"lineNumber":291,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":292,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":294,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.label.content {","lastModifiedDate":"2016-08-08"},{"lineNumber":295,"author":{"gitId":"-"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2016-08-08"},{"lineNumber":296,"author":{"gitId":"-"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2016-08-08"},{"lineNumber":297,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":298,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":300,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel {","lastModifiedDate":"2016-08-08"},{"lineNumber":301,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":302,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":303,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":304,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel *.label {","lastModifiedDate":"2016-08-08"},{"lineNumber":305,"author":{"gitId":"-"},"content":"    -fx-font-size: 18px;","lastModifiedDate":"2016-08-08"},{"lineNumber":306,"author":{"gitId":"-"},"content":"    -fx-font-style: italic;","lastModifiedDate":"2016-08-08"},{"lineNumber":307,"author":{"gitId":"-"},"content":"    -fx-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":308,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":309,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":311,"author":{"gitId":"-"},"content":".scroll-bar {","lastModifiedDate":"2017-03-02"},{"lineNumber":312,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-03-02"},{"lineNumber":313,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":314,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":315,"author":{"gitId":"-"},"content":".scroll-bar .thumb {","lastModifiedDate":"2016-08-15"},{"lineNumber":316,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":317,"author":{"gitId":"-"},"content":"    -fx-background-insets: 3;","lastModifiedDate":"2016-08-15"},{"lineNumber":318,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":320,"author":{"gitId":"-"},"content":".scroll-bar .increment-button, .scroll-bar .decrement-button {","lastModifiedDate":"2016-08-15"},{"lineNumber":321,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-15"},{"lineNumber":322,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-15"},{"lineNumber":323,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":324,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":325,"author":{"gitId":"-"},"content":".scroll-bar .increment-arrow, .scroll-bar .decrement-arrow {","lastModifiedDate":"2016-08-15"},{"lineNumber":326,"author":{"gitId":"-"},"content":"    -fx-shape: \" \";","lastModifiedDate":"2016-08-15"},{"lineNumber":327,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":328,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":329,"author":{"gitId":"-"},"content":".scroll-bar:vertical .increment-arrow, .scroll-bar:vertical .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":330,"author":{"gitId":"-"},"content":"    -fx-padding: 1 8 1 8;","lastModifiedDate":"2016-08-15"},{"lineNumber":331,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":332,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":333,"author":{"gitId":"-"},"content":".scroll-bar:horizontal .increment-arrow, .scroll-bar:horizontal .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":334,"author":{"gitId":"-"},"content":"    -fx-padding: 8 1 8 1;","lastModifiedDate":"2016-08-18"},{"lineNumber":335,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":336,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":337,"author":{"gitId":"jonyeokj"},"content":"#contactCardPane {","lastModifiedDate":"2023-10-11"},{"lineNumber":338,"author":{"gitId":"jonyeokj"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2023-10-11"},{"lineNumber":339,"author":{"gitId":"jonyeokj"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2023-10-11"},{"lineNumber":340,"author":{"gitId":"jonyeokj"},"content":"}","lastModifiedDate":"2023-10-11"},{"lineNumber":341,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":342,"author":{"gitId":"jonyeokj"},"content":"#meetingCardPane {","lastModifiedDate":"2023-10-11"},{"lineNumber":343,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":344,"author":{"gitId":"-"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":345,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":346,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":347,"author":{"gitId":"-"},"content":"#commandTypeLabel {","lastModifiedDate":"2016-08-08"},{"lineNumber":348,"author":{"gitId":"-"},"content":"    -fx-font-size: 11px;","lastModifiedDate":"2016-08-08"},{"lineNumber":349,"author":{"gitId":"-"},"content":"    -fx-text-fill: #F70D1A;","lastModifiedDate":"2016-08-08"},{"lineNumber":350,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":351,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":352,"author":{"gitId":"-"},"content":"#commandTextField {","lastModifiedDate":"2017-03-02"},{"lineNumber":353,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent #383838 transparent #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":354,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":355,"author":{"gitId":"-"},"content":"    -fx-border-color: #383838 #383838 #ffffff #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":356,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":357,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":358,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":359,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":360,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":361,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":362,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":363,"author":{"gitId":"jacobcuison"},"content":"#filterField, #contactListPanel, #contactWebpage {","lastModifiedDate":"2023-10-03"},{"lineNumber":364,"author":{"gitId":"-"},"content":"    -fx-effect: innershadow(gaussian, black, 10, 0, 0, 0);","lastModifiedDate":"2016-08-15"},{"lineNumber":365,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":366,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":367,"author":{"gitId":"-"},"content":"#resultDisplay .content {","lastModifiedDate":"2017-03-02"},{"lineNumber":368,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent, #383838, transparent, #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":369,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":370,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":371,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":372,"author":{"gitId":"-"},"content":"#tags {","lastModifiedDate":"2016-12-18"},{"lineNumber":373,"author":{"gitId":"-"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2016-12-18"},{"lineNumber":374,"author":{"gitId":"-"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":375,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":376,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":377,"author":{"gitId":"-"},"content":"#tags .label {","lastModifiedDate":"2016-12-18"},{"lineNumber":378,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-12-18"},{"lineNumber":379,"author":{"gitId":"-"},"content":"    -fx-background-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":380,"author":{"gitId":"-"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":381,"author":{"gitId":"-"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":382,"author":{"gitId":"-"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":383,"author":{"gitId":"-"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2016-12-18"},{"lineNumber":384,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"}],"authorContributionMap":{"jonyeokj":15,"jacobcuison":11,"chiayunrong":13,"-":345}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":9,"author":{"gitId":"jonyeokj"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":14,"author":{"gitId":"chiayunrong"},"content":"\u003c?import javafx.scene.control.SplitPane?\u003e","lastModifiedDate":"2023-10-16"},{"lineNumber":15,"author":{"gitId":"chiayunrong"},"content":"\u003c?import javafx.scene.control.TextArea?\u003e","lastModifiedDate":"2023-10-16"},{"lineNumber":16,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":17,"author":{"gitId":"jacobcuison"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":18,"author":{"gitId":"-"},"content":"\u003cfx:root type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2023-07-27"},{"lineNumber":19,"author":{"gitId":"jacobcuison"},"content":"         title\u003d\"NoteNote\" minWidth\u003d\"450\" minHeight\u003d\"600\" onCloseRequest\u003d\"#handleExit\"\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"jacobcuison"},"content":"    \u003cImage url\u003d\"@/images/notenote.png\" /\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@DarkTheme.css\" /\u003e","lastModifiedDate":"2016-08-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Extensions.css\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":30,"author":{"gitId":"chiayunrong"},"content":"      \u003cVBox maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"400.0\" prefWidth\u003d\"600.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-10-16"},{"lineNumber":31,"author":{"gitId":"chiayunrong"},"content":"        \u003cchildren\u003e","lastModifiedDate":"2023-10-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"          \u003cMenuBar fx:id\u003d\"menuBar\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2017-06-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"              \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"              \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"          \u003c/MenuBar\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"jacobcuison"},"content":"          \u003cStackPane fx:id\u003d\"resultDisplayPlaceholder\" styleClass\u003d\"pane-with-border\"","lastModifiedDate":"2023-11-02"},{"lineNumber":41,"author":{"gitId":"jacobcuison"},"content":"                     minHeight\u003d\"150\" prefHeight\u003d\"150\" maxHeight\u003d\"150\"\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":43,"author":{"gitId":"-"},"content":"              \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"          \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":46,"author":{"gitId":"chiayunrong"},"content":"          \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"commandBoxPlaceholder\" styleClass\u003d\"pane-with-border\"\u003e","lastModifiedDate":"2023-10-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"              \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"          \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":52,"author":{"gitId":"jonyeokj"},"content":"          \u003cSplitPane dividerPositions\u003d\"0.5\" prefHeight\u003d\"270.0\" prefWidth\u003d\"600.0\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":53,"author":{"gitId":"chiayunrong"},"content":"            \u003citems\u003e","lastModifiedDate":"2023-10-16"},{"lineNumber":54,"author":{"gitId":"jonyeokj"},"content":"              \u003c!-- Left Pane (for Contacts and Meetings) --\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":55,"author":{"gitId":"jonyeokj"},"content":"              \u003cStackPane fx:id\u003d\"listsPlaceholder\" styleClass\u003d\"pane-with-border\" minWidth\u003d\"250\" maxWidth\u003d\"250\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":56,"author":{"gitId":"jonyeokj"},"content":"                \u003cVBox fx:id\u003d\"contactListPanelPlaceholder\" alignment\u003d\"TOP_CENTER\" visible\u003d\"true\"\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":57,"author":{"gitId":"jonyeokj"},"content":"                  \u003cpadding\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":58,"author":{"gitId":"jonyeokj"},"content":"                    \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\" /\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":59,"author":{"gitId":"jonyeokj"},"content":"                  \u003c/padding\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":60,"author":{"gitId":"jonyeokj"},"content":"                  \u003cLabel fx:id\u003d\"contactListHeader\" text\u003d\"Contacts\" styleClass\u003d\"label-header\" maxWidth\u003d\"Infinity\"/\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":61,"author":{"gitId":"jonyeokj"},"content":"                  \u003cStackPane fx:id\u003d\"contactList\"/\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":62,"author":{"gitId":"jonyeokj"},"content":"                \u003c/VBox\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":63,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":64,"author":{"gitId":"jonyeokj"},"content":"                \u003cVBox fx:id\u003d\"meetingListPanelPlaceholder\" alignment\u003d\"TOP_CENTER\" visible\u003d\"false\"\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                  \u003cpadding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                    \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                  \u003c/padding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":68,"author":{"gitId":"jonyeokj"},"content":"                  \u003cLabel fx:id\u003d\"meetingListHeader\" text\u003d\"Meetings\" styleClass\u003d\"label-header\" maxWidth\u003d\"Infinity\"/\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":69,"author":{"gitId":"jonyeokj"},"content":"                  \u003cStackPane fx:id\u003d\"meetingList\"/\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"                \u003c/VBox\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":71,"author":{"gitId":"jonyeokj"},"content":"              \u003c/StackPane\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":72,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":73,"author":{"gitId":"jonyeokj"},"content":"              \u003c!-- Details and Note Display on the Right Pane --\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":74,"author":{"gitId":"jonyeokj"},"content":"              \u003cVBox fx:id\u003d\"detailsPlaceholder\" styleClass\u003d\"pane-with-border\" minWidth\u003d\"250\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":75,"author":{"gitId":"jonyeokj"},"content":"                \u003c!-- Contacts Details Section --\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":76,"author":{"gitId":"jacobcuison"},"content":"                \u003cVBox fx:id\u003d\"contactDetailPanelPlaceholder\" alignment\u003d\"TOP_CENTER\" visible\u003d\"false\" managed\u003d\"true\" VBox.vgrow\u003d\"SOMETIMES\" minHeight\u003d\"180\" maxHeight\u003d\"200\"\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":77,"author":{"gitId":"chiayunrong"},"content":"                  \u003cpadding\u003e","lastModifiedDate":"2023-10-16"},{"lineNumber":78,"author":{"gitId":"jonyeokj"},"content":"                    \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\" /\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":79,"author":{"gitId":"chiayunrong"},"content":"                  \u003c/padding\u003e","lastModifiedDate":"2023-10-16"},{"lineNumber":80,"author":{"gitId":"jonyeokj"},"content":"                  \u003cLabel fx:id\u003d\"contactDetailHeader\" text\u003d\"Contact Details\" styleClass\u003d\"label-header\" maxWidth\u003d\"Infinity\"/\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":81,"author":{"gitId":"jonyeokj"},"content":"                  \u003cStackPane fx:id\u003d\"contactDetail\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":82,"author":{"gitId":"jonyeokj"},"content":"                \u003c/VBox\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":83,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":84,"author":{"gitId":"jonyeokj"},"content":"                \u003c!-- Meeting Details Section --\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":85,"author":{"gitId":"jacobcuison"},"content":"                \u003cVBox fx:id\u003d\"meetingDetailPanelPlaceholder\" alignment\u003d\"TOP_CENTER\" visible\u003d\"false\" managed\u003d\"false\" VBox.vgrow\u003d\"SOMETIMES\" minHeight\u003d\"180\" maxHeight\u003d\"200\"\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":86,"author":{"gitId":"jonyeokj"},"content":"                  \u003cpadding\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":87,"author":{"gitId":"jonyeokj"},"content":"                    \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\" /\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":88,"author":{"gitId":"jonyeokj"},"content":"                  \u003c/padding\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":89,"author":{"gitId":"jonyeokj"},"content":"                  \u003cLabel fx:id\u003d\"meetingDetailHeader\" text\u003d\"Meeting Details\" styleClass\u003d\"label-header\" maxWidth\u003d\"Infinity\"/\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":90,"author":{"gitId":"jonyeokj"},"content":"                  \u003cStackPane fx:id\u003d\"meetingDetail\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":91,"author":{"gitId":"jonyeokj"},"content":"                \u003c/VBox\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":92,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":93,"author":{"gitId":"jonyeokj"},"content":"                \u003c!-- Notes Section --\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":94,"author":{"gitId":"jacobcuison"},"content":"\u003c!--                \u003cVBox fx:id\u003d\"noteDisplayPlaceholder\" alignment\u003d\"TOP_CENTER\" visible\u003d\"false\" managed\u003d\"true\" VBox.vgrow\u003d\"ALWAYS\" minWidth\u003d\"250\" maxHeight\u003d\"Infinity\" minHeight\u003d\"500\"\u003e--\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":95,"author":{"gitId":"jacobcuison"},"content":"\u003c!--                  \u003cpadding\u003e--\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":96,"author":{"gitId":"jacobcuison"},"content":"\u003c!--                    \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\" /\u003e--\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":97,"author":{"gitId":"jacobcuison"},"content":"\u003c!--                  \u003c/padding\u003e--\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":98,"author":{"gitId":"jacobcuison"},"content":"\u003c!--                  \u003cLabel fx:id\u003d\"noteDetailHeader\" text\u003d\"Notes\" styleClass\u003d\"label-header\" maxWidth\u003d\"Infinity\"/\u003e--\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":99,"author":{"gitId":"jacobcuison"},"content":"\u003c!--                  \u003cStackPane fx:id\u003d\"noteDetail\" VBox.vgrow\u003d\"ALWAYS\" /\u003e--\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":100,"author":{"gitId":"jacobcuison"},"content":"\u003c!--                \u003c/VBox\u003e--\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":101,"author":{"gitId":"jacobcuison"},"content":"                \u003cStackPane visible\u003d\"false\" managed\u003d\"true\" VBox.vgrow\u003d\"ALWAYS\" fx:id\u003d\"noteDisplayPlaceholder\" styleClass\u003d\"pane-with-border\" minWidth\u003d\"250\" maxHeight\u003d\"Infinity\" minHeight\u003d\"400\" /\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":102,"author":{"gitId":"jonyeokj"},"content":"              \u003c/VBox\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":103,"author":{"gitId":"chiayunrong"},"content":"            \u003c/items\u003e","lastModifiedDate":"2023-10-16"},{"lineNumber":104,"author":{"gitId":"chiayunrong"},"content":"          \u003c/SplitPane\u003e","lastModifiedDate":"2023-10-16"},{"lineNumber":105,"author":{"gitId":"chiayunrong"},"content":"        \u003c/children\u003e","lastModifiedDate":"2023-10-16"},{"lineNumber":106,"author":{"gitId":"-"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":108,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":109,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"jonyeokj":36,"jacobcuison":15,"chiayunrong":11,"-":47}},{"path":"src/main/resources/view/MeetingDetailPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jonyeokj"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":2,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":3,"author":{"gitId":"jonyeokj"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":4,"author":{"gitId":"jonyeokj"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":5,"author":{"gitId":"jonyeokj"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":6,"author":{"gitId":"jonyeokj"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":7,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":8,"author":{"gitId":"s-peiran"},"content":"\u003cVBox id\u003d\"meetingDetailPane\" fx:id\u003d\"meetingDetailPane\" xmlns\u003d\"http://javafx.com/javafx/17\"","lastModifiedDate":"2023-10-25"},{"lineNumber":9,"author":{"gitId":"s-peiran"},"content":"      xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":10,"author":{"gitId":"jonyeokj"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":11,"author":{"gitId":"jonyeokj"},"content":"        \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\"/\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":12,"author":{"gitId":"jonyeokj"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":13,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":14,"author":{"gitId":"jonyeokj"},"content":"    \u003c!-- Name --\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":15,"author":{"gitId":"s-peiran"},"content":"    \u003cLabel fx:id\u003d\"title\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" style\u003d\"-fx-text-fill: white;\"/\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":16,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":17,"author":{"gitId":"jonyeokj"},"content":"    \u003c!-- Time --\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":18,"author":{"gitId":"jonyeokj"},"content":"    \u003cVBox spacing\u003d\"1\"\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":19,"author":{"gitId":"s-peiran"},"content":"        \u003cLabel fx:id\u003d\"time\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$time\" style\u003d\"-fx-text-fill: white;\"/\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":20,"author":{"gitId":"jonyeokj"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":21,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":22,"author":{"gitId":"jonyeokj"},"content":"    \u003c!-- Place --\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":23,"author":{"gitId":"jonyeokj"},"content":"    \u003cVBox spacing\u003d\"1\"\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":24,"author":{"gitId":"s-peiran"},"content":"        \u003cLabel fx:id\u003d\"place\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$place\" style\u003d\"-fx-text-fill: white;\"/\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":25,"author":{"gitId":"jonyeokj"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":26,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":27,"author":{"gitId":"jonyeokj"},"content":"    \u003c!-- Description --\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":28,"author":{"gitId":"jonyeokj"},"content":"    \u003cVBox spacing\u003d\"1\"\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":29,"author":{"gitId":"s-peiran"},"content":"        \u003cLabel fx:id\u003d\"description\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$description\" style\u003d\"-fx-text-fill: white;\"/\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":30,"author":{"gitId":"s-peiran"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":31,"author":{"gitId":"s-peiran"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":32,"author":{"gitId":"s-peiran"},"content":"    \u003c!-- Contacts --\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":33,"author":{"gitId":"s-peiran"},"content":"    \u003cVBox spacing\u003d\"1\"\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":34,"author":{"gitId":"s-peiran"},"content":"        \u003cLabel fx:id\u003d\"contacts\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$contacts\" style\u003d\"-fx-text-fill: white;\"/\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":35,"author":{"gitId":"jonyeokj"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":36,"author":{"gitId":"jonyeokj"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2023-10-19"}],"authorContributionMap":{"jonyeokj":25,"s-peiran":11}},{"path":"src/main/resources/view/MeetingListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jonyeokj"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-10-11"},{"lineNumber":2,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":3,"author":{"gitId":"jonyeokj"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-10-11"},{"lineNumber":4,"author":{"gitId":"jonyeokj"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-10-11"},{"lineNumber":5,"author":{"gitId":"jonyeokj"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2023-10-11"},{"lineNumber":6,"author":{"gitId":"jonyeokj"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2023-10-11"},{"lineNumber":7,"author":{"gitId":"jonyeokj"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2023-10-11"},{"lineNumber":8,"author":{"gitId":"jonyeokj"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-10-11"},{"lineNumber":9,"author":{"gitId":"jonyeokj"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2023-10-11"},{"lineNumber":10,"author":{"gitId":"jonyeokj"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-10-11"},{"lineNumber":11,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":12,"author":{"gitId":"jonyeokj"},"content":"\u003cHBox id\u003d\"meetingCardPane\" fx:id\u003d\"meetingCardPane\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-10-11"},{"lineNumber":13,"author":{"gitId":"jonyeokj"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-10-11"},{"lineNumber":14,"author":{"gitId":"jonyeokj"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2023-10-11"},{"lineNumber":15,"author":{"gitId":"jonyeokj"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"50\" /\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":16,"author":{"gitId":"jonyeokj"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2023-10-11"},{"lineNumber":17,"author":{"gitId":"jonyeokj"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"50\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":18,"author":{"gitId":"jonyeokj"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2023-10-11"},{"lineNumber":19,"author":{"gitId":"jonyeokj"},"content":"        \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2023-10-11"},{"lineNumber":20,"author":{"gitId":"jonyeokj"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2023-10-11"},{"lineNumber":21,"author":{"gitId":"jonyeokj"},"content":"      \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2023-10-11"},{"lineNumber":22,"author":{"gitId":"jonyeokj"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2023-10-11"},{"lineNumber":23,"author":{"gitId":"jonyeokj"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2023-10-11"},{"lineNumber":24,"author":{"gitId":"jonyeokj"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2023-10-11"},{"lineNumber":25,"author":{"gitId":"jonyeokj"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2023-10-11"},{"lineNumber":26,"author":{"gitId":"jonyeokj"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2023-10-11"},{"lineNumber":27,"author":{"gitId":"jonyeokj"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2023-10-11"},{"lineNumber":28,"author":{"gitId":"jonyeokj"},"content":"        \u003cLabel fx:id\u003d\"title\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2023-10-11"},{"lineNumber":29,"author":{"gitId":"jonyeokj"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2023-10-11"},{"lineNumber":30,"author":{"gitId":"jonyeokj"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2023-10-11"},{"lineNumber":31,"author":{"gitId":"jonyeokj"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2023-10-11"},{"lineNumber":32,"author":{"gitId":"jonyeokj"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2023-10-11"}],"authorContributionMap":{"jonyeokj":32}},{"path":"src/main/resources/view/MeetingListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jonyeokj"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-10-11"},{"lineNumber":2,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":3,"author":{"gitId":"jonyeokj"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2023-10-11"},{"lineNumber":4,"author":{"gitId":"jonyeokj"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-10-11"},{"lineNumber":5,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":6,"author":{"gitId":"jonyeokj"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-10-11"},{"lineNumber":7,"author":{"gitId":"jonyeokj"},"content":"  \u003cListView fx:id\u003d\"meetingListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2023-10-11"},{"lineNumber":8,"author":{"gitId":"jonyeokj"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2023-10-11"}],"authorContributionMap":{"jonyeokj":8}},{"path":"src/main/resources/view/NoteArea.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chiayunrong"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-10-16"},{"lineNumber":2,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":3,"author":{"gitId":"chiayunrong"},"content":"\u003c?import javafx.scene.control.TextArea?\u003e","lastModifiedDate":"2023-10-16"},{"lineNumber":4,"author":{"gitId":"chiayunrong"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2023-10-16"},{"lineNumber":5,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":6,"author":{"gitId":"jacobcuison"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":7,"author":{"gitId":"jacobcuison"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":8,"author":{"gitId":"jacobcuison"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":9,"author":{"gitId":"jacobcuison"},"content":"\u003cVBox fx:id\u003d\"placeHolder\" xmlns\u003d\"http://javafx.com/javafx/17\"","lastModifiedDate":"2023-11-02"},{"lineNumber":10,"author":{"gitId":"s-peiran"},"content":"      xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":11,"author":{"gitId":"jacobcuison"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":12,"author":{"gitId":"jacobcuison"},"content":"        \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\" /\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":13,"author":{"gitId":"jacobcuison"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":14,"author":{"gitId":"jacobcuison"},"content":"    \u003cLabel text\u003d\"Notes\" styleClass\u003d\"label-header\" maxWidth\u003d\"Infinity\"/\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":15,"author":{"gitId":"jacobcuison"},"content":"    \u003cTextArea fx:id\u003d\"noteDisplay\" editable\u003d\"false\" minWidth\u003d\"250\" VBox.vgrow\u003d\"SOMETIMES\"","lastModifiedDate":"2023-11-02"},{"lineNumber":16,"author":{"gitId":"jacobcuison"},"content":"              style\u003d\"-fx-font-size: 13px;\" /\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":17,"author":{"gitId":"jacobcuison"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2023-11-02"}],"authorContributionMap":{"jacobcuison":11,"s-peiran":1,"chiayunrong":5}},{"path":"src/main/resources/view/ResultDisplay.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.TextArea?\u003e","lastModifiedDate":"2016-10-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-06-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003cStackPane fx:id\u003d\"placeHolder\" styleClass\u003d\"pane-with-border\" xmlns\u003d\"http://javafx.com/javafx/17\"","lastModifiedDate":"2023-07-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2016-12-24"},{"lineNumber":8,"author":{"gitId":"jacobcuison"},"content":"  \u003cTextArea fx:id\u003d\"resultDisplay\" editable\u003d\"false\" styleClass\u003d\"result-display\" wrapText\u003d\"true\"/\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c/StackPane\u003e","lastModifiedDate":"2017-06-22"}],"authorContributionMap":{"jacobcuison":1,"-":8}},{"path":"src/test/java/seedu/address/commons/core/index/IndexTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core.index;","lastModifiedDate":"2017-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class IndexTest {","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public void createOneBasedIndex() {","lastModifiedDate":"2017-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        // invalid index","lastModifiedDate":"2017-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e Index.fromOneBased(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        // check equality using the same base","lastModifiedDate":"2017-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertEquals(1, Index.fromOneBased(1).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertEquals(5, Index.fromOneBased(5).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        // convert from one-based index to zero-based index","lastModifiedDate":"2017-05-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertEquals(0, Index.fromOneBased(1).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertEquals(4, Index.fromOneBased(5).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void createZeroBasedIndex() {","lastModifiedDate":"2017-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // invalid index","lastModifiedDate":"2017-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e Index.fromZeroBased(-1));","lastModifiedDate":"2019-03-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // check equality using the same base","lastModifiedDate":"2017-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertEquals(0, Index.fromZeroBased(0).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertEquals(5, Index.fromZeroBased(5).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // convert from zero-based index to one-based index","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertEquals(1, Index.fromZeroBased(0).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(6, Index.fromZeroBased(5).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-05-24"},{"lineNumber":42,"author":{"gitId":"jacobcuison"},"content":"        final Index fifthContactIndex \u003d Index.fromOneBased(5);","lastModifiedDate":"2023-10-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-24"},{"lineNumber":45,"author":{"gitId":"jacobcuison"},"content":"        assertTrue(fifthContactIndex.equals(Index.fromOneBased(5)));","lastModifiedDate":"2023-10-03"},{"lineNumber":46,"author":{"gitId":"jacobcuison"},"content":"        assertTrue(fifthContactIndex.equals(Index.fromZeroBased(4)));","lastModifiedDate":"2023-10-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-24"},{"lineNumber":49,"author":{"gitId":"jacobcuison"},"content":"        assertTrue(fifthContactIndex.equals(fifthContactIndex));","lastModifiedDate":"2023-10-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":52,"author":{"gitId":"jacobcuison"},"content":"        assertFalse(fifthContactIndex.equals(null));","lastModifiedDate":"2023-10-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":55,"author":{"gitId":"jacobcuison"},"content":"        assertFalse(fifthContactIndex.equals(5.0f));","lastModifiedDate":"2023-10-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":58,"author":{"gitId":"jacobcuison"},"content":"        assertFalse(fifthContactIndex.equals(Index.fromOneBased(1)));","lastModifiedDate":"2023-10-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        Index index \u003d Index.fromZeroBased(0);","lastModifiedDate":"2019-02-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        String expected \u003d Index.class.getCanonicalName() + \"{zeroBasedIndex\u003d\" + index.getZeroBased() + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertEquals(expected, index.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"jacobcuison":7,"-":60}},{"path":"src/test/java/seedu/address/commons/util/AppUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2016-09-30"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class AppUtilTest {","lastModifiedDate":"2016-09-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public void getImage_exitingImage() {","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"jacobcuison"},"content":"        assertNotNull(AppUtil.getImage(\"/images/notenote.png\"));","lastModifiedDate":"2023-11-02"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void getImage_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e AppUtil.getImage(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void checkArgument_true_nothingHappens() {","lastModifiedDate":"2017-05-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        AppUtil.checkArgument(true);","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        AppUtil.checkArgument(true, \"\");","lastModifiedDate":"2017-05-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void checkArgument_falseWithoutErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e AppUtil.checkArgument(false));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void checkArgument_falseWithErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        String errorMessage \u003d \"error message\";","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, errorMessage, () -\u003e AppUtil.checkArgument(false, errorMessage));","lastModifiedDate":"2019-03-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-30"}],"authorContributionMap":{"jacobcuison":1,"-":35}},{"path":"src/test/java/seedu/address/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"jacobcuison"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_CONTACT_DISPLAYED_INDEX;","lastModifiedDate":"2023-10-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-07-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":9,"author":{"gitId":"jacobcuison"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NOTE_DESC_AMY;","lastModifiedDate":"2023-10-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":12,"author":{"gitId":"jonyeokj"},"content":"import static seedu.address.testutil.TypicalAddressBook.AMY;","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.nio.file.AccessDeniedException;","lastModifiedDate":"2023-06-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":22,"author":{"gitId":"jacobcuison"},"content":"import seedu.address.logic.commands.AddContactCommand;","lastModifiedDate":"2023-10-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2017-01-18"},{"lineNumber":24,"author":{"gitId":"chiayunrong"},"content":"import seedu.address.logic.commands.DeleteContactCommand;","lastModifiedDate":"2023-11-02"},{"lineNumber":25,"author":{"gitId":"jacobcuison"},"content":"import seedu.address.logic.commands.ListContactCommand;","lastModifiedDate":"2023-10-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":27,"author":{"gitId":"chiayunrong"},"content":"import seedu.address.logic.parser.CliSyntax;","lastModifiedDate":"2023-11-02"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-31"},{"lineNumber":33,"author":{"gitId":"jacobcuison"},"content":"import seedu.address.model.contact.Contact;","lastModifiedDate":"2023-10-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"jacobcuison"},"content":"import seedu.address.testutil.ContactBuilder;","lastModifiedDate":"2023-10-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy IO exception\");","lastModifiedDate":"2023-06-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_AD_EXCEPTION \u003d new AccessDeniedException(\"dummy access denied exception\");","lastModifiedDate":"2023-06-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                new JsonAddressBookStorage(temporaryFolder.resolve(\"addressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":61,"author":{"gitId":"jonyeokj"},"content":"        assertParseException(invalidCommand, String.format(MESSAGE_UNKNOWN_COMMAND, invalidCommand));","lastModifiedDate":"2023-11-01"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":66,"author":{"gitId":"chiayunrong"},"content":"        String deleteCommand \u003d DeleteContactCommand.COMMAND_WORD + \" \" + CliSyntax.PREFIX_INDEX + \" 9\";","lastModifiedDate":"2023-11-02"},{"lineNumber":67,"author":{"gitId":"jacobcuison"},"content":"        assertCommandException(deleteCommand, MESSAGE_INVALID_CONTACT_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2019-03-14"},{"lineNumber":72,"author":{"gitId":"jacobcuison"},"content":"        String listCommand \u003d ListContactCommand.COMMAND_WORD;","lastModifiedDate":"2023-10-03"},{"lineNumber":73,"author":{"gitId":"jacobcuison"},"content":"        assertCommandSuccess(listCommand, ListContactCommand.MESSAGE_SUCCESS, model);","lastModifiedDate":"2023-10-03"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2019-04-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertCommandFailureForExceptionFromStorage(DUMMY_IO_EXCEPTION, String.format(","lastModifiedDate":"2023-06-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"                LogicManager.FILE_OPS_ERROR_FORMAT, DUMMY_IO_EXCEPTION.getMessage()));","lastModifiedDate":"2023-06-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-06-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-06-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsAdException_throwsCommandException() {","lastModifiedDate":"2023-06-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertCommandFailureForExceptionFromStorage(DUMMY_AD_EXCEPTION, String.format(","lastModifiedDate":"2023-06-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"                LogicManager.FILE_OPS_PERMISSION_ERROR_FORMAT, DUMMY_AD_EXCEPTION.getMessage()));","lastModifiedDate":"2023-06-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":89,"author":{"gitId":"jacobcuison"},"content":"    public void getFilteredContactList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2023-10-03"},{"lineNumber":90,"author":{"gitId":"jacobcuison"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredContactList().remove(0));","lastModifiedDate":"2023-10-03"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":98,"author":{"gitId":"s-peiran"},"content":"     *","lastModifiedDate":"2023-10-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"                                      Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":110,"author":{"gitId":"s-peiran"},"content":"     *","lastModifiedDate":"2023-10-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14"},{"lineNumber":119,"author":{"gitId":"s-peiran"},"content":"     *","lastModifiedDate":"2023-10-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":128,"author":{"gitId":"s-peiran"},"content":"     *","lastModifiedDate":"2023-10-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"                                      String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-05-31"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":142,"author":{"gitId":"s-peiran"},"content":"     *","lastModifiedDate":"2023-10-13"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":146,"author":{"gitId":"-"},"content":"                                      String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2019-03-14"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":152,"author":{"gitId":"-"},"content":"     * Tests the Logic component\u0027s handling of an {@code IOException} thrown by the Storage component.","lastModifiedDate":"2023-06-13"},{"lineNumber":153,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2023-06-13"},{"lineNumber":154,"author":{"gitId":"-"},"content":"     * @param e               the exception to be thrown by the Storage component","lastModifiedDate":"2023-06-13"},{"lineNumber":155,"author":{"gitId":"-"},"content":"     * @param expectedMessage the message expected inside exception thrown by the Logic component","lastModifiedDate":"2023-06-13"},{"lineNumber":156,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    private void assertCommandFailureForExceptionFromStorage(IOException e, String expectedMessage) {","lastModifiedDate":"2023-06-13"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        Path prefPath \u003d temporaryFolder.resolve(\"ExceptionUserPrefs.json\");","lastModifiedDate":"2023-06-13"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        // Inject LogicManager with an AddressBookStorage that throws the IOException e when saving","lastModifiedDate":"2023-06-13"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(prefPath) {","lastModifiedDate":"2023-06-13"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":163,"author":{"gitId":"-"},"content":"            public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath)","lastModifiedDate":"2023-06-13"},{"lineNumber":164,"author":{"gitId":"-"},"content":"                    throws IOException {","lastModifiedDate":"2023-06-13"},{"lineNumber":165,"author":{"gitId":"-"},"content":"                throw e;","lastModifiedDate":"2023-06-13"},{"lineNumber":166,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2023-06-13"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2023-06-13"},{"lineNumber":170,"author":{"gitId":"-"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ExceptionUserPrefs.json\"));","lastModifiedDate":"2023-06-13"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2023-06-13"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2023-06-13"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        // Triggers the saveAddressBook method by executing an add command","lastModifiedDate":"2023-06-13"},{"lineNumber":176,"author":{"gitId":"jacobcuison"},"content":"        String addCommand \u003d AddContactCommand.COMMAND_WORD + NAME_DESC_AMY + PHONE_DESC_AMY","lastModifiedDate":"2023-10-03"},{"lineNumber":177,"author":{"gitId":"jacobcuison"},"content":"                + EMAIL_DESC_AMY + ADDRESS_DESC_AMY + NOTE_DESC_AMY;","lastModifiedDate":"2023-10-18"},{"lineNumber":178,"author":{"gitId":"jacobcuison"},"content":"        Contact expectedContact \u003d new ContactBuilder(AMY).withTags().build();","lastModifiedDate":"2023-10-03"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2023-06-13"},{"lineNumber":180,"author":{"gitId":"jacobcuison"},"content":"        expectedModel.addContact(expectedContact);","lastModifiedDate":"2023-10-03"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        assertCommandFailure(addCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2023-06-13"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"jonyeokj":2,"jacobcuison":15,"s-peiran":5,"chiayunrong":3,"-":158}},{"path":"src/test/java/seedu/address/logic/MessagesTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chiayunrong"},"content":"package seedu.address.logic;","lastModifiedDate":"2023-10-03"},{"lineNumber":2,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":3,"author":{"gitId":"chiayunrong"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-03"},{"lineNumber":4,"author":{"gitId":"chiayunrong"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-03"},{"lineNumber":5,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":6,"author":{"gitId":"chiayunrong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-03"},{"lineNumber":7,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":8,"author":{"gitId":"chiayunrong"},"content":"import seedu.address.model.meeting.Meeting;","lastModifiedDate":"2023-10-03"},{"lineNumber":9,"author":{"gitId":"chiayunrong"},"content":"import seedu.address.testutil.MeetingBuilder;","lastModifiedDate":"2023-10-03"},{"lineNumber":10,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":11,"author":{"gitId":"chiayunrong"},"content":"class MessagesTest {","lastModifiedDate":"2023-10-03"},{"lineNumber":12,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":13,"author":{"gitId":"chiayunrong"},"content":"    @Test","lastModifiedDate":"2023-10-03"},{"lineNumber":14,"author":{"gitId":"chiayunrong"},"content":"    public void execute_formatMeetingNull_throwsNullPointerException() {","lastModifiedDate":"2023-10-03"},{"lineNumber":15,"author":{"gitId":"chiayunrong"},"content":"        assertThrows(NullPointerException.class, () -\u003e Messages.formatMeeting(null));","lastModifiedDate":"2023-10-03"},{"lineNumber":16,"author":{"gitId":"chiayunrong"},"content":"    }","lastModifiedDate":"2023-10-03"},{"lineNumber":17,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":18,"author":{"gitId":"chiayunrong"},"content":"    @Test","lastModifiedDate":"2023-10-03"},{"lineNumber":19,"author":{"gitId":"chiayunrong"},"content":"    public void execute_formatMeetingAllFieldsPresent_success() {","lastModifiedDate":"2023-10-03"},{"lineNumber":20,"author":{"gitId":"chiayunrong"},"content":"        Meeting meeting \u003d new MeetingBuilder().build();","lastModifiedDate":"2023-10-03"},{"lineNumber":21,"author":{"gitId":"chiayunrong"},"content":"        String expectedMessage \u003d MeetingBuilder.DEFAULT_TITLE","lastModifiedDate":"2023-10-03"},{"lineNumber":22,"author":{"gitId":"chiayunrong"},"content":"                + \"; Time: \" + MeetingBuilder.DEFAULT_TIME","lastModifiedDate":"2023-10-03"},{"lineNumber":23,"author":{"gitId":"jonyeokj"},"content":"                + \"; Place: \" + MeetingBuilder.DEFAULT_PLACE","lastModifiedDate":"2023-10-11"},{"lineNumber":24,"author":{"gitId":"chiayunrong"},"content":"                + \"; Description: \" + MeetingBuilder.DEFAULT_DESCRIPTION;","lastModifiedDate":"2023-10-03"},{"lineNumber":25,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":26,"author":{"gitId":"chiayunrong"},"content":"        String actualMessage \u003d Messages.formatMeeting(meeting);","lastModifiedDate":"2023-10-03"},{"lineNumber":27,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":28,"author":{"gitId":"chiayunrong"},"content":"        assertEquals(expectedMessage, actualMessage);","lastModifiedDate":"2023-10-03"},{"lineNumber":29,"author":{"gitId":"chiayunrong"},"content":"    }","lastModifiedDate":"2023-10-03"},{"lineNumber":30,"author":{"gitId":"chiayunrong"},"content":"}","lastModifiedDate":"2023-10-03"}],"authorContributionMap":{"jonyeokj":1,"chiayunrong":29}},{"path":"src/test/java/seedu/address/logic/commands/AddContactCommandIntegrationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"jonyeokj"},"content":"import static seedu.address.testutil.TypicalAddressBook.getTypicalContactsAddressBook;","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-15"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-15"},{"lineNumber":14,"author":{"gitId":"jacobcuison"},"content":"import seedu.address.model.contact.Contact;","lastModifiedDate":"2023-10-03"},{"lineNumber":15,"author":{"gitId":"jacobcuison"},"content":"import seedu.address.testutil.ContactBuilder;","lastModifiedDate":"2023-10-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code AddCommand}.","lastModifiedDate":"2017-06-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-15"},{"lineNumber":20,"author":{"gitId":"jacobcuison"},"content":"public class AddContactCommandIntegrationTest {","lastModifiedDate":"2023-10-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-15"},{"lineNumber":26,"author":{"gitId":"jonyeokj"},"content":"        model \u003d new ModelManager(getTypicalContactsAddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":30,"author":{"gitId":"jacobcuison"},"content":"    public void execute_newContact_success() {","lastModifiedDate":"2023-10-03"},{"lineNumber":31,"author":{"gitId":"jacobcuison"},"content":"        Contact validContact \u003d new ContactBuilder().build();","lastModifiedDate":"2023-10-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-15"},{"lineNumber":34,"author":{"gitId":"jacobcuison"},"content":"        expectedModel.addContact(validContact);","lastModifiedDate":"2023-10-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":36,"author":{"gitId":"jacobcuison"},"content":"        assertCommandSuccess(new AddContactCommand(validContact), model,","lastModifiedDate":"2023-10-03"},{"lineNumber":37,"author":{"gitId":"jonyeokj"},"content":"                String.format(AddContactCommand.MESSAGE_SUCCESS, Messages.formatContact(validContact)),","lastModifiedDate":"2023-10-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                expectedModel);","lastModifiedDate":"2019-02-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":42,"author":{"gitId":"jacobcuison"},"content":"    public void execute_duplicateContact_throwsCommandException() {","lastModifiedDate":"2023-10-03"},{"lineNumber":43,"author":{"gitId":"jacobcuison"},"content":"        Contact contactInList \u003d model.getAddressBook().getContactList().get(0);","lastModifiedDate":"2023-10-03"},{"lineNumber":44,"author":{"gitId":"jacobcuison"},"content":"        assertCommandFailure(new AddContactCommand(contactInList), model,","lastModifiedDate":"2023-10-03"},{"lineNumber":45,"author":{"gitId":"jacobcuison"},"content":"                AddContactCommand.MESSAGE_DUPLICATE_CONTACT);","lastModifiedDate":"2023-10-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"jonyeokj":3,"jacobcuison":11,"-":34}},{"path":"src/test/java/seedu/address/logic/commands/AddContactCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"jonyeokj"},"content":"import static seedu.address.testutil.TypicalAddressBook.ALICE;","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-05-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-05-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":25,"author":{"gitId":"jacobcuison"},"content":"import seedu.address.model.contact.Contact;","lastModifiedDate":"2023-10-03"},{"lineNumber":26,"author":{"gitId":"chiayunrong"},"content":"import seedu.address.model.meeting.Meeting;","lastModifiedDate":"2023-10-02"},{"lineNumber":27,"author":{"gitId":"jacobcuison"},"content":"import seedu.address.testutil.ContactBuilder;","lastModifiedDate":"2023-10-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":29,"author":{"gitId":"jacobcuison"},"content":"public class AddContactCommandTest {","lastModifiedDate":"2023-10-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":32,"author":{"gitId":"jacobcuison"},"content":"    public void constructor_nullContact_throwsNullPointerException() {","lastModifiedDate":"2023-10-03"},{"lineNumber":33,"author":{"gitId":"jacobcuison"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddContactCommand(null));","lastModifiedDate":"2023-10-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":37,"author":{"gitId":"jacobcuison"},"content":"    public void execute_contactAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2023-10-03"},{"lineNumber":38,"author":{"gitId":"jacobcuison"},"content":"        ModelStubAcceptingContactAdded modelStub \u003d new ModelStubAcceptingContactAdded();","lastModifiedDate":"2023-10-03"},{"lineNumber":39,"author":{"gitId":"jacobcuison"},"content":"        Contact validContact \u003d new ContactBuilder().build();","lastModifiedDate":"2023-10-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":41,"author":{"gitId":"jacobcuison"},"content":"        CommandResult commandResult \u003d new AddContactCommand(validContact).execute(modelStub);","lastModifiedDate":"2023-10-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":43,"author":{"gitId":"jonyeokj"},"content":"        assertEquals(String.format(AddContactCommand.MESSAGE_SUCCESS, Messages.formatContact(validContact)),","lastModifiedDate":"2023-10-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                commandResult.getFeedbackToUser());","lastModifiedDate":"2019-02-23"},{"lineNumber":45,"author":{"gitId":"jacobcuison"},"content":"        assertEquals(Arrays.asList(validContact), modelStub.contactsAdded);","lastModifiedDate":"2023-10-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":49,"author":{"gitId":"jacobcuison"},"content":"    public void execute_duplicateContact_throwsCommandException() {","lastModifiedDate":"2023-10-03"},{"lineNumber":50,"author":{"gitId":"jacobcuison"},"content":"        Contact validContact \u003d new ContactBuilder().build();","lastModifiedDate":"2023-10-03"},{"lineNumber":51,"author":{"gitId":"jacobcuison"},"content":"        AddContactCommand addCommand \u003d new AddContactCommand(validContact);","lastModifiedDate":"2023-10-03"},{"lineNumber":52,"author":{"gitId":"jacobcuison"},"content":"        ModelStub modelStub \u003d new ModelStubWithContact(validContact);","lastModifiedDate":"2023-10-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":54,"author":{"gitId":"jacobcuison"},"content":"        assertThrows(CommandException.class, AddContactCommand.MESSAGE_DUPLICATE_CONTACT, () -\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":55,"author":{"gitId":"jacobcuison"},"content":"                addCommand.execute(modelStub));","lastModifiedDate":"2023-10-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":60,"author":{"gitId":"jacobcuison"},"content":"        Contact alice \u003d new ContactBuilder().withName(\"Alice\").build();","lastModifiedDate":"2023-10-03"},{"lineNumber":61,"author":{"gitId":"jacobcuison"},"content":"        Contact bob \u003d new ContactBuilder().withName(\"Bob\").build();","lastModifiedDate":"2023-10-03"},{"lineNumber":62,"author":{"gitId":"jacobcuison"},"content":"        AddContactCommand addAliceCommand \u003d new AddContactCommand(alice);","lastModifiedDate":"2023-10-03"},{"lineNumber":63,"author":{"gitId":"jacobcuison"},"content":"        AddContactCommand addBobCommand \u003d new AddContactCommand(bob);","lastModifiedDate":"2023-10-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"jacobcuison"},"content":"        AddContactCommand addAliceCommandCopy \u003d new AddContactCommand(alice);","lastModifiedDate":"2023-10-03"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2017-06-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":78,"author":{"gitId":"jacobcuison"},"content":"        // different contact -\u003e returns false","lastModifiedDate":"2023-10-03"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":84,"author":{"gitId":"jacobcuison"},"content":"        AddContactCommand addCommand \u003d new AddContactCommand(ALICE);","lastModifiedDate":"2023-10-03"},{"lineNumber":85,"author":{"gitId":"jacobcuison"},"content":"        String expected \u003d AddContactCommand.class.getCanonicalName() + \"{toAdd\u003d\" + ALICE + \"}\";","lastModifiedDate":"2023-10-03"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertEquals(expected, addCommand.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2017-05-12"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2017-05-12"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":115,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":124,"author":{"gitId":"jonyeokj"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2023-10-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":129,"author":{"gitId":"jonyeokj"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2023-10-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":134,"author":{"gitId":"jonyeokj"},"content":"        public boolean hasContact(Contact contact) {","lastModifiedDate":"2023-10-13"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":139,"author":{"gitId":"jonyeokj"},"content":"        public void addContact(Contact contact) {","lastModifiedDate":"2023-10-13"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-06"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":144,"author":{"gitId":"jacobcuison"},"content":"        public void deleteContact(Contact target) {","lastModifiedDate":"2023-10-03"},{"lineNumber":145,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":149,"author":{"gitId":"jacobcuison"},"content":"        public void setContact(Contact target, Contact editedContact) {","lastModifiedDate":"2023-10-03"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":154,"author":{"gitId":"jonyeokj"},"content":"        public boolean hasMeeting(Meeting meeting) {","lastModifiedDate":"2023-10-13"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":159,"author":{"gitId":"jonyeokj"},"content":"        public void addMeeting(Meeting meeting) {","lastModifiedDate":"2023-10-13"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":162,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":163,"author":{"gitId":"jonyeokj"},"content":"        @Override","lastModifiedDate":"2023-10-11"},{"lineNumber":164,"author":{"gitId":"jonyeokj"},"content":"        public void deleteMeeting(Meeting target) {","lastModifiedDate":"2023-10-13"},{"lineNumber":165,"author":{"gitId":"jonyeokj"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-11"},{"lineNumber":166,"author":{"gitId":"jonyeokj"},"content":"        }","lastModifiedDate":"2023-10-11"},{"lineNumber":167,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":168,"author":{"gitId":"jonyeokj"},"content":"        @Override","lastModifiedDate":"2023-10-11"},{"lineNumber":169,"author":{"gitId":"jonyeokj"},"content":"        public void setMeeting(Meeting target, Meeting editedMeeting) {","lastModifiedDate":"2023-10-13"},{"lineNumber":170,"author":{"gitId":"jonyeokj"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-11"},{"lineNumber":171,"author":{"gitId":"jonyeokj"},"content":"        }","lastModifiedDate":"2023-10-11"},{"lineNumber":172,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":173,"author":{"gitId":"chiayunrong"},"content":"        @Override","lastModifiedDate":"2023-10-02"},{"lineNumber":174,"author":{"gitId":"jonyeokj"},"content":"        public ObservableList\u003cContact\u003e getFilteredContactList() {","lastModifiedDate":"2023-10-13"},{"lineNumber":175,"author":{"gitId":"chiayunrong"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-02"},{"lineNumber":176,"author":{"gitId":"chiayunrong"},"content":"        }","lastModifiedDate":"2023-10-02"},{"lineNumber":177,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":178,"author":{"gitId":"chiayunrong"},"content":"        @Override","lastModifiedDate":"2023-10-03"},{"lineNumber":179,"author":{"gitId":"jonyeokj"},"content":"        public void updateFilteredContactList(Predicate\u003cContact\u003e predicate) {","lastModifiedDate":"2023-10-13"},{"lineNumber":180,"author":{"gitId":"jonyeokj"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-13"},{"lineNumber":181,"author":{"gitId":"jonyeokj"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":182,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":183,"author":{"gitId":"jonyeokj"},"content":"        @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":184,"author":{"gitId":"jonyeokj"},"content":"        public ObservableList\u003cMeeting\u003e getFilteredMeetingList() {","lastModifiedDate":"2023-10-13"},{"lineNumber":185,"author":{"gitId":"jonyeokj"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-13"},{"lineNumber":186,"author":{"gitId":"jonyeokj"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":187,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":188,"author":{"gitId":"jonyeokj"},"content":"        @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":189,"author":{"gitId":"jonyeokj"},"content":"        public void updateFilteredMeetingList(Predicate\u003cMeeting\u003e predicate) {","lastModifiedDate":"2023-10-13"},{"lineNumber":190,"author":{"gitId":"chiayunrong"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-03"},{"lineNumber":191,"author":{"gitId":"chiayunrong"},"content":"        }","lastModifiedDate":"2023-10-03"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":195,"author":{"gitId":"jacobcuison"},"content":"     * A Model stub that contains a single contact.","lastModifiedDate":"2023-10-03"},{"lineNumber":196,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":197,"author":{"gitId":"jacobcuison"},"content":"    private class ModelStubWithContact extends ModelStub {","lastModifiedDate":"2023-10-03"},{"lineNumber":198,"author":{"gitId":"jacobcuison"},"content":"        private final Contact contact;","lastModifiedDate":"2023-10-03"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":200,"author":{"gitId":"jacobcuison"},"content":"        ModelStubWithContact(Contact contact) {","lastModifiedDate":"2023-10-03"},{"lineNumber":201,"author":{"gitId":"jacobcuison"},"content":"            requireNonNull(contact);","lastModifiedDate":"2023-10-03"},{"lineNumber":202,"author":{"gitId":"jacobcuison"},"content":"            this.contact \u003d contact;","lastModifiedDate":"2023-10-03"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":206,"author":{"gitId":"jacobcuison"},"content":"        public boolean hasContact(Contact contact) {","lastModifiedDate":"2023-10-03"},{"lineNumber":207,"author":{"gitId":"jacobcuison"},"content":"            requireNonNull(contact);","lastModifiedDate":"2023-10-03"},{"lineNumber":208,"author":{"gitId":"jacobcuison"},"content":"            return this.contact.isSameContact(contact);","lastModifiedDate":"2023-10-03"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":212,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":213,"author":{"gitId":"jacobcuison"},"content":"     * A Model stub that always accept the contact being added.","lastModifiedDate":"2023-10-03"},{"lineNumber":214,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":215,"author":{"gitId":"jacobcuison"},"content":"    private class ModelStubAcceptingContactAdded extends ModelStub {","lastModifiedDate":"2023-10-03"},{"lineNumber":216,"author":{"gitId":"jacobcuison"},"content":"        final ArrayList\u003cContact\u003e contactsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-03"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":218,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07"},{"lineNumber":219,"author":{"gitId":"jacobcuison"},"content":"        public boolean hasContact(Contact contact) {","lastModifiedDate":"2023-10-03"},{"lineNumber":220,"author":{"gitId":"jacobcuison"},"content":"            requireNonNull(contact);","lastModifiedDate":"2023-10-03"},{"lineNumber":221,"author":{"gitId":"jacobcuison"},"content":"            return contactsAdded.stream().anyMatch(contact::isSameContact);","lastModifiedDate":"2023-10-03"},{"lineNumber":222,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":224,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":225,"author":{"gitId":"jacobcuison"},"content":"        public void addContact(Contact contact) {","lastModifiedDate":"2023-10-03"},{"lineNumber":226,"author":{"gitId":"jacobcuison"},"content":"            requireNonNull(contact);","lastModifiedDate":"2023-10-03"},{"lineNumber":227,"author":{"gitId":"jacobcuison"},"content":"            contactsAdded.add(contact);","lastModifiedDate":"2023-10-03"},{"lineNumber":228,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":230,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":231,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-04"},{"lineNumber":232,"author":{"gitId":"-"},"content":"            return new AddressBook();","lastModifiedDate":"2017-05-04"},{"lineNumber":233,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":234,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":236,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"jonyeokj":30,"jacobcuison":44,"chiayunrong":9,"-":153}},{"path":"src/test/java/seedu/address/logic/commands/AddContactToMeetingCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"s-peiran"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-25"},{"lineNumber":2,"author":{"gitId":"s-peiran"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":3,"author":{"gitId":"s-peiran"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-25"},{"lineNumber":4,"author":{"gitId":"s-peiran"},"content":"import static seedu.address.testutil.TypicalAddressBook.getTypicalAddressBook;","lastModifiedDate":"2023-10-25"},{"lineNumber":5,"author":{"gitId":"s-peiran"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST;","lastModifiedDate":"2023-10-25"},{"lineNumber":6,"author":{"gitId":"s-peiran"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":7,"author":{"gitId":"s-peiran"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-25"},{"lineNumber":8,"author":{"gitId":"s-peiran"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":9,"author":{"gitId":"s-peiran"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-25"},{"lineNumber":10,"author":{"gitId":"s-peiran"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-25"},{"lineNumber":11,"author":{"gitId":"s-peiran"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-10-25"},{"lineNumber":12,"author":{"gitId":"s-peiran"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-10-25"},{"lineNumber":13,"author":{"gitId":"s-peiran"},"content":"import seedu.address.model.contact.Contact;","lastModifiedDate":"2023-10-25"},{"lineNumber":14,"author":{"gitId":"s-peiran"},"content":"import seedu.address.model.meeting.Meeting;","lastModifiedDate":"2023-10-25"},{"lineNumber":15,"author":{"gitId":"s-peiran"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":16,"author":{"gitId":"s-peiran"},"content":"class AddContactToMeetingCommandTest {","lastModifiedDate":"2023-10-25"},{"lineNumber":17,"author":{"gitId":"s-peiran"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":18,"author":{"gitId":"s-peiran"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-25"},{"lineNumber":19,"author":{"gitId":"s-peiran"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":20,"author":{"gitId":"s-peiran"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":21,"author":{"gitId":"s-peiran"},"content":"    void execute_validInputs_success() throws CommandException {","lastModifiedDate":"2023-10-25"},{"lineNumber":22,"author":{"gitId":"s-peiran"},"content":"        Contact validContact \u003d model.getFilteredContactList().get(INDEX_FIRST.getZeroBased());","lastModifiedDate":"2023-10-25"},{"lineNumber":23,"author":{"gitId":"s-peiran"},"content":"        Meeting validMeeting \u003d model.getFilteredMeetingList().get(INDEX_FIRST.getZeroBased());","lastModifiedDate":"2023-10-25"},{"lineNumber":24,"author":{"gitId":"s-peiran"},"content":"        AddContactToMeetingCommand command \u003d new AddContactToMeetingCommand(validMeeting.getTitleString(),","lastModifiedDate":"2023-10-25"},{"lineNumber":25,"author":{"gitId":"s-peiran"},"content":"                validContact.getNameString());","lastModifiedDate":"2023-10-25"},{"lineNumber":26,"author":{"gitId":"s-peiran"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(String.format(\"Added contact \u0027%s\u0027 to Meeting \u0027%s\u0027\",","lastModifiedDate":"2023-10-25"},{"lineNumber":27,"author":{"gitId":"jonyeokj"},"content":"                validContact.getNameString(), validMeeting.getTitleString()), false, false);","lastModifiedDate":"2023-11-02"},{"lineNumber":28,"author":{"gitId":"s-peiran"},"content":"        CommandResult result \u003d command.execute(model);","lastModifiedDate":"2023-10-25"},{"lineNumber":29,"author":{"gitId":"s-peiran"},"content":"        assertEquals(expectedCommandResult, result);","lastModifiedDate":"2023-10-25"},{"lineNumber":30,"author":{"gitId":"s-peiran"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":31,"author":{"gitId":"s-peiran"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":32,"author":{"gitId":"s-peiran"},"content":"}","lastModifiedDate":"2023-10-25"}],"authorContributionMap":{"jonyeokj":1,"s-peiran":31}},{"path":"src/test/java/seedu/address/logic/commands/AddMeetingCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chiayunrong"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-03"},{"lineNumber":2,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":3,"author":{"gitId":"chiayunrong"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-03"},{"lineNumber":4,"author":{"gitId":"chiayunrong"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-03"},{"lineNumber":5,"author":{"gitId":"chiayunrong"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-03"},{"lineNumber":6,"author":{"gitId":"chiayunrong"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-03"},{"lineNumber":7,"author":{"gitId":"chiayunrong"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-03"},{"lineNumber":8,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":9,"author":{"gitId":"chiayunrong"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-10-03"},{"lineNumber":10,"author":{"gitId":"chiayunrong"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-10-03"},{"lineNumber":11,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":12,"author":{"gitId":"chiayunrong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-03"},{"lineNumber":13,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":14,"author":{"gitId":"chiayunrong"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-10-03"},{"lineNumber":15,"author":{"gitId":"chiayunrong"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2023-10-03"},{"lineNumber":16,"author":{"gitId":"chiayunrong"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-03"},{"lineNumber":17,"author":{"gitId":"chiayunrong"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-03"},{"lineNumber":18,"author":{"gitId":"chiayunrong"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-03"},{"lineNumber":19,"author":{"gitId":"chiayunrong"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2023-10-03"},{"lineNumber":20,"author":{"gitId":"chiayunrong"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2023-10-03"},{"lineNumber":21,"author":{"gitId":"chiayunrong"},"content":"import seedu.address.model.contact.Contact;","lastModifiedDate":"2023-10-03"},{"lineNumber":22,"author":{"gitId":"chiayunrong"},"content":"import seedu.address.model.meeting.Meeting;","lastModifiedDate":"2023-10-03"},{"lineNumber":23,"author":{"gitId":"chiayunrong"},"content":"import seedu.address.testutil.MeetingBuilder;","lastModifiedDate":"2023-10-03"},{"lineNumber":24,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":25,"author":{"gitId":"chiayunrong"},"content":"public class AddMeetingCommandTest {","lastModifiedDate":"2023-10-03"},{"lineNumber":26,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":27,"author":{"gitId":"chiayunrong"},"content":"    @Test","lastModifiedDate":"2023-10-03"},{"lineNumber":28,"author":{"gitId":"chiayunrong"},"content":"    public void constructor_nullMeeting_throwsNullPointerException() {","lastModifiedDate":"2023-10-03"},{"lineNumber":29,"author":{"gitId":"chiayunrong"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddMeetingCommand(null));","lastModifiedDate":"2023-10-03"},{"lineNumber":30,"author":{"gitId":"chiayunrong"},"content":"    }","lastModifiedDate":"2023-10-03"},{"lineNumber":31,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":32,"author":{"gitId":"chiayunrong"},"content":"    @Test","lastModifiedDate":"2023-10-03"},{"lineNumber":33,"author":{"gitId":"chiayunrong"},"content":"    public void execute_meetingAcceptedByModel_addSucessful() throws CommandException {","lastModifiedDate":"2023-10-03"},{"lineNumber":34,"author":{"gitId":"chiayunrong"},"content":"        Meeting validMeeting \u003d new MeetingBuilder().build();","lastModifiedDate":"2023-10-03"},{"lineNumber":35,"author":{"gitId":"chiayunrong"},"content":"        ModelStubEmpty modelStubEmpty \u003d new ModelStubEmpty();","lastModifiedDate":"2023-10-03"},{"lineNumber":36,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":37,"author":{"gitId":"chiayunrong"},"content":"        CommandResult commandResult \u003d new AddMeetingCommand(validMeeting).execute(modelStubEmpty);","lastModifiedDate":"2023-10-03"},{"lineNumber":38,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":39,"author":{"gitId":"chiayunrong"},"content":"        assertEquals(String.format(AddMeetingCommand.MESSAGE_SUCCESS, Messages.formatMeeting(validMeeting)),","lastModifiedDate":"2023-10-03"},{"lineNumber":40,"author":{"gitId":"chiayunrong"},"content":"                commandResult.getFeedbackToUser());","lastModifiedDate":"2023-10-03"},{"lineNumber":41,"author":{"gitId":"chiayunrong"},"content":"        assertEquals(validMeeting, modelStubEmpty.getMeeting());","lastModifiedDate":"2023-10-03"},{"lineNumber":42,"author":{"gitId":"chiayunrong"},"content":"    }","lastModifiedDate":"2023-10-03"},{"lineNumber":43,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":44,"author":{"gitId":"chiayunrong"},"content":"    @Test","lastModifiedDate":"2023-10-03"},{"lineNumber":45,"author":{"gitId":"chiayunrong"},"content":"    public void equals() {","lastModifiedDate":"2023-10-03"},{"lineNumber":46,"author":{"gitId":"chiayunrong"},"content":"        Meeting validMeeting1 \u003d new MeetingBuilder().build();","lastModifiedDate":"2023-10-03"},{"lineNumber":47,"author":{"gitId":"chiayunrong"},"content":"        Meeting validMeeting2 \u003d new MeetingBuilder().build();","lastModifiedDate":"2023-10-03"},{"lineNumber":48,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":49,"author":{"gitId":"chiayunrong"},"content":"        AddMeetingCommand addM1Command \u003d new AddMeetingCommand(validMeeting1);","lastModifiedDate":"2023-10-03"},{"lineNumber":50,"author":{"gitId":"chiayunrong"},"content":"        AddMeetingCommand addM2Command \u003d new AddMeetingCommand(validMeeting2);","lastModifiedDate":"2023-10-03"},{"lineNumber":51,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":52,"author":{"gitId":"chiayunrong"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-03"},{"lineNumber":53,"author":{"gitId":"chiayunrong"},"content":"        assertTrue(addM1Command.equals(addM1Command));","lastModifiedDate":"2023-10-03"},{"lineNumber":54,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":55,"author":{"gitId":"chiayunrong"},"content":"        // same fields except id -\u003e returns true","lastModifiedDate":"2023-10-03"},{"lineNumber":56,"author":{"gitId":"chiayunrong"},"content":"        assertTrue(addM1Command.equals(addM2Command));","lastModifiedDate":"2023-10-03"},{"lineNumber":57,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":58,"author":{"gitId":"chiayunrong"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2023-10-03"},{"lineNumber":59,"author":{"gitId":"chiayunrong"},"content":"        assertFalse(addM1Command.equals(1));","lastModifiedDate":"2023-10-03"},{"lineNumber":60,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":61,"author":{"gitId":"chiayunrong"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-03"},{"lineNumber":62,"author":{"gitId":"chiayunrong"},"content":"        assertFalse(addM1Command.equals(null));","lastModifiedDate":"2023-10-03"},{"lineNumber":63,"author":{"gitId":"chiayunrong"},"content":"    }","lastModifiedDate":"2023-10-03"},{"lineNumber":64,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":65,"author":{"gitId":"chiayunrong"},"content":"    @Test","lastModifiedDate":"2023-10-03"},{"lineNumber":66,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":67,"author":{"gitId":"chiayunrong"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-03"},{"lineNumber":68,"author":{"gitId":"chiayunrong"},"content":"        Meeting validMeeting \u003d new MeetingBuilder().build();","lastModifiedDate":"2023-10-03"},{"lineNumber":69,"author":{"gitId":"chiayunrong"},"content":"        AddMeetingCommand addMeetingCommand \u003d new AddMeetingCommand(validMeeting);","lastModifiedDate":"2023-10-03"},{"lineNumber":70,"author":{"gitId":"chiayunrong"},"content":"        String expected \u003d AddMeetingCommand.class.getCanonicalName() + \"{toAdd\u003d\" + validMeeting + \"}\";","lastModifiedDate":"2023-10-03"},{"lineNumber":71,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":72,"author":{"gitId":"chiayunrong"},"content":"        String actual \u003d addMeetingCommand.toString();","lastModifiedDate":"2023-10-03"},{"lineNumber":73,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":74,"author":{"gitId":"chiayunrong"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2023-10-03"},{"lineNumber":75,"author":{"gitId":"chiayunrong"},"content":"    }","lastModifiedDate":"2023-10-03"},{"lineNumber":76,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":77,"author":{"gitId":"chiayunrong"},"content":"    /**","lastModifiedDate":"2023-10-03"},{"lineNumber":78,"author":{"gitId":"chiayunrong"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2023-10-03"},{"lineNumber":79,"author":{"gitId":"chiayunrong"},"content":"     */","lastModifiedDate":"2023-10-03"},{"lineNumber":80,"author":{"gitId":"chiayunrong"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2023-10-03"},{"lineNumber":81,"author":{"gitId":"chiayunrong"},"content":"        @Override","lastModifiedDate":"2023-10-03"},{"lineNumber":82,"author":{"gitId":"chiayunrong"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2023-10-03"},{"lineNumber":83,"author":{"gitId":"chiayunrong"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-03"},{"lineNumber":84,"author":{"gitId":"chiayunrong"},"content":"        }","lastModifiedDate":"2023-10-03"},{"lineNumber":85,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":86,"author":{"gitId":"chiayunrong"},"content":"        @Override","lastModifiedDate":"2023-10-03"},{"lineNumber":87,"author":{"gitId":"chiayunrong"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2023-10-03"},{"lineNumber":88,"author":{"gitId":"chiayunrong"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-03"},{"lineNumber":89,"author":{"gitId":"chiayunrong"},"content":"        }","lastModifiedDate":"2023-10-03"},{"lineNumber":90,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":91,"author":{"gitId":"chiayunrong"},"content":"        @Override","lastModifiedDate":"2023-10-03"},{"lineNumber":92,"author":{"gitId":"chiayunrong"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2023-10-03"},{"lineNumber":93,"author":{"gitId":"chiayunrong"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-03"},{"lineNumber":94,"author":{"gitId":"chiayunrong"},"content":"        }","lastModifiedDate":"2023-10-03"},{"lineNumber":95,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":96,"author":{"gitId":"chiayunrong"},"content":"        @Override","lastModifiedDate":"2023-10-03"},{"lineNumber":97,"author":{"gitId":"chiayunrong"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2023-10-03"},{"lineNumber":98,"author":{"gitId":"chiayunrong"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-03"},{"lineNumber":99,"author":{"gitId":"chiayunrong"},"content":"        }","lastModifiedDate":"2023-10-03"},{"lineNumber":100,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":101,"author":{"gitId":"chiayunrong"},"content":"        @Override","lastModifiedDate":"2023-10-03"},{"lineNumber":102,"author":{"gitId":"chiayunrong"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2023-10-03"},{"lineNumber":103,"author":{"gitId":"chiayunrong"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-03"},{"lineNumber":104,"author":{"gitId":"chiayunrong"},"content":"        }","lastModifiedDate":"2023-10-03"},{"lineNumber":105,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":106,"author":{"gitId":"chiayunrong"},"content":"        @Override","lastModifiedDate":"2023-10-03"},{"lineNumber":107,"author":{"gitId":"chiayunrong"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2023-10-03"},{"lineNumber":108,"author":{"gitId":"chiayunrong"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-03"},{"lineNumber":109,"author":{"gitId":"chiayunrong"},"content":"        }","lastModifiedDate":"2023-10-03"},{"lineNumber":110,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":111,"author":{"gitId":"chiayunrong"},"content":"        @Override","lastModifiedDate":"2023-10-03"},{"lineNumber":112,"author":{"gitId":"jonyeokj"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2023-10-13"},{"lineNumber":113,"author":{"gitId":"chiayunrong"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-03"},{"lineNumber":114,"author":{"gitId":"chiayunrong"},"content":"        }","lastModifiedDate":"2023-10-03"},{"lineNumber":115,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":116,"author":{"gitId":"chiayunrong"},"content":"        @Override","lastModifiedDate":"2023-10-03"},{"lineNumber":117,"author":{"gitId":"jonyeokj"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2023-10-13"},{"lineNumber":118,"author":{"gitId":"chiayunrong"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-03"},{"lineNumber":119,"author":{"gitId":"chiayunrong"},"content":"        }","lastModifiedDate":"2023-10-03"},{"lineNumber":120,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":121,"author":{"gitId":"chiayunrong"},"content":"        @Override","lastModifiedDate":"2023-10-03"},{"lineNumber":122,"author":{"gitId":"jonyeokj"},"content":"        public boolean hasContact(Contact contact) {","lastModifiedDate":"2023-10-13"},{"lineNumber":123,"author":{"gitId":"chiayunrong"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-03"},{"lineNumber":124,"author":{"gitId":"chiayunrong"},"content":"        }","lastModifiedDate":"2023-10-03"},{"lineNumber":125,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":126,"author":{"gitId":"chiayunrong"},"content":"        @Override","lastModifiedDate":"2023-10-03"},{"lineNumber":127,"author":{"gitId":"jonyeokj"},"content":"        public void addContact(Contact contact) {","lastModifiedDate":"2023-10-13"},{"lineNumber":128,"author":{"gitId":"chiayunrong"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-03"},{"lineNumber":129,"author":{"gitId":"chiayunrong"},"content":"        }","lastModifiedDate":"2023-10-03"},{"lineNumber":130,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":131,"author":{"gitId":"chiayunrong"},"content":"        @Override","lastModifiedDate":"2023-10-03"},{"lineNumber":132,"author":{"gitId":"chiayunrong"},"content":"        public void deleteContact(Contact target) {","lastModifiedDate":"2023-10-03"},{"lineNumber":133,"author":{"gitId":"chiayunrong"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-03"},{"lineNumber":134,"author":{"gitId":"chiayunrong"},"content":"        }","lastModifiedDate":"2023-10-03"},{"lineNumber":135,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":136,"author":{"gitId":"chiayunrong"},"content":"        @Override","lastModifiedDate":"2023-10-03"},{"lineNumber":137,"author":{"gitId":"jonyeokj"},"content":"        public void setContact(Contact target, Contact editedContact) {","lastModifiedDate":"2023-10-13"},{"lineNumber":138,"author":{"gitId":"chiayunrong"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-03"},{"lineNumber":139,"author":{"gitId":"chiayunrong"},"content":"        }","lastModifiedDate":"2023-10-03"},{"lineNumber":140,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":141,"author":{"gitId":"chiayunrong"},"content":"        @Override","lastModifiedDate":"2023-10-03"},{"lineNumber":142,"author":{"gitId":"jonyeokj"},"content":"        public boolean hasMeeting(Meeting meeting) {","lastModifiedDate":"2023-10-13"},{"lineNumber":143,"author":{"gitId":"chiayunrong"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-03"},{"lineNumber":144,"author":{"gitId":"chiayunrong"},"content":"        }","lastModifiedDate":"2023-10-03"},{"lineNumber":145,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":146,"author":{"gitId":"chiayunrong"},"content":"        @Override","lastModifiedDate":"2023-10-03"},{"lineNumber":147,"author":{"gitId":"jonyeokj"},"content":"        public void addMeeting(Meeting meeting) {","lastModifiedDate":"2023-10-13"},{"lineNumber":148,"author":{"gitId":"chiayunrong"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-03"},{"lineNumber":149,"author":{"gitId":"chiayunrong"},"content":"        }","lastModifiedDate":"2023-10-03"},{"lineNumber":150,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":151,"author":{"gitId":"jonyeokj"},"content":"        @Override","lastModifiedDate":"2023-10-11"},{"lineNumber":152,"author":{"gitId":"jonyeokj"},"content":"        public void deleteMeeting(Meeting target) {","lastModifiedDate":"2023-10-13"},{"lineNumber":153,"author":{"gitId":"jonyeokj"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-11"},{"lineNumber":154,"author":{"gitId":"jonyeokj"},"content":"        }","lastModifiedDate":"2023-10-11"},{"lineNumber":155,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":156,"author":{"gitId":"jonyeokj"},"content":"        @Override","lastModifiedDate":"2023-10-11"},{"lineNumber":157,"author":{"gitId":"jonyeokj"},"content":"        public void setMeeting(Meeting target, Meeting editedMeeting) {","lastModifiedDate":"2023-10-13"},{"lineNumber":158,"author":{"gitId":"jonyeokj"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-11"},{"lineNumber":159,"author":{"gitId":"jonyeokj"},"content":"        }","lastModifiedDate":"2023-10-11"},{"lineNumber":160,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":161,"author":{"gitId":"chiayunrong"},"content":"        @Override","lastModifiedDate":"2023-10-03"},{"lineNumber":162,"author":{"gitId":"jonyeokj"},"content":"        public ObservableList\u003cContact\u003e getFilteredContactList() {","lastModifiedDate":"2023-10-13"},{"lineNumber":163,"author":{"gitId":"chiayunrong"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-03"},{"lineNumber":164,"author":{"gitId":"chiayunrong"},"content":"        }","lastModifiedDate":"2023-10-03"},{"lineNumber":165,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":166,"author":{"gitId":"chiayunrong"},"content":"        @Override","lastModifiedDate":"2023-10-03"},{"lineNumber":167,"author":{"gitId":"jonyeokj"},"content":"        public void updateFilteredContactList(Predicate\u003cContact\u003e predicate) {","lastModifiedDate":"2023-10-13"},{"lineNumber":168,"author":{"gitId":"jonyeokj"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-13"},{"lineNumber":169,"author":{"gitId":"jonyeokj"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":170,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":171,"author":{"gitId":"jonyeokj"},"content":"        @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":172,"author":{"gitId":"jonyeokj"},"content":"        public ObservableList\u003cMeeting\u003e getFilteredMeetingList() {","lastModifiedDate":"2023-10-13"},{"lineNumber":173,"author":{"gitId":"jonyeokj"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-13"},{"lineNumber":174,"author":{"gitId":"jonyeokj"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":175,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":176,"author":{"gitId":"jonyeokj"},"content":"        @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":177,"author":{"gitId":"jonyeokj"},"content":"        public void updateFilteredMeetingList(Predicate\u003cMeeting\u003e predicate) {","lastModifiedDate":"2023-10-13"},{"lineNumber":178,"author":{"gitId":"chiayunrong"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-03"},{"lineNumber":179,"author":{"gitId":"chiayunrong"},"content":"        }","lastModifiedDate":"2023-10-03"},{"lineNumber":180,"author":{"gitId":"chiayunrong"},"content":"    }","lastModifiedDate":"2023-10-03"},{"lineNumber":181,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":182,"author":{"gitId":"chiayunrong"},"content":"    /**","lastModifiedDate":"2023-10-03"},{"lineNumber":183,"author":{"gitId":"chiayunrong"},"content":"     * A Model stub that contains a single person.","lastModifiedDate":"2023-10-03"},{"lineNumber":184,"author":{"gitId":"chiayunrong"},"content":"     */","lastModifiedDate":"2023-10-03"},{"lineNumber":185,"author":{"gitId":"chiayunrong"},"content":"    private class ModelStubEmpty extends AddMeetingCommandTest.ModelStub {","lastModifiedDate":"2023-10-03"},{"lineNumber":186,"author":{"gitId":"chiayunrong"},"content":"        private Meeting meeting;","lastModifiedDate":"2023-10-03"},{"lineNumber":187,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":188,"author":{"gitId":"chiayunrong"},"content":"        @Override","lastModifiedDate":"2023-10-03"},{"lineNumber":189,"author":{"gitId":"chiayunrong"},"content":"        public void addMeeting(Meeting meeting) {","lastModifiedDate":"2023-10-03"},{"lineNumber":190,"author":{"gitId":"chiayunrong"},"content":"            requireNonNull(meeting);","lastModifiedDate":"2023-10-03"},{"lineNumber":191,"author":{"gitId":"chiayunrong"},"content":"            this.meeting \u003d meeting;","lastModifiedDate":"2023-10-03"},{"lineNumber":192,"author":{"gitId":"chiayunrong"},"content":"        }","lastModifiedDate":"2023-10-03"},{"lineNumber":193,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":194,"author":{"gitId":"chiayunrong"},"content":"        public Meeting getMeeting() {","lastModifiedDate":"2023-10-03"},{"lineNumber":195,"author":{"gitId":"chiayunrong"},"content":"            return meeting;","lastModifiedDate":"2023-10-03"},{"lineNumber":196,"author":{"gitId":"chiayunrong"},"content":"        }","lastModifiedDate":"2023-10-03"},{"lineNumber":197,"author":{"gitId":"chiayunrong"},"content":"    }","lastModifiedDate":"2023-10-03"},{"lineNumber":198,"author":{"gitId":"chiayunrong"},"content":"}","lastModifiedDate":"2023-10-03"}],"authorContributionMap":{"jonyeokj":29,"chiayunrong":169}},{"path":"src/test/java/seedu/address/logic/commands/AddMeetingNoteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jacobcuison"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-11-02"},{"lineNumber":2,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":3,"author":{"gitId":"jacobcuison"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-11-02"},{"lineNumber":4,"author":{"gitId":"jacobcuison"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-11-02"},{"lineNumber":5,"author":{"gitId":"jacobcuison"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NOTE_AMY;","lastModifiedDate":"2023-11-02"},{"lineNumber":6,"author":{"gitId":"jacobcuison"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NOTE_BOB;","lastModifiedDate":"2023-11-02"},{"lineNumber":7,"author":{"gitId":"jacobcuison"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-11-02"},{"lineNumber":8,"author":{"gitId":"jacobcuison"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-11-02"},{"lineNumber":9,"author":{"gitId":"jacobcuison"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showMeetingAtIndex;","lastModifiedDate":"2023-11-02"},{"lineNumber":10,"author":{"gitId":"jacobcuison"},"content":"import static seedu.address.testutil.TypicalAddressBook.getTypicalAddressBook;","lastModifiedDate":"2023-11-02"},{"lineNumber":11,"author":{"gitId":"jacobcuison"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST;","lastModifiedDate":"2023-11-02"},{"lineNumber":12,"author":{"gitId":"jacobcuison"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND;","lastModifiedDate":"2023-11-02"},{"lineNumber":13,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":14,"author":{"gitId":"jacobcuison"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-11-02"},{"lineNumber":15,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":16,"author":{"gitId":"jacobcuison"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-11-02"},{"lineNumber":17,"author":{"gitId":"jacobcuison"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-11-02"},{"lineNumber":18,"author":{"gitId":"jacobcuison"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2023-11-02"},{"lineNumber":19,"author":{"gitId":"jacobcuison"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-11-02"},{"lineNumber":20,"author":{"gitId":"jacobcuison"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-11-02"},{"lineNumber":21,"author":{"gitId":"jacobcuison"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-11-02"},{"lineNumber":22,"author":{"gitId":"jacobcuison"},"content":"import seedu.address.model.meeting.Meeting;","lastModifiedDate":"2023-11-02"},{"lineNumber":23,"author":{"gitId":"jacobcuison"},"content":"import seedu.address.model.note.Note;","lastModifiedDate":"2023-11-02"},{"lineNumber":24,"author":{"gitId":"jacobcuison"},"content":"import seedu.address.testutil.MeetingBuilder;","lastModifiedDate":"2023-11-02"},{"lineNumber":25,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":26,"author":{"gitId":"jacobcuison"},"content":"/**","lastModifiedDate":"2023-11-02"},{"lineNumber":27,"author":{"gitId":"jacobcuison"},"content":" * Contains integration tests (interaction with the Model) and unit tests for AddMeetingNoteCommand.","lastModifiedDate":"2023-11-02"},{"lineNumber":28,"author":{"gitId":"jacobcuison"},"content":" */","lastModifiedDate":"2023-11-02"},{"lineNumber":29,"author":{"gitId":"jacobcuison"},"content":"public class AddMeetingNoteCommandTest {","lastModifiedDate":"2023-11-02"},{"lineNumber":30,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":31,"author":{"gitId":"jacobcuison"},"content":"    private static final String NOTE_STUB \u003d \"Some note\";","lastModifiedDate":"2023-11-02"},{"lineNumber":32,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":33,"author":{"gitId":"jacobcuison"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-11-02"},{"lineNumber":34,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":35,"author":{"gitId":"jacobcuison"},"content":"    @Test","lastModifiedDate":"2023-11-02"},{"lineNumber":36,"author":{"gitId":"jacobcuison"},"content":"    public void execute_addNoteUnfilteredList_success() {","lastModifiedDate":"2023-11-02"},{"lineNumber":37,"author":{"gitId":"jacobcuison"},"content":"        Meeting firstMeeting \u003d model.getFilteredMeetingList().get(INDEX_SECOND.getZeroBased());","lastModifiedDate":"2023-11-02"},{"lineNumber":38,"author":{"gitId":"jacobcuison"},"content":"        Meeting editedMeeting \u003d new MeetingBuilder(firstMeeting).withNotes(NOTE_STUB).build();","lastModifiedDate":"2023-11-02"},{"lineNumber":39,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":40,"author":{"gitId":"jacobcuison"},"content":"        AddMeetingNoteCommand addMeetingNoteCommand \u003d new AddMeetingNoteCommand(INDEX_SECOND, new Note(NOTE_STUB));","lastModifiedDate":"2023-11-02"},{"lineNumber":41,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":42,"author":{"gitId":"jacobcuison"},"content":"        String expectedMessage \u003d String.format(AddMeetingNoteCommand.MESSAGE_ADD_NOTE_SUCCESS, editedMeeting);","lastModifiedDate":"2023-11-02"},{"lineNumber":43,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":44,"author":{"gitId":"jacobcuison"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2023-11-02"},{"lineNumber":45,"author":{"gitId":"jacobcuison"},"content":"        expectedModel.setMeeting(firstMeeting, editedMeeting);","lastModifiedDate":"2023-11-02"},{"lineNumber":46,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":47,"author":{"gitId":"jacobcuison"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage, false, false);","lastModifiedDate":"2023-11-02"},{"lineNumber":48,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":49,"author":{"gitId":"jacobcuison"},"content":"        assertCommandSuccess(addMeetingNoteCommand, model, expectedCommandResult, expectedModel);","lastModifiedDate":"2023-11-02"},{"lineNumber":50,"author":{"gitId":"jacobcuison"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":51,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":52,"author":{"gitId":"jacobcuison"},"content":"    // Delete functionality has not been implemented yet","lastModifiedDate":"2023-11-02"},{"lineNumber":53,"author":{"gitId":"jacobcuison"},"content":"    //    @Test","lastModifiedDate":"2023-11-02"},{"lineNumber":54,"author":{"gitId":"jacobcuison"},"content":"    //    public void execute_deleteNoteUnfilteredList_success() {","lastModifiedDate":"2023-11-02"},{"lineNumber":55,"author":{"gitId":"jacobcuison"},"content":"    //        Contact firstPerson \u003d model.getFilteredContactList().get(INDEX_FIRST.getZeroBased());","lastModifiedDate":"2023-11-02"},{"lineNumber":56,"author":{"gitId":"jacobcuison"},"content":"    //        Contact editedPerson \u003d new ContactBuilder(firstPerson).withNotes(\"\").build();","lastModifiedDate":"2023-11-02"},{"lineNumber":57,"author":{"gitId":"jacobcuison"},"content":"    //","lastModifiedDate":"2023-11-02"},{"lineNumber":58,"author":{"gitId":"jacobcuison"},"content":"    //        AddNoteCommand addNoteCommand \u003d new AddNoteCommand(INDEX_FIRST,","lastModifiedDate":"2023-11-02"},{"lineNumber":59,"author":{"gitId":"jacobcuison"},"content":"    //                new Note(editedPerson.getNotes().toString()));","lastModifiedDate":"2023-11-02"},{"lineNumber":60,"author":{"gitId":"jacobcuison"},"content":"    //","lastModifiedDate":"2023-11-02"},{"lineNumber":61,"author":{"gitId":"jacobcuison"},"content":"    //        String expectedMessage \u003d String.format(AddNoteCommand.MESSAGE_ADD_NOTE_SUCCESS, editedPerson);","lastModifiedDate":"2023-11-02"},{"lineNumber":62,"author":{"gitId":"jacobcuison"},"content":"    //","lastModifiedDate":"2023-11-02"},{"lineNumber":63,"author":{"gitId":"jacobcuison"},"content":"    //        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2023-11-02"},{"lineNumber":64,"author":{"gitId":"jacobcuison"},"content":"    //        expectedModel.setContact(firstPerson, editedPerson);","lastModifiedDate":"2023-11-02"},{"lineNumber":65,"author":{"gitId":"jacobcuison"},"content":"    //","lastModifiedDate":"2023-11-02"},{"lineNumber":66,"author":{"gitId":"jacobcuison"},"content":"    //        assertCommandSuccess(addNoteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-11-02"},{"lineNumber":67,"author":{"gitId":"jacobcuison"},"content":"    //    }","lastModifiedDate":"2023-11-02"},{"lineNumber":68,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":69,"author":{"gitId":"jacobcuison"},"content":"    @Test","lastModifiedDate":"2023-11-02"},{"lineNumber":70,"author":{"gitId":"jacobcuison"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2023-11-02"},{"lineNumber":71,"author":{"gitId":"jacobcuison"},"content":"        showMeetingAtIndex(model, INDEX_FIRST);","lastModifiedDate":"2023-11-02"},{"lineNumber":72,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":73,"author":{"gitId":"jacobcuison"},"content":"        Meeting firstMeeting \u003d model.getFilteredMeetingList().get(INDEX_FIRST.getZeroBased());","lastModifiedDate":"2023-11-02"},{"lineNumber":74,"author":{"gitId":"jacobcuison"},"content":"        Meeting editedMeeting \u003d new MeetingBuilder(model.getFilteredMeetingList()","lastModifiedDate":"2023-11-02"},{"lineNumber":75,"author":{"gitId":"jacobcuison"},"content":"                .get(INDEX_FIRST.getZeroBased()))","lastModifiedDate":"2023-11-02"},{"lineNumber":76,"author":{"gitId":"jacobcuison"},"content":"                .withNotes(NOTE_STUB).build();","lastModifiedDate":"2023-11-02"},{"lineNumber":77,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":78,"author":{"gitId":"jacobcuison"},"content":"        AddMeetingNoteCommand addMeetingNoteCommand \u003d new AddMeetingNoteCommand(INDEX_FIRST, new Note(NOTE_STUB));","lastModifiedDate":"2023-11-02"},{"lineNumber":79,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":80,"author":{"gitId":"jacobcuison"},"content":"        String expectedMessage \u003d String.format(AddMeetingNoteCommand.MESSAGE_ADD_NOTE_SUCCESS, editedMeeting);","lastModifiedDate":"2023-11-02"},{"lineNumber":81,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":82,"author":{"gitId":"jacobcuison"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2023-11-02"},{"lineNumber":83,"author":{"gitId":"jacobcuison"},"content":"        expectedModel.setMeeting(firstMeeting, editedMeeting);","lastModifiedDate":"2023-11-02"},{"lineNumber":84,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":85,"author":{"gitId":"jacobcuison"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage, false, false);","lastModifiedDate":"2023-11-02"},{"lineNumber":86,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":87,"author":{"gitId":"jacobcuison"},"content":"        assertCommandSuccess(addMeetingNoteCommand, model, expectedCommandResult, expectedModel);","lastModifiedDate":"2023-11-02"},{"lineNumber":88,"author":{"gitId":"jacobcuison"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":89,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":90,"author":{"gitId":"jacobcuison"},"content":"    @Test","lastModifiedDate":"2023-11-02"},{"lineNumber":91,"author":{"gitId":"jacobcuison"},"content":"    public void execute_invalidMeetingIndexUnfilteredList_failure() {","lastModifiedDate":"2023-11-02"},{"lineNumber":92,"author":{"gitId":"jacobcuison"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredMeetingList().size() + 1);","lastModifiedDate":"2023-11-02"},{"lineNumber":93,"author":{"gitId":"jacobcuison"},"content":"        AddMeetingNoteCommand addMeetingNoteCommand \u003d new AddMeetingNoteCommand(outOfBoundIndex,","lastModifiedDate":"2023-11-02"},{"lineNumber":94,"author":{"gitId":"jacobcuison"},"content":"                new Note(VALID_NOTE_BOB));","lastModifiedDate":"2023-11-02"},{"lineNumber":95,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":96,"author":{"gitId":"jacobcuison"},"content":"        assertCommandFailure(addMeetingNoteCommand, model, Messages.MESSAGE_INVALID_MEETING_DISPLAYED_INDEX);","lastModifiedDate":"2023-11-02"},{"lineNumber":97,"author":{"gitId":"jacobcuison"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":98,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":99,"author":{"gitId":"jacobcuison"},"content":"    /**","lastModifiedDate":"2023-11-02"},{"lineNumber":100,"author":{"gitId":"jacobcuison"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2023-11-02"},{"lineNumber":101,"author":{"gitId":"jacobcuison"},"content":"     * but smaller than size of address book","lastModifiedDate":"2023-11-02"},{"lineNumber":102,"author":{"gitId":"jacobcuison"},"content":"     */","lastModifiedDate":"2023-11-02"},{"lineNumber":103,"author":{"gitId":"jacobcuison"},"content":"    @Test","lastModifiedDate":"2023-11-02"},{"lineNumber":104,"author":{"gitId":"jacobcuison"},"content":"    public void execute_invalidMeetingIndexFilteredList_failure() {","lastModifiedDate":"2023-11-02"},{"lineNumber":105,"author":{"gitId":"jacobcuison"},"content":"        showMeetingAtIndex(model, INDEX_FIRST);","lastModifiedDate":"2023-11-02"},{"lineNumber":106,"author":{"gitId":"jacobcuison"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND;","lastModifiedDate":"2023-11-02"},{"lineNumber":107,"author":{"gitId":"jacobcuison"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2023-11-02"},{"lineNumber":108,"author":{"gitId":"jacobcuison"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getMeetingList().size());","lastModifiedDate":"2023-11-02"},{"lineNumber":109,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":110,"author":{"gitId":"jacobcuison"},"content":"        AddMeetingNoteCommand addMeetingNoteCommand \u003d new AddMeetingNoteCommand(outOfBoundIndex,","lastModifiedDate":"2023-11-02"},{"lineNumber":111,"author":{"gitId":"jacobcuison"},"content":"                new Note(VALID_NOTE_BOB));","lastModifiedDate":"2023-11-02"},{"lineNumber":112,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":113,"author":{"gitId":"jacobcuison"},"content":"        assertCommandFailure(addMeetingNoteCommand, model, Messages.MESSAGE_INVALID_MEETING_DISPLAYED_INDEX);","lastModifiedDate":"2023-11-02"},{"lineNumber":114,"author":{"gitId":"jacobcuison"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":115,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":116,"author":{"gitId":"jacobcuison"},"content":"    @Test","lastModifiedDate":"2023-11-02"},{"lineNumber":117,"author":{"gitId":"jacobcuison"},"content":"    public void equals() {","lastModifiedDate":"2023-11-02"},{"lineNumber":118,"author":{"gitId":"jacobcuison"},"content":"        final AddMeetingNoteCommand standardCommand \u003d new AddMeetingNoteCommand(INDEX_FIRST,","lastModifiedDate":"2023-11-02"},{"lineNumber":119,"author":{"gitId":"jacobcuison"},"content":"                new Note(VALID_NOTE_AMY));","lastModifiedDate":"2023-11-02"},{"lineNumber":120,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":121,"author":{"gitId":"jacobcuison"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-11-02"},{"lineNumber":122,"author":{"gitId":"jacobcuison"},"content":"        AddMeetingNoteCommand commandWithSameValues \u003d new AddMeetingNoteCommand(INDEX_FIRST,","lastModifiedDate":"2023-11-02"},{"lineNumber":123,"author":{"gitId":"jacobcuison"},"content":"                new Note(VALID_NOTE_AMY));","lastModifiedDate":"2023-11-02"},{"lineNumber":124,"author":{"gitId":"jacobcuison"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2023-11-02"},{"lineNumber":125,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":126,"author":{"gitId":"jacobcuison"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-11-02"},{"lineNumber":127,"author":{"gitId":"jacobcuison"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2023-11-02"},{"lineNumber":128,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":129,"author":{"gitId":"jacobcuison"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-11-02"},{"lineNumber":130,"author":{"gitId":"jacobcuison"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2023-11-02"},{"lineNumber":131,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":132,"author":{"gitId":"jacobcuison"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-11-02"},{"lineNumber":133,"author":{"gitId":"jacobcuison"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2023-11-02"},{"lineNumber":134,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":135,"author":{"gitId":"jacobcuison"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2023-11-02"},{"lineNumber":136,"author":{"gitId":"jacobcuison"},"content":"        assertFalse(standardCommand.equals(new AddMeetingNoteCommand(INDEX_SECOND,","lastModifiedDate":"2023-11-02"},{"lineNumber":137,"author":{"gitId":"jacobcuison"},"content":"                new Note(VALID_NOTE_AMY))));","lastModifiedDate":"2023-11-02"},{"lineNumber":138,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":139,"author":{"gitId":"jacobcuison"},"content":"        // different note -\u003e returns false","lastModifiedDate":"2023-11-02"},{"lineNumber":140,"author":{"gitId":"jacobcuison"},"content":"        assertFalse(standardCommand.equals(new AddMeetingNoteCommand(INDEX_FIRST,","lastModifiedDate":"2023-11-02"},{"lineNumber":141,"author":{"gitId":"jacobcuison"},"content":"                new Note(VALID_NOTE_BOB))));","lastModifiedDate":"2023-11-02"},{"lineNumber":142,"author":{"gitId":"jacobcuison"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":143,"author":{"gitId":"jacobcuison"},"content":"}","lastModifiedDate":"2023-11-02"}],"authorContributionMap":{"jacobcuison":143}},{"path":"src/test/java/seedu/address/logic/commands/AddNoteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jacobcuison"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":3,"author":{"gitId":"jacobcuison"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"jacobcuison"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"jacobcuison"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NOTE_AMY;","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"jacobcuison"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NOTE_BOB;","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"jacobcuison"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"s-peiran"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-10-27"},{"lineNumber":9,"author":{"gitId":"jacobcuison"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showContactAtIndex;","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"jacobcuison"},"content":"import static seedu.address.testutil.TypicalAddressBook.getTypicalAddressBook;","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"chiayunrong"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST;","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"chiayunrong"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND;","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"jacobcuison"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"jacobcuison"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"jacobcuison"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"s-peiran"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2023-10-27"},{"lineNumber":19,"author":{"gitId":"jacobcuison"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-13"},{"lineNumber":20,"author":{"gitId":"jacobcuison"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-10-13"},{"lineNumber":21,"author":{"gitId":"jacobcuison"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-10-13"},{"lineNumber":22,"author":{"gitId":"jacobcuison"},"content":"import seedu.address.model.contact.Contact;","lastModifiedDate":"2023-10-13"},{"lineNumber":23,"author":{"gitId":"jacobcuison"},"content":"import seedu.address.model.note.Note;","lastModifiedDate":"2023-10-18"},{"lineNumber":24,"author":{"gitId":"jacobcuison"},"content":"import seedu.address.testutil.ContactBuilder;","lastModifiedDate":"2023-10-13"},{"lineNumber":25,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":26,"author":{"gitId":"jacobcuison"},"content":"/**","lastModifiedDate":"2023-10-13"},{"lineNumber":27,"author":{"gitId":"jacobcuison"},"content":" * Contains integration tests (interaction with the Model) and unit tests for AddNoteCommand.","lastModifiedDate":"2023-10-13"},{"lineNumber":28,"author":{"gitId":"jacobcuison"},"content":" */","lastModifiedDate":"2023-10-13"},{"lineNumber":29,"author":{"gitId":"jacobcuison"},"content":"public class AddNoteCommandTest {","lastModifiedDate":"2023-10-13"},{"lineNumber":30,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":31,"author":{"gitId":"jacobcuison"},"content":"    private static final String NOTE_STUB \u003d \"Some note\";","lastModifiedDate":"2023-10-13"},{"lineNumber":32,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":33,"author":{"gitId":"jacobcuison"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-13"},{"lineNumber":34,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":35,"author":{"gitId":"jacobcuison"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":36,"author":{"gitId":"s-peiran"},"content":"    public void execute_addNoteUnfilteredList_success() {","lastModifiedDate":"2023-10-27"},{"lineNumber":37,"author":{"gitId":"chiayunrong"},"content":"        Contact firstPerson \u003d model.getFilteredContactList().get(INDEX_FIRST.getZeroBased());","lastModifiedDate":"2023-10-17"},{"lineNumber":38,"author":{"gitId":"jacobcuison"},"content":"        Contact editedPerson \u003d new ContactBuilder(firstPerson).withNotes(NOTE_STUB).build();","lastModifiedDate":"2023-10-18"},{"lineNumber":39,"author":{"gitId":"s-peiran"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":40,"author":{"gitId":"jacobcuison"},"content":"        AddNoteCommand addNoteCommand \u003d new AddNoteCommand(INDEX_FIRST, new Note(NOTE_STUB));","lastModifiedDate":"2023-10-18"},{"lineNumber":41,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":42,"author":{"gitId":"jacobcuison"},"content":"        String expectedMessage \u003d String.format(AddNoteCommand.MESSAGE_ADD_NOTE_SUCCESS, editedPerson);","lastModifiedDate":"2023-10-13"},{"lineNumber":43,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":44,"author":{"gitId":"s-peiran"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2023-10-27"},{"lineNumber":45,"author":{"gitId":"s-peiran"},"content":"        expectedModel.setContact(firstPerson, editedPerson);","lastModifiedDate":"2023-10-27"},{"lineNumber":46,"author":{"gitId":"s-peiran"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":47,"author":{"gitId":"jonyeokj"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage, false, false);","lastModifiedDate":"2023-11-02"},{"lineNumber":48,"author":{"gitId":"s-peiran"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":49,"author":{"gitId":"s-peiran"},"content":"        assertCommandSuccess(addNoteCommand, model, expectedCommandResult, expectedModel);","lastModifiedDate":"2023-10-27"},{"lineNumber":50,"author":{"gitId":"jacobcuison"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":51,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":52,"author":{"gitId":"jacobcuison"},"content":"    // Delete functionality has not been implemented yet","lastModifiedDate":"2023-10-18"},{"lineNumber":53,"author":{"gitId":"jacobcuison"},"content":"    //    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":54,"author":{"gitId":"jacobcuison"},"content":"    //    public void execute_deleteNoteUnfilteredList_success() {","lastModifiedDate":"2023-10-18"},{"lineNumber":55,"author":{"gitId":"jacobcuison"},"content":"    //        Contact firstPerson \u003d model.getFilteredContactList().get(INDEX_FIRST.getZeroBased());","lastModifiedDate":"2023-10-18"},{"lineNumber":56,"author":{"gitId":"jacobcuison"},"content":"    //        Contact editedPerson \u003d new ContactBuilder(firstPerson).withNotes(\"\").build();","lastModifiedDate":"2023-10-18"},{"lineNumber":57,"author":{"gitId":"jacobcuison"},"content":"    //","lastModifiedDate":"2023-10-18"},{"lineNumber":58,"author":{"gitId":"jacobcuison"},"content":"    //        AddNoteCommand addNoteCommand \u003d new AddNoteCommand(INDEX_FIRST,","lastModifiedDate":"2023-10-18"},{"lineNumber":59,"author":{"gitId":"jacobcuison"},"content":"    //                new Note(editedPerson.getNotes().toString()));","lastModifiedDate":"2023-10-18"},{"lineNumber":60,"author":{"gitId":"jacobcuison"},"content":"    //","lastModifiedDate":"2023-10-18"},{"lineNumber":61,"author":{"gitId":"jacobcuison"},"content":"    //        String expectedMessage \u003d String.format(AddNoteCommand.MESSAGE_ADD_NOTE_SUCCESS, editedPerson);","lastModifiedDate":"2023-10-18"},{"lineNumber":62,"author":{"gitId":"jacobcuison"},"content":"    //","lastModifiedDate":"2023-10-18"},{"lineNumber":63,"author":{"gitId":"jacobcuison"},"content":"    //        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2023-10-18"},{"lineNumber":64,"author":{"gitId":"jacobcuison"},"content":"    //        expectedModel.setContact(firstPerson, editedPerson);","lastModifiedDate":"2023-10-18"},{"lineNumber":65,"author":{"gitId":"jacobcuison"},"content":"    //","lastModifiedDate":"2023-10-18"},{"lineNumber":66,"author":{"gitId":"jacobcuison"},"content":"    //        assertCommandSuccess(addNoteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-18"},{"lineNumber":67,"author":{"gitId":"jacobcuison"},"content":"    //    }","lastModifiedDate":"2023-10-18"},{"lineNumber":68,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":69,"author":{"gitId":"jacobcuison"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":70,"author":{"gitId":"s-peiran"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2023-10-27"},{"lineNumber":71,"author":{"gitId":"chiayunrong"},"content":"        showContactAtIndex(model, INDEX_FIRST);","lastModifiedDate":"2023-10-17"},{"lineNumber":72,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":73,"author":{"gitId":"chiayunrong"},"content":"        Contact firstPerson \u003d model.getFilteredContactList().get(INDEX_FIRST.getZeroBased());","lastModifiedDate":"2023-10-17"},{"lineNumber":74,"author":{"gitId":"jacobcuison"},"content":"        Contact editedPerson \u003d new ContactBuilder(model.getFilteredContactList()","lastModifiedDate":"2023-10-13"},{"lineNumber":75,"author":{"gitId":"chiayunrong"},"content":"                .get(INDEX_FIRST.getZeroBased()))","lastModifiedDate":"2023-10-17"},{"lineNumber":76,"author":{"gitId":"jacobcuison"},"content":"                .withNotes(NOTE_STUB).build();","lastModifiedDate":"2023-10-18"},{"lineNumber":77,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":78,"author":{"gitId":"jacobcuison"},"content":"        AddNoteCommand addNoteCommand \u003d new AddNoteCommand(INDEX_FIRST, new Note(NOTE_STUB));","lastModifiedDate":"2023-10-18"},{"lineNumber":79,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":80,"author":{"gitId":"jacobcuison"},"content":"        String expectedMessage \u003d String.format(AddNoteCommand.MESSAGE_ADD_NOTE_SUCCESS, editedPerson);","lastModifiedDate":"2023-10-13"},{"lineNumber":81,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":82,"author":{"gitId":"s-peiran"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2023-10-27"},{"lineNumber":83,"author":{"gitId":"s-peiran"},"content":"        expectedModel.setContact(firstPerson, editedPerson);","lastModifiedDate":"2023-10-27"},{"lineNumber":84,"author":{"gitId":"s-peiran"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":85,"author":{"gitId":"jonyeokj"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage, false, false);","lastModifiedDate":"2023-11-02"},{"lineNumber":86,"author":{"gitId":"s-peiran"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":87,"author":{"gitId":"s-peiran"},"content":"        assertCommandSuccess(addNoteCommand, model, expectedCommandResult, expectedModel);","lastModifiedDate":"2023-10-27"},{"lineNumber":88,"author":{"gitId":"jacobcuison"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":89,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":90,"author":{"gitId":"jacobcuison"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":91,"author":{"gitId":"jacobcuison"},"content":"    public void execute_invalidPersonIndexUnfilteredList_failure() {","lastModifiedDate":"2023-10-13"},{"lineNumber":92,"author":{"gitId":"jacobcuison"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredContactList().size() + 1);","lastModifiedDate":"2023-10-13"},{"lineNumber":93,"author":{"gitId":"jacobcuison"},"content":"        AddNoteCommand addNoteCommand \u003d new AddNoteCommand(outOfBoundIndex, new Note(VALID_NOTE_BOB));","lastModifiedDate":"2023-10-13"},{"lineNumber":94,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":95,"author":{"gitId":"jacobcuison"},"content":"        assertCommandFailure(addNoteCommand, model, Messages.MESSAGE_INVALID_CONTACT_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-13"},{"lineNumber":96,"author":{"gitId":"jacobcuison"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":97,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":98,"author":{"gitId":"jacobcuison"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":99,"author":{"gitId":"jacobcuison"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2023-10-13"},{"lineNumber":100,"author":{"gitId":"jacobcuison"},"content":"     * but smaller than size of address book","lastModifiedDate":"2023-10-13"},{"lineNumber":101,"author":{"gitId":"jacobcuison"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":102,"author":{"gitId":"jacobcuison"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":103,"author":{"gitId":"jacobcuison"},"content":"    public void execute_invalidPersonIndexFilteredList_failure() {","lastModifiedDate":"2023-10-13"},{"lineNumber":104,"author":{"gitId":"chiayunrong"},"content":"        showContactAtIndex(model, INDEX_FIRST);","lastModifiedDate":"2023-10-17"},{"lineNumber":105,"author":{"gitId":"chiayunrong"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND;","lastModifiedDate":"2023-10-17"},{"lineNumber":106,"author":{"gitId":"jacobcuison"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2023-10-13"},{"lineNumber":107,"author":{"gitId":"jacobcuison"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getContactList().size());","lastModifiedDate":"2023-10-13"},{"lineNumber":108,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":109,"author":{"gitId":"jacobcuison"},"content":"        AddNoteCommand addNoteCommand \u003d new AddNoteCommand(outOfBoundIndex, new Note(VALID_NOTE_BOB));","lastModifiedDate":"2023-10-13"},{"lineNumber":110,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":111,"author":{"gitId":"jacobcuison"},"content":"        assertCommandFailure(addNoteCommand, model, Messages.MESSAGE_INVALID_CONTACT_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-13"},{"lineNumber":112,"author":{"gitId":"jacobcuison"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":113,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":114,"author":{"gitId":"jacobcuison"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":115,"author":{"gitId":"jacobcuison"},"content":"    public void equals() {","lastModifiedDate":"2023-10-13"},{"lineNumber":116,"author":{"gitId":"chiayunrong"},"content":"        final AddNoteCommand standardCommand \u003d new AddNoteCommand(INDEX_FIRST,","lastModifiedDate":"2023-10-17"},{"lineNumber":117,"author":{"gitId":"jacobcuison"},"content":"                new Note(VALID_NOTE_AMY));","lastModifiedDate":"2023-10-13"},{"lineNumber":118,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":119,"author":{"gitId":"jacobcuison"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-13"},{"lineNumber":120,"author":{"gitId":"chiayunrong"},"content":"        AddNoteCommand commandWithSameValues \u003d new AddNoteCommand(INDEX_FIRST,","lastModifiedDate":"2023-10-17"},{"lineNumber":121,"author":{"gitId":"jacobcuison"},"content":"                new Note(VALID_NOTE_AMY));","lastModifiedDate":"2023-10-13"},{"lineNumber":122,"author":{"gitId":"jacobcuison"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2023-10-13"},{"lineNumber":123,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":124,"author":{"gitId":"jacobcuison"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-13"},{"lineNumber":125,"author":{"gitId":"jacobcuison"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2023-10-13"},{"lineNumber":126,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":127,"author":{"gitId":"jacobcuison"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-13"},{"lineNumber":128,"author":{"gitId":"jacobcuison"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2023-10-13"},{"lineNumber":129,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":130,"author":{"gitId":"jacobcuison"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-13"},{"lineNumber":131,"author":{"gitId":"jacobcuison"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2023-10-13"},{"lineNumber":132,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":133,"author":{"gitId":"jacobcuison"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2023-10-13"},{"lineNumber":134,"author":{"gitId":"chiayunrong"},"content":"        assertFalse(standardCommand.equals(new AddNoteCommand(INDEX_SECOND,","lastModifiedDate":"2023-10-17"},{"lineNumber":135,"author":{"gitId":"jacobcuison"},"content":"                new Note(VALID_NOTE_AMY))));","lastModifiedDate":"2023-10-13"},{"lineNumber":136,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":137,"author":{"gitId":"jacobcuison"},"content":"        // different note -\u003e returns false","lastModifiedDate":"2023-10-13"},{"lineNumber":138,"author":{"gitId":"chiayunrong"},"content":"        assertFalse(standardCommand.equals(new AddNoteCommand(INDEX_FIRST,","lastModifiedDate":"2023-10-17"},{"lineNumber":139,"author":{"gitId":"jacobcuison"},"content":"                new Note(VALID_NOTE_BOB))));","lastModifiedDate":"2023-10-13"},{"lineNumber":140,"author":{"gitId":"jacobcuison"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":141,"author":{"gitId":"jacobcuison"},"content":"}","lastModifiedDate":"2023-10-13"}],"authorContributionMap":{"jonyeokj":2,"jacobcuison":112,"s-peiran":15,"chiayunrong":12}},{"path":"src/test/java/seedu/address/logic/commands/ClearCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"jonyeokj"},"content":"import static seedu.address.testutil.TypicalAddressBook.getTypicalContactsAddressBook;","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class ClearCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void execute_emptyAddressBook_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void execute_nonEmptyAddressBook_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"jonyeokj"},"content":"        Model model \u003d new ModelManager(getTypicalContactsAddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"jonyeokj"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalContactsAddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        expectedModel.setAddressBook(new AddressBook());","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"jonyeokj":3,"-":29}},{"path":"src/test/java/seedu/address/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"jonyeokj"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DESCRIPTION;","lastModifiedDate":"2023-10-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"jacobcuison"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NOTE;","lastModifiedDate":"2023-10-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"jonyeokj"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PLACE;","lastModifiedDate":"2023-10-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"jonyeokj"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TIME;","lastModifiedDate":"2023-10-18"},{"lineNumber":14,"author":{"gitId":"jonyeokj"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TITLE;","lastModifiedDate":"2023-10-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-07-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2018-01-31"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-06-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-06-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":25,"author":{"gitId":"jacobcuison"},"content":"import seedu.address.model.contact.Contact;","lastModifiedDate":"2023-10-03"},{"lineNumber":26,"author":{"gitId":"jacobcuison"},"content":"import seedu.address.model.contact.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-10-03"},{"lineNumber":27,"author":{"gitId":"chiayunrong"},"content":"import seedu.address.model.meeting.Meeting;","lastModifiedDate":"2023-10-17"},{"lineNumber":28,"author":{"gitId":"chiayunrong"},"content":"import seedu.address.model.meeting.TitleContainsKeywordsPredicate;","lastModifiedDate":"2023-10-17"},{"lineNumber":29,"author":{"gitId":"jacobcuison"},"content":"import seedu.address.testutil.EditContactDescriptorBuilder;","lastModifiedDate":"2023-10-03"},{"lineNumber":30,"author":{"gitId":"jonyeokj"},"content":"import seedu.address.testutil.EditMeetingDescriptorBuilder;","lastModifiedDate":"2023-10-18"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":37,"author":{"gitId":"jacobcuison"},"content":"    public static final int VALID_CONTACT_NOTEID \u003d 4;","lastModifiedDate":"2023-11-02"},{"lineNumber":38,"author":{"gitId":"jacobcuison"},"content":"    public static final int VALID_MEETING_NOTEID \u003d 11;","lastModifiedDate":"2023-11-02"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2017-07-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2017-07-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_AMY \u003d \"11111111\";","lastModifiedDate":"2017-07-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_BOB \u003d \"22222222\";","lastModifiedDate":"2017-07-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_AMY \u003d \"amy@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_BOB \u003d \"bob@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_AMY \u003d \"Block 312, Amy Street 1\";","lastModifiedDate":"2017-07-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_BOB \u003d \"Block 123, Bobby Street 3\";","lastModifiedDate":"2017-07-05"},{"lineNumber":47,"author":{"gitId":"jacobcuison"},"content":"    public static final String VALID_NOTE_AMY \u003d \"Likes apples\";","lastModifiedDate":"2023-10-13"},{"lineNumber":48,"author":{"gitId":"jacobcuison"},"content":"    public static final String VALID_NOTE_BOB \u003d \"Knee injury\";","lastModifiedDate":"2023-10-13"},{"lineNumber":49,"author":{"gitId":"jacobcuison"},"content":"    public static final String VALID_NOTE_BENSON \u003d \"Hates tiramisu\";","lastModifiedDate":"2023-11-02"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_HUSBAND \u003d \"husband\";","lastModifiedDate":"2017-07-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_FRIEND \u003d \"friend\";","lastModifiedDate":"2017-07-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":53,"author":{"gitId":"jonyeokj"},"content":"    public static final String VALID_TITLE_ENG \u003d \"English\";","lastModifiedDate":"2023-10-18"},{"lineNumber":54,"author":{"gitId":"jonyeokj"},"content":"    public static final String VALID_TITLE_CHI \u003d \"Chinese\";","lastModifiedDate":"2023-10-18"},{"lineNumber":55,"author":{"gitId":"jonyeokj"},"content":"    public static final String VALID_TIME_ENG \u003d \"01/01/2023 00:00\";","lastModifiedDate":"2023-10-18"},{"lineNumber":56,"author":{"gitId":"jonyeokj"},"content":"    public static final String VALID_TIME_CHI \u003d \"01/01/2023 12:00\";","lastModifiedDate":"2023-10-18"},{"lineNumber":57,"author":{"gitId":"jonyeokj"},"content":"    public static final String VALID_PLACE_ENG \u003d \"Home\";","lastModifiedDate":"2023-10-18"},{"lineNumber":58,"author":{"gitId":"jonyeokj"},"content":"    public static final String VALID_PLACE_CHI \u003d \"School\";","lastModifiedDate":"2023-10-18"},{"lineNumber":59,"author":{"gitId":"jonyeokj"},"content":"    public static final String VALID_DESCRIPTION_ENG \u003d \"\";","lastModifiedDate":"2023-10-18"},{"lineNumber":60,"author":{"gitId":"jonyeokj"},"content":"    public static final String VALID_DESCRIPTION_CHI \u003d \"This is a description.\";","lastModifiedDate":"2023-10-18"},{"lineNumber":61,"author":{"gitId":"jonyeokj"},"content":"    public static final String VALID_NOTE_ENG \u003d \"Project\";","lastModifiedDate":"2023-10-18"},{"lineNumber":62,"author":{"gitId":"jonyeokj"},"content":"    public static final String VALID_NOTE_CHI \u003d \"Date\";","lastModifiedDate":"2023-10-18"},{"lineNumber":63,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":66,"author":{"gitId":"jacobcuison"},"content":"    public static final String NOTE_DESC_AMY \u003d \" \" + PREFIX_NOTE + VALID_NOTE_AMY;","lastModifiedDate":"2023-10-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_AMY \u003d \" \" + PREFIX_PHONE + VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_BOB \u003d \" \" + PREFIX_PHONE + VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_AMY \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_BOB \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_AMY \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_BOB \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_FRIEND \u003d \" \" + PREFIX_TAG + VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_HUSBAND \u003d \" \" + PREFIX_TAG + VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":76,"author":{"gitId":"jonyeokj"},"content":"    public static final String TITLE_DESC_ENG \u003d \" \" + PREFIX_TITLE + VALID_TITLE_ENG;","lastModifiedDate":"2023-10-18"},{"lineNumber":77,"author":{"gitId":"jonyeokj"},"content":"    public static final String TITLE_DESC_CHI \u003d \" \" + PREFIX_TITLE + VALID_TITLE_CHI;","lastModifiedDate":"2023-10-18"},{"lineNumber":78,"author":{"gitId":"jonyeokj"},"content":"    public static final String TIME_DESC_ENG \u003d \" \" + PREFIX_TIME + VALID_TIME_ENG;","lastModifiedDate":"2023-10-18"},{"lineNumber":79,"author":{"gitId":"jonyeokj"},"content":"    public static final String TIME_DESC_CHI \u003d \" \" + PREFIX_TIME + VALID_TIME_CHI;","lastModifiedDate":"2023-10-18"},{"lineNumber":80,"author":{"gitId":"jonyeokj"},"content":"    public static final String PLACE_DESC_ENG \u003d \" \" + PREFIX_PLACE + VALID_PLACE_ENG;","lastModifiedDate":"2023-10-18"},{"lineNumber":81,"author":{"gitId":"jonyeokj"},"content":"    public static final String PLACE_DESC_CHI \u003d \" \" + PREFIX_PLACE + VALID_PLACE_CHI;","lastModifiedDate":"2023-10-18"},{"lineNumber":82,"author":{"gitId":"jonyeokj"},"content":"    public static final String DESCRIPTION_DESC_ENG \u003d \" \" + PREFIX_DESCRIPTION + VALID_DESCRIPTION_ENG;","lastModifiedDate":"2023-10-18"},{"lineNumber":83,"author":{"gitId":"jonyeokj"},"content":"    public static final String DESCRIPTION_DESC_CHI \u003d \" \" + PREFIX_DESCRIPTION + VALID_DESCRIPTION_CHI;","lastModifiedDate":"2023-10-18"},{"lineNumber":84,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2017-07-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public static final String INVALID_PHONE_DESC \u003d \" \" + PREFIX_PHONE + \"911a\"; // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2017-07-05"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public static final String INVALID_EMAIL_DESC \u003d \" \" + PREFIX_EMAIL + \"bob!yahoo\"; // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-07-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public static final String INVALID_ADDRESS_DESC \u003d \" \" + PREFIX_ADDRESS; // empty string not allowed for addresses","lastModifiedDate":"2017-07-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public static final String INVALID_TAG_DESC \u003d \" \" + PREFIX_TAG + \"hubby*\"; // \u0027*\u0027 not allowed in tags","lastModifiedDate":"2017-07-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":91,"author":{"gitId":"jonyeokj"},"content":"    public static final String INVALID_TITLE_DESC \u003d \" \" + PREFIX_TITLE + \"French\u0026\"; // \u0027\u0026\u0027 not allowed in titles","lastModifiedDate":"2023-10-18"},{"lineNumber":92,"author":{"gitId":"jonyeokj"},"content":"    public static final String INVALID_TIME_DESC \u003d \" \" + PREFIX_TIME + \"1/1/2023 14:00\"; // wrong date format","lastModifiedDate":"2023-10-18"},{"lineNumber":93,"author":{"gitId":"jonyeokj"},"content":"    public static final String INVALID_PLACE_DESC \u003d \" \" + PREFIX_PLACE + \"Z00m@meeting\"; // @ not allowed in place","lastModifiedDate":"2023-10-18"},{"lineNumber":94,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":98,"author":{"gitId":"jacobcuison"},"content":"    public static final EditContactCommand.EditContactDescriptor DESC_AMY;","lastModifiedDate":"2023-10-03"},{"lineNumber":99,"author":{"gitId":"jacobcuison"},"content":"    public static final EditContactCommand.EditContactDescriptor DESC_BOB;","lastModifiedDate":"2023-10-03"},{"lineNumber":100,"author":{"gitId":"jonyeokj"},"content":"    public static final EditMeetingCommand.EditMeetingDescriptor DESC_ENG;","lastModifiedDate":"2023-10-18"},{"lineNumber":101,"author":{"gitId":"jonyeokj"},"content":"    public static final EditMeetingCommand.EditMeetingDescriptor DESC_CHI;","lastModifiedDate":"2023-10-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05"},{"lineNumber":104,"author":{"gitId":"jacobcuison"},"content":"        DESC_AMY \u003d new EditContactDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2023-10-03"},{"lineNumber":105,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":106,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05"},{"lineNumber":107,"author":{"gitId":"jacobcuison"},"content":"        DESC_BOB \u003d new EditContactDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2023-10-03"},{"lineNumber":108,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":109,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05"},{"lineNumber":110,"author":{"gitId":"jonyeokj"},"content":"        DESC_ENG \u003d new EditMeetingDescriptorBuilder().withTitle(VALID_TITLE_ENG)","lastModifiedDate":"2023-10-18"},{"lineNumber":111,"author":{"gitId":"jonyeokj"},"content":"                .withTime(VALID_TIME_ENG).withPlace(VALID_PLACE_ENG).withDescription(VALID_DESCRIPTION_ENG).build();","lastModifiedDate":"2023-10-18"},{"lineNumber":112,"author":{"gitId":"jonyeokj"},"content":"        DESC_CHI \u003d new EditMeetingDescriptorBuilder().withTitle(VALID_TITLE_CHI)","lastModifiedDate":"2023-10-18"},{"lineNumber":113,"author":{"gitId":"jonyeokj"},"content":"                .withTime(VALID_TIME_CHI).withPlace(VALID_PLACE_CHI).withDescription(VALID_DESCRIPTION_CHI).build();","lastModifiedDate":"2023-10-18"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":126,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":137,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2023-10-18"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":142,"author":{"gitId":"chiayunrong"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":143,"author":{"gitId":"chiayunrong"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":144,"author":{"gitId":"chiayunrong"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":145,"author":{"gitId":"chiayunrong"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2023-10-17"},{"lineNumber":146,"author":{"gitId":"chiayunrong"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":147,"author":{"gitId":"chiayunrong"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2023-10-17"},{"lineNumber":148,"author":{"gitId":"chiayunrong"},"content":"            String expectedNote) {","lastModifiedDate":"2023-10-17"},{"lineNumber":149,"author":{"gitId":"jonyeokj"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2023-11-02"},{"lineNumber":150,"author":{"gitId":"chiayunrong"},"content":"        try {","lastModifiedDate":"2023-10-17"},{"lineNumber":151,"author":{"gitId":"chiayunrong"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2023-10-17"},{"lineNumber":152,"author":{"gitId":"chiayunrong"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2023-10-17"},{"lineNumber":153,"author":{"gitId":"chiayunrong"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2023-10-17"},{"lineNumber":154,"author":{"gitId":"chiayunrong"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2023-10-17"},{"lineNumber":155,"author":{"gitId":"chiayunrong"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":156,"author":{"gitId":"chiayunrong"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":157,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":159,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":160,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":161,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":162,"author":{"gitId":"jacobcuison"},"content":"     * - the address book, filtered contact list and selected contact in {@code actualModel} remain unchanged","lastModifiedDate":"2023-10-03"},{"lineNumber":163,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        AddressBook expectedAddressBook \u003d new AddressBook(actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":168,"author":{"gitId":"jacobcuison"},"content":"        List\u003cContact\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredContactList());","lastModifiedDate":"2023-10-03"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2019-05-03"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddressBook, actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":172,"author":{"gitId":"jacobcuison"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredContactList());","lastModifiedDate":"2023-10-03"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":175,"author":{"gitId":"jacobcuison"},"content":"     * Updates {@code model}\u0027s filtered list to show only the contact at the given {@code targetIndex} in the","lastModifiedDate":"2023-10-03"},{"lineNumber":176,"author":{"gitId":"-"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2018-01-31"},{"lineNumber":177,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":178,"author":{"gitId":"jacobcuison"},"content":"    public static void showContactAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2023-10-03"},{"lineNumber":179,"author":{"gitId":"jacobcuison"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredContactList().size());","lastModifiedDate":"2023-10-03"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":181,"author":{"gitId":"jacobcuison"},"content":"        Contact contact \u003d model.getFilteredContactList().get(targetIndex.getZeroBased());","lastModifiedDate":"2023-10-03"},{"lineNumber":182,"author":{"gitId":"jacobcuison"},"content":"        final String[] splitName \u003d contact.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2023-10-03"},{"lineNumber":183,"author":{"gitId":"jacobcuison"},"content":"        model.updateFilteredContactList(new NameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2023-10-03"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":185,"author":{"gitId":"jacobcuison"},"content":"        assertEquals(1, model.getFilteredContactList().size());","lastModifiedDate":"2023-10-03"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":188,"author":{"gitId":"chiayunrong"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":189,"author":{"gitId":"chiayunrong"},"content":"     * Updates {@code model}\u0027s filtered list to show only the meeting at the given {@code targetIndex} in the","lastModifiedDate":"2023-10-17"},{"lineNumber":190,"author":{"gitId":"chiayunrong"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2023-10-17"},{"lineNumber":191,"author":{"gitId":"chiayunrong"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":192,"author":{"gitId":"chiayunrong"},"content":"    public static void showMeetingAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2023-10-17"},{"lineNumber":193,"author":{"gitId":"chiayunrong"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredMeetingList().size());","lastModifiedDate":"2023-10-17"},{"lineNumber":194,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":195,"author":{"gitId":"chiayunrong"},"content":"        Meeting meeting \u003d model.getFilteredMeetingList().get(targetIndex.getZeroBased());","lastModifiedDate":"2023-10-17"},{"lineNumber":196,"author":{"gitId":"chiayunrong"},"content":"        final String[] splitTitle \u003d meeting.getTitle().fullTitle.split(\"\\\\s+\");","lastModifiedDate":"2023-10-17"},{"lineNumber":197,"author":{"gitId":"chiayunrong"},"content":"        model.updateFilteredMeetingList(new TitleContainsKeywordsPredicate(Arrays.asList(splitTitle[0])));","lastModifiedDate":"2023-10-17"},{"lineNumber":198,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":199,"author":{"gitId":"chiayunrong"},"content":"        assertEquals(1, model.getFilteredMeetingList().size());","lastModifiedDate":"2023-10-17"},{"lineNumber":200,"author":{"gitId":"chiayunrong"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":201,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"jonyeokj":36,"jacobcuison":24,"chiayunrong":30,"-":111}},{"path":"src/test/java/seedu/address/logic/commands/DeleteContactCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"jacobcuison"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showContactAtIndex;","lastModifiedDate":"2023-10-03"},{"lineNumber":9,"author":{"gitId":"jonyeokj"},"content":"import static seedu.address.testutil.TypicalAddressBook.getTypicalContactsAddressBook;","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"chiayunrong"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST;","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"chiayunrong"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND;","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-05"},{"lineNumber":20,"author":{"gitId":"jacobcuison"},"content":"import seedu.address.model.contact.Contact;","lastModifiedDate":"2023-10-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2020-12-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * {@code DeleteCommand}.","lastModifiedDate":"2018-01-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"jacobcuison"},"content":"public class DeleteContactCommandTest {","lastModifiedDate":"2023-10-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"jonyeokj"},"content":"    private Model model \u003d new ModelManager(getTypicalContactsAddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":32,"author":{"gitId":"chiayunrong"},"content":"        Contact contactToDelete \u003d model.getFilteredContactList().get(INDEX_FIRST.getZeroBased());","lastModifiedDate":"2023-10-17"},{"lineNumber":33,"author":{"gitId":"chiayunrong"},"content":"        DeleteContactCommand deleteContactCommand \u003d new DeleteContactCommand(INDEX_FIRST);","lastModifiedDate":"2023-10-17"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":35,"author":{"gitId":"jacobcuison"},"content":"        String expectedMessage \u003d String.format(DeleteContactCommand.MESSAGE_DELETE_CONTACT_SUCCESS,","lastModifiedDate":"2023-10-03"},{"lineNumber":36,"author":{"gitId":"jonyeokj"},"content":"                Messages.formatContact(contactToDelete));","lastModifiedDate":"2023-10-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":39,"author":{"gitId":"jacobcuison"},"content":"        expectedModel.deleteContact(contactToDelete);","lastModifiedDate":"2023-10-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":41,"author":{"gitId":"jacobcuison"},"content":"        assertCommandSuccess(deleteContactCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":46,"author":{"gitId":"jacobcuison"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredContactList().size() + 1);","lastModifiedDate":"2023-10-03"},{"lineNumber":47,"author":{"gitId":"jacobcuison"},"content":"        DeleteContactCommand deleteContactCommand \u003d new DeleteContactCommand(outOfBoundIndex);","lastModifiedDate":"2023-10-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":49,"author":{"gitId":"jacobcuison"},"content":"        assertCommandFailure(deleteContactCommand, model, Messages.MESSAGE_INVALID_CONTACT_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":54,"author":{"gitId":"chiayunrong"},"content":"        showContactAtIndex(model, INDEX_FIRST);","lastModifiedDate":"2023-10-17"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":56,"author":{"gitId":"chiayunrong"},"content":"        Contact contactToDelete \u003d model.getFilteredContactList().get(INDEX_FIRST.getZeroBased());","lastModifiedDate":"2023-10-17"},{"lineNumber":57,"author":{"gitId":"chiayunrong"},"content":"        DeleteContactCommand deleteContactCommand \u003d new DeleteContactCommand(INDEX_FIRST);","lastModifiedDate":"2023-10-17"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":59,"author":{"gitId":"jacobcuison"},"content":"        String expectedMessage \u003d String.format(DeleteContactCommand.MESSAGE_DELETE_CONTACT_SUCCESS,","lastModifiedDate":"2023-10-03"},{"lineNumber":60,"author":{"gitId":"jonyeokj"},"content":"                Messages.formatContact(contactToDelete));","lastModifiedDate":"2023-10-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":63,"author":{"gitId":"jacobcuison"},"content":"        expectedModel.deleteContact(contactToDelete);","lastModifiedDate":"2023-10-03"},{"lineNumber":64,"author":{"gitId":"jacobcuison"},"content":"        showNoContact(expectedModel);","lastModifiedDate":"2023-10-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":66,"author":{"gitId":"jacobcuison"},"content":"        assertCommandSuccess(deleteContactCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":71,"author":{"gitId":"chiayunrong"},"content":"        showContactAtIndex(model, INDEX_FIRST);","lastModifiedDate":"2023-10-17"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":73,"author":{"gitId":"chiayunrong"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND;","lastModifiedDate":"2023-10-17"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-06-05"},{"lineNumber":75,"author":{"gitId":"jacobcuison"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getContactList().size());","lastModifiedDate":"2023-10-03"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":77,"author":{"gitId":"jacobcuison"},"content":"        DeleteContactCommand deleteContactCommand \u003d new DeleteContactCommand(outOfBoundIndex);","lastModifiedDate":"2023-10-03"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":79,"author":{"gitId":"jacobcuison"},"content":"        assertCommandFailure(deleteContactCommand, model, Messages.MESSAGE_INVALID_CONTACT_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-03"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":84,"author":{"gitId":"chiayunrong"},"content":"        DeleteContactCommand deleteFirstCommand \u003d new DeleteContactCommand(INDEX_FIRST);","lastModifiedDate":"2023-10-17"},{"lineNumber":85,"author":{"gitId":"chiayunrong"},"content":"        DeleteContactCommand deleteSecondCommand \u003d new DeleteContactCommand(INDEX_SECOND);","lastModifiedDate":"2023-10-17"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"chiayunrong"},"content":"        DeleteContactCommand deleteFirstCommandCopy \u003d new DeleteContactCommand(INDEX_FIRST);","lastModifiedDate":"2023-10-17"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"jacobcuison"},"content":"        // different contact -\u003e returns false","lastModifiedDate":"2023-10-03"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d Index.fromOneBased(1);","lastModifiedDate":"2019-02-23"},{"lineNumber":107,"author":{"gitId":"jacobcuison"},"content":"        DeleteContactCommand deleteContactCommand \u003d new DeleteContactCommand(targetIndex);","lastModifiedDate":"2023-10-03"},{"lineNumber":108,"author":{"gitId":"jacobcuison"},"content":"        String expected \u003d DeleteContactCommand.class.getCanonicalName() + \"{targetIndex\u003d\" + targetIndex + \"}\";","lastModifiedDate":"2023-10-03"},{"lineNumber":109,"author":{"gitId":"jacobcuison"},"content":"        assertEquals(expected, deleteContactCommand.toString());","lastModifiedDate":"2023-10-03"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2017-06-05"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":115,"author":{"gitId":"jacobcuison"},"content":"    private void showNoContact(Model model) {","lastModifiedDate":"2023-10-03"},{"lineNumber":116,"author":{"gitId":"jacobcuison"},"content":"        model.updateFilteredContactList(p -\u003e false);","lastModifiedDate":"2023-10-03"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":118,"author":{"gitId":"jacobcuison"},"content":"        assertTrue(model.getFilteredContactList().isEmpty());","lastModifiedDate":"2023-10-03"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":120,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"jonyeokj":4,"jacobcuison":23,"chiayunrong":12,"-":81}},{"path":"src/test/java/seedu/address/logic/commands/DeleteContactFromMeetingCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"s-peiran"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-25"},{"lineNumber":2,"author":{"gitId":"s-peiran"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":3,"author":{"gitId":"s-peiran"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-25"},{"lineNumber":4,"author":{"gitId":"s-peiran"},"content":"import static seedu.address.testutil.TypicalAddressBook.getTypicalAddressBook;","lastModifiedDate":"2023-10-25"},{"lineNumber":5,"author":{"gitId":"s-peiran"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST;","lastModifiedDate":"2023-10-25"},{"lineNumber":6,"author":{"gitId":"s-peiran"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":7,"author":{"gitId":"s-peiran"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-25"},{"lineNumber":8,"author":{"gitId":"s-peiran"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":9,"author":{"gitId":"s-peiran"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-25"},{"lineNumber":10,"author":{"gitId":"s-peiran"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":11,"author":{"gitId":"s-peiran"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-25"},{"lineNumber":12,"author":{"gitId":"s-peiran"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-25"},{"lineNumber":13,"author":{"gitId":"s-peiran"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-10-25"},{"lineNumber":14,"author":{"gitId":"s-peiran"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-10-25"},{"lineNumber":15,"author":{"gitId":"s-peiran"},"content":"import seedu.address.model.contact.Contact;","lastModifiedDate":"2023-10-25"},{"lineNumber":16,"author":{"gitId":"s-peiran"},"content":"import seedu.address.model.meeting.Meeting;","lastModifiedDate":"2023-10-25"},{"lineNumber":17,"author":{"gitId":"s-peiran"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":18,"author":{"gitId":"s-peiran"},"content":"class DeleteContactFromMeetingCommandTest {","lastModifiedDate":"2023-10-25"},{"lineNumber":19,"author":{"gitId":"s-peiran"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":20,"author":{"gitId":"s-peiran"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-25"},{"lineNumber":21,"author":{"gitId":"s-peiran"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":22,"author":{"gitId":"s-peiran"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":23,"author":{"gitId":"s-peiran"},"content":"    void execute() throws CommandException {","lastModifiedDate":"2023-10-25"},{"lineNumber":24,"author":{"gitId":"s-peiran"},"content":"        Contact validContact \u003d model.getFilteredContactList().get(INDEX_FIRST.getZeroBased());","lastModifiedDate":"2023-10-25"},{"lineNumber":25,"author":{"gitId":"s-peiran"},"content":"        Meeting validMeeting \u003d model.getFilteredMeetingList().get(INDEX_FIRST.getZeroBased());","lastModifiedDate":"2023-10-25"},{"lineNumber":26,"author":{"gitId":"s-peiran"},"content":"        ArrayList\u003cContact\u003e listOfContacts \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-25"},{"lineNumber":27,"author":{"gitId":"s-peiran"},"content":"        listOfContacts.add(validContact);","lastModifiedDate":"2023-10-25"},{"lineNumber":28,"author":{"gitId":"s-peiran"},"content":"        Meeting editedMeeting \u003d new Meeting(","lastModifiedDate":"2023-10-25"},{"lineNumber":29,"author":{"gitId":"s-peiran"},"content":"                validMeeting.getTitle(), validMeeting.getTime(), validMeeting.getPlace(),","lastModifiedDate":"2023-10-25"},{"lineNumber":30,"author":{"gitId":"s-peiran"},"content":"                validMeeting.getDescription(), validMeeting.getNotes(), listOfContacts);","lastModifiedDate":"2023-10-25"},{"lineNumber":31,"author":{"gitId":"s-peiran"},"content":"        model.setMeeting(validMeeting, editedMeeting);","lastModifiedDate":"2023-10-25"},{"lineNumber":32,"author":{"gitId":"s-peiran"},"content":"        model.updateFilteredMeetingList(Model.PREDICATE_SHOW_ALL_MEETINGS);","lastModifiedDate":"2023-10-25"},{"lineNumber":33,"author":{"gitId":"s-peiran"},"content":"        DeleteContactFromMeetingCommand command \u003d new DeleteContactFromMeetingCommand(editedMeeting.getTitle()","lastModifiedDate":"2023-10-25"},{"lineNumber":34,"author":{"gitId":"s-peiran"},"content":"                .toString(), validContact.getNameString());","lastModifiedDate":"2023-10-25"},{"lineNumber":35,"author":{"gitId":"s-peiran"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(String.format(\"Removed contact \u0027%s\u0027 from Meeting \u0027%s\u0027\",","lastModifiedDate":"2023-10-25"},{"lineNumber":36,"author":{"gitId":"jonyeokj"},"content":"                validContact.getNameString(), editedMeeting.getTitleString()), false, false);","lastModifiedDate":"2023-11-02"},{"lineNumber":37,"author":{"gitId":"s-peiran"},"content":"        CommandResult result \u003d command.execute(model);","lastModifiedDate":"2023-10-25"},{"lineNumber":38,"author":{"gitId":"s-peiran"},"content":"        assertEquals(expectedCommandResult, result);","lastModifiedDate":"2023-10-25"},{"lineNumber":39,"author":{"gitId":"s-peiran"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":40,"author":{"gitId":"s-peiran"},"content":"}","lastModifiedDate":"2023-10-25"}],"authorContributionMap":{"jonyeokj":1,"s-peiran":39}},{"path":"src/test/java/seedu/address/logic/commands/DeleteMeetingCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jonyeokj"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-18"},{"lineNumber":2,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":3,"author":{"gitId":"jonyeokj"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-18"},{"lineNumber":4,"author":{"gitId":"jonyeokj"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-18"},{"lineNumber":5,"author":{"gitId":"jonyeokj"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-18"},{"lineNumber":6,"author":{"gitId":"jonyeokj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-10-18"},{"lineNumber":7,"author":{"gitId":"jonyeokj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-10-18"},{"lineNumber":8,"author":{"gitId":"jonyeokj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showMeetingAtIndex;","lastModifiedDate":"2023-10-18"},{"lineNumber":9,"author":{"gitId":"jonyeokj"},"content":"import static seedu.address.testutil.TypicalAddressBook.getTypicalMeetingsAddressBook;","lastModifiedDate":"2023-10-18"},{"lineNumber":10,"author":{"gitId":"jonyeokj"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST;","lastModifiedDate":"2023-10-18"},{"lineNumber":11,"author":{"gitId":"jonyeokj"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND;","lastModifiedDate":"2023-10-18"},{"lineNumber":12,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":13,"author":{"gitId":"jonyeokj"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-18"},{"lineNumber":14,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":15,"author":{"gitId":"jonyeokj"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-18"},{"lineNumber":16,"author":{"gitId":"jonyeokj"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-18"},{"lineNumber":17,"author":{"gitId":"jonyeokj"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-18"},{"lineNumber":18,"author":{"gitId":"jonyeokj"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-10-18"},{"lineNumber":19,"author":{"gitId":"jonyeokj"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-10-18"},{"lineNumber":20,"author":{"gitId":"jonyeokj"},"content":"import seedu.address.model.meeting.Meeting;","lastModifiedDate":"2023-10-18"},{"lineNumber":21,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":22,"author":{"gitId":"jonyeokj"},"content":"/**","lastModifiedDate":"2023-10-18"},{"lineNumber":23,"author":{"gitId":"jonyeokj"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2023-10-18"},{"lineNumber":24,"author":{"gitId":"jonyeokj"},"content":" * {@code DeleteMeetingCommand}.","lastModifiedDate":"2023-10-18"},{"lineNumber":25,"author":{"gitId":"jonyeokj"},"content":" */","lastModifiedDate":"2023-10-18"},{"lineNumber":26,"author":{"gitId":"jonyeokj"},"content":"public class DeleteMeetingCommandTest {","lastModifiedDate":"2023-10-18"},{"lineNumber":27,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":28,"author":{"gitId":"jonyeokj"},"content":"    private Model model \u003d new ModelManager(getTypicalMeetingsAddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-18"},{"lineNumber":29,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":30,"author":{"gitId":"jonyeokj"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":31,"author":{"gitId":"jonyeokj"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2023-10-18"},{"lineNumber":32,"author":{"gitId":"jonyeokj"},"content":"        Meeting meetingToDelete \u003d model.getFilteredMeetingList().get(INDEX_FIRST.getZeroBased());","lastModifiedDate":"2023-10-18"},{"lineNumber":33,"author":{"gitId":"jonyeokj"},"content":"        DeleteMeetingCommand deleteMeetingCommand \u003d new DeleteMeetingCommand(INDEX_FIRST);","lastModifiedDate":"2023-10-18"},{"lineNumber":34,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":35,"author":{"gitId":"jonyeokj"},"content":"        String expectedMessage \u003d String.format(DeleteMeetingCommand.MESSAGE_DELETE_MEETING_SUCCESS,","lastModifiedDate":"2023-10-18"},{"lineNumber":36,"author":{"gitId":"jonyeokj"},"content":"                Messages.formatMeeting(meetingToDelete));","lastModifiedDate":"2023-10-18"},{"lineNumber":37,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":38,"author":{"gitId":"jonyeokj"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-18"},{"lineNumber":39,"author":{"gitId":"jonyeokj"},"content":"        expectedModel.deleteMeeting(meetingToDelete);","lastModifiedDate":"2023-10-18"},{"lineNumber":40,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":41,"author":{"gitId":"jonyeokj"},"content":"        assertCommandSuccess(deleteMeetingCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-18"},{"lineNumber":42,"author":{"gitId":"jonyeokj"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":43,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":44,"author":{"gitId":"jonyeokj"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":45,"author":{"gitId":"jonyeokj"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2023-10-18"},{"lineNumber":46,"author":{"gitId":"jonyeokj"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredMeetingList().size() + 1);","lastModifiedDate":"2023-10-18"},{"lineNumber":47,"author":{"gitId":"jonyeokj"},"content":"        DeleteMeetingCommand deleteMeetingCommand \u003d new DeleteMeetingCommand(outOfBoundIndex);","lastModifiedDate":"2023-10-18"},{"lineNumber":48,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":49,"author":{"gitId":"jonyeokj"},"content":"        assertCommandFailure(deleteMeetingCommand, model, Messages.MESSAGE_INVALID_MEETING_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-18"},{"lineNumber":50,"author":{"gitId":"jonyeokj"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":51,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":52,"author":{"gitId":"jonyeokj"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":53,"author":{"gitId":"jonyeokj"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2023-10-18"},{"lineNumber":54,"author":{"gitId":"jonyeokj"},"content":"        showMeetingAtIndex(model, INDEX_FIRST);","lastModifiedDate":"2023-10-18"},{"lineNumber":55,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":56,"author":{"gitId":"jonyeokj"},"content":"        Meeting meetingToDelete \u003d model.getFilteredMeetingList().get(INDEX_FIRST.getZeroBased());","lastModifiedDate":"2023-10-18"},{"lineNumber":57,"author":{"gitId":"jonyeokj"},"content":"        DeleteMeetingCommand deleteMeetingCommand \u003d new DeleteMeetingCommand(INDEX_FIRST);","lastModifiedDate":"2023-10-18"},{"lineNumber":58,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":59,"author":{"gitId":"jonyeokj"},"content":"        String expectedMessage \u003d String.format(DeleteMeetingCommand.MESSAGE_DELETE_MEETING_SUCCESS,","lastModifiedDate":"2023-10-18"},{"lineNumber":60,"author":{"gitId":"jonyeokj"},"content":"                Messages.formatMeeting(meetingToDelete));","lastModifiedDate":"2023-10-18"},{"lineNumber":61,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":62,"author":{"gitId":"jonyeokj"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-18"},{"lineNumber":63,"author":{"gitId":"jonyeokj"},"content":"        expectedModel.deleteMeeting(meetingToDelete);","lastModifiedDate":"2023-10-18"},{"lineNumber":64,"author":{"gitId":"jonyeokj"},"content":"        showNoMeeting(expectedModel);","lastModifiedDate":"2023-10-18"},{"lineNumber":65,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":66,"author":{"gitId":"jonyeokj"},"content":"        assertCommandSuccess(deleteMeetingCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-18"},{"lineNumber":67,"author":{"gitId":"jonyeokj"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":68,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":69,"author":{"gitId":"jonyeokj"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":70,"author":{"gitId":"jonyeokj"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2023-10-18"},{"lineNumber":71,"author":{"gitId":"jonyeokj"},"content":"        showMeetingAtIndex(model, INDEX_FIRST);","lastModifiedDate":"2023-10-18"},{"lineNumber":72,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":73,"author":{"gitId":"jonyeokj"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND;","lastModifiedDate":"2023-10-18"},{"lineNumber":74,"author":{"gitId":"jonyeokj"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2023-10-18"},{"lineNumber":75,"author":{"gitId":"jonyeokj"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getMeetingList().size());","lastModifiedDate":"2023-10-18"},{"lineNumber":76,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":77,"author":{"gitId":"jonyeokj"},"content":"        DeleteMeetingCommand deleteMeetingCommand \u003d new DeleteMeetingCommand(outOfBoundIndex);","lastModifiedDate":"2023-10-18"},{"lineNumber":78,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":79,"author":{"gitId":"jonyeokj"},"content":"        assertCommandFailure(deleteMeetingCommand, model, Messages.MESSAGE_INVALID_MEETING_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-18"},{"lineNumber":80,"author":{"gitId":"jonyeokj"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":81,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":82,"author":{"gitId":"jonyeokj"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":83,"author":{"gitId":"jonyeokj"},"content":"    public void equals() {","lastModifiedDate":"2023-10-18"},{"lineNumber":84,"author":{"gitId":"jonyeokj"},"content":"        DeleteMeetingCommand deleteFirstCommand \u003d new DeleteMeetingCommand(INDEX_FIRST);","lastModifiedDate":"2023-10-18"},{"lineNumber":85,"author":{"gitId":"jonyeokj"},"content":"        DeleteMeetingCommand deleteSecondCommand \u003d new DeleteMeetingCommand(INDEX_SECOND);","lastModifiedDate":"2023-10-18"},{"lineNumber":86,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":87,"author":{"gitId":"jonyeokj"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-18"},{"lineNumber":88,"author":{"gitId":"jonyeokj"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2023-10-18"},{"lineNumber":89,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":90,"author":{"gitId":"jonyeokj"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-18"},{"lineNumber":91,"author":{"gitId":"jonyeokj"},"content":"        DeleteMeetingCommand deleteFirstCommandCopy \u003d new DeleteMeetingCommand(INDEX_FIRST);","lastModifiedDate":"2023-10-18"},{"lineNumber":92,"author":{"gitId":"jonyeokj"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2023-10-18"},{"lineNumber":93,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":94,"author":{"gitId":"jonyeokj"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-18"},{"lineNumber":95,"author":{"gitId":"jonyeokj"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2023-10-18"},{"lineNumber":96,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":97,"author":{"gitId":"jonyeokj"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-18"},{"lineNumber":98,"author":{"gitId":"jonyeokj"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2023-10-18"},{"lineNumber":99,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":100,"author":{"gitId":"jonyeokj"},"content":"        // different meeting -\u003e returns false","lastModifiedDate":"2023-10-18"},{"lineNumber":101,"author":{"gitId":"jonyeokj"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2023-10-18"},{"lineNumber":102,"author":{"gitId":"jonyeokj"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":103,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":104,"author":{"gitId":"jonyeokj"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":105,"author":{"gitId":"jonyeokj"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-18"},{"lineNumber":106,"author":{"gitId":"jonyeokj"},"content":"        Index targetIndex \u003d Index.fromOneBased(1);","lastModifiedDate":"2023-10-18"},{"lineNumber":107,"author":{"gitId":"jonyeokj"},"content":"        DeleteMeetingCommand deleteMeetingCommand \u003d new DeleteMeetingCommand(targetIndex);","lastModifiedDate":"2023-10-18"},{"lineNumber":108,"author":{"gitId":"jonyeokj"},"content":"        String expected \u003d DeleteMeetingCommand.class.getCanonicalName() + \"{targetIndex\u003d\" + targetIndex + \"}\";","lastModifiedDate":"2023-10-18"},{"lineNumber":109,"author":{"gitId":"jonyeokj"},"content":"        assertEquals(expected, deleteMeetingCommand.toString());","lastModifiedDate":"2023-10-18"},{"lineNumber":110,"author":{"gitId":"jonyeokj"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":111,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":112,"author":{"gitId":"jonyeokj"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":113,"author":{"gitId":"jonyeokj"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2023-10-18"},{"lineNumber":114,"author":{"gitId":"jonyeokj"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":115,"author":{"gitId":"jonyeokj"},"content":"    private void showNoMeeting(Model model) {","lastModifiedDate":"2023-10-18"},{"lineNumber":116,"author":{"gitId":"jonyeokj"},"content":"        model.updateFilteredMeetingList(p -\u003e false);","lastModifiedDate":"2023-10-18"},{"lineNumber":117,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":118,"author":{"gitId":"jonyeokj"},"content":"        assertTrue(model.getFilteredMeetingList().isEmpty());","lastModifiedDate":"2023-10-18"},{"lineNumber":119,"author":{"gitId":"jonyeokj"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":120,"author":{"gitId":"jonyeokj"},"content":"}","lastModifiedDate":"2023-10-18"}],"authorContributionMap":{"jonyeokj":120}},{"path":"src/test/java/seedu/address/logic/commands/DeleteMeetingNoteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jacobcuison"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-11-02"},{"lineNumber":2,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":3,"author":{"gitId":"jacobcuison"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-11-02"},{"lineNumber":4,"author":{"gitId":"jacobcuison"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-11-02"},{"lineNumber":5,"author":{"gitId":"jacobcuison"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_MEETING_NOTEID;","lastModifiedDate":"2023-11-02"},{"lineNumber":6,"author":{"gitId":"jacobcuison"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-11-02"},{"lineNumber":7,"author":{"gitId":"jacobcuison"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-11-02"},{"lineNumber":8,"author":{"gitId":"jacobcuison"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showMeetingAtIndex;","lastModifiedDate":"2023-11-02"},{"lineNumber":9,"author":{"gitId":"jacobcuison"},"content":"import static seedu.address.testutil.TypicalAddressBook.getTypicalAddressBook;","lastModifiedDate":"2023-11-02"},{"lineNumber":10,"author":{"gitId":"jacobcuison"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST;","lastModifiedDate":"2023-11-02"},{"lineNumber":11,"author":{"gitId":"jacobcuison"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND;","lastModifiedDate":"2023-11-02"},{"lineNumber":12,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":13,"author":{"gitId":"jacobcuison"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-11-02"},{"lineNumber":14,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":15,"author":{"gitId":"jacobcuison"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-11-02"},{"lineNumber":16,"author":{"gitId":"jacobcuison"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-11-02"},{"lineNumber":17,"author":{"gitId":"jacobcuison"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2023-11-02"},{"lineNumber":18,"author":{"gitId":"jacobcuison"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-11-02"},{"lineNumber":19,"author":{"gitId":"jacobcuison"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-11-02"},{"lineNumber":20,"author":{"gitId":"jacobcuison"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-11-02"},{"lineNumber":21,"author":{"gitId":"jacobcuison"},"content":"import seedu.address.model.meeting.Meeting;","lastModifiedDate":"2023-11-02"},{"lineNumber":22,"author":{"gitId":"jacobcuison"},"content":"import seedu.address.testutil.MeetingBuilder;","lastModifiedDate":"2023-11-02"},{"lineNumber":23,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":24,"author":{"gitId":"jacobcuison"},"content":"/**","lastModifiedDate":"2023-11-02"},{"lineNumber":25,"author":{"gitId":"jacobcuison"},"content":" * Contains integration tests (interaction with the Model) and unit tests for DeleteMeetingNoteCommand.","lastModifiedDate":"2023-11-02"},{"lineNumber":26,"author":{"gitId":"jacobcuison"},"content":" */","lastModifiedDate":"2023-11-02"},{"lineNumber":27,"author":{"gitId":"jacobcuison"},"content":"public class DeleteMeetingNoteCommandTest {","lastModifiedDate":"2023-11-02"},{"lineNumber":28,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":29,"author":{"gitId":"jacobcuison"},"content":"    private static final String NOTE_STUB \u003d \"Some note\";","lastModifiedDate":"2023-11-02"},{"lineNumber":30,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":31,"author":{"gitId":"jacobcuison"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-11-02"},{"lineNumber":32,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":33,"author":{"gitId":"jacobcuison"},"content":"    @Test","lastModifiedDate":"2023-11-02"},{"lineNumber":34,"author":{"gitId":"jacobcuison"},"content":"    public void execute_deleteNoteUnfilteredList_failure() {","lastModifiedDate":"2023-11-02"},{"lineNumber":35,"author":{"gitId":"jacobcuison"},"content":"        Meeting firstMeeting \u003d model.getFilteredMeetingList().get(INDEX_FIRST.getZeroBased());","lastModifiedDate":"2023-11-02"},{"lineNumber":36,"author":{"gitId":"jacobcuison"},"content":"        Meeting editedMeeting \u003d new MeetingBuilder(firstMeeting).withNotes().build();","lastModifiedDate":"2023-11-02"},{"lineNumber":37,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":38,"author":{"gitId":"jacobcuison"},"content":"        DeleteMeetingNoteCommand deleteMeetingNoteCommand \u003d new DeleteMeetingNoteCommand(INDEX_FIRST,","lastModifiedDate":"2023-11-02"},{"lineNumber":39,"author":{"gitId":"jacobcuison"},"content":"                VALID_MEETING_NOTEID);","lastModifiedDate":"2023-11-02"},{"lineNumber":40,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":41,"author":{"gitId":"jacobcuison"},"content":"        String expectedMessage \u003d String.format(DeleteMeetingNoteCommand.MESSAGE_DELETE_NOTE_FAILURE, editedMeeting);","lastModifiedDate":"2023-11-02"},{"lineNumber":42,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":43,"author":{"gitId":"jacobcuison"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2023-11-02"},{"lineNumber":44,"author":{"gitId":"jacobcuison"},"content":"        expectedModel.setMeeting(firstMeeting, editedMeeting);","lastModifiedDate":"2023-11-02"},{"lineNumber":45,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":46,"author":{"gitId":"jacobcuison"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage, false, false);","lastModifiedDate":"2023-11-02"},{"lineNumber":47,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":48,"author":{"gitId":"jacobcuison"},"content":"        assertCommandSuccess(deleteMeetingNoteCommand, model, expectedCommandResult, expectedModel);","lastModifiedDate":"2023-11-02"},{"lineNumber":49,"author":{"gitId":"jacobcuison"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":50,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":51,"author":{"gitId":"jacobcuison"},"content":"    @Test","lastModifiedDate":"2023-11-02"},{"lineNumber":52,"author":{"gitId":"jacobcuison"},"content":"    public void execute_filteredList_failure() {","lastModifiedDate":"2023-11-02"},{"lineNumber":53,"author":{"gitId":"jacobcuison"},"content":"        showMeetingAtIndex(model, INDEX_FIRST);","lastModifiedDate":"2023-11-02"},{"lineNumber":54,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":55,"author":{"gitId":"jacobcuison"},"content":"        Meeting firstMeeting \u003d model.getFilteredMeetingList().get(INDEX_FIRST.getZeroBased());","lastModifiedDate":"2023-11-02"},{"lineNumber":56,"author":{"gitId":"jacobcuison"},"content":"        Meeting editedMeeting \u003d new MeetingBuilder(model.getFilteredMeetingList()","lastModifiedDate":"2023-11-02"},{"lineNumber":57,"author":{"gitId":"jacobcuison"},"content":"                .get(INDEX_FIRST.getZeroBased()))","lastModifiedDate":"2023-11-02"},{"lineNumber":58,"author":{"gitId":"jacobcuison"},"content":"                .withNotes().build();","lastModifiedDate":"2023-11-02"},{"lineNumber":59,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":60,"author":{"gitId":"jacobcuison"},"content":"        DeleteMeetingNoteCommand deleteMeetingNoteCommand \u003d new DeleteMeetingNoteCommand(INDEX_FIRST,","lastModifiedDate":"2023-11-02"},{"lineNumber":61,"author":{"gitId":"jacobcuison"},"content":"                VALID_MEETING_NOTEID);","lastModifiedDate":"2023-11-02"},{"lineNumber":62,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":63,"author":{"gitId":"jacobcuison"},"content":"        String expectedMessage \u003d String.format(DeleteMeetingNoteCommand.MESSAGE_DELETE_NOTE_FAILURE, editedMeeting);","lastModifiedDate":"2023-11-02"},{"lineNumber":64,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":65,"author":{"gitId":"jacobcuison"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2023-11-02"},{"lineNumber":66,"author":{"gitId":"jacobcuison"},"content":"        expectedModel.setMeeting(firstMeeting, editedMeeting);","lastModifiedDate":"2023-11-02"},{"lineNumber":67,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":68,"author":{"gitId":"jacobcuison"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage, false, false);","lastModifiedDate":"2023-11-02"},{"lineNumber":69,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":70,"author":{"gitId":"jacobcuison"},"content":"        assertCommandSuccess(deleteMeetingNoteCommand, model, expectedCommandResult, expectedModel);","lastModifiedDate":"2023-11-02"},{"lineNumber":71,"author":{"gitId":"jacobcuison"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":72,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":73,"author":{"gitId":"jacobcuison"},"content":"    @Test","lastModifiedDate":"2023-11-02"},{"lineNumber":74,"author":{"gitId":"jacobcuison"},"content":"    public void execute_invalidMeetingIndexUnfilteredList_failure() {","lastModifiedDate":"2023-11-02"},{"lineNumber":75,"author":{"gitId":"jacobcuison"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredMeetingList().size() + 1);","lastModifiedDate":"2023-11-02"},{"lineNumber":76,"author":{"gitId":"jacobcuison"},"content":"        DeleteMeetingNoteCommand deleteMeetingNoteCommand \u003d new DeleteMeetingNoteCommand(outOfBoundIndex,","lastModifiedDate":"2023-11-02"},{"lineNumber":77,"author":{"gitId":"jacobcuison"},"content":"                VALID_MEETING_NOTEID);","lastModifiedDate":"2023-11-02"},{"lineNumber":78,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":79,"author":{"gitId":"jacobcuison"},"content":"        assertCommandFailure(deleteMeetingNoteCommand, model, Messages.MESSAGE_INVALID_MEETING_DISPLAYED_INDEX);","lastModifiedDate":"2023-11-02"},{"lineNumber":80,"author":{"gitId":"jacobcuison"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":81,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":82,"author":{"gitId":"jacobcuison"},"content":"    /**","lastModifiedDate":"2023-11-02"},{"lineNumber":83,"author":{"gitId":"jacobcuison"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2023-11-02"},{"lineNumber":84,"author":{"gitId":"jacobcuison"},"content":"     * but smaller than size of address book","lastModifiedDate":"2023-11-02"},{"lineNumber":85,"author":{"gitId":"jacobcuison"},"content":"     */","lastModifiedDate":"2023-11-02"},{"lineNumber":86,"author":{"gitId":"jacobcuison"},"content":"    @Test","lastModifiedDate":"2023-11-02"},{"lineNumber":87,"author":{"gitId":"jacobcuison"},"content":"    public void execute_invalidMeetingIndexFilteredList_failure() {","lastModifiedDate":"2023-11-02"},{"lineNumber":88,"author":{"gitId":"jacobcuison"},"content":"        showMeetingAtIndex(model, INDEX_FIRST);","lastModifiedDate":"2023-11-02"},{"lineNumber":89,"author":{"gitId":"jacobcuison"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND;","lastModifiedDate":"2023-11-02"},{"lineNumber":90,"author":{"gitId":"jacobcuison"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2023-11-02"},{"lineNumber":91,"author":{"gitId":"jacobcuison"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getMeetingList().size());","lastModifiedDate":"2023-11-02"},{"lineNumber":92,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":93,"author":{"gitId":"jacobcuison"},"content":"        DeleteMeetingNoteCommand deleteMeetingNoteCommand \u003d new DeleteMeetingNoteCommand(outOfBoundIndex,","lastModifiedDate":"2023-11-02"},{"lineNumber":94,"author":{"gitId":"jacobcuison"},"content":"                VALID_MEETING_NOTEID);","lastModifiedDate":"2023-11-02"},{"lineNumber":95,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":96,"author":{"gitId":"jacobcuison"},"content":"        assertCommandFailure(deleteMeetingNoteCommand, model, Messages.MESSAGE_INVALID_MEETING_DISPLAYED_INDEX);","lastModifiedDate":"2023-11-02"},{"lineNumber":97,"author":{"gitId":"jacobcuison"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":98,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":99,"author":{"gitId":"jacobcuison"},"content":"    @Test","lastModifiedDate":"2023-11-02"},{"lineNumber":100,"author":{"gitId":"jacobcuison"},"content":"    public void equals() {","lastModifiedDate":"2023-11-02"},{"lineNumber":101,"author":{"gitId":"jacobcuison"},"content":"        final DeleteMeetingNoteCommand standardCommand \u003d new DeleteMeetingNoteCommand(INDEX_FIRST,","lastModifiedDate":"2023-11-02"},{"lineNumber":102,"author":{"gitId":"jacobcuison"},"content":"                VALID_MEETING_NOTEID);","lastModifiedDate":"2023-11-02"},{"lineNumber":103,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":104,"author":{"gitId":"jacobcuison"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-11-02"},{"lineNumber":105,"author":{"gitId":"jacobcuison"},"content":"        DeleteMeetingNoteCommand commandWithSameValues \u003d new DeleteMeetingNoteCommand(INDEX_FIRST,","lastModifiedDate":"2023-11-02"},{"lineNumber":106,"author":{"gitId":"jacobcuison"},"content":"                VALID_MEETING_NOTEID);","lastModifiedDate":"2023-11-02"},{"lineNumber":107,"author":{"gitId":"jacobcuison"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2023-11-02"},{"lineNumber":108,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":109,"author":{"gitId":"jacobcuison"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-11-02"},{"lineNumber":110,"author":{"gitId":"jacobcuison"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2023-11-02"},{"lineNumber":111,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":112,"author":{"gitId":"jacobcuison"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-11-02"},{"lineNumber":113,"author":{"gitId":"jacobcuison"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2023-11-02"},{"lineNumber":114,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":115,"author":{"gitId":"jacobcuison"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-11-02"},{"lineNumber":116,"author":{"gitId":"jacobcuison"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2023-11-02"},{"lineNumber":117,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":118,"author":{"gitId":"jacobcuison"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2023-11-02"},{"lineNumber":119,"author":{"gitId":"jacobcuison"},"content":"        assertFalse(standardCommand.equals(new DeleteMeetingNoteCommand(INDEX_SECOND,","lastModifiedDate":"2023-11-02"},{"lineNumber":120,"author":{"gitId":"jacobcuison"},"content":"                VALID_MEETING_NOTEID)));","lastModifiedDate":"2023-11-02"},{"lineNumber":121,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":122,"author":{"gitId":"jacobcuison"},"content":"        // same noteID -\u003e returns true","lastModifiedDate":"2023-11-02"},{"lineNumber":123,"author":{"gitId":"jacobcuison"},"content":"        assertTrue(standardCommand.equals(new DeleteMeetingNoteCommand(INDEX_FIRST,","lastModifiedDate":"2023-11-02"},{"lineNumber":124,"author":{"gitId":"jacobcuison"},"content":"                VALID_MEETING_NOTEID)));","lastModifiedDate":"2023-11-02"},{"lineNumber":125,"author":{"gitId":"jacobcuison"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":126,"author":{"gitId":"jacobcuison"},"content":"}","lastModifiedDate":"2023-11-02"}],"authorContributionMap":{"jacobcuison":126}},{"path":"src/test/java/seedu/address/logic/commands/DeleteNoteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jacobcuison"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-11-02"},{"lineNumber":2,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":3,"author":{"gitId":"jacobcuison"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-11-02"},{"lineNumber":4,"author":{"gitId":"jacobcuison"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-11-02"},{"lineNumber":5,"author":{"gitId":"jacobcuison"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_CONTACT_NOTEID;","lastModifiedDate":"2023-11-02"},{"lineNumber":6,"author":{"gitId":"jacobcuison"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-11-02"},{"lineNumber":7,"author":{"gitId":"jacobcuison"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-11-02"},{"lineNumber":8,"author":{"gitId":"jacobcuison"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showContactAtIndex;","lastModifiedDate":"2023-11-02"},{"lineNumber":9,"author":{"gitId":"jacobcuison"},"content":"import static seedu.address.testutil.TypicalAddressBook.getTypicalAddressBook;","lastModifiedDate":"2023-11-02"},{"lineNumber":10,"author":{"gitId":"jacobcuison"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST;","lastModifiedDate":"2023-11-02"},{"lineNumber":11,"author":{"gitId":"jacobcuison"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND;","lastModifiedDate":"2023-11-02"},{"lineNumber":12,"author":{"gitId":"jacobcuison"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_THIRD;","lastModifiedDate":"2023-11-02"},{"lineNumber":13,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":14,"author":{"gitId":"jacobcuison"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-11-02"},{"lineNumber":15,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":16,"author":{"gitId":"jacobcuison"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-11-02"},{"lineNumber":17,"author":{"gitId":"jacobcuison"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-11-02"},{"lineNumber":18,"author":{"gitId":"jacobcuison"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2023-11-02"},{"lineNumber":19,"author":{"gitId":"jacobcuison"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-11-02"},{"lineNumber":20,"author":{"gitId":"jacobcuison"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-11-02"},{"lineNumber":21,"author":{"gitId":"jacobcuison"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-11-02"},{"lineNumber":22,"author":{"gitId":"jacobcuison"},"content":"import seedu.address.model.contact.Contact;","lastModifiedDate":"2023-11-02"},{"lineNumber":23,"author":{"gitId":"jacobcuison"},"content":"import seedu.address.testutil.ContactBuilder;","lastModifiedDate":"2023-11-02"},{"lineNumber":24,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":25,"author":{"gitId":"jacobcuison"},"content":"/**","lastModifiedDate":"2023-11-02"},{"lineNumber":26,"author":{"gitId":"jacobcuison"},"content":" * Contains integration tests (interaction with the Model) and unit tests for DeleteMeetingNoteCommand.","lastModifiedDate":"2023-11-02"},{"lineNumber":27,"author":{"gitId":"jacobcuison"},"content":" */","lastModifiedDate":"2023-11-02"},{"lineNumber":28,"author":{"gitId":"jacobcuison"},"content":"public class DeleteNoteCommandTest {","lastModifiedDate":"2023-11-02"},{"lineNumber":29,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":30,"author":{"gitId":"jacobcuison"},"content":"    private static final String NOTE_STUB \u003d \"Some note\";","lastModifiedDate":"2023-11-02"},{"lineNumber":31,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":32,"author":{"gitId":"jacobcuison"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-11-02"},{"lineNumber":33,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":34,"author":{"gitId":"jacobcuison"},"content":"    @Test","lastModifiedDate":"2023-11-02"},{"lineNumber":35,"author":{"gitId":"jacobcuison"},"content":"    public void execute_deleteNoteUnfilteredList_success() {","lastModifiedDate":"2023-11-02"},{"lineNumber":36,"author":{"gitId":"jacobcuison"},"content":"        Contact firstContact \u003d model.getFilteredContactList().get(INDEX_THIRD.getZeroBased());","lastModifiedDate":"2023-11-02"},{"lineNumber":37,"author":{"gitId":"jacobcuison"},"content":"        Contact editedContact \u003d new ContactBuilder(firstContact).withNotes().build();","lastModifiedDate":"2023-11-02"},{"lineNumber":38,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":39,"author":{"gitId":"jacobcuison"},"content":"        DeleteNoteCommand deleteNoteCommand \u003d new DeleteNoteCommand(INDEX_THIRD, VALID_CONTACT_NOTEID);","lastModifiedDate":"2023-11-02"},{"lineNumber":40,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":41,"author":{"gitId":"jacobcuison"},"content":"        String expectedMessage \u003d String.format(DeleteNoteCommand.MESSAGE_DELETE_NOTE_SUCCESS, editedContact);","lastModifiedDate":"2023-11-02"},{"lineNumber":42,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":43,"author":{"gitId":"jacobcuison"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2023-11-02"},{"lineNumber":44,"author":{"gitId":"jacobcuison"},"content":"        expectedModel.setContact(firstContact, editedContact);","lastModifiedDate":"2023-11-02"},{"lineNumber":45,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":46,"author":{"gitId":"jacobcuison"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage, false, false);","lastModifiedDate":"2023-11-02"},{"lineNumber":47,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":48,"author":{"gitId":"jacobcuison"},"content":"        assertCommandSuccess(deleteNoteCommand, model, expectedCommandResult, expectedModel);","lastModifiedDate":"2023-11-02"},{"lineNumber":49,"author":{"gitId":"jacobcuison"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":50,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":51,"author":{"gitId":"jacobcuison"},"content":"    @Test","lastModifiedDate":"2023-11-02"},{"lineNumber":52,"author":{"gitId":"jacobcuison"},"content":"    public void execute_filteredList_failure() {","lastModifiedDate":"2023-11-02"},{"lineNumber":53,"author":{"gitId":"jacobcuison"},"content":"        showContactAtIndex(model, INDEX_FIRST);","lastModifiedDate":"2023-11-02"},{"lineNumber":54,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":55,"author":{"gitId":"jacobcuison"},"content":"        Contact firstContact \u003d model.getFilteredContactList().get(INDEX_FIRST.getZeroBased());","lastModifiedDate":"2023-11-02"},{"lineNumber":56,"author":{"gitId":"jacobcuison"},"content":"        Contact editedContact \u003d new ContactBuilder(model.getFilteredContactList()","lastModifiedDate":"2023-11-02"},{"lineNumber":57,"author":{"gitId":"jacobcuison"},"content":"                .get(INDEX_FIRST.getZeroBased()))","lastModifiedDate":"2023-11-02"},{"lineNumber":58,"author":{"gitId":"jacobcuison"},"content":"                .withNotes().build();","lastModifiedDate":"2023-11-02"},{"lineNumber":59,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":60,"author":{"gitId":"jacobcuison"},"content":"        DeleteNoteCommand deleteNoteCommand \u003d new DeleteNoteCommand(INDEX_FIRST, VALID_CONTACT_NOTEID);","lastModifiedDate":"2023-11-02"},{"lineNumber":61,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":62,"author":{"gitId":"jacobcuison"},"content":"        String expectedMessage \u003d String.format(DeleteNoteCommand.MESSAGE_DELETE_NOTE_FAILURE, editedContact);","lastModifiedDate":"2023-11-02"},{"lineNumber":63,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":64,"author":{"gitId":"jacobcuison"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2023-11-02"},{"lineNumber":65,"author":{"gitId":"jacobcuison"},"content":"        expectedModel.setContact(firstContact, editedContact);","lastModifiedDate":"2023-11-02"},{"lineNumber":66,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":67,"author":{"gitId":"jacobcuison"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage, false, false);","lastModifiedDate":"2023-11-02"},{"lineNumber":68,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":69,"author":{"gitId":"jacobcuison"},"content":"        assertCommandSuccess(deleteNoteCommand, model, expectedCommandResult, expectedModel);","lastModifiedDate":"2023-11-02"},{"lineNumber":70,"author":{"gitId":"jacobcuison"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":71,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":72,"author":{"gitId":"jacobcuison"},"content":"    @Test","lastModifiedDate":"2023-11-02"},{"lineNumber":73,"author":{"gitId":"jacobcuison"},"content":"    public void execute_invalidContactIndexUnfilteredList_failure() {","lastModifiedDate":"2023-11-02"},{"lineNumber":74,"author":{"gitId":"jacobcuison"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredContactList().size() + 1);","lastModifiedDate":"2023-11-02"},{"lineNumber":75,"author":{"gitId":"jacobcuison"},"content":"        DeleteNoteCommand deleteNoteCommand \u003d new DeleteNoteCommand(outOfBoundIndex, VALID_CONTACT_NOTEID);","lastModifiedDate":"2023-11-02"},{"lineNumber":76,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":77,"author":{"gitId":"jacobcuison"},"content":"        assertCommandFailure(deleteNoteCommand, model, Messages.MESSAGE_INVALID_CONTACT_DISPLAYED_INDEX);","lastModifiedDate":"2023-11-02"},{"lineNumber":78,"author":{"gitId":"jacobcuison"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":79,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":80,"author":{"gitId":"jacobcuison"},"content":"    /**","lastModifiedDate":"2023-11-02"},{"lineNumber":81,"author":{"gitId":"jacobcuison"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2023-11-02"},{"lineNumber":82,"author":{"gitId":"jacobcuison"},"content":"     * but smaller than size of address book","lastModifiedDate":"2023-11-02"},{"lineNumber":83,"author":{"gitId":"jacobcuison"},"content":"     */","lastModifiedDate":"2023-11-02"},{"lineNumber":84,"author":{"gitId":"jacobcuison"},"content":"    @Test","lastModifiedDate":"2023-11-02"},{"lineNumber":85,"author":{"gitId":"jacobcuison"},"content":"    public void execute_invalidContactIndexFilteredList_failure() {","lastModifiedDate":"2023-11-02"},{"lineNumber":86,"author":{"gitId":"jacobcuison"},"content":"        showContactAtIndex(model, INDEX_FIRST);","lastModifiedDate":"2023-11-02"},{"lineNumber":87,"author":{"gitId":"jacobcuison"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND;","lastModifiedDate":"2023-11-02"},{"lineNumber":88,"author":{"gitId":"jacobcuison"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2023-11-02"},{"lineNumber":89,"author":{"gitId":"jacobcuison"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getContactList().size());","lastModifiedDate":"2023-11-02"},{"lineNumber":90,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":91,"author":{"gitId":"jacobcuison"},"content":"        DeleteNoteCommand deleteNoteCommand \u003d new DeleteNoteCommand(outOfBoundIndex, VALID_CONTACT_NOTEID);","lastModifiedDate":"2023-11-02"},{"lineNumber":92,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":93,"author":{"gitId":"jacobcuison"},"content":"        assertCommandFailure(deleteNoteCommand, model, Messages.MESSAGE_INVALID_CONTACT_DISPLAYED_INDEX);","lastModifiedDate":"2023-11-02"},{"lineNumber":94,"author":{"gitId":"jacobcuison"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":95,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":96,"author":{"gitId":"jacobcuison"},"content":"    @Test","lastModifiedDate":"2023-11-02"},{"lineNumber":97,"author":{"gitId":"jacobcuison"},"content":"    public void equals() {","lastModifiedDate":"2023-11-02"},{"lineNumber":98,"author":{"gitId":"jacobcuison"},"content":"        final DeleteNoteCommand standardCommand \u003d new DeleteNoteCommand(INDEX_FIRST,","lastModifiedDate":"2023-11-02"},{"lineNumber":99,"author":{"gitId":"jacobcuison"},"content":"                VALID_CONTACT_NOTEID);","lastModifiedDate":"2023-11-02"},{"lineNumber":100,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":101,"author":{"gitId":"jacobcuison"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-11-02"},{"lineNumber":102,"author":{"gitId":"jacobcuison"},"content":"        DeleteNoteCommand commandWithSameValues \u003d new DeleteNoteCommand(INDEX_FIRST,","lastModifiedDate":"2023-11-02"},{"lineNumber":103,"author":{"gitId":"jacobcuison"},"content":"                VALID_CONTACT_NOTEID);","lastModifiedDate":"2023-11-02"},{"lineNumber":104,"author":{"gitId":"jacobcuison"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2023-11-02"},{"lineNumber":105,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":106,"author":{"gitId":"jacobcuison"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-11-02"},{"lineNumber":107,"author":{"gitId":"jacobcuison"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2023-11-02"},{"lineNumber":108,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":109,"author":{"gitId":"jacobcuison"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-11-02"},{"lineNumber":110,"author":{"gitId":"jacobcuison"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2023-11-02"},{"lineNumber":111,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":112,"author":{"gitId":"jacobcuison"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-11-02"},{"lineNumber":113,"author":{"gitId":"jacobcuison"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2023-11-02"},{"lineNumber":114,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":115,"author":{"gitId":"jacobcuison"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2023-11-02"},{"lineNumber":116,"author":{"gitId":"jacobcuison"},"content":"        assertFalse(standardCommand.equals(new DeleteNoteCommand(INDEX_SECOND,","lastModifiedDate":"2023-11-02"},{"lineNumber":117,"author":{"gitId":"jacobcuison"},"content":"                VALID_CONTACT_NOTEID)));","lastModifiedDate":"2023-11-02"},{"lineNumber":118,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":119,"author":{"gitId":"jacobcuison"},"content":"        // same noteID -\u003e returns true","lastModifiedDate":"2023-11-02"},{"lineNumber":120,"author":{"gitId":"jacobcuison"},"content":"        assertTrue(standardCommand.equals(new DeleteNoteCommand(INDEX_FIRST,","lastModifiedDate":"2023-11-02"},{"lineNumber":121,"author":{"gitId":"jacobcuison"},"content":"                VALID_CONTACT_NOTEID)));","lastModifiedDate":"2023-11-02"},{"lineNumber":122,"author":{"gitId":"jacobcuison"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":123,"author":{"gitId":"jacobcuison"},"content":"}","lastModifiedDate":"2023-11-02"}],"authorContributionMap":{"jacobcuison":123}},{"path":"src/test/java/seedu/address/logic/commands/EditContactCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"s-peiran"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-10-27"},{"lineNumber":13,"author":{"gitId":"jacobcuison"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showContactAtIndex;","lastModifiedDate":"2023-10-03"},{"lineNumber":14,"author":{"gitId":"jonyeokj"},"content":"import static seedu.address.testutil.TypicalAddressBook.getTypicalContactsAddressBook;","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"chiayunrong"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST;","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"chiayunrong"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND;","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":22,"author":{"gitId":"jacobcuison"},"content":"import seedu.address.logic.commands.EditContactCommand.EditContactDescriptor;","lastModifiedDate":"2023-10-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-05-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-04"},{"lineNumber":27,"author":{"gitId":"jacobcuison"},"content":"import seedu.address.model.contact.Contact;","lastModifiedDate":"2023-10-03"},{"lineNumber":28,"author":{"gitId":"jacobcuison"},"content":"import seedu.address.testutil.ContactBuilder;","lastModifiedDate":"2023-10-03"},{"lineNumber":29,"author":{"gitId":"jacobcuison"},"content":"import seedu.address.testutil.EditContactDescriptorBuilder;","lastModifiedDate":"2023-10-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-04"},{"lineNumber":32,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditCommand.","lastModifiedDate":"2020-12-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-04"},{"lineNumber":34,"author":{"gitId":"jacobcuison"},"content":"public class EditContactCommandTest {","lastModifiedDate":"2023-10-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":36,"author":{"gitId":"jonyeokj"},"content":"    private Model model \u003d new ModelManager(getTypicalContactsAddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":39,"author":{"gitId":"s-peiran"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2023-10-27"},{"lineNumber":40,"author":{"gitId":"jacobcuison"},"content":"        Contact editedContact \u003d new ContactBuilder().build();","lastModifiedDate":"2023-10-03"},{"lineNumber":41,"author":{"gitId":"jacobcuison"},"content":"        EditContactDescriptor descriptor \u003d new EditContactDescriptorBuilder(editedContact).build();","lastModifiedDate":"2023-10-03"},{"lineNumber":42,"author":{"gitId":"chiayunrong"},"content":"        EditContactCommand editContactCommand \u003d new EditContactCommand(INDEX_FIRST, descriptor);","lastModifiedDate":"2023-10-17"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":44,"author":{"gitId":"jacobcuison"},"content":"        String expectedMessage \u003d String.format(EditContactCommand.MESSAGE_EDIT_CONTACT_SUCCESS,","lastModifiedDate":"2023-10-03"},{"lineNumber":45,"author":{"gitId":"jonyeokj"},"content":"                Messages.formatContact(editedContact));","lastModifiedDate":"2023-10-13"},{"lineNumber":46,"author":{"gitId":"s-peiran"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":47,"author":{"gitId":"s-peiran"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2023-10-27"},{"lineNumber":48,"author":{"gitId":"s-peiran"},"content":"        expectedModel.setContact(model.getFilteredContactList().get(0), editedContact);","lastModifiedDate":"2023-10-27"},{"lineNumber":49,"author":{"gitId":"s-peiran"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":50,"author":{"gitId":"jonyeokj"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage, false, false);","lastModifiedDate":"2023-11-02"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"s-peiran"},"content":"        assertCommandSuccess(editContactCommand, model, expectedCommandResult, expectedModel);","lastModifiedDate":"2023-10-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":56,"author":{"gitId":"s-peiran"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2023-10-27"},{"lineNumber":57,"author":{"gitId":"jacobcuison"},"content":"        Index indexLastContact \u003d Index.fromOneBased(model.getFilteredContactList().size());","lastModifiedDate":"2023-10-03"},{"lineNumber":58,"author":{"gitId":"jacobcuison"},"content":"        Contact lastContact \u003d model.getFilteredContactList().get(indexLastContact.getZeroBased());","lastModifiedDate":"2023-10-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":60,"author":{"gitId":"jacobcuison"},"content":"        ContactBuilder contactInList \u003d new ContactBuilder(lastContact);","lastModifiedDate":"2023-10-03"},{"lineNumber":61,"author":{"gitId":"jacobcuison"},"content":"        Contact editedContact \u003d contactInList.withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2023-10-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":64,"author":{"gitId":"jacobcuison"},"content":"        EditContactDescriptor descriptor \u003d new EditContactDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2023-10-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":66,"author":{"gitId":"jacobcuison"},"content":"        EditContactCommand editContactCommand \u003d new EditContactCommand(indexLastContact, descriptor);","lastModifiedDate":"2023-10-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":68,"author":{"gitId":"jacobcuison"},"content":"        String expectedMessage \u003d String.format(EditContactCommand.MESSAGE_EDIT_CONTACT_SUCCESS,","lastModifiedDate":"2023-10-03"},{"lineNumber":69,"author":{"gitId":"jonyeokj"},"content":"                Messages.formatContact(editedContact));","lastModifiedDate":"2023-10-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":71,"author":{"gitId":"s-peiran"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2023-10-27"},{"lineNumber":72,"author":{"gitId":"s-peiran"},"content":"        expectedModel.setContact(lastContact, editedContact);","lastModifiedDate":"2023-10-27"},{"lineNumber":73,"author":{"gitId":"s-peiran"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":74,"author":{"gitId":"jonyeokj"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage, false, false);","lastModifiedDate":"2023-11-02"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":76,"author":{"gitId":"s-peiran"},"content":"        assertCommandSuccess(editContactCommand, model, expectedCommandResult, expectedModel);","lastModifiedDate":"2023-10-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":80,"author":{"gitId":"s-peiran"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2023-10-27"},{"lineNumber":81,"author":{"gitId":"chiayunrong"},"content":"        EditContactCommand editContactCommand \u003d new EditContactCommand(INDEX_FIRST,","lastModifiedDate":"2023-10-17"},{"lineNumber":82,"author":{"gitId":"jacobcuison"},"content":"                new EditContactDescriptor());","lastModifiedDate":"2023-10-03"},{"lineNumber":83,"author":{"gitId":"chiayunrong"},"content":"        Contact editedContact \u003d model.getFilteredContactList().get(INDEX_FIRST.getZeroBased());","lastModifiedDate":"2023-10-17"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":85,"author":{"gitId":"jacobcuison"},"content":"        String expectedMessage \u003d String.format(EditContactCommand.MESSAGE_EDIT_CONTACT_SUCCESS,","lastModifiedDate":"2023-10-03"},{"lineNumber":86,"author":{"gitId":"jonyeokj"},"content":"                Messages.formatContact(editedContact));","lastModifiedDate":"2023-10-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":90,"author":{"gitId":"jonyeokj"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage, false, false);","lastModifiedDate":"2023-11-02"},{"lineNumber":91,"author":{"gitId":"s-peiran"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":92,"author":{"gitId":"s-peiran"},"content":"        assertCommandSuccess(editContactCommand, model, expectedCommandResult, expectedModel);","lastModifiedDate":"2023-10-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":96,"author":{"gitId":"s-peiran"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2023-10-27"},{"lineNumber":97,"author":{"gitId":"chiayunrong"},"content":"        showContactAtIndex(model, INDEX_FIRST);","lastModifiedDate":"2023-10-17"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":99,"author":{"gitId":"chiayunrong"},"content":"        Contact contactInFilteredList \u003d model.getFilteredContactList().get(INDEX_FIRST.getZeroBased());","lastModifiedDate":"2023-10-17"},{"lineNumber":100,"author":{"gitId":"jacobcuison"},"content":"        Contact editedContact \u003d new ContactBuilder(contactInFilteredList).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2023-10-03"},{"lineNumber":101,"author":{"gitId":"chiayunrong"},"content":"        EditContactCommand editContactCommand \u003d new EditContactCommand(INDEX_FIRST,","lastModifiedDate":"2023-10-17"},{"lineNumber":102,"author":{"gitId":"jacobcuison"},"content":"                new EditContactDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2023-10-03"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":104,"author":{"gitId":"jacobcuison"},"content":"        String expectedMessage \u003d String.format(EditContactCommand.MESSAGE_EDIT_CONTACT_SUCCESS,","lastModifiedDate":"2023-10-03"},{"lineNumber":105,"author":{"gitId":"jonyeokj"},"content":"                Messages.formatContact(editedContact));","lastModifiedDate":"2023-10-13"},{"lineNumber":106,"author":{"gitId":"s-peiran"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":107,"author":{"gitId":"s-peiran"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2023-10-27"},{"lineNumber":108,"author":{"gitId":"s-peiran"},"content":"        expectedModel.setContact(model.getFilteredContactList().get(0), editedContact);","lastModifiedDate":"2023-10-27"},{"lineNumber":109,"author":{"gitId":"s-peiran"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":110,"author":{"gitId":"jonyeokj"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage, false, false);","lastModifiedDate":"2023-11-02"},{"lineNumber":111,"author":{"gitId":"s-peiran"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":112,"author":{"gitId":"s-peiran"},"content":"        assertCommandSuccess(editContactCommand, model, expectedCommandResult, expectedModel);","lastModifiedDate":"2023-10-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":116,"author":{"gitId":"jacobcuison"},"content":"    public void execute_duplicateContactUnfilteredList_failure() {","lastModifiedDate":"2023-10-03"},{"lineNumber":117,"author":{"gitId":"chiayunrong"},"content":"        Contact firstContact \u003d model.getFilteredContactList().get(INDEX_FIRST.getZeroBased());","lastModifiedDate":"2023-10-17"},{"lineNumber":118,"author":{"gitId":"jacobcuison"},"content":"        EditContactDescriptor descriptor \u003d new EditContactDescriptorBuilder(firstContact).build();","lastModifiedDate":"2023-10-03"},{"lineNumber":119,"author":{"gitId":"chiayunrong"},"content":"        EditContactCommand editContactCommand \u003d new EditContactCommand(INDEX_SECOND, descriptor);","lastModifiedDate":"2023-10-17"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":121,"author":{"gitId":"jacobcuison"},"content":"        assertCommandFailure(editContactCommand, model, EditContactCommand.MESSAGE_DUPLICATE_CONTACT);","lastModifiedDate":"2023-10-03"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":125,"author":{"gitId":"jacobcuison"},"content":"    public void execute_duplicateContactFilteredList_failure() {","lastModifiedDate":"2023-10-03"},{"lineNumber":126,"author":{"gitId":"chiayunrong"},"content":"        showContactAtIndex(model, INDEX_FIRST);","lastModifiedDate":"2023-10-17"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":128,"author":{"gitId":"jacobcuison"},"content":"        // edit contact in filtered list into a duplicate in address book","lastModifiedDate":"2023-10-03"},{"lineNumber":129,"author":{"gitId":"chiayunrong"},"content":"        Contact contactInList \u003d model.getAddressBook().getContactList().get(INDEX_SECOND.getZeroBased());","lastModifiedDate":"2023-10-17"},{"lineNumber":130,"author":{"gitId":"chiayunrong"},"content":"        EditContactCommand editContactCommand \u003d new EditContactCommand(INDEX_FIRST,","lastModifiedDate":"2023-10-17"},{"lineNumber":131,"author":{"gitId":"jacobcuison"},"content":"                new EditContactDescriptorBuilder(contactInList).build());","lastModifiedDate":"2023-10-03"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":133,"author":{"gitId":"jacobcuison"},"content":"        assertCommandFailure(editContactCommand, model, EditContactCommand.MESSAGE_DUPLICATE_CONTACT);","lastModifiedDate":"2023-10-03"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":137,"author":{"gitId":"jacobcuison"},"content":"    public void execute_invalidContactIndexUnfilteredList_failure() {","lastModifiedDate":"2023-10-03"},{"lineNumber":138,"author":{"gitId":"jacobcuison"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredContactList().size() + 1);","lastModifiedDate":"2023-10-03"},{"lineNumber":139,"author":{"gitId":"jacobcuison"},"content":"        EditContactDescriptor descriptor \u003d new EditContactDescriptorBuilder().withName(VALID_NAME_BOB).build();","lastModifiedDate":"2023-10-03"},{"lineNumber":140,"author":{"gitId":"jacobcuison"},"content":"        EditContactCommand editContactCommand \u003d new EditContactCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2023-10-03"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":142,"author":{"gitId":"jacobcuison"},"content":"        assertCommandFailure(editContactCommand, model, Messages.MESSAGE_INVALID_CONTACT_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-03"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-18"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2017-05-18"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     * but smaller than size of address book","lastModifiedDate":"2017-05-18"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-18"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":150,"author":{"gitId":"jacobcuison"},"content":"    public void execute_invalidContactIndexFilteredList_failure() {","lastModifiedDate":"2023-10-03"},{"lineNumber":151,"author":{"gitId":"chiayunrong"},"content":"        showContactAtIndex(model, INDEX_FIRST);","lastModifiedDate":"2023-10-17"},{"lineNumber":152,"author":{"gitId":"chiayunrong"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND;","lastModifiedDate":"2023-10-17"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-05-18"},{"lineNumber":154,"author":{"gitId":"jacobcuison"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getContactList().size());","lastModifiedDate":"2023-10-03"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":156,"author":{"gitId":"jacobcuison"},"content":"        EditContactCommand editContactCommand \u003d new EditContactCommand(outOfBoundIndex,","lastModifiedDate":"2023-10-03"},{"lineNumber":157,"author":{"gitId":"jacobcuison"},"content":"                new EditContactDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2023-10-03"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":159,"author":{"gitId":"jacobcuison"},"content":"        assertCommandFailure(editContactCommand, model, Messages.MESSAGE_INVALID_CONTACT_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-03"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":164,"author":{"gitId":"chiayunrong"},"content":"        final EditContactCommand standardCommand \u003d new EditContactCommand(INDEX_FIRST, DESC_AMY);","lastModifiedDate":"2023-10-17"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":167,"author":{"gitId":"jacobcuison"},"content":"        EditContactDescriptor copyDescriptor \u003d new EditContactDescriptor(DESC_AMY);","lastModifiedDate":"2023-10-03"},{"lineNumber":168,"author":{"gitId":"chiayunrong"},"content":"        EditContactCommand commandWithSameValues \u003d new EditContactCommand(INDEX_FIRST, copyDescriptor);","lastModifiedDate":"2023-10-17"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2017-05-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2017-05-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2017-05-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2017-05-08"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":181,"author":{"gitId":"chiayunrong"},"content":"        assertFalse(standardCommand.equals(new EditContactCommand(INDEX_SECOND, DESC_AMY)));","lastModifiedDate":"2023-10-17"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":184,"author":{"gitId":"chiayunrong"},"content":"        assertFalse(standardCommand.equals(new EditContactCommand(INDEX_FIRST, DESC_BOB)));","lastModifiedDate":"2023-10-17"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        Index index \u003d Index.fromOneBased(1);","lastModifiedDate":"2019-02-23"},{"lineNumber":190,"author":{"gitId":"jacobcuison"},"content":"        EditContactDescriptor editContactDescriptor \u003d new EditContactDescriptor();","lastModifiedDate":"2023-10-03"},{"lineNumber":191,"author":{"gitId":"jacobcuison"},"content":"        EditContactCommand editContactCommand \u003d new EditContactCommand(index, editContactDescriptor);","lastModifiedDate":"2023-10-03"},{"lineNumber":192,"author":{"gitId":"jacobcuison"},"content":"        String expected \u003d EditContactCommand.class.getCanonicalName() + \"{index\u003d\" + index + \", editContactDescriptor\u003d\"","lastModifiedDate":"2023-10-03"},{"lineNumber":193,"author":{"gitId":"jacobcuison"},"content":"                + editContactDescriptor + \"}\";","lastModifiedDate":"2023-10-03"},{"lineNumber":194,"author":{"gitId":"jacobcuison"},"content":"        assertEquals(expected, editContactCommand.toString());","lastModifiedDate":"2023-10-03"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-08"}],"authorContributionMap":{"jonyeokj":10,"jacobcuison":44,"s-peiran":22,"chiayunrong":19,"-":102}},{"path":"src/test/java/seedu/address/logic/commands/EditContactDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":16,"author":{"gitId":"jacobcuison"},"content":"import seedu.address.logic.commands.EditContactCommand.EditContactDescriptor;","lastModifiedDate":"2023-10-03"},{"lineNumber":17,"author":{"gitId":"jacobcuison"},"content":"import seedu.address.testutil.EditContactDescriptorBuilder;","lastModifiedDate":"2023-10-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"jacobcuison"},"content":"public class EditContactDescriptorTest {","lastModifiedDate":"2023-10-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"jacobcuison"},"content":"        EditContactDescriptor descriptorWithSameValues \u003d new EditContactDescriptor(DESC_AMY);","lastModifiedDate":"2023-10-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(descriptorWithSameValues));","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(DESC_AMY));","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(null));","lastModifiedDate":"2017-05-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(5));","lastModifiedDate":"2017-05-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(DESC_BOB));","lastModifiedDate":"2017-05-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":40,"author":{"gitId":"jacobcuison"},"content":"        EditContactDescriptor editedAmy \u003d new EditContactDescriptorBuilder(DESC_AMY).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2023-10-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":44,"author":{"gitId":"jacobcuison"},"content":"        editedAmy \u003d new EditContactDescriptorBuilder(DESC_AMY).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2023-10-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":48,"author":{"gitId":"jacobcuison"},"content":"        editedAmy \u003d new EditContactDescriptorBuilder(DESC_AMY).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2023-10-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":52,"author":{"gitId":"jacobcuison"},"content":"        editedAmy \u003d new EditContactDescriptorBuilder(DESC_AMY).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2023-10-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":56,"author":{"gitId":"jacobcuison"},"content":"        editedAmy \u003d new EditContactDescriptorBuilder(DESC_AMY).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2023-10-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":62,"author":{"gitId":"jacobcuison"},"content":"        EditContactDescriptor editContactDescriptor \u003d new EditContactDescriptor();","lastModifiedDate":"2023-10-03"},{"lineNumber":63,"author":{"gitId":"jacobcuison"},"content":"        String expected \u003d EditContactDescriptor.class.getCanonicalName() + \"{name\u003d\"","lastModifiedDate":"2023-10-03"},{"lineNumber":64,"author":{"gitId":"jacobcuison"},"content":"                + editContactDescriptor.getName().orElse(null) + \", phone\u003d\"","lastModifiedDate":"2023-10-03"},{"lineNumber":65,"author":{"gitId":"jacobcuison"},"content":"                + editContactDescriptor.getPhone().orElse(null) + \", email\u003d\"","lastModifiedDate":"2023-10-03"},{"lineNumber":66,"author":{"gitId":"jacobcuison"},"content":"                + editContactDescriptor.getEmail().orElse(null) + \", address\u003d\"","lastModifiedDate":"2023-10-03"},{"lineNumber":67,"author":{"gitId":"jacobcuison"},"content":"                + editContactDescriptor.getAddress().orElse(null) + \", tags\u003d\"","lastModifiedDate":"2023-10-03"},{"lineNumber":68,"author":{"gitId":"jacobcuison"},"content":"                + editContactDescriptor.getTags().orElse(null) + \", notes\u003d\"","lastModifiedDate":"2023-10-18"},{"lineNumber":69,"author":{"gitId":"jacobcuison"},"content":"                + editContactDescriptor.getNotes().orElse(null) + \"}\";","lastModifiedDate":"2023-10-18"},{"lineNumber":70,"author":{"gitId":"jacobcuison"},"content":"        assertEquals(expected, editContactDescriptor.toString());","lastModifiedDate":"2023-10-03"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"jacobcuison":18,"-":54}},{"path":"src/test/java/seedu/address/logic/commands/EditMeetingCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jonyeokj"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-18"},{"lineNumber":2,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":3,"author":{"gitId":"jonyeokj"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-18"},{"lineNumber":4,"author":{"gitId":"jonyeokj"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-18"},{"lineNumber":5,"author":{"gitId":"jonyeokj"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-18"},{"lineNumber":6,"author":{"gitId":"jonyeokj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_CHI;","lastModifiedDate":"2023-10-18"},{"lineNumber":7,"author":{"gitId":"jonyeokj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_ENG;","lastModifiedDate":"2023-10-18"},{"lineNumber":8,"author":{"gitId":"jonyeokj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TIME_CHI;","lastModifiedDate":"2023-10-18"},{"lineNumber":9,"author":{"gitId":"jonyeokj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TITLE_CHI;","lastModifiedDate":"2023-10-18"},{"lineNumber":10,"author":{"gitId":"jonyeokj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-10-18"},{"lineNumber":11,"author":{"gitId":"s-peiran"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-10-27"},{"lineNumber":12,"author":{"gitId":"jonyeokj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showMeetingAtIndex;","lastModifiedDate":"2023-10-18"},{"lineNumber":13,"author":{"gitId":"jonyeokj"},"content":"import static seedu.address.testutil.TypicalAddressBook.getTypicalMeetingsAddressBook;","lastModifiedDate":"2023-10-18"},{"lineNumber":14,"author":{"gitId":"jonyeokj"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST;","lastModifiedDate":"2023-10-18"},{"lineNumber":15,"author":{"gitId":"jonyeokj"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND;","lastModifiedDate":"2023-10-18"},{"lineNumber":16,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":17,"author":{"gitId":"jonyeokj"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-18"},{"lineNumber":18,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":19,"author":{"gitId":"jonyeokj"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-18"},{"lineNumber":20,"author":{"gitId":"jonyeokj"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-18"},{"lineNumber":21,"author":{"gitId":"jonyeokj"},"content":"import seedu.address.logic.commands.EditMeetingCommand.EditMeetingDescriptor;","lastModifiedDate":"2023-10-18"},{"lineNumber":22,"author":{"gitId":"s-peiran"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2023-10-27"},{"lineNumber":23,"author":{"gitId":"jonyeokj"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-18"},{"lineNumber":24,"author":{"gitId":"jonyeokj"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-10-18"},{"lineNumber":25,"author":{"gitId":"jonyeokj"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-10-18"},{"lineNumber":26,"author":{"gitId":"jonyeokj"},"content":"import seedu.address.model.meeting.Meeting;","lastModifiedDate":"2023-10-18"},{"lineNumber":27,"author":{"gitId":"jonyeokj"},"content":"import seedu.address.testutil.EditMeetingDescriptorBuilder;","lastModifiedDate":"2023-10-18"},{"lineNumber":28,"author":{"gitId":"jonyeokj"},"content":"import seedu.address.testutil.MeetingBuilder;","lastModifiedDate":"2023-10-18"},{"lineNumber":29,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":30,"author":{"gitId":"jonyeokj"},"content":"/**","lastModifiedDate":"2023-10-18"},{"lineNumber":31,"author":{"gitId":"jonyeokj"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditMeetingCommand.","lastModifiedDate":"2023-10-18"},{"lineNumber":32,"author":{"gitId":"jonyeokj"},"content":" */","lastModifiedDate":"2023-10-18"},{"lineNumber":33,"author":{"gitId":"jonyeokj"},"content":"public class EditMeetingCommandTest {","lastModifiedDate":"2023-10-18"},{"lineNumber":34,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":35,"author":{"gitId":"jonyeokj"},"content":"    private Model model \u003d new ModelManager(getTypicalMeetingsAddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-18"},{"lineNumber":36,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":37,"author":{"gitId":"jonyeokj"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":38,"author":{"gitId":"s-peiran"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2023-10-27"},{"lineNumber":39,"author":{"gitId":"jonyeokj"},"content":"        Meeting editedMeeting \u003d new MeetingBuilder().build();","lastModifiedDate":"2023-10-18"},{"lineNumber":40,"author":{"gitId":"jonyeokj"},"content":"        EditMeetingDescriptor descriptor \u003d new EditMeetingDescriptorBuilder(editedMeeting).build();","lastModifiedDate":"2023-10-18"},{"lineNumber":41,"author":{"gitId":"jonyeokj"},"content":"        EditMeetingCommand editMeetingCommand \u003d new EditMeetingCommand(INDEX_FIRST, descriptor);","lastModifiedDate":"2023-10-18"},{"lineNumber":42,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":43,"author":{"gitId":"jonyeokj"},"content":"        String expectedMessage \u003d String.format(EditMeetingCommand.MESSAGE_EDIT_MEETING_SUCCESS,","lastModifiedDate":"2023-10-18"},{"lineNumber":44,"author":{"gitId":"jonyeokj"},"content":"                Messages.formatMeeting(editedMeeting));","lastModifiedDate":"2023-10-18"},{"lineNumber":45,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":46,"author":{"gitId":"s-peiran"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2023-10-27"},{"lineNumber":47,"author":{"gitId":"s-peiran"},"content":"        expectedModel.setMeeting(model.getFilteredMeetingList().get(0), editedMeeting);","lastModifiedDate":"2023-10-27"},{"lineNumber":48,"author":{"gitId":"s-peiran"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":49,"author":{"gitId":"jonyeokj"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage, false, false);","lastModifiedDate":"2023-11-02"},{"lineNumber":50,"author":{"gitId":"s-peiran"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":51,"author":{"gitId":"s-peiran"},"content":"        assertCommandSuccess(editMeetingCommand, model, expectedCommandResult, expectedModel);","lastModifiedDate":"2023-10-27"},{"lineNumber":52,"author":{"gitId":"jonyeokj"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":53,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":54,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":55,"author":{"gitId":"jonyeokj"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":56,"author":{"gitId":"s-peiran"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2023-10-27"},{"lineNumber":57,"author":{"gitId":"jonyeokj"},"content":"        Index indexLastMeeting \u003d Index.fromOneBased(model.getFilteredMeetingList().size());","lastModifiedDate":"2023-10-18"},{"lineNumber":58,"author":{"gitId":"jonyeokj"},"content":"        Meeting lastMeeting \u003d model.getFilteredMeetingList().get(indexLastMeeting.getZeroBased());","lastModifiedDate":"2023-10-18"},{"lineNumber":59,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":60,"author":{"gitId":"jonyeokj"},"content":"        MeetingBuilder meetingInList \u003d new MeetingBuilder(lastMeeting);","lastModifiedDate":"2023-10-18"},{"lineNumber":61,"author":{"gitId":"jonyeokj"},"content":"        Meeting editedMeeting \u003d meetingInList.withTitle(VALID_TITLE_CHI).withTime(VALID_TIME_CHI).build();","lastModifiedDate":"2023-10-18"},{"lineNumber":62,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":63,"author":{"gitId":"jonyeokj"},"content":"        EditMeetingDescriptor descriptor \u003d new EditMeetingDescriptorBuilder().withTitle(VALID_TITLE_CHI)","lastModifiedDate":"2023-10-18"},{"lineNumber":64,"author":{"gitId":"jonyeokj"},"content":"                .withTime(VALID_TIME_CHI).build();","lastModifiedDate":"2023-10-18"},{"lineNumber":65,"author":{"gitId":"jonyeokj"},"content":"        EditMeetingCommand editMeetingCommand \u003d new EditMeetingCommand(indexLastMeeting, descriptor);","lastModifiedDate":"2023-10-18"},{"lineNumber":66,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":67,"author":{"gitId":"jonyeokj"},"content":"        String expectedMessage \u003d String.format(EditMeetingCommand.MESSAGE_EDIT_MEETING_SUCCESS,","lastModifiedDate":"2023-10-18"},{"lineNumber":68,"author":{"gitId":"jonyeokj"},"content":"                Messages.formatMeeting(editedMeeting));","lastModifiedDate":"2023-10-18"},{"lineNumber":69,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":70,"author":{"gitId":"s-peiran"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2023-10-27"},{"lineNumber":71,"author":{"gitId":"s-peiran"},"content":"        expectedModel.setMeeting(lastMeeting, editedMeeting);","lastModifiedDate":"2023-10-27"},{"lineNumber":72,"author":{"gitId":"s-peiran"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":73,"author":{"gitId":"jonyeokj"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage, false, false);","lastModifiedDate":"2023-11-02"},{"lineNumber":74,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":75,"author":{"gitId":"s-peiran"},"content":"        assertCommandSuccess(editMeetingCommand, model, expectedCommandResult, expectedModel);","lastModifiedDate":"2023-10-27"},{"lineNumber":76,"author":{"gitId":"jonyeokj"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":77,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":78,"author":{"gitId":"jonyeokj"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":79,"author":{"gitId":"s-peiran"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2023-10-27"},{"lineNumber":80,"author":{"gitId":"jonyeokj"},"content":"        EditMeetingCommand editMeetingCommand \u003d new EditMeetingCommand(INDEX_FIRST,","lastModifiedDate":"2023-10-18"},{"lineNumber":81,"author":{"gitId":"jonyeokj"},"content":"                new EditMeetingDescriptor());","lastModifiedDate":"2023-10-18"},{"lineNumber":82,"author":{"gitId":"jonyeokj"},"content":"        Meeting editedMeeting \u003d model.getFilteredMeetingList().get(INDEX_FIRST.getZeroBased());","lastModifiedDate":"2023-10-18"},{"lineNumber":83,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":84,"author":{"gitId":"jonyeokj"},"content":"        String expectedMessage \u003d String.format(EditMeetingCommand.MESSAGE_EDIT_MEETING_SUCCESS,","lastModifiedDate":"2023-10-18"},{"lineNumber":85,"author":{"gitId":"jonyeokj"},"content":"                Messages.formatMeeting(editedMeeting));","lastModifiedDate":"2023-10-18"},{"lineNumber":86,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":87,"author":{"gitId":"s-peiran"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2023-10-27"},{"lineNumber":88,"author":{"gitId":"s-peiran"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":89,"author":{"gitId":"jonyeokj"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage, false, false);","lastModifiedDate":"2023-11-02"},{"lineNumber":90,"author":{"gitId":"s-peiran"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":91,"author":{"gitId":"s-peiran"},"content":"        assertCommandSuccess(editMeetingCommand, model, expectedCommandResult, expectedModel);","lastModifiedDate":"2023-10-27"},{"lineNumber":92,"author":{"gitId":"jonyeokj"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":93,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":94,"author":{"gitId":"jonyeokj"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":95,"author":{"gitId":"s-peiran"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2023-10-27"},{"lineNumber":96,"author":{"gitId":"jonyeokj"},"content":"        showMeetingAtIndex(model, INDEX_FIRST);","lastModifiedDate":"2023-10-18"},{"lineNumber":97,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":98,"author":{"gitId":"jonyeokj"},"content":"        Meeting meetingInFilteredList \u003d model.getFilteredMeetingList().get(INDEX_FIRST.getZeroBased());","lastModifiedDate":"2023-10-18"},{"lineNumber":99,"author":{"gitId":"jonyeokj"},"content":"        Meeting editedMeeting \u003d new MeetingBuilder(meetingInFilteredList).withTitle(VALID_TITLE_CHI).build();","lastModifiedDate":"2023-10-18"},{"lineNumber":100,"author":{"gitId":"jonyeokj"},"content":"        EditMeetingCommand editMeetingCommand \u003d new EditMeetingCommand(INDEX_FIRST,","lastModifiedDate":"2023-10-18"},{"lineNumber":101,"author":{"gitId":"jonyeokj"},"content":"                new EditMeetingDescriptorBuilder().withTitle(VALID_TITLE_CHI).build());","lastModifiedDate":"2023-10-18"},{"lineNumber":102,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":103,"author":{"gitId":"jonyeokj"},"content":"        String expectedMessage \u003d String.format(EditMeetingCommand.MESSAGE_EDIT_MEETING_SUCCESS,","lastModifiedDate":"2023-10-18"},{"lineNumber":104,"author":{"gitId":"jonyeokj"},"content":"                Messages.formatMeeting(editedMeeting));","lastModifiedDate":"2023-10-18"},{"lineNumber":105,"author":{"gitId":"s-peiran"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":106,"author":{"gitId":"s-peiran"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2023-10-27"},{"lineNumber":107,"author":{"gitId":"s-peiran"},"content":"        expectedModel.setMeeting(model.getFilteredMeetingList().get(0), editedMeeting);","lastModifiedDate":"2023-10-27"},{"lineNumber":108,"author":{"gitId":"s-peiran"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":109,"author":{"gitId":"jonyeokj"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage, false, false);","lastModifiedDate":"2023-11-02"},{"lineNumber":110,"author":{"gitId":"s-peiran"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":111,"author":{"gitId":"s-peiran"},"content":"        assertCommandSuccess(editMeetingCommand, model, expectedCommandResult, expectedModel);","lastModifiedDate":"2023-10-27"},{"lineNumber":112,"author":{"gitId":"jonyeokj"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":113,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":114,"author":{"gitId":"jonyeokj"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":115,"author":{"gitId":"jonyeokj"},"content":"    public void execute_duplicateMeetingUnfilteredList_failure() {","lastModifiedDate":"2023-10-18"},{"lineNumber":116,"author":{"gitId":"jonyeokj"},"content":"        Meeting firstMeeting \u003d model.getFilteredMeetingList().get(INDEX_FIRST.getZeroBased());","lastModifiedDate":"2023-10-18"},{"lineNumber":117,"author":{"gitId":"jonyeokj"},"content":"        EditMeetingDescriptor descriptor \u003d new EditMeetingDescriptorBuilder(firstMeeting).build();","lastModifiedDate":"2023-10-18"},{"lineNumber":118,"author":{"gitId":"jonyeokj"},"content":"        EditMeetingCommand editMeetingCommand \u003d new EditMeetingCommand(INDEX_SECOND, descriptor);","lastModifiedDate":"2023-10-18"},{"lineNumber":119,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":120,"author":{"gitId":"jonyeokj"},"content":"        assertCommandFailure(editMeetingCommand, model, EditMeetingCommand.MESSAGE_DUPLICATE_MEETING);","lastModifiedDate":"2023-10-18"},{"lineNumber":121,"author":{"gitId":"jonyeokj"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":122,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":123,"author":{"gitId":"jonyeokj"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":124,"author":{"gitId":"jonyeokj"},"content":"    public void execute_duplicateMeetingFilteredList_failure() {","lastModifiedDate":"2023-10-18"},{"lineNumber":125,"author":{"gitId":"jonyeokj"},"content":"        showMeetingAtIndex(model, INDEX_FIRST);","lastModifiedDate":"2023-10-18"},{"lineNumber":126,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":127,"author":{"gitId":"jonyeokj"},"content":"        // edit ,eeting in filtered list into a duplicate in address book","lastModifiedDate":"2023-10-18"},{"lineNumber":128,"author":{"gitId":"jonyeokj"},"content":"        Meeting meetingInList \u003d model.getAddressBook().getMeetingList().get(INDEX_SECOND.getZeroBased());","lastModifiedDate":"2023-10-18"},{"lineNumber":129,"author":{"gitId":"jonyeokj"},"content":"        EditMeetingCommand editMeetingCommand \u003d new EditMeetingCommand(INDEX_FIRST,","lastModifiedDate":"2023-10-18"},{"lineNumber":130,"author":{"gitId":"jonyeokj"},"content":"                new EditMeetingDescriptorBuilder(meetingInList).build());","lastModifiedDate":"2023-10-18"},{"lineNumber":131,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":132,"author":{"gitId":"jonyeokj"},"content":"        assertCommandFailure(editMeetingCommand, model, EditMeetingCommand.MESSAGE_DUPLICATE_MEETING);","lastModifiedDate":"2023-10-18"},{"lineNumber":133,"author":{"gitId":"jonyeokj"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":134,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":135,"author":{"gitId":"jonyeokj"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":136,"author":{"gitId":"jonyeokj"},"content":"    public void execute_invalidMeetingIndexUnfilteredList_failure() {","lastModifiedDate":"2023-10-18"},{"lineNumber":137,"author":{"gitId":"jonyeokj"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredMeetingList().size() + 1);","lastModifiedDate":"2023-10-18"},{"lineNumber":138,"author":{"gitId":"jonyeokj"},"content":"        EditMeetingDescriptor descriptor \u003d new EditMeetingDescriptorBuilder().withTitle(VALID_TITLE_CHI).build();","lastModifiedDate":"2023-10-18"},{"lineNumber":139,"author":{"gitId":"jonyeokj"},"content":"        EditMeetingCommand editMeetingCommand \u003d new EditMeetingCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2023-10-18"},{"lineNumber":140,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":141,"author":{"gitId":"jonyeokj"},"content":"        assertCommandFailure(editMeetingCommand, model, Messages.MESSAGE_INVALID_MEETING_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-18"},{"lineNumber":142,"author":{"gitId":"jonyeokj"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":143,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":144,"author":{"gitId":"jonyeokj"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":145,"author":{"gitId":"jonyeokj"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2023-10-18"},{"lineNumber":146,"author":{"gitId":"jonyeokj"},"content":"     * but smaller than size of address book","lastModifiedDate":"2023-10-18"},{"lineNumber":147,"author":{"gitId":"jonyeokj"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":148,"author":{"gitId":"jonyeokj"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":149,"author":{"gitId":"jonyeokj"},"content":"    public void execute_invalidMeetingIndexFilteredList_failure() {","lastModifiedDate":"2023-10-18"},{"lineNumber":150,"author":{"gitId":"jonyeokj"},"content":"        showMeetingAtIndex(model, INDEX_FIRST);","lastModifiedDate":"2023-10-18"},{"lineNumber":151,"author":{"gitId":"jonyeokj"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND;","lastModifiedDate":"2023-10-18"},{"lineNumber":152,"author":{"gitId":"jonyeokj"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2023-10-18"},{"lineNumber":153,"author":{"gitId":"jonyeokj"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getMeetingList().size());","lastModifiedDate":"2023-10-18"},{"lineNumber":154,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":155,"author":{"gitId":"jonyeokj"},"content":"        EditMeetingCommand editMeetingCommand \u003d new EditMeetingCommand(outOfBoundIndex,","lastModifiedDate":"2023-10-18"},{"lineNumber":156,"author":{"gitId":"jonyeokj"},"content":"                new EditMeetingDescriptorBuilder().withTitle(VALID_TITLE_CHI).build());","lastModifiedDate":"2023-10-18"},{"lineNumber":157,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":158,"author":{"gitId":"jonyeokj"},"content":"        assertCommandFailure(editMeetingCommand, model, Messages.MESSAGE_INVALID_MEETING_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-18"},{"lineNumber":159,"author":{"gitId":"jonyeokj"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":160,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":161,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":162,"author":{"gitId":"jonyeokj"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":163,"author":{"gitId":"jonyeokj"},"content":"    public void equals() {","lastModifiedDate":"2023-10-18"},{"lineNumber":164,"author":{"gitId":"jonyeokj"},"content":"        final EditMeetingCommand standardCommand \u003d new EditMeetingCommand(INDEX_FIRST, DESC_ENG);","lastModifiedDate":"2023-10-18"},{"lineNumber":165,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":166,"author":{"gitId":"jonyeokj"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-18"},{"lineNumber":167,"author":{"gitId":"jonyeokj"},"content":"        EditMeetingDescriptor copyDescriptor \u003d new EditMeetingDescriptor(DESC_ENG);","lastModifiedDate":"2023-10-18"},{"lineNumber":168,"author":{"gitId":"jonyeokj"},"content":"        EditMeetingCommand commandWithSameValues \u003d new EditMeetingCommand(INDEX_FIRST, copyDescriptor);","lastModifiedDate":"2023-10-18"},{"lineNumber":169,"author":{"gitId":"jonyeokj"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2023-10-18"},{"lineNumber":170,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":171,"author":{"gitId":"jonyeokj"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-18"},{"lineNumber":172,"author":{"gitId":"jonyeokj"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2023-10-18"},{"lineNumber":173,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":174,"author":{"gitId":"jonyeokj"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-18"},{"lineNumber":175,"author":{"gitId":"jonyeokj"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2023-10-18"},{"lineNumber":176,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":177,"author":{"gitId":"jonyeokj"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-18"},{"lineNumber":178,"author":{"gitId":"jonyeokj"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2023-10-18"},{"lineNumber":179,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":180,"author":{"gitId":"jonyeokj"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2023-10-18"},{"lineNumber":181,"author":{"gitId":"jonyeokj"},"content":"        assertFalse(standardCommand.equals(new EditMeetingCommand(INDEX_SECOND, DESC_ENG)));","lastModifiedDate":"2023-10-18"},{"lineNumber":182,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":183,"author":{"gitId":"jonyeokj"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2023-10-18"},{"lineNumber":184,"author":{"gitId":"jonyeokj"},"content":"        assertFalse(standardCommand.equals(new EditMeetingCommand(INDEX_FIRST, DESC_CHI)));","lastModifiedDate":"2023-10-18"},{"lineNumber":185,"author":{"gitId":"jonyeokj"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":186,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":187,"author":{"gitId":"jonyeokj"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":188,"author":{"gitId":"jonyeokj"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-18"},{"lineNumber":189,"author":{"gitId":"jonyeokj"},"content":"        Index index \u003d Index.fromOneBased(1);","lastModifiedDate":"2023-10-18"},{"lineNumber":190,"author":{"gitId":"jonyeokj"},"content":"        EditMeetingDescriptor editMeetingDescriptor \u003d new EditMeetingDescriptor();","lastModifiedDate":"2023-10-18"},{"lineNumber":191,"author":{"gitId":"jonyeokj"},"content":"        EditMeetingCommand editMeetingCommand \u003d new EditMeetingCommand(index, editMeetingDescriptor);","lastModifiedDate":"2023-10-18"},{"lineNumber":192,"author":{"gitId":"jonyeokj"},"content":"        String expected \u003d EditMeetingCommand.class.getCanonicalName() + \"{index\u003d\" + index + \", editMeetingDescriptor\u003d\"","lastModifiedDate":"2023-10-18"},{"lineNumber":193,"author":{"gitId":"jonyeokj"},"content":"                + editMeetingDescriptor + \"}\";","lastModifiedDate":"2023-10-18"},{"lineNumber":194,"author":{"gitId":"jonyeokj"},"content":"        assertEquals(expected, editMeetingCommand.toString());","lastModifiedDate":"2023-10-18"},{"lineNumber":195,"author":{"gitId":"jonyeokj"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":196,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":197,"author":{"gitId":"jonyeokj"},"content":"}","lastModifiedDate":"2023-10-18"}],"authorContributionMap":{"jonyeokj":172,"s-peiran":25}},{"path":"src/test/java/seedu/address/logic/commands/EditMeetingDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jonyeokj"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-18"},{"lineNumber":2,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":3,"author":{"gitId":"jonyeokj"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-18"},{"lineNumber":4,"author":{"gitId":"jonyeokj"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-18"},{"lineNumber":5,"author":{"gitId":"jonyeokj"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-18"},{"lineNumber":6,"author":{"gitId":"jonyeokj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_CHI;","lastModifiedDate":"2023-10-18"},{"lineNumber":7,"author":{"gitId":"jonyeokj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_ENG;","lastModifiedDate":"2023-10-18"},{"lineNumber":8,"author":{"gitId":"jonyeokj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DESCRIPTION_CHI;","lastModifiedDate":"2023-10-18"},{"lineNumber":9,"author":{"gitId":"jonyeokj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PLACE_CHI;","lastModifiedDate":"2023-10-18"},{"lineNumber":10,"author":{"gitId":"jonyeokj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TIME_CHI;","lastModifiedDate":"2023-10-18"},{"lineNumber":11,"author":{"gitId":"jonyeokj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TITLE_CHI;","lastModifiedDate":"2023-10-18"},{"lineNumber":12,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":13,"author":{"gitId":"jonyeokj"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-18"},{"lineNumber":14,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":15,"author":{"gitId":"jonyeokj"},"content":"import seedu.address.logic.commands.EditMeetingCommand.EditMeetingDescriptor;","lastModifiedDate":"2023-10-18"},{"lineNumber":16,"author":{"gitId":"jonyeokj"},"content":"import seedu.address.testutil.EditMeetingDescriptorBuilder;","lastModifiedDate":"2023-10-18"},{"lineNumber":17,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":18,"author":{"gitId":"jonyeokj"},"content":"public class EditMeetingDescriptorTest {","lastModifiedDate":"2023-10-18"},{"lineNumber":19,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":20,"author":{"gitId":"jonyeokj"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":21,"author":{"gitId":"jonyeokj"},"content":"    public void equals() {","lastModifiedDate":"2023-10-18"},{"lineNumber":22,"author":{"gitId":"jonyeokj"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-18"},{"lineNumber":23,"author":{"gitId":"jonyeokj"},"content":"        EditMeetingDescriptor descriptorWithSameValues \u003d new EditMeetingDescriptor(DESC_ENG);","lastModifiedDate":"2023-10-18"},{"lineNumber":24,"author":{"gitId":"jonyeokj"},"content":"        assertTrue(DESC_ENG.equals(descriptorWithSameValues));","lastModifiedDate":"2023-10-18"},{"lineNumber":25,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":26,"author":{"gitId":"jonyeokj"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-18"},{"lineNumber":27,"author":{"gitId":"jonyeokj"},"content":"        assertTrue(DESC_ENG.equals(DESC_ENG));","lastModifiedDate":"2023-10-18"},{"lineNumber":28,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":29,"author":{"gitId":"jonyeokj"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-18"},{"lineNumber":30,"author":{"gitId":"jonyeokj"},"content":"        assertFalse(DESC_ENG.equals(null));","lastModifiedDate":"2023-10-18"},{"lineNumber":31,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":32,"author":{"gitId":"jonyeokj"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-18"},{"lineNumber":33,"author":{"gitId":"jonyeokj"},"content":"        assertFalse(DESC_ENG.equals(5));","lastModifiedDate":"2023-10-18"},{"lineNumber":34,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":35,"author":{"gitId":"jonyeokj"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2023-10-18"},{"lineNumber":36,"author":{"gitId":"jonyeokj"},"content":"        assertFalse(DESC_ENG.equals(DESC_CHI));","lastModifiedDate":"2023-10-18"},{"lineNumber":37,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":38,"author":{"gitId":"jonyeokj"},"content":"        // different title -\u003e returns false","lastModifiedDate":"2023-10-18"},{"lineNumber":39,"author":{"gitId":"jonyeokj"},"content":"        EditMeetingDescriptor editedEng \u003d new EditMeetingDescriptorBuilder(DESC_ENG).withTitle(VALID_TITLE_CHI).build();","lastModifiedDate":"2023-10-18"},{"lineNumber":40,"author":{"gitId":"jonyeokj"},"content":"        assertFalse(DESC_ENG.equals(editedEng));","lastModifiedDate":"2023-10-18"},{"lineNumber":41,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":42,"author":{"gitId":"jonyeokj"},"content":"        // different Time -\u003e returns false","lastModifiedDate":"2023-10-18"},{"lineNumber":43,"author":{"gitId":"jonyeokj"},"content":"        editedEng \u003d new EditMeetingDescriptorBuilder(DESC_ENG).withTime(VALID_TIME_CHI).build();","lastModifiedDate":"2023-10-18"},{"lineNumber":44,"author":{"gitId":"jonyeokj"},"content":"        assertFalse(DESC_ENG.equals(editedEng));","lastModifiedDate":"2023-10-18"},{"lineNumber":45,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":46,"author":{"gitId":"jonyeokj"},"content":"        // different place -\u003e returns false","lastModifiedDate":"2023-10-18"},{"lineNumber":47,"author":{"gitId":"jonyeokj"},"content":"        editedEng \u003d new EditMeetingDescriptorBuilder(DESC_ENG).withPlace(VALID_PLACE_CHI).build();","lastModifiedDate":"2023-10-18"},{"lineNumber":48,"author":{"gitId":"jonyeokj"},"content":"        assertFalse(DESC_ENG.equals(editedEng));","lastModifiedDate":"2023-10-18"},{"lineNumber":49,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":50,"author":{"gitId":"jonyeokj"},"content":"        // different description -\u003e returns false","lastModifiedDate":"2023-10-18"},{"lineNumber":51,"author":{"gitId":"jonyeokj"},"content":"        editedEng \u003d new EditMeetingDescriptorBuilder(DESC_ENG).withDescription(VALID_DESCRIPTION_CHI).build();","lastModifiedDate":"2023-10-18"},{"lineNumber":52,"author":{"gitId":"jonyeokj"},"content":"        assertFalse(DESC_ENG.equals(editedEng));","lastModifiedDate":"2023-10-18"},{"lineNumber":53,"author":{"gitId":"jonyeokj"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":54,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":55,"author":{"gitId":"jonyeokj"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":56,"author":{"gitId":"jonyeokj"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-18"},{"lineNumber":57,"author":{"gitId":"jonyeokj"},"content":"        EditMeetingDescriptor editMeetingDescriptor \u003d new EditMeetingDescriptor();","lastModifiedDate":"2023-10-18"},{"lineNumber":58,"author":{"gitId":"jonyeokj"},"content":"        String expected \u003d EditMeetingDescriptor.class.getCanonicalName() + \"{title\u003d\"","lastModifiedDate":"2023-10-18"},{"lineNumber":59,"author":{"gitId":"jonyeokj"},"content":"                + editMeetingDescriptor.getTitle().orElse(null) + \", time\u003d\"","lastModifiedDate":"2023-10-18"},{"lineNumber":60,"author":{"gitId":"jonyeokj"},"content":"                + editMeetingDescriptor.getTime().orElse(null) + \", place\u003d\"","lastModifiedDate":"2023-10-18"},{"lineNumber":61,"author":{"gitId":"jonyeokj"},"content":"                + editMeetingDescriptor.getPlace().orElse(null) + \", description\u003d\"","lastModifiedDate":"2023-10-18"},{"lineNumber":62,"author":{"gitId":"jonyeokj"},"content":"                + editMeetingDescriptor.getDescription().orElse(null) + \"}\";","lastModifiedDate":"2023-10-18"},{"lineNumber":63,"author":{"gitId":"jonyeokj"},"content":"        assertEquals(expected, editMeetingDescriptor.toString());","lastModifiedDate":"2023-10-18"},{"lineNumber":64,"author":{"gitId":"jonyeokj"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":65,"author":{"gitId":"jonyeokj"},"content":"}","lastModifiedDate":"2023-10-18"}],"authorContributionMap":{"jonyeokj":65}},{"path":"src/test/java/seedu/address/logic/commands/FindContactCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"jacobcuison"},"content":"import static seedu.address.logic.Messages.MESSAGE_CONTACTS_LISTED_OVERVIEW;","lastModifiedDate":"2023-10-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"jonyeokj"},"content":"import static seedu.address.testutil.TypicalAddressBook.CARL;","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"jonyeokj"},"content":"import static seedu.address.testutil.TypicalAddressBook.ELLE;","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"jonyeokj"},"content":"import static seedu.address.testutil.TypicalAddressBook.FIONA;","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"jonyeokj"},"content":"import static seedu.address.testutil.TypicalAddressBook.getTypicalContactsAddressBook;","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"jacobcuison"},"content":"import seedu.address.model.contact.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-10-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code FindCommand}.","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"jacobcuison"},"content":"public class FindContactCommandTest {","lastModifiedDate":"2023-10-03"},{"lineNumber":27,"author":{"gitId":"jonyeokj"},"content":"    private Model model \u003d new ModelManager(getTypicalContactsAddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-12"},{"lineNumber":28,"author":{"gitId":"jonyeokj"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalContactsAddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"second\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"jacobcuison"},"content":"        FindContactCommand findFirstCommand \u003d new FindContactCommand(firstPredicate);","lastModifiedDate":"2023-10-03"},{"lineNumber":38,"author":{"gitId":"jacobcuison"},"content":"        FindContactCommand findSecondCommand \u003d new FindContactCommand(secondPredicate);","lastModifiedDate":"2023-10-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"jacobcuison"},"content":"        FindContactCommand findFirstCommandCopy \u003d new FindContactCommand(firstPredicate);","lastModifiedDate":"2023-10-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"jacobcuison"},"content":"        // different contact -\u003e returns false","lastModifiedDate":"2023-10-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":58,"author":{"gitId":"jacobcuison"},"content":"    public void execute_zeroKeywords_noContactFound() {","lastModifiedDate":"2023-10-03"},{"lineNumber":59,"author":{"gitId":"jacobcuison"},"content":"        String expectedMessage \u003d String.format(MESSAGE_CONTACTS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2023-10-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\" \");","lastModifiedDate":"2018-08-08"},{"lineNumber":61,"author":{"gitId":"jacobcuison"},"content":"        FindContactCommand command \u003d new FindContactCommand(predicate);","lastModifiedDate":"2023-10-03"},{"lineNumber":62,"author":{"gitId":"jacobcuison"},"content":"        expectedModel.updateFilteredContactList(predicate);","lastModifiedDate":"2023-10-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":64,"author":{"gitId":"jacobcuison"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredContactList());","lastModifiedDate":"2023-10-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":68,"author":{"gitId":"jacobcuison"},"content":"    public void execute_multipleKeywords_multipleContactsFound() {","lastModifiedDate":"2023-10-03"},{"lineNumber":69,"author":{"gitId":"jacobcuison"},"content":"        String expectedMessage \u003d String.format(MESSAGE_CONTACTS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2023-10-03"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\"Kurz Elle Kunz\");","lastModifiedDate":"2018-08-08"},{"lineNumber":71,"author":{"gitId":"jacobcuison"},"content":"        FindContactCommand command \u003d new FindContactCommand(predicate);","lastModifiedDate":"2023-10-03"},{"lineNumber":72,"author":{"gitId":"jacobcuison"},"content":"        expectedModel.updateFilteredContactList(predicate);","lastModifiedDate":"2023-10-03"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":74,"author":{"gitId":"jacobcuison"},"content":"        assertEquals(Arrays.asList(CARL, ELLE, FIONA), model.getFilteredContactList());","lastModifiedDate":"2023-10-03"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"keyword\"));","lastModifiedDate":"2019-02-23"},{"lineNumber":80,"author":{"gitId":"jacobcuison"},"content":"        FindContactCommand findContactCommand \u003d new FindContactCommand(predicate);","lastModifiedDate":"2023-10-03"},{"lineNumber":81,"author":{"gitId":"jacobcuison"},"content":"        String expected \u003d FindContactCommand.class.getCanonicalName() + \"{predicate\u003d\" + predicate + \"}\";","lastModifiedDate":"2023-10-03"},{"lineNumber":82,"author":{"gitId":"jacobcuison"},"content":"        assertEquals(expected, findContactCommand.toString());","lastModifiedDate":"2023-10-03"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-12"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a {@code NameContainsKeywordsPredicate}.","lastModifiedDate":"2018-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-12"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    private NameContainsKeywordsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2018-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        return new NameContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2018-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"jonyeokj":6,"jacobcuison":20,"-":65}},{"path":"src/test/java/seedu/address/logic/commands/ListContactCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"jacobcuison"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showContactAtIndex;","lastModifiedDate":"2023-10-03"},{"lineNumber":5,"author":{"gitId":"jonyeokj"},"content":"import static seedu.address.testutil.TypicalAddressBook.getTypicalContactsAddressBook;","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"chiayunrong"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST;","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"s-peiran"},"content":"import seedu.address.logic.parser.ListContactCommandParser;","lastModifiedDate":"2023-10-31"},{"lineNumber":12,"author":{"gitId":"s-peiran"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-31"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"jonyeokj"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ListContactCommand.","lastModifiedDate":"2023-10-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"jacobcuison"},"content":"public class ListContactCommandTest {","lastModifiedDate":"2023-10-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private Model expectedModel;","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"jonyeokj"},"content":"        model \u003d new ModelManager(getTypicalContactsAddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"s-peiran"},"content":"    public void execute_listIsNotFiltered_showsSameList() throws ParseException {","lastModifiedDate":"2023-10-31"},{"lineNumber":33,"author":{"gitId":"jonyeokj"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(ListContactCommand.MESSAGE_SUCCESS);","lastModifiedDate":"2023-11-02"},{"lineNumber":34,"author":{"gitId":"s-peiran"},"content":"        ListContactCommand actualCommand \u003d new ListContactCommandParser().parse(\"list\");","lastModifiedDate":"2023-10-31"},{"lineNumber":35,"author":{"gitId":"s-peiran"},"content":"        assertCommandSuccess(actualCommand, model, expectedCommandResult, expectedModel);","lastModifiedDate":"2023-10-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"s-peiran"},"content":"    public void execute_listIsFiltered_showsEverything() throws ParseException {","lastModifiedDate":"2023-10-31"},{"lineNumber":40,"author":{"gitId":"jonyeokj"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(ListContactCommand.MESSAGE_SUCCESS);","lastModifiedDate":"2023-11-02"},{"lineNumber":41,"author":{"gitId":"s-peiran"},"content":"        ListContactCommand actualCommand \u003d new ListContactCommandParser().parse(\"list\");","lastModifiedDate":"2023-10-31"},{"lineNumber":42,"author":{"gitId":"chiayunrong"},"content":"        showContactAtIndex(model, INDEX_FIRST);","lastModifiedDate":"2023-10-17"},{"lineNumber":43,"author":{"gitId":"s-peiran"},"content":"        assertCommandSuccess(actualCommand, model, expectedCommandResult, expectedModel);","lastModifiedDate":"2023-10-31"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"jonyeokj":5,"jacobcuison":2,"s-peiran":8,"chiayunrong":2,"-":28}},{"path":"src/test/java/seedu/address/logic/commands/ListMeetingCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jonyeokj"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-18"},{"lineNumber":2,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":3,"author":{"gitId":"s-peiran"},"content":"import static seedu.address.logic.Messages.MESSAGE_MEETINGS_LISTED_OVERVIEW;","lastModifiedDate":"2023-10-31"},{"lineNumber":4,"author":{"gitId":"jonyeokj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-10-18"},{"lineNumber":5,"author":{"gitId":"jonyeokj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showMeetingAtIndex;","lastModifiedDate":"2023-10-18"},{"lineNumber":6,"author":{"gitId":"jonyeokj"},"content":"import static seedu.address.testutil.TypicalAddressBook.getTypicalMeetingsAddressBook;","lastModifiedDate":"2023-10-18"},{"lineNumber":7,"author":{"gitId":"jonyeokj"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST;","lastModifiedDate":"2023-10-18"},{"lineNumber":8,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":9,"author":{"gitId":"jonyeokj"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-10-18"},{"lineNumber":10,"author":{"gitId":"jonyeokj"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-18"},{"lineNumber":11,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":12,"author":{"gitId":"s-peiran"},"content":"import seedu.address.logic.parser.ListMeetingCommandParser;","lastModifiedDate":"2023-10-31"},{"lineNumber":13,"author":{"gitId":"s-peiran"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-31"},{"lineNumber":14,"author":{"gitId":"jonyeokj"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-18"},{"lineNumber":15,"author":{"gitId":"jonyeokj"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-10-18"},{"lineNumber":16,"author":{"gitId":"jonyeokj"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-10-18"},{"lineNumber":17,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":18,"author":{"gitId":"jonyeokj"},"content":"/**","lastModifiedDate":"2023-10-18"},{"lineNumber":19,"author":{"gitId":"jonyeokj"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ListMeetingCommand.","lastModifiedDate":"2023-10-18"},{"lineNumber":20,"author":{"gitId":"jonyeokj"},"content":" */","lastModifiedDate":"2023-10-18"},{"lineNumber":21,"author":{"gitId":"jonyeokj"},"content":"public class ListMeetingCommandTest {","lastModifiedDate":"2023-10-18"},{"lineNumber":22,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":23,"author":{"gitId":"jonyeokj"},"content":"    private Model model;","lastModifiedDate":"2023-10-18"},{"lineNumber":24,"author":{"gitId":"jonyeokj"},"content":"    private Model expectedModel;","lastModifiedDate":"2023-10-18"},{"lineNumber":25,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":26,"author":{"gitId":"jonyeokj"},"content":"    @BeforeEach","lastModifiedDate":"2023-10-18"},{"lineNumber":27,"author":{"gitId":"jonyeokj"},"content":"    public void setUp() {","lastModifiedDate":"2023-10-18"},{"lineNumber":28,"author":{"gitId":"jonyeokj"},"content":"        model \u003d new ModelManager(getTypicalMeetingsAddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-18"},{"lineNumber":29,"author":{"gitId":"jonyeokj"},"content":"        expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-18"},{"lineNumber":30,"author":{"gitId":"jonyeokj"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":31,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":32,"author":{"gitId":"jonyeokj"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":33,"author":{"gitId":"s-peiran"},"content":"    public void execute_listIsNotFiltered_showsSameList() throws ParseException {","lastModifiedDate":"2023-10-31"},{"lineNumber":34,"author":{"gitId":"jonyeokj"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(String.format(MESSAGE_MEETINGS_LISTED_OVERVIEW, 4));","lastModifiedDate":"2023-11-02"},{"lineNumber":35,"author":{"gitId":"s-peiran"},"content":"        ListMeetingCommand actualCommand \u003d new ListMeetingCommandParser().parse(\"list\");","lastModifiedDate":"2023-10-31"},{"lineNumber":36,"author":{"gitId":"s-peiran"},"content":"        assertCommandSuccess(actualCommand, model, expectedCommandResult, expectedModel);","lastModifiedDate":"2023-10-31"},{"lineNumber":37,"author":{"gitId":"jonyeokj"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":38,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":39,"author":{"gitId":"jonyeokj"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":40,"author":{"gitId":"s-peiran"},"content":"    public void execute_listIsFiltered_showsEverything() throws ParseException {","lastModifiedDate":"2023-10-31"},{"lineNumber":41,"author":{"gitId":"jonyeokj"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(String.format(MESSAGE_MEETINGS_LISTED_OVERVIEW, 4));","lastModifiedDate":"2023-11-02"},{"lineNumber":42,"author":{"gitId":"s-peiran"},"content":"        ListMeetingCommand actualCommand \u003d new ListMeetingCommandParser().parse(\"list\");","lastModifiedDate":"2023-10-31"},{"lineNumber":43,"author":{"gitId":"jonyeokj"},"content":"        showMeetingAtIndex(model, INDEX_FIRST);","lastModifiedDate":"2023-10-18"},{"lineNumber":44,"author":{"gitId":"s-peiran"},"content":"        assertCommandSuccess(actualCommand, model, expectedCommandResult, expectedModel);","lastModifiedDate":"2023-10-31"},{"lineNumber":45,"author":{"gitId":"jonyeokj"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":46,"author":{"gitId":"jonyeokj"},"content":"}","lastModifiedDate":"2023-10-18"}],"authorContributionMap":{"jonyeokj":37,"s-peiran":9}},{"path":"src/test/java/seedu/address/logic/commands/ModeCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chiayunrong"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-26"},{"lineNumber":2,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":3,"author":{"gitId":"chiayunrong"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-26"},{"lineNumber":4,"author":{"gitId":"chiayunrong"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-10-26"},{"lineNumber":5,"author":{"gitId":"chiayunrong"},"content":"import static seedu.address.logic.commands.ModeCommand.MESSAGE_SUCCESS;","lastModifiedDate":"2023-10-26"},{"lineNumber":6,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":7,"author":{"gitId":"jonyeokj"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-11-02"},{"lineNumber":8,"author":{"gitId":"chiayunrong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-26"},{"lineNumber":9,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":10,"author":{"gitId":"chiayunrong"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-26"},{"lineNumber":11,"author":{"gitId":"chiayunrong"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-10-26"},{"lineNumber":12,"author":{"gitId":"jonyeokj"},"content":"import seedu.address.ui.AppState;","lastModifiedDate":"2023-11-02"},{"lineNumber":13,"author":{"gitId":"jonyeokj"},"content":"import seedu.address.ui.AppState.ListType;","lastModifiedDate":"2023-11-02"},{"lineNumber":14,"author":{"gitId":"jonyeokj"},"content":"import seedu.address.ui.AppState.ModeType;","lastModifiedDate":"2023-11-02"},{"lineNumber":15,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":16,"author":{"gitId":"chiayunrong"},"content":"public class ModeCommandTest {","lastModifiedDate":"2023-10-26"},{"lineNumber":17,"author":{"gitId":"chiayunrong"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2023-10-26"},{"lineNumber":18,"author":{"gitId":"jonyeokj"},"content":"    private AppState appState;","lastModifiedDate":"2023-11-02"},{"lineNumber":19,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":20,"author":{"gitId":"jonyeokj"},"content":"    @BeforeEach","lastModifiedDate":"2023-11-02"},{"lineNumber":21,"author":{"gitId":"jonyeokj"},"content":"    public void setUp() {","lastModifiedDate":"2023-11-02"},{"lineNumber":22,"author":{"gitId":"jonyeokj"},"content":"        appState \u003d AppState.getInstance();","lastModifiedDate":"2023-11-02"},{"lineNumber":23,"author":{"gitId":"jonyeokj"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":24,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":25,"author":{"gitId":"chiayunrong"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":26,"author":{"gitId":"chiayunrong"},"content":"    public void execute_mode_success() {","lastModifiedDate":"2023-10-26"},{"lineNumber":27,"author":{"gitId":"jonyeokj"},"content":"        // Ensure that the AppState is initialized in contacts mode","lastModifiedDate":"2023-11-02"},{"lineNumber":28,"author":{"gitId":"jonyeokj"},"content":"        assertEquals(appState.getModeType(), ModeType.CONTACTS);","lastModifiedDate":"2023-11-02"},{"lineNumber":29,"author":{"gitId":"jonyeokj"},"content":"        assertEquals(appState.getListType(), ListType.CONTACTS);","lastModifiedDate":"2023-11-02"},{"lineNumber":30,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":31,"author":{"gitId":"jonyeokj"},"content":"        // Test toggling from contacts to meeting","lastModifiedDate":"2023-11-02"},{"lineNumber":32,"author":{"gitId":"chiayunrong"},"content":"        CommandResult expectedCommandResult \u003d","lastModifiedDate":"2023-10-26"},{"lineNumber":33,"author":{"gitId":"jonyeokj"},"content":"                new CommandResult(String.format(MESSAGE_SUCCESS, \"MEETINGS\"));","lastModifiedDate":"2023-11-02"},{"lineNumber":34,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":35,"author":{"gitId":"jonyeokj"},"content":"        assertCommandSuccess(new ModeCommand(), model, expectedCommandResult, model);","lastModifiedDate":"2023-11-02"},{"lineNumber":36,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":37,"author":{"gitId":"jonyeokj"},"content":"        // Test toggling from meetings to contacts","lastModifiedDate":"2023-11-02"},{"lineNumber":38,"author":{"gitId":"chiayunrong"},"content":"        expectedCommandResult \u003d","lastModifiedDate":"2023-10-26"},{"lineNumber":39,"author":{"gitId":"jonyeokj"},"content":"                new CommandResult(String.format(MESSAGE_SUCCESS, \"CONTACTS\"));","lastModifiedDate":"2023-11-02"},{"lineNumber":40,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":41,"author":{"gitId":"jonyeokj"},"content":"        assertCommandSuccess(new ModeCommand(), model, expectedCommandResult, model);","lastModifiedDate":"2023-11-02"},{"lineNumber":42,"author":{"gitId":"chiayunrong"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":43,"author":{"gitId":"chiayunrong"},"content":"}","lastModifiedDate":"2023-10-26"}],"authorContributionMap":{"jonyeokj":19,"chiayunrong":24}},{"path":"src/test/java/seedu/address/logic/commands/ViewContactCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chiayunrong"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-17"},{"lineNumber":2,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":3,"author":{"gitId":"chiayunrong"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"chiayunrong"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"chiayunrong"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"chiayunrong"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"s-peiran"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-10-27"},{"lineNumber":8,"author":{"gitId":"chiayunrong"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showContactAtIndex;","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"chiayunrong"},"content":"import static seedu.address.testutil.TypicalAddressBook.getTypicalContactsAddressBook;","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"chiayunrong"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST;","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"chiayunrong"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND;","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"chiayunrong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-17"},{"lineNumber":14,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":15,"author":{"gitId":"chiayunrong"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"chiayunrong"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"chiayunrong"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"chiayunrong"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"chiayunrong"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-10-17"},{"lineNumber":20,"author":{"gitId":"chiayunrong"},"content":"import seedu.address.model.contact.Contact;","lastModifiedDate":"2023-10-17"},{"lineNumber":21,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":22,"author":{"gitId":"chiayunrong"},"content":"/**","lastModifiedDate":"2023-10-17"},{"lineNumber":23,"author":{"gitId":"chiayunrong"},"content":" * Contains integration tests (interaction with the Model) for {@code ViewContactCommand}.","lastModifiedDate":"2023-10-17"},{"lineNumber":24,"author":{"gitId":"chiayunrong"},"content":" */","lastModifiedDate":"2023-10-17"},{"lineNumber":25,"author":{"gitId":"chiayunrong"},"content":"public class ViewContactCommandTest {","lastModifiedDate":"2023-10-17"},{"lineNumber":26,"author":{"gitId":"chiayunrong"},"content":"    private Model model \u003d new ModelManager(getTypicalContactsAddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-17"},{"lineNumber":27,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":28,"author":{"gitId":"chiayunrong"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":29,"author":{"gitId":"s-peiran"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2023-10-27"},{"lineNumber":30,"author":{"gitId":"chiayunrong"},"content":"        Contact contactToDisplay \u003d model.getFilteredContactList().get(INDEX_FIRST.getZeroBased());","lastModifiedDate":"2023-10-17"},{"lineNumber":31,"author":{"gitId":"chiayunrong"},"content":"        ViewContactCommand viewContactCommand \u003d new ViewContactCommand(INDEX_FIRST);","lastModifiedDate":"2023-10-17"},{"lineNumber":32,"author":{"gitId":"chiayunrong"},"content":"        String expectedMessage \u003d String.format(ViewContactCommand.MESSAGE_VIEW_CONTACT_SUCCESS,","lastModifiedDate":"2023-10-17"},{"lineNumber":33,"author":{"gitId":"jonyeokj"},"content":"                Messages.formatContact(contactToDisplay));","lastModifiedDate":"2023-10-18"},{"lineNumber":34,"author":{"gitId":"s-peiran"},"content":"        String expectedNote \u003d contactToDisplay.getNoteString();","lastModifiedDate":"2023-10-27"},{"lineNumber":35,"author":{"gitId":"s-peiran"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":36,"author":{"gitId":"s-peiran"},"content":"        assertCommandSuccess(viewContactCommand, model, expectedMessage, expectedNote);","lastModifiedDate":"2023-10-27"},{"lineNumber":37,"author":{"gitId":"chiayunrong"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":38,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":39,"author":{"gitId":"chiayunrong"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":40,"author":{"gitId":"chiayunrong"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2023-10-17"},{"lineNumber":41,"author":{"gitId":"chiayunrong"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredContactList().size() + 1);","lastModifiedDate":"2023-10-17"},{"lineNumber":42,"author":{"gitId":"chiayunrong"},"content":"        ViewContactCommand viewContactCommand \u003d new ViewContactCommand(outOfBoundIndex);","lastModifiedDate":"2023-10-17"},{"lineNumber":43,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":44,"author":{"gitId":"chiayunrong"},"content":"        assertCommandFailure(viewContactCommand, model, Messages.MESSAGE_INVALID_CONTACT_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-17"},{"lineNumber":45,"author":{"gitId":"chiayunrong"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":46,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":47,"author":{"gitId":"chiayunrong"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":48,"author":{"gitId":"s-peiran"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2023-10-27"},{"lineNumber":49,"author":{"gitId":"chiayunrong"},"content":"        showContactAtIndex(model, INDEX_FIRST);","lastModifiedDate":"2023-10-17"},{"lineNumber":50,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":51,"author":{"gitId":"chiayunrong"},"content":"        Contact contactToDisplay \u003d model.getFilteredContactList().get(INDEX_FIRST.getZeroBased());","lastModifiedDate":"2023-10-17"},{"lineNumber":52,"author":{"gitId":"chiayunrong"},"content":"        ViewContactCommand viewContactCommand \u003d new ViewContactCommand(INDEX_FIRST);","lastModifiedDate":"2023-10-17"},{"lineNumber":53,"author":{"gitId":"chiayunrong"},"content":"        String expectedMessage \u003d String.format(ViewContactCommand.MESSAGE_VIEW_CONTACT_SUCCESS,","lastModifiedDate":"2023-10-17"},{"lineNumber":54,"author":{"gitId":"jonyeokj"},"content":"                Messages.formatContact(contactToDisplay));","lastModifiedDate":"2023-10-18"},{"lineNumber":55,"author":{"gitId":"s-peiran"},"content":"        String expectedNote \u003d contactToDisplay.getNoteString();","lastModifiedDate":"2023-10-27"},{"lineNumber":56,"author":{"gitId":"s-peiran"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":57,"author":{"gitId":"s-peiran"},"content":"        assertCommandSuccess(viewContactCommand, model, expectedMessage, expectedNote);","lastModifiedDate":"2023-10-27"},{"lineNumber":58,"author":{"gitId":"chiayunrong"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":59,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":60,"author":{"gitId":"chiayunrong"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":61,"author":{"gitId":"chiayunrong"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2023-10-17"},{"lineNumber":62,"author":{"gitId":"chiayunrong"},"content":"        showContactAtIndex(model, INDEX_FIRST);","lastModifiedDate":"2023-10-17"},{"lineNumber":63,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":64,"author":{"gitId":"chiayunrong"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredContactList().size() + 1);","lastModifiedDate":"2023-10-17"},{"lineNumber":65,"author":{"gitId":"chiayunrong"},"content":"        ViewContactCommand viewContactCommand \u003d new ViewContactCommand(outOfBoundIndex);","lastModifiedDate":"2023-10-17"},{"lineNumber":66,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":67,"author":{"gitId":"chiayunrong"},"content":"        assertCommandFailure(viewContactCommand, model, Messages.MESSAGE_INVALID_CONTACT_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-17"},{"lineNumber":68,"author":{"gitId":"chiayunrong"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":69,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":70,"author":{"gitId":"chiayunrong"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":71,"author":{"gitId":"chiayunrong"},"content":"    public void equals() {","lastModifiedDate":"2023-10-17"},{"lineNumber":72,"author":{"gitId":"chiayunrong"},"content":"        ViewContactCommand viewContactFirstCommand \u003d new ViewContactCommand(INDEX_FIRST);","lastModifiedDate":"2023-10-17"},{"lineNumber":73,"author":{"gitId":"chiayunrong"},"content":"        ViewContactCommand viewContactSecondCommand \u003d new ViewContactCommand(INDEX_SECOND);","lastModifiedDate":"2023-10-17"},{"lineNumber":74,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":75,"author":{"gitId":"chiayunrong"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-17"},{"lineNumber":76,"author":{"gitId":"chiayunrong"},"content":"        assertTrue(viewContactFirstCommand.equals(viewContactFirstCommand));","lastModifiedDate":"2023-10-17"},{"lineNumber":77,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":78,"author":{"gitId":"chiayunrong"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-17"},{"lineNumber":79,"author":{"gitId":"chiayunrong"},"content":"        ViewContactCommand viewContactFirstCommandCopy \u003d new ViewContactCommand(INDEX_FIRST);","lastModifiedDate":"2023-10-17"},{"lineNumber":80,"author":{"gitId":"chiayunrong"},"content":"        assertTrue(viewContactFirstCommand.equals(viewContactFirstCommandCopy));","lastModifiedDate":"2023-10-17"},{"lineNumber":81,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":82,"author":{"gitId":"chiayunrong"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-17"},{"lineNumber":83,"author":{"gitId":"chiayunrong"},"content":"        assertFalse(viewContactFirstCommand.equals(1));","lastModifiedDate":"2023-10-17"},{"lineNumber":84,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":85,"author":{"gitId":"chiayunrong"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-17"},{"lineNumber":86,"author":{"gitId":"chiayunrong"},"content":"        assertFalse(viewContactFirstCommand.equals(null));","lastModifiedDate":"2023-10-17"},{"lineNumber":87,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":88,"author":{"gitId":"chiayunrong"},"content":"        // different contact -\u003e returns false","lastModifiedDate":"2023-10-17"},{"lineNumber":89,"author":{"gitId":"chiayunrong"},"content":"        assertFalse(viewContactFirstCommand.equals(viewContactSecondCommand));","lastModifiedDate":"2023-10-17"},{"lineNumber":90,"author":{"gitId":"chiayunrong"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":91,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":92,"author":{"gitId":"chiayunrong"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":93,"author":{"gitId":"chiayunrong"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-17"},{"lineNumber":94,"author":{"gitId":"chiayunrong"},"content":"        Index targetIndex \u003d Index.fromOneBased(1);","lastModifiedDate":"2023-10-17"},{"lineNumber":95,"author":{"gitId":"chiayunrong"},"content":"        ViewContactCommand viewContactCommand \u003d new ViewContactCommand(targetIndex);","lastModifiedDate":"2023-10-17"},{"lineNumber":96,"author":{"gitId":"chiayunrong"},"content":"        String expected \u003d ViewContactCommand.class.getCanonicalName() + \"{targetIndex\u003d\" + targetIndex + \"}\";","lastModifiedDate":"2023-10-17"},{"lineNumber":97,"author":{"gitId":"chiayunrong"},"content":"        assertEquals(expected, viewContactCommand.toString());","lastModifiedDate":"2023-10-17"},{"lineNumber":98,"author":{"gitId":"chiayunrong"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":99,"author":{"gitId":"chiayunrong"},"content":"}","lastModifiedDate":"2023-10-17"}],"authorContributionMap":{"jonyeokj":2,"s-peiran":9,"chiayunrong":88}},{"path":"src/test/java/seedu/address/logic/commands/ViewMeetingCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chiayunrong"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-17"},{"lineNumber":2,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":3,"author":{"gitId":"chiayunrong"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"chiayunrong"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"chiayunrong"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"chiayunrong"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"s-peiran"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-10-27"},{"lineNumber":8,"author":{"gitId":"chiayunrong"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showMeetingAtIndex;","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"chiayunrong"},"content":"import static seedu.address.testutil.TypicalAddressBook.getTypicalMeetingsAddressBook;","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"chiayunrong"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST;","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"chiayunrong"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND;","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"chiayunrong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-17"},{"lineNumber":14,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":15,"author":{"gitId":"chiayunrong"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"chiayunrong"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"chiayunrong"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"chiayunrong"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"chiayunrong"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-10-17"},{"lineNumber":20,"author":{"gitId":"chiayunrong"},"content":"import seedu.address.model.meeting.Meeting;","lastModifiedDate":"2023-10-17"},{"lineNumber":21,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":22,"author":{"gitId":"chiayunrong"},"content":"/**","lastModifiedDate":"2023-10-17"},{"lineNumber":23,"author":{"gitId":"chiayunrong"},"content":" * Contains integration tests (interaction with the Model) for {@code ViewMeetingCommand}.","lastModifiedDate":"2023-10-17"},{"lineNumber":24,"author":{"gitId":"chiayunrong"},"content":" */","lastModifiedDate":"2023-10-17"},{"lineNumber":25,"author":{"gitId":"chiayunrong"},"content":"public class ViewMeetingCommandTest {","lastModifiedDate":"2023-10-17"},{"lineNumber":26,"author":{"gitId":"chiayunrong"},"content":"    private Model model \u003d new ModelManager(getTypicalMeetingsAddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-17"},{"lineNumber":27,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":28,"author":{"gitId":"chiayunrong"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":29,"author":{"gitId":"s-peiran"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2023-10-27"},{"lineNumber":30,"author":{"gitId":"chiayunrong"},"content":"        Meeting meetingToDisplay \u003d model.getFilteredMeetingList().get(INDEX_FIRST.getZeroBased());","lastModifiedDate":"2023-10-17"},{"lineNumber":31,"author":{"gitId":"chiayunrong"},"content":"        ViewMeetingCommand viewMeetingCommand \u003d new ViewMeetingCommand(INDEX_FIRST);","lastModifiedDate":"2023-10-17"},{"lineNumber":32,"author":{"gitId":"chiayunrong"},"content":"        String expectedMessage \u003d String.format(ViewMeetingCommand.MESSAGE_VIEW_MEETING_SUCCESS,","lastModifiedDate":"2023-10-17"},{"lineNumber":33,"author":{"gitId":"chiayunrong"},"content":"                Messages.formatMeeting(meetingToDisplay));","lastModifiedDate":"2023-10-17"},{"lineNumber":34,"author":{"gitId":"s-peiran"},"content":"        String expectedNote \u003d meetingToDisplay.getNoteString();","lastModifiedDate":"2023-10-27"},{"lineNumber":35,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":36,"author":{"gitId":"s-peiran"},"content":"        assertCommandSuccess(viewMeetingCommand, model, expectedMessage, expectedNote);","lastModifiedDate":"2023-10-27"},{"lineNumber":37,"author":{"gitId":"chiayunrong"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":38,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":39,"author":{"gitId":"chiayunrong"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":40,"author":{"gitId":"chiayunrong"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2023-10-17"},{"lineNumber":41,"author":{"gitId":"chiayunrong"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredMeetingList().size() + 1);","lastModifiedDate":"2023-10-17"},{"lineNumber":42,"author":{"gitId":"chiayunrong"},"content":"        ViewMeetingCommand viewMeetingCommand \u003d new ViewMeetingCommand(outOfBoundIndex);","lastModifiedDate":"2023-10-17"},{"lineNumber":43,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":44,"author":{"gitId":"chiayunrong"},"content":"        assertCommandFailure(viewMeetingCommand, model, Messages.MESSAGE_INVALID_MEETING_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-17"},{"lineNumber":45,"author":{"gitId":"chiayunrong"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":46,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":47,"author":{"gitId":"chiayunrong"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":48,"author":{"gitId":"s-peiran"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2023-10-27"},{"lineNumber":49,"author":{"gitId":"chiayunrong"},"content":"        showMeetingAtIndex(model, INDEX_FIRST);","lastModifiedDate":"2023-10-17"},{"lineNumber":50,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":51,"author":{"gitId":"chiayunrong"},"content":"        Meeting meetingToDisplay \u003d model.getFilteredMeetingList().get(INDEX_FIRST.getZeroBased());","lastModifiedDate":"2023-10-17"},{"lineNumber":52,"author":{"gitId":"chiayunrong"},"content":"        ViewMeetingCommand viewMeetingCommand \u003d new ViewMeetingCommand(INDEX_FIRST);","lastModifiedDate":"2023-10-17"},{"lineNumber":53,"author":{"gitId":"chiayunrong"},"content":"        String expectedMessage \u003d String.format(ViewMeetingCommand.MESSAGE_VIEW_MEETING_SUCCESS,","lastModifiedDate":"2023-10-17"},{"lineNumber":54,"author":{"gitId":"chiayunrong"},"content":"                Messages.formatMeeting(meetingToDisplay));","lastModifiedDate":"2023-10-17"},{"lineNumber":55,"author":{"gitId":"s-peiran"},"content":"        String expectedNote \u003d meetingToDisplay.getNoteString();","lastModifiedDate":"2023-10-27"},{"lineNumber":56,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":57,"author":{"gitId":"s-peiran"},"content":"        assertCommandSuccess(viewMeetingCommand, model, expectedMessage, expectedNote);","lastModifiedDate":"2023-10-27"},{"lineNumber":58,"author":{"gitId":"chiayunrong"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":59,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":60,"author":{"gitId":"chiayunrong"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":61,"author":{"gitId":"chiayunrong"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2023-10-17"},{"lineNumber":62,"author":{"gitId":"chiayunrong"},"content":"        showMeetingAtIndex(model, INDEX_FIRST);","lastModifiedDate":"2023-10-17"},{"lineNumber":63,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":64,"author":{"gitId":"chiayunrong"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredMeetingList().size() + 1);","lastModifiedDate":"2023-10-17"},{"lineNumber":65,"author":{"gitId":"chiayunrong"},"content":"        ViewMeetingCommand viewMeetingCommand \u003d new ViewMeetingCommand(outOfBoundIndex);","lastModifiedDate":"2023-10-17"},{"lineNumber":66,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":67,"author":{"gitId":"chiayunrong"},"content":"        assertCommandFailure(viewMeetingCommand, model, Messages.MESSAGE_INVALID_MEETING_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-17"},{"lineNumber":68,"author":{"gitId":"chiayunrong"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":69,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":70,"author":{"gitId":"chiayunrong"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":71,"author":{"gitId":"chiayunrong"},"content":"    public void equals() {","lastModifiedDate":"2023-10-17"},{"lineNumber":72,"author":{"gitId":"chiayunrong"},"content":"        ViewMeetingCommand viewMeetingFirstCommand \u003d new ViewMeetingCommand(INDEX_FIRST);","lastModifiedDate":"2023-10-17"},{"lineNumber":73,"author":{"gitId":"chiayunrong"},"content":"        ViewMeetingCommand viewMeetingSecondCommand \u003d new ViewMeetingCommand(INDEX_SECOND);","lastModifiedDate":"2023-10-17"},{"lineNumber":74,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":75,"author":{"gitId":"chiayunrong"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-17"},{"lineNumber":76,"author":{"gitId":"chiayunrong"},"content":"        assertTrue(viewMeetingFirstCommand.equals(viewMeetingFirstCommand));","lastModifiedDate":"2023-10-17"},{"lineNumber":77,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":78,"author":{"gitId":"chiayunrong"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-17"},{"lineNumber":79,"author":{"gitId":"chiayunrong"},"content":"        ViewMeetingCommand viewMeetingFirstCommandCopy \u003d new ViewMeetingCommand(INDEX_FIRST);","lastModifiedDate":"2023-10-17"},{"lineNumber":80,"author":{"gitId":"chiayunrong"},"content":"        assertTrue(viewMeetingFirstCommand.equals(viewMeetingFirstCommandCopy));","lastModifiedDate":"2023-10-17"},{"lineNumber":81,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":82,"author":{"gitId":"chiayunrong"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-17"},{"lineNumber":83,"author":{"gitId":"chiayunrong"},"content":"        assertFalse(viewMeetingFirstCommand.equals(1));","lastModifiedDate":"2023-10-17"},{"lineNumber":84,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":85,"author":{"gitId":"chiayunrong"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-17"},{"lineNumber":86,"author":{"gitId":"chiayunrong"},"content":"        assertFalse(viewMeetingFirstCommand.equals(null));","lastModifiedDate":"2023-10-17"},{"lineNumber":87,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":88,"author":{"gitId":"chiayunrong"},"content":"        // different meeting -\u003e returns false","lastModifiedDate":"2023-10-17"},{"lineNumber":89,"author":{"gitId":"chiayunrong"},"content":"        assertFalse(viewMeetingFirstCommand.equals(viewMeetingSecondCommand));","lastModifiedDate":"2023-10-17"},{"lineNumber":90,"author":{"gitId":"chiayunrong"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":91,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":92,"author":{"gitId":"chiayunrong"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":93,"author":{"gitId":"chiayunrong"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-17"},{"lineNumber":94,"author":{"gitId":"chiayunrong"},"content":"        Index targetIndex \u003d Index.fromOneBased(1);","lastModifiedDate":"2023-10-17"},{"lineNumber":95,"author":{"gitId":"chiayunrong"},"content":"        ViewMeetingCommand viewMeetingCommand \u003d new ViewMeetingCommand(targetIndex);","lastModifiedDate":"2023-10-17"},{"lineNumber":96,"author":{"gitId":"chiayunrong"},"content":"        String expected \u003d ViewMeetingCommand.class.getCanonicalName() + \"{targetIndex\u003d\" + targetIndex + \"}\";","lastModifiedDate":"2023-10-17"},{"lineNumber":97,"author":{"gitId":"chiayunrong"},"content":"        assertEquals(expected, viewMeetingCommand.toString());","lastModifiedDate":"2023-10-17"},{"lineNumber":98,"author":{"gitId":"chiayunrong"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":99,"author":{"gitId":"chiayunrong"},"content":"}","lastModifiedDate":"2023-10-17"}],"authorContributionMap":{"s-peiran":7,"chiayunrong":92}},{"path":"src/test/java/seedu/address/logic/parser/AddContactCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2023-10-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2023-10-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2023-10-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2023-10-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2023-10-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2023-10-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2023-10-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2023-10-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2023-10-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2023-10-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2023-10-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2023-10-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2023-10-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2023-10-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2023-10-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2023-10-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2023-10-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2023-10-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2023-10-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2023-10-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2023-10-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2023-10-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2023-10-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-07-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-07-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-07-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-07-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":33,"author":{"gitId":"jonyeokj"},"content":"import static seedu.address.testutil.TypicalAddressBook.AMY;","lastModifiedDate":"2023-10-12"},{"lineNumber":34,"author":{"gitId":"jonyeokj"},"content":"import static seedu.address.testutil.TypicalAddressBook.BOB;","lastModifiedDate":"2023-10-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-14"},{"lineNumber":39,"author":{"gitId":"jacobcuison"},"content":"import seedu.address.logic.commands.AddContactCommand;","lastModifiedDate":"2023-10-03"},{"lineNumber":40,"author":{"gitId":"jacobcuison"},"content":"import seedu.address.model.contact.Address;","lastModifiedDate":"2023-10-03"},{"lineNumber":41,"author":{"gitId":"jacobcuison"},"content":"import seedu.address.model.contact.Contact;","lastModifiedDate":"2023-10-03"},{"lineNumber":42,"author":{"gitId":"jacobcuison"},"content":"import seedu.address.model.contact.Email;","lastModifiedDate":"2023-10-03"},{"lineNumber":43,"author":{"gitId":"jacobcuison"},"content":"import seedu.address.model.contact.Name;","lastModifiedDate":"2023-10-03"},{"lineNumber":44,"author":{"gitId":"jacobcuison"},"content":"import seedu.address.model.contact.Phone;","lastModifiedDate":"2023-10-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-06-15"},{"lineNumber":46,"author":{"gitId":"jacobcuison"},"content":"import seedu.address.testutil.ContactBuilder;","lastModifiedDate":"2023-10-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":48,"author":{"gitId":"jacobcuison"},"content":"public class AddContactCommandParserTest {","lastModifiedDate":"2023-10-03"},{"lineNumber":49,"author":{"gitId":"jonyeokj"},"content":"    private AddContactCommandParser parser \u003d new AddContactCommandParser();","lastModifiedDate":"2023-10-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":53,"author":{"gitId":"jacobcuison"},"content":"        Contact expectedContact \u003d new ContactBuilder(BOB).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2023-10-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // whitespace only preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":57,"author":{"gitId":"jacobcuison"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND, new AddContactCommand(expectedContact));","lastModifiedDate":"2023-10-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // multiple tags - all accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":61,"author":{"gitId":"jacobcuison"},"content":"        Contact expectedContactMultipleTags \u003d new ContactBuilder(BOB)","lastModifiedDate":"2023-10-18"},{"lineNumber":62,"author":{"gitId":"jacobcuison"},"content":"                .withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND).build();","lastModifiedDate":"2023-10-18"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser,","lastModifiedDate":"2023-07-14"},{"lineNumber":64,"author":{"gitId":"jacobcuison"},"content":"                NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB + TAG_DESC_HUSBAND","lastModifiedDate":"2023-10-18"},{"lineNumber":65,"author":{"gitId":"jacobcuison"},"content":"                        + TAG_DESC_FRIEND, new AddContactCommand(expectedContactMultipleTags));","lastModifiedDate":"2023-10-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-07-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-07-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void parse_repeatedNonTagValue_failure() {","lastModifiedDate":"2023-07-14"},{"lineNumber":70,"author":{"gitId":"jacobcuison"},"content":"        String validExpectedContactString \u003d NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2023-10-03"},{"lineNumber":71,"author":{"gitId":"-"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND;","lastModifiedDate":"2023-07-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // multiple names","lastModifiedDate":"2023-07-14"},{"lineNumber":74,"author":{"gitId":"jacobcuison"},"content":"        assertParseFailure(parser, NAME_DESC_AMY + validExpectedContactString,","lastModifiedDate":"2023-10-03"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME));","lastModifiedDate":"2023-07-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // multiple phones","lastModifiedDate":"2023-07-14"},{"lineNumber":78,"author":{"gitId":"jacobcuison"},"content":"        assertParseFailure(parser, PHONE_DESC_AMY + validExpectedContactString,","lastModifiedDate":"2023-10-03"},{"lineNumber":79,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        // multiple emails","lastModifiedDate":"2023-07-14"},{"lineNumber":82,"author":{"gitId":"jacobcuison"},"content":"        assertParseFailure(parser, EMAIL_DESC_AMY + validExpectedContactString,","lastModifiedDate":"2023-10-03"},{"lineNumber":83,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_EMAIL));","lastModifiedDate":"2023-07-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        // multiple addresses","lastModifiedDate":"2023-07-14"},{"lineNumber":86,"author":{"gitId":"jacobcuison"},"content":"        assertParseFailure(parser, ADDRESS_DESC_AMY + validExpectedContactString,","lastModifiedDate":"2023-10-03"},{"lineNumber":87,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_ADDRESS));","lastModifiedDate":"2023-07-14"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // multiple fields repeated","lastModifiedDate":"2023-07-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2023-07-14"},{"lineNumber":91,"author":{"gitId":"jacobcuison"},"content":"                validExpectedContactString + PHONE_DESC_AMY + EMAIL_DESC_AMY + NAME_DESC_AMY + ADDRESS_DESC_AMY","lastModifiedDate":"2023-10-03"},{"lineNumber":92,"author":{"gitId":"jacobcuison"},"content":"                        + validExpectedContactString,","lastModifiedDate":"2023-10-03"},{"lineNumber":93,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME, PREFIX_ADDRESS, PREFIX_EMAIL, PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        // invalid value followed by valid value","lastModifiedDate":"2023-07-14"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2023-07-14"},{"lineNumber":98,"author":{"gitId":"jacobcuison"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + validExpectedContactString,","lastModifiedDate":"2023-10-03"},{"lineNumber":99,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME));","lastModifiedDate":"2023-07-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2023-07-14"},{"lineNumber":102,"author":{"gitId":"jacobcuison"},"content":"        assertParseFailure(parser, INVALID_EMAIL_DESC + validExpectedContactString,","lastModifiedDate":"2023-10-03"},{"lineNumber":103,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_EMAIL));","lastModifiedDate":"2023-07-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2023-07-14"},{"lineNumber":106,"author":{"gitId":"jacobcuison"},"content":"        assertParseFailure(parser, INVALID_PHONE_DESC + validExpectedContactString,","lastModifiedDate":"2023-10-03"},{"lineNumber":107,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        // invalid address","lastModifiedDate":"2023-07-14"},{"lineNumber":110,"author":{"gitId":"jacobcuison"},"content":"        assertParseFailure(parser, INVALID_ADDRESS_DESC + validExpectedContactString,","lastModifiedDate":"2023-10-03"},{"lineNumber":111,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_ADDRESS));","lastModifiedDate":"2023-07-14"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        // valid value followed by invalid value","lastModifiedDate":"2023-07-14"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2023-07-14"},{"lineNumber":116,"author":{"gitId":"jacobcuison"},"content":"        assertParseFailure(parser, validExpectedContactString + INVALID_NAME_DESC,","lastModifiedDate":"2023-10-03"},{"lineNumber":117,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME));","lastModifiedDate":"2023-07-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2023-07-14"},{"lineNumber":120,"author":{"gitId":"jacobcuison"},"content":"        assertParseFailure(parser, validExpectedContactString + INVALID_EMAIL_DESC,","lastModifiedDate":"2023-10-03"},{"lineNumber":121,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_EMAIL));","lastModifiedDate":"2023-07-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2023-07-14"},{"lineNumber":124,"author":{"gitId":"jacobcuison"},"content":"        assertParseFailure(parser, validExpectedContactString + INVALID_PHONE_DESC,","lastModifiedDate":"2023-10-03"},{"lineNumber":125,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        // invalid address","lastModifiedDate":"2023-07-14"},{"lineNumber":128,"author":{"gitId":"jacobcuison"},"content":"        assertParseFailure(parser, validExpectedContactString + INVALID_ADDRESS_DESC,","lastModifiedDate":"2023-10-03"},{"lineNumber":129,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_ADDRESS));","lastModifiedDate":"2023-07-14"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public void parse_optionalFieldsMissing_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        // zero tags","lastModifiedDate":"2017-06-15"},{"lineNumber":135,"author":{"gitId":"jacobcuison"},"content":"        Contact expectedContact \u003d new ContactBuilder(AMY).withTags().withNotes().build();","lastModifiedDate":"2023-10-18"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY + ADDRESS_DESC_AMY,","lastModifiedDate":"2017-12-23"},{"lineNumber":137,"author":{"gitId":"jacobcuison"},"content":"                new AddContactCommand(expectedContact));","lastModifiedDate":"2023-10-03"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":142,"author":{"gitId":"jacobcuison"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddContactCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-10-03"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        // missing name prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        // missing phone prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + VALID_PHONE_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        // missing email prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + VALID_EMAIL_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        // missing address prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + VALID_ADDRESS_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        // all prefixes missing","lastModifiedDate":"2017-06-15"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + VALID_PHONE_BOB + VALID_EMAIL_BOB + VALID_ADDRESS_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-06-15"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2017-06-15"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + INVALID_PHONE_DESC + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2017-06-15"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + INVALID_EMAIL_DESC + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        // invalid address","lastModifiedDate":"2017-06-15"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_ADDRESS_DESC","lastModifiedDate":"2017-12-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        // invalid tag","lastModifiedDate":"2017-06-15"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"                + INVALID_TAG_DESC + VALID_TAG_FRIEND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2017-06-15"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_ADDRESS_DESC,","lastModifiedDate":"2017-12-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        // non-empty preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2017-12-23"},{"lineNumber":194,"author":{"gitId":"jacobcuison"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddContactCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-03"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":196,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"jonyeokj":3,"jacobcuison":33,"-":160}},{"path":"src/test/java/seedu/address/logic/parser/AddContactToMeetingCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"s-peiran"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-27"},{"lineNumber":2,"author":{"gitId":"s-peiran"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":3,"author":{"gitId":"s-peiran"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-27"},{"lineNumber":4,"author":{"gitId":"s-peiran"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-10-27"},{"lineNumber":5,"author":{"gitId":"s-peiran"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TITLE;","lastModifiedDate":"2023-10-27"},{"lineNumber":6,"author":{"gitId":"s-peiran"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-10-27"},{"lineNumber":7,"author":{"gitId":"s-peiran"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-10-27"},{"lineNumber":8,"author":{"gitId":"s-peiran"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":9,"author":{"gitId":"s-peiran"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-27"},{"lineNumber":10,"author":{"gitId":"s-peiran"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":11,"author":{"gitId":"s-peiran"},"content":"import seedu.address.logic.commands.AddContactToMeetingCommand;","lastModifiedDate":"2023-10-27"},{"lineNumber":12,"author":{"gitId":"s-peiran"},"content":"import seedu.address.model.contact.Contact;","lastModifiedDate":"2023-10-27"},{"lineNumber":13,"author":{"gitId":"s-peiran"},"content":"import seedu.address.model.meeting.Meeting;","lastModifiedDate":"2023-10-27"},{"lineNumber":14,"author":{"gitId":"s-peiran"},"content":"import seedu.address.testutil.ContactBuilder;","lastModifiedDate":"2023-10-27"},{"lineNumber":15,"author":{"gitId":"s-peiran"},"content":"import seedu.address.testutil.MeetingBuilder;","lastModifiedDate":"2023-10-27"},{"lineNumber":16,"author":{"gitId":"s-peiran"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":17,"author":{"gitId":"s-peiran"},"content":"class AddContactToMeetingCommandParserTest {","lastModifiedDate":"2023-10-27"},{"lineNumber":18,"author":{"gitId":"s-peiran"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":19,"author":{"gitId":"s-peiran"},"content":"    private AddContactToMeetingCommandParser parser \u003d new AddContactToMeetingCommandParser();","lastModifiedDate":"2023-10-27"},{"lineNumber":20,"author":{"gitId":"s-peiran"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":21,"author":{"gitId":"s-peiran"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":22,"author":{"gitId":"s-peiran"},"content":"    @Test","lastModifiedDate":"2023-10-27"},{"lineNumber":23,"author":{"gitId":"s-peiran"},"content":"    void parse_validInputs_success() {","lastModifiedDate":"2023-10-27"},{"lineNumber":24,"author":{"gitId":"s-peiran"},"content":"        Meeting validMeeting \u003d new MeetingBuilder().build();","lastModifiedDate":"2023-10-27"},{"lineNumber":25,"author":{"gitId":"s-peiran"},"content":"        Contact validContact \u003d new ContactBuilder().build();","lastModifiedDate":"2023-10-27"},{"lineNumber":26,"author":{"gitId":"s-peiran"},"content":"        String userInput \u003d AddContactToMeetingCommand.COMMAND_WORD + \" \" + PREFIX_NAME","lastModifiedDate":"2023-10-27"},{"lineNumber":27,"author":{"gitId":"s-peiran"},"content":"                + \" \" + validContact.getName() + \" \" + PREFIX_TITLE + \" \" + validMeeting.getTitle();","lastModifiedDate":"2023-10-27"},{"lineNumber":28,"author":{"gitId":"s-peiran"},"content":"        AddContactToMeetingCommand expectedCommand \u003d new AddContactToMeetingCommand(validMeeting.getTitleString(),","lastModifiedDate":"2023-10-27"},{"lineNumber":29,"author":{"gitId":"s-peiran"},"content":"                validContact.getNameString());","lastModifiedDate":"2023-10-27"},{"lineNumber":30,"author":{"gitId":"s-peiran"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-10-27"},{"lineNumber":31,"author":{"gitId":"s-peiran"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":32,"author":{"gitId":"s-peiran"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":33,"author":{"gitId":"s-peiran"},"content":"    @Test","lastModifiedDate":"2023-10-27"},{"lineNumber":34,"author":{"gitId":"s-peiran"},"content":"    void parse_invalidInputs_failure() {","lastModifiedDate":"2023-10-27"},{"lineNumber":35,"author":{"gitId":"s-peiran"},"content":"        Meeting validMeeting \u003d new MeetingBuilder().build();","lastModifiedDate":"2023-10-27"},{"lineNumber":36,"author":{"gitId":"s-peiran"},"content":"        Contact validContact \u003d new ContactBuilder().build();","lastModifiedDate":"2023-10-27"},{"lineNumber":37,"author":{"gitId":"s-peiran"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-10-27"},{"lineNumber":38,"author":{"gitId":"s-peiran"},"content":"                AddContactToMeetingCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-10-27"},{"lineNumber":39,"author":{"gitId":"s-peiran"},"content":"        String userInput \u003d String.format(\"add contact -n %s -m %s\", validContact.getNameString(),","lastModifiedDate":"2023-10-27"},{"lineNumber":40,"author":{"gitId":"s-peiran"},"content":"                validMeeting.getTitleString());","lastModifiedDate":"2023-10-27"},{"lineNumber":41,"author":{"gitId":"s-peiran"},"content":"        assertParseFailure(parser, userInput, expectedMessage);","lastModifiedDate":"2023-10-27"},{"lineNumber":42,"author":{"gitId":"s-peiran"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":43,"author":{"gitId":"s-peiran"},"content":"}","lastModifiedDate":"2023-10-27"}],"authorContributionMap":{"s-peiran":43}},{"path":"src/test/java/seedu/address/logic/parser/AddMeetingCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chiayunrong"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-03"},{"lineNumber":2,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":3,"author":{"gitId":"chiayunrong"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-03"},{"lineNumber":4,"author":{"gitId":"chiayunrong"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESCRIPTION_DESC_ENG;","lastModifiedDate":"2023-11-01"},{"lineNumber":5,"author":{"gitId":"chiayunrong"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PLACE_DESC_ENG;","lastModifiedDate":"2023-11-01"},{"lineNumber":6,"author":{"gitId":"chiayunrong"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TIME_DESC_ENG;","lastModifiedDate":"2023-11-01"},{"lineNumber":7,"author":{"gitId":"chiayunrong"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TITLE_DESC_ENG;","lastModifiedDate":"2023-11-01"},{"lineNumber":8,"author":{"gitId":"chiayunrong"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DESCRIPTION;","lastModifiedDate":"2023-10-03"},{"lineNumber":9,"author":{"gitId":"jonyeokj"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PLACE;","lastModifiedDate":"2023-10-11"},{"lineNumber":10,"author":{"gitId":"chiayunrong"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TIME;","lastModifiedDate":"2023-10-03"},{"lineNumber":11,"author":{"gitId":"chiayunrong"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TITLE;","lastModifiedDate":"2023-10-03"},{"lineNumber":12,"author":{"gitId":"chiayunrong"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-10-03"},{"lineNumber":13,"author":{"gitId":"chiayunrong"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-10-03"},{"lineNumber":14,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":15,"author":{"gitId":"chiayunrong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-03"},{"lineNumber":16,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":17,"author":{"gitId":"chiayunrong"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-03"},{"lineNumber":18,"author":{"gitId":"chiayunrong"},"content":"import seedu.address.logic.commands.AddMeetingCommand;","lastModifiedDate":"2023-10-03"},{"lineNumber":19,"author":{"gitId":"chiayunrong"},"content":"import seedu.address.model.meeting.Meeting;","lastModifiedDate":"2023-10-03"},{"lineNumber":20,"author":{"gitId":"chiayunrong"},"content":"import seedu.address.testutil.MeetingBuilder;","lastModifiedDate":"2023-10-03"},{"lineNumber":21,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":22,"author":{"gitId":"chiayunrong"},"content":"public class AddMeetingCommandParserTest {","lastModifiedDate":"2023-10-03"},{"lineNumber":23,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":24,"author":{"gitId":"chiayunrong"},"content":"    private AddMeetingCommandParser parser \u003d new AddMeetingCommandParser();","lastModifiedDate":"2023-10-03"},{"lineNumber":25,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":26,"author":{"gitId":"chiayunrong"},"content":"    @Test","lastModifiedDate":"2023-10-03"},{"lineNumber":27,"author":{"gitId":"chiayunrong"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2023-10-03"},{"lineNumber":28,"author":{"gitId":"chiayunrong"},"content":"        Meeting validMeeting \u003d new MeetingBuilder().build();","lastModifiedDate":"2023-10-03"},{"lineNumber":29,"author":{"gitId":"chiayunrong"},"content":"        AddMeetingCommand expectedCommand \u003d new AddMeetingCommand(validMeeting);","lastModifiedDate":"2023-10-03"},{"lineNumber":30,"author":{"gitId":"chiayunrong"},"content":"        String userInput \u003d \" \" + PREFIX_TITLE + MeetingBuilder.DEFAULT_TITLE","lastModifiedDate":"2023-11-01"},{"lineNumber":31,"author":{"gitId":"chiayunrong"},"content":"                + \" \" + PREFIX_TIME + MeetingBuilder.DEFAULT_TIME","lastModifiedDate":"2023-11-01"},{"lineNumber":32,"author":{"gitId":"chiayunrong"},"content":"                + \" \" + PREFIX_PLACE + MeetingBuilder.DEFAULT_PLACE","lastModifiedDate":"2023-11-01"},{"lineNumber":33,"author":{"gitId":"chiayunrong"},"content":"                + \" \" + PREFIX_DESCRIPTION + MeetingBuilder.DEFAULT_DESCRIPTION;","lastModifiedDate":"2023-11-01"},{"lineNumber":34,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":35,"author":{"gitId":"chiayunrong"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-10-03"},{"lineNumber":36,"author":{"gitId":"chiayunrong"},"content":"    }","lastModifiedDate":"2023-10-03"},{"lineNumber":37,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":38,"author":{"gitId":"chiayunrong"},"content":"    @Test","lastModifiedDate":"2023-10-03"},{"lineNumber":39,"author":{"gitId":"chiayunrong"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2023-11-01"},{"lineNumber":40,"author":{"gitId":"chiayunrong"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddMeetingCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-10-03"},{"lineNumber":41,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":42,"author":{"gitId":"chiayunrong"},"content":"        // missing time prefix","lastModifiedDate":"2023-11-01"},{"lineNumber":43,"author":{"gitId":"chiayunrong"},"content":"        assertParseFailure(parser, TITLE_DESC_ENG + PLACE_DESC_ENG + DESCRIPTION_DESC_ENG, expectedMessage);","lastModifiedDate":"2023-11-01"},{"lineNumber":44,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":45,"author":{"gitId":"chiayunrong"},"content":"        // missing place prefix","lastModifiedDate":"2023-11-01"},{"lineNumber":46,"author":{"gitId":"chiayunrong"},"content":"        assertParseFailure(parser, TITLE_DESC_ENG + TIME_DESC_ENG + DESCRIPTION_DESC_ENG, expectedMessage);","lastModifiedDate":"2023-11-01"},{"lineNumber":47,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":48,"author":{"gitId":"chiayunrong"},"content":"        // missing description prefix","lastModifiedDate":"2023-11-01"},{"lineNumber":49,"author":{"gitId":"chiayunrong"},"content":"        assertParseFailure(parser, TITLE_DESC_ENG + TIME_DESC_ENG + PLACE_DESC_ENG, expectedMessage);","lastModifiedDate":"2023-11-01"},{"lineNumber":50,"author":{"gitId":"chiayunrong"},"content":"    }","lastModifiedDate":"2023-10-03"},{"lineNumber":51,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":52,"author":{"gitId":"chiayunrong"},"content":"    @Test","lastModifiedDate":"2023-10-03"},{"lineNumber":53,"author":{"gitId":"chiayunrong"},"content":"    public void parse_repeatedFields_failure() {","lastModifiedDate":"2023-10-03"},{"lineNumber":54,"author":{"gitId":"chiayunrong"},"content":"        String userInput \u003d \" \" + PREFIX_TITLE + MeetingBuilder.DEFAULT_TITLE","lastModifiedDate":"2023-11-01"},{"lineNumber":55,"author":{"gitId":"chiayunrong"},"content":"                + \" \" + PREFIX_TIME + MeetingBuilder.DEFAULT_TIME","lastModifiedDate":"2023-11-01"},{"lineNumber":56,"author":{"gitId":"chiayunrong"},"content":"                + \" \" + PREFIX_PLACE + MeetingBuilder.DEFAULT_PLACE","lastModifiedDate":"2023-11-01"},{"lineNumber":57,"author":{"gitId":"chiayunrong"},"content":"                + \" \" + PREFIX_DESCRIPTION + MeetingBuilder.DEFAULT_DESCRIPTION;","lastModifiedDate":"2023-11-01"},{"lineNumber":58,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":59,"author":{"gitId":"chiayunrong"},"content":"        String duplicateTitle \u003d userInput + \" \" + PREFIX_TITLE + MeetingBuilder.DEFAULT_TITLE;","lastModifiedDate":"2023-11-01"},{"lineNumber":60,"author":{"gitId":"chiayunrong"},"content":"        String duplicateTime \u003d userInput + \" \" + PREFIX_TIME + MeetingBuilder.DEFAULT_TIME;","lastModifiedDate":"2023-11-01"},{"lineNumber":61,"author":{"gitId":"chiayunrong"},"content":"        String duplicatePlace \u003d userInput + \" \" + PREFIX_PLACE + MeetingBuilder.DEFAULT_PLACE;","lastModifiedDate":"2023-11-01"},{"lineNumber":62,"author":{"gitId":"chiayunrong"},"content":"        String duplicateDescription \u003d userInput + \" \" + PREFIX_DESCRIPTION + MeetingBuilder.DEFAULT_DESCRIPTION;","lastModifiedDate":"2023-11-01"},{"lineNumber":63,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":64,"author":{"gitId":"chiayunrong"},"content":"        assertParseFailure(parser, duplicateTitle, Messages.getErrorMessageForDuplicatePrefixes(PREFIX_TITLE));","lastModifiedDate":"2023-10-03"},{"lineNumber":65,"author":{"gitId":"chiayunrong"},"content":"        assertParseFailure(parser, duplicateTime, Messages.getErrorMessageForDuplicatePrefixes(PREFIX_TIME));","lastModifiedDate":"2023-10-03"},{"lineNumber":66,"author":{"gitId":"jonyeokj"},"content":"        assertParseFailure(parser, duplicatePlace, Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PLACE));","lastModifiedDate":"2023-10-11"},{"lineNumber":67,"author":{"gitId":"chiayunrong"},"content":"        assertParseFailure(parser, duplicateDescription,","lastModifiedDate":"2023-10-03"},{"lineNumber":68,"author":{"gitId":"chiayunrong"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_DESCRIPTION));","lastModifiedDate":"2023-10-03"},{"lineNumber":69,"author":{"gitId":"chiayunrong"},"content":"    }","lastModifiedDate":"2023-10-03"},{"lineNumber":70,"author":{"gitId":"chiayunrong"},"content":"}","lastModifiedDate":"2023-10-03"}],"authorContributionMap":{"jonyeokj":2,"chiayunrong":68}},{"path":"src/test/java/seedu/address/logic/parser/AddMeetingNoteCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"s-peiran"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-27"},{"lineNumber":2,"author":{"gitId":"s-peiran"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":3,"author":{"gitId":"s-peiran"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-27"},{"lineNumber":4,"author":{"gitId":"s-peiran"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-10-27"},{"lineNumber":5,"author":{"gitId":"s-peiran"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":6,"author":{"gitId":"s-peiran"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-27"},{"lineNumber":7,"author":{"gitId":"s-peiran"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":8,"author":{"gitId":"s-peiran"},"content":"import seedu.address.logic.commands.AddMeetingNoteCommand;","lastModifiedDate":"2023-10-27"},{"lineNumber":9,"author":{"gitId":"s-peiran"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":10,"author":{"gitId":"s-peiran"},"content":"class AddMeetingNoteCommandParserTest {","lastModifiedDate":"2023-10-27"},{"lineNumber":11,"author":{"gitId":"s-peiran"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":12,"author":{"gitId":"s-peiran"},"content":"    private AddMeetingNoteCommandParser parser \u003d new AddMeetingNoteCommandParser();","lastModifiedDate":"2023-10-27"},{"lineNumber":13,"author":{"gitId":"s-peiran"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":14,"author":{"gitId":"s-peiran"},"content":"    @Test","lastModifiedDate":"2023-10-27"},{"lineNumber":15,"author":{"gitId":"s-peiran"},"content":"    void parse_invalidInputs_failure() {","lastModifiedDate":"2023-10-27"},{"lineNumber":16,"author":{"gitId":"s-peiran"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddMeetingNoteCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-10-27"},{"lineNumber":17,"author":{"gitId":"s-peiran"},"content":"        String userInput \u003d \"add note -title j\";","lastModifiedDate":"2023-10-27"},{"lineNumber":18,"author":{"gitId":"s-peiran"},"content":"        assertParseFailure(parser, userInput, expectedMessage);","lastModifiedDate":"2023-10-27"},{"lineNumber":19,"author":{"gitId":"s-peiran"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":20,"author":{"gitId":"s-peiran"},"content":"}","lastModifiedDate":"2023-10-27"}],"authorContributionMap":{"s-peiran":20}},{"path":"src/test/java/seedu/address/logic/parser/AddressBookParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-07-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"chiayunrong"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST;","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-06-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":16,"author":{"gitId":"chiayunrong"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"jacobcuison"},"content":"import seedu.address.logic.commands.AddContactCommand;","lastModifiedDate":"2023-10-03"},{"lineNumber":18,"author":{"gitId":"s-peiran"},"content":"import seedu.address.logic.commands.AddContactToMeetingCommand;","lastModifiedDate":"2023-10-25"},{"lineNumber":19,"author":{"gitId":"chiayunrong"},"content":"import seedu.address.logic.commands.AddMeetingCommand;","lastModifiedDate":"2023-10-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":21,"author":{"gitId":"jacobcuison"},"content":"import seedu.address.logic.commands.DeleteContactCommand;","lastModifiedDate":"2023-10-03"},{"lineNumber":22,"author":{"gitId":"jacobcuison"},"content":"import seedu.address.logic.commands.EditContactCommand;","lastModifiedDate":"2023-10-03"},{"lineNumber":23,"author":{"gitId":"jacobcuison"},"content":"import seedu.address.logic.commands.EditContactCommand.EditContactDescriptor;","lastModifiedDate":"2023-10-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":25,"author":{"gitId":"jacobcuison"},"content":"import seedu.address.logic.commands.FindContactCommand;","lastModifiedDate":"2023-10-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":27,"author":{"gitId":"jacobcuison"},"content":"import seedu.address.logic.commands.ListContactCommand;","lastModifiedDate":"2023-10-03"},{"lineNumber":28,"author":{"gitId":"chiayunrong"},"content":"import seedu.address.logic.commands.ModeCommand;","lastModifiedDate":"2023-10-26"},{"lineNumber":29,"author":{"gitId":"chiayunrong"},"content":"import seedu.address.logic.commands.ViewContactCommand;","lastModifiedDate":"2023-10-17"},{"lineNumber":30,"author":{"gitId":"chiayunrong"},"content":"import seedu.address.logic.commands.ViewMeetingCommand;","lastModifiedDate":"2023-10-17"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-05-24"},{"lineNumber":32,"author":{"gitId":"jacobcuison"},"content":"import seedu.address.model.contact.Contact;","lastModifiedDate":"2023-10-03"},{"lineNumber":33,"author":{"gitId":"jacobcuison"},"content":"import seedu.address.model.contact.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-10-03"},{"lineNumber":34,"author":{"gitId":"chiayunrong"},"content":"import seedu.address.model.meeting.Meeting;","lastModifiedDate":"2023-10-03"},{"lineNumber":35,"author":{"gitId":"jacobcuison"},"content":"import seedu.address.testutil.ContactBuilder;","lastModifiedDate":"2023-10-03"},{"lineNumber":36,"author":{"gitId":"jacobcuison"},"content":"import seedu.address.testutil.ContactUtil;","lastModifiedDate":"2023-10-03"},{"lineNumber":37,"author":{"gitId":"jacobcuison"},"content":"import seedu.address.testutil.EditContactDescriptorBuilder;","lastModifiedDate":"2023-10-03"},{"lineNumber":38,"author":{"gitId":"chiayunrong"},"content":"import seedu.address.testutil.MeetingBuilder;","lastModifiedDate":"2023-10-03"},{"lineNumber":39,"author":{"gitId":"jonyeokj"},"content":"import seedu.address.ui.AppState;","lastModifiedDate":"2023-11-02"},{"lineNumber":40,"author":{"gitId":"jonyeokj"},"content":"import seedu.address.ui.AppState.ModeType;","lastModifiedDate":"2023-11-02"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"public class AddressBookParserTest {","lastModifiedDate":"2017-07-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"jonyeokj"},"content":"    private AppState appState \u003d AppState.getInstance();","lastModifiedDate":"2023-11-02"},{"lineNumber":45,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private final AddressBookParser parser \u003d new AddressBookParser();","lastModifiedDate":"2017-07-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"chiayunrong"},"content":"    public void parseCommand_addContact() throws Exception {","lastModifiedDate":"2023-10-17"},{"lineNumber":50,"author":{"gitId":"chiayunrong"},"content":"        setModeToContacts();","lastModifiedDate":"2023-10-26"},{"lineNumber":51,"author":{"gitId":"jacobcuison"},"content":"        Contact contact \u003d new ContactBuilder().build();","lastModifiedDate":"2023-10-03"},{"lineNumber":52,"author":{"gitId":"jonyeokj"},"content":"        AddContactCommand command \u003d (AddContactCommand) parser.parseCommand(ContactUtil.getAddCommand(contact));","lastModifiedDate":"2023-11-02"},{"lineNumber":53,"author":{"gitId":"jacobcuison"},"content":"        assertEquals(new AddContactCommand(contact), command);","lastModifiedDate":"2023-10-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"chiayunrong"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":57,"author":{"gitId":"chiayunrong"},"content":"    public void parseCommand_viewContact() throws Exception {","lastModifiedDate":"2023-10-17"},{"lineNumber":58,"author":{"gitId":"chiayunrong"},"content":"        setModeToContacts();","lastModifiedDate":"2023-10-26"},{"lineNumber":59,"author":{"gitId":"chiayunrong"},"content":"        ViewContactCommand expectedCommand \u003d new ViewContactCommand(Index.fromOneBased(1));","lastModifiedDate":"2023-10-17"},{"lineNumber":60,"author":{"gitId":"chiayunrong"},"content":"        String userInput \u003d ViewContactCommand.COMMAND_WORD + \" \" + CliSyntax.PREFIX_INDEX + \" 1\";","lastModifiedDate":"2023-11-02"},{"lineNumber":61,"author":{"gitId":"jonyeokj"},"content":"        ViewContactCommand actualCommand \u003d (ViewContactCommand) parser.parseCommand(userInput);","lastModifiedDate":"2023-11-02"},{"lineNumber":62,"author":{"gitId":"chiayunrong"},"content":"        assertEquals(expectedCommand, actualCommand);","lastModifiedDate":"2023-10-17"},{"lineNumber":63,"author":{"gitId":"chiayunrong"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":64,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":65,"author":{"gitId":"chiayunrong"},"content":"    @Test","lastModifiedDate":"2023-10-03"},{"lineNumber":66,"author":{"gitId":"chiayunrong"},"content":"    public void parseCommand_addMeeting() throws Exception {","lastModifiedDate":"2023-10-03"},{"lineNumber":67,"author":{"gitId":"chiayunrong"},"content":"        setModeToMeetings();","lastModifiedDate":"2023-10-26"},{"lineNumber":68,"author":{"gitId":"chiayunrong"},"content":"        Meeting meeting \u003d new MeetingBuilder().build();","lastModifiedDate":"2023-10-03"},{"lineNumber":69,"author":{"gitId":"chiayunrong"},"content":"        AddMeetingCommand expectedCommand \u003d new AddMeetingCommand(meeting);","lastModifiedDate":"2023-10-03"},{"lineNumber":70,"author":{"gitId":"chiayunrong"},"content":"        String userInput \u003d AddMeetingCommand.COMMAND_WORD","lastModifiedDate":"2023-10-03"},{"lineNumber":71,"author":{"gitId":"chiayunrong"},"content":"            + \" \" + CliSyntax.PREFIX_TITLE + \" \" + MeetingBuilder.DEFAULT_TITLE","lastModifiedDate":"2023-11-02"},{"lineNumber":72,"author":{"gitId":"chiayunrong"},"content":"            + \" \" + CliSyntax.PREFIX_TIME + \" \" + MeetingBuilder.DEFAULT_TIME","lastModifiedDate":"2023-11-02"},{"lineNumber":73,"author":{"gitId":"chiayunrong"},"content":"            + \" \" + CliSyntax.PREFIX_PLACE + \" \" + MeetingBuilder.DEFAULT_PLACE","lastModifiedDate":"2023-11-02"},{"lineNumber":74,"author":{"gitId":"chiayunrong"},"content":"            + \" \" + CliSyntax.PREFIX_DESCRIPTION + \" \" + MeetingBuilder.DEFAULT_DESCRIPTION;","lastModifiedDate":"2023-11-02"},{"lineNumber":75,"author":{"gitId":"jonyeokj"},"content":"        AddMeetingCommand actualCommand \u003d (AddMeetingCommand) parser.parseCommand(userInput);","lastModifiedDate":"2023-11-02"},{"lineNumber":76,"author":{"gitId":"chiayunrong"},"content":"        assertEquals(expectedCommand, actualCommand);","lastModifiedDate":"2023-10-03"},{"lineNumber":77,"author":{"gitId":"chiayunrong"},"content":"    }","lastModifiedDate":"2023-10-03"},{"lineNumber":78,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":79,"author":{"gitId":"chiayunrong"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":80,"author":{"gitId":"chiayunrong"},"content":"    public void parseCommand_viewMeeting() throws Exception {","lastModifiedDate":"2023-10-17"},{"lineNumber":81,"author":{"gitId":"chiayunrong"},"content":"        setModeToMeetings();","lastModifiedDate":"2023-10-26"},{"lineNumber":82,"author":{"gitId":"chiayunrong"},"content":"        ViewMeetingCommand expectedCommand \u003d new ViewMeetingCommand(Index.fromOneBased(1));","lastModifiedDate":"2023-10-17"},{"lineNumber":83,"author":{"gitId":"chiayunrong"},"content":"        String userInput \u003d ViewMeetingCommand.COMMAND_WORD + \" \" + CliSyntax.PREFIX_INDEX + \" 1\";","lastModifiedDate":"2023-11-02"},{"lineNumber":84,"author":{"gitId":"jonyeokj"},"content":"        ViewMeetingCommand actualCommand \u003d (ViewMeetingCommand) parser.parseCommand(userInput);","lastModifiedDate":"2023-11-02"},{"lineNumber":85,"author":{"gitId":"chiayunrong"},"content":"        assertEquals(expectedCommand, actualCommand);","lastModifiedDate":"2023-10-17"},{"lineNumber":86,"author":{"gitId":"chiayunrong"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":87,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":88,"author":{"gitId":"s-peiran"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":89,"author":{"gitId":"s-peiran"},"content":"    public void parseCommand_addContactToMeeting() throws Exception {","lastModifiedDate":"2023-10-25"},{"lineNumber":90,"author":{"gitId":"chiayunrong"},"content":"        setModeToMeetings();","lastModifiedDate":"2023-10-26"},{"lineNumber":91,"author":{"gitId":"s-peiran"},"content":"        Meeting meeting \u003d new MeetingBuilder().build();","lastModifiedDate":"2023-10-25"},{"lineNumber":92,"author":{"gitId":"s-peiran"},"content":"        Contact contact \u003d new ContactBuilder().build();","lastModifiedDate":"2023-10-25"},{"lineNumber":93,"author":{"gitId":"chiayunrong"},"content":"        String userInput \u003d AddContactToMeetingCommand.COMMAND_WORD + \" \" + CliSyntax.PREFIX_NAME","lastModifiedDate":"2023-11-02"},{"lineNumber":94,"author":{"gitId":"chiayunrong"},"content":"                + \" \" + contact.getNameString() + \" \" + CliSyntax.PREFIX_TITLE + \" \" + meeting.getTitleString();","lastModifiedDate":"2023-11-02"},{"lineNumber":95,"author":{"gitId":"s-peiran"},"content":"        AddContactToMeetingCommand expectedCommand \u003d new AddContactToMeetingCommand(","lastModifiedDate":"2023-10-25"},{"lineNumber":96,"author":{"gitId":"s-peiran"},"content":"            meeting.getTitleString(), contact.getNameString());","lastModifiedDate":"2023-10-25"},{"lineNumber":97,"author":{"gitId":"jonyeokj"},"content":"        AddContactToMeetingCommand actualCommand \u003d (AddContactToMeetingCommand) parser.parseCommand(userInput);","lastModifiedDate":"2023-11-02"},{"lineNumber":98,"author":{"gitId":"s-peiran"},"content":"        assertEquals(expectedCommand, actualCommand);","lastModifiedDate":"2023-10-25"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD) instanceof ClearCommand);","lastModifiedDate":"2023-11-02"},{"lineNumber":104,"author":{"gitId":"chiayunrong"},"content":"        assertTrue(parser.parseCommand(","lastModifiedDate":"2023-11-02"},{"lineNumber":105,"author":{"gitId":"chiayunrong"},"content":"            ClearCommand.COMMAND_WORD + \" \" + CliSyntax.PREFIX_INDEX + \" 3\") instanceof ClearCommand);","lastModifiedDate":"2023-11-02"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":109,"author":{"gitId":"chiayunrong"},"content":"    public void parseCommand_deleteContact() throws Exception {","lastModifiedDate":"2023-10-26"},{"lineNumber":110,"author":{"gitId":"chiayunrong"},"content":"        setModeToContacts();","lastModifiedDate":"2023-10-26"},{"lineNumber":111,"author":{"gitId":"jacobcuison"},"content":"        DeleteContactCommand command \u003d (DeleteContactCommand) parser.parseCommand(","lastModifiedDate":"2023-10-03"},{"lineNumber":112,"author":{"gitId":"chiayunrong"},"content":"            DeleteContactCommand.COMMAND_WORD + \" \" + CliSyntax.PREFIX_INDEX + INDEX_FIRST.getOneBased());","lastModifiedDate":"2023-11-02"},{"lineNumber":113,"author":{"gitId":"chiayunrong"},"content":"        assertEquals(new DeleteContactCommand(INDEX_FIRST), command);","lastModifiedDate":"2023-10-17"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":117,"author":{"gitId":"chiayunrong"},"content":"    public void parseCommand_editContact() throws Exception {","lastModifiedDate":"2023-10-26"},{"lineNumber":118,"author":{"gitId":"chiayunrong"},"content":"        setModeToContacts();","lastModifiedDate":"2023-10-26"},{"lineNumber":119,"author":{"gitId":"jacobcuison"},"content":"        Contact contact \u003d new ContactBuilder().build();","lastModifiedDate":"2023-10-03"},{"lineNumber":120,"author":{"gitId":"jacobcuison"},"content":"        EditContactDescriptor descriptor \u003d new EditContactDescriptorBuilder(contact).build();","lastModifiedDate":"2023-10-03"},{"lineNumber":121,"author":{"gitId":"chiayunrong"},"content":"        String input \u003d EditContactCommand.COMMAND_WORD + \" \" + CliSyntax.PREFIX_INDEX + INDEX_FIRST.getOneBased() + \" \"","lastModifiedDate":"2023-11-02"},{"lineNumber":122,"author":{"gitId":"s-peiran"},"content":"            + ContactUtil.getEditContactDescriptorDetails(descriptor);","lastModifiedDate":"2023-10-13"},{"lineNumber":123,"author":{"gitId":"jonyeokj"},"content":"        EditContactCommand command \u003d (EditContactCommand) parser.parseCommand(input);","lastModifiedDate":"2023-11-02"},{"lineNumber":124,"author":{"gitId":"s-peiran"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":125,"author":{"gitId":"chiayunrong"},"content":"        assertEquals(new EditContactCommand(INDEX_FIRST, descriptor), command);","lastModifiedDate":"2023-10-17"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2023-11-02"},{"lineNumber":131,"author":{"gitId":"chiayunrong"},"content":"        assertTrue(parser.parseCommand(","lastModifiedDate":"2023-11-02"},{"lineNumber":132,"author":{"gitId":"chiayunrong"},"content":"                ExitCommand.COMMAND_WORD + \" \" + CliSyntax.PREFIX_INDEX + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2023-11-02"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":136,"author":{"gitId":"chiayunrong"},"content":"    public void parseCommand_findContact() throws Exception {","lastModifiedDate":"2023-10-26"},{"lineNumber":137,"author":{"gitId":"chiayunrong"},"content":"        setModeToContacts();","lastModifiedDate":"2023-10-26"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2017-06-12"},{"lineNumber":139,"author":{"gitId":"chiayunrong"},"content":"        String input \u003d FindContactCommand.COMMAND_WORD + \" \" + CliSyntax.PREFIX_KEYWORD + \" \"","lastModifiedDate":"2023-11-02"},{"lineNumber":140,"author":{"gitId":"chiayunrong"},"content":"                + keywords.stream().collect(Collectors.joining(\" \"));","lastModifiedDate":"2023-11-02"},{"lineNumber":141,"author":{"gitId":"jonyeokj"},"content":"        FindContactCommand command \u003d (FindContactCommand) parser.parseCommand(input);","lastModifiedDate":"2023-11-02"},{"lineNumber":142,"author":{"gitId":"s-peiran"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":143,"author":{"gitId":"jacobcuison"},"content":"        assertEquals(new FindContactCommand(new NameContainsKeywordsPredicate(keywords)), command);","lastModifiedDate":"2023-10-03"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2023-11-02"},{"lineNumber":149,"author":{"gitId":"chiayunrong"},"content":"        assertTrue(parser.parseCommand(","lastModifiedDate":"2023-11-02"},{"lineNumber":150,"author":{"gitId":"chiayunrong"},"content":"                HelpCommand.COMMAND_WORD + \" \" + CliSyntax.PREFIX_INDEX + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2023-11-02"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    public void parseCommand_list() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":155,"author":{"gitId":"jonyeokj"},"content":"        assertTrue(parser.parseCommand(ListContactCommand.COMMAND_WORD) instanceof ListContactCommand);","lastModifiedDate":"2023-11-02"},{"lineNumber":156,"author":{"gitId":"chiayunrong"},"content":"        assertTrue(parser.parseCommand(ListContactCommand.COMMAND_WORD + \" \" + CliSyntax.PREFIX_INDEX + \" 3\")","lastModifiedDate":"2023-11-02"},{"lineNumber":157,"author":{"gitId":"chiayunrong"},"content":"                instanceof ListContactCommand);","lastModifiedDate":"2023-10-26"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":160,"author":{"gitId":"chiayunrong"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":161,"author":{"gitId":"chiayunrong"},"content":"    public void parseCommand_mode() throws Exception {","lastModifiedDate":"2023-10-26"},{"lineNumber":162,"author":{"gitId":"jonyeokj"},"content":"        assertTrue(parser.parseCommand(ModeCommand.COMMAND_WORD) instanceof ModeCommand);","lastModifiedDate":"2023-11-02"},{"lineNumber":163,"author":{"gitId":"chiayunrong"},"content":"        assertTrue(parser.parseCommand(ModeCommand.COMMAND_WORD + \" \" + CliSyntax.PREFIX_INDEX + \" 3\")","lastModifiedDate":"2023-11-02"},{"lineNumber":164,"author":{"gitId":"chiayunrong"},"content":"                instanceof ModeCommand);","lastModifiedDate":"2023-10-26"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2019-03-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"            -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2023-11-02"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":175,"author":{"gitId":"jonyeokj"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_UNKNOWN_COMMAND, \"unknownCommand\"), ()","lastModifiedDate":"2023-11-01"},{"lineNumber":176,"author":{"gitId":"jonyeokj"},"content":"            -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2023-11-02"},{"lineNumber":177,"author":{"gitId":"chiayunrong"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":178,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":179,"author":{"gitId":"chiayunrong"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":180,"author":{"gitId":"chiayunrong"},"content":"    public void parseCommand_wrongMode_throwsParseException() {","lastModifiedDate":"2023-10-26"},{"lineNumber":181,"author":{"gitId":"chiayunrong"},"content":"        setModeToContacts();","lastModifiedDate":"2023-10-26"},{"lineNumber":182,"author":{"gitId":"chiayunrong"},"content":"        String userInput \u003d AddMeetingCommand.COMMAND_WORD","lastModifiedDate":"2023-10-26"},{"lineNumber":183,"author":{"gitId":"chiayunrong"},"content":"                + \" -title\" + MeetingBuilder.DEFAULT_TITLE","lastModifiedDate":"2023-10-26"},{"lineNumber":184,"author":{"gitId":"chiayunrong"},"content":"                + \" -time\" + MeetingBuilder.DEFAULT_TIME","lastModifiedDate":"2023-10-26"},{"lineNumber":185,"author":{"gitId":"chiayunrong"},"content":"                + \" -place\" + MeetingBuilder.DEFAULT_PLACE","lastModifiedDate":"2023-10-26"},{"lineNumber":186,"author":{"gitId":"chiayunrong"},"content":"                + \" -desc\" + MeetingBuilder.DEFAULT_DESCRIPTION;","lastModifiedDate":"2023-10-26"},{"lineNumber":187,"author":{"gitId":"chiayunrong"},"content":"        assertThrows(ParseException.class,","lastModifiedDate":"2023-10-26"},{"lineNumber":188,"author":{"gitId":"chiayunrong"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-10-26"},{"lineNumber":189,"author":{"gitId":"jonyeokj"},"content":"                        AddContactCommand.MESSAGE_USAGE), () -\u003e parser.parseCommand(userInput));","lastModifiedDate":"2023-11-02"},{"lineNumber":190,"author":{"gitId":"chiayunrong"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":191,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":192,"author":{"gitId":"chiayunrong"},"content":"    private void setModeToContacts() {","lastModifiedDate":"2023-10-26"},{"lineNumber":193,"author":{"gitId":"jonyeokj"},"content":"        if (appState.getMode() !\u003d ModeType.CONTACTS) {","lastModifiedDate":"2023-11-02"},{"lineNumber":194,"author":{"gitId":"jonyeokj"},"content":"            appState.changeMode();","lastModifiedDate":"2023-11-02"},{"lineNumber":195,"author":{"gitId":"chiayunrong"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":196,"author":{"gitId":"chiayunrong"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":197,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":198,"author":{"gitId":"chiayunrong"},"content":"    private void setModeToMeetings() {","lastModifiedDate":"2023-10-26"},{"lineNumber":199,"author":{"gitId":"jonyeokj"},"content":"        if (appState.getMode() !\u003d ModeType.MEETINGS) {","lastModifiedDate":"2023-11-02"},{"lineNumber":200,"author":{"gitId":"jonyeokj"},"content":"            appState.changeMode();","lastModifiedDate":"2023-11-02"},{"lineNumber":201,"author":{"gitId":"chiayunrong"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":203,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"jonyeokj":20,"jacobcuison":17,"s-peiran":11,"chiayunrong":86,"-":69}},{"path":"src/test/java/seedu/address/logic/parser/DeleteContactCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"chiayunrong"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST;","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":10,"author":{"gitId":"jacobcuison"},"content":"import seedu.address.logic.commands.DeleteContactCommand;","lastModifiedDate":"2023-10-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2017-06-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * outside of the DeleteCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2017-06-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * same path through the DeleteCommand, and therefore we test only one of them.","lastModifiedDate":"2017-06-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2017-06-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2017-06-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":19,"author":{"gitId":"jacobcuison"},"content":"public class DeleteContactCommandParserTest {","lastModifiedDate":"2023-10-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":21,"author":{"gitId":"jonyeokj"},"content":"    private DeleteContactCommandParser parser \u003d new DeleteContactCommandParser();","lastModifiedDate":"2023-10-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsDeleteCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"chiayunrong"},"content":"        assertParseSuccess(parser, \" \" + CliSyntax.PREFIX_INDEX + \" 1\", new DeleteContactCommand(INDEX_FIRST));","lastModifiedDate":"2023-11-02"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":30,"author":{"gitId":"jacobcuison"},"content":"        assertParseFailure(parser, \"a\",","lastModifiedDate":"2023-10-03"},{"lineNumber":31,"author":{"gitId":"jacobcuison"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteContactCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-09"}],"authorContributionMap":{"jonyeokj":1,"jacobcuison":4,"chiayunrong":2,"-":26}},{"path":"src/test/java/seedu/address/logic/parser/DeleteContactFromMeetingCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"s-peiran"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-27"},{"lineNumber":2,"author":{"gitId":"s-peiran"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":3,"author":{"gitId":"s-peiran"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-27"},{"lineNumber":4,"author":{"gitId":"s-peiran"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-10-27"},{"lineNumber":5,"author":{"gitId":"s-peiran"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":6,"author":{"gitId":"s-peiran"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-27"},{"lineNumber":7,"author":{"gitId":"s-peiran"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":8,"author":{"gitId":"s-peiran"},"content":"import seedu.address.logic.commands.DeleteContactFromMeetingCommand;","lastModifiedDate":"2023-10-27"},{"lineNumber":9,"author":{"gitId":"s-peiran"},"content":"import seedu.address.model.contact.Contact;","lastModifiedDate":"2023-10-27"},{"lineNumber":10,"author":{"gitId":"s-peiran"},"content":"import seedu.address.model.meeting.Meeting;","lastModifiedDate":"2023-10-27"},{"lineNumber":11,"author":{"gitId":"s-peiran"},"content":"import seedu.address.testutil.ContactBuilder;","lastModifiedDate":"2023-10-27"},{"lineNumber":12,"author":{"gitId":"s-peiran"},"content":"import seedu.address.testutil.MeetingBuilder;","lastModifiedDate":"2023-10-27"},{"lineNumber":13,"author":{"gitId":"s-peiran"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":14,"author":{"gitId":"s-peiran"},"content":"class DeleteContactFromMeetingCommandParserTest {","lastModifiedDate":"2023-10-27"},{"lineNumber":15,"author":{"gitId":"s-peiran"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":16,"author":{"gitId":"s-peiran"},"content":"    private DeleteContactFromMeetingCommandParser parser \u003d new DeleteContactFromMeetingCommandParser();","lastModifiedDate":"2023-10-27"},{"lineNumber":17,"author":{"gitId":"s-peiran"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":18,"author":{"gitId":"s-peiran"},"content":"    @Test","lastModifiedDate":"2023-10-27"},{"lineNumber":19,"author":{"gitId":"s-peiran"},"content":"    void parse_invalidInputs_failure() {","lastModifiedDate":"2023-10-27"},{"lineNumber":20,"author":{"gitId":"s-peiran"},"content":"        Meeting validMeeting \u003d new MeetingBuilder().build();","lastModifiedDate":"2023-10-27"},{"lineNumber":21,"author":{"gitId":"s-peiran"},"content":"        Contact validContact \u003d new ContactBuilder().build();","lastModifiedDate":"2023-10-27"},{"lineNumber":22,"author":{"gitId":"s-peiran"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-10-27"},{"lineNumber":23,"author":{"gitId":"s-peiran"},"content":"                DeleteContactFromMeetingCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-10-27"},{"lineNumber":24,"author":{"gitId":"chiayunrong"},"content":"        String userInput \u003d DeleteContactFromMeetingCommand.COMMAND_WORD + \" \" + CliSyntax.PREFIX_NAME + \" \"","lastModifiedDate":"2023-11-02"},{"lineNumber":25,"author":{"gitId":"chiayunrong"},"content":"                + validContact.getNameString() + CliSyntax.PREFIX_NOTE_MEETING + \" \" + validMeeting.getTitleString();","lastModifiedDate":"2023-11-02"},{"lineNumber":26,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":27,"author":{"gitId":"s-peiran"},"content":"        assertParseFailure(parser, userInput, expectedMessage);","lastModifiedDate":"2023-10-27"},{"lineNumber":28,"author":{"gitId":"s-peiran"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":29,"author":{"gitId":"s-peiran"},"content":"}","lastModifiedDate":"2023-10-27"}],"authorContributionMap":{"s-peiran":26,"chiayunrong":3}},{"path":"src/test/java/seedu/address/logic/parser/DeleteMeetingCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jonyeokj"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-18"},{"lineNumber":2,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":3,"author":{"gitId":"jonyeokj"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-18"},{"lineNumber":4,"author":{"gitId":"jonyeokj"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-10-18"},{"lineNumber":5,"author":{"gitId":"jonyeokj"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-10-18"},{"lineNumber":6,"author":{"gitId":"jonyeokj"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST;","lastModifiedDate":"2023-10-18"},{"lineNumber":7,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":8,"author":{"gitId":"jonyeokj"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-18"},{"lineNumber":9,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":10,"author":{"gitId":"jonyeokj"},"content":"import seedu.address.logic.commands.DeleteMeetingCommand;","lastModifiedDate":"2023-10-18"},{"lineNumber":11,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":12,"author":{"gitId":"jonyeokj"},"content":"/**","lastModifiedDate":"2023-10-18"},{"lineNumber":13,"author":{"gitId":"jonyeokj"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2023-10-18"},{"lineNumber":14,"author":{"gitId":"jonyeokj"},"content":" * outside of the DeleteCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2023-10-18"},{"lineNumber":15,"author":{"gitId":"jonyeokj"},"content":" * same path through the DeleteCommand, and therefore we test only one of them.","lastModifiedDate":"2023-10-18"},{"lineNumber":16,"author":{"gitId":"jonyeokj"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2023-10-18"},{"lineNumber":17,"author":{"gitId":"jonyeokj"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2023-10-18"},{"lineNumber":18,"author":{"gitId":"jonyeokj"},"content":" */","lastModifiedDate":"2023-10-18"},{"lineNumber":19,"author":{"gitId":"jonyeokj"},"content":"public class DeleteMeetingCommandParserTest {","lastModifiedDate":"2023-10-18"},{"lineNumber":20,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":21,"author":{"gitId":"jonyeokj"},"content":"    private DeleteMeetingCommandParser parser \u003d new DeleteMeetingCommandParser();","lastModifiedDate":"2023-10-18"},{"lineNumber":22,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":23,"author":{"gitId":"jonyeokj"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":24,"author":{"gitId":"jonyeokj"},"content":"    public void parse_validArgs_returnsDeleteCommand() {","lastModifiedDate":"2023-10-18"},{"lineNumber":25,"author":{"gitId":"chiayunrong"},"content":"        assertParseSuccess(parser, \" \" + CliSyntax.PREFIX_INDEX + \" 1\", new DeleteMeetingCommand(INDEX_FIRST));","lastModifiedDate":"2023-11-02"},{"lineNumber":26,"author":{"gitId":"jonyeokj"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":27,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":28,"author":{"gitId":"jonyeokj"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":29,"author":{"gitId":"jonyeokj"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2023-10-18"},{"lineNumber":30,"author":{"gitId":"jonyeokj"},"content":"        assertParseFailure(parser, \"a\",","lastModifiedDate":"2023-10-18"},{"lineNumber":31,"author":{"gitId":"jonyeokj"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteMeetingCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-18"},{"lineNumber":32,"author":{"gitId":"jonyeokj"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":33,"author":{"gitId":"jonyeokj"},"content":"}","lastModifiedDate":"2023-10-18"}],"authorContributionMap":{"jonyeokj":32,"chiayunrong":1}},{"path":"src/test/java/seedu/address/logic/parser/EditContactCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-07-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-07-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-07-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":31,"author":{"gitId":"chiayunrong"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST;","lastModifiedDate":"2023-10-17"},{"lineNumber":32,"author":{"gitId":"chiayunrong"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND;","lastModifiedDate":"2023-10-17"},{"lineNumber":33,"author":{"gitId":"chiayunrong"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_THIRD;","lastModifiedDate":"2023-10-17"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-14"},{"lineNumber":39,"author":{"gitId":"jacobcuison"},"content":"import seedu.address.logic.commands.EditContactCommand;","lastModifiedDate":"2023-10-03"},{"lineNumber":40,"author":{"gitId":"jacobcuison"},"content":"import seedu.address.logic.commands.EditContactCommand.EditContactDescriptor;","lastModifiedDate":"2023-10-03"},{"lineNumber":41,"author":{"gitId":"jacobcuison"},"content":"import seedu.address.model.contact.Address;","lastModifiedDate":"2023-10-03"},{"lineNumber":42,"author":{"gitId":"jacobcuison"},"content":"import seedu.address.model.contact.Email;","lastModifiedDate":"2023-10-03"},{"lineNumber":43,"author":{"gitId":"jacobcuison"},"content":"import seedu.address.model.contact.Name;","lastModifiedDate":"2023-10-03"},{"lineNumber":44,"author":{"gitId":"jacobcuison"},"content":"import seedu.address.model.contact.Phone;","lastModifiedDate":"2023-10-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-05-04"},{"lineNumber":46,"author":{"gitId":"jacobcuison"},"content":"import seedu.address.testutil.EditContactDescriptorBuilder;","lastModifiedDate":"2023-10-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":48,"author":{"gitId":"jacobcuison"},"content":"public class EditContactCommandParserTest {","lastModifiedDate":"2023-10-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    private static final String TAG_EMPTY \u003d \" \" + PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2017-05-04"},{"lineNumber":53,"author":{"gitId":"jacobcuison"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditContactCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-10-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":55,"author":{"gitId":"jonyeokj"},"content":"    private EditContactCommandParser parser \u003d new EditContactCommandParser();","lastModifiedDate":"2023-10-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // no index specified","lastModifiedDate":"2017-05-04"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":63,"author":{"gitId":"chiayunrong"},"content":"        assertParseFailure(parser, \" \" + CliSyntax.PREFIX_INDEX + \" 1\", EditContactCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2023-11-02"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // no index and no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2017-06-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // negative index","lastModifiedDate":"2017-05-04"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"-5\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // zero index","lastModifiedDate":"2017-06-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"0\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":86,"author":{"gitId":"chiayunrong"},"content":"        assertParseFailure(parser, \" \" + CliSyntax.PREFIX_INDEX + \" 1\" + INVALID_NAME_DESC,","lastModifiedDate":"2023-11-02"},{"lineNumber":87,"author":{"gitId":"chiayunrong"},"content":"                Name.MESSAGE_CONSTRAINTS); // invalid name","lastModifiedDate":"2023-11-02"},{"lineNumber":88,"author":{"gitId":"chiayunrong"},"content":"        assertParseFailure(parser, \" \" + CliSyntax.PREFIX_INDEX + \" 1\" + INVALID_PHONE_DESC,","lastModifiedDate":"2023-11-02"},{"lineNumber":89,"author":{"gitId":"chiayunrong"},"content":"                Phone.MESSAGE_CONSTRAINTS); // invalid phone","lastModifiedDate":"2023-11-02"},{"lineNumber":90,"author":{"gitId":"chiayunrong"},"content":"        assertParseFailure(parser, \" \" + CliSyntax.PREFIX_INDEX + \" 1\" + INVALID_EMAIL_DESC,","lastModifiedDate":"2023-11-02"},{"lineNumber":91,"author":{"gitId":"chiayunrong"},"content":"                Email.MESSAGE_CONSTRAINTS); // invalid email","lastModifiedDate":"2023-11-02"},{"lineNumber":92,"author":{"gitId":"chiayunrong"},"content":"        assertParseFailure(parser, \" \" + CliSyntax.PREFIX_INDEX + \" 1\" + INVALID_ADDRESS_DESC,","lastModifiedDate":"2023-11-02"},{"lineNumber":93,"author":{"gitId":"chiayunrong"},"content":"                Address.MESSAGE_CONSTRAINTS); // invalid address","lastModifiedDate":"2023-11-02"},{"lineNumber":94,"author":{"gitId":"chiayunrong"},"content":"        assertParseFailure(parser, \" \" + CliSyntax.PREFIX_INDEX + \" 1\" + INVALID_TAG_DESC,","lastModifiedDate":"2023-11-02"},{"lineNumber":95,"author":{"gitId":"chiayunrong"},"content":"                Tag.MESSAGE_CONSTRAINTS); // invalid tag","lastModifiedDate":"2023-11-02"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // invalid phone followed by valid email","lastModifiedDate":"2017-05-04"},{"lineNumber":98,"author":{"gitId":"chiayunrong"},"content":"        assertParseFailure(parser, \" \" + CliSyntax.PREFIX_INDEX + \" 1\" + INVALID_PHONE_DESC + EMAIL_DESC_AMY,","lastModifiedDate":"2023-11-02"},{"lineNumber":99,"author":{"gitId":"chiayunrong"},"content":"                Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-11-02"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":101,"author":{"gitId":"jacobcuison"},"content":"        // while parsing {@code PREFIX_TAG} alone will reset the tags of the {@code Contact} being edited,","lastModifiedDate":"2023-10-03"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // parsing it together with a valid tag results in error","lastModifiedDate":"2017-05-04"},{"lineNumber":103,"author":{"gitId":"chiayunrong"},"content":"        assertParseFailure(parser, \" \" + CliSyntax.PREFIX_INDEX + \" 1\" + TAG_DESC_FRIEND","lastModifiedDate":"2023-11-02"},{"lineNumber":104,"author":{"gitId":"chiayunrong"},"content":"                + TAG_DESC_HUSBAND + TAG_EMPTY, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-11-02"},{"lineNumber":105,"author":{"gitId":"chiayunrong"},"content":"        assertParseFailure(parser, \" \" + CliSyntax.PREFIX_INDEX + \" 1\" + TAG_DESC_FRIEND","lastModifiedDate":"2023-11-02"},{"lineNumber":106,"author":{"gitId":"chiayunrong"},"content":"                + TAG_EMPTY + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-11-02"},{"lineNumber":107,"author":{"gitId":"chiayunrong"},"content":"        assertParseFailure(parser, \" \" + CliSyntax.PREFIX_INDEX + \" 1\" + TAG_EMPTY","lastModifiedDate":"2023-11-02"},{"lineNumber":108,"author":{"gitId":"chiayunrong"},"content":"                + TAG_DESC_FRIEND + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-11-02"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2017-05-04"},{"lineNumber":111,"author":{"gitId":"chiayunrong"},"content":"        assertParseFailure(parser, \" \" + CliSyntax.PREFIX_INDEX + \" 1\" + INVALID_NAME_DESC","lastModifiedDate":"2023-11-02"},{"lineNumber":112,"author":{"gitId":"chiayunrong"},"content":"                + INVALID_EMAIL_DESC + VALID_ADDRESS_AMY + VALID_PHONE_AMY, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-11-02"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":117,"author":{"gitId":"chiayunrong"},"content":"        Index targetIndex \u003d INDEX_SECOND;","lastModifiedDate":"2023-10-17"},{"lineNumber":118,"author":{"gitId":"chiayunrong"},"content":"        String userInput \u003d \" \" + CliSyntax.PREFIX_INDEX + \" \" + targetIndex.getOneBased() + PHONE_DESC_BOB","lastModifiedDate":"2023-11-02"},{"lineNumber":119,"author":{"gitId":"chiayunrong"},"content":"                + TAG_DESC_HUSBAND + EMAIL_DESC_AMY + ADDRESS_DESC_AMY + NAME_DESC_AMY + TAG_DESC_FRIEND;","lastModifiedDate":"2023-11-02"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":121,"author":{"gitId":"jacobcuison"},"content":"        EditContactDescriptor descriptor \u003d new EditContactDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2023-10-03"},{"lineNumber":122,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2017-05-04"},{"lineNumber":123,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":124,"author":{"gitId":"jacobcuison"},"content":"        EditContactCommand expectedCommand \u003d new EditContactCommand(targetIndex, descriptor);","lastModifiedDate":"2023-10-03"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":131,"author":{"gitId":"chiayunrong"},"content":"        Index targetIndex \u003d INDEX_FIRST;","lastModifiedDate":"2023-10-17"},{"lineNumber":132,"author":{"gitId":"chiayunrong"},"content":"        String userInput \u003d \" \" + CliSyntax.PREFIX_INDEX + \" \" + targetIndex.getOneBased() + PHONE_DESC_BOB","lastModifiedDate":"2023-11-02"},{"lineNumber":133,"author":{"gitId":"chiayunrong"},"content":"                + EMAIL_DESC_AMY;","lastModifiedDate":"2023-11-02"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":135,"author":{"gitId":"jacobcuison"},"content":"        EditContactDescriptor descriptor \u003d new EditContactDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2023-10-03"},{"lineNumber":136,"author":{"gitId":"-"},"content":"                .withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":137,"author":{"gitId":"jacobcuison"},"content":"        EditContactCommand expectedCommand \u003d new EditContactCommand(targetIndex, descriptor);","lastModifiedDate":"2023-10-03"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        // name","lastModifiedDate":"2017-05-04"},{"lineNumber":145,"author":{"gitId":"chiayunrong"},"content":"        Index targetIndex \u003d INDEX_THIRD;","lastModifiedDate":"2023-10-17"},{"lineNumber":146,"author":{"gitId":"chiayunrong"},"content":"        String userInput \u003d \" \" + CliSyntax.PREFIX_INDEX + \" \" + targetIndex.getOneBased() + NAME_DESC_AMY;","lastModifiedDate":"2023-11-02"},{"lineNumber":147,"author":{"gitId":"jacobcuison"},"content":"        EditContactDescriptor descriptor \u003d new EditContactDescriptorBuilder().withName(VALID_NAME_AMY).build();","lastModifiedDate":"2023-10-03"},{"lineNumber":148,"author":{"gitId":"jacobcuison"},"content":"        EditContactCommand expectedCommand \u003d new EditContactCommand(targetIndex, descriptor);","lastModifiedDate":"2023-10-03"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        // phone","lastModifiedDate":"2017-05-04"},{"lineNumber":152,"author":{"gitId":"chiayunrong"},"content":"        userInput \u003d \" \" + CliSyntax.PREFIX_INDEX + \" \" + targetIndex.getOneBased() + PHONE_DESC_AMY;","lastModifiedDate":"2023-11-02"},{"lineNumber":153,"author":{"gitId":"jacobcuison"},"content":"        descriptor \u003d new EditContactDescriptorBuilder().withPhone(VALID_PHONE_AMY).build();","lastModifiedDate":"2023-10-03"},{"lineNumber":154,"author":{"gitId":"jacobcuison"},"content":"        expectedCommand \u003d new EditContactCommand(targetIndex, descriptor);","lastModifiedDate":"2023-10-03"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        // email","lastModifiedDate":"2017-05-04"},{"lineNumber":158,"author":{"gitId":"chiayunrong"},"content":"        userInput \u003d \" \" + CliSyntax.PREFIX_INDEX + \" \" + targetIndex.getOneBased() + EMAIL_DESC_AMY;","lastModifiedDate":"2023-11-02"},{"lineNumber":159,"author":{"gitId":"jacobcuison"},"content":"        descriptor \u003d new EditContactDescriptorBuilder().withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2023-10-03"},{"lineNumber":160,"author":{"gitId":"jacobcuison"},"content":"        expectedCommand \u003d new EditContactCommand(targetIndex, descriptor);","lastModifiedDate":"2023-10-03"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        // address","lastModifiedDate":"2017-05-04"},{"lineNumber":164,"author":{"gitId":"chiayunrong"},"content":"        userInput \u003d \" \" + CliSyntax.PREFIX_INDEX + \" \" + targetIndex.getOneBased() + ADDRESS_DESC_AMY;","lastModifiedDate":"2023-11-02"},{"lineNumber":165,"author":{"gitId":"jacobcuison"},"content":"        descriptor \u003d new EditContactDescriptorBuilder().withAddress(VALID_ADDRESS_AMY).build();","lastModifiedDate":"2023-10-03"},{"lineNumber":166,"author":{"gitId":"jacobcuison"},"content":"        expectedCommand \u003d new EditContactCommand(targetIndex, descriptor);","lastModifiedDate":"2023-10-03"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        // tags","lastModifiedDate":"2017-05-04"},{"lineNumber":170,"author":{"gitId":"chiayunrong"},"content":"        userInput \u003d \" \" + CliSyntax.PREFIX_INDEX + \" \" + targetIndex.getOneBased() + TAG_DESC_FRIEND;","lastModifiedDate":"2023-11-02"},{"lineNumber":171,"author":{"gitId":"jacobcuison"},"content":"        descriptor \u003d new EditContactDescriptorBuilder().withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2023-10-03"},{"lineNumber":172,"author":{"gitId":"jacobcuison"},"content":"        expectedCommand \u003d new EditContactCommand(targetIndex, descriptor);","lastModifiedDate":"2023-10-03"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    public void parse_multipleRepeatedFields_failure() {","lastModifiedDate":"2023-07-14"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        // More extensive testing of duplicate parameter detections is done in","lastModifiedDate":"2023-07-14"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        // AddCommandParserTest#parse_repeatedNonTagValue_failure()","lastModifiedDate":"2023-07-14"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        // valid followed by invalid","lastModifiedDate":"2023-07-14"},{"lineNumber":182,"author":{"gitId":"chiayunrong"},"content":"        Index targetIndex \u003d INDEX_FIRST;","lastModifiedDate":"2023-10-17"},{"lineNumber":183,"author":{"gitId":"chiayunrong"},"content":"        String userInput \u003d \" \" + CliSyntax.PREFIX_INDEX + \" \" + targetIndex.getOneBased() + INVALID_PHONE_DESC","lastModifiedDate":"2023-11-02"},{"lineNumber":184,"author":{"gitId":"chiayunrong"},"content":"                + PHONE_DESC_BOB;","lastModifiedDate":"2023-11-02"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, userInput, Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        // invalid followed by valid","lastModifiedDate":"2023-07-14"},{"lineNumber":189,"author":{"gitId":"chiayunrong"},"content":"        userInput \u003d \" \" + CliSyntax.PREFIX_INDEX + \" \" + targetIndex.getOneBased() + PHONE_DESC_BOB","lastModifiedDate":"2023-11-02"},{"lineNumber":190,"author":{"gitId":"chiayunrong"},"content":"                + INVALID_PHONE_DESC;","lastModifiedDate":"2023-11-02"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, userInput, Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        // mulltiple valid fields repeated","lastModifiedDate":"2023-07-14"},{"lineNumber":195,"author":{"gitId":"chiayunrong"},"content":"        userInput \u003d \" \" + CliSyntax.PREFIX_INDEX + \" \" + targetIndex.getOneBased() + PHONE_DESC_AMY + ADDRESS_DESC_AMY","lastModifiedDate":"2023-11-02"},{"lineNumber":196,"author":{"gitId":"chiayunrong"},"content":"                + EMAIL_DESC_AMY + TAG_DESC_FRIEND + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2023-11-02"},{"lineNumber":197,"author":{"gitId":"chiayunrong"},"content":"                + TAG_DESC_FRIEND + PHONE_DESC_BOB + ADDRESS_DESC_BOB + EMAIL_DESC_BOB + TAG_DESC_HUSBAND;","lastModifiedDate":"2023-11-02"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, userInput,","lastModifiedDate":"2023-07-14"},{"lineNumber":200,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS));","lastModifiedDate":"2023-07-14"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        // multiple invalid values","lastModifiedDate":"2023-07-14"},{"lineNumber":203,"author":{"gitId":"chiayunrong"},"content":"        userInput \u003d \" \" + CliSyntax.PREFIX_INDEX + \" \" + targetIndex.getOneBased() + INVALID_PHONE_DESC","lastModifiedDate":"2023-11-02"},{"lineNumber":204,"author":{"gitId":"chiayunrong"},"content":"                + INVALID_ADDRESS_DESC + INVALID_EMAIL_DESC + INVALID_PHONE_DESC + INVALID_ADDRESS_DESC","lastModifiedDate":"2023-11-02"},{"lineNumber":205,"author":{"gitId":"chiayunrong"},"content":"                + INVALID_EMAIL_DESC;","lastModifiedDate":"2023-11-02"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, userInput,","lastModifiedDate":"2023-07-14"},{"lineNumber":208,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS));","lastModifiedDate":"2023-07-14"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":212,"author":{"gitId":"-"},"content":"    public void parse_resetTags_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":213,"author":{"gitId":"chiayunrong"},"content":"        Index targetIndex \u003d INDEX_THIRD;","lastModifiedDate":"2023-10-17"},{"lineNumber":214,"author":{"gitId":"chiayunrong"},"content":"        String userInput \u003d \" \" + CliSyntax.PREFIX_INDEX + \" \" + targetIndex.getOneBased() + TAG_EMPTY;","lastModifiedDate":"2023-11-02"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":216,"author":{"gitId":"jacobcuison"},"content":"        EditContactDescriptor descriptor \u003d new EditContactDescriptorBuilder().withTags().build();","lastModifiedDate":"2023-10-03"},{"lineNumber":217,"author":{"gitId":"jacobcuison"},"content":"        EditContactCommand expectedCommand \u003d new EditContactCommand(targetIndex, descriptor);","lastModifiedDate":"2023-10-03"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":219,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":221,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":222,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-04"}],"authorContributionMap":{"jonyeokj":2,"jacobcuison":26,"chiayunrong":49,"-":145}},{"path":"src/test/java/seedu/address/logic/parser/EditMeetingCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jonyeokj"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-18"},{"lineNumber":2,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":3,"author":{"gitId":"jonyeokj"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-18"},{"lineNumber":4,"author":{"gitId":"jonyeokj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESCRIPTION_DESC_CHI;","lastModifiedDate":"2023-10-18"},{"lineNumber":5,"author":{"gitId":"jonyeokj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESCRIPTION_DESC_ENG;","lastModifiedDate":"2023-10-18"},{"lineNumber":6,"author":{"gitId":"jonyeokj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PLACE_DESC;","lastModifiedDate":"2023-10-18"},{"lineNumber":7,"author":{"gitId":"jonyeokj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TIME_DESC;","lastModifiedDate":"2023-10-18"},{"lineNumber":8,"author":{"gitId":"jonyeokj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TITLE_DESC;","lastModifiedDate":"2023-10-18"},{"lineNumber":9,"author":{"gitId":"jonyeokj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PLACE_DESC_ENG;","lastModifiedDate":"2023-10-18"},{"lineNumber":10,"author":{"gitId":"jonyeokj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TIME_DESC_CHI;","lastModifiedDate":"2023-10-18"},{"lineNumber":11,"author":{"gitId":"jonyeokj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TIME_DESC_ENG;","lastModifiedDate":"2023-10-18"},{"lineNumber":12,"author":{"gitId":"jonyeokj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TITLE_DESC_CHI;","lastModifiedDate":"2023-10-18"},{"lineNumber":13,"author":{"gitId":"jonyeokj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TITLE_DESC_ENG;","lastModifiedDate":"2023-10-18"},{"lineNumber":14,"author":{"gitId":"jonyeokj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DESCRIPTION_CHI;","lastModifiedDate":"2023-10-18"},{"lineNumber":15,"author":{"gitId":"jonyeokj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DESCRIPTION_ENG;","lastModifiedDate":"2023-10-18"},{"lineNumber":16,"author":{"gitId":"jonyeokj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PLACE_ENG;","lastModifiedDate":"2023-10-18"},{"lineNumber":17,"author":{"gitId":"jonyeokj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TIME_CHI;","lastModifiedDate":"2023-10-18"},{"lineNumber":18,"author":{"gitId":"jonyeokj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TIME_ENG;","lastModifiedDate":"2023-10-18"},{"lineNumber":19,"author":{"gitId":"jonyeokj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TITLE_ENG;","lastModifiedDate":"2023-10-18"},{"lineNumber":20,"author":{"gitId":"jonyeokj"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PLACE;","lastModifiedDate":"2023-10-18"},{"lineNumber":21,"author":{"gitId":"jonyeokj"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TIME;","lastModifiedDate":"2023-10-18"},{"lineNumber":22,"author":{"gitId":"jonyeokj"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TITLE;","lastModifiedDate":"2023-10-18"},{"lineNumber":23,"author":{"gitId":"jonyeokj"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-10-18"},{"lineNumber":24,"author":{"gitId":"jonyeokj"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-10-18"},{"lineNumber":25,"author":{"gitId":"jonyeokj"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST;","lastModifiedDate":"2023-10-18"},{"lineNumber":26,"author":{"gitId":"jonyeokj"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND;","lastModifiedDate":"2023-10-18"},{"lineNumber":27,"author":{"gitId":"jonyeokj"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_THIRD;","lastModifiedDate":"2023-10-18"},{"lineNumber":28,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":29,"author":{"gitId":"jonyeokj"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-18"},{"lineNumber":30,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":31,"author":{"gitId":"jonyeokj"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-18"},{"lineNumber":32,"author":{"gitId":"jonyeokj"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-18"},{"lineNumber":33,"author":{"gitId":"jonyeokj"},"content":"import seedu.address.logic.commands.EditMeetingCommand;","lastModifiedDate":"2023-10-18"},{"lineNumber":34,"author":{"gitId":"jonyeokj"},"content":"import seedu.address.logic.commands.EditMeetingCommand.EditMeetingDescriptor;","lastModifiedDate":"2023-10-18"},{"lineNumber":35,"author":{"gitId":"jonyeokj"},"content":"import seedu.address.model.meeting.Place;","lastModifiedDate":"2023-10-18"},{"lineNumber":36,"author":{"gitId":"jonyeokj"},"content":"import seedu.address.model.meeting.Time;","lastModifiedDate":"2023-10-18"},{"lineNumber":37,"author":{"gitId":"jonyeokj"},"content":"import seedu.address.model.meeting.Title;","lastModifiedDate":"2023-10-18"},{"lineNumber":38,"author":{"gitId":"jonyeokj"},"content":"import seedu.address.testutil.EditMeetingDescriptorBuilder;","lastModifiedDate":"2023-10-18"},{"lineNumber":39,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":40,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":41,"author":{"gitId":"jonyeokj"},"content":"public class EditMeetingCommandParserTest {","lastModifiedDate":"2023-10-18"},{"lineNumber":42,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":43,"author":{"gitId":"jonyeokj"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2023-10-18"},{"lineNumber":44,"author":{"gitId":"jonyeokj"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditMeetingCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-10-18"},{"lineNumber":45,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":46,"author":{"gitId":"jonyeokj"},"content":"    private EditMeetingCommandParser parser \u003d new EditMeetingCommandParser();","lastModifiedDate":"2023-10-18"},{"lineNumber":47,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":48,"author":{"gitId":"jonyeokj"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":49,"author":{"gitId":"jonyeokj"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2023-10-18"},{"lineNumber":50,"author":{"gitId":"jonyeokj"},"content":"        // no index specified","lastModifiedDate":"2023-10-18"},{"lineNumber":51,"author":{"gitId":"jonyeokj"},"content":"        assertParseFailure(parser, VALID_TITLE_ENG, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-10-18"},{"lineNumber":52,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":53,"author":{"gitId":"jonyeokj"},"content":"        // no field specified","lastModifiedDate":"2023-10-18"},{"lineNumber":54,"author":{"gitId":"chiayunrong"},"content":"        assertParseFailure(parser, \" \" + CliSyntax.PREFIX_INDEX + \" 1\", EditMeetingCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2023-11-02"},{"lineNumber":55,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":56,"author":{"gitId":"jonyeokj"},"content":"        // no index and no field specified","lastModifiedDate":"2023-10-18"},{"lineNumber":57,"author":{"gitId":"jonyeokj"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-10-18"},{"lineNumber":58,"author":{"gitId":"jonyeokj"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":59,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":60,"author":{"gitId":"jonyeokj"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":61,"author":{"gitId":"jonyeokj"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2023-10-18"},{"lineNumber":62,"author":{"gitId":"jonyeokj"},"content":"        // negative index","lastModifiedDate":"2023-10-18"},{"lineNumber":63,"author":{"gitId":"jonyeokj"},"content":"        assertParseFailure(parser, \"-5\" + TITLE_DESC_ENG, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-10-18"},{"lineNumber":64,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":65,"author":{"gitId":"jonyeokj"},"content":"        // zero index","lastModifiedDate":"2023-10-18"},{"lineNumber":66,"author":{"gitId":"jonyeokj"},"content":"        assertParseFailure(parser, \"0\" + TITLE_DESC_ENG, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-10-18"},{"lineNumber":67,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":68,"author":{"gitId":"jonyeokj"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2023-10-18"},{"lineNumber":69,"author":{"gitId":"jonyeokj"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-10-18"},{"lineNumber":70,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":71,"author":{"gitId":"jonyeokj"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2023-10-18"},{"lineNumber":72,"author":{"gitId":"jonyeokj"},"content":"        assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-10-18"},{"lineNumber":73,"author":{"gitId":"jonyeokj"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":74,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":75,"author":{"gitId":"jonyeokj"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":76,"author":{"gitId":"jonyeokj"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2023-10-18"},{"lineNumber":77,"author":{"gitId":"chiayunrong"},"content":"        assertParseFailure(parser, \" \" + CliSyntax.PREFIX_INDEX + \" 1\" + INVALID_TITLE_DESC,","lastModifiedDate":"2023-11-02"},{"lineNumber":78,"author":{"gitId":"chiayunrong"},"content":"                Title.MESSAGE_CONSTRAINTS); // invalid title","lastModifiedDate":"2023-11-02"},{"lineNumber":79,"author":{"gitId":"chiayunrong"},"content":"        assertParseFailure(parser, \" \" + CliSyntax.PREFIX_INDEX + \" 1\" + INVALID_TIME_DESC,","lastModifiedDate":"2023-11-02"},{"lineNumber":80,"author":{"gitId":"chiayunrong"},"content":"                Time.MESSAGE_CONSTRAINTS); // invalid time","lastModifiedDate":"2023-11-02"},{"lineNumber":81,"author":{"gitId":"chiayunrong"},"content":"        assertParseFailure(parser, \" \" + CliSyntax.PREFIX_INDEX + \" 1\" + INVALID_PLACE_DESC,","lastModifiedDate":"2023-11-02"},{"lineNumber":82,"author":{"gitId":"chiayunrong"},"content":"                Place.MESSAGE_CONSTRAINTS); // invalid place","lastModifiedDate":"2023-11-02"},{"lineNumber":83,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":84,"author":{"gitId":"jonyeokj"},"content":"        // invalid time followed by valid place","lastModifiedDate":"2023-10-18"},{"lineNumber":85,"author":{"gitId":"chiayunrong"},"content":"        assertParseFailure(parser, \" \" + CliSyntax.PREFIX_INDEX + \" 1\" + INVALID_TIME_DESC","lastModifiedDate":"2023-11-02"},{"lineNumber":86,"author":{"gitId":"chiayunrong"},"content":"                + INVALID_PLACE_DESC, Time.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-11-02"},{"lineNumber":87,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":88,"author":{"gitId":"jonyeokj"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2023-10-18"},{"lineNumber":89,"author":{"gitId":"chiayunrong"},"content":"        assertParseFailure(parser, \" \" + CliSyntax.PREFIX_INDEX + \" 1\" + INVALID_TITLE_DESC","lastModifiedDate":"2023-11-02"},{"lineNumber":90,"author":{"gitId":"chiayunrong"},"content":"                + INVALID_TIME_DESC + VALID_PLACE_ENG + VALID_DESCRIPTION_ENG, Title.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-11-02"},{"lineNumber":91,"author":{"gitId":"jonyeokj"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":92,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":93,"author":{"gitId":"jonyeokj"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":94,"author":{"gitId":"jonyeokj"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2023-10-18"},{"lineNumber":95,"author":{"gitId":"jonyeokj"},"content":"        Index targetIndex \u003d INDEX_SECOND;","lastModifiedDate":"2023-10-18"},{"lineNumber":96,"author":{"gitId":"chiayunrong"},"content":"        String userInput \u003d \" \" + CliSyntax.PREFIX_INDEX + \" \" + targetIndex.getOneBased() + TIME_DESC_CHI","lastModifiedDate":"2023-11-02"},{"lineNumber":97,"author":{"gitId":"jonyeokj"},"content":"                + PLACE_DESC_ENG + DESCRIPTION_DESC_CHI + TITLE_DESC_ENG;","lastModifiedDate":"2023-10-18"},{"lineNumber":98,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":99,"author":{"gitId":"jonyeokj"},"content":"        EditMeetingDescriptor descriptor \u003d new EditMeetingDescriptorBuilder().withTitle(VALID_TITLE_ENG)","lastModifiedDate":"2023-10-18"},{"lineNumber":100,"author":{"gitId":"jonyeokj"},"content":"                .withTime(VALID_TIME_CHI).withPlace(VALID_PLACE_ENG).withDescription(VALID_DESCRIPTION_CHI).build();","lastModifiedDate":"2023-10-18"},{"lineNumber":101,"author":{"gitId":"jonyeokj"},"content":"        EditMeetingCommand expectedCommand \u003d new EditMeetingCommand(targetIndex, descriptor);","lastModifiedDate":"2023-10-18"},{"lineNumber":102,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":103,"author":{"gitId":"jonyeokj"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-10-18"},{"lineNumber":104,"author":{"gitId":"jonyeokj"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":105,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":106,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":107,"author":{"gitId":"jonyeokj"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":108,"author":{"gitId":"jonyeokj"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2023-10-18"},{"lineNumber":109,"author":{"gitId":"jonyeokj"},"content":"        // title","lastModifiedDate":"2023-10-18"},{"lineNumber":110,"author":{"gitId":"jonyeokj"},"content":"        Index targetIndex \u003d INDEX_THIRD;","lastModifiedDate":"2023-10-18"},{"lineNumber":111,"author":{"gitId":"chiayunrong"},"content":"        String userInput \u003d \" \" + CliSyntax.PREFIX_INDEX + \" \" + targetIndex.getOneBased() + TITLE_DESC_ENG;","lastModifiedDate":"2023-11-02"},{"lineNumber":112,"author":{"gitId":"jonyeokj"},"content":"        EditMeetingDescriptor descriptor \u003d new EditMeetingDescriptorBuilder().withTitle(VALID_TITLE_ENG).build();","lastModifiedDate":"2023-10-18"},{"lineNumber":113,"author":{"gitId":"jonyeokj"},"content":"        EditMeetingCommand expectedCommand \u003d new EditMeetingCommand(targetIndex, descriptor);","lastModifiedDate":"2023-10-18"},{"lineNumber":114,"author":{"gitId":"jonyeokj"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-10-18"},{"lineNumber":115,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":116,"author":{"gitId":"jonyeokj"},"content":"        // time","lastModifiedDate":"2023-10-18"},{"lineNumber":117,"author":{"gitId":"chiayunrong"},"content":"        userInput \u003d \" \" + CliSyntax.PREFIX_INDEX + \" \" + targetIndex.getOneBased() + TIME_DESC_ENG;","lastModifiedDate":"2023-11-02"},{"lineNumber":118,"author":{"gitId":"jonyeokj"},"content":"        descriptor \u003d new EditMeetingDescriptorBuilder().withTime(VALID_TIME_ENG).build();","lastModifiedDate":"2023-10-18"},{"lineNumber":119,"author":{"gitId":"jonyeokj"},"content":"        expectedCommand \u003d new EditMeetingCommand(targetIndex, descriptor);","lastModifiedDate":"2023-10-18"},{"lineNumber":120,"author":{"gitId":"jonyeokj"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-10-18"},{"lineNumber":121,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":122,"author":{"gitId":"jonyeokj"},"content":"        // place","lastModifiedDate":"2023-10-18"},{"lineNumber":123,"author":{"gitId":"chiayunrong"},"content":"        userInput \u003d \" \" + CliSyntax.PREFIX_INDEX + \" \" + targetIndex.getOneBased() + PLACE_DESC_ENG;","lastModifiedDate":"2023-11-02"},{"lineNumber":124,"author":{"gitId":"jonyeokj"},"content":"        descriptor \u003d new EditMeetingDescriptorBuilder().withPlace(VALID_PLACE_ENG).build();","lastModifiedDate":"2023-10-18"},{"lineNumber":125,"author":{"gitId":"jonyeokj"},"content":"        expectedCommand \u003d new EditMeetingCommand(targetIndex, descriptor);","lastModifiedDate":"2023-10-18"},{"lineNumber":126,"author":{"gitId":"jonyeokj"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-10-18"},{"lineNumber":127,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":128,"author":{"gitId":"jonyeokj"},"content":"        // description","lastModifiedDate":"2023-10-18"},{"lineNumber":129,"author":{"gitId":"chiayunrong"},"content":"        userInput \u003d \" \" + CliSyntax.PREFIX_INDEX + \" \" + targetIndex.getOneBased() + DESCRIPTION_DESC_ENG;","lastModifiedDate":"2023-11-02"},{"lineNumber":130,"author":{"gitId":"jonyeokj"},"content":"        descriptor \u003d new EditMeetingDescriptorBuilder().withDescription(VALID_DESCRIPTION_ENG).build();","lastModifiedDate":"2023-10-18"},{"lineNumber":131,"author":{"gitId":"jonyeokj"},"content":"        expectedCommand \u003d new EditMeetingCommand(targetIndex, descriptor);","lastModifiedDate":"2023-10-18"},{"lineNumber":132,"author":{"gitId":"jonyeokj"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-10-18"},{"lineNumber":133,"author":{"gitId":"jonyeokj"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":134,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":135,"author":{"gitId":"jonyeokj"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":136,"author":{"gitId":"jonyeokj"},"content":"    public void parse_multipleRepeatedFields_failure() {","lastModifiedDate":"2023-10-18"},{"lineNumber":137,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":138,"author":{"gitId":"jonyeokj"},"content":"        // valid followed by invalid","lastModifiedDate":"2023-10-18"},{"lineNumber":139,"author":{"gitId":"jonyeokj"},"content":"        Index targetIndex \u003d INDEX_FIRST;","lastModifiedDate":"2023-10-18"},{"lineNumber":140,"author":{"gitId":"chiayunrong"},"content":"        String userInput \u003d \" \" + CliSyntax.PREFIX_INDEX + \" \" + targetIndex.getOneBased() + INVALID_TIME_DESC","lastModifiedDate":"2023-11-02"},{"lineNumber":141,"author":{"gitId":"chiayunrong"},"content":"                + TIME_DESC_CHI;","lastModifiedDate":"2023-11-02"},{"lineNumber":142,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":143,"author":{"gitId":"jonyeokj"},"content":"        assertParseFailure(parser, userInput, Messages.getErrorMessageForDuplicatePrefixes(PREFIX_TIME));","lastModifiedDate":"2023-10-18"},{"lineNumber":144,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":145,"author":{"gitId":"jonyeokj"},"content":"        // invalid followed by valid","lastModifiedDate":"2023-10-18"},{"lineNumber":146,"author":{"gitId":"chiayunrong"},"content":"        userInput \u003d \" \" + CliSyntax.PREFIX_INDEX + \" \" + targetIndex.getOneBased() + TIME_DESC_CHI + INVALID_TIME_DESC;","lastModifiedDate":"2023-11-02"},{"lineNumber":147,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":148,"author":{"gitId":"jonyeokj"},"content":"        assertParseFailure(parser, userInput, Messages.getErrorMessageForDuplicatePrefixes(PREFIX_TIME));","lastModifiedDate":"2023-10-18"},{"lineNumber":149,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":150,"author":{"gitId":"jonyeokj"},"content":"        // mulltiple valid fields repeated","lastModifiedDate":"2023-10-18"},{"lineNumber":151,"author":{"gitId":"chiayunrong"},"content":"        userInput \u003d \" \" + CliSyntax.PREFIX_INDEX + \" \" + targetIndex.getOneBased() + TIME_DESC_CHI","lastModifiedDate":"2023-11-02"},{"lineNumber":152,"author":{"gitId":"chiayunrong"},"content":"                + DESCRIPTION_DESC_CHI + TITLE_DESC_CHI + TIME_DESC_ENG + TITLE_DESC_ENG;","lastModifiedDate":"2023-11-02"},{"lineNumber":153,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":154,"author":{"gitId":"jonyeokj"},"content":"        assertParseFailure(parser, userInput,","lastModifiedDate":"2023-10-18"},{"lineNumber":155,"author":{"gitId":"jonyeokj"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_TIME, PREFIX_TITLE));","lastModifiedDate":"2023-10-18"},{"lineNumber":156,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":157,"author":{"gitId":"jonyeokj"},"content":"        // multiple invalid values","lastModifiedDate":"2023-10-18"},{"lineNumber":158,"author":{"gitId":"chiayunrong"},"content":"        userInput \u003d \" \" + CliSyntax.PREFIX_INDEX + \" \" + targetIndex.getOneBased() + INVALID_TITLE_DESC","lastModifiedDate":"2023-11-02"},{"lineNumber":159,"author":{"gitId":"chiayunrong"},"content":"                + INVALID_TITLE_DESC + INVALID_PLACE_DESC + INVALID_PLACE_DESC;","lastModifiedDate":"2023-11-02"},{"lineNumber":160,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":161,"author":{"gitId":"jonyeokj"},"content":"        assertParseFailure(parser, userInput,","lastModifiedDate":"2023-10-18"},{"lineNumber":162,"author":{"gitId":"jonyeokj"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_TITLE, PREFIX_PLACE));","lastModifiedDate":"2023-10-18"},{"lineNumber":163,"author":{"gitId":"jonyeokj"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":164,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":165,"author":{"gitId":"jonyeokj"},"content":"}","lastModifiedDate":"2023-10-18"}],"authorContributionMap":{"jonyeokj":142,"chiayunrong":23}},{"path":"src/test/java/seedu/address/logic/parser/FindContactCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":11,"author":{"gitId":"jacobcuison"},"content":"import seedu.address.logic.commands.FindContactCommand;","lastModifiedDate":"2023-10-03"},{"lineNumber":12,"author":{"gitId":"jacobcuison"},"content":"import seedu.address.model.contact.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-10-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"jacobcuison"},"content":"public class FindContactCommandParserTest {","lastModifiedDate":"2023-10-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private FindCommandParser parser \u003d new FindCommandParser();","lastModifiedDate":"2017-06-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2017-06-27"},{"lineNumber":20,"author":{"gitId":"jacobcuison"},"content":"        assertParseFailure(parser, \"     \", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-10-03"},{"lineNumber":21,"author":{"gitId":"jacobcuison"},"content":"                FindContactCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsFindCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2017-06-27"},{"lineNumber":27,"author":{"gitId":"jacobcuison"},"content":"        FindContactCommand expectedFindContactCommand \u003d","lastModifiedDate":"2023-10-03"},{"lineNumber":28,"author":{"gitId":"jacobcuison"},"content":"                new FindContactCommand(new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\")));","lastModifiedDate":"2023-10-03"},{"lineNumber":29,"author":{"gitId":"chiayunrong"},"content":"        assertParseSuccess(parser, \" \" + CliSyntax.PREFIX_KEYWORD + \" Alice Bob\", expectedFindContactCommand);","lastModifiedDate":"2023-11-02"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2017-06-27"},{"lineNumber":32,"author":{"gitId":"chiayunrong"},"content":"        assertParseSuccess(parser, \" \" + CliSyntax.PREFIX_KEYWORD + \" \\n Alice \\n \\t Bob  \\t\",","lastModifiedDate":"2023-11-02"},{"lineNumber":33,"author":{"gitId":"chiayunrong"},"content":"                expectedFindContactCommand);","lastModifiedDate":"2023-11-02"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-27"}],"authorContributionMap":{"jacobcuison":7,"chiayunrong":3,"-":26}},{"path":"src/test/java/seedu/address/logic/parser/ParserUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.ParserUtil.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2017-06-02"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":7,"author":{"gitId":"chiayunrong"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST;","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-05-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-05-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-05-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":17,"author":{"gitId":"jacobcuison"},"content":"import seedu.address.model.contact.Address;","lastModifiedDate":"2023-10-03"},{"lineNumber":18,"author":{"gitId":"jacobcuison"},"content":"import seedu.address.model.contact.Email;","lastModifiedDate":"2023-10-03"},{"lineNumber":19,"author":{"gitId":"jacobcuison"},"content":"import seedu.address.model.contact.Name;","lastModifiedDate":"2023-10-03"},{"lineNumber":20,"author":{"gitId":"jacobcuison"},"content":"import seedu.address.model.contact.Phone;","lastModifiedDate":"2023-10-03"},{"lineNumber":21,"author":{"gitId":"chiayunrong"},"content":"import seedu.address.model.meeting.Description;","lastModifiedDate":"2023-10-03"},{"lineNumber":22,"author":{"gitId":"jonyeokj"},"content":"import seedu.address.model.meeting.Place;","lastModifiedDate":"2023-10-11"},{"lineNumber":23,"author":{"gitId":"chiayunrong"},"content":"import seedu.address.model.meeting.Time;","lastModifiedDate":"2023-10-03"},{"lineNumber":24,"author":{"gitId":"chiayunrong"},"content":"import seedu.address.model.meeting.Title;","lastModifiedDate":"2023-10-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-05-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class ParserUtilTest {","lastModifiedDate":"2017-05-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2017-05-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2017-05-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2017-05-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":33,"author":{"gitId":"chiayunrong"},"content":"    private static final String INVALID_TITLE \u003d \"C@2103\";","lastModifiedDate":"2023-10-03"},{"lineNumber":34,"author":{"gitId":"chiayunrong"},"content":"    private static final String INVALID_TIME \u003d \"1234\";","lastModifiedDate":"2023-10-03"},{"lineNumber":35,"author":{"gitId":"jonyeokj"},"content":"    private static final String INVALID_PLACE \u003d \"LOC@TION\";","lastModifiedDate":"2023-10-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d \"Rachel Walker\";","lastModifiedDate":"2017-05-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d \"123456\";","lastModifiedDate":"2017-05-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d \"123 Main Street #0505\";","lastModifiedDate":"2017-05-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d \"rachel@example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_1 \u003d \"friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_2 \u003d \"neighbour\";","lastModifiedDate":"2017-05-22"},{"lineNumber":43,"author":{"gitId":"chiayunrong"},"content":"    private static final String VALID_TITLE \u003d \"CS2103\";","lastModifiedDate":"2023-10-03"},{"lineNumber":44,"author":{"gitId":"chiayunrong"},"content":"    private static final String VALID_TIME \u003d \"01/01/2023 23:59\";","lastModifiedDate":"2023-10-03"},{"lineNumber":45,"author":{"gitId":"jonyeokj"},"content":"    private static final String VALID_PLACE \u003d \"COM3\";","lastModifiedDate":"2023-10-11"},{"lineNumber":46,"author":{"gitId":"chiayunrong"},"content":"    private static final String DESCRIPTION \u003d \"BELLO I AM A MINION BEHEHEE 1234 !@#$\";","lastModifiedDate":"2023-10-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private static final String WHITESPACE \u003d \" \\t\\r\\n\";","lastModifiedDate":"2017-05-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void parseIndex_invalidInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseIndex(\"10 a\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void parseIndex_outOfRangeInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_INVALID_INDEX, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            -\u003e ParserUtil.parseIndex(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2019-03-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void parseIndex_validInput_success() throws Exception {","lastModifiedDate":"2017-05-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // No whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":64,"author":{"gitId":"chiayunrong"},"content":"        assertEquals(INDEX_FIRST, ParserUtil.parseIndex(\"1\"));","lastModifiedDate":"2023-10-17"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // Leading and trailing whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":67,"author":{"gitId":"chiayunrong"},"content":"        assertEquals(INDEX_FIRST, ParserUtil.parseIndex(\"  1  \"));","lastModifiedDate":"2023-10-17"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void parseName_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseName((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void parseName_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseName(INVALID_NAME));","lastModifiedDate":"2019-03-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithoutWhitespace_returnsName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(VALID_NAME));","lastModifiedDate":"2017-05-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithWhitespace_returnsTrimmedName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        String nameWithWhitespace \u003d WHITESPACE + VALID_NAME + WHITESPACE;","lastModifiedDate":"2017-05-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(nameWithWhitespace));","lastModifiedDate":"2017-05-29"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public void parsePhone_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parsePhone((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public void parsePhone_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parsePhone(INVALID_PHONE));","lastModifiedDate":"2019-03-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithoutWhitespace_returnsPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-22"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(VALID_PHONE));","lastModifiedDate":"2017-05-30"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithWhitespace_returnsTrimmedPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        String phoneWithWhitespace \u003d WHITESPACE + VALID_PHONE + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-30"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(phoneWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public void parseAddress_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseAddress((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    public void parseAddress_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseAddress(INVALID_ADDRESS));","lastModifiedDate":"2019-03-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithoutWhitespace_returnsAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-22"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(VALID_ADDRESS));","lastModifiedDate":"2017-05-30"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithWhitespace_returnsTrimmedAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        String addressWithWhitespace \u003d WHITESPACE + VALID_ADDRESS + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-30"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(addressWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    public void parseEmail_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseEmail((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    public void parseEmail_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseEmail(INVALID_EMAIL));","lastModifiedDate":"2019-03-14"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithoutWhitespace_returnsEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-22"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(VALID_EMAIL));","lastModifiedDate":"2017-05-30"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithWhitespace_returnsTrimmedEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        String emailWithWhitespace \u003d WHITESPACE + VALID_EMAIL + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-30"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(emailWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    public void parseTag_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTag(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    public void parseTag_invalidValue_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTag(INVALID_TAG));","lastModifiedDate":"2019-03-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithoutWhitespace_returnsTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(VALID_TAG_1));","lastModifiedDate":"2017-05-30"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithWhitespace_returnsTrimmedTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        String tagWithWhitespace \u003d WHITESPACE + VALID_TAG_1 + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(tagWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    public void parseTags_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTags(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithInvalidTags_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, INVALID_TAG)));","lastModifiedDate":"2019-03-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    public void parseTags_emptyCollection_returnsEmptySet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        assertTrue(ParserUtil.parseTags(Collections.emptyList()).isEmpty());","lastModifiedDate":"2017-05-22"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithValidTags_returnsTagSet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e actualTagSet \u003d ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, VALID_TAG_2));","lastModifiedDate":"2017-05-22"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e expectedTagSet \u003d new HashSet\u003cTag\u003e(Arrays.asList(new Tag(VALID_TAG_1), new Tag(VALID_TAG_2)));","lastModifiedDate":"2017-05-22"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        assertEquals(expectedTagSet, actualTagSet);","lastModifiedDate":"2017-05-22"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":207,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":208,"author":{"gitId":"chiayunrong"},"content":"    @Test","lastModifiedDate":"2023-10-03"},{"lineNumber":209,"author":{"gitId":"chiayunrong"},"content":"    public void parseTitle_null_throwsNullPointerException() {","lastModifiedDate":"2023-10-03"},{"lineNumber":210,"author":{"gitId":"chiayunrong"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseName((String) null));","lastModifiedDate":"2023-10-03"},{"lineNumber":211,"author":{"gitId":"chiayunrong"},"content":"    }","lastModifiedDate":"2023-10-03"},{"lineNumber":212,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":213,"author":{"gitId":"chiayunrong"},"content":"    @Test","lastModifiedDate":"2023-10-03"},{"lineNumber":214,"author":{"gitId":"chiayunrong"},"content":"    public void parseTitle_invalidValue_throwsParseException() {","lastModifiedDate":"2023-10-03"},{"lineNumber":215,"author":{"gitId":"chiayunrong"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTitle(INVALID_TITLE));","lastModifiedDate":"2023-10-03"},{"lineNumber":216,"author":{"gitId":"chiayunrong"},"content":"    }","lastModifiedDate":"2023-10-03"},{"lineNumber":217,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":218,"author":{"gitId":"chiayunrong"},"content":"    @Test","lastModifiedDate":"2023-10-03"},{"lineNumber":219,"author":{"gitId":"chiayunrong"},"content":"    public void parseTitle_validValue_returnsTitle() throws Exception {","lastModifiedDate":"2023-10-03"},{"lineNumber":220,"author":{"gitId":"chiayunrong"},"content":"        Title expectedTitle \u003d new Title(VALID_TITLE);","lastModifiedDate":"2023-10-03"},{"lineNumber":221,"author":{"gitId":"chiayunrong"},"content":"        Title actualTitle \u003d ParserUtil.parseTitle(VALID_TITLE);","lastModifiedDate":"2023-10-03"},{"lineNumber":222,"author":{"gitId":"chiayunrong"},"content":"        assertEquals(expectedTitle, actualTitle);","lastModifiedDate":"2023-10-03"},{"lineNumber":223,"author":{"gitId":"chiayunrong"},"content":"    }","lastModifiedDate":"2023-10-03"},{"lineNumber":224,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":225,"author":{"gitId":"chiayunrong"},"content":"    @Test","lastModifiedDate":"2023-10-03"},{"lineNumber":226,"author":{"gitId":"chiayunrong"},"content":"    public void parseTitle_validValueWithWhitespace_returnsTitle() throws Exception {","lastModifiedDate":"2023-10-03"},{"lineNumber":227,"author":{"gitId":"chiayunrong"},"content":"        Title expectedTitle \u003d new Title(VALID_TITLE);","lastModifiedDate":"2023-10-03"},{"lineNumber":228,"author":{"gitId":"chiayunrong"},"content":"        Title actualTitle \u003d ParserUtil.parseTitle(\" \" + VALID_TITLE + \" \");","lastModifiedDate":"2023-10-03"},{"lineNumber":229,"author":{"gitId":"chiayunrong"},"content":"        assertEquals(expectedTitle, actualTitle);","lastModifiedDate":"2023-10-03"},{"lineNumber":230,"author":{"gitId":"chiayunrong"},"content":"    }","lastModifiedDate":"2023-10-03"},{"lineNumber":231,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":232,"author":{"gitId":"chiayunrong"},"content":"    @Test","lastModifiedDate":"2023-10-03"},{"lineNumber":233,"author":{"gitId":"chiayunrong"},"content":"    public void parseTime_null_throwsNullPointerException() {","lastModifiedDate":"2023-10-03"},{"lineNumber":234,"author":{"gitId":"chiayunrong"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTime((String) null));","lastModifiedDate":"2023-10-03"},{"lineNumber":235,"author":{"gitId":"chiayunrong"},"content":"    }","lastModifiedDate":"2023-10-03"},{"lineNumber":236,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":237,"author":{"gitId":"chiayunrong"},"content":"    @Test","lastModifiedDate":"2023-10-03"},{"lineNumber":238,"author":{"gitId":"chiayunrong"},"content":"    public void parseTime_invalidValue_throwsParseException() {","lastModifiedDate":"2023-10-03"},{"lineNumber":239,"author":{"gitId":"chiayunrong"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTime(INVALID_TIME));","lastModifiedDate":"2023-10-03"},{"lineNumber":240,"author":{"gitId":"chiayunrong"},"content":"    }","lastModifiedDate":"2023-10-03"},{"lineNumber":241,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":242,"author":{"gitId":"chiayunrong"},"content":"    @Test","lastModifiedDate":"2023-10-03"},{"lineNumber":243,"author":{"gitId":"chiayunrong"},"content":"    public void parseTime_validValue_returnsTime() throws Exception {","lastModifiedDate":"2023-10-03"},{"lineNumber":244,"author":{"gitId":"chiayunrong"},"content":"        Time expectedTime \u003d new Time(VALID_TIME);","lastModifiedDate":"2023-10-03"},{"lineNumber":245,"author":{"gitId":"chiayunrong"},"content":"        Time actualTime \u003d ParserUtil.parseTime(VALID_TIME);","lastModifiedDate":"2023-10-03"},{"lineNumber":246,"author":{"gitId":"chiayunrong"},"content":"        assertEquals(expectedTime, actualTime);","lastModifiedDate":"2023-10-03"},{"lineNumber":247,"author":{"gitId":"chiayunrong"},"content":"    }","lastModifiedDate":"2023-10-03"},{"lineNumber":248,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":249,"author":{"gitId":"chiayunrong"},"content":"    @Test","lastModifiedDate":"2023-10-03"},{"lineNumber":250,"author":{"gitId":"chiayunrong"},"content":"    public void parseTime_validValueWithWhitespace_returnsTime() throws Exception {","lastModifiedDate":"2023-10-03"},{"lineNumber":251,"author":{"gitId":"chiayunrong"},"content":"        Time expectedTime \u003d new Time(VALID_TIME);","lastModifiedDate":"2023-10-03"},{"lineNumber":252,"author":{"gitId":"chiayunrong"},"content":"        Time actualTime \u003d ParserUtil.parseTime(\" \" + VALID_TIME + \" \");","lastModifiedDate":"2023-10-03"},{"lineNumber":253,"author":{"gitId":"chiayunrong"},"content":"        assertEquals(expectedTime, actualTime);","lastModifiedDate":"2023-10-03"},{"lineNumber":254,"author":{"gitId":"chiayunrong"},"content":"    }","lastModifiedDate":"2023-10-03"},{"lineNumber":255,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":256,"author":{"gitId":"chiayunrong"},"content":"    @Test","lastModifiedDate":"2023-10-03"},{"lineNumber":257,"author":{"gitId":"jonyeokj"},"content":"    public void parsePlace_null_throwsNullPointerException() {","lastModifiedDate":"2023-10-11"},{"lineNumber":258,"author":{"gitId":"jonyeokj"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parsePlace((String) null));","lastModifiedDate":"2023-10-11"},{"lineNumber":259,"author":{"gitId":"chiayunrong"},"content":"    }","lastModifiedDate":"2023-10-03"},{"lineNumber":260,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":261,"author":{"gitId":"chiayunrong"},"content":"    @Test","lastModifiedDate":"2023-10-03"},{"lineNumber":262,"author":{"gitId":"jonyeokj"},"content":"    public void parsePlace_invalidValue_throwsParseException() {","lastModifiedDate":"2023-10-11"},{"lineNumber":263,"author":{"gitId":"jonyeokj"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parsePlace(INVALID_PLACE));","lastModifiedDate":"2023-10-11"},{"lineNumber":264,"author":{"gitId":"chiayunrong"},"content":"    }","lastModifiedDate":"2023-10-03"},{"lineNumber":265,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":266,"author":{"gitId":"chiayunrong"},"content":"    @Test","lastModifiedDate":"2023-10-03"},{"lineNumber":267,"author":{"gitId":"jonyeokj"},"content":"    public void parsePlace_validValue_returnsPlace() throws Exception {","lastModifiedDate":"2023-10-11"},{"lineNumber":268,"author":{"gitId":"jonyeokj"},"content":"        Place expectedPlace \u003d new Place(VALID_PLACE);","lastModifiedDate":"2023-10-11"},{"lineNumber":269,"author":{"gitId":"jonyeokj"},"content":"        Place actualPlace \u003d ParserUtil.parsePlace(VALID_PLACE);","lastModifiedDate":"2023-10-11"},{"lineNumber":270,"author":{"gitId":"jonyeokj"},"content":"        assertEquals(expectedPlace, actualPlace);","lastModifiedDate":"2023-10-11"},{"lineNumber":271,"author":{"gitId":"chiayunrong"},"content":"    }","lastModifiedDate":"2023-10-03"},{"lineNumber":272,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":273,"author":{"gitId":"chiayunrong"},"content":"    @Test","lastModifiedDate":"2023-10-03"},{"lineNumber":274,"author":{"gitId":"jonyeokj"},"content":"    public void parsePlace_validValueWithWhitespace_returnsPlace() throws Exception {","lastModifiedDate":"2023-10-11"},{"lineNumber":275,"author":{"gitId":"jonyeokj"},"content":"        Place expectedPlace \u003d new Place(VALID_PLACE);","lastModifiedDate":"2023-10-11"},{"lineNumber":276,"author":{"gitId":"jonyeokj"},"content":"        Place actualPlace \u003d ParserUtil.parsePlace(\" \" + VALID_PLACE + \" \");","lastModifiedDate":"2023-10-11"},{"lineNumber":277,"author":{"gitId":"jonyeokj"},"content":"        assertEquals(expectedPlace, actualPlace);","lastModifiedDate":"2023-10-11"},{"lineNumber":278,"author":{"gitId":"chiayunrong"},"content":"    }","lastModifiedDate":"2023-10-03"},{"lineNumber":279,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":280,"author":{"gitId":"chiayunrong"},"content":"    @Test","lastModifiedDate":"2023-10-03"},{"lineNumber":281,"author":{"gitId":"chiayunrong"},"content":"    public void parseDescription_null_throwsNullPointerException() {","lastModifiedDate":"2023-10-03"},{"lineNumber":282,"author":{"gitId":"jonyeokj"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parsePlace((String) null));","lastModifiedDate":"2023-10-11"},{"lineNumber":283,"author":{"gitId":"chiayunrong"},"content":"    }","lastModifiedDate":"2023-10-03"},{"lineNumber":284,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":285,"author":{"gitId":"chiayunrong"},"content":"    @Test","lastModifiedDate":"2023-10-03"},{"lineNumber":286,"author":{"gitId":"chiayunrong"},"content":"    public void parseDescription_returnsDescription() {","lastModifiedDate":"2023-10-03"},{"lineNumber":287,"author":{"gitId":"chiayunrong"},"content":"        Description expectedDescription \u003d new Description(DESCRIPTION);","lastModifiedDate":"2023-10-03"},{"lineNumber":288,"author":{"gitId":"chiayunrong"},"content":"        Description actualDescription \u003d ParserUtil.parseDescription(DESCRIPTION);","lastModifiedDate":"2023-10-03"},{"lineNumber":289,"author":{"gitId":"chiayunrong"},"content":"        assertEquals(expectedDescription, actualDescription);","lastModifiedDate":"2023-10-03"},{"lineNumber":290,"author":{"gitId":"chiayunrong"},"content":"    }","lastModifiedDate":"2023-10-03"},{"lineNumber":291,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":292,"author":{"gitId":"chiayunrong"},"content":"    @Test","lastModifiedDate":"2023-10-03"},{"lineNumber":293,"author":{"gitId":"chiayunrong"},"content":"    public void parseDescription_withWhitespace_returnsUntrimmedDescription() {","lastModifiedDate":"2023-10-03"},{"lineNumber":294,"author":{"gitId":"chiayunrong"},"content":"        Description expectedDescription \u003d new Description(\" \" + DESCRIPTION + \" \");","lastModifiedDate":"2023-10-03"},{"lineNumber":295,"author":{"gitId":"chiayunrong"},"content":"        Description actualDescription \u003d ParserUtil.parseDescription(\" \" + DESCRIPTION + \" \");","lastModifiedDate":"2023-10-03"},{"lineNumber":296,"author":{"gitId":"chiayunrong"},"content":"        assertEquals(expectedDescription, actualDescription);","lastModifiedDate":"2023-10-03"},{"lineNumber":297,"author":{"gitId":"chiayunrong"},"content":"    }","lastModifiedDate":"2023-10-03"},{"lineNumber":298,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-22"}],"authorContributionMap":{"jonyeokj":16,"jacobcuison":4,"chiayunrong":89,"-":189}},{"path":"src/test/java/seedu/address/logic/parser/ViewContactCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chiayunrong"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-17"},{"lineNumber":2,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":3,"author":{"gitId":"chiayunrong"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"chiayunrong"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"chiayunrong"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"chiayunrong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"chiayunrong"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"chiayunrong"},"content":"import seedu.address.logic.commands.ViewContactCommand;","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"chiayunrong"},"content":"public class ViewContactCommandParserTest {","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":14,"author":{"gitId":"chiayunrong"},"content":"    private ViewContactCommandParser parser \u003d new ViewContactCommandParser();","lastModifiedDate":"2023-10-17"},{"lineNumber":15,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"chiayunrong"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"chiayunrong"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"chiayunrong"},"content":"        assertParseFailure(parser, \"     \", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"chiayunrong"},"content":"             ViewContactCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-17"},{"lineNumber":20,"author":{"gitId":"chiayunrong"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":21,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":22,"author":{"gitId":"chiayunrong"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":23,"author":{"gitId":"chiayunrong"},"content":"    public void parse_validArgs_returnsViewMeetingCommand() {","lastModifiedDate":"2023-10-17"},{"lineNumber":24,"author":{"gitId":"chiayunrong"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2023-10-17"},{"lineNumber":25,"author":{"gitId":"chiayunrong"},"content":"        ViewContactCommand expectedViewContactCommand \u003d new ViewContactCommand(Index.fromOneBased(1));","lastModifiedDate":"2023-10-17"},{"lineNumber":26,"author":{"gitId":"chiayunrong"},"content":"        assertParseSuccess(parser, \" \" + CliSyntax.PREFIX_INDEX + \"1\", expectedViewContactCommand);","lastModifiedDate":"2023-11-02"},{"lineNumber":27,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":28,"author":{"gitId":"chiayunrong"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2023-10-17"},{"lineNumber":29,"author":{"gitId":"chiayunrong"},"content":"        assertParseSuccess(parser, \" \" + CliSyntax.PREFIX_INDEX + \" \\n 1 \\n\", expectedViewContactCommand);","lastModifiedDate":"2023-11-02"},{"lineNumber":30,"author":{"gitId":"chiayunrong"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":31,"author":{"gitId":"chiayunrong"},"content":"}","lastModifiedDate":"2023-10-17"}],"authorContributionMap":{"chiayunrong":31}},{"path":"src/test/java/seedu/address/logic/parser/ViewMeetingCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chiayunrong"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-17"},{"lineNumber":2,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":3,"author":{"gitId":"chiayunrong"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"chiayunrong"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"chiayunrong"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"chiayunrong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"chiayunrong"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"chiayunrong"},"content":"import seedu.address.logic.commands.ViewMeetingCommand;","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"chiayunrong"},"content":"public class ViewMeetingCommandParserTest {","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":14,"author":{"gitId":"chiayunrong"},"content":"    private ViewMeetingCommandParser parser \u003d new ViewMeetingCommandParser();","lastModifiedDate":"2023-10-17"},{"lineNumber":15,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"chiayunrong"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"chiayunrong"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"chiayunrong"},"content":"        assertParseFailure(parser, \"     \", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"chiayunrong"},"content":"                ViewMeetingCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-17"},{"lineNumber":20,"author":{"gitId":"chiayunrong"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":21,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":22,"author":{"gitId":"chiayunrong"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":23,"author":{"gitId":"chiayunrong"},"content":"    public void parse_validArgs_returnsViewMeetingCommand() {","lastModifiedDate":"2023-10-17"},{"lineNumber":24,"author":{"gitId":"chiayunrong"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2023-10-17"},{"lineNumber":25,"author":{"gitId":"chiayunrong"},"content":"        ViewMeetingCommand expectedViewMeetingCommand \u003d new ViewMeetingCommand(Index.fromOneBased(1));","lastModifiedDate":"2023-10-17"},{"lineNumber":26,"author":{"gitId":"chiayunrong"},"content":"        assertParseSuccess(parser, \" \" + CliSyntax.PREFIX_INDEX + \"1\", expectedViewMeetingCommand);","lastModifiedDate":"2023-11-02"},{"lineNumber":27,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":28,"author":{"gitId":"chiayunrong"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2023-10-17"},{"lineNumber":29,"author":{"gitId":"chiayunrong"},"content":"        assertParseSuccess(parser, \" \" + CliSyntax.PREFIX_INDEX + \" \\n 1 \\n\", expectedViewMeetingCommand);","lastModifiedDate":"2023-11-02"},{"lineNumber":30,"author":{"gitId":"chiayunrong"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":31,"author":{"gitId":"chiayunrong"},"content":"}","lastModifiedDate":"2023-10-17"}],"authorContributionMap":{"chiayunrong":31}},{"path":"src/test/java/seedu/address/model/AddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-12-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2018-04-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":9,"author":{"gitId":"jonyeokj"},"content":"import static seedu.address.testutil.TypicalAddressBook.ALICE;","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"jonyeokj"},"content":"import static seedu.address.testutil.TypicalAddressBook.CS2103;","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"jonyeokj"},"content":"import static seedu.address.testutil.TypicalAddressBook.getTypicalAddressBook;","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-12-24"},{"lineNumber":22,"author":{"gitId":"jonyeokj"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"jacobcuison"},"content":"import seedu.address.model.contact.Contact;","lastModifiedDate":"2023-10-03"},{"lineNumber":24,"author":{"gitId":"jacobcuison"},"content":"import seedu.address.model.contact.exceptions.DuplicateContactException;","lastModifiedDate":"2023-10-03"},{"lineNumber":25,"author":{"gitId":"jonyeokj"},"content":"import seedu.address.model.meeting.Meeting;","lastModifiedDate":"2023-10-11"},{"lineNumber":26,"author":{"gitId":"jacobcuison"},"content":"import seedu.address.testutil.ContactBuilder;","lastModifiedDate":"2023-10-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class AddressBookTest {","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2016-12-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2016-12-24"},{"lineNumber":34,"author":{"gitId":"jacobcuison"},"content":"        assertEquals(Collections.emptyList(), addressBook.getContactList());","lastModifiedDate":"2023-10-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.resetData(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void resetData_withValidReadOnlyAddressBook_replacesData() {","lastModifiedDate":"2016-12-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        AddressBook newData \u003d getTypicalAddressBook();","lastModifiedDate":"2017-07-19"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        addressBook.resetData(newData);","lastModifiedDate":"2016-12-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertEquals(newData, addressBook);","lastModifiedDate":"2016-12-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":50,"author":{"gitId":"jacobcuison"},"content":"    public void resetData_withDuplicateContacts_throwsDuplicateContactException() {","lastModifiedDate":"2023-10-03"},{"lineNumber":51,"author":{"gitId":"jacobcuison"},"content":"        // Two contacts with the same identity fields","lastModifiedDate":"2023-10-03"},{"lineNumber":52,"author":{"gitId":"jacobcuison"},"content":"        Contact editedAlice \u003d new ContactBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2023-10-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-04-19"},{"lineNumber":54,"author":{"gitId":"jacobcuison"},"content":"        List\u003cContact\u003e newContacts \u003d Arrays.asList(ALICE, editedAlice);","lastModifiedDate":"2023-10-03"},{"lineNumber":55,"author":{"gitId":"jacobcuison"},"content":"        AddressBookStub newData \u003d new AddressBookStub(newContacts);","lastModifiedDate":"2023-10-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":57,"author":{"gitId":"jacobcuison"},"content":"        assertThrows(DuplicateContactException.class, () -\u003e addressBook.resetData(newData));","lastModifiedDate":"2023-10-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":61,"author":{"gitId":"jacobcuison"},"content":"    public void hasContact_nullContact_throwsNullPointerException() {","lastModifiedDate":"2023-10-03"},{"lineNumber":62,"author":{"gitId":"jacobcuison"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.hasContact(null));","lastModifiedDate":"2023-10-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"jacobcuison"},"content":"    public void hasContact_contactNotInAddressBook_returnsFalse() {","lastModifiedDate":"2023-10-03"},{"lineNumber":67,"author":{"gitId":"jacobcuison"},"content":"        assertFalse(addressBook.hasContact(ALICE));","lastModifiedDate":"2023-10-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":71,"author":{"gitId":"jacobcuison"},"content":"    public void hasContact_contactInAddressBook_returnsTrue() {","lastModifiedDate":"2023-10-03"},{"lineNumber":72,"author":{"gitId":"jacobcuison"},"content":"        addressBook.addContact(ALICE);","lastModifiedDate":"2023-10-03"},{"lineNumber":73,"author":{"gitId":"jacobcuison"},"content":"        assertTrue(addressBook.hasContact(ALICE));","lastModifiedDate":"2023-10-03"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":77,"author":{"gitId":"jacobcuison"},"content":"    public void hasContact_contactWithSameIdentityFieldsInAddressBook_returnsTrue() {","lastModifiedDate":"2023-10-03"},{"lineNumber":78,"author":{"gitId":"jacobcuison"},"content":"        addressBook.addContact(ALICE);","lastModifiedDate":"2023-10-03"},{"lineNumber":79,"author":{"gitId":"jacobcuison"},"content":"        Contact editedAlice \u003d new ContactBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2023-10-03"},{"lineNumber":80,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"jacobcuison"},"content":"        assertTrue(addressBook.hasContact(editedAlice));","lastModifiedDate":"2023-10-03"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":85,"author":{"gitId":"jacobcuison"},"content":"    public void getContactList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2023-10-03"},{"lineNumber":86,"author":{"gitId":"jacobcuison"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e addressBook.getContactList().remove(0));","lastModifiedDate":"2023-10-03"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":91,"author":{"gitId":"jonyeokj"},"content":"        String expected \u003d new ToStringBuilder(addressBook)","lastModifiedDate":"2023-10-12"},{"lineNumber":92,"author":{"gitId":"jonyeokj"},"content":"                 .add(\"contacts\", addressBook.getContactList())","lastModifiedDate":"2023-10-12"},{"lineNumber":93,"author":{"gitId":"jonyeokj"},"content":"                 .add(\"meetings\", addressBook.getMeetingList())","lastModifiedDate":"2023-10-12"},{"lineNumber":94,"author":{"gitId":"jonyeokj"},"content":"                 .toString();","lastModifiedDate":"2023-10-12"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertEquals(expected, addressBook.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":98,"author":{"gitId":"chiayunrong"},"content":"    @Test","lastModifiedDate":"2023-10-03"},{"lineNumber":99,"author":{"gitId":"chiayunrong"},"content":"    public void hasMeeting_meetingInNotenote_returnsTrue() {","lastModifiedDate":"2023-10-03"},{"lineNumber":100,"author":{"gitId":"jonyeokj"},"content":"        addressBook.addMeeting(CS2103);","lastModifiedDate":"2023-10-12"},{"lineNumber":101,"author":{"gitId":"jonyeokj"},"content":"        assertTrue(addressBook.hasMeeting(CS2103));","lastModifiedDate":"2023-10-12"},{"lineNumber":102,"author":{"gitId":"chiayunrong"},"content":"    }","lastModifiedDate":"2023-10-03"},{"lineNumber":103,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":104,"author":{"gitId":"chiayunrong"},"content":"    @Test","lastModifiedDate":"2023-10-03"},{"lineNumber":105,"author":{"gitId":"chiayunrong"},"content":"    public void hasMeeting_meetingNotInNotenote_returnsFalse() {","lastModifiedDate":"2023-10-03"},{"lineNumber":106,"author":{"gitId":"jonyeokj"},"content":"        assertFalse(addressBook.hasMeeting(CS2103));","lastModifiedDate":"2023-10-12"},{"lineNumber":107,"author":{"gitId":"chiayunrong"},"content":"    }","lastModifiedDate":"2023-10-03"},{"lineNumber":108,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-24"},{"lineNumber":110,"author":{"gitId":"jacobcuison"},"content":"     * A stub ReadOnlyAddressBook whose contacts list can violate interface constraints.","lastModifiedDate":"2023-10-03"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    private static class AddressBookStub implements ReadOnlyAddressBook {","lastModifiedDate":"2016-12-24"},{"lineNumber":113,"author":{"gitId":"jacobcuison"},"content":"        private final ObservableList\u003cContact\u003e contacts \u003d FXCollections.observableArrayList();","lastModifiedDate":"2023-10-03"},{"lineNumber":114,"author":{"gitId":"jonyeokj"},"content":"        private final ObservableList\u003cMeeting\u003e meetings \u003d FXCollections.observableArrayList();","lastModifiedDate":"2023-10-11"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":116,"author":{"gitId":"jacobcuison"},"content":"        AddressBookStub(Collection\u003cContact\u003e contacts) {","lastModifiedDate":"2023-10-03"},{"lineNumber":117,"author":{"gitId":"jacobcuison"},"content":"            this.contacts.setAll(contacts);","lastModifiedDate":"2023-10-03"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-12-24"},{"lineNumber":121,"author":{"gitId":"jacobcuison"},"content":"        public ObservableList\u003cContact\u003e getContactList() {","lastModifiedDate":"2023-10-03"},{"lineNumber":122,"author":{"gitId":"jacobcuison"},"content":"            return contacts;","lastModifiedDate":"2023-10-03"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2023-10-11"},{"lineNumber":126,"author":{"gitId":"jonyeokj"},"content":"        public ObservableList\u003cMeeting\u003e getMeetingList() {","lastModifiedDate":"2023-10-11"},{"lineNumber":127,"author":{"gitId":"jonyeokj"},"content":"            return meetings;","lastModifiedDate":"2023-10-11"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-11"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-24"}],"authorContributionMap":{"jonyeokj":15,"jacobcuison":29,"chiayunrong":8,"-":79}},{"path":"src/test/java/seedu/address/model/ModelManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2017-05-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"jacobcuison"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_CONTACTS;","lastModifiedDate":"2023-10-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"jonyeokj"},"content":"import static seedu.address.testutil.TypicalAddressBook.ALICE;","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"jonyeokj"},"content":"import static seedu.address.testutil.TypicalAddressBook.BENSON;","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"jacobcuison"},"content":"import seedu.address.model.contact.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-10-03"},{"lineNumber":19,"author":{"gitId":"chiayunrong"},"content":"import seedu.address.model.meeting.Meeting;","lastModifiedDate":"2023-10-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.testutil.AddressBookBuilder;","lastModifiedDate":"2017-05-31"},{"lineNumber":21,"author":{"gitId":"chiayunrong"},"content":"import seedu.address.testutil.MeetingBuilder;","lastModifiedDate":"2023-10-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class ModelManagerTest {","lastModifiedDate":"2017-05-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2018-08-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertEquals(new GuiSettings(), modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertEquals(new AddressBook(), new AddressBook(modelManager.getAddressBook()));","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void setUserPrefs_nullUserPrefs_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void setUserPrefs_validUserPrefs_copiesUserPrefs() {","lastModifiedDate":"2018-12-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"address/book/file/path\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1, 2, 3, 4));","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        modelManager.setUserPrefs(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertEquals(userPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // Modifying userPrefs should not modify modelManager\u0027s userPrefs","lastModifiedDate":"2018-12-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        UserPrefs oldUserPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"new/address/book/file/path\"));","lastModifiedDate":"2018-12-06"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertEquals(oldUserPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setGuiSettings(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void setGuiSettings_validGuiSettings_setsGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(1, 2, 3, 4);","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        modelManager.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertEquals(guiSettings, modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setAddressBookFilePath(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_validPath_setsAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        Path path \u003d Paths.get(\"address/book/file/path\");","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        modelManager.setAddressBookFilePath(path);","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertEquals(path, modelManager.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":78,"author":{"gitId":"jacobcuison"},"content":"    public void hasContact_nullContact_throwsNullPointerException() {","lastModifiedDate":"2023-10-03"},{"lineNumber":79,"author":{"gitId":"jacobcuison"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasContact(null));","lastModifiedDate":"2023-10-03"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":83,"author":{"gitId":"jacobcuison"},"content":"    public void hasContact_contactNotInAddressBook_returnsFalse() {","lastModifiedDate":"2023-10-03"},{"lineNumber":84,"author":{"gitId":"jacobcuison"},"content":"        assertFalse(modelManager.hasContact(ALICE));","lastModifiedDate":"2023-10-03"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":88,"author":{"gitId":"jacobcuison"},"content":"    public void hasContact_contactInAddressBook_returnsTrue() {","lastModifiedDate":"2023-10-03"},{"lineNumber":89,"author":{"gitId":"jacobcuison"},"content":"        modelManager.addContact(ALICE);","lastModifiedDate":"2023-10-03"},{"lineNumber":90,"author":{"gitId":"jacobcuison"},"content":"        assertTrue(modelManager.hasContact(ALICE));","lastModifiedDate":"2023-10-03"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":94,"author":{"gitId":"jacobcuison"},"content":"    public void getFilteredContactList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2023-10-03"},{"lineNumber":95,"author":{"gitId":"jacobcuison"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredContactList().remove(0));","lastModifiedDate":"2023-10-03"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":98,"author":{"gitId":"chiayunrong"},"content":"    @Test","lastModifiedDate":"2023-10-03"},{"lineNumber":99,"author":{"gitId":"chiayunrong"},"content":"    public void hasMeeting_personInNotenote_returnsTrue() {","lastModifiedDate":"2023-10-03"},{"lineNumber":100,"author":{"gitId":"chiayunrong"},"content":"        Meeting meeting \u003d new MeetingBuilder().build();","lastModifiedDate":"2023-10-03"},{"lineNumber":101,"author":{"gitId":"chiayunrong"},"content":"        modelManager.addMeeting(meeting);","lastModifiedDate":"2023-10-03"},{"lineNumber":102,"author":{"gitId":"chiayunrong"},"content":"        assertTrue(modelManager.hasMeeting(meeting));","lastModifiedDate":"2023-10-03"},{"lineNumber":103,"author":{"gitId":"chiayunrong"},"content":"    }","lastModifiedDate":"2023-10-03"},{"lineNumber":104,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":105,"author":{"gitId":"chiayunrong"},"content":"    @Test","lastModifiedDate":"2023-10-03"},{"lineNumber":106,"author":{"gitId":"chiayunrong"},"content":"    public void hasMeeting_personNotInNotenote_returnsFalse() {","lastModifiedDate":"2023-10-03"},{"lineNumber":107,"author":{"gitId":"chiayunrong"},"content":"        Meeting meeting \u003d new MeetingBuilder().build();","lastModifiedDate":"2023-10-03"},{"lineNumber":108,"author":{"gitId":"chiayunrong"},"content":"        assertFalse(modelManager.hasMeeting(meeting));","lastModifiedDate":"2023-10-03"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-03"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-31"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":113,"author":{"gitId":"jacobcuison"},"content":"        AddressBook addressBook \u003d new AddressBookBuilder().withContact(ALICE).withContact(BENSON).build();","lastModifiedDate":"2023-10-03"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        AddressBook differentAddressBook \u003d new AddressBook();","lastModifiedDate":"2017-05-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        modelManager \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2018-08-06"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        ModelManager modelManagerCopy \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2017-05-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManagerCopy));","lastModifiedDate":"2017-05-31"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManager));","lastModifiedDate":"2017-05-31"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(null));","lastModifiedDate":"2017-05-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(5));","lastModifiedDate":"2017-05-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        // different addressBook -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(differentAddressBook, userPrefs)));","lastModifiedDate":"2017-05-31"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        // different filteredList -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        String[] keywords \u003d ALICE.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-19"},{"lineNumber":136,"author":{"gitId":"jacobcuison"},"content":"        modelManager.updateFilteredContactList(new NameContainsKeywordsPredicate(Arrays.asList(keywords)));","lastModifiedDate":"2023-10-03"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, userPrefs)));","lastModifiedDate":"2017-05-31"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        // resets modelManager to initial state for upcoming tests","lastModifiedDate":"2017-08-05"},{"lineNumber":140,"author":{"gitId":"jacobcuison"},"content":"        modelManager.updateFilteredContactList(PREDICATE_SHOW_ALL_CONTACTS);","lastModifiedDate":"2023-10-03"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        // different userPrefs -\u003e returns false","lastModifiedDate":"2018-11-27"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        UserPrefs differentUserPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        differentUserPrefs.setAddressBookFilePath(Paths.get(\"differentFilePath\"));","lastModifiedDate":"2018-08-09"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, differentUserPrefs)));","lastModifiedDate":"2018-11-27"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":147,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-31"}],"authorContributionMap":{"jonyeokj":2,"jacobcuison":14,"chiayunrong":13,"-":118}},{"path":"src/test/java/seedu/address/model/contact/AddressTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jacobcuison"},"content":"package seedu.address.model.contact;","lastModifiedDate":"2023-10-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class AddressTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Address(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidAddress_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidAddress \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Address(invalidAddress));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidAddress() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null address","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Address.isValidAddress(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // invalid addresses","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Address.isValidAddress(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Address.isValidAddress(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // valid addresses","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertTrue(Address.isValidAddress(\"Blk 456, Den Road, #01-355\"));","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertTrue(Address.isValidAddress(\"-\")); // one character","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertTrue(Address.isValidAddress(\"Leng Inc; 1234 Market St; San Francisco CA 2349879; USA\")); // long address","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2019-02-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        Address address \u003d new Address(\"Valid Address\");","lastModifiedDate":"2019-02-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertTrue(address.equals(new Address(\"Valid Address\")));","lastModifiedDate":"2019-02-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(address.equals(address));","lastModifiedDate":"2019-02-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(address.equals(null));","lastModifiedDate":"2019-02-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertFalse(address.equals(5.0f));","lastModifiedDate":"2019-02-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertFalse(address.equals(new Address(\"Other Valid Address\")));","lastModifiedDate":"2019-02-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"jacobcuison":1,"-":55}},{"path":"src/test/java/seedu/address/model/contact/ContactTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jacobcuison"},"content":"package seedu.address.model.contact;","lastModifiedDate":"2023-10-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2018-04-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":12,"author":{"gitId":"jonyeokj"},"content":"import static seedu.address.testutil.TypicalAddressBook.ALICE;","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"jonyeokj"},"content":"import static seedu.address.testutil.TypicalAddressBook.BOB;","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":17,"author":{"gitId":"jacobcuison"},"content":"import seedu.address.testutil.ContactBuilder;","lastModifiedDate":"2023-10-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":19,"author":{"gitId":"jacobcuison"},"content":"public class ContactTest {","lastModifiedDate":"2023-10-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":23,"author":{"gitId":"jacobcuison"},"content":"        Contact contact \u003d new ContactBuilder().build();","lastModifiedDate":"2023-10-03"},{"lineNumber":24,"author":{"gitId":"jacobcuison"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e contact.getTags().remove(0));","lastModifiedDate":"2023-10-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":28,"author":{"gitId":"jacobcuison"},"content":"    public void isSameContact() {","lastModifiedDate":"2023-10-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":30,"author":{"gitId":"jacobcuison"},"content":"        assertTrue(ALICE.isSameContact(ALICE));","lastModifiedDate":"2023-10-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":33,"author":{"gitId":"jacobcuison"},"content":"        assertFalse(ALICE.isSameContact(null));","lastModifiedDate":"2023-10-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // same name, all other attributes different -\u003e returns true","lastModifiedDate":"2020-12-18"},{"lineNumber":36,"author":{"gitId":"jacobcuison"},"content":"        Contact editedAlice \u003d new ContactBuilder(ALICE).withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2023-10-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"                .withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2020-12-18"},{"lineNumber":38,"author":{"gitId":"jacobcuison"},"content":"        assertTrue(ALICE.isSameContact(editedAlice));","lastModifiedDate":"2023-10-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // different name, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":41,"author":{"gitId":"jacobcuison"},"content":"        editedAlice \u003d new ContactBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2023-10-03"},{"lineNumber":42,"author":{"gitId":"jacobcuison"},"content":"        assertFalse(ALICE.isSameContact(editedAlice));","lastModifiedDate":"2023-10-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // name differs in case, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":45,"author":{"gitId":"jacobcuison"},"content":"        Contact editedBob \u003d new ContactBuilder(BOB).withName(VALID_NAME_BOB.toLowerCase()).build();","lastModifiedDate":"2023-10-03"},{"lineNumber":46,"author":{"gitId":"jacobcuison"},"content":"        assertFalse(BOB.isSameContact(editedBob));","lastModifiedDate":"2023-10-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // name has trailing spaces, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        String nameWithTrailingSpaces \u003d VALID_NAME_BOB + \" \";","lastModifiedDate":"2020-12-18"},{"lineNumber":50,"author":{"gitId":"jacobcuison"},"content":"        editedBob \u003d new ContactBuilder(BOB).withName(nameWithTrailingSpaces).build();","lastModifiedDate":"2023-10-03"},{"lineNumber":51,"author":{"gitId":"jacobcuison"},"content":"        assertFalse(BOB.isSameContact(editedBob));","lastModifiedDate":"2023-10-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-04-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":57,"author":{"gitId":"jacobcuison"},"content":"        Contact aliceCopy \u003d new ContactBuilder(ALICE).build();","lastModifiedDate":"2023-10-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(aliceCopy));","lastModifiedDate":"2018-04-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(5));","lastModifiedDate":"2018-04-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":69,"author":{"gitId":"jacobcuison"},"content":"        // different contact -\u003e returns false","lastModifiedDate":"2023-10-03"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(BOB));","lastModifiedDate":"2018-04-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":73,"author":{"gitId":"jacobcuison"},"content":"        Contact editedAlice \u003d new ContactBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2023-10-03"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"jacobcuison"},"content":"        editedAlice \u003d new ContactBuilder(ALICE).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2023-10-03"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"jacobcuison"},"content":"        editedAlice \u003d new ContactBuilder(ALICE).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2023-10-03"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":85,"author":{"gitId":"jacobcuison"},"content":"        editedAlice \u003d new ContactBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2023-10-03"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2018-04-18"},{"lineNumber":89,"author":{"gitId":"jacobcuison"},"content":"        editedAlice \u003d new ContactBuilder(ALICE).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2023-10-03"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":95,"author":{"gitId":"jacobcuison"},"content":"        String expected \u003d Contact.class.getCanonicalName() + \"{name\u003d\" + ALICE.getName() + \", phone\u003d\" + ALICE.getPhone()","lastModifiedDate":"2023-10-03"},{"lineNumber":96,"author":{"gitId":"jacobcuison"},"content":"                + \", email\u003d\" + ALICE.getEmail() + \", address\u003d\" + ALICE.getAddress() + \", tags\u003d\" + ALICE.getTags()","lastModifiedDate":"2023-10-13"},{"lineNumber":97,"author":{"gitId":"jacobcuison"},"content":"                + \", notes\u003d\" + ALICE.getNotes() + \"}\";","lastModifiedDate":"2023-10-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertEquals(expected, ALICE.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"jonyeokj":2,"jacobcuison":26,"-":72}},{"path":"src/test/java/seedu/address/model/contact/EmailTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jacobcuison"},"content":"package seedu.address.model.contact;","lastModifiedDate":"2023-10-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class EmailTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Email(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidEmail_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidEmail \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Email(invalidEmail));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidEmail() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null email","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Email.isValidEmail(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // blank email","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // missing parts","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"@example.com\")); // missing local part","lastModifiedDate":"2017-04-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjackexample.com\")); // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-04-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@\")); // missing domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // invalid parts","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@-\")); // invalid domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@exam_ple.com\")); // underscore in domain name","lastModifiedDate":"2018-02-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter jack@example.com\")); // spaces in local part","lastModifiedDate":"2017-04-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@exam ple.com\")); // spaces in domain name","lastModifiedDate":"2017-04-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\" peterjack@example.com\")); // leading space","lastModifiedDate":"2018-02-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com \")); // trailing space","lastModifiedDate":"2018-02-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@@example.com\")); // double \u0027@\u0027 symbol","lastModifiedDate":"2017-04-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter@jack@example.com\")); // \u0027@\u0027 symbol in local part","lastModifiedDate":"2017-04-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"-peterjack@example.com\")); // local part starts with a hyphen","lastModifiedDate":"2021-07-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack-@example.com\")); // local part ends with a hyphen","lastModifiedDate":"2021-07-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter..jack@example.com\")); // local part has two consecutive periods","lastModifiedDate":"2021-07-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example@com\")); // \u0027@\u0027 symbol in domain name","lastModifiedDate":"2017-04-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@.example.com\")); // domain name starts with a period","lastModifiedDate":"2018-02-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com.\")); // domain name ends with a period","lastModifiedDate":"2018-02-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@-example.com\")); // domain name starts with a hyphen","lastModifiedDate":"2018-02-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com-\")); // domain name ends with a hyphen","lastModifiedDate":"2018-02-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.c\")); // top level domain has less than two chars","lastModifiedDate":"2021-07-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // valid email","lastModifiedDate":"2017-01-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack_1190@example.com\")); // underscore in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack.1190@example.com\")); // period in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack+1190@example.com\")); // \u0027+\u0027 symbol in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack-1190@example.com\")); // hyphen in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"a@bc\")); // minimal","lastModifiedDate":"2018-02-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"test@localhost\")); // alphabets only","lastModifiedDate":"2017-01-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"123@145\")); // numeric local part and domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"a1+be.d@example1.com\")); // mixture of alphanumeric and special characters","lastModifiedDate":"2021-07-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"peter_jack@very-very-very-long-example.com\")); // long domain name","lastModifiedDate":"2018-02-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"if.you.dream.it_you.can.do.it@example.com\")); // long local part","lastModifiedDate":"2017-04-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"e1234567@u.nus.edu\")); // more than one period in domain","lastModifiedDate":"2021-07-20"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2019-02-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        Email email \u003d new Email(\"valid@email\");","lastModifiedDate":"2019-02-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertTrue(email.equals(new Email(\"valid@email\")));","lastModifiedDate":"2019-02-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertTrue(email.equals(email));","lastModifiedDate":"2019-02-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertFalse(email.equals(null));","lastModifiedDate":"2019-02-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertFalse(email.equals(5.0f));","lastModifiedDate":"2019-02-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertFalse(email.equals(new Email(\"other.valid@email\")));","lastModifiedDate":"2019-02-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"jacobcuison":1,"-":87}},{"path":"src/test/java/seedu/address/model/contact/NameContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jacobcuison"},"content":"package seedu.address.model.contact;","lastModifiedDate":"2023-10-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"jacobcuison"},"content":"import seedu.address.testutil.ContactBuilder;","lastModifiedDate":"2023-10-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class NameContainsKeywordsPredicateTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d new NameContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicateCopy \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":38,"author":{"gitId":"chiayunrong"},"content":"        // different predicate -\u003e returns false","lastModifiedDate":"2023-10-17"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void test_nameContainsKeywords_returnsTrue() {","lastModifiedDate":"2017-08-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // One keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.singletonList(\"Alice\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":46,"author":{"gitId":"jacobcuison"},"content":"        assertTrue(predicate.test(new ContactBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2023-10-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // Multiple keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":50,"author":{"gitId":"jacobcuison"},"content":"        assertTrue(predicate.test(new ContactBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2023-10-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // Only one matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Bob\", \"Carol\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":54,"author":{"gitId":"jacobcuison"},"content":"        assertTrue(predicate.test(new ContactBuilder().withName(\"Alice Carol\").build()));","lastModifiedDate":"2023-10-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // Mixed-case keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"aLIce\", \"bOB\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":58,"author":{"gitId":"jacobcuison"},"content":"        assertTrue(predicate.test(new ContactBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2023-10-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void test_nameDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2017-08-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // Zero keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2017-06-12"},{"lineNumber":65,"author":{"gitId":"jacobcuison"},"content":"        assertFalse(predicate.test(new ContactBuilder().withName(\"Alice\").build()));","lastModifiedDate":"2023-10-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // Non-matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Carol\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":69,"author":{"gitId":"jacobcuison"},"content":"        assertFalse(predicate.test(new ContactBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2023-10-03"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // Keywords match phone, email and address, but does not match name","lastModifiedDate":"2017-06-12"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"12345\", \"alice@email.com\", \"Main\", \"Street\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":73,"author":{"gitId":"jacobcuison"},"content":"        assertFalse(predicate.test(new ContactBuilder().withName(\"Alice\").withPhone(\"12345\")","lastModifiedDate":"2023-10-03"},{"lineNumber":74,"author":{"gitId":"-"},"content":"                .withEmail(\"alice@email.com\").withAddress(\"Main Street\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d List.of(\"keyword1\", \"keyword2\");","lastModifiedDate":"2019-02-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(keywords);","lastModifiedDate":"2019-02-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        String expected \u003d NameContainsKeywordsPredicate.class.getCanonicalName() + \"{keywords\u003d\" + keywords + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertEquals(expected, predicate.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"jacobcuison":9,"chiayunrong":1,"-":75}},{"path":"src/test/java/seedu/address/model/contact/NameTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jacobcuison"},"content":"package seedu.address.model.contact;","lastModifiedDate":"2023-10-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class NameTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Name(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidName_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidName \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Name(invalidName));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidName() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null name","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Name.isValidName(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"peter*\")); // contains non-alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // valid name","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"peter jack\")); // alphabets only","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"12345\")); // numbers only","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"peter the 2nd\")); // alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"Capital Tan\")); // with capital letters","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"David Roger Jackson Ray Jr 2nd\")); // long names","lastModifiedDate":"2017-01-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2019-02-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        Name name \u003d new Name(\"Valid Name\");","lastModifiedDate":"2019-02-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(name.equals(new Name(\"Valid Name\")));","lastModifiedDate":"2019-02-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertTrue(name.equals(name));","lastModifiedDate":"2019-02-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(name.equals(null));","lastModifiedDate":"2019-02-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertFalse(name.equals(5.0f));","lastModifiedDate":"2019-02-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertFalse(name.equals(new Name(\"Other Valid Name\")));","lastModifiedDate":"2019-02-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"jacobcuison":1,"-":59}},{"path":"src/test/java/seedu/address/model/contact/PhoneTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jacobcuison"},"content":"package seedu.address.model.contact;","lastModifiedDate":"2023-10-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class PhoneTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Phone(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidPhone_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidPhone \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Phone(invalidPhone));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidPhone() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null phone number","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Phone.isValidPhone(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // invalid phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"91\")); // less than 3 numbers","lastModifiedDate":"2017-05-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"phone\")); // non-numeric","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"9011p041\")); // alphabets within digits","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"9312 1534\")); // spaces within digits","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // valid phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"911\")); // exactly 3 numbers","lastModifiedDate":"2017-05-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"93121534\"));","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"124293842033123\")); // long phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2019-02-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        Phone phone \u003d new Phone(\"999\");","lastModifiedDate":"2019-02-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(phone.equals(new Phone(\"999\")));","lastModifiedDate":"2019-02-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertTrue(phone.equals(phone));","lastModifiedDate":"2019-02-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(phone.equals(null));","lastModifiedDate":"2019-02-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertFalse(phone.equals(5.0f));","lastModifiedDate":"2019-02-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertFalse(phone.equals(new Phone(\"995\")));","lastModifiedDate":"2019-02-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"jacobcuison":1,"-":59}},{"path":"src/test/java/seedu/address/model/contact/UniqueContactListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jacobcuison"},"content":"package seedu.address.model.contact;","lastModifiedDate":"2023-10-03"},{"lineNumber":2,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":3,"author":{"gitId":"jacobcuison"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-03"},{"lineNumber":4,"author":{"gitId":"jacobcuison"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-03"},{"lineNumber":5,"author":{"gitId":"jacobcuison"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-03"},{"lineNumber":6,"author":{"gitId":"jacobcuison"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2023-10-03"},{"lineNumber":7,"author":{"gitId":"jacobcuison"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2023-10-03"},{"lineNumber":8,"author":{"gitId":"jacobcuison"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-03"},{"lineNumber":9,"author":{"gitId":"jonyeokj"},"content":"import static seedu.address.testutil.TypicalAddressBook.ALICE;","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"jonyeokj"},"content":"import static seedu.address.testutil.TypicalAddressBook.BOB;","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":12,"author":{"gitId":"jacobcuison"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-10-03"},{"lineNumber":13,"author":{"gitId":"jacobcuison"},"content":"import java.util.Collections;","lastModifiedDate":"2023-10-03"},{"lineNumber":14,"author":{"gitId":"jacobcuison"},"content":"import java.util.List;","lastModifiedDate":"2023-10-03"},{"lineNumber":15,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":16,"author":{"gitId":"jacobcuison"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-03"},{"lineNumber":17,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":18,"author":{"gitId":"jacobcuison"},"content":"import seedu.address.model.contact.exceptions.ContactNotFoundException;","lastModifiedDate":"2023-10-03"},{"lineNumber":19,"author":{"gitId":"jacobcuison"},"content":"import seedu.address.model.contact.exceptions.DuplicateContactException;","lastModifiedDate":"2023-10-03"},{"lineNumber":20,"author":{"gitId":"jacobcuison"},"content":"import seedu.address.testutil.ContactBuilder;","lastModifiedDate":"2023-10-03"},{"lineNumber":21,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":22,"author":{"gitId":"jacobcuison"},"content":"public class UniqueContactListTest {","lastModifiedDate":"2023-10-03"},{"lineNumber":23,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":24,"author":{"gitId":"jacobcuison"},"content":"    private final UniqueContactList uniqueContactList \u003d new UniqueContactList();","lastModifiedDate":"2023-10-03"},{"lineNumber":25,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":26,"author":{"gitId":"jacobcuison"},"content":"    @Test","lastModifiedDate":"2023-10-03"},{"lineNumber":27,"author":{"gitId":"jacobcuison"},"content":"    public void contains_nullContact_throwsNullPointerException() {","lastModifiedDate":"2023-10-03"},{"lineNumber":28,"author":{"gitId":"jacobcuison"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueContactList.contains(null));","lastModifiedDate":"2023-10-03"},{"lineNumber":29,"author":{"gitId":"jacobcuison"},"content":"    }","lastModifiedDate":"2023-10-03"},{"lineNumber":30,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":31,"author":{"gitId":"jacobcuison"},"content":"    @Test","lastModifiedDate":"2023-10-03"},{"lineNumber":32,"author":{"gitId":"jacobcuison"},"content":"    public void contains_contactNotInList_returnsFalse() {","lastModifiedDate":"2023-10-03"},{"lineNumber":33,"author":{"gitId":"jacobcuison"},"content":"        assertFalse(uniqueContactList.contains(ALICE));","lastModifiedDate":"2023-10-03"},{"lineNumber":34,"author":{"gitId":"jacobcuison"},"content":"    }","lastModifiedDate":"2023-10-03"},{"lineNumber":35,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":36,"author":{"gitId":"jacobcuison"},"content":"    @Test","lastModifiedDate":"2023-10-03"},{"lineNumber":37,"author":{"gitId":"jacobcuison"},"content":"    public void contains_contactInList_returnsTrue() {","lastModifiedDate":"2023-10-03"},{"lineNumber":38,"author":{"gitId":"jacobcuison"},"content":"        uniqueContactList.add(ALICE);","lastModifiedDate":"2023-10-03"},{"lineNumber":39,"author":{"gitId":"jacobcuison"},"content":"        assertTrue(uniqueContactList.contains(ALICE));","lastModifiedDate":"2023-10-03"},{"lineNumber":40,"author":{"gitId":"jacobcuison"},"content":"    }","lastModifiedDate":"2023-10-03"},{"lineNumber":41,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":42,"author":{"gitId":"jacobcuison"},"content":"    @Test","lastModifiedDate":"2023-10-03"},{"lineNumber":43,"author":{"gitId":"jacobcuison"},"content":"    public void contains_contactWithSameIdentityFieldsInList_returnsTrue() {","lastModifiedDate":"2023-10-03"},{"lineNumber":44,"author":{"gitId":"jacobcuison"},"content":"        uniqueContactList.add(ALICE);","lastModifiedDate":"2023-10-03"},{"lineNumber":45,"author":{"gitId":"jacobcuison"},"content":"        Contact editedAlice \u003d new ContactBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2023-10-03"},{"lineNumber":46,"author":{"gitId":"jacobcuison"},"content":"                .build();","lastModifiedDate":"2023-10-03"},{"lineNumber":47,"author":{"gitId":"jacobcuison"},"content":"        assertTrue(uniqueContactList.contains(editedAlice));","lastModifiedDate":"2023-10-03"},{"lineNumber":48,"author":{"gitId":"jacobcuison"},"content":"    }","lastModifiedDate":"2023-10-03"},{"lineNumber":49,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":50,"author":{"gitId":"jacobcuison"},"content":"    @Test","lastModifiedDate":"2023-10-03"},{"lineNumber":51,"author":{"gitId":"jacobcuison"},"content":"    public void add_nullContact_throwsNullPointerException() {","lastModifiedDate":"2023-10-03"},{"lineNumber":52,"author":{"gitId":"jacobcuison"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueContactList.add(null));","lastModifiedDate":"2023-10-03"},{"lineNumber":53,"author":{"gitId":"jacobcuison"},"content":"    }","lastModifiedDate":"2023-10-03"},{"lineNumber":54,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":55,"author":{"gitId":"jacobcuison"},"content":"    @Test","lastModifiedDate":"2023-10-03"},{"lineNumber":56,"author":{"gitId":"jacobcuison"},"content":"    public void add_duplicateContact_throwsDuplicateContactException() {","lastModifiedDate":"2023-10-03"},{"lineNumber":57,"author":{"gitId":"jacobcuison"},"content":"        uniqueContactList.add(ALICE);","lastModifiedDate":"2023-10-03"},{"lineNumber":58,"author":{"gitId":"jacobcuison"},"content":"        assertThrows(DuplicateContactException.class, () -\u003e uniqueContactList.add(ALICE));","lastModifiedDate":"2023-10-03"},{"lineNumber":59,"author":{"gitId":"jacobcuison"},"content":"    }","lastModifiedDate":"2023-10-03"},{"lineNumber":60,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":61,"author":{"gitId":"jacobcuison"},"content":"    @Test","lastModifiedDate":"2023-10-03"},{"lineNumber":62,"author":{"gitId":"jacobcuison"},"content":"    public void setContact_nullTargetContact_throwsNullPointerException() {","lastModifiedDate":"2023-10-03"},{"lineNumber":63,"author":{"gitId":"jacobcuison"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueContactList.setContact(null, ALICE));","lastModifiedDate":"2023-10-03"},{"lineNumber":64,"author":{"gitId":"jacobcuison"},"content":"    }","lastModifiedDate":"2023-10-03"},{"lineNumber":65,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":66,"author":{"gitId":"jacobcuison"},"content":"    @Test","lastModifiedDate":"2023-10-03"},{"lineNumber":67,"author":{"gitId":"jacobcuison"},"content":"    public void setContact_nullEditedContact_throwsNullPointerException() {","lastModifiedDate":"2023-10-03"},{"lineNumber":68,"author":{"gitId":"jacobcuison"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueContactList.setContact(ALICE, null));","lastModifiedDate":"2023-10-03"},{"lineNumber":69,"author":{"gitId":"jacobcuison"},"content":"    }","lastModifiedDate":"2023-10-03"},{"lineNumber":70,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":71,"author":{"gitId":"jacobcuison"},"content":"    @Test","lastModifiedDate":"2023-10-03"},{"lineNumber":72,"author":{"gitId":"jacobcuison"},"content":"    public void setContact_targetContactNotInList_throwsContactNotFoundException() {","lastModifiedDate":"2023-10-03"},{"lineNumber":73,"author":{"gitId":"jacobcuison"},"content":"        assertThrows(ContactNotFoundException.class, () -\u003e uniqueContactList.setContact(ALICE, ALICE));","lastModifiedDate":"2023-10-03"},{"lineNumber":74,"author":{"gitId":"jacobcuison"},"content":"    }","lastModifiedDate":"2023-10-03"},{"lineNumber":75,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":76,"author":{"gitId":"jacobcuison"},"content":"    @Test","lastModifiedDate":"2023-10-03"},{"lineNumber":77,"author":{"gitId":"jacobcuison"},"content":"    public void setContact_editedContactIsSameContact_success() {","lastModifiedDate":"2023-10-03"},{"lineNumber":78,"author":{"gitId":"jacobcuison"},"content":"        uniqueContactList.add(ALICE);","lastModifiedDate":"2023-10-03"},{"lineNumber":79,"author":{"gitId":"jacobcuison"},"content":"        uniqueContactList.setContact(ALICE, ALICE);","lastModifiedDate":"2023-10-03"},{"lineNumber":80,"author":{"gitId":"jacobcuison"},"content":"        UniqueContactList expectedUniqueContactList \u003d new UniqueContactList();","lastModifiedDate":"2023-10-03"},{"lineNumber":81,"author":{"gitId":"jacobcuison"},"content":"        expectedUniqueContactList.add(ALICE);","lastModifiedDate":"2023-10-03"},{"lineNumber":82,"author":{"gitId":"jacobcuison"},"content":"        assertEquals(expectedUniqueContactList, uniqueContactList);","lastModifiedDate":"2023-10-03"},{"lineNumber":83,"author":{"gitId":"jacobcuison"},"content":"    }","lastModifiedDate":"2023-10-03"},{"lineNumber":84,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":85,"author":{"gitId":"jacobcuison"},"content":"    @Test","lastModifiedDate":"2023-10-03"},{"lineNumber":86,"author":{"gitId":"jacobcuison"},"content":"    public void setContact_editedContactHasSameIdentity_success() {","lastModifiedDate":"2023-10-03"},{"lineNumber":87,"author":{"gitId":"jacobcuison"},"content":"        uniqueContactList.add(ALICE);","lastModifiedDate":"2023-10-03"},{"lineNumber":88,"author":{"gitId":"jacobcuison"},"content":"        Contact editedAlice \u003d new ContactBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2023-10-03"},{"lineNumber":89,"author":{"gitId":"jacobcuison"},"content":"                .build();","lastModifiedDate":"2023-10-03"},{"lineNumber":90,"author":{"gitId":"jacobcuison"},"content":"        uniqueContactList.setContact(ALICE, editedAlice);","lastModifiedDate":"2023-10-03"},{"lineNumber":91,"author":{"gitId":"jacobcuison"},"content":"        UniqueContactList expectedUniqueContactList \u003d new UniqueContactList();","lastModifiedDate":"2023-10-03"},{"lineNumber":92,"author":{"gitId":"jacobcuison"},"content":"        expectedUniqueContactList.add(editedAlice);","lastModifiedDate":"2023-10-03"},{"lineNumber":93,"author":{"gitId":"jacobcuison"},"content":"        assertEquals(expectedUniqueContactList, uniqueContactList);","lastModifiedDate":"2023-10-03"},{"lineNumber":94,"author":{"gitId":"jacobcuison"},"content":"    }","lastModifiedDate":"2023-10-03"},{"lineNumber":95,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":96,"author":{"gitId":"jacobcuison"},"content":"    @Test","lastModifiedDate":"2023-10-03"},{"lineNumber":97,"author":{"gitId":"jacobcuison"},"content":"    public void setContact_editedContactHasDifferentIdentity_success() {","lastModifiedDate":"2023-10-03"},{"lineNumber":98,"author":{"gitId":"jacobcuison"},"content":"        uniqueContactList.add(ALICE);","lastModifiedDate":"2023-10-03"},{"lineNumber":99,"author":{"gitId":"jacobcuison"},"content":"        uniqueContactList.setContact(ALICE, BOB);","lastModifiedDate":"2023-10-03"},{"lineNumber":100,"author":{"gitId":"jacobcuison"},"content":"        UniqueContactList expectedUniqueContactList \u003d new UniqueContactList();","lastModifiedDate":"2023-10-03"},{"lineNumber":101,"author":{"gitId":"jacobcuison"},"content":"        expectedUniqueContactList.add(BOB);","lastModifiedDate":"2023-10-03"},{"lineNumber":102,"author":{"gitId":"jacobcuison"},"content":"        assertEquals(expectedUniqueContactList, uniqueContactList);","lastModifiedDate":"2023-10-03"},{"lineNumber":103,"author":{"gitId":"jacobcuison"},"content":"    }","lastModifiedDate":"2023-10-03"},{"lineNumber":104,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":105,"author":{"gitId":"jacobcuison"},"content":"    @Test","lastModifiedDate":"2023-10-03"},{"lineNumber":106,"author":{"gitId":"jacobcuison"},"content":"    public void setContact_editedContactHasNonUniqueIdentity_throwsDuplicateContactException() {","lastModifiedDate":"2023-10-03"},{"lineNumber":107,"author":{"gitId":"jacobcuison"},"content":"        uniqueContactList.add(ALICE);","lastModifiedDate":"2023-10-03"},{"lineNumber":108,"author":{"gitId":"jacobcuison"},"content":"        uniqueContactList.add(BOB);","lastModifiedDate":"2023-10-03"},{"lineNumber":109,"author":{"gitId":"jacobcuison"},"content":"        assertThrows(DuplicateContactException.class, () -\u003e uniqueContactList.setContact(ALICE, BOB));","lastModifiedDate":"2023-10-03"},{"lineNumber":110,"author":{"gitId":"jacobcuison"},"content":"    }","lastModifiedDate":"2023-10-03"},{"lineNumber":111,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":112,"author":{"gitId":"jacobcuison"},"content":"    @Test","lastModifiedDate":"2023-10-03"},{"lineNumber":113,"author":{"gitId":"jacobcuison"},"content":"    public void remove_nullContact_throwsNullPointerException() {","lastModifiedDate":"2023-10-03"},{"lineNumber":114,"author":{"gitId":"jacobcuison"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueContactList.remove(null));","lastModifiedDate":"2023-10-03"},{"lineNumber":115,"author":{"gitId":"jacobcuison"},"content":"    }","lastModifiedDate":"2023-10-03"},{"lineNumber":116,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":117,"author":{"gitId":"jacobcuison"},"content":"    @Test","lastModifiedDate":"2023-10-03"},{"lineNumber":118,"author":{"gitId":"jacobcuison"},"content":"    public void remove_contactDoesNotExist_throwsContactNotFoundException() {","lastModifiedDate":"2023-10-03"},{"lineNumber":119,"author":{"gitId":"jacobcuison"},"content":"        assertThrows(ContactNotFoundException.class, () -\u003e uniqueContactList.remove(ALICE));","lastModifiedDate":"2023-10-03"},{"lineNumber":120,"author":{"gitId":"jacobcuison"},"content":"    }","lastModifiedDate":"2023-10-03"},{"lineNumber":121,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":122,"author":{"gitId":"jacobcuison"},"content":"    @Test","lastModifiedDate":"2023-10-03"},{"lineNumber":123,"author":{"gitId":"jacobcuison"},"content":"    public void remove_existingContact_removesContact() {","lastModifiedDate":"2023-10-03"},{"lineNumber":124,"author":{"gitId":"jacobcuison"},"content":"        uniqueContactList.add(ALICE);","lastModifiedDate":"2023-10-03"},{"lineNumber":125,"author":{"gitId":"jacobcuison"},"content":"        uniqueContactList.remove(ALICE);","lastModifiedDate":"2023-10-03"},{"lineNumber":126,"author":{"gitId":"jacobcuison"},"content":"        UniqueContactList expectedUniqueContactList \u003d new UniqueContactList();","lastModifiedDate":"2023-10-03"},{"lineNumber":127,"author":{"gitId":"jacobcuison"},"content":"        assertEquals(expectedUniqueContactList, uniqueContactList);","lastModifiedDate":"2023-10-03"},{"lineNumber":128,"author":{"gitId":"jacobcuison"},"content":"    }","lastModifiedDate":"2023-10-03"},{"lineNumber":129,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":130,"author":{"gitId":"jacobcuison"},"content":"    @Test","lastModifiedDate":"2023-10-03"},{"lineNumber":131,"author":{"gitId":"jacobcuison"},"content":"    public void setContacts_nullUniqueContactList_throwsNullPointerException() {","lastModifiedDate":"2023-10-03"},{"lineNumber":132,"author":{"gitId":"jacobcuison"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueContactList.setContacts((UniqueContactList) null));","lastModifiedDate":"2023-10-03"},{"lineNumber":133,"author":{"gitId":"jacobcuison"},"content":"    }","lastModifiedDate":"2023-10-03"},{"lineNumber":134,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":135,"author":{"gitId":"jacobcuison"},"content":"    @Test","lastModifiedDate":"2023-10-03"},{"lineNumber":136,"author":{"gitId":"jacobcuison"},"content":"    public void setContacts_uniqueContactList_replacesOwnListWithProvidedUniqueContactList() {","lastModifiedDate":"2023-10-03"},{"lineNumber":137,"author":{"gitId":"jacobcuison"},"content":"        uniqueContactList.add(ALICE);","lastModifiedDate":"2023-10-03"},{"lineNumber":138,"author":{"gitId":"jacobcuison"},"content":"        UniqueContactList expectedUniqueContactList \u003d new UniqueContactList();","lastModifiedDate":"2023-10-03"},{"lineNumber":139,"author":{"gitId":"jacobcuison"},"content":"        expectedUniqueContactList.add(BOB);","lastModifiedDate":"2023-10-03"},{"lineNumber":140,"author":{"gitId":"jacobcuison"},"content":"        uniqueContactList.setContacts(expectedUniqueContactList);","lastModifiedDate":"2023-10-03"},{"lineNumber":141,"author":{"gitId":"jacobcuison"},"content":"        assertEquals(expectedUniqueContactList, uniqueContactList);","lastModifiedDate":"2023-10-03"},{"lineNumber":142,"author":{"gitId":"jacobcuison"},"content":"    }","lastModifiedDate":"2023-10-03"},{"lineNumber":143,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":144,"author":{"gitId":"jacobcuison"},"content":"    @Test","lastModifiedDate":"2023-10-03"},{"lineNumber":145,"author":{"gitId":"jacobcuison"},"content":"    public void setContacts_nullList_throwsNullPointerException() {","lastModifiedDate":"2023-10-03"},{"lineNumber":146,"author":{"gitId":"jacobcuison"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueContactList.setContacts((List\u003cContact\u003e) null));","lastModifiedDate":"2023-10-03"},{"lineNumber":147,"author":{"gitId":"jacobcuison"},"content":"    }","lastModifiedDate":"2023-10-03"},{"lineNumber":148,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":149,"author":{"gitId":"jacobcuison"},"content":"    @Test","lastModifiedDate":"2023-10-03"},{"lineNumber":150,"author":{"gitId":"jacobcuison"},"content":"    public void setContacts_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2023-10-03"},{"lineNumber":151,"author":{"gitId":"jacobcuison"},"content":"        uniqueContactList.add(ALICE);","lastModifiedDate":"2023-10-03"},{"lineNumber":152,"author":{"gitId":"jacobcuison"},"content":"        List\u003cContact\u003e contactList \u003d Collections.singletonList(BOB);","lastModifiedDate":"2023-10-03"},{"lineNumber":153,"author":{"gitId":"jacobcuison"},"content":"        uniqueContactList.setContacts(contactList);","lastModifiedDate":"2023-10-03"},{"lineNumber":154,"author":{"gitId":"jacobcuison"},"content":"        UniqueContactList expectedUniqueContactList \u003d new UniqueContactList();","lastModifiedDate":"2023-10-03"},{"lineNumber":155,"author":{"gitId":"jacobcuison"},"content":"        expectedUniqueContactList.add(BOB);","lastModifiedDate":"2023-10-03"},{"lineNumber":156,"author":{"gitId":"jacobcuison"},"content":"        assertEquals(expectedUniqueContactList, uniqueContactList);","lastModifiedDate":"2023-10-03"},{"lineNumber":157,"author":{"gitId":"jacobcuison"},"content":"    }","lastModifiedDate":"2023-10-03"},{"lineNumber":158,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":159,"author":{"gitId":"jacobcuison"},"content":"    @Test","lastModifiedDate":"2023-10-03"},{"lineNumber":160,"author":{"gitId":"jacobcuison"},"content":"    public void setContacts_listWithDuplicateContacts_throwsDuplicateContactException() {","lastModifiedDate":"2023-10-03"},{"lineNumber":161,"author":{"gitId":"jacobcuison"},"content":"        List\u003cContact\u003e listWithDuplicateContacts \u003d Arrays.asList(ALICE, ALICE);","lastModifiedDate":"2023-10-03"},{"lineNumber":162,"author":{"gitId":"jacobcuison"},"content":"        assertThrows(DuplicateContactException.class, () -\u003e uniqueContactList.setContacts(listWithDuplicateContacts));","lastModifiedDate":"2023-10-03"},{"lineNumber":163,"author":{"gitId":"jacobcuison"},"content":"    }","lastModifiedDate":"2023-10-03"},{"lineNumber":164,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":165,"author":{"gitId":"jacobcuison"},"content":"    @Test","lastModifiedDate":"2023-10-03"},{"lineNumber":166,"author":{"gitId":"jacobcuison"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2023-10-03"},{"lineNumber":167,"author":{"gitId":"jacobcuison"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2023-10-03"},{"lineNumber":168,"author":{"gitId":"jacobcuison"},"content":"            -\u003e uniqueContactList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2023-10-03"},{"lineNumber":169,"author":{"gitId":"jacobcuison"},"content":"    }","lastModifiedDate":"2023-10-03"},{"lineNumber":170,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":171,"author":{"gitId":"jacobcuison"},"content":"    @Test","lastModifiedDate":"2023-10-03"},{"lineNumber":172,"author":{"gitId":"jacobcuison"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-03"},{"lineNumber":173,"author":{"gitId":"jacobcuison"},"content":"        assertEquals(uniqueContactList.asUnmodifiableObservableList().toString(), uniqueContactList.toString());","lastModifiedDate":"2023-10-03"},{"lineNumber":174,"author":{"gitId":"jacobcuison"},"content":"    }","lastModifiedDate":"2023-10-03"},{"lineNumber":175,"author":{"gitId":"jacobcuison"},"content":"}","lastModifiedDate":"2023-10-03"}],"authorContributionMap":{"jonyeokj":2,"jacobcuison":173}},{"path":"src/test/java/seedu/address/model/meeting/DescriptionTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chiayunrong"},"content":"package seedu.address.model.meeting;","lastModifiedDate":"2023-10-03"},{"lineNumber":2,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":3,"author":{"gitId":"chiayunrong"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-03"},{"lineNumber":4,"author":{"gitId":"chiayunrong"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-03"},{"lineNumber":5,"author":{"gitId":"chiayunrong"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-03"},{"lineNumber":6,"author":{"gitId":"chiayunrong"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-03"},{"lineNumber":7,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":8,"author":{"gitId":"chiayunrong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-03"},{"lineNumber":9,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":10,"author":{"gitId":"chiayunrong"},"content":"public class DescriptionTest {","lastModifiedDate":"2023-10-03"},{"lineNumber":11,"author":{"gitId":"chiayunrong"},"content":"    @Test","lastModifiedDate":"2023-10-03"},{"lineNumber":12,"author":{"gitId":"chiayunrong"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-10-03"},{"lineNumber":13,"author":{"gitId":"chiayunrong"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Description(null));","lastModifiedDate":"2023-10-03"},{"lineNumber":14,"author":{"gitId":"chiayunrong"},"content":"    }","lastModifiedDate":"2023-10-03"},{"lineNumber":15,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":16,"author":{"gitId":"chiayunrong"},"content":"    @Test","lastModifiedDate":"2023-10-03"},{"lineNumber":17,"author":{"gitId":"chiayunrong"},"content":"    public void toString_returnsString() {","lastModifiedDate":"2023-10-03"},{"lineNumber":18,"author":{"gitId":"chiayunrong"},"content":"        String expectedDescription \u003d \"test description\";","lastModifiedDate":"2023-10-03"},{"lineNumber":19,"author":{"gitId":"chiayunrong"},"content":"        String actualDescription \u003d new Description(expectedDescription).toString();","lastModifiedDate":"2023-10-03"},{"lineNumber":20,"author":{"gitId":"chiayunrong"},"content":"        assertEquals(expectedDescription, actualDescription);","lastModifiedDate":"2023-10-03"},{"lineNumber":21,"author":{"gitId":"chiayunrong"},"content":"    }","lastModifiedDate":"2023-10-03"},{"lineNumber":22,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":23,"author":{"gitId":"chiayunrong"},"content":"    @Test","lastModifiedDate":"2023-10-03"},{"lineNumber":24,"author":{"gitId":"chiayunrong"},"content":"    public void equals() {","lastModifiedDate":"2023-10-03"},{"lineNumber":25,"author":{"gitId":"chiayunrong"},"content":"        Description description \u003d new Description(\"blah blah blah 05/10/1999 23:59\");","lastModifiedDate":"2023-10-03"},{"lineNumber":26,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":27,"author":{"gitId":"chiayunrong"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-03"},{"lineNumber":28,"author":{"gitId":"chiayunrong"},"content":"        assertTrue(description.equals(new Description(\"blah blah blah 05/10/1999 23:59\")));","lastModifiedDate":"2023-10-03"},{"lineNumber":29,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":30,"author":{"gitId":"chiayunrong"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-03"},{"lineNumber":31,"author":{"gitId":"chiayunrong"},"content":"        assertTrue(description.equals(description));","lastModifiedDate":"2023-10-03"},{"lineNumber":32,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":33,"author":{"gitId":"chiayunrong"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-03"},{"lineNumber":34,"author":{"gitId":"chiayunrong"},"content":"        assertFalse(description.equals(null));","lastModifiedDate":"2023-10-03"},{"lineNumber":35,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":36,"author":{"gitId":"chiayunrong"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-03"},{"lineNumber":37,"author":{"gitId":"chiayunrong"},"content":"        assertFalse(description.equals(5.0f));","lastModifiedDate":"2023-10-03"},{"lineNumber":38,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":39,"author":{"gitId":"chiayunrong"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2023-10-03"},{"lineNumber":40,"author":{"gitId":"chiayunrong"},"content":"        assertFalse(description.equals(new Description(\"06/11/2100 23:59\")));","lastModifiedDate":"2023-10-03"},{"lineNumber":41,"author":{"gitId":"chiayunrong"},"content":"    }","lastModifiedDate":"2023-10-03"},{"lineNumber":42,"author":{"gitId":"chiayunrong"},"content":"}","lastModifiedDate":"2023-10-03"}],"authorContributionMap":{"chiayunrong":42}},{"path":"src/test/java/seedu/address/model/meeting/MeetingListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chiayunrong"},"content":"package seedu.address.model.meeting;","lastModifiedDate":"2023-10-03"},{"lineNumber":2,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":3,"author":{"gitId":"chiayunrong"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-03"},{"lineNumber":4,"author":{"gitId":"chiayunrong"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-03"},{"lineNumber":5,"author":{"gitId":"chiayunrong"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-03"},{"lineNumber":6,"author":{"gitId":"chiayunrong"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-03"},{"lineNumber":7,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":8,"author":{"gitId":"chiayunrong"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-10-03"},{"lineNumber":9,"author":{"gitId":"chiayunrong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-03"},{"lineNumber":10,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":11,"author":{"gitId":"chiayunrong"},"content":"import seedu.address.model.meeting.exceptions.DuplicateMeetingException;","lastModifiedDate":"2023-10-03"},{"lineNumber":12,"author":{"gitId":"chiayunrong"},"content":"import seedu.address.testutil.MeetingBuilder;","lastModifiedDate":"2023-10-03"},{"lineNumber":13,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":14,"author":{"gitId":"chiayunrong"},"content":"public class MeetingListTest {","lastModifiedDate":"2023-10-03"},{"lineNumber":15,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":16,"author":{"gitId":"chiayunrong"},"content":"    private MeetingList meetingList;","lastModifiedDate":"2023-10-03"},{"lineNumber":17,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":18,"author":{"gitId":"chiayunrong"},"content":"    @BeforeEach","lastModifiedDate":"2023-10-03"},{"lineNumber":19,"author":{"gitId":"chiayunrong"},"content":"    public void init() {","lastModifiedDate":"2023-10-03"},{"lineNumber":20,"author":{"gitId":"chiayunrong"},"content":"        meetingList \u003d new MeetingList();","lastModifiedDate":"2023-10-03"},{"lineNumber":21,"author":{"gitId":"chiayunrong"},"content":"    }","lastModifiedDate":"2023-10-03"},{"lineNumber":22,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":23,"author":{"gitId":"chiayunrong"},"content":"    @Test","lastModifiedDate":"2023-10-03"},{"lineNumber":24,"author":{"gitId":"chiayunrong"},"content":"    public void add_nullMeeting_throwsNullPointerException() {","lastModifiedDate":"2023-10-03"},{"lineNumber":25,"author":{"gitId":"chiayunrong"},"content":"        assertThrows(NullPointerException.class, () -\u003e meetingList.add(null));","lastModifiedDate":"2023-10-03"},{"lineNumber":26,"author":{"gitId":"chiayunrong"},"content":"    }","lastModifiedDate":"2023-10-03"},{"lineNumber":27,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":28,"author":{"gitId":"chiayunrong"},"content":"    @Test","lastModifiedDate":"2023-10-03"},{"lineNumber":29,"author":{"gitId":"chiayunrong"},"content":"    public void add_duplicateMeeting_throwsDuplicateMeetingException() {","lastModifiedDate":"2023-10-03"},{"lineNumber":30,"author":{"gitId":"chiayunrong"},"content":"        Meeting meeting \u003d new MeetingBuilder().build();","lastModifiedDate":"2023-10-03"},{"lineNumber":31,"author":{"gitId":"chiayunrong"},"content":"        meetingList.add(meeting);","lastModifiedDate":"2023-10-03"},{"lineNumber":32,"author":{"gitId":"chiayunrong"},"content":"        assertThrows(DuplicateMeetingException.class, () -\u003e meetingList.add(meeting));","lastModifiedDate":"2023-10-03"},{"lineNumber":33,"author":{"gitId":"chiayunrong"},"content":"    }","lastModifiedDate":"2023-10-03"},{"lineNumber":34,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":35,"author":{"gitId":"chiayunrong"},"content":"    @Test","lastModifiedDate":"2023-10-03"},{"lineNumber":36,"author":{"gitId":"chiayunrong"},"content":"    public void contains_nullMeeting_throwsNullPointerException() {","lastModifiedDate":"2023-10-03"},{"lineNumber":37,"author":{"gitId":"chiayunrong"},"content":"        assertThrows(NullPointerException.class, () -\u003e meetingList.contains(null));","lastModifiedDate":"2023-10-03"},{"lineNumber":38,"author":{"gitId":"chiayunrong"},"content":"    }","lastModifiedDate":"2023-10-03"},{"lineNumber":39,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":40,"author":{"gitId":"chiayunrong"},"content":"    @Test","lastModifiedDate":"2023-10-03"},{"lineNumber":41,"author":{"gitId":"chiayunrong"},"content":"    public void contains_meetingNotInList_returnsFalse() {","lastModifiedDate":"2023-10-03"},{"lineNumber":42,"author":{"gitId":"chiayunrong"},"content":"        Meeting meeting \u003d new MeetingBuilder().build();","lastModifiedDate":"2023-10-03"},{"lineNumber":43,"author":{"gitId":"chiayunrong"},"content":"        assertFalse(meetingList.contains(meeting));","lastModifiedDate":"2023-10-03"},{"lineNumber":44,"author":{"gitId":"chiayunrong"},"content":"    }","lastModifiedDate":"2023-10-03"},{"lineNumber":45,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":46,"author":{"gitId":"chiayunrong"},"content":"    @Test","lastModifiedDate":"2023-10-03"},{"lineNumber":47,"author":{"gitId":"chiayunrong"},"content":"    public void contains_meetingInList_returnsTrue() {","lastModifiedDate":"2023-10-03"},{"lineNumber":48,"author":{"gitId":"chiayunrong"},"content":"        Meeting meeting \u003d new MeetingBuilder().build();","lastModifiedDate":"2023-10-03"},{"lineNumber":49,"author":{"gitId":"chiayunrong"},"content":"        meetingList.add(meeting);","lastModifiedDate":"2023-10-03"},{"lineNumber":50,"author":{"gitId":"chiayunrong"},"content":"        assertTrue(meetingList.contains(meeting));","lastModifiedDate":"2023-10-03"},{"lineNumber":51,"author":{"gitId":"chiayunrong"},"content":"    }","lastModifiedDate":"2023-10-03"},{"lineNumber":52,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":53,"author":{"gitId":"chiayunrong"},"content":"    @Test","lastModifiedDate":"2023-10-03"},{"lineNumber":54,"author":{"gitId":"chiayunrong"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-03"},{"lineNumber":55,"author":{"gitId":"chiayunrong"},"content":"        assertEquals(meetingList.asUnmodifiableObservableList().toString(), meetingList.toString());","lastModifiedDate":"2023-10-03"},{"lineNumber":56,"author":{"gitId":"chiayunrong"},"content":"    }","lastModifiedDate":"2023-10-03"},{"lineNumber":57,"author":{"gitId":"chiayunrong"},"content":"}","lastModifiedDate":"2023-10-03"}],"authorContributionMap":{"chiayunrong":57}},{"path":"src/test/java/seedu/address/model/meeting/MeetingTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chiayunrong"},"content":"package seedu.address.model.meeting;","lastModifiedDate":"2023-10-03"},{"lineNumber":2,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":3,"author":{"gitId":"chiayunrong"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-03"},{"lineNumber":4,"author":{"gitId":"chiayunrong"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-03"},{"lineNumber":5,"author":{"gitId":"chiayunrong"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-03"},{"lineNumber":6,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":7,"author":{"gitId":"chiayunrong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-03"},{"lineNumber":8,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":9,"author":{"gitId":"chiayunrong"},"content":"import seedu.address.testutil.MeetingBuilder;","lastModifiedDate":"2023-10-03"},{"lineNumber":10,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":11,"author":{"gitId":"chiayunrong"},"content":"public class MeetingTest {","lastModifiedDate":"2023-10-03"},{"lineNumber":12,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":13,"author":{"gitId":"chiayunrong"},"content":"    @Test","lastModifiedDate":"2023-10-03"},{"lineNumber":14,"author":{"gitId":"chiayunrong"},"content":"    public void equals() {","lastModifiedDate":"2023-10-03"},{"lineNumber":15,"author":{"gitId":"chiayunrong"},"content":"        Meeting m1 \u003d new MeetingBuilder().build();","lastModifiedDate":"2023-10-03"},{"lineNumber":16,"author":{"gitId":"jonyeokj"},"content":"        Meeting m2 \u003d new MeetingBuilder().withTitle(\"test title\").build();","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":18,"author":{"gitId":"chiayunrong"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-03"},{"lineNumber":19,"author":{"gitId":"chiayunrong"},"content":"        assertTrue(m1.equals(m1));","lastModifiedDate":"2023-10-03"},{"lineNumber":20,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":21,"author":{"gitId":"chiayunrong"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-03"},{"lineNumber":22,"author":{"gitId":"chiayunrong"},"content":"        assertFalse(m1.equals(null));","lastModifiedDate":"2023-10-03"},{"lineNumber":23,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":24,"author":{"gitId":"chiayunrong"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2023-10-03"},{"lineNumber":25,"author":{"gitId":"chiayunrong"},"content":"        assertFalse(m1.equals(5));","lastModifiedDate":"2023-10-03"},{"lineNumber":26,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":27,"author":{"gitId":"chiayunrong"},"content":"        // different meeting -\u003e returns false","lastModifiedDate":"2023-10-03"},{"lineNumber":28,"author":{"gitId":"jonyeokj"},"content":"        assertFalse(m1.equals(m2));","lastModifiedDate":"2023-10-12"},{"lineNumber":29,"author":{"gitId":"chiayunrong"},"content":"    }","lastModifiedDate":"2023-10-03"},{"lineNumber":30,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":31,"author":{"gitId":"chiayunrong"},"content":"    @Test","lastModifiedDate":"2023-10-03"},{"lineNumber":32,"author":{"gitId":"chiayunrong"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-03"},{"lineNumber":33,"author":{"gitId":"chiayunrong"},"content":"        Meeting meeting \u003d new MeetingBuilder().build();","lastModifiedDate":"2023-10-03"},{"lineNumber":34,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":35,"author":{"gitId":"chiayunrong"},"content":"        String expected \u003d Meeting.class.getCanonicalName() + \"{title\u003d\" + MeetingBuilder.DEFAULT_TITLE","lastModifiedDate":"2023-10-17"},{"lineNumber":36,"author":{"gitId":"jonyeokj"},"content":"                + \", time\u003d\" + MeetingBuilder.DEFAULT_TIME + \", place\u003d\" + MeetingBuilder.DEFAULT_PLACE","lastModifiedDate":"2023-10-11"},{"lineNumber":37,"author":{"gitId":"s-peiran"},"content":"                + \", description\u003d\" + MeetingBuilder.DEFAULT_DESCRIPTION + \", notes\u003d[]\"","lastModifiedDate":"2023-10-24"},{"lineNumber":38,"author":{"gitId":"s-peiran"},"content":"                + \", contacts\u003d[]}\";","lastModifiedDate":"2023-10-24"},{"lineNumber":39,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":40,"author":{"gitId":"chiayunrong"},"content":"        assertEquals(expected, meeting.toString());","lastModifiedDate":"2023-10-03"},{"lineNumber":41,"author":{"gitId":"chiayunrong"},"content":"    }","lastModifiedDate":"2023-10-03"},{"lineNumber":42,"author":{"gitId":"chiayunrong"},"content":"}","lastModifiedDate":"2023-10-03"}],"authorContributionMap":{"jonyeokj":3,"s-peiran":2,"chiayunrong":37}},{"path":"src/test/java/seedu/address/model/meeting/PlaceTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jonyeokj"},"content":"package seedu.address.model.meeting;","lastModifiedDate":"2023-10-11"},{"lineNumber":2,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":3,"author":{"gitId":"jonyeokj"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-11"},{"lineNumber":4,"author":{"gitId":"jonyeokj"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-11"},{"lineNumber":5,"author":{"gitId":"jonyeokj"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-11"},{"lineNumber":6,"author":{"gitId":"jonyeokj"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-11"},{"lineNumber":7,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":8,"author":{"gitId":"jonyeokj"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-11"},{"lineNumber":9,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":10,"author":{"gitId":"jonyeokj"},"content":"public class PlaceTest {","lastModifiedDate":"2023-10-11"},{"lineNumber":11,"author":{"gitId":"jonyeokj"},"content":"    @Test","lastModifiedDate":"2023-10-11"},{"lineNumber":12,"author":{"gitId":"jonyeokj"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-10-11"},{"lineNumber":13,"author":{"gitId":"jonyeokj"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Place(null));","lastModifiedDate":"2023-10-11"},{"lineNumber":14,"author":{"gitId":"jonyeokj"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":15,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":16,"author":{"gitId":"jonyeokj"},"content":"    @Test","lastModifiedDate":"2023-10-11"},{"lineNumber":17,"author":{"gitId":"jonyeokj"},"content":"    public void constructor_invalidLocation_throwsIllegalArgumentException() {","lastModifiedDate":"2023-10-11"},{"lineNumber":18,"author":{"gitId":"jonyeokj"},"content":"        String invalidPlace \u003d \"\";","lastModifiedDate":"2023-10-11"},{"lineNumber":19,"author":{"gitId":"jonyeokj"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Place(invalidPlace));","lastModifiedDate":"2023-10-11"},{"lineNumber":20,"author":{"gitId":"jonyeokj"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":21,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":22,"author":{"gitId":"jonyeokj"},"content":"    @Test","lastModifiedDate":"2023-10-11"},{"lineNumber":23,"author":{"gitId":"jonyeokj"},"content":"    public void isValidPlace() {","lastModifiedDate":"2023-10-11"},{"lineNumber":24,"author":{"gitId":"jonyeokj"},"content":"        // null place","lastModifiedDate":"2023-10-11"},{"lineNumber":25,"author":{"gitId":"jonyeokj"},"content":"        assertThrows(NullPointerException.class, () -\u003e Place.isValidPlace(null));","lastModifiedDate":"2023-10-11"},{"lineNumber":26,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":27,"author":{"gitId":"jonyeokj"},"content":"        // invalid place","lastModifiedDate":"2023-10-11"},{"lineNumber":28,"author":{"gitId":"jonyeokj"},"content":"        assertFalse(Place.isValidPlace(\"\")); // empty string","lastModifiedDate":"2023-10-11"},{"lineNumber":29,"author":{"gitId":"jonyeokj"},"content":"        assertFalse(Place.isValidPlace(\" \")); // spaces only","lastModifiedDate":"2023-10-11"},{"lineNumber":30,"author":{"gitId":"jonyeokj"},"content":"        assertFalse(Place.isValidPlace(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2023-10-11"},{"lineNumber":31,"author":{"gitId":"jonyeokj"},"content":"        assertFalse(Place.isValidPlace(\"peter*\")); // contains non-alphanumeric characters","lastModifiedDate":"2023-10-11"},{"lineNumber":32,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":33,"author":{"gitId":"jonyeokj"},"content":"        // valid place","lastModifiedDate":"2023-10-11"},{"lineNumber":34,"author":{"gitId":"jonyeokj"},"content":"        assertTrue(Place.isValidPlace(\"peter jack\")); // alphabets only","lastModifiedDate":"2023-10-11"},{"lineNumber":35,"author":{"gitId":"jonyeokj"},"content":"        assertTrue(Place.isValidPlace(\"12345\")); // numbers only","lastModifiedDate":"2023-10-11"},{"lineNumber":36,"author":{"gitId":"jonyeokj"},"content":"        assertTrue(Place.isValidPlace(\"peter the 2nd\")); // alphanumeric characters","lastModifiedDate":"2023-10-11"},{"lineNumber":37,"author":{"gitId":"jonyeokj"},"content":"        assertTrue(Place.isValidPlace(\"Capital Tan\")); // with capital letters","lastModifiedDate":"2023-10-11"},{"lineNumber":38,"author":{"gitId":"jonyeokj"},"content":"        assertTrue(Place.isValidPlace(\"David Roger Jackson Ray Jr 2nd\")); // long places","lastModifiedDate":"2023-10-11"},{"lineNumber":39,"author":{"gitId":"jonyeokj"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":40,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":41,"author":{"gitId":"jonyeokj"},"content":"    @Test","lastModifiedDate":"2023-10-11"},{"lineNumber":42,"author":{"gitId":"jonyeokj"},"content":"    public void toString_returnsString() {","lastModifiedDate":"2023-10-11"},{"lineNumber":43,"author":{"gitId":"jonyeokj"},"content":"        String expectedPlace \u003d \"test place\";","lastModifiedDate":"2023-10-11"},{"lineNumber":44,"author":{"gitId":"jonyeokj"},"content":"        String actualPlace \u003d new Place(expectedPlace).toString();","lastModifiedDate":"2023-10-11"},{"lineNumber":45,"author":{"gitId":"jonyeokj"},"content":"        assertEquals(expectedPlace, actualPlace);","lastModifiedDate":"2023-10-11"},{"lineNumber":46,"author":{"gitId":"jonyeokj"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":47,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":48,"author":{"gitId":"jonyeokj"},"content":"    @Test","lastModifiedDate":"2023-10-11"},{"lineNumber":49,"author":{"gitId":"jonyeokj"},"content":"    public void equals() {","lastModifiedDate":"2023-10-11"},{"lineNumber":50,"author":{"gitId":"jonyeokj"},"content":"        Place place \u003d new Place(\"Valid Place\");","lastModifiedDate":"2023-10-11"},{"lineNumber":51,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":52,"author":{"gitId":"jonyeokj"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-11"},{"lineNumber":53,"author":{"gitId":"jonyeokj"},"content":"        assertTrue(place.equals(new Place(\"Valid Place\")));","lastModifiedDate":"2023-10-11"},{"lineNumber":54,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":55,"author":{"gitId":"jonyeokj"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-11"},{"lineNumber":56,"author":{"gitId":"jonyeokj"},"content":"        assertTrue(place.equals(place));","lastModifiedDate":"2023-10-11"},{"lineNumber":57,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":58,"author":{"gitId":"jonyeokj"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-11"},{"lineNumber":59,"author":{"gitId":"jonyeokj"},"content":"        assertFalse(place.equals(null));","lastModifiedDate":"2023-10-11"},{"lineNumber":60,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":61,"author":{"gitId":"jonyeokj"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-11"},{"lineNumber":62,"author":{"gitId":"jonyeokj"},"content":"        assertFalse(place.equals(5.0f));","lastModifiedDate":"2023-10-11"},{"lineNumber":63,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":64,"author":{"gitId":"jonyeokj"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2023-10-11"},{"lineNumber":65,"author":{"gitId":"jonyeokj"},"content":"        assertFalse(place.equals(new Place(\"Other Valid Place\")));","lastModifiedDate":"2023-10-11"},{"lineNumber":66,"author":{"gitId":"jonyeokj"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":67,"author":{"gitId":"jonyeokj"},"content":"}","lastModifiedDate":"2023-10-11"}],"authorContributionMap":{"jonyeokj":67}},{"path":"src/test/java/seedu/address/model/meeting/TimeTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chiayunrong"},"content":"package seedu.address.model.meeting;","lastModifiedDate":"2023-10-03"},{"lineNumber":2,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":3,"author":{"gitId":"chiayunrong"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-03"},{"lineNumber":4,"author":{"gitId":"chiayunrong"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-03"},{"lineNumber":5,"author":{"gitId":"chiayunrong"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-03"},{"lineNumber":6,"author":{"gitId":"chiayunrong"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-03"},{"lineNumber":7,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":8,"author":{"gitId":"chiayunrong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-03"},{"lineNumber":9,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":10,"author":{"gitId":"chiayunrong"},"content":"public class TimeTest {","lastModifiedDate":"2023-10-03"},{"lineNumber":11,"author":{"gitId":"chiayunrong"},"content":"    @Test","lastModifiedDate":"2023-10-03"},{"lineNumber":12,"author":{"gitId":"chiayunrong"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-10-03"},{"lineNumber":13,"author":{"gitId":"jonyeokj"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Time((String) null));","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"chiayunrong"},"content":"    }","lastModifiedDate":"2023-10-03"},{"lineNumber":15,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":16,"author":{"gitId":"chiayunrong"},"content":"    @Test","lastModifiedDate":"2023-10-03"},{"lineNumber":17,"author":{"gitId":"chiayunrong"},"content":"    public void constructor_invalidTime_throwsIllegalArgumentException() {","lastModifiedDate":"2023-10-03"},{"lineNumber":18,"author":{"gitId":"chiayunrong"},"content":"        String invalidTime \u003d \"\";","lastModifiedDate":"2023-10-03"},{"lineNumber":19,"author":{"gitId":"chiayunrong"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Time(invalidTime));","lastModifiedDate":"2023-10-03"},{"lineNumber":20,"author":{"gitId":"chiayunrong"},"content":"    }","lastModifiedDate":"2023-10-03"},{"lineNumber":21,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":22,"author":{"gitId":"chiayunrong"},"content":"    @Test","lastModifiedDate":"2023-10-03"},{"lineNumber":23,"author":{"gitId":"chiayunrong"},"content":"    public void isValidTime() {","lastModifiedDate":"2023-10-03"},{"lineNumber":24,"author":{"gitId":"chiayunrong"},"content":"        // null time","lastModifiedDate":"2023-10-03"},{"lineNumber":25,"author":{"gitId":"chiayunrong"},"content":"        assertThrows(NullPointerException.class, () -\u003e Time.isValidTime(null));","lastModifiedDate":"2023-10-03"},{"lineNumber":26,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":27,"author":{"gitId":"chiayunrong"},"content":"        // invalid time","lastModifiedDate":"2023-10-03"},{"lineNumber":28,"author":{"gitId":"chiayunrong"},"content":"        assertFalse(Time.isValidTime(\"\")); // empty string","lastModifiedDate":"2023-10-03"},{"lineNumber":29,"author":{"gitId":"chiayunrong"},"content":"        assertFalse(Time.isValidTime(\" \")); // spaces only","lastModifiedDate":"2023-10-03"},{"lineNumber":30,"author":{"gitId":"chiayunrong"},"content":"        assertFalse(Time.isValidTime(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2023-10-03"},{"lineNumber":31,"author":{"gitId":"chiayunrong"},"content":"        assertFalse(Time.isValidTime(\"peter*\")); // contains non-alphanumeric characters","lastModifiedDate":"2023-10-03"},{"lineNumber":32,"author":{"gitId":"chiayunrong"},"content":"        assertFalse(Time.isValidTime(\"35/10/1999 23:59\")); // impossible date","lastModifiedDate":"2023-10-03"},{"lineNumber":33,"author":{"gitId":"chiayunrong"},"content":"        assertFalse(Time.isValidTime(\"05/10/1999 25:59\")); // impossible time","lastModifiedDate":"2023-10-03"},{"lineNumber":34,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":35,"author":{"gitId":"chiayunrong"},"content":"        // valid time","lastModifiedDate":"2023-10-03"},{"lineNumber":36,"author":{"gitId":"chiayunrong"},"content":"        assertTrue(Time.isValidTime(\"05/10/1999 23:59\"));","lastModifiedDate":"2023-10-03"},{"lineNumber":37,"author":{"gitId":"chiayunrong"},"content":"        assertTrue(Time.isValidTime(\"05/10/2100 23:59\"));","lastModifiedDate":"2023-10-03"},{"lineNumber":38,"author":{"gitId":"chiayunrong"},"content":"    }","lastModifiedDate":"2023-10-03"},{"lineNumber":39,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":40,"author":{"gitId":"chiayunrong"},"content":"    @Test","lastModifiedDate":"2023-10-03"},{"lineNumber":41,"author":{"gitId":"chiayunrong"},"content":"    public void toString_returnsString() {","lastModifiedDate":"2023-10-03"},{"lineNumber":42,"author":{"gitId":"chiayunrong"},"content":"        String expectedTime \u003d \"05/10/1999 23:59\";","lastModifiedDate":"2023-10-03"},{"lineNumber":43,"author":{"gitId":"chiayunrong"},"content":"        String actualTime \u003d new Time(expectedTime).toString();","lastModifiedDate":"2023-10-03"},{"lineNumber":44,"author":{"gitId":"chiayunrong"},"content":"        assertEquals(expectedTime, actualTime);","lastModifiedDate":"2023-10-03"},{"lineNumber":45,"author":{"gitId":"chiayunrong"},"content":"    }","lastModifiedDate":"2023-10-03"},{"lineNumber":46,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":47,"author":{"gitId":"chiayunrong"},"content":"    @Test","lastModifiedDate":"2023-10-03"},{"lineNumber":48,"author":{"gitId":"chiayunrong"},"content":"    public void equals() {","lastModifiedDate":"2023-10-03"},{"lineNumber":49,"author":{"gitId":"chiayunrong"},"content":"        Time time \u003d new Time(\"05/10/1999 23:59\");","lastModifiedDate":"2023-10-03"},{"lineNumber":50,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":51,"author":{"gitId":"chiayunrong"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-03"},{"lineNumber":52,"author":{"gitId":"chiayunrong"},"content":"        assertTrue(time.equals(new Time(\"05/10/1999 23:59\")));","lastModifiedDate":"2023-10-03"},{"lineNumber":53,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":54,"author":{"gitId":"chiayunrong"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-03"},{"lineNumber":55,"author":{"gitId":"chiayunrong"},"content":"        assertTrue(time.equals(time));","lastModifiedDate":"2023-10-03"},{"lineNumber":56,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":57,"author":{"gitId":"chiayunrong"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-03"},{"lineNumber":58,"author":{"gitId":"chiayunrong"},"content":"        assertFalse(time.equals(null));","lastModifiedDate":"2023-10-03"},{"lineNumber":59,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":60,"author":{"gitId":"chiayunrong"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-03"},{"lineNumber":61,"author":{"gitId":"chiayunrong"},"content":"        assertFalse(time.equals(5.0f));","lastModifiedDate":"2023-10-03"},{"lineNumber":62,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":63,"author":{"gitId":"chiayunrong"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2023-10-03"},{"lineNumber":64,"author":{"gitId":"chiayunrong"},"content":"        assertFalse(time.equals(new Time(\"06/11/2100 23:59\")));","lastModifiedDate":"2023-10-03"},{"lineNumber":65,"author":{"gitId":"chiayunrong"},"content":"    }","lastModifiedDate":"2023-10-03"},{"lineNumber":66,"author":{"gitId":"chiayunrong"},"content":"}","lastModifiedDate":"2023-10-03"}],"authorContributionMap":{"jonyeokj":1,"chiayunrong":65}},{"path":"src/test/java/seedu/address/model/meeting/TitleContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chiayunrong"},"content":"package seedu.address.model.meeting;","lastModifiedDate":"2023-10-17"},{"lineNumber":2,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":3,"author":{"gitId":"chiayunrong"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"chiayunrong"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"chiayunrong"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"chiayunrong"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"chiayunrong"},"content":"import java.util.Collections;","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"chiayunrong"},"content":"import java.util.List;","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"chiayunrong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"chiayunrong"},"content":"import seedu.address.testutil.MeetingBuilder;","lastModifiedDate":"2023-10-17"},{"lineNumber":14,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":15,"author":{"gitId":"chiayunrong"},"content":"public class TitleContainsKeywordsPredicateTest {","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"chiayunrong"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"chiayunrong"},"content":"    public void equals() {","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"chiayunrong"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2023-10-17"},{"lineNumber":20,"author":{"gitId":"chiayunrong"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2023-10-17"},{"lineNumber":21,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":22,"author":{"gitId":"chiayunrong"},"content":"        TitleContainsKeywordsPredicate firstPredicate \u003d new TitleContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2023-10-17"},{"lineNumber":23,"author":{"gitId":"chiayunrong"},"content":"        TitleContainsKeywordsPredicate secondPredicate \u003d new TitleContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2023-10-17"},{"lineNumber":24,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":25,"author":{"gitId":"chiayunrong"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-17"},{"lineNumber":26,"author":{"gitId":"chiayunrong"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2023-10-17"},{"lineNumber":27,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":28,"author":{"gitId":"chiayunrong"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-17"},{"lineNumber":29,"author":{"gitId":"chiayunrong"},"content":"        TitleContainsKeywordsPredicate firstPredicateCopy \u003d","lastModifiedDate":"2023-10-17"},{"lineNumber":30,"author":{"gitId":"chiayunrong"},"content":"                new TitleContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2023-10-17"},{"lineNumber":31,"author":{"gitId":"chiayunrong"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2023-10-17"},{"lineNumber":32,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":33,"author":{"gitId":"chiayunrong"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-17"},{"lineNumber":34,"author":{"gitId":"chiayunrong"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2023-10-17"},{"lineNumber":35,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":36,"author":{"gitId":"chiayunrong"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-17"},{"lineNumber":37,"author":{"gitId":"chiayunrong"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2023-10-17"},{"lineNumber":38,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":39,"author":{"gitId":"chiayunrong"},"content":"        // different predicate -\u003e returns false","lastModifiedDate":"2023-10-17"},{"lineNumber":40,"author":{"gitId":"chiayunrong"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2023-10-17"},{"lineNumber":41,"author":{"gitId":"chiayunrong"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":42,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":43,"author":{"gitId":"chiayunrong"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":44,"author":{"gitId":"chiayunrong"},"content":"    public void test_titleContainsKeywords_returnsTrue() {","lastModifiedDate":"2023-10-17"},{"lineNumber":45,"author":{"gitId":"chiayunrong"},"content":"        // One keyword","lastModifiedDate":"2023-10-17"},{"lineNumber":46,"author":{"gitId":"chiayunrong"},"content":"        TitleContainsKeywordsPredicate predicate \u003d","lastModifiedDate":"2023-10-17"},{"lineNumber":47,"author":{"gitId":"chiayunrong"},"content":"                new TitleContainsKeywordsPredicate(Collections.singletonList(\"Minions\"));","lastModifiedDate":"2023-10-17"},{"lineNumber":48,"author":{"gitId":"chiayunrong"},"content":"        assertTrue(predicate.test(new MeetingBuilder().withTitle(\"Minions hehe\").build()));","lastModifiedDate":"2023-10-17"},{"lineNumber":49,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":50,"author":{"gitId":"chiayunrong"},"content":"        // Multiple keywords","lastModifiedDate":"2023-10-17"},{"lineNumber":51,"author":{"gitId":"chiayunrong"},"content":"        predicate \u003d new TitleContainsKeywordsPredicate(Arrays.asList(\"Minions\", \"hehe\"));","lastModifiedDate":"2023-10-17"},{"lineNumber":52,"author":{"gitId":"chiayunrong"},"content":"        assertTrue(predicate.test(new MeetingBuilder().withTitle(\"Minions hehe\").build()));","lastModifiedDate":"2023-10-17"},{"lineNumber":53,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":54,"author":{"gitId":"chiayunrong"},"content":"        // Only one matching keyword","lastModifiedDate":"2023-10-17"},{"lineNumber":55,"author":{"gitId":"chiayunrong"},"content":"        predicate \u003d new TitleContainsKeywordsPredicate(Arrays.asList(\"hehe\", \"behh\"));","lastModifiedDate":"2023-10-17"},{"lineNumber":56,"author":{"gitId":"chiayunrong"},"content":"        assertTrue(predicate.test(new MeetingBuilder().withTitle(\"Minions hehe\").build()));","lastModifiedDate":"2023-10-17"},{"lineNumber":57,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":58,"author":{"gitId":"chiayunrong"},"content":"        // Mixed-case keywords","lastModifiedDate":"2023-10-17"},{"lineNumber":59,"author":{"gitId":"chiayunrong"},"content":"        predicate \u003d new TitleContainsKeywordsPredicate(Arrays.asList(\"mInions\", \"hEhE\"));","lastModifiedDate":"2023-10-17"},{"lineNumber":60,"author":{"gitId":"chiayunrong"},"content":"        assertTrue(predicate.test(new MeetingBuilder().withTitle(\"Minions hehe\").build()));","lastModifiedDate":"2023-10-17"},{"lineNumber":61,"author":{"gitId":"chiayunrong"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":62,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":63,"author":{"gitId":"chiayunrong"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":64,"author":{"gitId":"chiayunrong"},"content":"    public void test_titleDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2023-10-17"},{"lineNumber":65,"author":{"gitId":"chiayunrong"},"content":"        // Zero keywords","lastModifiedDate":"2023-10-17"},{"lineNumber":66,"author":{"gitId":"chiayunrong"},"content":"        TitleContainsKeywordsPredicate predicate \u003d new TitleContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2023-10-17"},{"lineNumber":67,"author":{"gitId":"chiayunrong"},"content":"        assertFalse(predicate.test(new MeetingBuilder().withTitle(\"Minions hehe\").build()));","lastModifiedDate":"2023-10-17"},{"lineNumber":68,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":69,"author":{"gitId":"chiayunrong"},"content":"        // Non-matching keyword","lastModifiedDate":"2023-10-17"},{"lineNumber":70,"author":{"gitId":"chiayunrong"},"content":"        predicate \u003d new TitleContainsKeywordsPredicate(Arrays.asList(\"Carol\"));","lastModifiedDate":"2023-10-17"},{"lineNumber":71,"author":{"gitId":"chiayunrong"},"content":"        assertFalse(predicate.test(new MeetingBuilder().withTitle(\"Minions hehe\").build()));","lastModifiedDate":"2023-10-17"},{"lineNumber":72,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":73,"author":{"gitId":"chiayunrong"},"content":"        // Keywords match description, but does not match name.","lastModifiedDate":"2023-10-17"},{"lineNumber":74,"author":{"gitId":"chiayunrong"},"content":"        predicate \u003d new TitleContainsKeywordsPredicate(Arrays.asList(\"Minions\", \"hehe\"));","lastModifiedDate":"2023-10-17"},{"lineNumber":75,"author":{"gitId":"chiayunrong"},"content":"        assertFalse(predicate.test(new MeetingBuilder().withDescription(\"Minions hehe\").build()));","lastModifiedDate":"2023-10-17"},{"lineNumber":76,"author":{"gitId":"chiayunrong"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":77,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":78,"author":{"gitId":"chiayunrong"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":79,"author":{"gitId":"chiayunrong"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-17"},{"lineNumber":80,"author":{"gitId":"chiayunrong"},"content":"        List\u003cString\u003e keywords \u003d List.of(\"keyword1\", \"keyword2\");","lastModifiedDate":"2023-10-17"},{"lineNumber":81,"author":{"gitId":"chiayunrong"},"content":"        TitleContainsKeywordsPredicate predicate \u003d new TitleContainsKeywordsPredicate(keywords);","lastModifiedDate":"2023-10-17"},{"lineNumber":82,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":83,"author":{"gitId":"chiayunrong"},"content":"        String expected \u003d TitleContainsKeywordsPredicate.class.getCanonicalName() + \"{keywords\u003d\" + keywords + \"}\";","lastModifiedDate":"2023-10-17"},{"lineNumber":84,"author":{"gitId":"chiayunrong"},"content":"        assertEquals(expected, predicate.toString());","lastModifiedDate":"2023-10-17"},{"lineNumber":85,"author":{"gitId":"chiayunrong"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":86,"author":{"gitId":"chiayunrong"},"content":"}","lastModifiedDate":"2023-10-17"}],"authorContributionMap":{"chiayunrong":86}},{"path":"src/test/java/seedu/address/model/meeting/TitleTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chiayunrong"},"content":"package seedu.address.model.meeting;","lastModifiedDate":"2023-10-03"},{"lineNumber":2,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":3,"author":{"gitId":"chiayunrong"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-03"},{"lineNumber":4,"author":{"gitId":"chiayunrong"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-03"},{"lineNumber":5,"author":{"gitId":"chiayunrong"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-03"},{"lineNumber":6,"author":{"gitId":"chiayunrong"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-03"},{"lineNumber":7,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":8,"author":{"gitId":"chiayunrong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-03"},{"lineNumber":9,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":10,"author":{"gitId":"chiayunrong"},"content":"public class TitleTest {","lastModifiedDate":"2023-10-03"},{"lineNumber":11,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":12,"author":{"gitId":"chiayunrong"},"content":"    @Test","lastModifiedDate":"2023-10-03"},{"lineNumber":13,"author":{"gitId":"chiayunrong"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-10-03"},{"lineNumber":14,"author":{"gitId":"chiayunrong"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Title(null));","lastModifiedDate":"2023-10-03"},{"lineNumber":15,"author":{"gitId":"chiayunrong"},"content":"    }","lastModifiedDate":"2023-10-03"},{"lineNumber":16,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":17,"author":{"gitId":"chiayunrong"},"content":"    @Test","lastModifiedDate":"2023-10-03"},{"lineNumber":18,"author":{"gitId":"chiayunrong"},"content":"    public void constructor_invalidTitle_throwsIllegalArgumentException() {","lastModifiedDate":"2023-10-03"},{"lineNumber":19,"author":{"gitId":"chiayunrong"},"content":"        String invalidTitle \u003d \"\";","lastModifiedDate":"2023-10-03"},{"lineNumber":20,"author":{"gitId":"chiayunrong"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Title(invalidTitle));","lastModifiedDate":"2023-10-03"},{"lineNumber":21,"author":{"gitId":"chiayunrong"},"content":"    }","lastModifiedDate":"2023-10-03"},{"lineNumber":22,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":23,"author":{"gitId":"chiayunrong"},"content":"    @Test","lastModifiedDate":"2023-10-03"},{"lineNumber":24,"author":{"gitId":"chiayunrong"},"content":"    public void isValidTitle() {","lastModifiedDate":"2023-10-03"},{"lineNumber":25,"author":{"gitId":"chiayunrong"},"content":"        // null title","lastModifiedDate":"2023-10-03"},{"lineNumber":26,"author":{"gitId":"chiayunrong"},"content":"        assertThrows(NullPointerException.class, () -\u003e Title.isValidTitle(null));","lastModifiedDate":"2023-10-03"},{"lineNumber":27,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":28,"author":{"gitId":"chiayunrong"},"content":"        // invalid title","lastModifiedDate":"2023-10-03"},{"lineNumber":29,"author":{"gitId":"chiayunrong"},"content":"        assertFalse(Title.isValidTitle(\"\")); // empty string","lastModifiedDate":"2023-10-03"},{"lineNumber":30,"author":{"gitId":"chiayunrong"},"content":"        assertFalse(Title.isValidTitle(\" \")); // spaces only","lastModifiedDate":"2023-10-03"},{"lineNumber":31,"author":{"gitId":"chiayunrong"},"content":"        assertFalse(Title.isValidTitle(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2023-10-03"},{"lineNumber":32,"author":{"gitId":"chiayunrong"},"content":"        assertFalse(Title.isValidTitle(\"peter*\")); // contains non-alphanumeric characters","lastModifiedDate":"2023-10-03"},{"lineNumber":33,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":34,"author":{"gitId":"chiayunrong"},"content":"        // valid title","lastModifiedDate":"2023-10-03"},{"lineNumber":35,"author":{"gitId":"chiayunrong"},"content":"        assertTrue(Title.isValidTitle(\"peter jack\")); // alphabets only","lastModifiedDate":"2023-10-03"},{"lineNumber":36,"author":{"gitId":"chiayunrong"},"content":"        assertTrue(Title.isValidTitle(\"12345\")); // numbers only","lastModifiedDate":"2023-10-03"},{"lineNumber":37,"author":{"gitId":"chiayunrong"},"content":"        assertTrue(Title.isValidTitle(\"peter the 2nd\")); // alphanumeric characters","lastModifiedDate":"2023-10-03"},{"lineNumber":38,"author":{"gitId":"chiayunrong"},"content":"        assertTrue(Title.isValidTitle(\"Capital Tan\")); // with capital letters","lastModifiedDate":"2023-10-03"},{"lineNumber":39,"author":{"gitId":"chiayunrong"},"content":"        assertTrue(Title.isValidTitle(\"David Roger Jackson Ray Jr 2nd\")); // long titles","lastModifiedDate":"2023-10-03"},{"lineNumber":40,"author":{"gitId":"chiayunrong"},"content":"    }","lastModifiedDate":"2023-10-03"},{"lineNumber":41,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":42,"author":{"gitId":"chiayunrong"},"content":"    @Test","lastModifiedDate":"2023-10-03"},{"lineNumber":43,"author":{"gitId":"chiayunrong"},"content":"    public void toString_returnsString() {","lastModifiedDate":"2023-10-03"},{"lineNumber":44,"author":{"gitId":"chiayunrong"},"content":"        String expectedTitle \u003d \"test title\";","lastModifiedDate":"2023-10-03"},{"lineNumber":45,"author":{"gitId":"chiayunrong"},"content":"        String actualTitle \u003d new Title(expectedTitle).toString();","lastModifiedDate":"2023-10-03"},{"lineNumber":46,"author":{"gitId":"chiayunrong"},"content":"        assertEquals(expectedTitle, actualTitle);","lastModifiedDate":"2023-10-03"},{"lineNumber":47,"author":{"gitId":"chiayunrong"},"content":"    }","lastModifiedDate":"2023-10-03"},{"lineNumber":48,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":49,"author":{"gitId":"chiayunrong"},"content":"    @Test","lastModifiedDate":"2023-10-03"},{"lineNumber":50,"author":{"gitId":"chiayunrong"},"content":"    public void equals() {","lastModifiedDate":"2023-10-03"},{"lineNumber":51,"author":{"gitId":"chiayunrong"},"content":"        Title title \u003d new Title(\"Valid Title\");","lastModifiedDate":"2023-10-03"},{"lineNumber":52,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":53,"author":{"gitId":"chiayunrong"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-03"},{"lineNumber":54,"author":{"gitId":"chiayunrong"},"content":"        assertTrue(title.equals(new Title(\"Valid Title\")));","lastModifiedDate":"2023-10-03"},{"lineNumber":55,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":56,"author":{"gitId":"chiayunrong"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-03"},{"lineNumber":57,"author":{"gitId":"chiayunrong"},"content":"        assertTrue(title.equals(title));","lastModifiedDate":"2023-10-03"},{"lineNumber":58,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":59,"author":{"gitId":"chiayunrong"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-03"},{"lineNumber":60,"author":{"gitId":"chiayunrong"},"content":"        assertFalse(title.equals(null));","lastModifiedDate":"2023-10-03"},{"lineNumber":61,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":62,"author":{"gitId":"chiayunrong"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-03"},{"lineNumber":63,"author":{"gitId":"chiayunrong"},"content":"        assertFalse(title.equals(5.0f));","lastModifiedDate":"2023-10-03"},{"lineNumber":64,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":65,"author":{"gitId":"chiayunrong"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2023-10-03"},{"lineNumber":66,"author":{"gitId":"chiayunrong"},"content":"        assertFalse(title.equals(new Title(\"Other Valid Title\")));","lastModifiedDate":"2023-10-03"},{"lineNumber":67,"author":{"gitId":"chiayunrong"},"content":"    }","lastModifiedDate":"2023-10-03"},{"lineNumber":68,"author":{"gitId":"chiayunrong"},"content":"}","lastModifiedDate":"2023-10-03"}],"authorContributionMap":{"chiayunrong":68}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedContactTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"jacobcuison"},"content":"import static seedu.address.storage.JsonAdaptedContact.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2023-10-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"jonyeokj"},"content":"import static seedu.address.testutil.TypicalAddressBook.BENSON;","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"jacobcuison"},"content":"import seedu.address.model.contact.Address;","lastModifiedDate":"2023-10-03"},{"lineNumber":16,"author":{"gitId":"jacobcuison"},"content":"import seedu.address.model.contact.Email;","lastModifiedDate":"2023-10-03"},{"lineNumber":17,"author":{"gitId":"jacobcuison"},"content":"import seedu.address.model.contact.Name;","lastModifiedDate":"2023-10-03"},{"lineNumber":18,"author":{"gitId":"jacobcuison"},"content":"import seedu.address.model.contact.Phone;","lastModifiedDate":"2023-10-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"jacobcuison"},"content":"public class JsonAdaptedContactTest {","lastModifiedDate":"2023-10-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d BENSON.getName().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d BENSON.getPhone().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d BENSON.getEmail().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d BENSON.getAddress().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final List\u003cJsonAdaptedTag\u003e VALID_TAGS \u003d BENSON.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"jacobcuison"},"content":"    private static final List\u003cJsonAdaptedNote\u003e VALID_NOTE \u003d BENSON.getNotes().stream()","lastModifiedDate":"2023-10-18"},{"lineNumber":35,"author":{"gitId":"jacobcuison"},"content":"            .map(JsonAdaptedNote::new)","lastModifiedDate":"2023-10-18"},{"lineNumber":36,"author":{"gitId":"jacobcuison"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2023-10-18"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"jacobcuison"},"content":"    public void toModelType_validContactDetails_returnsContact() throws Exception {","lastModifiedDate":"2023-10-03"},{"lineNumber":40,"author":{"gitId":"jacobcuison"},"content":"        JsonAdaptedContact contact \u003d new JsonAdaptedContact(BENSON);","lastModifiedDate":"2023-10-03"},{"lineNumber":41,"author":{"gitId":"jacobcuison"},"content":"        assertEquals(BENSON, contact.toModelType());","lastModifiedDate":"2023-10-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"jacobcuison"},"content":"        JsonAdaptedContact contact \u003d","lastModifiedDate":"2023-10-03"},{"lineNumber":47,"author":{"gitId":"jacobcuison"},"content":"                new JsonAdaptedContact(INVALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_TAGS, VALID_NOTE);","lastModifiedDate":"2023-10-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"jacobcuison"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, contact::toModelType);","lastModifiedDate":"2023-10-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"jacobcuison"},"content":"        JsonAdaptedContact contact \u003d new JsonAdaptedContact(null, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2023-10-13"},{"lineNumber":55,"author":{"gitId":"jacobcuison"},"content":"                VALID_TAGS, VALID_NOTE);","lastModifiedDate":"2023-10-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"jacobcuison"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, contact::toModelType);","lastModifiedDate":"2023-10-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"jacobcuison"},"content":"        JsonAdaptedContact contact \u003d","lastModifiedDate":"2023-10-03"},{"lineNumber":63,"author":{"gitId":"jacobcuison"},"content":"                new JsonAdaptedContact(VALID_NAME, INVALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_TAGS, VALID_NOTE);","lastModifiedDate":"2023-10-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Phone.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"jacobcuison"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, contact::toModelType);","lastModifiedDate":"2023-10-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void toModelType_nullPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"jacobcuison"},"content":"        JsonAdaptedContact contact \u003d new JsonAdaptedContact(VALID_NAME, null, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2023-10-13"},{"lineNumber":71,"author":{"gitId":"jacobcuison"},"content":"                VALID_TAGS, VALID_NOTE);","lastModifiedDate":"2023-10-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"jacobcuison"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, contact::toModelType);","lastModifiedDate":"2023-10-03"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void toModelType_invalidEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"jacobcuison"},"content":"        JsonAdaptedContact contact \u003d","lastModifiedDate":"2023-10-03"},{"lineNumber":79,"author":{"gitId":"jacobcuison"},"content":"                new JsonAdaptedContact(VALID_NAME, VALID_PHONE, INVALID_EMAIL, VALID_ADDRESS, VALID_TAGS, VALID_NOTE);","lastModifiedDate":"2023-10-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Email.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"jacobcuison"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, contact::toModelType);","lastModifiedDate":"2023-10-03"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void toModelType_nullEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"jacobcuison"},"content":"        JsonAdaptedContact contact \u003d new JsonAdaptedContact(VALID_NAME, VALID_PHONE, null, VALID_ADDRESS,","lastModifiedDate":"2023-10-13"},{"lineNumber":87,"author":{"gitId":"jacobcuison"},"content":"                VALID_TAGS, VALID_NOTE);","lastModifiedDate":"2023-10-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"jacobcuison"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, contact::toModelType);","lastModifiedDate":"2023-10-03"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void toModelType_invalidAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"jacobcuison"},"content":"        JsonAdaptedContact contact \u003d","lastModifiedDate":"2023-10-03"},{"lineNumber":95,"author":{"gitId":"jacobcuison"},"content":"                new JsonAdaptedContact(VALID_NAME, VALID_PHONE, VALID_EMAIL, INVALID_ADDRESS, VALID_TAGS, VALID_NOTE);","lastModifiedDate":"2023-10-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Address.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"jacobcuison"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, contact::toModelType);","lastModifiedDate":"2023-10-03"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public void toModelType_nullAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"jacobcuison"},"content":"        JsonAdaptedContact contact \u003d new JsonAdaptedContact(VALID_NAME, VALID_PHONE, VALID_EMAIL, null,","lastModifiedDate":"2023-10-13"},{"lineNumber":103,"author":{"gitId":"jacobcuison"},"content":"                VALID_TAGS, VALID_NOTE);","lastModifiedDate":"2023-10-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"jacobcuison"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, contact::toModelType);","lastModifiedDate":"2023-10-03"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void toModelType_invalidTags_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        List\u003cJsonAdaptedTag\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        invalidTags.add(new JsonAdaptedTag(INVALID_TAG));","lastModifiedDate":"2018-08-13"},{"lineNumber":112,"author":{"gitId":"jacobcuison"},"content":"        JsonAdaptedContact contact \u003d","lastModifiedDate":"2023-10-03"},{"lineNumber":113,"author":{"gitId":"jacobcuison"},"content":"                new JsonAdaptedContact(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, invalidTags, VALID_NOTE);","lastModifiedDate":"2023-10-13"},{"lineNumber":114,"author":{"gitId":"jacobcuison"},"content":"        assertThrows(IllegalValueException.class, contact::toModelType);","lastModifiedDate":"2023-10-03"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"jonyeokj":1,"jacobcuison":39,"-":77}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedMeetingTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jonyeokj"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-10-18"},{"lineNumber":2,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":3,"author":{"gitId":"jonyeokj"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-18"},{"lineNumber":4,"author":{"gitId":"jonyeokj"},"content":"import static seedu.address.storage.JsonAdaptedMeeting.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2023-10-18"},{"lineNumber":5,"author":{"gitId":"jonyeokj"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-18"},{"lineNumber":6,"author":{"gitId":"jonyeokj"},"content":"import static seedu.address.testutil.TypicalAddressBook.CS2103;","lastModifiedDate":"2023-10-18"},{"lineNumber":7,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":8,"author":{"gitId":"jacobcuison"},"content":"import java.util.List;","lastModifiedDate":"2023-10-18"},{"lineNumber":9,"author":{"gitId":"jacobcuison"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-10-18"},{"lineNumber":10,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":11,"author":{"gitId":"jonyeokj"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-18"},{"lineNumber":12,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":13,"author":{"gitId":"jonyeokj"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-10-18"},{"lineNumber":14,"author":{"gitId":"jonyeokj"},"content":"import seedu.address.model.meeting.Description;","lastModifiedDate":"2023-10-18"},{"lineNumber":15,"author":{"gitId":"jonyeokj"},"content":"import seedu.address.model.meeting.Place;","lastModifiedDate":"2023-10-18"},{"lineNumber":16,"author":{"gitId":"jonyeokj"},"content":"import seedu.address.model.meeting.Time;","lastModifiedDate":"2023-10-18"},{"lineNumber":17,"author":{"gitId":"jonyeokj"},"content":"import seedu.address.model.meeting.Title;","lastModifiedDate":"2023-10-18"},{"lineNumber":18,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":19,"author":{"gitId":"jonyeokj"},"content":"public class JsonAdaptedMeetingTest {","lastModifiedDate":"2023-10-18"},{"lineNumber":20,"author":{"gitId":"jonyeokj"},"content":"    private static final String INVALID_TITLE \u003d \"@ssignment Discussion\";","lastModifiedDate":"2023-10-18"},{"lineNumber":21,"author":{"gitId":"jonyeokj"},"content":"    private static final String INVALID_TIME \u003d \"1/2//2023 18;00\";","lastModifiedDate":"2023-10-18"},{"lineNumber":22,"author":{"gitId":"jonyeokj"},"content":"    private static final String INVALID_PLACE \u003d \"$chool\";","lastModifiedDate":"2023-10-18"},{"lineNumber":23,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":24,"author":{"gitId":"jonyeokj"},"content":"    private static final String VALID_TITLE \u003d CS2103.getTitle().toString();","lastModifiedDate":"2023-10-18"},{"lineNumber":25,"author":{"gitId":"jonyeokj"},"content":"    private static final String VALID_TIME \u003d CS2103.getTime().toString();","lastModifiedDate":"2023-10-18"},{"lineNumber":26,"author":{"gitId":"jonyeokj"},"content":"    private static final String VALID_PLACE \u003d CS2103.getPlace().toString();","lastModifiedDate":"2023-10-18"},{"lineNumber":27,"author":{"gitId":"jonyeokj"},"content":"    private static final String VALID_DESCRIPTION \u003d CS2103.getDescription().toString();","lastModifiedDate":"2023-10-18"},{"lineNumber":28,"author":{"gitId":"jacobcuison"},"content":"    private static final List\u003cJsonAdaptedNote\u003e VALID_NOTES \u003d CS2103.getNotes().stream()","lastModifiedDate":"2023-10-18"},{"lineNumber":29,"author":{"gitId":"jacobcuison"},"content":"            .map(JsonAdaptedNote::new)","lastModifiedDate":"2023-10-18"},{"lineNumber":30,"author":{"gitId":"jacobcuison"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2023-10-18"},{"lineNumber":31,"author":{"gitId":"s-peiran"},"content":"    private static final List\u003cJsonAdaptedContact\u003e VALID_CONTACTS \u003d CS2103.getContacts().stream()","lastModifiedDate":"2023-10-24"},{"lineNumber":32,"author":{"gitId":"s-peiran"},"content":"            .map(JsonAdaptedContact::new)","lastModifiedDate":"2023-10-24"},{"lineNumber":33,"author":{"gitId":"s-peiran"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2023-10-24"},{"lineNumber":34,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":35,"author":{"gitId":"jonyeokj"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":36,"author":{"gitId":"jonyeokj"},"content":"    public void toModelType_validMeetingDetails_returnsMeeting() throws Exception {","lastModifiedDate":"2023-10-18"},{"lineNumber":37,"author":{"gitId":"jonyeokj"},"content":"        JsonAdaptedMeeting meeting \u003d new JsonAdaptedMeeting(CS2103);","lastModifiedDate":"2023-10-18"},{"lineNumber":38,"author":{"gitId":"jonyeokj"},"content":"        assertEquals(CS2103, meeting.toModelType());","lastModifiedDate":"2023-10-18"},{"lineNumber":39,"author":{"gitId":"jonyeokj"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":40,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":41,"author":{"gitId":"jonyeokj"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":42,"author":{"gitId":"jonyeokj"},"content":"    public void toModelType_invalidTitle_throwsIllegalValueException() {","lastModifiedDate":"2023-10-18"},{"lineNumber":43,"author":{"gitId":"jonyeokj"},"content":"        JsonAdaptedMeeting meeting \u003d","lastModifiedDate":"2023-10-18"},{"lineNumber":44,"author":{"gitId":"s-peiran"},"content":"                new JsonAdaptedMeeting(INVALID_TITLE, VALID_TIME, VALID_PLACE,","lastModifiedDate":"2023-10-24"},{"lineNumber":45,"author":{"gitId":"s-peiran"},"content":"                        VALID_DESCRIPTION, VALID_NOTES, VALID_CONTACTS);","lastModifiedDate":"2023-10-24"},{"lineNumber":46,"author":{"gitId":"jonyeokj"},"content":"        String expectedMessage \u003d Title.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-10-18"},{"lineNumber":47,"author":{"gitId":"jonyeokj"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, meeting::toModelType);","lastModifiedDate":"2023-10-18"},{"lineNumber":48,"author":{"gitId":"jonyeokj"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":49,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":50,"author":{"gitId":"jonyeokj"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":51,"author":{"gitId":"jonyeokj"},"content":"    public void toModelType_nullTitle_throwsIllegalValueException() {","lastModifiedDate":"2023-10-18"},{"lineNumber":52,"author":{"gitId":"jacobcuison"},"content":"        JsonAdaptedMeeting meeting \u003d new JsonAdaptedMeeting(null, VALID_TIME, VALID_PLACE, VALID_DESCRIPTION,","lastModifiedDate":"2023-10-18"},{"lineNumber":53,"author":{"gitId":"s-peiran"},"content":"                VALID_NOTES, VALID_CONTACTS);","lastModifiedDate":"2023-10-24"},{"lineNumber":54,"author":{"gitId":"jonyeokj"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Title.class.getSimpleName());","lastModifiedDate":"2023-10-18"},{"lineNumber":55,"author":{"gitId":"jonyeokj"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, meeting::toModelType);","lastModifiedDate":"2023-10-18"},{"lineNumber":56,"author":{"gitId":"jonyeokj"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":57,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":58,"author":{"gitId":"jonyeokj"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":59,"author":{"gitId":"jonyeokj"},"content":"    public void toModelType_invalidTime_throwsIllegalValueException() {","lastModifiedDate":"2023-10-18"},{"lineNumber":60,"author":{"gitId":"jonyeokj"},"content":"        JsonAdaptedMeeting meeting \u003d","lastModifiedDate":"2023-10-18"},{"lineNumber":61,"author":{"gitId":"s-peiran"},"content":"                new JsonAdaptedMeeting(VALID_TITLE, INVALID_TIME, VALID_PLACE,","lastModifiedDate":"2023-10-24"},{"lineNumber":62,"author":{"gitId":"s-peiran"},"content":"                        VALID_DESCRIPTION, VALID_NOTES, VALID_CONTACTS);","lastModifiedDate":"2023-10-24"},{"lineNumber":63,"author":{"gitId":"jonyeokj"},"content":"        String expectedMessage \u003d Time.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-10-18"},{"lineNumber":64,"author":{"gitId":"jonyeokj"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, meeting::toModelType);","lastModifiedDate":"2023-10-18"},{"lineNumber":65,"author":{"gitId":"jonyeokj"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":66,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":67,"author":{"gitId":"jonyeokj"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":68,"author":{"gitId":"jonyeokj"},"content":"    public void toModelType_nullTime_throwsIllegalValueException() {","lastModifiedDate":"2023-10-18"},{"lineNumber":69,"author":{"gitId":"jonyeokj"},"content":"        JsonAdaptedMeeting meeting \u003d","lastModifiedDate":"2023-10-18"},{"lineNumber":70,"author":{"gitId":"s-peiran"},"content":"                new JsonAdaptedMeeting(VALID_TITLE, null, VALID_PLACE, VALID_DESCRIPTION, VALID_NOTES, VALID_CONTACTS);","lastModifiedDate":"2023-10-24"},{"lineNumber":71,"author":{"gitId":"jonyeokj"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Time.class.getSimpleName());","lastModifiedDate":"2023-10-18"},{"lineNumber":72,"author":{"gitId":"jonyeokj"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, meeting::toModelType);","lastModifiedDate":"2023-10-18"},{"lineNumber":73,"author":{"gitId":"jonyeokj"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":74,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":75,"author":{"gitId":"jonyeokj"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":76,"author":{"gitId":"jonyeokj"},"content":"    public void toModelType_invalidPlace_throwsIllegalValueException() {","lastModifiedDate":"2023-10-18"},{"lineNumber":77,"author":{"gitId":"jonyeokj"},"content":"        JsonAdaptedMeeting meeting \u003d","lastModifiedDate":"2023-10-18"},{"lineNumber":78,"author":{"gitId":"s-peiran"},"content":"                new JsonAdaptedMeeting(VALID_TITLE, VALID_TIME, INVALID_PLACE,","lastModifiedDate":"2023-10-24"},{"lineNumber":79,"author":{"gitId":"s-peiran"},"content":"                        VALID_DESCRIPTION, VALID_NOTES, VALID_CONTACTS);","lastModifiedDate":"2023-10-24"},{"lineNumber":80,"author":{"gitId":"jonyeokj"},"content":"        String expectedMessage \u003d Place.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-10-18"},{"lineNumber":81,"author":{"gitId":"jonyeokj"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, meeting::toModelType);","lastModifiedDate":"2023-10-18"},{"lineNumber":82,"author":{"gitId":"jonyeokj"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":83,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":84,"author":{"gitId":"jonyeokj"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":85,"author":{"gitId":"jonyeokj"},"content":"    public void toModelType_nullPlace_throwsIllegalValueException() {","lastModifiedDate":"2023-10-18"},{"lineNumber":86,"author":{"gitId":"jonyeokj"},"content":"        JsonAdaptedMeeting meeting \u003d","lastModifiedDate":"2023-10-18"},{"lineNumber":87,"author":{"gitId":"s-peiran"},"content":"                new JsonAdaptedMeeting(VALID_TITLE, VALID_TIME, null, VALID_DESCRIPTION, VALID_NOTES, VALID_CONTACTS);","lastModifiedDate":"2023-10-24"},{"lineNumber":88,"author":{"gitId":"jonyeokj"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Place.class.getSimpleName());","lastModifiedDate":"2023-10-18"},{"lineNumber":89,"author":{"gitId":"jonyeokj"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, meeting::toModelType);","lastModifiedDate":"2023-10-18"},{"lineNumber":90,"author":{"gitId":"jonyeokj"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":91,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":92,"author":{"gitId":"jonyeokj"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":93,"author":{"gitId":"jonyeokj"},"content":"    public void toModelType_nullDescription_throwsIllegalValueException() {","lastModifiedDate":"2023-10-18"},{"lineNumber":94,"author":{"gitId":"jonyeokj"},"content":"        JsonAdaptedMeeting meeting \u003d","lastModifiedDate":"2023-10-18"},{"lineNumber":95,"author":{"gitId":"s-peiran"},"content":"                new JsonAdaptedMeeting(VALID_TITLE, VALID_TIME, VALID_PLACE, null, VALID_NOTES, VALID_CONTACTS);","lastModifiedDate":"2023-10-24"},{"lineNumber":96,"author":{"gitId":"jonyeokj"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Description.class.getSimpleName());","lastModifiedDate":"2023-10-18"},{"lineNumber":97,"author":{"gitId":"jonyeokj"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, meeting::toModelType);","lastModifiedDate":"2023-10-18"},{"lineNumber":98,"author":{"gitId":"jonyeokj"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":99,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":100,"author":{"gitId":"jonyeokj"},"content":"}","lastModifiedDate":"2023-10-18"}],"authorContributionMap":{"jonyeokj":80,"jacobcuison":7,"s-peiran":13}},{"path":"src/test/java/seedu/address/storage/JsonAddressBookStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":6,"author":{"gitId":"jonyeokj"},"content":"import static seedu.address.testutil.TypicalAddressBook.ALICE;","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"jonyeokj"},"content":"import static seedu.address.testutil.TypicalAddressBook.HOON;","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"jonyeokj"},"content":"import static seedu.address.testutil.TypicalAddressBook.IDA;","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"jonyeokj"},"content":"import static seedu.address.testutil.TypicalAddressBook.getTypicalAddressBook;","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-06-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class JsonAddressBookStorageTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonAddressBookStorageTest\");","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void readAddressBook_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e readAddressBook(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private java.util.Optional\u003cReadOnlyAddressBook\u003e readAddressBook(String filePath) throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        return new JsonAddressBookStorage(Paths.get(filePath)).readAddressBook(addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String prefsFileInTestDataFolder) {","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return prefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                ? TEST_DATA_FOLDER.resolve(prefsFileInTestDataFolder)","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                : null;","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void read_missingFile_emptyResult() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertFalse(readAddressBook(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertThrows(DataLoadingException.class, () -\u003e readAddressBook(\"notJsonFormatAddressBook.json\"));","lastModifiedDate":"2023-06-14"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"jacobcuison"},"content":"    public void readAddressBook_invalidContactAddressBook_throwDataLoadingException() {","lastModifiedDate":"2023-10-03"},{"lineNumber":55,"author":{"gitId":"jacobcuison"},"content":"        assertThrows(DataLoadingException.class, () -\u003e readAddressBook(\"invalidContactAddressBook.json\"));","lastModifiedDate":"2023-10-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"jacobcuison"},"content":"    public void readAddressBook_invalidAndValidContactAddressBook_throwDataLoadingException() {","lastModifiedDate":"2023-10-03"},{"lineNumber":60,"author":{"gitId":"jacobcuison"},"content":"        assertThrows(DataLoadingException.class, () -\u003e readAddressBook(\"invalidAndValidContactAddressBook.json\"));","lastModifiedDate":"2023-10-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void readAndSaveAddressBook_allInOrder_success() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        Path filePath \u003d testFolder.resolve(\"TempAddressBook.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        AddressBook original \u003d getTypicalAddressBook();","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage jsonAddressBookStorage \u003d new JsonAddressBookStorage(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // Save in new file and read back","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        jsonAddressBookStorage.saveAddressBook(original, filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook readBack \u003d jsonAddressBookStorage.readAddressBook(filePath).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(readBack));","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // Modify data, overwrite exiting file, and read back","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"jacobcuison"},"content":"        original.addContact(HOON);","lastModifiedDate":"2023-10-03"},{"lineNumber":76,"author":{"gitId":"jacobcuison"},"content":"        original.removeContact(ALICE);","lastModifiedDate":"2023-10-03"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        jsonAddressBookStorage.saveAddressBook(original, filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        readBack \u003d jsonAddressBookStorage.readAddressBook(filePath).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(readBack));","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        // Save and read without specifying file path","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"jacobcuison"},"content":"        original.addContact(IDA);","lastModifiedDate":"2023-10-03"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        jsonAddressBookStorage.saveAddressBook(original); // file path not specified","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        readBack \u003d jsonAddressBookStorage.readAddressBook().get(); // file path not specified","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(readBack));","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void saveAddressBook_nullAddressBook_throwsNullPointerException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveAddressBook(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * Saves {@code addressBook} at the specified {@code filePath}.","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    private void saveAddressBook(ReadOnlyAddressBook addressBook, String filePath) {","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            new JsonAddressBookStorage(Paths.get(filePath))","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"                    .saveAddressBook(addressBook, addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"There should not be an error writing to the file.\", ioe);","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public void saveAddressBook_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveAddressBook(new AddressBook(), null));","lastModifiedDate":"2019-03-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":111,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"jonyeokj":5,"jacobcuison":7,"-":99}},{"path":"src/test/java/seedu/address/storage/JsonSerializableAddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"jonyeokj"},"content":"import seedu.address.testutil.TypicalAddressBook;","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class JsonSerializableAddressBookTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonSerializableAddressBookTest\");","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"jonyeokj"},"content":"    private static final Path TYPICAL_AB_FILE \u003d TEST_DATA_FOLDER.resolve(\"typicalAddressBook.json\");","lastModifiedDate":"2023-10-18"},{"lineNumber":20,"author":{"gitId":"jacobcuison"},"content":"    private static final Path INVALID_CONTACT_FILE \u003d TEST_DATA_FOLDER.resolve(\"invalidContactAddressBook.json\");","lastModifiedDate":"2023-10-03"},{"lineNumber":21,"author":{"gitId":"jacobcuison"},"content":"    private static final Path DUPLICATE_CONTACT_FILE \u003d TEST_DATA_FOLDER.resolve(\"duplicateContactAddressBook.json\");","lastModifiedDate":"2023-10-03"},{"lineNumber":22,"author":{"gitId":"jonyeokj"},"content":"    private static final Path DUPLICATE_MEETING_FILE \u003d TEST_DATA_FOLDER.resolve(\"duplicateMeetingAddressBook.json\");","lastModifiedDate":"2023-10-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"jonyeokj"},"content":"    public void toModelType_typicalAbFile_success() throws Exception {","lastModifiedDate":"2023-10-18"},{"lineNumber":26,"author":{"gitId":"jonyeokj"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(TYPICAL_AB_FILE,","lastModifiedDate":"2023-10-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        AddressBook addressBookFromFile \u003d dataFromFile.toModelType();","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"jonyeokj"},"content":"        AddressBook typicalAddressBook \u003d TypicalAddressBook.getTypicalAddressBook();","lastModifiedDate":"2023-10-12"},{"lineNumber":30,"author":{"gitId":"jonyeokj"},"content":"        assertEquals(addressBookFromFile, typicalAddressBook);","lastModifiedDate":"2023-10-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"jacobcuison"},"content":"    public void toModelType_invalidContactFile_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2023-10-03"},{"lineNumber":35,"author":{"gitId":"jacobcuison"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(INVALID_CONTACT_FILE,","lastModifiedDate":"2023-10-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"jacobcuison"},"content":"    public void toModelType_duplicateContacts_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2023-10-03"},{"lineNumber":42,"author":{"gitId":"jacobcuison"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_CONTACT_FILE,","lastModifiedDate":"2023-10-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"jacobcuison"},"content":"        assertThrows(IllegalValueException.class, JsonSerializableAddressBook.MESSAGE_DUPLICATE_CONTACT,","lastModifiedDate":"2023-10-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"jonyeokj"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":49,"author":{"gitId":"jonyeokj"},"content":"    public void toModelType_duplicateMeetings_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2023-10-18"},{"lineNumber":50,"author":{"gitId":"jonyeokj"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_MEETING_FILE,","lastModifiedDate":"2023-10-18"},{"lineNumber":51,"author":{"gitId":"jonyeokj"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2023-10-18"},{"lineNumber":52,"author":{"gitId":"jonyeokj"},"content":"        assertThrows(IllegalValueException.class, JsonSerializableAddressBook.MESSAGE_DUPLICATE_MEETING,","lastModifiedDate":"2023-10-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"                dataFromFile::toModelType);","lastModifiedDate":"2023-10-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"jonyeokj":12,"jacobcuison":7,"-":37}},{"path":"src/test/java/seedu/address/storage/StorageManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"jonyeokj"},"content":"import static seedu.address.testutil.TypicalAddressBook.getTypicalAddressBook;","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class StorageManagerTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private StorageManager storageManager;","lastModifiedDate":"2017-04-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(getTempFilePath(\"ab\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(getTempFilePath(\"prefs\"));","lastModifiedDate":"2017-02-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        storageManager \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2017-02-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Path getTempFilePath(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return testFolder.resolve(fileName);","lastModifiedDate":"2019-04-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void prefsReadSave() throws Exception {","lastModifiedDate":"2016-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-09-28"},{"lineNumber":39,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-09-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"         * {@link JsonUserPrefsStorage} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonUserPrefsStorageTest} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(300, 600, 4, 6));","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        storageManager.saveUserPrefs(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        UserPrefs retrieved \u003d storageManager.readUserPrefs().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(original, retrieved);","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void addressBookReadSave() throws Exception {","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-10-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-10-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"         * {@link JsonAddressBookStorage} class.","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonAddressBookStorageTest} class.","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        AddressBook original \u003d getTypicalAddressBook();","lastModifiedDate":"2017-07-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        storageManager.saveAddressBook(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook retrieved \u003d storageManager.readAddressBook().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(retrieved));","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-01"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void getAddressBookFilePath() {","lastModifiedDate":"2016-10-01"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertNotNull(storageManager.getAddressBookFilePath());","lastModifiedDate":"2016-10-01"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"jonyeokj":1,"-":67}},{"path":"src/test/java/seedu/address/testutil/AddressBookBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":4,"author":{"gitId":"jacobcuison"},"content":"import seedu.address.model.contact.Contact;","lastModifiedDate":"2023-10-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * A utility class to help with building Addressbook objects.","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Example usage: \u003cbr\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"jacobcuison"},"content":" *     {@code AddressBook ab \u003d new AddressBookBuilder().withContact(\"John\", \"Doe\").build();}","lastModifiedDate":"2023-10-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class AddressBookBuilder {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private AddressBook addressBook;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public AddressBookBuilder() {","lastModifiedDate":"2017-05-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        addressBook \u003d new AddressBook();","lastModifiedDate":"2017-05-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public AddressBookBuilder(AddressBook addressBook) {","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        this.addressBook \u003d addressBook;","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":24,"author":{"gitId":"jacobcuison"},"content":"     * Adds a new {@code Contact} to the {@code AddressBook} that we are building.","lastModifiedDate":"2023-10-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":26,"author":{"gitId":"jacobcuison"},"content":"    public AddressBookBuilder withContact(Contact contact) {","lastModifiedDate":"2023-10-03"},{"lineNumber":27,"author":{"gitId":"jacobcuison"},"content":"        addressBook.addContact(contact);","lastModifiedDate":"2023-10-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public AddressBook build() {","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"jacobcuison":5,"-":29}},{"path":"src/test/java/seedu/address/testutil/ContactBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-12-20"},{"lineNumber":4,"author":{"gitId":"jacobcuison"},"content":"import java.util.LinkedHashSet;","lastModifiedDate":"2023-11-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-04-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":7,"author":{"gitId":"jacobcuison"},"content":"import seedu.address.model.contact.Address;","lastModifiedDate":"2023-10-03"},{"lineNumber":8,"author":{"gitId":"jacobcuison"},"content":"import seedu.address.model.contact.Contact;","lastModifiedDate":"2023-10-03"},{"lineNumber":9,"author":{"gitId":"jacobcuison"},"content":"import seedu.address.model.contact.Email;","lastModifiedDate":"2023-10-03"},{"lineNumber":10,"author":{"gitId":"jacobcuison"},"content":"import seedu.address.model.contact.Name;","lastModifiedDate":"2023-10-03"},{"lineNumber":11,"author":{"gitId":"jacobcuison"},"content":"import seedu.address.model.contact.Phone;","lastModifiedDate":"2023-10-03"},{"lineNumber":12,"author":{"gitId":"jacobcuison"},"content":"import seedu.address.model.note.Note;","lastModifiedDate":"2023-10-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-04-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2017-04-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-03"},{"lineNumber":17,"author":{"gitId":"jacobcuison"},"content":" * A utility class to help with building Contact objects.","lastModifiedDate":"2023-10-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-03"},{"lineNumber":19,"author":{"gitId":"jacobcuison"},"content":"public class ContactBuilder {","lastModifiedDate":"2023-10-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2020-12-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_PHONE \u003d \"85355255\";","lastModifiedDate":"2017-04-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_EMAIL \u003d \"amy@gmail.com\";","lastModifiedDate":"2020-12-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_ADDRESS \u003d \"123, Jurong West Ave 6, #08-111\";","lastModifiedDate":"2017-04-05"},{"lineNumber":25,"author":{"gitId":"jacobcuison"},"content":"    public static final String DEFAULT_NOTE \u003d \"Some note\";","lastModifiedDate":"2023-10-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private Address address;","lastModifiedDate":"2017-12-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-12-20"},{"lineNumber":32,"author":{"gitId":"jacobcuison"},"content":"    private Set\u003cNote\u003e notes;","lastModifiedDate":"2023-10-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":35,"author":{"gitId":"jacobcuison"},"content":"     * Creates a {@code ContactBuilder} with the default details.","lastModifiedDate":"2023-10-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":37,"author":{"gitId":"jacobcuison"},"content":"    public ContactBuilder() {","lastModifiedDate":"2023-10-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2017-12-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2017-12-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        email \u003d new Email(DEFAULT_EMAIL);","lastModifiedDate":"2017-12-20"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        address \u003d new Address(DEFAULT_ADDRESS);","lastModifiedDate":"2017-12-20"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":43,"author":{"gitId":"jacobcuison"},"content":"        notes \u003d new LinkedHashSet\u003c\u003e();","lastModifiedDate":"2023-11-02"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-11"},{"lineNumber":47,"author":{"gitId":"jacobcuison"},"content":"     * Initializes the ContactBuilder with the data of {@code contactToCopy}.","lastModifiedDate":"2023-10-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-11"},{"lineNumber":49,"author":{"gitId":"jacobcuison"},"content":"    public ContactBuilder(Contact contactToCopy) {","lastModifiedDate":"2023-10-03"},{"lineNumber":50,"author":{"gitId":"jacobcuison"},"content":"        name \u003d contactToCopy.getName();","lastModifiedDate":"2023-10-03"},{"lineNumber":51,"author":{"gitId":"jacobcuison"},"content":"        phone \u003d contactToCopy.getPhone();","lastModifiedDate":"2023-10-03"},{"lineNumber":52,"author":{"gitId":"jacobcuison"},"content":"        email \u003d contactToCopy.getEmail();","lastModifiedDate":"2023-10-03"},{"lineNumber":53,"author":{"gitId":"jacobcuison"},"content":"        address \u003d contactToCopy.getAddress();","lastModifiedDate":"2023-10-03"},{"lineNumber":54,"author":{"gitId":"jacobcuison"},"content":"        tags \u003d new HashSet\u003c\u003e(contactToCopy.getTags());","lastModifiedDate":"2023-10-03"},{"lineNumber":55,"author":{"gitId":"jacobcuison"},"content":"        notes \u003d new LinkedHashSet\u003c\u003e(contactToCopy.getNotes());","lastModifiedDate":"2023-11-02"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-11"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-11"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":59,"author":{"gitId":"jacobcuison"},"content":"     * Sets the {@code Name} of the {@code Contact} that we are building.","lastModifiedDate":"2023-10-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":61,"author":{"gitId":"jacobcuison"},"content":"    public ContactBuilder withName(String name) {","lastModifiedDate":"2023-10-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2017-12-20"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":67,"author":{"gitId":"jacobcuison"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Contact} that we are building.","lastModifiedDate":"2023-10-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":69,"author":{"gitId":"jacobcuison"},"content":"    public ContactBuilder withTags(String ... tags) {","lastModifiedDate":"2023-10-03"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2017-12-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":75,"author":{"gitId":"jacobcuison"},"content":"     * Sets the {@code Address} of the {@code Contact} that we are building.","lastModifiedDate":"2023-10-03"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":77,"author":{"gitId":"jacobcuison"},"content":"    public ContactBuilder withAddress(String address) {","lastModifiedDate":"2023-10-03"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        this.address \u003d new Address(address);","lastModifiedDate":"2017-12-20"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":83,"author":{"gitId":"jacobcuison"},"content":"     * Sets the {@code Phone} of the {@code Contact} that we are building.","lastModifiedDate":"2023-10-03"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":85,"author":{"gitId":"jacobcuison"},"content":"    public ContactBuilder withPhone(String phone) {","lastModifiedDate":"2023-10-03"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        this.phone \u003d new Phone(phone);","lastModifiedDate":"2017-12-20"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":91,"author":{"gitId":"jacobcuison"},"content":"     * Sets the {@code Email} of the {@code Contact} that we are building.","lastModifiedDate":"2023-10-03"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":93,"author":{"gitId":"jacobcuison"},"content":"    public ContactBuilder withEmail(String email) {","lastModifiedDate":"2023-10-03"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        this.email \u003d new Email(email);","lastModifiedDate":"2017-12-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":97,"author":{"gitId":"jacobcuison"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":98,"author":{"gitId":"jacobcuison"},"content":"     * Sets the {@code Note} of the {@code Contact} that we are building.","lastModifiedDate":"2023-10-13"},{"lineNumber":99,"author":{"gitId":"jacobcuison"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":100,"author":{"gitId":"jacobcuison"},"content":"    public ContactBuilder withNotes(String ... notes) {","lastModifiedDate":"2023-10-18"},{"lineNumber":101,"author":{"gitId":"jacobcuison"},"content":"        this.notes \u003d SampleDataUtil.getNoteSet(notes);","lastModifiedDate":"2023-10-18"},{"lineNumber":102,"author":{"gitId":"jacobcuison"},"content":"        return this;","lastModifiedDate":"2023-10-13"},{"lineNumber":103,"author":{"gitId":"jacobcuison"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":105,"author":{"gitId":"jacobcuison"},"content":"    public Contact build() {","lastModifiedDate":"2023-10-03"},{"lineNumber":106,"author":{"gitId":"jacobcuison"},"content":"        return new Contact(name, phone, email, address, tags, notes);","lastModifiedDate":"2023-10-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-03"}],"authorContributionMap":{"jacobcuison":41,"-":68}},{"path":"src/test/java/seedu/address/testutil/ContactUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-03-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":11,"author":{"gitId":"jacobcuison"},"content":"import seedu.address.logic.commands.AddContactCommand;","lastModifiedDate":"2023-10-03"},{"lineNumber":12,"author":{"gitId":"jacobcuison"},"content":"import seedu.address.logic.commands.EditContactCommand.EditContactDescriptor;","lastModifiedDate":"2023-10-03"},{"lineNumber":13,"author":{"gitId":"jacobcuison"},"content":"import seedu.address.model.contact.Contact;","lastModifiedDate":"2023-10-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-03-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-04-05"},{"lineNumber":17,"author":{"gitId":"jacobcuison"},"content":" * A utility class for Contact.","lastModifiedDate":"2023-10-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-04-05"},{"lineNumber":19,"author":{"gitId":"jacobcuison"},"content":"public class ContactUtil {","lastModifiedDate":"2023-10-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-05"},{"lineNumber":22,"author":{"gitId":"jacobcuison"},"content":"     * Returns an add command string for adding the {@code contact}.","lastModifiedDate":"2023-10-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-05"},{"lineNumber":24,"author":{"gitId":"jacobcuison"},"content":"    public static String getAddCommand(Contact contact) {","lastModifiedDate":"2023-10-03"},{"lineNumber":25,"author":{"gitId":"jacobcuison"},"content":"        return AddContactCommand.COMMAND_WORD + \" \" + getContactDetails(contact);","lastModifiedDate":"2023-10-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-06"},{"lineNumber":29,"author":{"gitId":"jacobcuison"},"content":"     * Returns the part of command string for the given {@code contact}\u0027s details.","lastModifiedDate":"2023-10-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-06"},{"lineNumber":31,"author":{"gitId":"jacobcuison"},"content":"    public static String getContactDetails(Contact contact) {","lastModifiedDate":"2023-10-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-04-05"},{"lineNumber":33,"author":{"gitId":"jacobcuison"},"content":"        sb.append(PREFIX_NAME + contact.getName().fullName + \" \");","lastModifiedDate":"2023-10-03"},{"lineNumber":34,"author":{"gitId":"jacobcuison"},"content":"        sb.append(PREFIX_PHONE + contact.getPhone().value + \" \");","lastModifiedDate":"2023-10-03"},{"lineNumber":35,"author":{"gitId":"jacobcuison"},"content":"        sb.append(PREFIX_EMAIL + contact.getEmail().value + \" \");","lastModifiedDate":"2023-10-03"},{"lineNumber":36,"author":{"gitId":"jacobcuison"},"content":"        sb.append(PREFIX_ADDRESS + contact.getAddress().value + \" \");","lastModifiedDate":"2023-10-03"},{"lineNumber":37,"author":{"gitId":"jacobcuison"},"content":"        contact.getTags().stream().forEach(","lastModifiedDate":"2023-10-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                s -\u003e sb.append(PREFIX_TAG + s.tagName + \" \")","lastModifiedDate":"2017-05-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        );","lastModifiedDate":"2017-05-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-04-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-26"},{"lineNumber":44,"author":{"gitId":"jacobcuison"},"content":"     * Returns the part of command string for the given {@code EditContactDescriptor}\u0027s details.","lastModifiedDate":"2023-10-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-26"},{"lineNumber":46,"author":{"gitId":"jacobcuison"},"content":"    public static String getEditContactDescriptorDetails(EditContactDescriptor descriptor) {","lastModifiedDate":"2023-10-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2018-03-26"},{"lineNumber":48,"author":{"gitId":"s-peiran"},"content":"        descriptor.getName().ifPresent(name -\u003e sb.append(PREFIX_NAME).append(\" \").append(name.fullName).append(\" \"));","lastModifiedDate":"2023-10-13"},{"lineNumber":49,"author":{"gitId":"s-peiran"},"content":"        descriptor.getPhone().ifPresent(phone -\u003e sb.append(PREFIX_PHONE).append(\" \").append(phone.value).append(\" \"));","lastModifiedDate":"2023-10-13"},{"lineNumber":50,"author":{"gitId":"s-peiran"},"content":"        descriptor.getEmail().ifPresent(email -\u003e sb.append(PREFIX_EMAIL).append(\" \").append(email.value).append(\" \"));","lastModifiedDate":"2023-10-13"},{"lineNumber":51,"author":{"gitId":"s-peiran"},"content":"        descriptor.getAddress().ifPresent(address -\u003e sb.append(PREFIX_ADDRESS).append(\" \")","lastModifiedDate":"2023-10-13"},{"lineNumber":52,"author":{"gitId":"s-peiran"},"content":"                .append(address.value).append(\" \"));","lastModifiedDate":"2023-10-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        if (descriptor.getTags().isPresent()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            Set\u003cTag\u003e tags \u003d descriptor.getTags().get();","lastModifiedDate":"2018-03-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            if (tags.isEmpty()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"                sb.append(PREFIX_TAG);","lastModifiedDate":"2018-03-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2018-03-26"},{"lineNumber":58,"author":{"gitId":"s-peiran"},"content":"                tags.forEach(s -\u003e sb.append(PREFIX_TAG).append(\" \").append(s.tagName).append(\" \"));","lastModifiedDate":"2023-10-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-03-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2018-03-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-04-05"}],"authorContributionMap":{"jacobcuison":17,"s-peiran":6,"-":40}},{"path":"src/test/java/seedu/address/testutil/EditContactDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jacobcuison"},"content":"package seedu.address.testutil;","lastModifiedDate":"2023-10-03"},{"lineNumber":2,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":3,"author":{"gitId":"jacobcuison"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-03"},{"lineNumber":4,"author":{"gitId":"jacobcuison"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-10-03"},{"lineNumber":5,"author":{"gitId":"jacobcuison"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-10-03"},{"lineNumber":6,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":7,"author":{"gitId":"jacobcuison"},"content":"import seedu.address.logic.commands.EditContactCommand.EditContactDescriptor;","lastModifiedDate":"2023-10-03"},{"lineNumber":8,"author":{"gitId":"jacobcuison"},"content":"import seedu.address.model.contact.Address;","lastModifiedDate":"2023-10-03"},{"lineNumber":9,"author":{"gitId":"jacobcuison"},"content":"import seedu.address.model.contact.Contact;","lastModifiedDate":"2023-10-03"},{"lineNumber":10,"author":{"gitId":"jacobcuison"},"content":"import seedu.address.model.contact.Email;","lastModifiedDate":"2023-10-03"},{"lineNumber":11,"author":{"gitId":"jacobcuison"},"content":"import seedu.address.model.contact.Name;","lastModifiedDate":"2023-10-03"},{"lineNumber":12,"author":{"gitId":"jacobcuison"},"content":"import seedu.address.model.contact.Phone;","lastModifiedDate":"2023-10-03"},{"lineNumber":13,"author":{"gitId":"jacobcuison"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-10-03"},{"lineNumber":14,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":15,"author":{"gitId":"jacobcuison"},"content":"/**","lastModifiedDate":"2023-10-03"},{"lineNumber":16,"author":{"gitId":"jacobcuison"},"content":" * A utility class to help with building EditContactDescriptor objects.","lastModifiedDate":"2023-10-03"},{"lineNumber":17,"author":{"gitId":"jacobcuison"},"content":" */","lastModifiedDate":"2023-10-03"},{"lineNumber":18,"author":{"gitId":"jacobcuison"},"content":"public class EditContactDescriptorBuilder {","lastModifiedDate":"2023-10-03"},{"lineNumber":19,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":20,"author":{"gitId":"jacobcuison"},"content":"    private EditContactDescriptor descriptor;","lastModifiedDate":"2023-10-03"},{"lineNumber":21,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":22,"author":{"gitId":"jacobcuison"},"content":"    public EditContactDescriptorBuilder() {","lastModifiedDate":"2023-10-03"},{"lineNumber":23,"author":{"gitId":"jacobcuison"},"content":"        descriptor \u003d new EditContactDescriptor();","lastModifiedDate":"2023-10-03"},{"lineNumber":24,"author":{"gitId":"jacobcuison"},"content":"    }","lastModifiedDate":"2023-10-03"},{"lineNumber":25,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":26,"author":{"gitId":"jacobcuison"},"content":"    public EditContactDescriptorBuilder(EditContactDescriptor descriptor) {","lastModifiedDate":"2023-10-03"},{"lineNumber":27,"author":{"gitId":"jacobcuison"},"content":"        this.descriptor \u003d new EditContactDescriptor(descriptor);","lastModifiedDate":"2023-10-03"},{"lineNumber":28,"author":{"gitId":"jacobcuison"},"content":"    }","lastModifiedDate":"2023-10-03"},{"lineNumber":29,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":30,"author":{"gitId":"jacobcuison"},"content":"    /**","lastModifiedDate":"2023-10-03"},{"lineNumber":31,"author":{"gitId":"jacobcuison"},"content":"     * Returns an {@code EditContactDescriptor} with fields containing {@code contact}\u0027s details","lastModifiedDate":"2023-10-03"},{"lineNumber":32,"author":{"gitId":"jacobcuison"},"content":"     */","lastModifiedDate":"2023-10-03"},{"lineNumber":33,"author":{"gitId":"jacobcuison"},"content":"    public EditContactDescriptorBuilder(Contact contact) {","lastModifiedDate":"2023-10-03"},{"lineNumber":34,"author":{"gitId":"jacobcuison"},"content":"        descriptor \u003d new EditContactDescriptor();","lastModifiedDate":"2023-10-03"},{"lineNumber":35,"author":{"gitId":"jacobcuison"},"content":"        descriptor.setName(contact.getName());","lastModifiedDate":"2023-10-03"},{"lineNumber":36,"author":{"gitId":"jacobcuison"},"content":"        descriptor.setPhone(contact.getPhone());","lastModifiedDate":"2023-10-03"},{"lineNumber":37,"author":{"gitId":"jacobcuison"},"content":"        descriptor.setEmail(contact.getEmail());","lastModifiedDate":"2023-10-03"},{"lineNumber":38,"author":{"gitId":"jacobcuison"},"content":"        descriptor.setAddress(contact.getAddress());","lastModifiedDate":"2023-10-03"},{"lineNumber":39,"author":{"gitId":"jacobcuison"},"content":"        descriptor.setTags(contact.getTags());","lastModifiedDate":"2023-10-03"},{"lineNumber":40,"author":{"gitId":"jacobcuison"},"content":"    }","lastModifiedDate":"2023-10-03"},{"lineNumber":41,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":42,"author":{"gitId":"jacobcuison"},"content":"    /**","lastModifiedDate":"2023-10-03"},{"lineNumber":43,"author":{"gitId":"jacobcuison"},"content":"     * Sets the {@code Name} of the {@code EditContactDescriptor} that we are building.","lastModifiedDate":"2023-10-03"},{"lineNumber":44,"author":{"gitId":"jacobcuison"},"content":"     */","lastModifiedDate":"2023-10-03"},{"lineNumber":45,"author":{"gitId":"jacobcuison"},"content":"    public EditContactDescriptorBuilder withName(String name) {","lastModifiedDate":"2023-10-03"},{"lineNumber":46,"author":{"gitId":"jacobcuison"},"content":"        descriptor.setName(new Name(name));","lastModifiedDate":"2023-10-03"},{"lineNumber":47,"author":{"gitId":"jacobcuison"},"content":"        return this;","lastModifiedDate":"2023-10-03"},{"lineNumber":48,"author":{"gitId":"jacobcuison"},"content":"    }","lastModifiedDate":"2023-10-03"},{"lineNumber":49,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":50,"author":{"gitId":"jacobcuison"},"content":"    /**","lastModifiedDate":"2023-10-03"},{"lineNumber":51,"author":{"gitId":"jacobcuison"},"content":"     * Sets the {@code Phone} of the {@code EditContactDescriptor} that we are building.","lastModifiedDate":"2023-10-03"},{"lineNumber":52,"author":{"gitId":"jacobcuison"},"content":"     */","lastModifiedDate":"2023-10-03"},{"lineNumber":53,"author":{"gitId":"jacobcuison"},"content":"    public EditContactDescriptorBuilder withPhone(String phone) {","lastModifiedDate":"2023-10-03"},{"lineNumber":54,"author":{"gitId":"jacobcuison"},"content":"        descriptor.setPhone(new Phone(phone));","lastModifiedDate":"2023-10-03"},{"lineNumber":55,"author":{"gitId":"jacobcuison"},"content":"        return this;","lastModifiedDate":"2023-10-03"},{"lineNumber":56,"author":{"gitId":"jacobcuison"},"content":"    }","lastModifiedDate":"2023-10-03"},{"lineNumber":57,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":58,"author":{"gitId":"jacobcuison"},"content":"    /**","lastModifiedDate":"2023-10-03"},{"lineNumber":59,"author":{"gitId":"jacobcuison"},"content":"     * Sets the {@code Email} of the {@code EditContactDescriptor} that we are building.","lastModifiedDate":"2023-10-03"},{"lineNumber":60,"author":{"gitId":"jacobcuison"},"content":"     */","lastModifiedDate":"2023-10-03"},{"lineNumber":61,"author":{"gitId":"jacobcuison"},"content":"    public EditContactDescriptorBuilder withEmail(String email) {","lastModifiedDate":"2023-10-03"},{"lineNumber":62,"author":{"gitId":"jacobcuison"},"content":"        descriptor.setEmail(new Email(email));","lastModifiedDate":"2023-10-03"},{"lineNumber":63,"author":{"gitId":"jacobcuison"},"content":"        return this;","lastModifiedDate":"2023-10-03"},{"lineNumber":64,"author":{"gitId":"jacobcuison"},"content":"    }","lastModifiedDate":"2023-10-03"},{"lineNumber":65,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":66,"author":{"gitId":"jacobcuison"},"content":"    /**","lastModifiedDate":"2023-10-03"},{"lineNumber":67,"author":{"gitId":"jacobcuison"},"content":"     * Sets the {@code Address} of the {@code EditContactDescriptor} that we are building.","lastModifiedDate":"2023-10-03"},{"lineNumber":68,"author":{"gitId":"jacobcuison"},"content":"     */","lastModifiedDate":"2023-10-03"},{"lineNumber":69,"author":{"gitId":"jacobcuison"},"content":"    public EditContactDescriptorBuilder withAddress(String address) {","lastModifiedDate":"2023-10-03"},{"lineNumber":70,"author":{"gitId":"jacobcuison"},"content":"        descriptor.setAddress(new Address(address));","lastModifiedDate":"2023-10-03"},{"lineNumber":71,"author":{"gitId":"jacobcuison"},"content":"        return this;","lastModifiedDate":"2023-10-03"},{"lineNumber":72,"author":{"gitId":"jacobcuison"},"content":"    }","lastModifiedDate":"2023-10-03"},{"lineNumber":73,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":74,"author":{"gitId":"jacobcuison"},"content":"    /**","lastModifiedDate":"2023-10-03"},{"lineNumber":75,"author":{"gitId":"jacobcuison"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code EditContactDescriptor}","lastModifiedDate":"2023-10-03"},{"lineNumber":76,"author":{"gitId":"jacobcuison"},"content":"     * that we are building.","lastModifiedDate":"2023-10-03"},{"lineNumber":77,"author":{"gitId":"jacobcuison"},"content":"     */","lastModifiedDate":"2023-10-03"},{"lineNumber":78,"author":{"gitId":"jacobcuison"},"content":"    public EditContactDescriptorBuilder withTags(String... tags) {","lastModifiedDate":"2023-10-03"},{"lineNumber":79,"author":{"gitId":"jacobcuison"},"content":"        Set\u003cTag\u003e tagSet \u003d Stream.of(tags).map(Tag::new).collect(Collectors.toSet());","lastModifiedDate":"2023-10-03"},{"lineNumber":80,"author":{"gitId":"jacobcuison"},"content":"        descriptor.setTags(tagSet);","lastModifiedDate":"2023-10-03"},{"lineNumber":81,"author":{"gitId":"jacobcuison"},"content":"        return this;","lastModifiedDate":"2023-10-03"},{"lineNumber":82,"author":{"gitId":"jacobcuison"},"content":"    }","lastModifiedDate":"2023-10-03"},{"lineNumber":83,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":84,"author":{"gitId":"jacobcuison"},"content":"    public EditContactDescriptor build() {","lastModifiedDate":"2023-10-03"},{"lineNumber":85,"author":{"gitId":"jacobcuison"},"content":"        return descriptor;","lastModifiedDate":"2023-10-03"},{"lineNumber":86,"author":{"gitId":"jacobcuison"},"content":"    }","lastModifiedDate":"2023-10-03"},{"lineNumber":87,"author":{"gitId":"jacobcuison"},"content":"}","lastModifiedDate":"2023-10-03"}],"authorContributionMap":{"jacobcuison":87}},{"path":"src/test/java/seedu/address/testutil/EditMeetingDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jonyeokj"},"content":"package seedu.address.testutil;","lastModifiedDate":"2023-10-18"},{"lineNumber":2,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":3,"author":{"gitId":"jonyeokj"},"content":"import seedu.address.logic.commands.EditMeetingCommand.EditMeetingDescriptor;","lastModifiedDate":"2023-10-18"},{"lineNumber":4,"author":{"gitId":"jonyeokj"},"content":"import seedu.address.model.meeting.Description;","lastModifiedDate":"2023-10-18"},{"lineNumber":5,"author":{"gitId":"jonyeokj"},"content":"import seedu.address.model.meeting.Meeting;","lastModifiedDate":"2023-10-18"},{"lineNumber":6,"author":{"gitId":"jonyeokj"},"content":"import seedu.address.model.meeting.Place;","lastModifiedDate":"2023-10-18"},{"lineNumber":7,"author":{"gitId":"jonyeokj"},"content":"import seedu.address.model.meeting.Time;","lastModifiedDate":"2023-10-18"},{"lineNumber":8,"author":{"gitId":"jonyeokj"},"content":"import seedu.address.model.meeting.Title;","lastModifiedDate":"2023-10-18"},{"lineNumber":9,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":10,"author":{"gitId":"jonyeokj"},"content":"/**","lastModifiedDate":"2023-10-18"},{"lineNumber":11,"author":{"gitId":"jonyeokj"},"content":" * A utility class to help with building EditMeetingDescriptor objects.","lastModifiedDate":"2023-10-18"},{"lineNumber":12,"author":{"gitId":"jonyeokj"},"content":" */","lastModifiedDate":"2023-10-18"},{"lineNumber":13,"author":{"gitId":"jonyeokj"},"content":"public class EditMeetingDescriptorBuilder {","lastModifiedDate":"2023-10-18"},{"lineNumber":14,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":15,"author":{"gitId":"jonyeokj"},"content":"    private EditMeetingDescriptor descriptor;","lastModifiedDate":"2023-10-18"},{"lineNumber":16,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":17,"author":{"gitId":"jonyeokj"},"content":"    public EditMeetingDescriptorBuilder() {","lastModifiedDate":"2023-10-18"},{"lineNumber":18,"author":{"gitId":"jonyeokj"},"content":"        descriptor \u003d new EditMeetingDescriptor();","lastModifiedDate":"2023-10-18"},{"lineNumber":19,"author":{"gitId":"jonyeokj"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":20,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":21,"author":{"gitId":"jonyeokj"},"content":"    public EditMeetingDescriptorBuilder(EditMeetingDescriptor descriptor) {","lastModifiedDate":"2023-10-18"},{"lineNumber":22,"author":{"gitId":"jonyeokj"},"content":"        this.descriptor \u003d new EditMeetingDescriptor(descriptor);","lastModifiedDate":"2023-10-18"},{"lineNumber":23,"author":{"gitId":"jonyeokj"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":24,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":25,"author":{"gitId":"jonyeokj"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":26,"author":{"gitId":"jonyeokj"},"content":"     * Returns an {@code EditMeetingDescriptor} with fields containing {@code Meeting}\u0027s details","lastModifiedDate":"2023-10-18"},{"lineNumber":27,"author":{"gitId":"jonyeokj"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":28,"author":{"gitId":"jonyeokj"},"content":"    public EditMeetingDescriptorBuilder(Meeting meeting) {","lastModifiedDate":"2023-10-18"},{"lineNumber":29,"author":{"gitId":"jonyeokj"},"content":"        descriptor \u003d new EditMeetingDescriptor();","lastModifiedDate":"2023-10-18"},{"lineNumber":30,"author":{"gitId":"jonyeokj"},"content":"        descriptor.setTitle(meeting.getTitle());","lastModifiedDate":"2023-10-18"},{"lineNumber":31,"author":{"gitId":"jonyeokj"},"content":"        descriptor.setTime(meeting.getTime());","lastModifiedDate":"2023-10-18"},{"lineNumber":32,"author":{"gitId":"jonyeokj"},"content":"        descriptor.setPlace(meeting.getPlace());","lastModifiedDate":"2023-10-18"},{"lineNumber":33,"author":{"gitId":"jonyeokj"},"content":"        descriptor.setDescription(meeting.getDescription());","lastModifiedDate":"2023-10-18"},{"lineNumber":34,"author":{"gitId":"jonyeokj"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":35,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":36,"author":{"gitId":"jonyeokj"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":37,"author":{"gitId":"jonyeokj"},"content":"     * Sets the {@code Title} of the {@code EditMeetingDescriptor} that we are building.","lastModifiedDate":"2023-10-18"},{"lineNumber":38,"author":{"gitId":"jonyeokj"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":39,"author":{"gitId":"jonyeokj"},"content":"    public EditMeetingDescriptorBuilder withTitle(String title) {","lastModifiedDate":"2023-10-18"},{"lineNumber":40,"author":{"gitId":"jonyeokj"},"content":"        descriptor.setTitle(new Title(title));","lastModifiedDate":"2023-10-18"},{"lineNumber":41,"author":{"gitId":"jonyeokj"},"content":"        return this;","lastModifiedDate":"2023-10-18"},{"lineNumber":42,"author":{"gitId":"jonyeokj"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":43,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":44,"author":{"gitId":"jonyeokj"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":45,"author":{"gitId":"jonyeokj"},"content":"     * Sets the {@code Time} of the {@code EditMeetingDescriptor} that we are building.","lastModifiedDate":"2023-10-18"},{"lineNumber":46,"author":{"gitId":"jonyeokj"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":47,"author":{"gitId":"jonyeokj"},"content":"    public EditMeetingDescriptorBuilder withTime(String time) {","lastModifiedDate":"2023-10-18"},{"lineNumber":48,"author":{"gitId":"jonyeokj"},"content":"        descriptor.setTime(new Time(time));","lastModifiedDate":"2023-10-18"},{"lineNumber":49,"author":{"gitId":"jonyeokj"},"content":"        return this;","lastModifiedDate":"2023-10-18"},{"lineNumber":50,"author":{"gitId":"jonyeokj"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":51,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":52,"author":{"gitId":"jonyeokj"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":53,"author":{"gitId":"jonyeokj"},"content":"     * Sets the {@code Place} of the {@code EditMeetingDescriptor} that we are building.","lastModifiedDate":"2023-10-18"},{"lineNumber":54,"author":{"gitId":"jonyeokj"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":55,"author":{"gitId":"jonyeokj"},"content":"    public EditMeetingDescriptorBuilder withPlace(String place) {","lastModifiedDate":"2023-10-18"},{"lineNumber":56,"author":{"gitId":"jonyeokj"},"content":"        descriptor.setPlace(new Place(place));","lastModifiedDate":"2023-10-18"},{"lineNumber":57,"author":{"gitId":"jonyeokj"},"content":"        return this;","lastModifiedDate":"2023-10-18"},{"lineNumber":58,"author":{"gitId":"jonyeokj"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":59,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":60,"author":{"gitId":"jonyeokj"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":61,"author":{"gitId":"jonyeokj"},"content":"     * Sets the {@code Description} of the {@code EditMeetingDescriptor} that we are building.","lastModifiedDate":"2023-10-18"},{"lineNumber":62,"author":{"gitId":"jonyeokj"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":63,"author":{"gitId":"jonyeokj"},"content":"    public EditMeetingDescriptorBuilder withDescription(String description) {","lastModifiedDate":"2023-10-18"},{"lineNumber":64,"author":{"gitId":"jonyeokj"},"content":"        descriptor.setDescription(new Description(description));","lastModifiedDate":"2023-10-18"},{"lineNumber":65,"author":{"gitId":"jonyeokj"},"content":"        return this;","lastModifiedDate":"2023-10-18"},{"lineNumber":66,"author":{"gitId":"jonyeokj"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":67,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":68,"author":{"gitId":"jonyeokj"},"content":"    public EditMeetingDescriptor build() {","lastModifiedDate":"2023-10-18"},{"lineNumber":69,"author":{"gitId":"jonyeokj"},"content":"        return descriptor;","lastModifiedDate":"2023-10-18"},{"lineNumber":70,"author":{"gitId":"jonyeokj"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":71,"author":{"gitId":"jonyeokj"},"content":"}","lastModifiedDate":"2023-10-18"},{"lineNumber":72,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-18"}],"authorContributionMap":{"jonyeokj":72}},{"path":"src/test/java/seedu/address/testutil/MeetingBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chiayunrong"},"content":"package seedu.address.testutil;","lastModifiedDate":"2023-10-03"},{"lineNumber":2,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":3,"author":{"gitId":"s-peiran"},"content":"import static seedu.address.model.util.SampleDataUtil.getNoteSet;","lastModifiedDate":"2023-10-25"},{"lineNumber":4,"author":{"gitId":"s-peiran"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":5,"author":{"gitId":"s-peiran"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-24"},{"lineNumber":6,"author":{"gitId":"jacobcuison"},"content":"import java.util.LinkedHashSet;","lastModifiedDate":"2023-11-02"},{"lineNumber":7,"author":{"gitId":"jacobcuison"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-18"},{"lineNumber":8,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":9,"author":{"gitId":"s-peiran"},"content":"import seedu.address.model.contact.Contact;","lastModifiedDate":"2023-10-24"},{"lineNumber":10,"author":{"gitId":"chiayunrong"},"content":"import seedu.address.model.meeting.Description;","lastModifiedDate":"2023-10-03"},{"lineNumber":11,"author":{"gitId":"chiayunrong"},"content":"import seedu.address.model.meeting.Meeting;","lastModifiedDate":"2023-10-03"},{"lineNumber":12,"author":{"gitId":"jonyeokj"},"content":"import seedu.address.model.meeting.Place;","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"chiayunrong"},"content":"import seedu.address.model.meeting.Time;","lastModifiedDate":"2023-10-03"},{"lineNumber":14,"author":{"gitId":"chiayunrong"},"content":"import seedu.address.model.meeting.Title;","lastModifiedDate":"2023-10-03"},{"lineNumber":15,"author":{"gitId":"jacobcuison"},"content":"import seedu.address.model.note.Note;","lastModifiedDate":"2023-10-18"},{"lineNumber":16,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":17,"author":{"gitId":"chiayunrong"},"content":"/**","lastModifiedDate":"2023-10-03"},{"lineNumber":18,"author":{"gitId":"chiayunrong"},"content":" * A utility class to help with building Person objects.","lastModifiedDate":"2023-10-03"},{"lineNumber":19,"author":{"gitId":"chiayunrong"},"content":" */","lastModifiedDate":"2023-10-03"},{"lineNumber":20,"author":{"gitId":"chiayunrong"},"content":"public class MeetingBuilder {","lastModifiedDate":"2023-10-03"},{"lineNumber":21,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":22,"author":{"gitId":"chiayunrong"},"content":"    public static final String DEFAULT_TITLE \u003d \"CS2103 Weekly Meeting\";","lastModifiedDate":"2023-10-03"},{"lineNumber":23,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":24,"author":{"gitId":"chiayunrong"},"content":"    public static final String DEFAULT_TIME \u003d \"03/10/2023 19:00\";","lastModifiedDate":"2023-10-03"},{"lineNumber":25,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":26,"author":{"gitId":"jonyeokj"},"content":"    public static final String DEFAULT_PLACE \u003d \"Zoom\";","lastModifiedDate":"2023-10-11"},{"lineNumber":27,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":28,"author":{"gitId":"chiayunrong"},"content":"    public static final String DEFAULT_DESCRIPTION \u003d \"No description\";","lastModifiedDate":"2023-10-03"},{"lineNumber":29,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":30,"author":{"gitId":"chiayunrong"},"content":"    private Title title;","lastModifiedDate":"2023-10-03"},{"lineNumber":31,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":32,"author":{"gitId":"chiayunrong"},"content":"    private Time time;","lastModifiedDate":"2023-10-03"},{"lineNumber":33,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":34,"author":{"gitId":"jonyeokj"},"content":"    private Place place;","lastModifiedDate":"2023-10-11"},{"lineNumber":35,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":36,"author":{"gitId":"chiayunrong"},"content":"    private Description description;","lastModifiedDate":"2023-10-03"},{"lineNumber":37,"author":{"gitId":"jacobcuison"},"content":"    private Set\u003cNote\u003e notes;","lastModifiedDate":"2023-10-18"},{"lineNumber":38,"author":{"gitId":"s-peiran"},"content":"    private ArrayList\u003cContact\u003e contacts;","lastModifiedDate":"2023-10-24"},{"lineNumber":39,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":40,"author":{"gitId":"chiayunrong"},"content":"    /**","lastModifiedDate":"2023-10-03"},{"lineNumber":41,"author":{"gitId":"chiayunrong"},"content":"     * Creates a {@code MeetingBuilder} with the default details.","lastModifiedDate":"2023-10-03"},{"lineNumber":42,"author":{"gitId":"chiayunrong"},"content":"     */","lastModifiedDate":"2023-10-03"},{"lineNumber":43,"author":{"gitId":"chiayunrong"},"content":"    public MeetingBuilder() {","lastModifiedDate":"2023-10-03"},{"lineNumber":44,"author":{"gitId":"chiayunrong"},"content":"        title \u003d new Title(DEFAULT_TITLE);","lastModifiedDate":"2023-10-03"},{"lineNumber":45,"author":{"gitId":"chiayunrong"},"content":"        time \u003d new Time(DEFAULT_TIME);","lastModifiedDate":"2023-10-03"},{"lineNumber":46,"author":{"gitId":"jonyeokj"},"content":"        place \u003d new Place(DEFAULT_PLACE);","lastModifiedDate":"2023-10-11"},{"lineNumber":47,"author":{"gitId":"chiayunrong"},"content":"        description \u003d new Description(DEFAULT_DESCRIPTION);","lastModifiedDate":"2023-10-03"},{"lineNumber":48,"author":{"gitId":"jacobcuison"},"content":"        notes \u003d new LinkedHashSet\u003cNote\u003e();","lastModifiedDate":"2023-11-02"},{"lineNumber":49,"author":{"gitId":"s-peiran"},"content":"        contacts \u003d new ArrayList\u003cContact\u003e();","lastModifiedDate":"2023-10-31"},{"lineNumber":50,"author":{"gitId":"jacobcuison"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":51,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":52,"author":{"gitId":"jacobcuison"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":53,"author":{"gitId":"jacobcuison"},"content":"     * Initializes the MeetingBuilder with the data of {@code meetingToCopy}.","lastModifiedDate":"2023-10-18"},{"lineNumber":54,"author":{"gitId":"jacobcuison"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":55,"author":{"gitId":"jacobcuison"},"content":"    public MeetingBuilder(Meeting meetingToCopy) {","lastModifiedDate":"2023-10-18"},{"lineNumber":56,"author":{"gitId":"jacobcuison"},"content":"        title \u003d meetingToCopy.getTitle();","lastModifiedDate":"2023-10-18"},{"lineNumber":57,"author":{"gitId":"jacobcuison"},"content":"        time \u003d meetingToCopy.getTime();","lastModifiedDate":"2023-10-18"},{"lineNumber":58,"author":{"gitId":"jacobcuison"},"content":"        place \u003d meetingToCopy.getPlace();","lastModifiedDate":"2023-10-18"},{"lineNumber":59,"author":{"gitId":"jacobcuison"},"content":"        description \u003d meetingToCopy.getDescription();","lastModifiedDate":"2023-10-18"},{"lineNumber":60,"author":{"gitId":"jacobcuison"},"content":"        notes \u003d new LinkedHashSet\u003c\u003e(meetingToCopy.getNotes());","lastModifiedDate":"2023-11-02"},{"lineNumber":61,"author":{"gitId":"s-peiran"},"content":"        contacts \u003d new ArrayList\u003c\u003e(meetingToCopy.getContacts());","lastModifiedDate":"2023-10-24"},{"lineNumber":62,"author":{"gitId":"chiayunrong"},"content":"    }","lastModifiedDate":"2023-10-03"},{"lineNumber":63,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":64,"author":{"gitId":"chiayunrong"},"content":"    /**","lastModifiedDate":"2023-10-03"},{"lineNumber":65,"author":{"gitId":"chiayunrong"},"content":"     * Sets the {@code Title} of the {@code Meeting} that we are building.","lastModifiedDate":"2023-10-03"},{"lineNumber":66,"author":{"gitId":"chiayunrong"},"content":"     */","lastModifiedDate":"2023-10-03"},{"lineNumber":67,"author":{"gitId":"chiayunrong"},"content":"    public MeetingBuilder withTitle(String title) {","lastModifiedDate":"2023-10-03"},{"lineNumber":68,"author":{"gitId":"chiayunrong"},"content":"        this.title \u003d new Title(title);","lastModifiedDate":"2023-10-03"},{"lineNumber":69,"author":{"gitId":"chiayunrong"},"content":"        return this;","lastModifiedDate":"2023-10-03"},{"lineNumber":70,"author":{"gitId":"chiayunrong"},"content":"    }","lastModifiedDate":"2023-10-03"},{"lineNumber":71,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":72,"author":{"gitId":"chiayunrong"},"content":"    /**","lastModifiedDate":"2023-10-03"},{"lineNumber":73,"author":{"gitId":"chiayunrong"},"content":"     * Sets the {@code Time} of the {@code Meeting} that we are building.","lastModifiedDate":"2023-10-03"},{"lineNumber":74,"author":{"gitId":"chiayunrong"},"content":"     */","lastModifiedDate":"2023-10-03"},{"lineNumber":75,"author":{"gitId":"chiayunrong"},"content":"    public MeetingBuilder withTime(String time) {","lastModifiedDate":"2023-10-03"},{"lineNumber":76,"author":{"gitId":"chiayunrong"},"content":"        this.time \u003d new Time(time);","lastModifiedDate":"2023-10-03"},{"lineNumber":77,"author":{"gitId":"chiayunrong"},"content":"        return this;","lastModifiedDate":"2023-10-03"},{"lineNumber":78,"author":{"gitId":"chiayunrong"},"content":"    }","lastModifiedDate":"2023-10-03"},{"lineNumber":79,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":80,"author":{"gitId":"chiayunrong"},"content":"    /**","lastModifiedDate":"2023-10-03"},{"lineNumber":81,"author":{"gitId":"jonyeokj"},"content":"     * Sets the {@code Place} of the {@code Meeting} that we are building.","lastModifiedDate":"2023-10-11"},{"lineNumber":82,"author":{"gitId":"chiayunrong"},"content":"     */","lastModifiedDate":"2023-10-03"},{"lineNumber":83,"author":{"gitId":"jonyeokj"},"content":"    public MeetingBuilder withPlace(String place) {","lastModifiedDate":"2023-10-11"},{"lineNumber":84,"author":{"gitId":"jonyeokj"},"content":"        this.place \u003d new Place(place);","lastModifiedDate":"2023-10-11"},{"lineNumber":85,"author":{"gitId":"chiayunrong"},"content":"        return this;","lastModifiedDate":"2023-10-03"},{"lineNumber":86,"author":{"gitId":"chiayunrong"},"content":"    }","lastModifiedDate":"2023-10-03"},{"lineNumber":87,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":88,"author":{"gitId":"chiayunrong"},"content":"    /**","lastModifiedDate":"2023-10-03"},{"lineNumber":89,"author":{"gitId":"chiayunrong"},"content":"     * Sets the {@code Description} of the {@code Meeting} that we are building.","lastModifiedDate":"2023-10-03"},{"lineNumber":90,"author":{"gitId":"chiayunrong"},"content":"     */","lastModifiedDate":"2023-10-03"},{"lineNumber":91,"author":{"gitId":"chiayunrong"},"content":"    public MeetingBuilder withDescription(String description) {","lastModifiedDate":"2023-10-03"},{"lineNumber":92,"author":{"gitId":"chiayunrong"},"content":"        this.description \u003d new Description(description);","lastModifiedDate":"2023-10-03"},{"lineNumber":93,"author":{"gitId":"chiayunrong"},"content":"        return this;","lastModifiedDate":"2023-10-03"},{"lineNumber":94,"author":{"gitId":"chiayunrong"},"content":"    }","lastModifiedDate":"2023-10-03"},{"lineNumber":95,"author":{"gitId":"chiayunrong"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":96,"author":{"gitId":"jacobcuison"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":97,"author":{"gitId":"jacobcuison"},"content":"     * Sets the {@code Notes} of the {@code Meeting} that we are building.","lastModifiedDate":"2023-10-18"},{"lineNumber":98,"author":{"gitId":"jacobcuison"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":99,"author":{"gitId":"jacobcuison"},"content":"    public MeetingBuilder withNotes(String... notes) {","lastModifiedDate":"2023-10-18"},{"lineNumber":100,"author":{"gitId":"s-peiran"},"content":"        this.notes \u003d getNoteSet(notes);","lastModifiedDate":"2023-10-25"},{"lineNumber":101,"author":{"gitId":"jacobcuison"},"content":"        return this;","lastModifiedDate":"2023-10-18"},{"lineNumber":102,"author":{"gitId":"jacobcuison"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":103,"author":{"gitId":"jacobcuison"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":104,"author":{"gitId":"chiayunrong"},"content":"    public Meeting build() {","lastModifiedDate":"2023-10-03"},{"lineNumber":105,"author":{"gitId":"s-peiran"},"content":"        return new Meeting(title, time, place, description, notes, contacts);","lastModifiedDate":"2023-10-24"},{"lineNumber":106,"author":{"gitId":"chiayunrong"},"content":"    }","lastModifiedDate":"2023-10-03"},{"lineNumber":107,"author":{"gitId":"chiayunrong"},"content":"}","lastModifiedDate":"2023-10-03"}],"authorContributionMap":{"jonyeokj":7,"jacobcuison":24,"s-peiran":9,"chiayunrong":67}},{"path":"src/test/java/seedu/address/testutil/TestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-07-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-07-30"},{"lineNumber":10,"author":{"gitId":"jacobcuison"},"content":"import seedu.address.model.contact.Contact;","lastModifiedDate":"2023-10-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * A utility class for test cases.","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class TestUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Folder used for temp files created during testing. Ignored by Git.","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Path SANDBOX_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"sandbox\");","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Appends {@code fileName} to the sandbox folder path and returns the resulting path.","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Creates the sandbox folder if it doesn\u0027t exist.","lastModifiedDate":"2016-09-28"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static Path getFilePathInSandboxFolder(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            Files.createDirectories(SANDBOX_FOLDER);","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2016-09-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return SANDBOX_FOLDER.resolve(fileName);","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":36,"author":{"gitId":"jacobcuison"},"content":"     * Returns the middle index of the contact in the {@code model}\u0027s contact list.","lastModifiedDate":"2023-10-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static Index getMidIndex(Model model) {","lastModifiedDate":"2017-07-30"},{"lineNumber":39,"author":{"gitId":"jacobcuison"},"content":"        return Index.fromOneBased(model.getFilteredContactList().size() / 2);","lastModifiedDate":"2023-10-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":43,"author":{"gitId":"jacobcuison"},"content":"     * Returns the last index of the contact in the {@code model}\u0027s contact list.","lastModifiedDate":"2023-10-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static Index getLastIndex(Model model) {","lastModifiedDate":"2017-07-30"},{"lineNumber":46,"author":{"gitId":"jacobcuison"},"content":"        return Index.fromOneBased(model.getFilteredContactList().size());","lastModifiedDate":"2023-10-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-30"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":50,"author":{"gitId":"jacobcuison"},"content":"     * Returns the contact in the {@code model}\u0027s contact list at {@code index}.","lastModifiedDate":"2023-10-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":52,"author":{"gitId":"jacobcuison"},"content":"    public static Contact getContact(Model model, Index index) {","lastModifiedDate":"2023-10-03"},{"lineNumber":53,"author":{"gitId":"jacobcuison"},"content":"        return model.getFilteredContactList().get(index.getZeroBased());","lastModifiedDate":"2023-10-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"jacobcuison":8,"-":47}},{"path":"src/test/java/seedu/address/testutil/TypicalAddressBook.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":3,"author":{"gitId":"jacobcuison"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"jacobcuison"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"jacobcuison"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"jacobcuison"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"jacobcuison"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"jacobcuison"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"jacobcuison"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NOTE_AMY;","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"jacobcuison"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"jacobcuison"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"jacobcuison"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"jacobcuison"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-08-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-08-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-08-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":20,"author":{"gitId":"jacobcuison"},"content":"import seedu.address.model.contact.Contact;","lastModifiedDate":"2023-10-03"},{"lineNumber":21,"author":{"gitId":"jonyeokj"},"content":"import seedu.address.model.meeting.Meeting;","lastModifiedDate":"2023-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-13"},{"lineNumber":24,"author":{"gitId":"jacobcuison"},"content":" * A utility class containing a list of {@code Contact} objects to be used in tests.","lastModifiedDate":"2023-10-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-13"},{"lineNumber":26,"author":{"gitId":"jonyeokj"},"content":"public class TypicalAddressBook {","lastModifiedDate":"2023-10-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":28,"author":{"gitId":"jacobcuison"},"content":"    public static final Contact ALICE \u003d new ContactBuilder().withName(\"Alice Pauline\")","lastModifiedDate":"2023-10-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        .withAddress(\"123, Jurong West Ave 6, #08-111\").withEmail(\"alice@example.com\")","lastModifiedDate":"2017-04-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        .withPhone(\"94351253\")","lastModifiedDate":"2018-04-19"},{"lineNumber":31,"author":{"gitId":"jacobcuison"},"content":"        .withTags(\"friends\")","lastModifiedDate":"2023-10-13"},{"lineNumber":32,"author":{"gitId":"jacobcuison"},"content":"        .build();","lastModifiedDate":"2023-10-13"},{"lineNumber":33,"author":{"gitId":"jacobcuison"},"content":"    public static final Contact BENSON \u003d new ContactBuilder().withName(\"Benson Meier\")","lastModifiedDate":"2023-10-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        .withAddress(\"311, Clementi Ave 2, #02-25\")","lastModifiedDate":"2017-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        .withEmail(\"johnd@example.com\").withPhone(\"98765432\")","lastModifiedDate":"2017-04-05"},{"lineNumber":36,"author":{"gitId":"jacobcuison"},"content":"        .withTags(\"owesMoney\", \"friends\")","lastModifiedDate":"2023-10-13"},{"lineNumber":37,"author":{"gitId":"jacobcuison"},"content":"        .withNotes(\"Likes chicken\", \"Hates tiramisu\").build();","lastModifiedDate":"2023-10-18"},{"lineNumber":38,"author":{"gitId":"jacobcuison"},"content":"    public static final Contact CARL \u003d new ContactBuilder().withName(\"Carl Kurz\").withPhone(\"95352563\")","lastModifiedDate":"2023-10-03"},{"lineNumber":39,"author":{"gitId":"jacobcuison"},"content":"        .withEmail(\"heinz@example.com\").withAddress(\"wall street\")","lastModifiedDate":"2023-10-13"},{"lineNumber":40,"author":{"gitId":"jacobcuison"},"content":"        .withNotes(\"Enjoys rom-coms\").build();","lastModifiedDate":"2023-10-18"},{"lineNumber":41,"author":{"gitId":"jacobcuison"},"content":"    public static final Contact DANIEL \u003d new ContactBuilder().withName(\"Daniel Meier\").withPhone(\"87652533\")","lastModifiedDate":"2023-10-03"},{"lineNumber":42,"author":{"gitId":"jacobcuison"},"content":"        .withEmail(\"cornelia@example.com\").withAddress(\"10th street\").withTags(\"friends\")","lastModifiedDate":"2023-10-13"},{"lineNumber":43,"author":{"gitId":"jacobcuison"},"content":"        .withNotes(\"Hates football\").build();","lastModifiedDate":"2023-10-18"},{"lineNumber":44,"author":{"gitId":"jacobcuison"},"content":"    public static final Contact ELLE \u003d new ContactBuilder().withName(\"Elle Meyer\").withPhone(\"9482224\")","lastModifiedDate":"2023-10-03"},{"lineNumber":45,"author":{"gitId":"jacobcuison"},"content":"        .withEmail(\"werner@example.com\").withAddress(\"michegan ave\")","lastModifiedDate":"2023-10-13"},{"lineNumber":46,"author":{"gitId":"jacobcuison"},"content":"        .withNotes(\"Keyboard geek\").build();","lastModifiedDate":"2023-10-18"},{"lineNumber":47,"author":{"gitId":"jacobcuison"},"content":"    public static final Contact FIONA \u003d new ContactBuilder().withName(\"Fiona Kunz\").withPhone(\"9482427\")","lastModifiedDate":"2023-10-03"},{"lineNumber":48,"author":{"gitId":"jacobcuison"},"content":"        .withEmail(\"lydia@example.com\").withAddress(\"little tokyo\")","lastModifiedDate":"2023-10-13"},{"lineNumber":49,"author":{"gitId":"jacobcuison"},"content":"        .withNotes(\"Gym rat\").build();","lastModifiedDate":"2023-10-18"},{"lineNumber":50,"author":{"gitId":"jacobcuison"},"content":"    public static final Contact GEORGE \u003d new ContactBuilder().withName(\"George Best\").withPhone(\"9482442\")","lastModifiedDate":"2023-10-03"},{"lineNumber":51,"author":{"gitId":"jacobcuison"},"content":"        .withEmail(\"anna@example.com\").withAddress(\"4th street\")","lastModifiedDate":"2023-10-13"},{"lineNumber":52,"author":{"gitId":"jacobcuison"},"content":"        .withNotes(\"Likes bread\").build();","lastModifiedDate":"2023-10-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    // Manually added","lastModifiedDate":"2016-09-13"},{"lineNumber":55,"author":{"gitId":"jacobcuison"},"content":"    public static final Contact HOON \u003d new ContactBuilder().withName(\"Hoon Meier\").withPhone(\"8482424\")","lastModifiedDate":"2023-10-03"},{"lineNumber":56,"author":{"gitId":"jacobcuison"},"content":"        .withEmail(\"stefan@example.com\").withAddress(\"little india\")","lastModifiedDate":"2023-10-13"},{"lineNumber":57,"author":{"gitId":"jacobcuison"},"content":"        .withNotes(\"Likes chicken\").build();","lastModifiedDate":"2023-10-18"},{"lineNumber":58,"author":{"gitId":"jacobcuison"},"content":"    public static final Contact IDA \u003d new ContactBuilder().withName(\"Ida Mueller\").withPhone(\"8482131\")","lastModifiedDate":"2023-10-03"},{"lineNumber":59,"author":{"gitId":"jacobcuison"},"content":"        .withEmail(\"hans@example.com\").withAddress(\"chicago ave\")","lastModifiedDate":"2023-10-13"},{"lineNumber":60,"author":{"gitId":"jacobcuison"},"content":"        .withNotes(\"Likes chicken\").build();","lastModifiedDate":"2023-10-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":62,"author":{"gitId":"jacobcuison"},"content":"    // Manually added - Contact\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2023-10-03"},{"lineNumber":63,"author":{"gitId":"jacobcuison"},"content":"    public static final Contact AMY \u003d new ContactBuilder().withName(VALID_NAME_AMY).withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2023-10-03"},{"lineNumber":64,"author":{"gitId":"jacobcuison"},"content":"        .withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY).withTags(VALID_TAG_FRIEND)","lastModifiedDate":"2023-10-13"},{"lineNumber":65,"author":{"gitId":"jacobcuison"},"content":"        .withNotes(VALID_NOTE_AMY).build();","lastModifiedDate":"2023-10-18"},{"lineNumber":66,"author":{"gitId":"jacobcuison"},"content":"    public static final Contact BOB \u003d new ContactBuilder().withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2023-10-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        .withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND)","lastModifiedDate":"2017-09-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        .build();","lastModifiedDate":"2017-09-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2017-09-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":72,"author":{"gitId":"jonyeokj"},"content":"    public static final Meeting CS2103 \u003d new MeetingBuilder()","lastModifiedDate":"2023-10-12"},{"lineNumber":73,"author":{"gitId":"jonyeokj"},"content":"        .withTitle(\"CS2103 Meeting\")","lastModifiedDate":"2023-10-12"},{"lineNumber":74,"author":{"gitId":"jonyeokj"},"content":"        .withTime(\"01/01/2023 00:00\")","lastModifiedDate":"2023-10-12"},{"lineNumber":75,"author":{"gitId":"jonyeokj"},"content":"        .withPlace(\"Zoom\")","lastModifiedDate":"2023-10-12"},{"lineNumber":76,"author":{"gitId":"jonyeokj"},"content":"        .withDescription(\"\")","lastModifiedDate":"2023-10-12"},{"lineNumber":77,"author":{"gitId":"jonyeokj"},"content":"        .build();","lastModifiedDate":"2023-10-12"},{"lineNumber":78,"author":{"gitId":"jonyeokj"},"content":"    public static final Meeting GES2001 \u003d new MeetingBuilder()","lastModifiedDate":"2023-10-12"},{"lineNumber":79,"author":{"gitId":"jonyeokj"},"content":"        .withTitle(\"GES2001 Meeting\")","lastModifiedDate":"2023-10-12"},{"lineNumber":80,"author":{"gitId":"jonyeokj"},"content":"        .withTime(\"01/01/2023 20:30\")","lastModifiedDate":"2023-10-12"},{"lineNumber":81,"author":{"gitId":"jonyeokj"},"content":"        .withPlace(\"Discord\")","lastModifiedDate":"2023-10-12"},{"lineNumber":82,"author":{"gitId":"jonyeokj"},"content":"        .withDescription(\"Project details\")","lastModifiedDate":"2023-10-12"},{"lineNumber":83,"author":{"gitId":"jonyeokj"},"content":"        .build();","lastModifiedDate":"2023-10-12"},{"lineNumber":84,"author":{"gitId":"jonyeokj"},"content":"    public static final Meeting LAJ2101 \u003d new MeetingBuilder()","lastModifiedDate":"2023-10-12"},{"lineNumber":85,"author":{"gitId":"jonyeokj"},"content":"        .withTitle(\"LAJ2101 Meeting\")","lastModifiedDate":"2023-10-12"},{"lineNumber":86,"author":{"gitId":"jonyeokj"},"content":"        .withTime(\"01/01/2023 16:00\")","lastModifiedDate":"2023-10-12"},{"lineNumber":87,"author":{"gitId":"jonyeokj"},"content":"        .withPlace(\"Classroom A\")","lastModifiedDate":"2023-10-12"},{"lineNumber":88,"author":{"gitId":"jonyeokj"},"content":"        .withDescription(\"\")","lastModifiedDate":"2023-10-12"},{"lineNumber":89,"author":{"gitId":"jonyeokj"},"content":"        .build();","lastModifiedDate":"2023-10-12"},{"lineNumber":90,"author":{"gitId":"jonyeokj"},"content":"    public static final Meeting GF \u003d new MeetingBuilder()","lastModifiedDate":"2023-10-12"},{"lineNumber":91,"author":{"gitId":"jonyeokj"},"content":"        .withTitle(\"Date with Girlfriend\")","lastModifiedDate":"2023-10-12"},{"lineNumber":92,"author":{"gitId":"jonyeokj"},"content":"        .withTime(\"01/05/2023 18:00\")","lastModifiedDate":"2023-10-12"},{"lineNumber":93,"author":{"gitId":"jonyeokj"},"content":"        .withPlace(\"Sentosa\")","lastModifiedDate":"2023-10-12"},{"lineNumber":94,"author":{"gitId":"jonyeokj"},"content":"        .withDescription(\"Picnic with Sandwiches!\")","lastModifiedDate":"2023-10-12"},{"lineNumber":95,"author":{"gitId":"jonyeokj"},"content":"        .build();","lastModifiedDate":"2023-10-12"},{"lineNumber":96,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":97,"author":{"gitId":"s-peiran"},"content":"    private TypicalAddressBook() {","lastModifiedDate":"2023-10-25"},{"lineNumber":98,"author":{"gitId":"s-peiran"},"content":"    } // prevents instantiation","lastModifiedDate":"2023-10-25"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":101,"author":{"gitId":"jacobcuison"},"content":"     * Returns an {@code AddressBook} with all the typical contacts.","lastModifiedDate":"2023-10-03"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":103,"author":{"gitId":"jonyeokj"},"content":"    public static AddressBook getTypicalContactsAddressBook() {","lastModifiedDate":"2023-10-12"},{"lineNumber":104,"author":{"gitId":"jonyeokj"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2023-10-12"},{"lineNumber":105,"author":{"gitId":"jonyeokj"},"content":"        for (Contact contact : getTypicalContacts()) {","lastModifiedDate":"2023-10-12"},{"lineNumber":106,"author":{"gitId":"jonyeokj"},"content":"            ab.addContact(contact);","lastModifiedDate":"2023-10-12"},{"lineNumber":107,"author":{"gitId":"jonyeokj"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":108,"author":{"gitId":"jonyeokj"},"content":"        return ab;","lastModifiedDate":"2023-10-12"},{"lineNumber":109,"author":{"gitId":"jonyeokj"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":110,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":111,"author":{"gitId":"jonyeokj"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":112,"author":{"gitId":"jonyeokj"},"content":"     * Returns an {@code AddressBook} with all the typical meetings.","lastModifiedDate":"2023-10-12"},{"lineNumber":113,"author":{"gitId":"jonyeokj"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":114,"author":{"gitId":"jonyeokj"},"content":"    public static AddressBook getTypicalMeetingsAddressBook() {","lastModifiedDate":"2023-10-12"},{"lineNumber":115,"author":{"gitId":"jonyeokj"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2023-10-12"},{"lineNumber":116,"author":{"gitId":"jonyeokj"},"content":"        for (Meeting meeting : getTypicalMeetings()) {","lastModifiedDate":"2023-10-12"},{"lineNumber":117,"author":{"gitId":"jonyeokj"},"content":"            ab.addMeeting(meeting);","lastModifiedDate":"2023-10-12"},{"lineNumber":118,"author":{"gitId":"jonyeokj"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":119,"author":{"gitId":"jonyeokj"},"content":"        return ab;","lastModifiedDate":"2023-10-12"},{"lineNumber":120,"author":{"gitId":"jonyeokj"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":121,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":122,"author":{"gitId":"jonyeokj"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":123,"author":{"gitId":"jonyeokj"},"content":"     * Returns an {@code AddressBook} with all the typical contacts and meetings.","lastModifiedDate":"2023-10-12"},{"lineNumber":124,"author":{"gitId":"jonyeokj"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    public static AddressBook getTypicalAddressBook() {","lastModifiedDate":"2017-08-05"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2017-08-05"},{"lineNumber":127,"author":{"gitId":"jacobcuison"},"content":"        for (Contact contact : getTypicalContacts()) {","lastModifiedDate":"2023-10-03"},{"lineNumber":128,"author":{"gitId":"jacobcuison"},"content":"            ab.addContact(contact);","lastModifiedDate":"2023-10-03"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-13"},{"lineNumber":130,"author":{"gitId":"jonyeokj"},"content":"        for (Meeting meeting : getTypicalMeetings()) {","lastModifiedDate":"2023-10-12"},{"lineNumber":131,"author":{"gitId":"jonyeokj"},"content":"            ab.addMeeting(meeting);","lastModifiedDate":"2023-10-12"},{"lineNumber":132,"author":{"gitId":"jonyeokj"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        return ab;","lastModifiedDate":"2016-09-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-04"},{"lineNumber":136,"author":{"gitId":"jacobcuison"},"content":"    public static List\u003cContact\u003e getTypicalContacts() {","lastModifiedDate":"2023-10-03"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));","lastModifiedDate":"2017-08-07"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-08-04"},{"lineNumber":139,"author":{"gitId":"jonyeokj"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":140,"author":{"gitId":"jonyeokj"},"content":"    public static List\u003cMeeting\u003e getTypicalMeetings() {","lastModifiedDate":"2023-10-12"},{"lineNumber":141,"author":{"gitId":"jonyeokj"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(CS2103, GES2001, LAJ2101, GF));","lastModifiedDate":"2023-10-12"},{"lineNumber":142,"author":{"gitId":"jonyeokj"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":143,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-13"}],"authorContributionMap":{"jonyeokj":56,"jacobcuison":49,"s-peiran":2,"-":36}},{"path":"src/test/java/seedu/address/testutil/TypicalIndexes.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-08-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Index} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class TypicalIndexes {","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"chiayunrong"},"content":"    public static final Index INDEX_FIRST \u003d Index.fromOneBased(1);","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"chiayunrong"},"content":"    public static final Index INDEX_SECOND \u003d Index.fromOneBased(2);","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"chiayunrong"},"content":"    public static final Index INDEX_THIRD \u003d Index.fromOneBased(3);","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-08-05"}],"authorContributionMap":{"chiayunrong":3,"-":9}}]

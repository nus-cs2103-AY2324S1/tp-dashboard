[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"sopa301"},"content":"[![Java CI](https://github.com/AY2324S1-CS2103T-F12-1/tp/actions/workflows/gradle.yml/badge.svg)](https://github.com/AY2324S1-CS2103T-F12-1/tp/actions/workflows/gradle.yml)","lastModifiedDate":"2023-09-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"sopa301"},"content":"### About UNOFAS","lastModifiedDate":"2023-10-20"},{"lineNumber":6,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":7,"author":{"gitId":"sopa301"},"content":"This project was created under the CS2103T Software Engineering module in NUS.","lastModifiedDate":"2023-09-26"},{"lineNumber":8,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":9,"author":{"gitId":"sopa301"},"content":"It is a contact book for insurance agents to keep track of their clients.","lastModifiedDate":"2023-09-26"},{"lineNumber":10,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":11,"author":{"gitId":"sopa301"},"content":"### Other Links","lastModifiedDate":"2023-09-26"},{"lineNumber":12,"author":{"gitId":"sopa301"},"content":"to be added later.","lastModifiedDate":"2023-09-26"},{"lineNumber":13,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":14,"author":{"gitId":"sopa301"},"content":"### Acknowledgements","lastModifiedDate":"2023-09-26"},{"lineNumber":15,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":16,"author":{"gitId":"sopa301"},"content":"This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2023-09-26"}],"authorContributionMap":{"sopa301":13,"-":3}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2016-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2022-06-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2016-12-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027jacoco\u0027","lastModifiedDate":"2020-08-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"mainClassName \u003d \u0027seedu.address.Main\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"sourceCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"targetCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2018-04-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-04-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2018-03-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2018-03-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    finalizedBy jacocoTestReport","lastModifiedDate":"2020-08-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-08-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"task coverage(type: JacocoReport) {","lastModifiedDate":"2020-08-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)","lastModifiedDate":"2020-08-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    classDirectories.from files(sourceSets.main.output)","lastModifiedDate":"2020-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    executionData.from files(jacocoTestReport.executionData)","lastModifiedDate":"2020-08-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    afterEvaluate {","lastModifiedDate":"2020-08-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        classDirectories.from files(classDirectories.files.collect {","lastModifiedDate":"2020-08-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])","lastModifiedDate":"2020-08-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        })","lastModifiedDate":"2020-08-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    reports {","lastModifiedDate":"2020-08-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        html.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        xml.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    String jUnitVersion \u003d \u00275.4.0\u0027","lastModifiedDate":"2019-02-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2023-07-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.7.0\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.7.4\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2016-08-29"},{"lineNumber":69,"author":{"gitId":"sopa301"},"content":"    archiveFileName \u003d \u0027unofas.jar\u0027","lastModifiedDate":"2023-10-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"Kb-Tay"},"content":"run {","lastModifiedDate":"2023-10-22"},{"lineNumber":73,"author":{"gitId":"Kb-Tay"},"content":"    enableAssertions \u003d true;","lastModifiedDate":"2023-10-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-10-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"defaultTasks \u0027clean\u0027, \u0027test\u0027","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"Kb-Tay":2,"sopa301":1,"-":73}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"You can reach us at the email `seer[at]comp.nus.edu.sg`","lastModifiedDate":"2020-06-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"Kb-Tay"},"content":"### Aaron Tay Kai Boon","lastModifiedDate":"2023-09-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"Kb-Tay"},"content":"\u003cimg src\u003d\"images/kb-tay.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-09-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"Kb-Tay"},"content":"[[github](https://github.com/Kb-tay)]","lastModifiedDate":"2023-09-26"},{"lineNumber":17,"author":{"gitId":"Kb-Tay"},"content":"[[portfolio](team/kb-tay.md)]","lastModifiedDate":"2023-09-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"Kb-Tay"},"content":"* Role: Developer","lastModifiedDate":"2023-09-26"},{"lineNumber":20,"author":{"gitId":"Kb-Tay"},"content":"* Responsibilities: User Stories","lastModifiedDate":"2023-09-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"nikele2001"},"content":"### Nicholas Chia","lastModifiedDate":"2023-09-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"Kb-Tay"},"content":"\u003cimg src\u003d\"images/nikele2001.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-09-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"nikele2001"},"content":"[[github](http://github.com/nikele2001)]","lastModifiedDate":"2023-09-26"},{"lineNumber":27,"author":{"gitId":"nikele2001"},"content":"[[portfolio](team/nikele2001.md)]","lastModifiedDate":"2023-09-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"* Role: Team Lead","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"* Responsibilities: UI","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"sopa301"},"content":"### Poon Yip Hang, Ryan","lastModifiedDate":"2023-09-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"sopa301"},"content":"\u003cimg src\u003d\"images/sopa301.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-09-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"sopa301"},"content":"[[github](http://github.com/sopa301)] [[portfolio](team/sopa301.md)]","lastModifiedDate":"2023-09-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"sopa301"},"content":"* Responsibilities: Documentation","lastModifiedDate":"2023-09-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"jylow"},"content":"### Low Jun Yu","lastModifiedDate":"2023-09-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"jylow"},"content":"\u003cimg src\u003d\"images/jylow.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-09-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"jylow"},"content":"[[github](http://github.com/jylow)]","lastModifiedDate":"2023-09-26"},{"lineNumber":46,"author":{"gitId":"jylow"},"content":"[[portfolio](team/jylow.md)]","lastModifiedDate":"2023-09-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"jylow"},"content":"* Responsibilities: Debugging + Issue tracking","lastModifiedDate":"2023-11-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"AlyssaPng"},"content":"### Alyssa Png Kai Wen","lastModifiedDate":"2023-09-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"AlyssaPng"},"content":"\u003cimg src\u003d\"images/alyssapng.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-09-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"AlyssaPng"},"content":"[[github](https://github.com/AlyssaPng)]","lastModifiedDate":"2023-09-26"},{"lineNumber":56,"author":{"gitId":"AlyssaPng"},"content":"[[portfolio](team/alyssapng.md)]","lastModifiedDate":"2023-09-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"AlyssaPng"},"content":"* Responsibilities: UI + Debugging","lastModifiedDate":"2023-09-26"}],"authorContributionMap":{"Kb-Tay":7,"nikele2001":3,"AlyssaPng":5,"sopa301":4,"jylow":5,"-":35}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":12,"author":{"gitId":"sopa301"},"content":"* This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2023-11-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"sopa301"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document `docs/diagrams` folder. Refer to the","lastModifiedDate":"2023-11-10"},{"lineNumber":27,"author":{"gitId":"sopa301"},"content":"[_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create","lastModifiedDate":"2023-11-10"},{"lineNumber":28,"author":{"gitId":"sopa301"},"content":"and edit diagrams.","lastModifiedDate":"2023-11-10"},{"lineNumber":29,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"sopa301"},"content":"**`Main`** (consisting of classes","lastModifiedDate":"2023-11-10"},{"lineNumber":42,"author":{"gitId":"sopa301"},"content":"[`Main`](https://github.com/AY2324S1-CS2103T-F12-1/tp/blob/master/src/main/java/seedu/address/Main.java)","lastModifiedDate":"2023-11-10"},{"lineNumber":43,"author":{"gitId":"sopa301"},"content":"and [`MainApp`](https://github.com/AY2324S1-CS2103T-F12-1/tp/blob/master/src/main/java/seedu/address/MainApp.java))","lastModifiedDate":"2023-11-10"},{"lineNumber":44,"author":{"gitId":"sopa301"},"content":"is in charge of the app launch and shut down.","lastModifiedDate":"2023-11-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"* At app launch, it initializes the other components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2023-09-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"* At shut down, it shuts down the other components and invokes cleanup methods where necessary.","lastModifiedDate":"2023-09-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"The bulk of the app\u0027s work is done by the following four components:","lastModifiedDate":"2023-09-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2023-09-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"sopa301"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues","lastModifiedDate":"2023-11-10"},{"lineNumber":60,"author":{"gitId":"sopa301"},"content":"the command `delete 1`.","lastModifiedDate":"2023-11-10"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"sopa301"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class which follows the corresponding API","lastModifiedDate":"2023-11-10"},{"lineNumber":68,"author":{"gitId":"sopa301"},"content":"`interface` mentioned in the previous point.","lastModifiedDate":"2023-11-10"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":70,"author":{"gitId":"sopa301"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality","lastModifiedDate":"2023-11-10"},{"lineNumber":71,"author":{"gitId":"sopa301"},"content":"using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given","lastModifiedDate":"2023-11-10"},{"lineNumber":72,"author":{"gitId":"sopa301"},"content":"component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled","lastModifiedDate":"2023-11-10"},{"lineNumber":73,"author":{"gitId":"sopa301"},"content":"to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2023-11-10"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"sopa301"},"content":"The **API** of this component is specified in","lastModifiedDate":"2023-11-10"},{"lineNumber":82,"author":{"gitId":"sopa301"},"content":"[`Ui.java`](https://github.com/AY2324S1-CS2103T-F12-1/tp/blob/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2023-11-10"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"sopa301"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`,","lastModifiedDate":"2023-11-10"},{"lineNumber":87,"author":{"gitId":"sopa301"},"content":"`StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures","lastModifiedDate":"2023-11-10"},{"lineNumber":88,"author":{"gitId":"sopa301"},"content":"the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2023-11-10"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"sopa301"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files","lastModifiedDate":"2023-11-10"},{"lineNumber":91,"author":{"gitId":"sopa301"},"content":"that are in the `src/main/resources/view` folder. For example, the layout of the","lastModifiedDate":"2023-11-10"},{"lineNumber":92,"author":{"gitId":"sopa301"},"content":"[`MainWindow`](https://github.com/AY2324S1-CS2103T-F12-1/tp/blob/master/src/main/java/seedu/address/ui/MainWindow.java)","lastModifiedDate":"2023-11-10"},{"lineNumber":93,"author":{"gitId":"sopa301"},"content":"is specified in","lastModifiedDate":"2023-11-10"},{"lineNumber":94,"author":{"gitId":"sopa301"},"content":"[`MainWindow.fxml`](https://github.com/AY2324S1-CS2103T-F12-1/tp/blob/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2023-11-10"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":99,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":101,"author":{"gitId":"sopa301"},"content":"* depends on some classes in the `Model` component, as it displays `Person` and `Appointment` objects residing in the","lastModifiedDate":"2023-11-10"},{"lineNumber":102,"author":{"gitId":"sopa301"},"content":"`Model`.","lastModifiedDate":"2023-11-10"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"sopa301"},"content":"**API** :","lastModifiedDate":"2023-11-10"},{"lineNumber":107,"author":{"gitId":"sopa301"},"content":"[`Logic.java`](https://github.com/AY2324S1-CS2103T-F12-1/tp/blob/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2023-11-10"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"sopa301"},"content":"The sequence diagram below illustrates the interactions within the `Logic` component, taking `execute(\"delete 1\")` API","lastModifiedDate":"2023-11-10"},{"lineNumber":114,"author":{"gitId":"sopa301"},"content":"call as an example.","lastModifiedDate":"2023-11-10"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"sopa301"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser`","lastModifiedDate":"2023-11-10"},{"lineNumber":119,"author":{"gitId":"sopa301"},"content":"should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2023-11-10"},{"lineNumber":120,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2023-09-03"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":124,"author":{"gitId":"sopa301"},"content":"1. When `Logic` is called upon to execute a command, it is passed to an `AddressBookParser` object which in turn","lastModifiedDate":"2023-11-10"},{"lineNumber":125,"author":{"gitId":"sopa301"},"content":"creates a parser that matches the command (e.g., `DeleteCommandParser`) and uses it to parse the command.","lastModifiedDate":"2023-11-10"},{"lineNumber":126,"author":{"gitId":"sopa301"},"content":"2. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `DeleteCommand`) which","lastModifiedDate":"2023-11-10"},{"lineNumber":127,"author":{"gitId":"sopa301"},"content":"is executed by the `LogicManager`.","lastModifiedDate":"2023-11-10"},{"lineNumber":128,"author":{"gitId":"sopa301"},"content":"3. The command can communicate with the `Model` when it is executed (e.g. to delete a person).","lastModifiedDate":"2023-11-10"},{"lineNumber":129,"author":{"gitId":"sopa301"},"content":"4. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2023-11-10"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":131,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":133,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":136,"author":{"gitId":"sopa301"},"content":"* When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a","lastModifiedDate":"2023-11-10"},{"lineNumber":137,"author":{"gitId":"sopa301"},"content":"placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse","lastModifiedDate":"2023-11-10"},{"lineNumber":138,"author":{"gitId":"sopa301"},"content":"the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `AddressBookParser` returns back as a","lastModifiedDate":"2023-11-10"},{"lineNumber":139,"author":{"gitId":"sopa301"},"content":"`Command` object.","lastModifiedDate":"2023-11-10"},{"lineNumber":140,"author":{"gitId":"sopa301"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser`","lastModifiedDate":"2023-11-10"},{"lineNumber":141,"author":{"gitId":"sopa301"},"content":"interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2023-11-10"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":144,"author":{"gitId":"sopa301"},"content":"**API** :","lastModifiedDate":"2023-11-10"},{"lineNumber":145,"author":{"gitId":"sopa301"},"content":"[`Model.java`](https://github.com/AY2324S1-CS2103T-F12-1/tp/blob/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2023-11-10"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"* stores the address book data i.e., all `Person` objects (which are contained in a `UniquePersonList` object).","lastModifiedDate":"2021-07-31"},{"lineNumber":153,"author":{"gitId":"sopa301"},"content":"* stores the currently \u0027selected\u0027 `Person` objects (e.g., results of a search query) as a separate _filtered_ list","lastModifiedDate":"2023-11-10"},{"lineNumber":154,"author":{"gitId":"sopa301"},"content":"which is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be","lastModifiedDate":"2023-11-10"},{"lineNumber":155,"author":{"gitId":"sopa301"},"content":"bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2023-11-10"},{"lineNumber":156,"author":{"gitId":"sopa301"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a","lastModifiedDate":"2023-11-10"},{"lineNumber":157,"author":{"gitId":"sopa301"},"content":"`ReadOnlyUserPref` objects.","lastModifiedDate":"2023-11-10"},{"lineNumber":158,"author":{"gitId":"sopa301"},"content":"* stores an `observableAppointments` object that represents existing appointments in the address book, sorted in a","lastModifiedDate":"2023-11-10"},{"lineNumber":159,"author":{"gitId":"sopa301"},"content":"chronological order.","lastModifiedDate":"2023-11-10"},{"lineNumber":160,"author":{"gitId":"nikele2001"},"content":"* stores a `sortedAppointments` object that represents existing appointments in the address book.","lastModifiedDate":"2023-10-24"},{"lineNumber":161,"author":{"gitId":"sopa301"},"content":"* `observableAppointments` and `sortedAppointments` depend on `filteredPersons`. Hence, appointments listed are for","lastModifiedDate":"2023-11-10"},{"lineNumber":162,"author":{"gitId":"sopa301"},"content":"`Person` objects in `filteredPersons`.","lastModifiedDate":"2023-11-10"},{"lineNumber":163,"author":{"gitId":"sopa301"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they","lastModifiedDate":"2023-11-10"},{"lineNumber":164,"author":{"gitId":"sopa301"},"content":"should make sense on their own without depending on other components)","lastModifiedDate":"2023-11-10"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":166,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"sopa301"},"content":"**API** :","lastModifiedDate":"2023-11-10"},{"lineNumber":169,"author":{"gitId":"sopa301"},"content":"[`Storage.java`](https://github.com/AY2324S1-CS2103T-F12-1/tp/blob/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2023-11-10"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":173,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"* can save both address book data and user preference data in JSON format, and read them back into corresponding objects.","lastModifiedDate":"2023-09-03"},{"lineNumber":175,"author":{"gitId":"sopa301"},"content":"* inherits from both `AddressBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only","lastModifiedDate":"2023-11-10"},{"lineNumber":176,"author":{"gitId":"sopa301"},"content":"the functionality of only one is needed).","lastModifiedDate":"2023-11-10"},{"lineNumber":177,"author":{"gitId":"sopa301"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects","lastModifiedDate":"2023-11-10"},{"lineNumber":178,"author":{"gitId":"sopa301"},"content":"that belong to the `Model`).","lastModifiedDate":"2023-11-10"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.addressbook.commons` package.","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"Kb-Tay"},"content":"### Overview","lastModifiedDate":"2023-10-26"},{"lineNumber":191,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":192,"author":{"gitId":"Kb-Tay"},"content":"The basic idea of what happens when a user types a command:","lastModifiedDate":"2023-10-26"},{"lineNumber":193,"author":{"gitId":"Kb-Tay"},"content":"1. The LogicManager executes method is called and takes in the user\u0027s input.","lastModifiedDate":"2023-10-26"},{"lineNumber":194,"author":{"gitId":"Kb-Tay"},"content":"2. The user\u0027s input is then parsed by `AddressBookParser`, which then creates the respective `XYZCommandParser`.","lastModifiedDate":"2023-10-26"},{"lineNumber":195,"author":{"gitId":"Kb-Tay"},"content":"3. `XYZCommandParser` parses the additional arguments provided by the user and creates and `XYZCommand`.","lastModifiedDate":"2023-10-26"},{"lineNumber":196,"author":{"gitId":"Kb-Tay"},"content":"4. `XYZCommand` then communicates with ModelManager to execute and returns a `CommandResult` which is displayed to the user.","lastModifiedDate":"2023-10-26"},{"lineNumber":197,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":198,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":199,"author":{"gitId":"Kb-Tay"},"content":"The flow of how a `Command` is executed is illustrated with the `Schedule` Command below.","lastModifiedDate":"2023-10-26"},{"lineNumber":200,"author":{"gitId":"Kb-Tay"},"content":"### Schedule Command","lastModifiedDate":"2023-10-26"},{"lineNumber":201,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":202,"author":{"gitId":"Kb-Tay"},"content":"#### Implementation Overview","lastModifiedDate":"2023-10-26"},{"lineNumber":203,"author":{"gitId":"sopa301"},"content":"After the `AddressBookParser` identifies that the user\u0027s input has a schedule command word, it creates a","lastModifiedDate":"2023-11-10"},{"lineNumber":204,"author":{"gitId":"sopa301"},"content":"`ScheduleCommandParser`. The `ScheduleCommandParser` then parses the users input and creates a new `ScheduleCommand`","lastModifiedDate":"2023-11-10"},{"lineNumber":205,"author":{"gitId":"sopa301"},"content":"containing an `Appointment` and an `Index`. The `ScheduleCommand` is then executed by `Logic Manager`, which updates","lastModifiedDate":"2023-11-10"},{"lineNumber":206,"author":{"gitId":"sopa301"},"content":"the `Person` in `Model` to have the created `Appointment`. A `CommandResult` which stores the message of the outcome","lastModifiedDate":"2023-11-10"},{"lineNumber":207,"author":{"gitId":"sopa301"},"content":"of schedule command is then returned. The partial class diagram is shown below.","lastModifiedDate":"2023-11-10"},{"lineNumber":208,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":209,"author":{"gitId":"Kb-Tay"},"content":"\u003cimg src\u003d\"images/ScheduleClassDiagram.png\" width\u003d\"400\"/\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":210,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":211,"author":{"gitId":"Kb-Tay"},"content":"The following activity diagram summarises what happens the user executes a schedule command.","lastModifiedDate":"2023-11-05"},{"lineNumber":212,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":213,"author":{"gitId":"Kb-Tay"},"content":"\u003cimg src\u003d\"images/ScheduleActivityDiagram.png\" width\u003d\"400\"/\u003e","lastModifiedDate":"2023-11-05"},{"lineNumber":214,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":215,"author":{"gitId":"Kb-Tay"},"content":"**Design Considerations**","lastModifiedDate":"2023-10-26"},{"lineNumber":216,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":217,"author":{"gitId":"Kb-Tay"},"content":"**Aspect: How to implement Appointments for Person**","lastModifiedDate":"2023-11-05"},{"lineNumber":218,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":219,"author":{"gitId":"Kb-Tay"},"content":"Alternative 1 (Current Choice): Create an abstract class ScheduleItem and make it a compulsory field for Person.","lastModifiedDate":"2023-11-05"},{"lineNumber":220,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":221,"author":{"gitId":"nikele2001"},"content":"The diagram below illustrates our current implementation. A `Person` has is associated with 1 `ScheduleItem`, which can be a `NullAppointment`(empty appointment) or `Appointment`.","lastModifiedDate":"2023-11-11"},{"lineNumber":222,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":223,"author":{"gitId":"Kb-Tay"},"content":"\u003cimg src\u003d\"images/ScheduleItemClassDiagram.png\" width\u003d\"300\"/\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":224,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":225,"author":{"gitId":"Kb-Tay"},"content":"- Pros:","lastModifiedDate":"2023-11-05"},{"lineNumber":226,"author":{"gitId":"sopa301"},"content":"  * This ensures a 1-to-1 relationship between Person and Appointment, making implementation of other functions like","lastModifiedDate":"2023-11-10"},{"lineNumber":227,"author":{"gitId":"sopa301"},"content":"  sort easier. This also prevents clutter of appointments in the UI.","lastModifiedDate":"2023-11-10"},{"lineNumber":228,"author":{"gitId":"sopa301"},"content":"  * This makes use of a **facade** design pattern, where `NullAppointment` and `Appointment` will handle themselves","lastModifiedDate":"2023-11-10"},{"lineNumber":229,"author":{"gitId":"sopa301"},"content":"  without the `Person` knowing.","lastModifiedDate":"2023-11-10"},{"lineNumber":230,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":231,"author":{"gitId":"Kb-Tay"},"content":"- Cons:","lastModifiedDate":"2023-11-05"},{"lineNumber":232,"author":{"gitId":"sopa301"},"content":"  * This makes the scheduling of Appointments more inflexible, as the FA is unable to schedule multiple appointments","lastModifiedDate":"2023-11-10"},{"lineNumber":233,"author":{"gitId":"sopa301"},"content":"  with the same person.","lastModifiedDate":"2023-11-10"},{"lineNumber":234,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":235,"author":{"gitId":"Kb-Tay"},"content":"- Other considerations:","lastModifiedDate":"2023-11-05"},{"lineNumber":236,"author":{"gitId":"nikele2001"},"content":"  * `NullAppointment` is a Singleton class to prevent multiple instances of it being created, making it more efficient for memory.","lastModifiedDate":"2023-11-11"},{"lineNumber":237,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":238,"author":{"gitId":"Kb-Tay"},"content":"Alternative 2: Create a hashset of Appointments for each Person.","lastModifiedDate":"2023-11-05"},{"lineNumber":239,"author":{"gitId":"Kb-Tay"},"content":"- Pros:","lastModifiedDate":"2023-11-05"},{"lineNumber":240,"author":{"gitId":"Kb-Tay"},"content":"  * More flexible, user can now schedule multiple appointment for a Person.","lastModifiedDate":"2023-11-05"},{"lineNumber":241,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":242,"author":{"gitId":"Kb-Tay"},"content":"- Cons:","lastModifiedDate":"2023-11-05"},{"lineNumber":243,"author":{"gitId":"sopa301"},"content":"  * Harder to implement operations such as editing of an appointment for a client. An additional step of finding the","lastModifiedDate":"2023-11-10"},{"lineNumber":244,"author":{"gitId":"sopa301"},"content":"  specified appointment within the hashset is required, which may potentially introduce more bugs.","lastModifiedDate":"2023-11-10"},{"lineNumber":245,"author":{"gitId":"Kb-Tay"},"content":"  * Harder to implement default behaviours for when person has no appointment.","lastModifiedDate":"2023-11-05"},{"lineNumber":246,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":247,"author":{"gitId":"Kb-Tay"},"content":"### Complete Feature","lastModifiedDate":"2023-11-05"},{"lineNumber":248,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":249,"author":{"gitId":"sopa301"},"content":"The **Complete** feature is facilitated by the `CompleteCommand` and `CompleteCommandParser`. The","lastModifiedDate":"2023-11-10"},{"lineNumber":250,"author":{"gitId":"Kb-Tay"},"content":"`CompleteCommandParser` creates a `CompleteByIndex` or `CompleteByDate` object depending on the user\u0027s input. Both `CompleteByIndex` and `CompleteByDate` extends `CompleteCommand` as illustrated in the class diagram below.","lastModifiedDate":"2023-11-12"},{"lineNumber":251,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":252,"author":{"gitId":"Kb-Tay"},"content":"\u003cimg src\u003d\"images/CompleteClassDiagram.png\" width\u003d\"400\"/\u003e","lastModifiedDate":"2023-11-12"},{"lineNumber":253,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":254,"author":{"gitId":"Kb-Tay"},"content":"The following sequence diagram illustrates how the complete operation is executed when date given.","lastModifiedDate":"2023-11-05"},{"lineNumber":255,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":256,"author":{"gitId":"Kb-Tay"},"content":"\u003cimg src\u003d\"images/CompleteSequenceDiagram.png\" width\u003d\"800\"/\u003e","lastModifiedDate":"2023-11-05"},{"lineNumber":257,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":258,"author":{"gitId":"Kb-Tay"},"content":"\u003e :warn: The lifeline of the diagram should end at the destroyer mark (X) but reaches end of diagram due to limitation of plantUML","lastModifiedDate":"2023-11-05"},{"lineNumber":259,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":260,"author":{"gitId":"Kb-Tay"},"content":"The following activity diagram illustrates how the complete operation is executed.","lastModifiedDate":"2023-11-05"},{"lineNumber":261,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":262,"author":{"gitId":"Kb-Tay"},"content":"\u003cimg src\u003d\"images/CompleteActivityDiagram.png\" width\u003d\"800\"/\u003e","lastModifiedDate":"2023-11-05"},{"lineNumber":263,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":264,"author":{"gitId":"AlyssaPng"},"content":"### Gather Emails Feature","lastModifiedDate":"2023-10-26"},{"lineNumber":265,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":266,"author":{"gitId":"sopa301"},"content":"The **Gather Emails** feature in our software system is a critical functionality designed to efficiently collect","lastModifiedDate":"2023-11-10"},{"lineNumber":267,"author":{"gitId":"sopa301"},"content":"email addresses. This feature is facilitated through the `GatherCommand` class, which plays a central role in the process.","lastModifiedDate":"2023-11-10"},{"lineNumber":268,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":269,"author":{"gitId":"AlyssaPng"},"content":"#### Implementation Overview","lastModifiedDate":"2023-10-26"},{"lineNumber":270,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":271,"author":{"gitId":"sopa301"},"content":"The `GatherCommand` class is instantiated by the `GatherCommandParser`, which parses user input commands. The","lastModifiedDate":"2023-11-10"},{"lineNumber":272,"author":{"gitId":"sopa301"},"content":"`GatherCommandParser` class implements the following operations:","lastModifiedDate":"2023-11-10"},{"lineNumber":273,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":274,"author":{"gitId":"sopa301"},"content":"* `GatherCommandParser#parse(String args)` — Checks the prefixes (fp/ and t/) and instantiates `GatherCommand`","lastModifiedDate":"2023-11-10"},{"lineNumber":275,"author":{"gitId":"sopa301"},"content":"accordingly. It passes either a `GatherEmailByFinancialPlan` or a `GatherEmailByTag` object, both implementations of","lastModifiedDate":"2023-11-10"},{"lineNumber":276,"author":{"gitId":"sopa301"},"content":"the `GatherEmailPrompt` interface.","lastModifiedDate":"2023-11-10"},{"lineNumber":277,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":278,"author":{"gitId":"sopa301"},"content":"The `GatherCommand` takes in a `GatherEmailPrompt` object and passes it into the current `Model` model, subsequently","lastModifiedDate":"2023-11-10"},{"lineNumber":279,"author":{"gitId":"sopa301"},"content":"interacting with the `AddressBook` and `UniquePersonsList` classes. The `GatherCommand` class implements the following","lastModifiedDate":"2023-11-10"},{"lineNumber":280,"author":{"gitId":"sopa301"},"content":"operations:","lastModifiedDate":"2023-11-10"},{"lineNumber":281,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":282,"author":{"gitId":"sopa301"},"content":"* `GatherCommand#GatherCommand(GatherEmailPrompt prompt)` — Constructor that initializes the command with the","lastModifiedDate":"2023-11-10"},{"lineNumber":283,"author":{"gitId":"sopa301"},"content":"provided `GatherEmailPrompt` object.","lastModifiedDate":"2023-11-10"},{"lineNumber":284,"author":{"gitId":"sopa301"},"content":"* `GatherCommand#execute()` —  Executes the gathering operation by calling","lastModifiedDate":"2023-11-10"},{"lineNumber":285,"author":{"gitId":"sopa301"},"content":"`Model#gatherEmails(GatherEmailPrompt prompt)`.","lastModifiedDate":"2023-11-10"},{"lineNumber":286,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":287,"author":{"gitId":"sopa301"},"content":"The `Model` interface is implemented by the `ModelManager`, representing the in-memory model of the address book data.","lastModifiedDate":"2023-11-10"},{"lineNumber":288,"author":{"gitId":"sopa301"},"content":"It contains the following method:","lastModifiedDate":"2023-11-10"},{"lineNumber":289,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":290,"author":{"gitId":"sopa301"},"content":"* `ModelManager#gatherEmails(GatherEmailPrompt prompt)` —  Carries out the gathering operation by calling","lastModifiedDate":"2023-11-10"},{"lineNumber":291,"author":{"gitId":"sopa301"},"content":"`AddressBook#gatherEmails(GatherEmailPrompt prompt)`.","lastModifiedDate":"2023-11-10"},{"lineNumber":292,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":293,"author":{"gitId":"sopa301"},"content":"This operation is exposed in the `AddressBook` class as `AddressBook#gatherEmails(GatherEmailsPrompt prompt)`, and","lastModifiedDate":"2023-11-10"},{"lineNumber":294,"author":{"gitId":"sopa301"},"content":"in the `UniquePersonsList` class as `UniquePersonsList#gatherEmails(GatherEmailsPrompt prompt)`.","lastModifiedDate":"2023-11-10"},{"lineNumber":295,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":296,"author":{"gitId":"AlyssaPng"},"content":"The `UniquePersonsList` class maintains a list of unique persons. Additionally, it implements the following operation:","lastModifiedDate":"2023-10-26"},{"lineNumber":297,"author":{"gitId":"sopa301"},"content":"* `UniquePersonsList#gatherEmails(GatherEmailPrompt prompt)` —  This method iterates through the persons list","lastModifiedDate":"2023-11-10"},{"lineNumber":298,"author":{"gitId":"sopa301"},"content":"and calls `GatherEmailPrompt#gatherEmails(Person person)`, passing in each person.","lastModifiedDate":"2023-11-10"},{"lineNumber":299,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":300,"author":{"gitId":"sopa301"},"content":"Depending on the scenario, it triggers either `Person#gatherEmailsContainsTag(String prompt)` or","lastModifiedDate":"2023-11-10"},{"lineNumber":301,"author":{"gitId":"sopa301"},"content":"`Person#gatherEmailsContainsFinancialPlan(String prompt)`:","lastModifiedDate":"2023-11-10"},{"lineNumber":302,"author":{"gitId":"sopa301"},"content":"* `Person#gatherEmailsContainsTag(String prompt)` —  Checks if the given prompt is a substring of the name of","lastModifiedDate":"2023-11-10"},{"lineNumber":303,"author":{"gitId":"sopa301"},"content":"any Tag in the `Set\u003cTag\u003e` of the current person.","lastModifiedDate":"2023-11-10"},{"lineNumber":304,"author":{"gitId":"sopa301"},"content":"* `Person#gatherEmailsContainsFinancialPlan(String prompt)` —  Checks if the given prompt is a substring of the","lastModifiedDate":"2023-11-10"},{"lineNumber":305,"author":{"gitId":"sopa301"},"content":"name of any Financial Plan in the `Set\u003cTag\u003e` of the current person.","lastModifiedDate":"2023-11-10"},{"lineNumber":306,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":307,"author":{"gitId":"AlyssaPng"},"content":"This is the class diagram for the gather command:","lastModifiedDate":"2023-10-26"},{"lineNumber":308,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":309,"author":{"gitId":"AlyssaPng"},"content":"![GatherClassDiagram](images/GatherClassDiagram.png)","lastModifiedDate":"2023-10-26"},{"lineNumber":310,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":311,"author":{"gitId":"AlyssaPng"},"content":"**Usage Scenario:**","lastModifiedDate":"2023-10-26"},{"lineNumber":312,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":313,"author":{"gitId":"AlyssaPng"},"content":"**Scenario 1:**","lastModifiedDate":"2023-10-26"},{"lineNumber":314,"author":{"gitId":"sopa301"},"content":"User enters a gather `fp/financial plan a`. The `GatherEmailByFinancialPlan` will be initialized. Each person in the","lastModifiedDate":"2023-11-10"},{"lineNumber":315,"author":{"gitId":"sopa301"},"content":"`UniquePersonList` will be passed into the `GatherEmailByFinancialPlan#gatherEmails(Person person)`.","lastModifiedDate":"2023-11-10"},{"lineNumber":316,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":317,"author":{"gitId":"AlyssaPng"},"content":"**Scenario 2:**","lastModifiedDate":"2023-10-26"},{"lineNumber":318,"author":{"gitId":"sopa301"},"content":"User enters a gather `t/Elderly`. The `GatherEmailByTag` will be initialized. Each person in the `UniquePersonList`","lastModifiedDate":"2023-11-10"},{"lineNumber":319,"author":{"gitId":"sopa301"},"content":"will be passed into the `GatherEmailByTag#gatherEmails(Person person)`.","lastModifiedDate":"2023-11-10"},{"lineNumber":320,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":321,"author":{"gitId":"AlyssaPng"},"content":"The following sequence diagram shows how the gather operation works:","lastModifiedDate":"2023-10-26"},{"lineNumber":322,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":323,"author":{"gitId":"AlyssaPng"},"content":"![GatherSequenceDiagram](images/GatherSequenceDiagram.png)","lastModifiedDate":"2023-10-26"},{"lineNumber":324,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":325,"author":{"gitId":"AlyssaPng"},"content":"#### Design Considerations","lastModifiedDate":"2023-10-26"},{"lineNumber":326,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":327,"author":{"gitId":"AlyssaPng"},"content":"**Aspect: How implement more fields**","lastModifiedDate":"2023-10-26"},{"lineNumber":328,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":329,"author":{"gitId":"AlyssaPng"},"content":"**Alternative 1 (Current Choice):** User can only search by one Financial Plan or Tag.","lastModifiedDate":"2023-10-26"},{"lineNumber":330,"author":{"gitId":"AlyssaPng"},"content":"- **Pros:** Easy to implement. Limits the potential for bugs.","lastModifiedDate":"2023-10-26"},{"lineNumber":331,"author":{"gitId":"AlyssaPng"},"content":"- **Cons:** Limited filtering options. Hard to scale to gather by other fields.","lastModifiedDate":"2023-10-26"},{"lineNumber":332,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":333,"author":{"gitId":"AlyssaPng"},"content":"**Alternative 2:** User can search by multiple Financial Plans or Tags.","lastModifiedDate":"2023-10-26"},{"lineNumber":334,"author":{"gitId":"AlyssaPng"},"content":"- **Pros:** More filtering options. Easy to scale to gather by other fields.","lastModifiedDate":"2023-10-26"},{"lineNumber":335,"author":{"gitId":"AlyssaPng"},"content":"- **Cons:** Introduces more complexity and requires additional error handling.","lastModifiedDate":"2023-10-26"},{"lineNumber":336,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":337,"author":{"gitId":"AlyssaPng"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2023-10-26"},{"lineNumber":338,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":339,"author":{"gitId":"sopa301"},"content":"### Expanded Find feature","lastModifiedDate":"2023-10-25"},{"lineNumber":340,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":341,"author":{"gitId":"sopa301"},"content":"The enhanced find mechanism is facilitated by the `CombinedPredicate` and utilises the existing `FindCommand` structure.","lastModifiedDate":"2023-11-07"},{"lineNumber":342,"author":{"gitId":"sopa301"},"content":"It extends the `find` command with the ability to search for multiple terms at once, implemented using an array","lastModifiedDate":"2023-11-07"},{"lineNumber":343,"author":{"gitId":"sopa301"},"content":"of `PersonContainsKeywordsPredicate`. Here\u0027s a partial class diagram of the `CombinedPredicate`.","lastModifiedDate":"2023-11-07"},{"lineNumber":344,"author":{"gitId":"sopa301"},"content":"![CombinedPredicateClassDiagram](images/CombinedPredicateClassDiagram.png)","lastModifiedDate":"2023-11-07"},{"lineNumber":345,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":346,"author":{"gitId":"sopa301"},"content":"In the `FindCommandParser`, `CombinedPredicate` is initialised with a `NameContainsKeywordsPredicate`,","lastModifiedDate":"2023-11-07"},{"lineNumber":347,"author":{"gitId":"nikele2001"},"content":"`FinancialPlanContainsKeywordsPredicate` and `TagContainsKeywordsPredicate`. These predicates check a `Person` if the respective field contains any of the keywords supplied to the predicate.","lastModifiedDate":"2023-11-11"},{"lineNumber":348,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":349,"author":{"gitId":"sopa301"},"content":"Note that only `NameContainsKeywordsPredicate` checks for whole words, because it is rare to search for people by","lastModifiedDate":"2023-11-07"},{"lineNumber":350,"author":{"gitId":"sopa301"},"content":"substrings e.g. `Marc` and `Marcus` should not show up in the same search. On the other hand,","lastModifiedDate":"2023-11-07"},{"lineNumber":351,"author":{"gitId":"sopa301"},"content":"`FinancialPlanContainsKeywordsPredicate` and `TagContainsKeywordsPredicate` allow matching for","lastModifiedDate":"2023-11-07"},{"lineNumber":352,"author":{"gitId":"sopa301"},"content":"substrings because there are certain cases where it is logical to search for substrings e.g. `Plan A` and","lastModifiedDate":"2023-11-07"},{"lineNumber":353,"author":{"gitId":"sopa301"},"content":"`Plan A Premium` are related, so they can show up in the same search.","lastModifiedDate":"2023-11-07"},{"lineNumber":354,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":355,"author":{"gitId":"sopa301"},"content":"The `find` command format also changes to resemble a format more similar to the `add` and `edit` commands, to allow for","lastModifiedDate":"2023-11-07"},{"lineNumber":356,"author":{"gitId":"sopa301"},"content":"searching for keywords in multiple fields at the same time. We also allow the use of duplicate prefixes so that we","lastModifiedDate":"2023-11-07"},{"lineNumber":357,"author":{"gitId":"sopa301"},"content":"can search for multiple terms belonging to the same field.","lastModifiedDate":"2023-11-07"},{"lineNumber":358,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":359,"author":{"gitId":"sopa301"},"content":"For now, we only allow for searching for `Name`, `FinancialPlan` and `Tag` fields because they are the most commonly","lastModifiedDate":"2023-11-07"},{"lineNumber":360,"author":{"gitId":"sopa301"},"content":"searched fields, but extending the feature to search in other fields is possible by creating the `Predicate` class and","lastModifiedDate":"2023-11-07"},{"lineNumber":361,"author":{"gitId":"sopa301"},"content":"modifying the `FindCommandParser`.","lastModifiedDate":"2023-11-07"},{"lineNumber":362,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":363,"author":{"gitId":"sopa301"},"content":"#### Design Considerations:","lastModifiedDate":"2023-10-25"},{"lineNumber":364,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":365,"author":{"gitId":"sopa301"},"content":"**Aspect: How to implement find for multiple fields**","lastModifiedDate":"2023-10-25"},{"lineNumber":366,"author":{"gitId":"sopa301"},"content":"* **Alternative 1 (current choice):** Use one unified command and format.","lastModifiedDate":"2023-10-25"},{"lineNumber":367,"author":{"gitId":"sopa301"},"content":"    * Pros: Easy to implement (argument multimap is available), allows for more flexible usage.","lastModifiedDate":"2023-10-25"},{"lineNumber":368,"author":{"gitId":"sopa301"},"content":"    * Cons: May get cluttered when there are many terms.","lastModifiedDate":"2023-10-25"},{"lineNumber":369,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":370,"author":{"gitId":"sopa301"},"content":"* **Alternative 2:** Take an argument to decide which field to find by.","lastModifiedDate":"2023-10-25"},{"lineNumber":371,"author":{"gitId":"sopa301"},"content":"    * Pros: More user-friendly and natural since there is no need to use prefixes.","lastModifiedDate":"2023-10-25"},{"lineNumber":372,"author":{"gitId":"sopa301"},"content":"    * Cons: Less flexible, slightly more difficult to implement.","lastModifiedDate":"2023-10-25"},{"lineNumber":373,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":374,"author":{"gitId":"sopa301"},"content":"**Aspect: How to implement `CombinedPredicate`**","lastModifiedDate":"2023-10-25"},{"lineNumber":375,"author":{"gitId":"sopa301"},"content":"* **Alternative 1 (current choice):** Use varargs and a common interface.","lastModifiedDate":"2023-11-07"},{"lineNumber":376,"author":{"gitId":"sopa301"},"content":"    * Pros: More flexible in usage while still testable.","lastModifiedDate":"2023-11-07"},{"lineNumber":377,"author":{"gitId":"sopa301"},"content":"    * Cons: More difficult to modify and the check for equality can be defeated with enough effort.","lastModifiedDate":"2023-11-07"},{"lineNumber":378,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":379,"author":{"gitId":"sopa301"},"content":"* **Alternative 2:** Compose it with the 3 component predicates.","lastModifiedDate":"2023-11-07"},{"lineNumber":380,"author":{"gitId":"sopa301"},"content":"    * Pros: Easier to modify and test.","lastModifiedDate":"2023-10-25"},{"lineNumber":381,"author":{"gitId":"sopa301"},"content":"    * Cons: Less flexible when trying to combine multiple predicates (that may be of the same type).","lastModifiedDate":"2023-10-25"},{"lineNumber":382,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":383,"author":{"gitId":"sopa301"},"content":"* **Alternative 3:** Use a `Predicate\u003cPerson\u003e` and use the `or()` method to chain predicates.","lastModifiedDate":"2023-11-07"},{"lineNumber":384,"author":{"gitId":"sopa301"},"content":"    * Pros: More flexible in usage.","lastModifiedDate":"2023-10-25"},{"lineNumber":385,"author":{"gitId":"sopa301"},"content":"    * Cons: More difficult to modify and test.","lastModifiedDate":"2023-10-25"},{"lineNumber":386,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":387,"author":{"gitId":"jylow"},"content":"### Sort Feature","lastModifiedDate":"2023-10-26"},{"lineNumber":388,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":389,"author":{"gitId":"sopa301"},"content":"The **Sort** feature in our software system is designed to sort the list of clients by name as well as appointment","lastModifiedDate":"2023-11-10"},{"lineNumber":390,"author":{"gitId":"sopa301"},"content":"time. This feature is facilitated through the `SortCommand` class.","lastModifiedDate":"2023-11-10"},{"lineNumber":391,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":392,"author":{"gitId":"jylow"},"content":"#### Implementation Overview","lastModifiedDate":"2023-10-26"},{"lineNumber":393,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":394,"author":{"gitId":"jylow"},"content":"The following diagram summarises what happens when the user executes a sort command","lastModifiedDate":"2023-11-12"},{"lineNumber":395,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":396,"author":{"gitId":"jylow"},"content":"\u003cimg src\u003d\"images/SortClassActivityDiagram.png\" width\u003d\"700\"/\u003e","lastModifiedDate":"2023-11-12"},{"lineNumber":397,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":398,"author":{"gitId":"sopa301"},"content":"The `SortCommand` class is instantiated by the `SortCommandParser`, which parses user input commands. The","lastModifiedDate":"2023-11-10"},{"lineNumber":399,"author":{"gitId":"sopa301"},"content":"`SortCommandParser` class implements the following operations:","lastModifiedDate":"2023-11-10"},{"lineNumber":400,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":401,"author":{"gitId":"jylow"},"content":"- **`SortCommandParser#parse(String args)` —  Checks the sort command keyword passed in by the user.","lastModifiedDate":"2023-10-26"},{"lineNumber":402,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":403,"author":{"gitId":"sopa301"},"content":"The `SortCommand` takes in a `Comparator\u003cPerson\u003e` object and passes it into the current `Model` model. The","lastModifiedDate":"2023-11-10"},{"lineNumber":404,"author":{"gitId":"sopa301"},"content":"`SortCommand` class implements the following operations:","lastModifiedDate":"2023-11-10"},{"lineNumber":405,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":406,"author":{"gitId":"jylow"},"content":"- **`SortCommand#execute()` —  Executes the sort operation by calling `model.sortFilteredPersonList(comparator)`.","lastModifiedDate":"2023-10-26"},{"lineNumber":407,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":408,"author":{"gitId":"sopa301"},"content":"The `Model` interface is implemented by the `ModelManager`, representing the in-memory model of the address book data.","lastModifiedDate":"2023-11-10"},{"lineNumber":409,"author":{"gitId":"sopa301"},"content":"It contains the following method:","lastModifiedDate":"2023-11-10"},{"lineNumber":410,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":411,"author":{"gitId":"sopa301"},"content":"- **`ModelManager#sortFilteredPersonList(Comparator\u003cPerson\u003e comparator)` —  Carries out the sorting operation by","lastModifiedDate":"2023-11-10"},{"lineNumber":412,"author":{"gitId":"sopa301"},"content":"setting the comparator on the list of clients wrapped in a SortedList wrapper.","lastModifiedDate":"2023-11-10"},{"lineNumber":413,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":414,"author":{"gitId":"jylow"},"content":"A `CommandResult` class is created and returned","lastModifiedDate":"2023-11-12"},{"lineNumber":415,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":416,"author":{"gitId":"jylow"},"content":"**Aspect: Usage Scenario:**","lastModifiedDate":"2023-10-26"},{"lineNumber":417,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":418,"author":{"gitId":"jylow"},"content":"**Scenario 1:**","lastModifiedDate":"2023-10-26"},{"lineNumber":419,"author":{"gitId":"sopa301"},"content":"User enters a sort command `sort appointment`. The `SortByAppointmentComparator` will be initialized and used to","lastModifiedDate":"2023-11-10"},{"lineNumber":420,"author":{"gitId":"sopa301"},"content":"instantiate a SortCommand that when executed causes the list to be sorted by appointment, showing the earlier appointment first.","lastModifiedDate":"2023-11-10"},{"lineNumber":421,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":422,"author":{"gitId":"jylow"},"content":"**Scenario 2:**","lastModifiedDate":"2023-10-26"},{"lineNumber":423,"author":{"gitId":"sopa301"},"content":"User enters a sort command `sort name`. The `SortByNameComparator` will be initialized and used to instantiate a","lastModifiedDate":"2023-11-10"},{"lineNumber":424,"author":{"gitId":"sopa301"},"content":"SortCommand that when executed causes the list to be sorted by lexicographical ordering of name.","lastModifiedDate":"2023-11-10"},{"lineNumber":425,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":426,"author":{"gitId":"jylow"},"content":"The following sequence diagram shows how the gather operation works:","lastModifiedDate":"2023-10-26"},{"lineNumber":427,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":428,"author":{"gitId":"jylow"},"content":"\u003cimg src\u003d\"images/SortClassSequenceDiagram.png\" width\u003d\"700\"/\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":429,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":430,"author":{"gitId":"jylow"},"content":"#### Design Considerations","lastModifiedDate":"2023-10-26"},{"lineNumber":431,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":432,"author":{"gitId":"jylow"},"content":"**Aspect: How Sort Executes**","lastModifiedDate":"2023-10-26"},{"lineNumber":433,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":434,"author":{"gitId":"sopa301"},"content":"**Aspect 1 :** User can sort by name and appointment at any time. As such, calling find on the sorted list will result","lastModifiedDate":"2023-11-10"},{"lineNumber":435,"author":{"gitId":"sopa301"},"content":"in the ordering of find to also be sorted.","lastModifiedDate":"2023-11-10"},{"lineNumber":436,"author":{"gitId":"sopa301"},"content":"- **Pros:** Improved usability of maintaining order of list throughout without the list having to be reordered after","lastModifiedDate":"2023-11-10"},{"lineNumber":437,"author":{"gitId":"sopa301"},"content":"each command","lastModifiedDate":"2023-11-10"},{"lineNumber":438,"author":{"gitId":"jylow"},"content":"- **Cons:** Limited sorting options as of now","lastModifiedDate":"2023-10-26"},{"lineNumber":439,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":440,"author":{"gitId":"jylow"},"content":"**Aspect 2:** After sorting the first time, it will not be possible to return the list to its original ordering","lastModifiedDate":"2023-10-26"},{"lineNumber":441,"author":{"gitId":"jylow"},"content":"- **Pros:** Easier implementation of the sorting function.","lastModifiedDate":"2023-10-26"},{"lineNumber":442,"author":{"gitId":"sopa301"},"content":"- **Cons:** Unlikely, but if for some reason the user wants the list sorted back to its original order, the only way","lastModifiedDate":"2023-11-10"},{"lineNumber":443,"author":{"gitId":"sopa301"},"content":"is to restart the app at the current moment.","lastModifiedDate":"2023-11-10"},{"lineNumber":444,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":445,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":446,"author":{"gitId":"nikele2001"},"content":"### Appointment Sidebar Feature","lastModifiedDate":"2023-10-26"},{"lineNumber":447,"author":{"gitId":"nikele2001"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":448,"author":{"gitId":"sopa301"},"content":"The appointment sidebar is facilitated by `ModelManager`. It extends `Model` and stores an additional","lastModifiedDate":"2023-11-10"},{"lineNumber":449,"author":{"gitId":"sopa301"},"content":"`SortedList\u003cAppointment\u003e` object that represents all existing appointments.","lastModifiedDate":"2023-11-10"},{"lineNumber":450,"author":{"gitId":"nikele2001"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":451,"author":{"gitId":"sopa301"},"content":"The `setAppointmentList()` method checks against `filteredPersons` to look for updates regarding existing","lastModifiedDate":"2023-11-10"},{"lineNumber":452,"author":{"gitId":"sopa301"},"content":"`Appointment` objects. The `getAppointmentList()` method is called once during the startup of the program by","lastModifiedDate":"2023-11-10"},{"lineNumber":453,"author":{"gitId":"sopa301"},"content":"`getAppointmentList()` in `LogicManager`, which is in turn called by `MainWindow`. It returns the","lastModifiedDate":"2023-11-10"},{"lineNumber":454,"author":{"gitId":"sopa301"},"content":"`sortedList\u003cAppointment\u003e` object within `modelManager`.","lastModifiedDate":"2023-11-10"},{"lineNumber":455,"author":{"gitId":"nikele2001"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":456,"author":{"gitId":"nikele2001"},"content":"#### Design Considerations:","lastModifiedDate":"2023-10-26"},{"lineNumber":457,"author":{"gitId":"nikele2001"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":458,"author":{"gitId":"nikele2001"},"content":"**Aspect: Where to create SortedList\u003cAppointment\u003e**","lastModifiedDate":"2023-10-26"},{"lineNumber":459,"author":{"gitId":"nikele2001"},"content":"* **Alternative 1 (current choice):** Implement it within `modelManager`","lastModifiedDate":"2023-10-26"},{"lineNumber":460,"author":{"gitId":"sopa301"},"content":"    * Pros: `SortedAppointments` object references `filteredPersons` which ensures that the appointment sidebar","lastModifiedDate":"2023-11-10"},{"lineNumber":461,"author":{"gitId":"sopa301"},"content":"    corresponds with `persons` from `addressBook`.","lastModifiedDate":"2023-11-10"},{"lineNumber":462,"author":{"gitId":"nikele2001"},"content":"    * Cons: Errors with respect to `addressBook` will affect the appointment sidebar rendered.","lastModifiedDate":"2023-10-26"},{"lineNumber":463,"author":{"gitId":"nikele2001"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":464,"author":{"gitId":"nikele2001"},"content":"* **Alternative 2:** Implement it within `addressBook`","lastModifiedDate":"2023-10-26"},{"lineNumber":465,"author":{"gitId":"sopa301"},"content":"    * Pros: `persons` and `appointmentList` are handled separately within `addressBook` and hence the appointment","lastModifiedDate":"2023-11-10"},{"lineNumber":466,"author":{"gitId":"sopa301"},"content":"    sidebar is not dependent on `persons` in `addressBook`","lastModifiedDate":"2023-11-10"},{"lineNumber":467,"author":{"gitId":"sopa301"},"content":"    * Cons: `filteredPersons` and `sortedAppointments` might not correspond since `sortedAppointments` is no longer","lastModifiedDate":"2023-11-10"},{"lineNumber":468,"author":{"gitId":"sopa301"},"content":"    dependent on `filteredPersons`.","lastModifiedDate":"2023-11-10"},{"lineNumber":469,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":470,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2020-06-07"},{"lineNumber":471,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":472,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2020-06-07"},{"lineNumber":473,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2020-05-23"},{"lineNumber":474,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":475,"author":{"gitId":"sopa301"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedAddressBook`. It extends `AddressBook` with an undo/redo","lastModifiedDate":"2023-11-10"},{"lineNumber":476,"author":{"gitId":"sopa301"},"content":"history, stored internally as an `addressBookStateList` and `currentStatePointer`. Additionally, it implements the","lastModifiedDate":"2023-11-10"},{"lineNumber":477,"author":{"gitId":"sopa301"},"content":"following operations:","lastModifiedDate":"2023-11-10"},{"lineNumber":478,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":479,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#commit()` — Saves the current address book state in its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":480,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#undo()` — Restores the previous address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":481,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#redo()` — Restores a previously undone address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":482,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":483,"author":{"gitId":"sopa301"},"content":"These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()` and","lastModifiedDate":"2023-11-10"},{"lineNumber":484,"author":{"gitId":"sopa301"},"content":"`Model#redoAddressBook()` respectively.","lastModifiedDate":"2023-11-10"},{"lineNumber":485,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":486,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23"},{"lineNumber":487,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":488,"author":{"gitId":"sopa301"},"content":"Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the","lastModifiedDate":"2023-11-10"},{"lineNumber":489,"author":{"gitId":"sopa301"},"content":"initial address book state, and the `currentStatePointer` pointing to that single address book state.","lastModifiedDate":"2023-11-10"},{"lineNumber":490,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":491,"author":{"gitId":"-"},"content":"![UndoRedoState0](images/UndoRedoState0.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":492,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":493,"author":{"gitId":"sopa301"},"content":"Step 2. The user executes `delete 5` command to delete the 5th person in the address book. The `delete` command calls","lastModifiedDate":"2023-11-10"},{"lineNumber":494,"author":{"gitId":"sopa301"},"content":"`Model#commitAddressBook()`, causing the modified state of the address book after the `delete 5` command executes to be","lastModifiedDate":"2023-11-10"},{"lineNumber":495,"author":{"gitId":"sopa301"},"content":"saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted address book state.","lastModifiedDate":"2023-11-10"},{"lineNumber":496,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":497,"author":{"gitId":"-"},"content":"![UndoRedoState1](images/UndoRedoState1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":498,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":499,"author":{"gitId":"sopa301"},"content":"Step 3. The user executes `add n/David …​` to add a new person. The `add` command also calls","lastModifiedDate":"2023-11-10"},{"lineNumber":500,"author":{"gitId":"sopa301"},"content":"`Model#commitAddressBook()`, causing another modified address book state to be saved into the `addressBookStateList`.","lastModifiedDate":"2023-11-10"},{"lineNumber":501,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":502,"author":{"gitId":"-"},"content":"![UndoRedoState2](images/UndoRedoState2.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":503,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":504,"author":{"gitId":"sopa301"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If a command fails its execution, it","lastModifiedDate":"2023-11-10"},{"lineNumber":505,"author":{"gitId":"sopa301"},"content":"will not call `Model#commitAddressBook()`, so the address book state will not be saved into the `addressBookStateList`.","lastModifiedDate":"2023-11-10"},{"lineNumber":506,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":507,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":508,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":509,"author":{"gitId":"sopa301"},"content":"Step 4. The user now decides that adding the person was a mistake, and decides to undo that action by executing the","lastModifiedDate":"2023-11-10"},{"lineNumber":510,"author":{"gitId":"sopa301"},"content":"`undo` command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer` once","lastModifiedDate":"2023-11-10"},{"lineNumber":511,"author":{"gitId":"sopa301"},"content":"to the left, pointing it to the previous address book state, and restores the address book to that state.","lastModifiedDate":"2023-11-10"},{"lineNumber":512,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":513,"author":{"gitId":"-"},"content":"![UndoRedoState3](images/UndoRedoState3.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":514,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":515,"author":{"gitId":"sopa301"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index","lastModifiedDate":"2023-11-10"},{"lineNumber":516,"author":{"gitId":"sopa301"},"content":"0, pointing to the initial AddressBook state, then there are no previous AddressBook states to restore. The `undo`","lastModifiedDate":"2023-11-10"},{"lineNumber":517,"author":{"gitId":"sopa301"},"content":"command uses `Model#canUndoAddressBook()` to check if this is the case. If so, it will return an error to the user","lastModifiedDate":"2023-11-10"},{"lineNumber":518,"author":{"gitId":"sopa301"},"content":"rather than attempting to perform the undo.","lastModifiedDate":"2023-11-10"},{"lineNumber":519,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":520,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":521,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":522,"author":{"gitId":"-"},"content":"The following sequence diagram shows how the undo operation works:","lastModifiedDate":"2020-05-23"},{"lineNumber":523,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":524,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":525,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":526,"author":{"gitId":"sopa301"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `UndoCommand` should end","lastModifiedDate":"2023-11-10"},{"lineNumber":527,"author":{"gitId":"sopa301"},"content":"at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2023-11-10"},{"lineNumber":528,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":529,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":530,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":531,"author":{"gitId":"sopa301"},"content":"The `redo` command does the opposite — it calls `Model#redoAddressBook()`, which shifts the `currentStatePointer`","lastModifiedDate":"2023-11-10"},{"lineNumber":532,"author":{"gitId":"sopa301"},"content":"once to the right, pointing to the previously undone state, and restores the address book to that state.","lastModifiedDate":"2023-11-10"},{"lineNumber":533,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":534,"author":{"gitId":"sopa301"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index","lastModifiedDate":"2023-11-10"},{"lineNumber":535,"author":{"gitId":"sopa301"},"content":"`addressBookStateList.size() - 1`, pointing to the latest address book state, then there are no undone AddressBook","lastModifiedDate":"2023-11-10"},{"lineNumber":536,"author":{"gitId":"sopa301"},"content":"states to restore. The `redo` command uses `Model#canRedoAddressBook()` to check if this is the case. If so, it will","lastModifiedDate":"2023-11-10"},{"lineNumber":537,"author":{"gitId":"sopa301"},"content":"return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2023-11-10"},{"lineNumber":538,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":539,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":540,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":541,"author":{"gitId":"sopa301"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the address book, such as","lastModifiedDate":"2023-11-10"},{"lineNumber":542,"author":{"gitId":"sopa301"},"content":"`list`, will usually not call `Model#commitAddressBook()`, `Model#undoAddressBook()` or `Model#redoAddressBook()`.","lastModifiedDate":"2023-11-10"},{"lineNumber":543,"author":{"gitId":"sopa301"},"content":"Thus, the `addressBookStateList` remains unchanged.","lastModifiedDate":"2023-11-10"},{"lineNumber":544,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":545,"author":{"gitId":"-"},"content":"![UndoRedoState4](images/UndoRedoState4.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":546,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":547,"author":{"gitId":"sopa301"},"content":"Step 6. The user executes `clear`, which calls `Model#commitAddressBook()`. Since the `currentStatePointer` is not","lastModifiedDate":"2023-11-10"},{"lineNumber":548,"author":{"gitId":"sopa301"},"content":"pointing at the end of the `addressBookStateList`, all address book states after the `currentStatePointer` will be","lastModifiedDate":"2023-11-10"},{"lineNumber":549,"author":{"gitId":"sopa301"},"content":"purged. Reason: It no longer makes sense to redo the `add n/David …​` command. This is the behavior that most modern","lastModifiedDate":"2023-11-10"},{"lineNumber":550,"author":{"gitId":"sopa301"},"content":"desktop applications follow.","lastModifiedDate":"2023-11-10"},{"lineNumber":551,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":552,"author":{"gitId":"-"},"content":"![UndoRedoState5](images/UndoRedoState5.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":553,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":554,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23"},{"lineNumber":555,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":556,"author":{"gitId":"AlyssaPng"},"content":"\u003cimg src\u003d\"images/CommitActivityDiagram.png\" width\u003d\"400\" /\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":557,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":558,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2021-07-31"},{"lineNumber":559,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":560,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2021-07-31"},{"lineNumber":561,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":562,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Saves the entire address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":563,"author":{"gitId":"-"},"content":"  * Pros: Easy to implement.","lastModifiedDate":"2020-05-23"},{"lineNumber":564,"author":{"gitId":"-"},"content":"  * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":565,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":566,"author":{"gitId":"-"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2020-05-23"},{"lineNumber":567,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2020-05-23"},{"lineNumber":568,"author":{"gitId":"-"},"content":"  * Pros: Will use less memory (e.g. for `delete`, just save the person being deleted).","lastModifiedDate":"2020-05-23"},{"lineNumber":569,"author":{"gitId":"-"},"content":"  * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2020-05-23"},{"lineNumber":570,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":571,"author":{"gitId":"-"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2020-05-23"},{"lineNumber":572,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":573,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Data archiving","lastModifiedDate":"2020-05-23"},{"lineNumber":574,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":575,"author":{"gitId":"-"},"content":"_{Explain here how the data archiving feature will be implemented}_","lastModifiedDate":"2020-05-23"},{"lineNumber":576,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":577,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":578,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":579,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":580,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":581,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":582,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":583,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":584,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":585,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":586,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":587,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":588,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":589,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":590,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":591,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":592,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":593,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":594,"author":{"gitId":"AlyssaPng"},"content":"**Target user profile**: Financial Advisors","lastModifiedDate":"2023-09-29"},{"lineNumber":595,"author":{"gitId":"AlyssaPng"},"content":"* has a need to manage a significant number of client contacts","lastModifiedDate":"2023-09-29"},{"lineNumber":596,"author":{"gitId":"-"},"content":"* prefer desktop apps over other types","lastModifiedDate":"2020-05-23"},{"lineNumber":597,"author":{"gitId":"-"},"content":"* can type fast","lastModifiedDate":"2020-05-23"},{"lineNumber":598,"author":{"gitId":"-"},"content":"* prefers typing to mouse interactions","lastModifiedDate":"2020-05-26"},{"lineNumber":599,"author":{"gitId":"-"},"content":"* is reasonably comfortable using CLI apps","lastModifiedDate":"2020-05-23"},{"lineNumber":600,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":601,"author":{"gitId":"AlyssaPng"},"content":"**Value proposition**:","lastModifiedDate":"2023-09-29"},{"lineNumber":602,"author":{"gitId":"AlyssaPng"},"content":"This tool functions as a digital address book suited to the needs of financial advisors.","lastModifiedDate":"2023-09-29"},{"lineNumber":603,"author":{"gitId":"AlyssaPng"},"content":"It allows them to track, update, and manage their clients’ information efficiently.","lastModifiedDate":"2023-09-29"},{"lineNumber":604,"author":{"gitId":"AlyssaPng"},"content":"This is facilitated through the use of a command line interface for efficient and effective querying and","lastModifiedDate":"2023-09-29"},{"lineNumber":605,"author":{"gitId":"AlyssaPng"},"content":"modifying of clients’ data.","lastModifiedDate":"2023-09-29"},{"lineNumber":606,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":607,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":608,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":609,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":610,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":611,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":612,"author":{"gitId":"-"},"content":"| Priority | As a …​                                                                   | I want to …​                                                                                                          | So that I can…​                                                                                                                      |","lastModifiedDate":"2020-05-23"},{"lineNumber":613,"author":{"gitId":"AlyssaPng"},"content":"|----------|---------------------------------------------------------------------------|-----------------------------------------------------------------------------------------------------------------------|--------------------------------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2023-09-29"},{"lineNumber":614,"author":{"gitId":"AlyssaPng"},"content":"|`* * *`| financial advisor who often works with numerous clients | have a central repository for my clients’ contacts details | effectively manage the intricate details of each of my clients. |","lastModifiedDate":"2023-09-29"},{"lineNumber":615,"author":{"gitId":"AlyssaPng"},"content":"| `* * *`  | financial advisor | add clients\u0027 contacts to the contact book | accumulate contacts for future purposes. |","lastModifiedDate":"2023-09-29"},{"lineNumber":616,"author":{"gitId":"AlyssaPng"},"content":"| `* * *`  | financial advisor | remove clients contacts from the contact book | keep my contact book compact and relevant. |","lastModifiedDate":"2023-09-29"},{"lineNumber":617,"author":{"gitId":"AlyssaPng"},"content":"| `* * *`  | financial advisor | edit clients’ contacts in the contact book | keep my information updated. |","lastModifiedDate":"2023-09-29"},{"lineNumber":618,"author":{"gitId":"nikele2001"},"content":"| `* *`  | financial advisor | record appointments with my clients | keep track of when my next meeting with the client is. |","lastModifiedDate":"2023-11-12"},{"lineNumber":619,"author":{"gitId":"nikele2001"},"content":"| `* *`  | financial advisor | tag my clients by the plans they purchase | gather groups of clients based on the financial plan(s) they purchased. |","lastModifiedDate":"2023-11-12"},{"lineNumber":620,"author":{"gitId":"nikele2001"},"content":"| `* *`  | financial advisor | search for clients with specific financial plans | update those people about their plans more efficiently. |","lastModifiedDate":"2023-11-12"},{"lineNumber":621,"author":{"gitId":"nikele2001"},"content":"| `* *`  | financial advisor | sort my clients in certain orders including alphabetical order or appointment time in both ascending and descending order | view my clients in a more systematic manner. |","lastModifiedDate":"2023-11-12"},{"lineNumber":622,"author":{"gitId":"nikele2001"},"content":"| `* *`  | financial advisor | view my upcoming appointments I have with clients in chronological order | better plan my time. |","lastModifiedDate":"2023-11-12"},{"lineNumber":623,"author":{"gitId":"nikele2001"},"content":"| `* *`  | financial advisor | complete appointments | clean up the address book of completed appointments. |","lastModifiedDate":"2023-11-12"},{"lineNumber":624,"author":{"gitId":"nikele2001"},"content":"| `* *`  | financial advisor | gather emails of clients by their tags such as age group | collate and notify people with the same tags on any updates. |","lastModifiedDate":"2023-11-12"},{"lineNumber":625,"author":{"gitId":"nikele2001"},"content":"| `* *`  | financial advisor | search for clients with the same financial plan | efficiently provide targeted updates to individuals with the same plan. |","lastModifiedDate":"2023-11-12"},{"lineNumber":626,"author":{"gitId":"AlyssaPng"},"content":"| `*`      | busy financial advisor                                                    | streamline administrative tasks like tracking my clients contacts                                                     | focus most of my time on giving personalised financial advice and services to my clients.                                            |","lastModifiedDate":"2023-09-29"},{"lineNumber":627,"author":{"gitId":"AlyssaPng"},"content":"| `*`      | financial advisor managing a substantial client portfolio                 | follow a standardised format to collect my clients’ information                                                       | manage data consistency among my clients.                                                                                            |","lastModifiedDate":"2023-09-29"},{"lineNumber":628,"author":{"gitId":"AlyssaPng"},"content":"| `*`      | financial advisor                                                         | search for specific client details                                                                                    | quickly contact my clients.                                                                                                          |","lastModifiedDate":"2023-09-29"},{"lineNumber":629,"author":{"gitId":"AlyssaPng"},"content":"| `*`      | user who values both my clients\u0027 time and the quality of our interactions | set reminders for follow-up sessions with clients                                                                     | ensure I never miss an important meeting.                                                                                            |","lastModifiedDate":"2023-09-29"},{"lineNumber":630,"author":{"gitId":"AlyssaPng"},"content":"| `*`      | financial advisor                                                         | efficiently track referral sources for my clients                                                                     | manage their relationships.                                                                                                          |","lastModifiedDate":"2023-09-29"},{"lineNumber":631,"author":{"gitId":"AlyssaPng"},"content":"| `*`      | financial advisor                                                         | sort my clients in certain orders including alphabetical order portfolio value in both ascending and descending order | view my clients in a more systematic manner.                                                                                         |","lastModifiedDate":"2023-09-29"},{"lineNumber":632,"author":{"gitId":"AlyssaPng"},"content":"| `*`      | financial advisor                                                         | filter my clients based on certain metrics like financial products purchased and minimum portfolio value              | choose clients.                                                                                                                      |","lastModifiedDate":"2023-09-29"},{"lineNumber":633,"author":{"gitId":"AlyssaPng"},"content":"| `*`      | financial advisor                                                         | record appointments with clients with the application                                                                 | keep track of when my last meeting with each client is.                                                                              |","lastModifiedDate":"2023-09-29"},{"lineNumber":634,"author":{"gitId":"AlyssaPng"},"content":"| `*`      | financial advisor                                                         | export my contact data and client data in a readable format                                                           | use it for backup purposes or to run data processing with other software tools.                                                      |","lastModifiedDate":"2023-09-29"},{"lineNumber":635,"author":{"gitId":"AlyssaPng"},"content":"| `*`      | financial advisor                                                         | have a dashboard \t                                                                                                    | obtain insights into my clientele base including metrics like client acquisition, retention rates and revenue I generate each month. |","lastModifiedDate":"2023-09-29"},{"lineNumber":636,"author":{"gitId":"AlyssaPng"},"content":"| `*`      | financial advisor\t                                                        | categorise contacts based on their financial status (high net worth regular) \t                                        | prioritise my client interactions.                                                                                                   |","lastModifiedDate":"2023-09-29"},{"lineNumber":637,"author":{"gitId":"AlyssaPng"},"content":"| `*`      | financial advisor                                                         | update my profile information (name, contact, details, company)                                                       | ensure my personal information is always accurate.                                                                                   |","lastModifiedDate":"2023-09-29"},{"lineNumber":638,"author":{"gitId":"AlyssaPng"},"content":"| `*`      | an experienced user                                                       | edit the data file directly  \t                                                                                        | be more efficient.                                                                                                                   |","lastModifiedDate":"2023-09-29"},{"lineNumber":639,"author":{"gitId":"AlyssaPng"},"content":"| `*`      | user                                                                      | undo actions                                                                                                          | recover from my mistakes.                                                                                                            |","lastModifiedDate":"2023-09-29"},{"lineNumber":640,"author":{"gitId":"AlyssaPng"},"content":"| `*`      | busy financial advisor                                                    | quickly add incomplete details of a client and be reminded about it                                                   | fill the rest in later.                                                                                                              |","lastModifiedDate":"2023-09-29"},{"lineNumber":641,"author":{"gitId":"AlyssaPng"},"content":"| `*`      | financial advisor                                                         | check the appointments scheduled today                                                                                | \t not forget to meet a client                                                                                                        |","lastModifiedDate":"2023-09-29"},{"lineNumber":642,"author":{"gitId":"AlyssaPng"},"content":"| `*`      | financial advisor                                                         | view contacts of all my clients I am meeting for the day                                                              | \tefficiently search for their contacts.                                                                                              |","lastModifiedDate":"2023-09-29"},{"lineNumber":643,"author":{"gitId":"AlyssaPng"},"content":"| `*`      | financial advisor                                                         | view all the insurance plans my client has purchased easily                                                           | make planning during an appointment easier.                                                                                          |","lastModifiedDate":"2023-09-29"},{"lineNumber":644,"author":{"gitId":"AlyssaPng"},"content":"| `*`      | financial advisor                                                         | filter the plans of my client                                                                                         | to make it focus on certain plans during my appointment                                                                              |","lastModifiedDate":"2023-09-29"},{"lineNumber":645,"author":{"gitId":"AlyssaPng"},"content":"| `*`      | financial advisor                                                         | make updates to their plans on the app easily\t                                                                        | keep track of changes to the clients plans                                                                                           |","lastModifiedDate":"2023-09-29"},{"lineNumber":646,"author":{"gitId":"AlyssaPng"},"content":"| `*`      | financial advisor                                                         | check which client has been under me the longest                                                                      | \tplan welfare to retain them as long term customers.                                                                                 |","lastModifiedDate":"2023-09-29"},{"lineNumber":647,"author":{"gitId":"AlyssaPng"},"content":"| `*`      | financial advisor                                                         | add notes on clients                                                                                                  | \texcess them when needed                                                                                                             |","lastModifiedDate":"2023-09-29"},{"lineNumber":648,"author":{"gitId":"AlyssaPng"},"content":"| `*`      | financial advisor                                                         | display data from the address book into a excel file                                                                  | \tmore easily present to clients                                                                                                      |","lastModifiedDate":"2023-09-29"},{"lineNumber":649,"author":{"gitId":"AlyssaPng"},"content":"| `*`      | financial advisor                                                         | add tags to customers                                                                                                 | \tcollate and notify people with the same plan should there be a new change                                                           |","lastModifiedDate":"2023-09-29"},{"lineNumber":650,"author":{"gitId":"AlyssaPng"},"content":"| `*`      | manager                                                                   | retrieve data on the types of plans purchased                                                                         | \tbetter understand the products my team member is selling                                                                            |","lastModifiedDate":"2023-09-29"},{"lineNumber":651,"author":{"gitId":"AlyssaPng"},"content":"| `*`      | manager                                                                   | monitor expiring insurance plans                                                                                      | \tadvice trainees on time management                                                                                                  |","lastModifiedDate":"2023-09-29"},{"lineNumber":652,"author":{"gitId":"AlyssaPng"},"content":"| `*`      | financial advisor\t                                                        | import a file                                                                                                         | \teasily transfer client information when client leaves                                                                               |","lastModifiedDate":"2023-09-29"},{"lineNumber":653,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":654,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":655,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":656,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":657,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":658,"author":{"gitId":"nikele2001"},"content":"(For all use cases below, the **System** is `UNOFAS` and the **Actor** is the `financial advisor`, unless specified otherwise)","lastModifiedDate":"2023-10-06"},{"lineNumber":659,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":660,"author":{"gitId":"nikele2001"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":661,"author":{"gitId":"nikele2001"},"content":"**Use Case: UC01 - Show a list of all clients**\\","lastModifiedDate":"2023-11-11"},{"lineNumber":662,"author":{"gitId":"nikele2001"},"content":"**Precondition:** NIL\\","lastModifiedDate":"2023-11-11"},{"lineNumber":663,"author":{"gitId":"nikele2001"},"content":"**Guarantees**: A list of all clients\u0027 contact is shown.","lastModifiedDate":"2023-11-11"},{"lineNumber":664,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":665,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2023-11-11"},{"lineNumber":666,"author":{"gitId":"nikele2001"},"content":"1. User requests to list all clients.","lastModifiedDate":"2023-11-11"},{"lineNumber":667,"author":{"gitId":"nikele2001"},"content":"2. UNOFAS shows a list of all patients.\\","lastModifiedDate":"2023-11-11"},{"lineNumber":668,"author":{"gitId":"nikele2001"},"content":"    Use case ends.","lastModifiedDate":"2023-11-11"},{"lineNumber":669,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":670,"author":{"gitId":"nikele2001"},"content":"**Extensions**","lastModifiedDate":"2023-11-11"},{"lineNumber":671,"author":{"gitId":"nikele2001"},"content":"* 2a. the list is empty.\\","lastModifiedDate":"2023-11-11"},{"lineNumber":672,"author":{"gitId":"nikele2001"},"content":"    Use case ends.","lastModifiedDate":"2023-11-11"},{"lineNumber":673,"author":{"gitId":"nikele2001"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":674,"author":{"gitId":"nikele2001"},"content":"**Use Case: UC02 - Add a client** \\","lastModifiedDate":"2023-11-11"},{"lineNumber":675,"author":{"gitId":"nikele2001"},"content":"**Precondition:** NIL\\","lastModifiedDate":"2023-11-11"},{"lineNumber":676,"author":{"gitId":"nikele2001"},"content":"**Guarantees**: A client contact is added into UNOFAS only if the data entered is correct.","lastModifiedDate":"2023-11-11"},{"lineNumber":677,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":678,"author":{"gitId":"AlyssaPng"},"content":"**MSS**","lastModifiedDate":"2023-09-29"},{"lineNumber":679,"author":{"gitId":"AlyssaPng"},"content":"1.  User request to add a client to the list","lastModifiedDate":"2023-09-29"},{"lineNumber":680,"author":{"gitId":"nikele2001"},"content":"2.  UNOFAS adds the client","lastModifiedDate":"2023-11-11"},{"lineNumber":681,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":682,"author":{"gitId":"AlyssaPng"},"content":"    Use case ends.","lastModifiedDate":"2023-09-29"},{"lineNumber":683,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":684,"author":{"gitId":"AlyssaPng"},"content":"**Extensions**","lastModifiedDate":"2023-09-29"},{"lineNumber":685,"author":{"gitId":"nikele2001"},"content":"* 1a. Client details are invalid.","lastModifiedDate":"2023-10-06"},{"lineNumber":686,"author":{"gitId":"nikele2001"},"content":"    * 1a1. System shows an error message.","lastModifiedDate":"2023-10-06"},{"lineNumber":687,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":688,"author":{"gitId":"AlyssaPng"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2023-09-29"},{"lineNumber":689,"author":{"gitId":"nikele2001"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":690,"author":{"gitId":"nikele2001"},"content":"**Use Case: UC03 - Edit a client\u0027s contacts** \\","lastModifiedDate":"2023-11-11"},{"lineNumber":691,"author":{"gitId":"nikele2001"},"content":"**Precondition:** NIL\\","lastModifiedDate":"2023-11-11"},{"lineNumber":692,"author":{"gitId":"nikele2001"},"content":"**Guarantees**: A client contact is edited in UNOFAS only if the data entered is correct.","lastModifiedDate":"2023-11-11"},{"lineNumber":693,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":694,"author":{"gitId":"AlyssaPng"},"content":"**MSS**","lastModifiedDate":"2023-09-29"},{"lineNumber":695,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":696,"author":{"gitId":"nikele2001"},"content":"1.  User requests to \u003cu\u003elist clients (UC01)\u003c/u\u003e","lastModifiedDate":"2023-11-11"},{"lineNumber":697,"author":{"gitId":"nikele2001"},"content":"2.  User request to edit client’s contacts from the list","lastModifiedDate":"2023-11-11"},{"lineNumber":698,"author":{"gitId":"nikele2001"},"content":"3.  UNOFAS changes the client’s contacts","lastModifiedDate":"2023-11-11"},{"lineNumber":699,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":700,"author":{"gitId":"AlyssaPng"},"content":"    Use case ends.","lastModifiedDate":"2023-09-29"},{"lineNumber":701,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":702,"author":{"gitId":"AlyssaPng"},"content":"**Extensions**","lastModifiedDate":"2023-09-29"},{"lineNumber":703,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":704,"author":{"gitId":"nikele2001"},"content":"* 2a. User enters the wrong details.","lastModifiedDate":"2023-11-11"},{"lineNumber":705,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":706,"author":{"gitId":"nikele2001"},"content":"    * 2a1. System shows an error message.","lastModifiedDate":"2023-11-11"},{"lineNumber":707,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":708,"author":{"gitId":"nikele2001"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2023-11-11"},{"lineNumber":709,"author":{"gitId":"nikele2001"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":710,"author":{"gitId":"nikele2001"},"content":"**Use Case: UC04 - Delete a client** \\","lastModifiedDate":"2023-11-11"},{"lineNumber":711,"author":{"gitId":"nikele2001"},"content":"**Precondition:** NIL\\","lastModifiedDate":"2023-11-11"},{"lineNumber":712,"author":{"gitId":"nikele2001"},"content":"**Guarantees**: A client contact is deleted from UNOFAS only if the data entered is correct.","lastModifiedDate":"2023-11-11"},{"lineNumber":713,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":714,"author":{"gitId":"nikele2001"},"content":"**MSS**","lastModifiedDate":"2023-10-06"},{"lineNumber":715,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":716,"author":{"gitId":"nikele2001"},"content":"1. User requests to \u003cu\u003elist clients (UC01)\u003c/u\u003e","lastModifiedDate":"2023-11-11"},{"lineNumber":717,"author":{"gitId":"nikele2001"},"content":"2. User requests to delete a specific client in the list","lastModifiedDate":"2023-11-11"},{"lineNumber":718,"author":{"gitId":"nikele2001"},"content":"3. System deletes the client","lastModifiedDate":"2023-11-11"},{"lineNumber":719,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":720,"author":{"gitId":"nikele2001"},"content":"    Use case ends.","lastModifiedDate":"2023-10-06"},{"lineNumber":721,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":722,"author":{"gitId":"nikele2001"},"content":"**Extensions**","lastModifiedDate":"2023-10-06"},{"lineNumber":723,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":724,"author":{"gitId":"nikele2001"},"content":"* 2a. The specified client is non-existent.","lastModifiedDate":"2023-11-11"},{"lineNumber":725,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":726,"author":{"gitId":"nikele2001"},"content":"    * 2a1. System shows an error message.","lastModifiedDate":"2023-11-11"},{"lineNumber":727,"author":{"gitId":"nikele2001"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":728,"author":{"gitId":"nikele2001"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2023-11-11"},{"lineNumber":729,"author":{"gitId":"nikele2001"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":730,"author":{"gitId":"nikele2001"},"content":"**Use Case: UC05 - Find a client** \\","lastModifiedDate":"2023-11-11"},{"lineNumber":731,"author":{"gitId":"nikele2001"},"content":"**Precondition:** NIL\\","lastModifiedDate":"2023-11-11"},{"lineNumber":732,"author":{"gitId":"nikele2001"},"content":"**Guarantees**: A list of clients that matches the query is displayed.","lastModifiedDate":"2023-11-11"},{"lineNumber":733,"author":{"gitId":"nikele2001"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":734,"author":{"gitId":"nikele2001"},"content":"**MSS**","lastModifiedDate":"2023-10-06"},{"lineNumber":735,"author":{"gitId":"nikele2001"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":736,"author":{"gitId":"nikele2001"},"content":"1.  User requests to find client","lastModifiedDate":"2023-10-06"},{"lineNumber":737,"author":{"gitId":"nikele2001"},"content":"2.  System shows a list of clients which match search query","lastModifiedDate":"2023-10-06"},{"lineNumber":738,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":739,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":740,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":741,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2023-10-06"},{"lineNumber":742,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":743,"author":{"gitId":"-"},"content":"* 2a. The list is empty.","lastModifiedDate":"2023-10-06"},{"lineNumber":744,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":745,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2023-10-06"},{"lineNumber":746,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":747,"author":{"gitId":"nikele2001"},"content":"**Use Case: UC06 - Assign financial plan to a client** \\","lastModifiedDate":"2023-11-11"},{"lineNumber":748,"author":{"gitId":"nikele2001"},"content":"**Precondition:** NIL\\","lastModifiedDate":"2023-11-11"},{"lineNumber":749,"author":{"gitId":"nikele2001"},"content":"**Guarantees**: A financial plan is assigned to a client in UNOFAS only if the data entered is correct.","lastModifiedDate":"2023-11-11"},{"lineNumber":750,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":751,"author":{"gitId":"nikele2001"},"content":"**MSS**","lastModifiedDate":"2023-10-24"},{"lineNumber":752,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":753,"author":{"gitId":"nikele2001"},"content":"1.  User requests to \u003cu\u003elist clients (UC01)\u003c/u\u003e","lastModifiedDate":"2023-11-11"},{"lineNumber":754,"author":{"gitId":"nikele2001"},"content":"2.  UNOFAS shows a list of clients","lastModifiedDate":"2023-11-11"},{"lineNumber":755,"author":{"gitId":"nikele2001"},"content":"3.  User request to \u003cu\u003eadd financial plan to client’s contacts (UC03)\u003c/u\u003e","lastModifiedDate":"2023-11-11"},{"lineNumber":756,"author":{"gitId":"nikele2001"},"content":"4.  UNOFAS changes the client’s contacts","lastModifiedDate":"2023-11-11"},{"lineNumber":757,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":758,"author":{"gitId":"nikele2001"},"content":"    Use case ends.","lastModifiedDate":"2023-10-24"},{"lineNumber":759,"author":{"gitId":"nikele2001"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":760,"author":{"gitId":"nikele2001"},"content":"**Extensions**","lastModifiedDate":"2023-10-24"},{"lineNumber":761,"author":{"gitId":"nikele2001"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":762,"author":{"gitId":"nikele2001"},"content":"* 3a. User enters the wrong details.","lastModifiedDate":"2023-10-24"},{"lineNumber":763,"author":{"gitId":"nikele2001"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":764,"author":{"gitId":"nikele2001"},"content":"    * 3a1. System shows an error message.","lastModifiedDate":"2023-10-24"},{"lineNumber":765,"author":{"gitId":"nikele2001"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":766,"author":{"gitId":"nikele2001"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2023-10-24"},{"lineNumber":767,"author":{"gitId":"nikele2001"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":768,"author":{"gitId":"nikele2001"},"content":"**Use Case: UC07 - Sort client\u0027s contacts** \\","lastModifiedDate":"2023-11-11"},{"lineNumber":769,"author":{"gitId":"nikele2001"},"content":"**Precondition:** NIL\\","lastModifiedDate":"2023-11-11"},{"lineNumber":770,"author":{"gitId":"nikele2001"},"content":"**Guarantees**: The contact list will be sorted in ascending order according to the sort function specified.","lastModifiedDate":"2023-11-11"},{"lineNumber":771,"author":{"gitId":"nikele2001"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":772,"author":{"gitId":"nikele2001"},"content":"**MSS**","lastModifiedDate":"2023-11-10"},{"lineNumber":773,"author":{"gitId":"nikele2001"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":774,"author":{"gitId":"nikele2001"},"content":"1.  User requests to \u003cu\u003elist clients (UC01)\u003c/u\u003e","lastModifiedDate":"2023-11-11"},{"lineNumber":775,"author":{"gitId":"nikele2001"},"content":"2. UNOFAS shows a list of clients","lastModifiedDate":"2023-11-11"},{"lineNumber":776,"author":{"gitId":"nikele2001"},"content":"3. User requests to sort list of clients (by appointment time or name)","lastModifiedDate":"2023-11-10"},{"lineNumber":777,"author":{"gitId":"nikele2001"},"content":"4. UNOFAS updates ordering of clients\u0027 contacts.","lastModifiedDate":"2023-11-11"},{"lineNumber":778,"author":{"gitId":"nikele2001"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":779,"author":{"gitId":"nikele2001"},"content":"    Use case ends.","lastModifiedDate":"2023-11-10"},{"lineNumber":780,"author":{"gitId":"nikele2001"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":781,"author":{"gitId":"nikele2001"},"content":"**Extensions**","lastModifiedDate":"2023-11-10"},{"lineNumber":782,"author":{"gitId":"nikele2001"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":783,"author":{"gitId":"nikele2001"},"content":"* 3a. User enters the wrong details.","lastModifiedDate":"2023-11-10"},{"lineNumber":784,"author":{"gitId":"nikele2001"},"content":"    * 3a1. System shows an error message.","lastModifiedDate":"2023-11-10"},{"lineNumber":785,"author":{"gitId":"nikele2001"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2023-11-10"},{"lineNumber":786,"author":{"gitId":"nikele2001"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":787,"author":{"gitId":"nikele2001"},"content":"**Use Case: UC08 - Schedule appointment for a client** \\","lastModifiedDate":"2023-11-11"},{"lineNumber":788,"author":{"gitId":"nikele2001"},"content":"**Precondition:** Client must exist before scheduling appointment.\\","lastModifiedDate":"2023-11-11"},{"lineNumber":789,"author":{"gitId":"nikele2001"},"content":"**Guarantees**: An appointment is scheduled for a client in UNOFAS only if the data entered is correct.","lastModifiedDate":"2023-11-11"},{"lineNumber":790,"author":{"gitId":"nikele2001"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":791,"author":{"gitId":"nikele2001"},"content":"**MSS**","lastModifiedDate":"2023-10-24"},{"lineNumber":792,"author":{"gitId":"nikele2001"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":793,"author":{"gitId":"nikele2001"},"content":"1.  User requests to \u003cu\u003elist clients (UC01)\u003c/u\u003e","lastModifiedDate":"2023-11-11"},{"lineNumber":794,"author":{"gitId":"nikele2001"},"content":"2.  UNOFAS shows a list of clients","lastModifiedDate":"2023-11-11"},{"lineNumber":795,"author":{"gitId":"nikele2001"},"content":"3.  User request to schedule appointment for client via the `schedule` command","lastModifiedDate":"2023-10-24"},{"lineNumber":796,"author":{"gitId":"nikele2001"},"content":"4.  UNOFAS changes the client’s contacts","lastModifiedDate":"2023-11-11"},{"lineNumber":797,"author":{"gitId":"nikele2001"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":798,"author":{"gitId":"nikele2001"},"content":"    Use case ends.","lastModifiedDate":"2023-10-24"},{"lineNumber":799,"author":{"gitId":"nikele2001"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":800,"author":{"gitId":"nikele2001"},"content":"**Extensions**","lastModifiedDate":"2023-10-24"},{"lineNumber":801,"author":{"gitId":"nikele2001"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":802,"author":{"gitId":"nikele2001"},"content":"* 3a. User enters the wrong details.","lastModifiedDate":"2023-10-24"},{"lineNumber":803,"author":{"gitId":"nikele2001"},"content":"    * 3a1. System shows an error message.","lastModifiedDate":"2023-10-24"},{"lineNumber":804,"author":{"gitId":"nikele2001"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2023-10-24"},{"lineNumber":805,"author":{"gitId":"nikele2001"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":806,"author":{"gitId":"nikele2001"},"content":"* 3b. User has an existing appointment scheduled.","lastModifiedDate":"2023-10-24"},{"lineNumber":807,"author":{"gitId":"nikele2001"},"content":"    * 3a1. System shows a warning message.","lastModifiedDate":"2023-10-24"},{"lineNumber":808,"author":{"gitId":"nikele2001"},"content":"      Use case resumes at step 4.","lastModifiedDate":"2023-10-24"},{"lineNumber":809,"author":{"gitId":"nikele2001"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":810,"author":{"gitId":"nikele2001"},"content":"**Use Case: UC09 - Complete appointment for a client** \\","lastModifiedDate":"2023-11-11"},{"lineNumber":811,"author":{"gitId":"nikele2001"},"content":"**Precondition:** Appointment and client must exist before completing appointment.\\","lastModifiedDate":"2023-11-11"},{"lineNumber":812,"author":{"gitId":"nikele2001"},"content":"**Guarantees**: An appointment is completed for a client in UNOFAS only if the data entered is correct.","lastModifiedDate":"2023-11-11"},{"lineNumber":813,"author":{"gitId":"nikele2001"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":814,"author":{"gitId":"nikele2001"},"content":"**MSS**","lastModifiedDate":"2023-10-24"},{"lineNumber":815,"author":{"gitId":"nikele2001"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":816,"author":{"gitId":"nikele2001"},"content":"1.  User requests to \u003cu\u003elist clients (UC01)\u003c/u\u003e","lastModifiedDate":"2023-11-11"},{"lineNumber":817,"author":{"gitId":"nikele2001"},"content":"2.  UNOFAS shows a list of clients","lastModifiedDate":"2023-11-11"},{"lineNumber":818,"author":{"gitId":"nikele2001"},"content":"3.  User requests to complete appointment for client via the `complete` command","lastModifiedDate":"2023-11-10"},{"lineNumber":819,"author":{"gitId":"nikele2001"},"content":"4.  UNOFAS removes appointment from appointment list and client\u0027s contact card","lastModifiedDate":"2023-11-11"},{"lineNumber":820,"author":{"gitId":"nikele2001"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":821,"author":{"gitId":"nikele2001"},"content":"    Use case ends.","lastModifiedDate":"2023-10-24"},{"lineNumber":822,"author":{"gitId":"nikele2001"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":823,"author":{"gitId":"nikele2001"},"content":"**Extensions**","lastModifiedDate":"2023-10-24"},{"lineNumber":824,"author":{"gitId":"nikele2001"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":825,"author":{"gitId":"nikele2001"},"content":"* 3a. User enters the wrong details.","lastModifiedDate":"2023-10-24"},{"lineNumber":826,"author":{"gitId":"nikele2001"},"content":"    * 3a1. System shows an error message.","lastModifiedDate":"2023-10-24"},{"lineNumber":827,"author":{"gitId":"nikele2001"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2023-10-24"},{"lineNumber":828,"author":{"gitId":"nikele2001"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":829,"author":{"gitId":"nikele2001"},"content":"* 3b. User does not have an existing appointment scheduled.","lastModifiedDate":"2023-11-10"},{"lineNumber":830,"author":{"gitId":"nikele2001"},"content":"    * 3b1. System shows a warning message.","lastModifiedDate":"2023-11-10"},{"lineNumber":831,"author":{"gitId":"nikele2001"},"content":"      Use case ends.","lastModifiedDate":"2023-11-10"},{"lineNumber":832,"author":{"gitId":"nikele2001"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":833,"author":{"gitId":"nikele2001"},"content":"* 3c. User does not exist according to index provided.","lastModifiedDate":"2023-11-10"},{"lineNumber":834,"author":{"gitId":"nikele2001"},"content":"    * 3c1. System shows a warning message.","lastModifiedDate":"2023-11-10"},{"lineNumber":835,"author":{"gitId":"nikele2001"},"content":"      Use case ends.","lastModifiedDate":"2023-11-10"},{"lineNumber":836,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":837,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":838,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":839,"author":{"gitId":"-"},"content":"1.  Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2020-05-23"},{"lineNumber":840,"author":{"gitId":"-"},"content":"2.  Should be able to hold up to 1000 persons without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":841,"author":{"gitId":"sopa301"},"content":"3.  A user with typing speed of above 80WPM for regular English text (i.e. not code, not system admin commands) should","lastModifiedDate":"2023-11-10"},{"lineNumber":842,"author":{"gitId":"sopa301"},"content":"be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2023-11-10"},{"lineNumber":843,"author":{"gitId":"nikele2001"},"content":"4.  A user should be able to have up to 2000 clients.","lastModifiedDate":"2023-10-06"},{"lineNumber":844,"author":{"gitId":"nikele2001"},"content":"5.  The product is offered as a free offline service.","lastModifiedDate":"2023-10-06"},{"lineNumber":845,"author":{"gitId":"nikele2001"},"content":"6.  The codebase should be well-documented to aid in future maintenance and updates.","lastModifiedDate":"2023-10-06"},{"lineNumber":846,"author":{"gitId":"nikele2001"},"content":"7.  Should continue working despite invalid commands and error messages should be shown to the user.","lastModifiedDate":"2023-10-06"},{"lineNumber":847,"author":{"gitId":"nikele2001"},"content":"8.  All features added to the code should be tested.","lastModifiedDate":"2023-10-06"},{"lineNumber":848,"author":{"gitId":"nikele2001"},"content":"9.  All commands should be able to be executed by a financial advisor with little technical knowledge.","lastModifiedDate":"2023-10-06"},{"lineNumber":849,"author":{"gitId":"nikele2001"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":850,"author":{"gitId":"sopa301"},"content":"### Planned Enhancements","lastModifiedDate":"2023-11-05"},{"lineNumber":851,"author":{"gitId":"sopa301"},"content":"1. The current `schedule` command does not check if the given date is before the current date, so it is vulnerable to","lastModifiedDate":"2023-11-05"},{"lineNumber":852,"author":{"gitId":"sopa301"},"content":"user error. We plan to make the command check for the date and fail if the date is before the current date: `Date given","lastModifiedDate":"2023-11-05"},{"lineNumber":853,"author":{"gitId":"sopa301"},"content":" cannot be before the current date`.","lastModifiedDate":"2023-11-05"},{"lineNumber":854,"author":{"gitId":"sopa301"},"content":"2. The current `phone` and `next-of-kin phone` fields currently only accepts numbers. It cannot accept international","lastModifiedDate":"2023-11-05"},{"lineNumber":855,"author":{"gitId":"sopa301"},"content":"number formats. We plan to make the fields accept symbols so numbers such as `+6598765432` and `001-234-1-4610818`","lastModifiedDate":"2023-11-05"},{"lineNumber":856,"author":{"gitId":"sopa301"},"content":"will be accepted. This will involve changing the validity checker for both fields.","lastModifiedDate":"2023-11-05"},{"lineNumber":857,"author":{"gitId":"sopa301"},"content":"3. The current contact book does not check for duplicates beyond the exact matching of the person\u0027s `name`.","lastModifiedDate":"2023-11-05"},{"lineNumber":858,"author":{"gitId":"sopa301"},"content":"We plan to refuse adding/editing of a person\u0027s details if it results in two people sharing a `name` (case-insensitive)","lastModifiedDate":"2023-11-05"},{"lineNumber":859,"author":{"gitId":"sopa301"},"content":"or `phone` since two people are very unlikely to share those details.","lastModifiedDate":"2023-11-05"},{"lineNumber":860,"author":{"gitId":"sopa301"},"content":"4. The current `name` and `next-of-kin name` fields currently do not accept symbols. We plan to make the fields accept","lastModifiedDate":"2023-11-05"},{"lineNumber":861,"author":{"gitId":"sopa301"},"content":"symbols so that names like `Thaarshen s/o Thaarshen` and `O\u0027Brien` are accepted. This will involve changing the","lastModifiedDate":"2023-11-05"},{"lineNumber":862,"author":{"gitId":"sopa301"},"content":"validity checker for both fields.","lastModifiedDate":"2023-11-05"},{"lineNumber":863,"author":{"gitId":"sopa301"},"content":"5. The current `gather` command does not allow the gathering of all emails in the contact book or by multiple fields","lastModifiedDate":"2023-11-08"},{"lineNumber":864,"author":{"gitId":"sopa301"},"content":"at once. To allow the gathering of all the persons emails using `gather all` command, we plan create another","lastModifiedDate":"2023-11-08"},{"lineNumber":865,"author":{"gitId":"nikele2001"},"content":"`GatherEmailPrompt` class, with a method that will call the Person `getEmail()` method. To allow gathering emails by multiple fields, for example using the `fp/` and `t/` prefixes at once, we plan to use a similar approach","lastModifiedDate":"2023-11-11"},{"lineNumber":866,"author":{"gitId":"sopa301"},"content":"to `find` but return the person\u0027s email instead.","lastModifiedDate":"2023-11-08"},{"lineNumber":867,"author":{"gitId":"sopa301"},"content":"6. The `complete`, `add`, `edit` and `schedule` commands currently display the whole list (i.e. undoes the result of","lastModifiedDate":"2023-11-08"},{"lineNumber":868,"author":{"gitId":"sopa301"},"content":"any `find` command) after being executed, which might cause users to become disoriented. We plan to disable this","lastModifiedDate":"2023-11-08"},{"lineNumber":869,"author":{"gitId":"sopa301"},"content":"interaction between these commands and `find`.","lastModifiedDate":"2023-11-08"},{"lineNumber":870,"author":{"gitId":"sopa301"},"content":"7. The `clear` command confirmation window can be manipulated using the arrow and \u0027Enter\u0027 keys. The window is","lastModifiedDate":"2023-11-09"},{"lineNumber":871,"author":{"gitId":"sopa301"},"content":"initialised with the focus on the `confirm` button. This makes it possible for a user to accidentally press \u0027Enter\u0027","lastModifiedDate":"2023-11-09"},{"lineNumber":872,"author":{"gitId":"sopa301"},"content":"twice and wipe the contact book anyway, bypassing the defence mechanism entirely. We plan to make the command more","lastModifiedDate":"2023-11-09"},{"lineNumber":873,"author":{"gitId":"sopa301"},"content":"resistant to mistakes by having the user key in a specific phrase, or to initialise the window with the focus on the","lastModifiedDate":"2023-11-09"},{"lineNumber":874,"author":{"gitId":"sopa301"},"content":"`cancel` button instead.","lastModifiedDate":"2023-11-09"},{"lineNumber":875,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":876,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":877,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":878,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":879,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":880,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, OS-X","lastModifiedDate":"2020-05-23"},{"lineNumber":881,"author":{"gitId":"-"},"content":"* **Private contact detail**: A contact detail that is not meant to be shared with others","lastModifiedDate":"2020-05-23"},{"lineNumber":882,"author":{"gitId":"jylow"},"content":"* **API**: Application Programming Interface that enables application to use capabilities or data from another application","lastModifiedDate":"2023-10-06"},{"lineNumber":883,"author":{"gitId":"jylow"},"content":"* **Financial Advisor**: A person who provides financial advice to clients","lastModifiedDate":"2023-10-06"},{"lineNumber":884,"author":{"gitId":"sopa301"},"content":"* **Financial Products**: A product connected with the way a person manages or uses money(e.g. Insurance)","lastModifiedDate":"2023-11-10"},{"lineNumber":885,"author":{"gitId":"sopa301"},"content":"* **Client**: A person whose financial products are being managed by a financial advisor","lastModifiedDate":"2023-11-10"},{"lineNumber":886,"author":{"gitId":"jylow"},"content":"* **Portfolio value**: The intrinsic value of all financial products being held under a clients name","lastModifiedDate":"2023-10-06"},{"lineNumber":887,"author":{"gitId":"jylow"},"content":"* **Central Repository**: A centralised storage location for all user data","lastModifiedDate":"2023-10-06"},{"lineNumber":888,"author":{"gitId":"jylow"},"content":"* **Contact details**: Name, email, phone number, next-of-kin name, next-of-kin phone number and home address of a client","lastModifiedDate":"2023-10-06"},{"lineNumber":889,"author":{"gitId":"jylow"},"content":"* **Manager**: A person who is a superior in charge of managing and mentoring a group of financial advisors.","lastModifiedDate":"2023-10-06"},{"lineNumber":890,"author":{"gitId":"jylow"},"content":"* **Lexicographical**: Generalisation of alphabetical order to include symbols or elements of a totally ordered set.","lastModifiedDate":"2023-10-24"},{"lineNumber":891,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":892,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":893,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":894,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":895,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":896,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":897,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":898,"author":{"gitId":"sopa301"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting","lastModifiedDate":"2023-11-10"},{"lineNumber":899,"author":{"gitId":"sopa301"},"content":"point for testers to work on;","lastModifiedDate":"2023-11-10"},{"lineNumber":900,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":901,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":902,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":903,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":904,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":905,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":906,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":907,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":908,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":909,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":910,"author":{"gitId":"sopa301"},"content":"   2. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2023-11-10"},{"lineNumber":911,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":912,"author":{"gitId":"sopa301"},"content":"2. Saving window preferences","lastModifiedDate":"2023-11-10"},{"lineNumber":913,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":914,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":915,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":916,"author":{"gitId":"sopa301"},"content":"   2. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2023-11-10"},{"lineNumber":917,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":918,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":919,"author":{"gitId":"sopa301"},"content":"3. _{ more test cases …​ }_","lastModifiedDate":"2023-11-10"},{"lineNumber":920,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":921,"author":{"gitId":"-"},"content":"### Deleting a person","lastModifiedDate":"2020-05-23"},{"lineNumber":922,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":923,"author":{"gitId":"-"},"content":"1. Deleting a person while all persons are being shown","lastModifiedDate":"2020-05-23"},{"lineNumber":924,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":925,"author":{"gitId":"-"},"content":"   1. Prerequisites: List all persons using the `list` command. Multiple persons in the list.","lastModifiedDate":"2020-05-23"},{"lineNumber":926,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":927,"author":{"gitId":"sopa301"},"content":"   2. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2023-11-10"},{"lineNumber":928,"author":{"gitId":"sopa301"},"content":"      Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message.","lastModifiedDate":"2023-11-10"},{"lineNumber":929,"author":{"gitId":"sopa301"},"content":"      Timestamp in the status bar is updated.","lastModifiedDate":"2023-11-10"},{"lineNumber":930,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":931,"author":{"gitId":"sopa301"},"content":"   3. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2023-11-10"},{"lineNumber":932,"author":{"gitId":"-"},"content":"      Expected: No person is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2020-05-23"},{"lineNumber":933,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":934,"author":{"gitId":"sopa301"},"content":"   4. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2023-11-10"},{"lineNumber":935,"author":{"gitId":"-"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":936,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":937,"author":{"gitId":"sopa301"},"content":"2. _{ more test cases …​ }_","lastModifiedDate":"2023-11-10"},{"lineNumber":938,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":939,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":940,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":941,"author":{"gitId":"nikele2001"},"content":"1. Dealing with missing data files","lastModifiedDate":"2023-11-11"},{"lineNumber":942,"author":{"gitId":"nikele2001"},"content":"   1. If there is no saved data, the application will open with a new data file loaded with sample data","lastModifiedDate":"2023-11-11"},{"lineNumber":943,"author":{"gitId":"nikele2001"},"content":"   2. To do this:","lastModifiedDate":"2023-11-11"},{"lineNumber":944,"author":{"gitId":"nikele2001"},"content":"      1. Go to the location of the saved data. The location of the saved data can be found at the bottom left of the UNOFAS app.","lastModifiedDate":"2023-11-11"},{"lineNumber":945,"author":{"gitId":"nikele2001"},"content":"      2. Delete the file `addressbook.json`.","lastModifiedDate":"2023-11-11"},{"lineNumber":946,"author":{"gitId":"nikele2001"},"content":"      3. Restart the application.","lastModifiedDate":"2023-11-11"},{"lineNumber":947,"author":{"gitId":"nikele2001"},"content":"   3. A new file with sample contacts and appointments will be created.","lastModifiedDate":"2023-11-11"},{"lineNumber":948,"author":{"gitId":"nikele2001"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":949,"author":{"gitId":"nikele2001"},"content":"2. Dealing with corrupted data files","lastModifiedDate":"2023-11-11"},{"lineNumber":950,"author":{"gitId":"nikele2001"},"content":"   1. If saved data is corrupted, the application will wipe the corrupted data and restart with no contacts and appointments.","lastModifiedDate":"2023-11-11"},{"lineNumber":951,"author":{"gitId":"nikele2001"},"content":"   2. To simulate a corrupted file:","lastModifiedDate":"2023-11-11"},{"lineNumber":952,"author":{"gitId":"nikele2001"},"content":"      1. Go to the location of the saved data.","lastModifiedDate":"2023-11-11"},{"lineNumber":953,"author":{"gitId":"nikele2001"},"content":"      2. Open `addressbook.json` and corrupt the file in a way that makes it an invalid file to read (e.g. adding alphabets into a contact\u0027s phone number field)","lastModifiedDate":"2023-11-11"},{"lineNumber":954,"author":{"gitId":"nikele2001"},"content":"      3. Restart the application.","lastModifiedDate":"2023-11-11"},{"lineNumber":955,"author":{"gitId":"nikele2001"},"content":"   3. A new file will be created with no contacts and appointments.","lastModifiedDate":"2023-11-11"},{"lineNumber":956,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"Kb-Tay":58,"nikele2001":183,"AlyssaPng":106,"sopa301":266,"jylow":46,"-":297}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2023-10-28"},{"lineNumber":3,"author":{"gitId":"AlyssaPng"},"content":"title: UNOFAS User Guide","lastModifiedDate":"2023-10-28"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"AlyssaPng"},"content":"UNOFAS (UNO: One FAS: Financial Advisors app) is a **desktop app for Financial Advisors to manage client\u0027s contacts,","lastModifiedDate":"2023-10-27"},{"lineNumber":7,"author":{"gitId":"Kb-Tay"},"content":"optimized for use via a Command Line Interface** (CLI) while still having the benefits of a","lastModifiedDate":"2023-10-02"},{"lineNumber":8,"author":{"gitId":"sopa301"},"content":"Graphical User Interface (GUI). If you can type fast, UNOFAS can help you manage and retrieve client\u0027s information","lastModifiedDate":"2023-10-18"},{"lineNumber":9,"author":{"gitId":"sopa301"},"content":"better than traditional GUI apps.","lastModifiedDate":"2023-10-18"},{"lineNumber":10,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":11,"author":{"gitId":"sopa301"},"content":"This guide provides you with comprehensive instructions on utilizing UNOFAS. It also serves as a mode of referral to","lastModifiedDate":"2023-11-02"},{"lineNumber":12,"author":{"gitId":"sopa301"},"content":"help learn the various commands required to effectively learn and be able to integrate the application to your daily","lastModifiedDate":"2023-11-02"},{"lineNumber":13,"author":{"gitId":"sopa301"},"content":"use as financial advisors. To help you make the most of this resource, utilize the Table of Contents provided below.","lastModifiedDate":"2023-11-02"},{"lineNumber":14,"author":{"gitId":"sopa301"},"content":"Click on the relevant links to easily navigate through the guide and access the information you need.","lastModifiedDate":"2023-11-02"},{"lineNumber":15,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":16,"author":{"gitId":"jylow"},"content":"## Table of Contents","lastModifiedDate":"2023-10-25"},{"lineNumber":17,"author":{"gitId":"jylow"},"content":"* [Quick Start](#quick-start)","lastModifiedDate":"2023-10-25"},{"lineNumber":18,"author":{"gitId":"nikele2001"},"content":"* [UI Components](#ui-components)","lastModifiedDate":"2023-11-11"},{"lineNumber":19,"author":{"gitId":"nikele2001"},"content":"  * [General UI Information](#general-ui-information)","lastModifiedDate":"2023-11-11"},{"lineNumber":20,"author":{"gitId":"nikele2001"},"content":"  * [Contact Card](#contact-card)","lastModifiedDate":"2023-11-11"},{"lineNumber":21,"author":{"gitId":"nikele2001"},"content":"  * [Appointment Card](#appointment-card)","lastModifiedDate":"2023-11-11"},{"lineNumber":22,"author":{"gitId":"jylow"},"content":"* [Features](#features)","lastModifiedDate":"2023-10-25"},{"lineNumber":23,"author":{"gitId":"jylow"},"content":"  * [Help](#viewing-help--help)","lastModifiedDate":"2023-10-25"},{"lineNumber":24,"author":{"gitId":"AlyssaPng"},"content":"  * [Add](#adding-a-person--add)","lastModifiedDate":"2023-10-26"},{"lineNumber":25,"author":{"gitId":"jylow"},"content":"  * [List](#listing-all-persons--list)","lastModifiedDate":"2023-10-25"},{"lineNumber":26,"author":{"gitId":"jylow"},"content":"  * [Edit](#editing-a-person--edit)","lastModifiedDate":"2023-10-25"},{"lineNumber":27,"author":{"gitId":"AlyssaPng"},"content":"  * [Find](#locating-persons-by-name-financial-plan-andor-tag--find)","lastModifiedDate":"2023-10-27"},{"lineNumber":28,"author":{"gitId":"AlyssaPng"},"content":"  * [Gather](#gathering-emails-of-matching-persons--gather)","lastModifiedDate":"2023-10-26"},{"lineNumber":29,"author":{"gitId":"Kb-Tay"},"content":"  * [Schedule](#scheduling-an-appointment--schedule)","lastModifiedDate":"2023-10-26"},{"lineNumber":30,"author":{"gitId":"Kb-Tay"},"content":"  * [Complete](#completing-an-appointment--complete)","lastModifiedDate":"2023-10-26"},{"lineNumber":31,"author":{"gitId":"AlyssaPng"},"content":"  * [Delete](#deleting-a-person--delete)","lastModifiedDate":"2023-10-26"},{"lineNumber":32,"author":{"gitId":"jylow"},"content":"  * [Clear](#clearing-all-entries--clear)","lastModifiedDate":"2023-10-25"},{"lineNumber":33,"author":{"gitId":"jylow"},"content":"  * [Sort](#sorting-of-data--sort)","lastModifiedDate":"2023-10-25"},{"lineNumber":34,"author":{"gitId":"jylow"},"content":"* [FAQ](#faq)","lastModifiedDate":"2023-10-25"},{"lineNumber":35,"author":{"gitId":"jylow"},"content":"* [Known Issues](#known-issues)","lastModifiedDate":"2023-10-25"},{"lineNumber":36,"author":{"gitId":"jylow"},"content":"* [Command Summary](#command-summary)","lastModifiedDate":"2023-10-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"nikele2001"},"content":"## Quick Start","lastModifiedDate":"2023-11-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"1. Ensure you have Java `11` or above installed in your Computer.","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"sopa301"},"content":"1. Download the latest `unofas.jar` from [here](https://github.com/AY2324S1-CS2103T-F12-1/tp/releases).","lastModifiedDate":"2023-10-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"sopa301"},"content":"1. Copy the file to the folder you want to use as the _home folder_ for your UNOFAS.","lastModifiedDate":"2023-10-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"sopa301"},"content":"1. Open a command terminal, `cd` into the folder you put the jar file in, and use the `java -jar unofas.jar` command","lastModifiedDate":"2023-11-02"},{"lineNumber":49,"author":{"gitId":"sopa301"},"content":"   to run the application.\u003cbr\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":50,"author":{"gitId":"-"},"content":"   A GUI similar to the below should appear in a few seconds. Note how the app contains some sample data.\u003cbr\u003e","lastModifiedDate":"2023-01-01"},{"lineNumber":51,"author":{"gitId":"-"},"content":"   ![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"sopa301"},"content":"1. Type the command in the command box and press Enter to execute it. e.g. typing **`help`** and pressing Enter will","lastModifiedDate":"2023-11-02"},{"lineNumber":54,"author":{"gitId":"sopa301"},"content":"   open the help window.\u003cbr\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":55,"author":{"gitId":"-"},"content":"   Some example commands you can try:","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"   * `list` : Lists all contacts.","lastModifiedDate":"2023-01-01"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"sopa301"},"content":"   * `add n/John Doe p/98765432 e/johnd@example.com a/John street, block 123, #01-01` : Adds a contact named `John Doe`","lastModifiedDate":"2023-11-02"},{"lineNumber":60,"author":{"gitId":"sopa301"},"content":"   to the Contact Book.","lastModifiedDate":"2023-11-02"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"   * `delete 3` : Deletes the 3rd contact shown in the current list.","lastModifiedDate":"2023-01-01"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"   * `clear` : Deletes all contacts.","lastModifiedDate":"2023-01-01"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"   * `exit` : Exits the app.","lastModifiedDate":"2023-01-01"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"1. Refer to the [Features](#features) below for details of each command.","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-11-11"},{"lineNumber":71,"author":{"gitId":"nikele2001"},"content":"## UI Components","lastModifiedDate":"2023-11-11"},{"lineNumber":72,"author":{"gitId":"nikele2001"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":73,"author":{"gitId":"nikele2001"},"content":"![generalUi](images/generalUi.png)","lastModifiedDate":"2023-11-11"},{"lineNumber":74,"author":{"gitId":"nikele2001"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":75,"author":{"gitId":"nikele2001"},"content":"### General UI information","lastModifiedDate":"2023-11-11"},{"lineNumber":76,"author":{"gitId":"nikele2001"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":77,"author":{"gitId":"nikele2001"},"content":"Component | Purpose","lastModifiedDate":"2023-11-11"},{"lineNumber":78,"author":{"gitId":"nikele2001"},"content":"--------|------------------","lastModifiedDate":"2023-11-11"},{"lineNumber":79,"author":{"gitId":"nikele2001"},"content":"**Navigation Bar** | Allows you to exit UNOFAS or view help","lastModifiedDate":"2023-11-11"},{"lineNumber":80,"author":{"gitId":"nikele2001"},"content":"**Command Line** | Location to enter commands","lastModifiedDate":"2023-11-11"},{"lineNumber":81,"author":{"gitId":"nikele2001"},"content":"**Result Line** | Displays the result after a command is entered","lastModifiedDate":"2023-11-11"},{"lineNumber":82,"author":{"gitId":"nikele2001"},"content":"**Contact List** | Displays clients","lastModifiedDate":"2023-11-11"},{"lineNumber":83,"author":{"gitId":"nikele2001"},"content":"**Appointment List** | Displays appointments","lastModifiedDate":"2023-11-11"},{"lineNumber":84,"author":{"gitId":"nikele2001"},"content":"**Contact Card** | Displays detailed information about a patient","lastModifiedDate":"2023-11-11"},{"lineNumber":85,"author":{"gitId":"nikele2001"},"content":"**Appointment Card** | Displays detailed information about an appointment","lastModifiedDate":"2023-11-11"},{"lineNumber":86,"author":{"gitId":"nikele2001"},"content":"**Save Location** | Displays the location where your UNOFAS data is stored","lastModifiedDate":"2023-11-11"},{"lineNumber":87,"author":{"gitId":"nikele2001"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":88,"author":{"gitId":"nikele2001"},"content":"### Contact Card","lastModifiedDate":"2023-11-11"},{"lineNumber":89,"author":{"gitId":"nikele2001"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":90,"author":{"gitId":"nikele2001"},"content":"![contactCardUi](images/contactCardUi.png)","lastModifiedDate":"2023-11-11"},{"lineNumber":91,"author":{"gitId":"nikele2001"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":92,"author":{"gitId":"nikele2001"},"content":"* Shows the client\u0027s name, phone number, financial plan(s) (if any), address, email address, next-of-kin name, next-of-kin phone number, appointment (if any) and tag(s) (if any).","lastModifiedDate":"2023-11-11"},{"lineNumber":93,"author":{"gitId":"nikele2001"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":94,"author":{"gitId":"nikele2001"},"content":"### Appointment Card","lastModifiedDate":"2023-11-11"},{"lineNumber":95,"author":{"gitId":"nikele2001"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":96,"author":{"gitId":"nikele2001"},"content":"![appointmentCardUi](images/appointmentCardUi.png)","lastModifiedDate":"2023-11-11"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":98,"author":{"gitId":"nikele2001"},"content":"* Shows the appointment name, client allocated to the appointment and the appointment date and time.","lastModifiedDate":"2023-11-11"},{"lineNumber":99,"author":{"gitId":"nikele2001"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":100,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"jylow"},"content":"# Features","lastModifiedDate":"2023-10-25"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"**:information_source: Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"* Words in `UPPER_CASE` are the parameters to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"  e.g. in `add n/NAME`, `NAME` is a parameter which can be used as `add n/John Doe`.","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"* Items in square brackets are optional.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"sopa301"},"content":"  e.g. `n/NAME [t/TAG]` can be used as `n/John Doe t/friend` or as `n/John Doe`.","lastModifiedDate":"2023-11-10"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"sopa301"},"content":"* Unless explicitly allowed, blank inputs or inputting any number of spaces as an argument for a field is invalid.","lastModifiedDate":"2023-11-05"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":116,"author":{"gitId":"-"},"content":"* Items with `…`​ after them can be used multiple times including zero times.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"  e.g. `[t/TAG]…​` can be used as ` ` (i.e. 0 times), `t/friend`, `t/friend t/family` etc.","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"* Parameters can be in any order.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `n/NAME p/PHONE_NUMBER`, `p/PHONE_NUMBER n/NAME` is also acceptable.","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"sopa301"},"content":"* Any input parameters that do not adhere to the accepted values will result in the command","lastModifiedDate":"2023-11-02"},{"lineNumber":123,"author":{"gitId":"sopa301"},"content":"  **failing and not executing**.","lastModifiedDate":"2023-11-02"},{"lineNumber":124,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":125,"author":{"gitId":"sopa301"},"content":"* Extraneous parameters for commands that do not take in parameters (such as `help`, `list`, `exit` and `clear`) will","lastModifiedDate":"2023-11-02"},{"lineNumber":126,"author":{"gitId":"sopa301"},"content":"  be ignored.\u003cbr\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":127,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `help 123`, it will be interpreted as `help`.","lastModifiedDate":"2021-02-03"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03"},{"lineNumber":129,"author":{"gitId":"sopa301"},"content":"* If you are using a PDF version of this document, be careful when copying and pasting commands that span multiple","lastModifiedDate":"2023-11-02"},{"lineNumber":130,"author":{"gitId":"sopa301"},"content":"  lines as space characters surrounding line-breaks may be omitted when copied over to the application.","lastModifiedDate":"2023-11-02"},{"lineNumber":131,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":132,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"AlyssaPng"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-11-07"},{"lineNumber":135,"author":{"gitId":"AlyssaPng"},"content":"# Argument Summary","lastModifiedDate":"2023-11-07"},{"lineNumber":136,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":137,"author":{"gitId":"sopa301"},"content":"Below is a table summarising common arguments used in `add`, `edit`, `find`, `schedule` etc. Refer to the table below","lastModifiedDate":"2023-11-08"},{"lineNumber":138,"author":{"gitId":"jylow"},"content":"to view the arguments\u0027 prefix, and their acceptable values. Unless specified, having only space characters i.e an empty","lastModifiedDate":"2023-11-11"},{"lineNumber":139,"author":{"gitId":"jylow"},"content":"value, is not an acceptable value and will result in a warning.","lastModifiedDate":"2023-11-11"},{"lineNumber":140,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":141,"author":{"gitId":"AlyssaPng"},"content":"| Prefix | Argument              | Acceptable Values                                                      |","lastModifiedDate":"2023-11-07"},{"lineNumber":142,"author":{"gitId":"jylow"},"content":"|--------|-----------------------|------------------------------------------------------------------------|","lastModifiedDate":"2023-11-11"},{"lineNumber":143,"author":{"gitId":"AlyssaPng"},"content":"| -      | INDEX                 | Number (1 to current size of the contact book)                         |","lastModifiedDate":"2023-11-07"},{"lineNumber":144,"author":{"gitId":"AlyssaPng"},"content":"| `n/`   | NAME                  | Alphabets, numbers, and space characters only                          |","lastModifiedDate":"2023-11-07"},{"lineNumber":145,"author":{"gitId":"AlyssaPng"},"content":"| `p/`   | PHONE_NUMBER          | Numbers only and at least 3 digits long                                |","lastModifiedDate":"2023-11-07"},{"lineNumber":146,"author":{"gitId":"sopa301"},"content":"| `e/`   | EMAIL                 | Alphabets, numbers, and symbols only in a valid email format           |","lastModifiedDate":"2023-11-08"},{"lineNumber":147,"author":{"gitId":"AlyssaPng"},"content":"| `a/`   | ADDRESS               | Any value is possible                                                  |","lastModifiedDate":"2023-11-07"},{"lineNumber":148,"author":{"gitId":"AlyssaPng"},"content":"| `nk/`  | NEXT_KIN              | Alphabets, numbers, and space characters only                          |","lastModifiedDate":"2023-11-07"},{"lineNumber":149,"author":{"gitId":"AlyssaPng"},"content":"| `nkp/` | NEXT_KIN_PHONE        | Numbers only and at least 3 digits long                                |","lastModifiedDate":"2023-11-07"},{"lineNumber":150,"author":{"gitId":"jylow"},"content":"| `fp/`  | FINANCIAL_PLAN        | Alphabets, numbers, and space characters only. Empty value is accepted |","lastModifiedDate":"2023-11-11"},{"lineNumber":151,"author":{"gitId":"jylow"},"content":"| `t/`   | TAG                   | Alphabets and numbers only. Empty value is accepted                    |","lastModifiedDate":"2023-11-11"},{"lineNumber":152,"author":{"gitId":"jylow"},"content":"| `ap/`  | APPOINTMENT_NAME      | Alphabets, numbers, and space characters only                          |","lastModifiedDate":"2023-11-11"},{"lineNumber":153,"author":{"gitId":"AlyssaPng"},"content":"| `d/`   | APPOINTMENT_DATE      | Format: dd-MM-yyyy (e.g., 31-12-2023)                                  |","lastModifiedDate":"2023-11-07"},{"lineNumber":154,"author":{"gitId":"AlyssaPng"},"content":"| `d/`   | APPOINTMENT_DATE_TIME | Format: dd-MM-yyyy HH:mm (e.g., 31-12-2023 14:30)                      |","lastModifiedDate":"2023-11-07"},{"lineNumber":155,"author":{"gitId":"AlyssaPng"},"content":"| -      | KEYWORD               | `name` or `appointment`                                                |","lastModifiedDate":"2023-11-07"},{"lineNumber":156,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":157,"author":{"gitId":"jylow"},"content":"-----------------------","lastModifiedDate":"2023-10-25"},{"lineNumber":158,"author":{"gitId":"-"},"content":"### Viewing help : `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"sopa301"},"content":"Shows a message explaining how to access the help page, as well as a list of available keywords.","lastModifiedDate":"2023-10-20"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"![help message](images/helpMessage.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":164,"author":{"gitId":"-"},"content":"Format: `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":166,"author":{"gitId":"jylow"},"content":"---------------------------","lastModifiedDate":"2023-10-25"},{"lineNumber":167,"author":{"gitId":"AlyssaPng"},"content":"### Adding a person : `add`","lastModifiedDate":"2023-10-26"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"sopa301"},"content":"Add a client’s contacts to contact book (name, phone number, email, home address, next-of-kin name, next-of-kin phone","lastModifiedDate":"2023-11-02"},{"lineNumber":170,"author":{"gitId":"sopa301"},"content":"number) into contact book.","lastModifiedDate":"2023-11-02"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"nikele2001"},"content":"Format: `add n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS nk/NEXT_KIN nkp/NEXT_KIN_PHONE [fp/FINANCIAL_PLAN]… [t/TAG]…​`","lastModifiedDate":"2023-11-11"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"sopa301"},"content":"* Adding a person with the exact same name (case-sensitive) as a person currently in the contact book counts as a","lastModifiedDate":"2023-11-10"},{"lineNumber":175,"author":{"gitId":"sopa301"},"content":"    duplicate and will cause the command to fail. Duplicate information in other ways does not count as a duplicate","lastModifiedDate":"2023-11-10"},{"lineNumber":176,"author":{"gitId":"sopa301"},"content":"    person.","lastModifiedDate":"2023-11-10"},{"lineNumber":177,"author":{"gitId":"sopa301"},"content":"* To prevent accidentally adding duplicates, you can use [Find](#locating-persons-by-name-financial-plan-andor-tag--find)","lastModifiedDate":"2023-11-05"},{"lineNumber":178,"author":{"gitId":"sopa301"},"content":"    to check if you have already added the person already.","lastModifiedDate":"2023-11-05"},{"lineNumber":179,"author":{"gitId":"jylow"},"content":"* After performing an add, the list displayed will be reset to display all clients.","lastModifiedDate":"2023-11-12"},{"lineNumber":180,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":181,"author":{"gitId":"AlyssaPng"},"content":"Acceptable Values: Refer to [Argument Summary](#argument-summary).","lastModifiedDate":"2023-11-07"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"sopa301"},"content":"A person can have any number of Financial Plans (including 0).","lastModifiedDate":"2023-11-08"},{"lineNumber":185,"author":{"gitId":"sopa301"},"content":"A person can have any number of tags (including 0).","lastModifiedDate":"2023-11-08"},{"lineNumber":186,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2023-11-05"},{"lineNumber":189,"author":{"gitId":"nikele2001"},"content":"* `add n/John p/80101010 e/johndoe@gmail.com a/Punggol Central Blk 444 #15-32 820123 nk/Brennan nkp/82020202 t/80yo fp/Financial Plan C`","lastModifiedDate":"2023-11-07"},{"lineNumber":190,"author":{"gitId":"nikele2001"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":191,"author":{"gitId":"nikele2001"},"content":"Successful Output: `New person added: John;","lastModifiedDate":"2023-11-05"},{"lineNumber":192,"author":{"gitId":"nikele2001"},"content":"Phone: 80101010;","lastModifiedDate":"2023-11-05"},{"lineNumber":193,"author":{"gitId":"nikele2001"},"content":"Email: johndoe@gmail.com;","lastModifiedDate":"2023-11-05"},{"lineNumber":194,"author":{"gitId":"nikele2001"},"content":"Address: Punggol Central Blk 444 #15-32 820123;","lastModifiedDate":"2023-11-05"},{"lineNumber":195,"author":{"gitId":"nikele2001"},"content":"Next-of-kin Name: Brennan;","lastModifiedDate":"2023-11-05"},{"lineNumber":196,"author":{"gitId":"nikele2001"},"content":"Next-of-kin Phone: 82020202;","lastModifiedDate":"2023-11-05"},{"lineNumber":197,"author":{"gitId":"nikele2001"},"content":"Appointment: No Appointment made!;","lastModifiedDate":"2023-11-05"},{"lineNumber":198,"author":{"gitId":"nikele2001"},"content":"Financial Plans: [Financial Plan C];","lastModifiedDate":"2023-11-07"},{"lineNumber":199,"author":{"gitId":"nikele2001"},"content":"Tags: [80yo]`","lastModifiedDate":"2023-11-07"},{"lineNumber":200,"author":{"gitId":"nikele2001"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":201,"author":{"gitId":"nikele2001"},"content":"![result for \u0027add n/John p/80101010 e/johndoe@gmail.com a/Punggol Central Blk 444 #15-32 820123 nk/Brennan nkp/82020202 t/80yo fp/Financial Plan C\u0027](images/addUi.png)","lastModifiedDate":"2023-11-11"},{"lineNumber":202,"author":{"gitId":"nikele2001"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":203,"author":{"gitId":"Kb-Tay"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:information_source:","lastModifiedDate":"2023-11-07"},{"lineNumber":204,"author":{"gitId":"nikele2001"},"content":"**Do note** that it is possible to add a client\u0027s contact with multiple tags by duplicating the `t/` prefix. The same can be done for financial plans with the `fp/` prefix.","lastModifiedDate":"2023-11-11"},{"lineNumber":205,"author":{"gitId":"Kb-Tay"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-11-07"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":207,"author":{"gitId":"AlyssaPng"},"content":"------------------","lastModifiedDate":"2023-10-27"},{"lineNumber":208,"author":{"gitId":"-"},"content":"### Listing all persons : `list`","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"jylow"},"content":"Display a list of all the clients and their contact details that are currently stored in the address book. ","lastModifiedDate":"2023-11-11"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"Format: `list`","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"AlyssaPng"},"content":"Successful Output: `Listed all persons`","lastModifiedDate":"2023-10-27"},{"lineNumber":215,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":216,"author":{"gitId":"AlyssaPng"},"content":"![result for \u0027list\u0027](images/ListUi.png)","lastModifiedDate":"2023-10-27"},{"lineNumber":217,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":218,"author":{"gitId":"jylow"},"content":"--------------------------------","lastModifiedDate":"2023-10-25"},{"lineNumber":219,"author":{"gitId":"-"},"content":"### Editing a person : `edit`","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"nikele2001"},"content":"Edit clients contact fields using an index followed by the updated details.","lastModifiedDate":"2023-11-05"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"nikele2001"},"content":"Format: `edit INDEX [n/NAME] [p/PHONE_NUMBER] [e/EMAIL] [a/ADDRESS] [nk/NEXT_KIN] [nkp/NEXT_KIN_PHONE] [fp/FINANCIAL_PLAN]…​ [t/TAG]…​`","lastModifiedDate":"2023-11-07"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"* Edits the person at the specified `INDEX`. The index refers to the index number shown in the displayed person list. The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"* At least one of the optional fields must be provided.","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"* Existing values will be updated to the input values.","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"sopa301"},"content":"* Editing the name of a person to be the exact same name as another person currently in the contact book","lastModifiedDate":"2023-11-05"},{"lineNumber":229,"author":{"gitId":"sopa301"},"content":"(case-sensitive) counts as a duplicate and will cause the command to fail. Duplicate information in other ways does","lastModifiedDate":"2023-11-10"},{"lineNumber":230,"author":{"gitId":"sopa301"},"content":"not count as a duplicate person.","lastModifiedDate":"2023-11-10"},{"lineNumber":231,"author":{"gitId":"sopa301"},"content":"* When editing financial plans or tags, the existing financial plans or tags of the person will be removed i.e. adding","lastModifiedDate":"2023-11-10"},{"lineNumber":232,"author":{"gitId":"sopa301"},"content":"of tags is not cumulative.","lastModifiedDate":"2023-11-08"},{"lineNumber":233,"author":{"gitId":"sopa301"},"content":"* You can remove all the person’s tags by typing `t/` without specifying any tags after it.","lastModifiedDate":"2023-11-08"},{"lineNumber":234,"author":{"gitId":"AlyssaPng"},"content":"* You can remove all the person’s financial plans by typing `fp/` without","lastModifiedDate":"2023-10-18"},{"lineNumber":235,"author":{"gitId":"nikele2001"},"content":"  specifying any financial plans after it.","lastModifiedDate":"2023-11-11"},{"lineNumber":236,"author":{"gitId":"nikele2001"},"content":"* A person\u0027s appointment cannot be edited in this manner. Refer to [Schedule](#scheduling-an-appointment--schedule).","lastModifiedDate":"2023-11-11"},{"lineNumber":237,"author":{"gitId":"jylow"},"content":"* After performing an edit, the list displayed will be reset to display all clients.","lastModifiedDate":"2023-11-11"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"AlyssaPng"},"content":"Acceptable Values: Refer to [Argument Summary](#argument-summary).","lastModifiedDate":"2023-11-07"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":241,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"AlyssaPng"},"content":"*  `edit 4 n/john doe a/23 woodlands ave 123` Edits the name and address of the 1st person to be `john doe` and `woodlands ave 123` respectively.","lastModifiedDate":"2023-10-27"},{"lineNumber":243,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":244,"author":{"gitId":"Kb-Tay"},"content":"Successful Output:","lastModifiedDate":"2023-10-02"},{"lineNumber":245,"author":{"gitId":"AlyssaPng"},"content":"`Edited Person: john doe;","lastModifiedDate":"2023-10-27"},{"lineNumber":246,"author":{"gitId":"AlyssaPng"},"content":"Phone: 80101010;","lastModifiedDate":"2023-10-27"},{"lineNumber":247,"author":{"gitId":"AlyssaPng"},"content":"Email: johndoe@gmail.com;","lastModifiedDate":"2023-10-27"},{"lineNumber":248,"author":{"gitId":"AlyssaPng"},"content":"Address: 23 woodlands ave 123;","lastModifiedDate":"2023-10-27"},{"lineNumber":249,"author":{"gitId":"AlyssaPng"},"content":"Next-of-kin Name: Brennan;","lastModifiedDate":"2023-10-27"},{"lineNumber":250,"author":{"gitId":"AlyssaPng"},"content":"Next-of-kin Phone: 82020202;","lastModifiedDate":"2023-10-27"},{"lineNumber":251,"author":{"gitId":"AlyssaPng"},"content":"Appointment: No Appointment made!;","lastModifiedDate":"2023-10-27"},{"lineNumber":252,"author":{"gitId":"AlyssaPng"},"content":"Financial Plans: ;","lastModifiedDate":"2023-10-27"},{"lineNumber":253,"author":{"gitId":"AlyssaPng"},"content":"Tags:`","lastModifiedDate":"2023-10-27"},{"lineNumber":254,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":255,"author":{"gitId":"AlyssaPng"},"content":"![result for \u0027edit 4 n/john doe a/23 woodlands ave 123\u0027](images/editUi.png)","lastModifiedDate":"2023-10-27"},{"lineNumber":256,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":257,"author":{"gitId":"Kb-Tay"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:information_source:","lastModifiedDate":"2023-11-07"},{"lineNumber":258,"author":{"gitId":"Kb-Tay"},"content":"**Do note** that it is possible to add a client\u0027s contact with multiple tags by duplicating the `t/` prefix. The same can be done with for financial plans with the `fp/` prefix.","lastModifiedDate":"2023-11-07"},{"lineNumber":259,"author":{"gitId":"Kb-Tay"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-11-07"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":261,"author":{"gitId":"jylow"},"content":"---------------","lastModifiedDate":"2023-10-25"},{"lineNumber":262,"author":{"gitId":"AlyssaPng"},"content":"### Locating persons by name, financial plan, and/or tag : `find`","lastModifiedDate":"2023-10-27"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"sopa301"},"content":"Finds persons whose names, tags or financial plans contain any of the specified keywords.","lastModifiedDate":"2023-10-25"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"sopa301"},"content":"Format: `find [n/NAME]…​ [fp/FINANCIAL_PLAN]…​ [t/TAG]…​`","lastModifiedDate":"2023-10-25"},{"lineNumber":267,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"sopa301"},"content":"* At least one of the optional fields must be provided.","lastModifiedDate":"2023-10-25"},{"lineNumber":269,"author":{"gitId":"sopa301"},"content":"* This command will ignore other prefixes. Using them anyway can cause undefined behaviour.","lastModifiedDate":"2023-11-05"},{"lineNumber":270,"author":{"gitId":"sopa301"},"content":"* The search is case-insensitive. e.g `hans` will match `Hans`.","lastModifiedDate":"2023-11-08"},{"lineNumber":271,"author":{"gitId":"sopa301"},"content":"* For names, only full words will be matched e.g. `Han` will not match `Hans`.","lastModifiedDate":"2023-11-08"},{"lineNumber":272,"author":{"gitId":"sopa301"},"content":"* Calling this command on a sorted list will retain the sorted quality of the list.","lastModifiedDate":"2023-11-02"},{"lineNumber":273,"author":{"gitId":"sopa301"},"content":"* For financial plans and tags, any substring will be matched e.g. `Senior` will match `SuperSenior`.","lastModifiedDate":"2023-11-08"},{"lineNumber":274,"author":{"gitId":"-"},"content":"* Persons matching at least one keyword will be returned (i.e. `OR` search).","lastModifiedDate":"2020-05-23"},{"lineNumber":275,"author":{"gitId":"sopa301"},"content":"  e.g. `n/Hans n/Bo` will return `Hans Gruber`, `Bo Yang`.","lastModifiedDate":"2023-11-08"},{"lineNumber":276,"author":{"gitId":"nikele2001"},"content":"* Upon successful execution of the command, only the relevant contact details will be reflected in the **Contacts list**. The relevant appointment details will also be updated in the **Appointments list**.","lastModifiedDate":"2023-11-10"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":278,"author":{"gitId":"AlyssaPng"},"content":"Acceptable Values: Refer to [Argument Summary](#argument-summary).","lastModifiedDate":"2023-11-07"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":280,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":281,"author":{"gitId":"sopa301"},"content":"* `find n/john n/charlie` returns `Charlie`, `john doe`\u003cbr\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":282,"author":{"gitId":"nikele2001"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":283,"author":{"gitId":"sopa301"},"content":"  ![result for \u0027find john charlie\u0027](images/findJohnCharlieResult.png)","lastModifiedDate":"2023-11-02"},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":285,"author":{"gitId":"AlyssaPng"},"content":"### Gathering emails of matching persons : `gather`","lastModifiedDate":"2023-10-26"},{"lineNumber":286,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":287,"author":{"gitId":"AlyssaPng"},"content":"Gathers all the emails of persons with a desired financial plan or tag.","lastModifiedDate":"2023-10-26"},{"lineNumber":288,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":289,"author":{"gitId":"AlyssaPng"},"content":"Format: `gather fp/FINANCIAL PLAN` or `gather t/TAG`","lastModifiedDate":"2023-10-26"},{"lineNumber":290,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":291,"author":{"gitId":"jylow"},"content":"* Generates a list of emails separated by semicolons, making it convenient for copying and pasting into the recipient input of an email application. ","lastModifiedDate":"2023-11-11"},{"lineNumber":292,"author":{"gitId":"jylow"},"content":"  This function currently works for gmail and outlook but might not work for all email services.","lastModifiedDate":"2023-11-11"},{"lineNumber":293,"author":{"gitId":"sopa301"},"content":"* Either **Financial Plan or Tag** can be searched at once, but **not both**.","lastModifiedDate":"2023-11-08"},{"lineNumber":294,"author":{"gitId":"sopa301"},"content":"* The search is case-insensitive e.g. `financial` will match `FINANCIAL` or `Financial`.","lastModifiedDate":"2023-11-10"},{"lineNumber":295,"author":{"gitId":"sopa301"},"content":"* A person\u0027s email will be gathered if the prompt matches a substring of their financial plan or tag.","lastModifiedDate":"2023-11-02"},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":297,"author":{"gitId":"AlyssaPng"},"content":"Acceptable Values: Refer to [Argument Summary](#argument-summary).","lastModifiedDate":"2023-11-07"},{"lineNumber":298,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":299,"author":{"gitId":"AlyssaPng"},"content":"Examples:","lastModifiedDate":"2023-10-18"},{"lineNumber":300,"author":{"gitId":"AlyssaPng"},"content":"* `gather t/Elderly`","lastModifiedDate":"2023-10-26"},{"lineNumber":301,"author":{"gitId":"AlyssaPng"},"content":"* `gather fp/Financial Plan A`","lastModifiedDate":"2023-10-27"},{"lineNumber":302,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":303,"author":{"gitId":"AlyssaPng"},"content":"Successful Output:","lastModifiedDate":"2023-10-18"},{"lineNumber":304,"author":{"gitId":"jylow"},"content":"`davidmiller@gmail.com; bob@example.com;`","lastModifiedDate":"2023-11-11"},{"lineNumber":305,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":306,"author":{"gitId":"AlyssaPng"},"content":"![result for`gather fp/Financial Plan A\u0027](images/gatherUi.png)","lastModifiedDate":"2023-10-27"},{"lineNumber":307,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":308,"author":{"gitId":"jylow"},"content":"------------","lastModifiedDate":"2023-10-25"},{"lineNumber":309,"author":{"gitId":"-"},"content":"### Deleting a person : `delete`","lastModifiedDate":"2023-10-26"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":311,"author":{"gitId":"Kb-Tay"},"content":"Deletes the client contact from the contact book by their index.","lastModifiedDate":"2023-10-02"},{"lineNumber":312,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":313,"author":{"gitId":"-"},"content":"Format: `delete INDEX`","lastModifiedDate":"2023-11-05"},{"lineNumber":314,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":315,"author":{"gitId":"-"},"content":"* Deletes the person at the specified `INDEX`.","lastModifiedDate":"2020-05-23"},{"lineNumber":316,"author":{"gitId":"-"},"content":"* The index refers to the index number shown in the displayed person list.","lastModifiedDate":"2020-05-23"},{"lineNumber":317,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":318,"author":{"gitId":"AlyssaPng"},"content":"Acceptable Values: Refer to [Argument Summary](#argument-summary).","lastModifiedDate":"2023-11-07"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":320,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":321,"author":{"gitId":"AlyssaPng"},"content":"* `list` followed by `delete 1` deletes the 1st person in the contact book.","lastModifiedDate":"2023-10-26"},{"lineNumber":322,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":323,"author":{"gitId":"Kb-Tay"},"content":"Successful Output:","lastModifiedDate":"2023-10-02"},{"lineNumber":324,"author":{"gitId":"nikele2001"},"content":"`Deleted Person: David;","lastModifiedDate":"2023-11-05"},{"lineNumber":325,"author":{"gitId":"nikele2001"},"content":"Phone: 93234567;","lastModifiedDate":"2023-11-05"},{"lineNumber":326,"author":{"gitId":"nikele2001"},"content":"Email: davidmiller@gmail.com;","lastModifiedDate":"2023-11-05"},{"lineNumber":327,"author":{"gitId":"nikele2001"},"content":"Address: Bishan Blk 999 #08-15 569874;","lastModifiedDate":"2023-11-05"},{"lineNumber":328,"author":{"gitId":"nikele2001"},"content":"Next-of-kin Name: Olivia;","lastModifiedDate":"2023-11-05"},{"lineNumber":329,"author":{"gitId":"nikele2001"},"content":"Next-of-kin Phone: 56981234;","lastModifiedDate":"2023-11-05"},{"lineNumber":330,"author":{"gitId":"nikele2001"},"content":"Appointment: Meeting, 15-12-2023 17:30;","lastModifiedDate":"2023-11-05"},{"lineNumber":331,"author":{"gitId":"nikele2001"},"content":"Financial Plans: [Financial Plan A][Financial Plan B];","lastModifiedDate":"2023-11-05"},{"lineNumber":332,"author":{"gitId":"nikele2001"},"content":"Tags: `","lastModifiedDate":"2023-11-05"},{"lineNumber":333,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":334,"author":{"gitId":"Kb-Tay"},"content":"----------","lastModifiedDate":"2023-10-26"},{"lineNumber":335,"author":{"gitId":"Kb-Tay"},"content":"### Scheduling an Appointment : `schedule`","lastModifiedDate":"2023-10-26"},{"lineNumber":336,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":337,"author":{"gitId":"nikele2001"},"content":"Schedules an appointment for a client using an index followed by the appointment details.","lastModifiedDate":"2023-11-05"},{"lineNumber":338,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":339,"author":{"gitId":"Kb-Tay"},"content":"Format: `schedule INDEX ap/APPOINTMENT_NAME d/APPOINTMENT_DATE_TIME`","lastModifiedDate":"2023-11-07"},{"lineNumber":340,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":341,"author":{"gitId":"Kb-Tay"},"content":"- Schedules appointment with the person at the specified `INDEX`. The index refers to the index number shown in the displayed person list.","lastModifiedDate":"2023-10-26"},{"lineNumber":342,"author":{"gitId":"Kb-Tay"},"content":"- **Both appointment name and date-time** must be provided.","lastModifiedDate":"2023-11-07"},{"lineNumber":343,"author":{"gitId":"Kb-Tay"},"content":"- Upon successful execution of the command, the scheduled appointment details will be updated in the **Contacts list**. The appointment details will also be updated in the **Appointments list**.","lastModifiedDate":"2023-11-07"},{"lineNumber":344,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":345,"author":{"gitId":"Kb-Tay"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:information_source:","lastModifiedDate":"2023-11-07"},{"lineNumber":346,"author":{"gitId":"sopa301"},"content":"If there is an existing appointment with the person when the command is executed, you can replace it with a new appointment by **clicking confirm** or **pressing the enter key** when the prompt is given.","lastModifiedDate":"2023-11-08"},{"lineNumber":347,"author":{"gitId":"Kb-Tay"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-11-07"},{"lineNumber":348,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":349,"author":{"gitId":"AlyssaPng"},"content":"  ![schedule prompt](images/schedulePrompt.png)","lastModifiedDate":"2023-10-27"},{"lineNumber":350,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":351,"author":{"gitId":"AlyssaPng"},"content":"Acceptable Values: Refer to [Argument Summary](#argument-summary).","lastModifiedDate":"2023-11-07"},{"lineNumber":352,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":353,"author":{"gitId":"Kb-Tay"},"content":"Example:","lastModifiedDate":"2023-10-26"},{"lineNumber":354,"author":{"gitId":"Kb-Tay"},"content":"- `schedule 1 ap/Annual review of financial goals d/20-11-2023 15:00`","lastModifiedDate":"2023-10-26"},{"lineNumber":355,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":356,"author":{"gitId":"jylow"},"content":"Successful Output: \\","lastModifiedDate":"2023-11-11"},{"lineNumber":357,"author":{"gitId":"jylow"},"content":"For overridden appointment: `Appointment updated!`\\","lastModifiedDate":"2023-11-11"},{"lineNumber":358,"author":{"gitId":"jylow"},"content":"For new appointment: `New appointment added: David; Phone: 93234567; Email: davidmiller@gmail.com; Address: Bishan Blk 999 #08-15 569874; Next-of-kin Name: Olivia; Next-of-kin Phone: 56981234; Appointment: Annual review of financial goals, 20-11-2023 15:00; Financial Plans: [Financial Plan A][Financial Plan B]; Tags:` ","lastModifiedDate":"2023-11-11"},{"lineNumber":359,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":360,"author":{"gitId":"AlyssaPng"},"content":"![result for`schedule 1 ap/Annual review of financial goals d/20-11-2023 15:00\u0027](images/scheduleUi.png)","lastModifiedDate":"2023-10-27"},{"lineNumber":361,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":362,"author":{"gitId":"jylow"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:information_source:","lastModifiedDate":"2023-11-11"},{"lineNumber":363,"author":{"gitId":"jylow"},"content":"Upon triggering the overriding prompt, until confirmation or cancellation of command on the prompt, usage of the application","lastModifiedDate":"2023-11-11"},{"lineNumber":364,"author":{"gitId":"jylow"},"content":"is not allowed (including trying to exit the program). ","lastModifiedDate":"2023-11-11"},{"lineNumber":365,"author":{"gitId":"jylow"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-11-11"},{"lineNumber":366,"author":{"gitId":"Kb-Tay"},"content":"----------","lastModifiedDate":"2023-10-26"},{"lineNumber":367,"author":{"gitId":"Kb-Tay"},"content":"### Completing an Appointment : `complete`","lastModifiedDate":"2023-10-26"},{"lineNumber":368,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":369,"author":{"gitId":"Kb-Tay"},"content":"Completes an appointment either with the person at the specified `INDEX` or complete all appointments with matching `APPOINTMENT_DATE`.","lastModifiedDate":"2023-11-07"},{"lineNumber":370,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":371,"author":{"gitId":"nikele2001"},"content":"Format: `complete [INDEX] [d/APPOINTMENT_DATE]`","lastModifiedDate":"2023-11-05"},{"lineNumber":372,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":373,"author":{"gitId":"sopa301"},"content":"- Either an **index or appointment date** must be provided for command to execute, but **not both**.","lastModifiedDate":"2023-11-08"},{"lineNumber":374,"author":{"gitId":"sopa301"},"content":"- If user inputs an `INDEX`, command will complete appointment with the person at the specified `INDEX`. The index refers to the index number shown in the **Contacts list**.","lastModifiedDate":"2023-11-08"},{"lineNumber":375,"author":{"gitId":"sopa301"},"content":"- If user inputs an `APPOINTMENT_DATE`, the command will complete all appointments in address book that have a date","lastModifiedDate":"2023-11-08"},{"lineNumber":376,"author":{"gitId":"sopa301"},"content":"matching the one input by user. This can allow the user to clear all his/her appointments finished throughout the","lastModifiedDate":"2023-11-08"},{"lineNumber":377,"author":{"gitId":"sopa301"},"content":"entire day quickly.","lastModifiedDate":"2023-11-08"},{"lineNumber":378,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":379,"author":{"gitId":"Kb-Tay"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:information_source:","lastModifiedDate":"2023-11-07"},{"lineNumber":380,"author":{"gitId":"Kb-Tay"},"content":"**Note** that an appointment\u0027s date is considered to be a match with user\u0027s input `APPOINTMENT_DATE` if the year, month and day are the same. Time of the appointment does not matter in this command.","lastModifiedDate":"2023-11-07"},{"lineNumber":381,"author":{"gitId":"Kb-Tay"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-11-07"},{"lineNumber":382,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":383,"author":{"gitId":"AlyssaPng"},"content":"Acceptable Values: Refer to [Argument Summary](#argument-summary).","lastModifiedDate":"2023-11-07"},{"lineNumber":384,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":385,"author":{"gitId":"Kb-Tay"},"content":"Examples:","lastModifiedDate":"2023-10-26"},{"lineNumber":386,"author":{"gitId":"Kb-Tay"},"content":"- `complete 1`","lastModifiedDate":"2023-10-26"},{"lineNumber":387,"author":{"gitId":"Kb-Tay"},"content":"- `complete d/01-05-2023`","lastModifiedDate":"2023-10-26"},{"lineNumber":388,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":389,"author":{"gitId":"AlyssaPng"},"content":"Successful Output: `Appointment(s) Completed!`","lastModifiedDate":"2023-11-07"},{"lineNumber":390,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":391,"author":{"gitId":"AlyssaPng"},"content":"![result for \u0027complete 1\u0027](images/completeUi.png)","lastModifiedDate":"2023-10-27"},{"lineNumber":392,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":393,"author":{"gitId":"jylow"},"content":"----------","lastModifiedDate":"2023-10-25"},{"lineNumber":394,"author":{"gitId":"-"},"content":"### Clearing all entries : `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":395,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":396,"author":{"gitId":"AlyssaPng"},"content":"Clears all entries from the contact book. UNOFAS will ask for confirmation first to ensure it is not a mistake. Click","lastModifiedDate":"2023-10-26"},{"lineNumber":397,"author":{"gitId":"sopa301"},"content":"the clear button to confirm.","lastModifiedDate":"2023-10-20"},{"lineNumber":398,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":399,"author":{"gitId":"-"},"content":"Format: `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":400,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":401,"author":{"gitId":"sopa301"},"content":"Example:","lastModifiedDate":"2023-10-20"},{"lineNumber":402,"author":{"gitId":"sopa301"},"content":"* `clear`","lastModifiedDate":"2023-10-20"},{"lineNumber":403,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":404,"author":{"gitId":"sopa301"},"content":"![confirm clear window](images/confirmClear.png)","lastModifiedDate":"2023-10-20"},{"lineNumber":405,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":406,"author":{"gitId":"jylow"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:information_source:","lastModifiedDate":"2023-11-11"},{"lineNumber":407,"author":{"gitId":"jylow"},"content":"Upon entering the `clear` command, until confirmation or cancellation of command on the prompt, usage of the application","lastModifiedDate":"2023-11-11"},{"lineNumber":408,"author":{"gitId":"jylow"},"content":"is not allowed (including trying to exit the program). ","lastModifiedDate":"2023-11-11"},{"lineNumber":409,"author":{"gitId":"jylow"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-11-11"},{"lineNumber":410,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":411,"author":{"gitId":"jylow"},"content":"----------------------------","lastModifiedDate":"2023-10-25"},{"lineNumber":412,"author":{"gitId":"jylow"},"content":"### Sorting of data : `sort`","lastModifiedDate":"2023-10-25"},{"lineNumber":413,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":414,"author":{"gitId":"sopa301"},"content":"Sorts all the entries with predefined sorting functionalities. After sorting the list, the ordering of the entries","lastModifiedDate":"2023-11-02"},{"lineNumber":415,"author":{"gitId":"jylow"},"content":"will be changed. As a result, performing any operations that require indexing (such as delete, add or edit), will reference the new ordering that is currently displayed on the screen.","lastModifiedDate":"2023-11-08"},{"lineNumber":416,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":417,"author":{"gitId":"jylow"},"content":"**Here are the current predefined sorting functions that have been implemented**","lastModifiedDate":"2023-10-24"},{"lineNumber":418,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":419,"author":{"gitId":"jylow"},"content":"* `name` : sorts list by lexicographical ordering of name (case-insensitive).","lastModifiedDate":"2023-10-25"},{"lineNumber":420,"author":{"gitId":"jylow"},"content":"* `appointment`: sorts list by appointment timing in order of the earliest appointment first. If no appointment is found, the remaining persons without an appointment will be displayed in an arbitrary order, based on the reordering of the previous sorting functions applied.","lastModifiedDate":"2023-11-08"},{"lineNumber":421,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":422,"author":{"gitId":"nikele2001"},"content":"Format: `sort KEYWORD`","lastModifiedDate":"2023-11-07"},{"lineNumber":423,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":424,"author":{"gitId":"sopa301"},"content":"* Calling this command after a Find command will preserve the results filtered by the Find command.","lastModifiedDate":"2023-11-02"},{"lineNumber":425,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":426,"author":{"gitId":"AlyssaPng"},"content":"Acceptable Values: Refer to [Argument Summary](#argument-summary).","lastModifiedDate":"2023-11-07"},{"lineNumber":427,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":428,"author":{"gitId":"jylow"},"content":"Example: `sort name` performs sorting by lexicographical ordering","lastModifiedDate":"2023-10-25"},{"lineNumber":429,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":430,"author":{"gitId":"AlyssaPng"},"content":"Successful Output: `4 persons listed!`","lastModifiedDate":"2023-10-27"},{"lineNumber":431,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":432,"author":{"gitId":"AlyssaPng"},"content":"![result for`sort name\u0027](images/sortUi.png)","lastModifiedDate":"2023-10-27"},{"lineNumber":433,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":434,"author":{"gitId":"jylow"},"content":"------------","lastModifiedDate":"2023-10-25"},{"lineNumber":435,"author":{"gitId":"-"},"content":"### Exiting the program : `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":436,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":437,"author":{"gitId":"-"},"content":"Exits the program.","lastModifiedDate":"2020-05-23"},{"lineNumber":438,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":439,"author":{"gitId":"-"},"content":"Format: `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":440,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":441,"author":{"gitId":"-"},"content":"### Saving the data","lastModifiedDate":"2020-05-23"},{"lineNumber":442,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":443,"author":{"gitId":"sopa301"},"content":"UNOFAS data are saved in the hard disk automatically after any command that changes the data. There is no need to save manually.","lastModifiedDate":"2023-10-07"},{"lineNumber":444,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":445,"author":{"gitId":"-"},"content":"### Editing the data file","lastModifiedDate":"2021-02-04"},{"lineNumber":446,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":447,"author":{"gitId":"sopa301"},"content":"UNOFAS data are saved automatically as a JSON file `[JAR file location]/data/addressbook.json`. Advanced users are welcome to update data directly by editing that data file.","lastModifiedDate":"2023-10-07"},{"lineNumber":448,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":449,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e :exclamation: **Caution:**","lastModifiedDate":"2021-02-04"},{"lineNumber":450,"author":{"gitId":"nikele2001"},"content":"If your changes to the data file makes its format invalid, UNOFAS will discard all data and start with an empty data file at the next run. Hence, it is recommended to take a backup of the file before editing it.","lastModifiedDate":"2023-11-10"},{"lineNumber":451,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-02-04"},{"lineNumber":452,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":453,"author":{"gitId":"-"},"content":"### Archiving data files `[coming in v2.0]`","lastModifiedDate":"2020-05-23"},{"lineNumber":454,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":455,"author":{"gitId":"-"},"content":"_Details coming soon ..._","lastModifiedDate":"2021-02-04"},{"lineNumber":456,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":457,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":458,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":459,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-23"},{"lineNumber":460,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":461,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another Computer?\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":462,"author":{"gitId":"sopa301"},"content":"**A**: Install the app in the other computer and overwrite the empty data file it creates with the file that contains the data of your previous UNOFAS home folder.","lastModifiedDate":"2023-10-07"},{"lineNumber":463,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":464,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":465,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":466,"author":{"gitId":"-"},"content":"## Known issues","lastModifiedDate":"2023-09-08"},{"lineNumber":467,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":468,"author":{"gitId":"-"},"content":"1. **When using multiple screens**, if you move the application to a secondary screen, and later switch to using only the primary screen, the GUI will open off-screen. The remedy is to delete the `preferences.json` file created by the application before running the application again.","lastModifiedDate":"2023-09-08"},{"lineNumber":469,"author":{"gitId":"sopa301"},"content":"2. **When sorting the list**, we have chosen to not implement returning sorted list to original ordering due to the lack of necessity. However, due to feedback, we will implement this in the next release to enable users to return list to original order should they wish to.","lastModifiedDate":"2023-11-12"},{"lineNumber":470,"author":{"gitId":"sopa301"},"content":"3. **It is possible to add appointments with dates** before the current date and time.","lastModifiedDate":"2023-11-12"},{"lineNumber":471,"author":{"gitId":"sopa301"},"content":"4. **On macOS Systems**, you have to use the cursor to manually click the confirm or cancel buttons for the overriding and clear prompts. In contrast, Windows users can choose to hit enter to confirm execution of command.","lastModifiedDate":"2023-11-12"},{"lineNumber":472,"author":{"gitId":"sopa301"},"content":"5. **No current method to deconflict clashing appointments**. Users should be advised to check the appointment sidebar to ensure appointments do not clash with each other. The appointment sidebar may display appointments with the same date and time in a different order after adding a new appointment and subsequently reopening the app. This will be resolved when fixing issue 6a.","lastModifiedDate":"2023-11-12"},{"lineNumber":473,"author":{"gitId":"sopa301"},"content":"6. **The appointment sidebar** may display appointments with the same date and time in a different order after adding a new appointment and subsequently reopening the app. This will be resolved when fixing issue 6.","lastModifiedDate":"2023-11-12"},{"lineNumber":474,"author":{"gitId":"sopa301"},"content":"7. **Checking for duplicate persons** is done by checking their full name, case-sensitive. The future plan is to do this by checking of phone number as it is less likely 2 people share the same phone number than compared to name.","lastModifiedDate":"2023-11-12"},{"lineNumber":475,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":476,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-09-08"},{"lineNumber":477,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":478,"author":{"gitId":"-"},"content":"## Command summary","lastModifiedDate":"2020-05-23"},{"lineNumber":479,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":480,"author":{"gitId":"jylow"},"content":"| Action       | Format, Examples                                                                                                                                                                                                                    |","lastModifiedDate":"2023-10-19"},{"lineNumber":481,"author":{"gitId":"Kb-Tay"},"content":"|--------------|-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2023-11-07"},{"lineNumber":482,"author":{"gitId":"nikele2001"},"content":"| **Add**      | `add n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS nk/NEXT_KIN nkp/NEXT_KIN_PHONE [fp/FINANCIAL_PLAN]…​ [t/TAG]…​` \u003cbr\u003e e.g., `add n/John p/80101010 e/johndoe@gmail.com a/Punggol Central Blk 444 #15-32 820123 nk/Brennan nkp/82020202` |","lastModifiedDate":"2023-11-07"},{"lineNumber":483,"author":{"gitId":"jylow"},"content":"| **Clear**    | `clear`                                                                                                                                                                                                                             |","lastModifiedDate":"2023-10-19"},{"lineNumber":484,"author":{"gitId":"jylow"},"content":"| **Delete**   | `delete INDEX`\u003cbr\u003e e.g., `delete 3`                                                                                                                                                                                                 |","lastModifiedDate":"2023-10-19"},{"lineNumber":485,"author":{"gitId":"nikele2001"},"content":"| **Edit**     | `edit INDEX [n/NAME] [p/PHONE_NUMBER] [e/EMAIL] [a/ADDRESS] [nk/NEXT_KIN] [nkp/NEXT_KIN_PHONE] [fp/FINANCIAL_PLAN]…​ [t/TAG]…​`\u003cbr\u003e e.g.,`edit 1 n/john doe a/23 woodlands ave 123`                                                 |","lastModifiedDate":"2023-11-07"},{"lineNumber":486,"author":{"gitId":"sopa301"},"content":"| **Find**     | `find [n/NAME]…​ [fp/FINANCIAL_PLAN]…​ [t/TAG]…​`\u003cbr\u003e e.g., `find n/James n/Jake`                                                                                                                                                   |","lastModifiedDate":"2023-10-25"},{"lineNumber":487,"author":{"gitId":"AlyssaPng"},"content":"| **Gather**   | `gather [fp/FINANCIAL PLAN]` or `gather [t/TAG]` \u003cbr\u003e e.g., `gather fp/Basic Insurance Plan`                                                                                                                                        |","lastModifiedDate":"2023-10-26"},{"lineNumber":488,"author":{"gitId":"Kb-Tay"},"content":"| **Schedule** | `schedule INDEX ap/APPOINTMENT_NAME d/APPOINTMENT_DATE_TIME`\u003cbr\u003e e.g. `schedule 1 ap/Annual review of financial goals d/20-11-2023 15:00`                                                                                           |","lastModifiedDate":"2023-11-07"},{"lineNumber":489,"author":{"gitId":"jylow"},"content":"| **Complete** | `complete [INDEX] [d/APPOINTMENT_DATE]` \u003cbr\u003e e.g `complete 1` \u003cbr\u003e e.g `complete d/01-05-2023`                                                                                                                                      |                                                                                                                                                                         |","lastModifiedDate":"2023-11-11"},{"lineNumber":490,"author":{"gitId":"jylow"},"content":"| **List**     | `list`                                                                                                                                                                                                                              |","lastModifiedDate":"2023-10-19"},{"lineNumber":491,"author":{"gitId":"jylow"},"content":"| **Help**     | `help`                                                                                                                                                                                                                              |","lastModifiedDate":"2023-10-19"},{"lineNumber":492,"author":{"gitId":"nikele2001"},"content":"| **Sort**     | `sort KEYWORD` \u003cbr\u003e e.g., `sort appointment`                                                                                                                                                                                        |","lastModifiedDate":"2023-11-07"},{"lineNumber":493,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-10-26"}],"authorContributionMap":{"Kb-Tay":49,"AlyssaPng":85,"nikele2001":71,"sopa301":80,"jylow":63,"-":145}},{"path":"docs/_sass/minima/_base.scss","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"html {","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  font-size: $base-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Reset some basic elements","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"body, h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"p, blockquote, pre, hr,","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"dl, dd, ol, ul, figure {","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  margin: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  padding: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Basic styling","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"body {","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  font: $base-font-weight #{$base-font-size}/#{$base-line-height} $base-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  background-color: $background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  -webkit-text-size-adjust: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  -webkit-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     -moz-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"       -o-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  font-kerning: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  display: flex;","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  min-height: 100vh;","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  flex-direction: column;","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  overflow-wrap: break-word;","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":" * Set `margin-bottom` to maintain vertical rhythm","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"p, blockquote, pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"ul, ol, dl, figure,","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"%vertical-rhythm {","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"hr {","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  margin-top: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":" * `main` element","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"main {","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  display: block; /* Default value of `display` of `main` element is \u0027inline\u0027 in IE 11. */","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":" * Images","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"img {","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  max-width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"  vertical-align: middle;","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":" * Figures","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"figure \u003e img {","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"  display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"figcaption {","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"  font-size: $small-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":" * Lists","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"ul, ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"  margin-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"li {","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"  \u003e ul,","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"  \u003e ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":" * Headings","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6 {","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"  font-weight: $base-font-weight;","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":" * Links","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"a {","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"  color: $link-base-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"  text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"  \u0026:visited {","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    color: $link-visited-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"  \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"  .social-media-list \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    .username {","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"      text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":" * Blockquotes","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"blockquote {","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"  color: $brand-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"  border-left: 4px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"  @include relative-font-size(1.125);","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"  font-style: italic;","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"  \u003e :last-child {","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"  i, em {","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    font-style: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * Code formatting","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"  font-family: $code-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"  font-size: 0.9375em;","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"  border: 1px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"  background-color: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"  padding: 1px 5px;","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"pre {","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"  padding: 8px 12px;","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"  overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"  \u003e code {","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    border: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    padding-right: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    padding-left: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":".highlight {","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"  background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"  @extend %vertical-rhythm;","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"  .highlighter-rouge \u0026 {","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":" * Wrapper","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":".wrapper {","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"  max-width: calc(#{$content-width} - (#{$spacing-unit}));","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"  margin-right: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"  margin-left: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"  padding-right: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"  @extend %clearfix;","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"  @media screen and (min-width: $on-large) {","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    max-width: calc(#{$content-width} - (#{$spacing-unit} * 2));","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    padding-right: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    padding-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":" * Clearfix","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"%clearfix:after {","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"  content: \"\";","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"  display: table;","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"  clear: both;","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":" * Icons","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":".orange {","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  color: #f66a0a;","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":".grey {","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"  color: #828282;","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":" * Tables","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"table {","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"  width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"  text-align: $table-text-align;","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"  color: $table-text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"  border-collapse: collapse;","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"  border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"  tr {","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    \u0026:nth-child(even) {","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"      background-color: $table-zebra-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"  th, td {","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    padding: ($spacing-unit / 3) ($spacing-unit / 2);","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"  th {","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    background-color: $table-header-bg-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    border: 1px solid $table-header-border;","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"  td {","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"  @include media-query($on-laptop) {","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -webkit-overflow-scrolling: touch;","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"            -ms-overflow-style: -ms-autohiding-scrollbar;","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-11"},{"lineNumber":274,"author":{"gitId":"-"},"content":"@media print {","lastModifiedDate":"2021-01-12"},{"lineNumber":275,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-11"},{"lineNumber":276,"author":{"gitId":"-"},"content":"  * Prevents page break from cutting through content when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":277,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-11"},{"lineNumber":278,"author":{"gitId":"-"},"content":"  body {","lastModifiedDate":"2021-01-11"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2021-01-11"},{"lineNumber":280,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":281,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-12"},{"lineNumber":282,"author":{"gitId":"-"},"content":"  * Replaces the top navigation menu with the project name when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":283,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-12"},{"lineNumber":284,"author":{"gitId":"-"},"content":"  .site-header .wrapper {","lastModifiedDate":"2021-01-12"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    display: none;","lastModifiedDate":"2021-01-12"},{"lineNumber":286,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":287,"author":{"gitId":"-"},"content":"  .site-header {","lastModifiedDate":"2021-01-12"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    text-align: center;","lastModifiedDate":"2021-01-12"},{"lineNumber":289,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":290,"author":{"gitId":"-"},"content":"  .site-header:before {","lastModifiedDate":"2021-01-12"},{"lineNumber":291,"author":{"gitId":"AlyssaPng"},"content":"    content: \"UNOFAS\";","lastModifiedDate":"2023-11-02"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    font-size: 32px;","lastModifiedDate":"2021-01-12"},{"lineNumber":293,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":294,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-01-12"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-12"}],"authorContributionMap":{"AlyssaPng":1,"-":294}},{"path":"docs/diagrams/CombinedPredicateClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"sopa301"},"content":"@startuml","lastModifiedDate":"2023-11-07"},{"lineNumber":2,"author":{"gitId":"sopa301"},"content":"!include style.puml","lastModifiedDate":"2023-11-07"},{"lineNumber":3,"author":{"gitId":"sopa301"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2023-11-07"},{"lineNumber":4,"author":{"gitId":"sopa301"},"content":"skinparam arrowColor LOGIC_COLOR_T4","lastModifiedDate":"2023-11-07"},{"lineNumber":5,"author":{"gitId":"sopa301"},"content":"skinparam classBackgroundColor LOGIC_COLOR","lastModifiedDate":"2023-11-07"},{"lineNumber":6,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":7,"author":{"gitId":"sopa301"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nPredicate\u003cPerson\u003e \" as PredicatePerson","lastModifiedDate":"2023-11-07"},{"lineNumber":8,"author":{"gitId":"sopa301"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nPersonContainsKeywordsPredicate\" as PersonContainsKeywordsPredicate","lastModifiedDate":"2023-11-07"},{"lineNumber":9,"author":{"gitId":"sopa301"},"content":"CombinedPredicate .up.|\u003e PredicatePerson","lastModifiedDate":"2023-11-07"},{"lineNumber":10,"author":{"gitId":"sopa301"},"content":"PersonContainsKeywordsPredicate -up-|\u003e PredicatePerson","lastModifiedDate":"2023-11-07"},{"lineNumber":11,"author":{"gitId":"sopa301"},"content":"CombinedPredicate---\u003e \"*\"PersonContainsKeywordsPredicate","lastModifiedDate":"2023-11-07"},{"lineNumber":12,"author":{"gitId":"sopa301"},"content":"XYZContainsKeywordsPredicate .up.|\u003e PersonContainsKeywordsPredicate","lastModifiedDate":"2023-11-07"},{"lineNumber":13,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":14,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":15,"author":{"gitId":"sopa301"},"content":"FindCommandParser ..\u003e CombinedPredicate : creates \u003e","lastModifiedDate":"2023-11-07"},{"lineNumber":16,"author":{"gitId":"sopa301"},"content":"FindCommandParser ..\u003e FindCommand : creates \u003e","lastModifiedDate":"2023-11-07"},{"lineNumber":17,"author":{"gitId":"sopa301"},"content":"FindCommand--\u003eCombinedPredicate","lastModifiedDate":"2023-11-07"},{"lineNumber":18,"author":{"gitId":"sopa301"},"content":"@enduml","lastModifiedDate":"2023-11-07"}],"authorContributionMap":{"sopa301":18}},{"path":"docs/diagrams/CompleteActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Kb-Tay"},"content":"@startuml","lastModifiedDate":"2023-11-05"},{"lineNumber":2,"author":{"gitId":"Kb-Tay"},"content":"skin rose","lastModifiedDate":"2023-11-05"},{"lineNumber":3,"author":{"gitId":"Kb-Tay"},"content":"skinparam ActivityFontSize 15","lastModifiedDate":"2023-11-05"},{"lineNumber":4,"author":{"gitId":"Kb-Tay"},"content":"skinparam ArrowFontSize 12","lastModifiedDate":"2023-11-05"},{"lineNumber":5,"author":{"gitId":"Kb-Tay"},"content":"start","lastModifiedDate":"2023-11-05"},{"lineNumber":6,"author":{"gitId":"Kb-Tay"},"content":":User enters a complete command;","lastModifiedDate":"2023-11-05"},{"lineNumber":7,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":8,"author":{"gitId":"Kb-Tay"},"content":":CompleteCommandParser parses the user input and checks validity;","lastModifiedDate":"2023-11-05"},{"lineNumber":9,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":10,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":11,"author":{"gitId":"Kb-Tay"},"content":"\u0027Since the beta syntax does not support placing the condition outside the","lastModifiedDate":"2023-11-05"},{"lineNumber":12,"author":{"gitId":"Kb-Tay"},"content":"\u0027diamond we place it as the true branch instead.","lastModifiedDate":"2023-11-05"},{"lineNumber":13,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":14,"author":{"gitId":"Kb-Tay"},"content":"switch ()","lastModifiedDate":"2023-11-05"},{"lineNumber":15,"author":{"gitId":"Kb-Tay"},"content":"case([the complete command is valid])","lastModifiedDate":"2023-11-05"},{"lineNumber":16,"author":{"gitId":"Kb-Tay"},"content":"    : Creates a CompleteCommand which is executed by LogicManager;","lastModifiedDate":"2023-11-05"},{"lineNumber":17,"author":{"gitId":"Kb-Tay"},"content":"    switch ()","lastModifiedDate":"2023-11-05"},{"lineNumber":18,"author":{"gitId":"Kb-Tay"},"content":"          case ([user inputs an index])","lastModifiedDate":"2023-11-12"},{"lineNumber":19,"author":{"gitId":"Kb-Tay"},"content":"            : Checks for appointment of given person in FilterPersonList;","lastModifiedDate":"2023-11-05"},{"lineNumber":20,"author":{"gitId":"Kb-Tay"},"content":"            switch ()","lastModifiedDate":"2023-11-05"},{"lineNumber":21,"author":{"gitId":"Kb-Tay"},"content":"            case([if person has existing appointment])","lastModifiedDate":"2023-11-12"},{"lineNumber":22,"author":{"gitId":"Kb-Tay"},"content":"            : Clears appointment for the Person;","lastModifiedDate":"2023-11-05"},{"lineNumber":23,"author":{"gitId":"Kb-Tay"},"content":"            case([if person has no existing appointment])","lastModifiedDate":"2023-11-12"},{"lineNumber":24,"author":{"gitId":"Kb-Tay"},"content":"            : Throws an error;","lastModifiedDate":"2023-11-05"},{"lineNumber":25,"author":{"gitId":"Kb-Tay"},"content":"            endswitch","lastModifiedDate":"2023-11-05"},{"lineNumber":26,"author":{"gitId":"Kb-Tay"},"content":"          case ([user inputs a date])","lastModifiedDate":"2023-11-12"},{"lineNumber":27,"author":{"gitId":"Kb-Tay"},"content":"            : Checks for persons in FilterPersonList who appointment date matches input date;","lastModifiedDate":"2023-11-12"},{"lineNumber":28,"author":{"gitId":"Kb-Tay"},"content":"            switch()","lastModifiedDate":"2023-11-05"},{"lineNumber":29,"author":{"gitId":"Kb-Tay"},"content":"            case([have at least one match])","lastModifiedDate":"2023-11-12"},{"lineNumber":30,"author":{"gitId":"Kb-Tay"},"content":"            : Clears all appointments with matching dates;","lastModifiedDate":"2023-11-05"},{"lineNumber":31,"author":{"gitId":"Kb-Tay"},"content":"            case([has no matches])","lastModifiedDate":"2023-11-12"},{"lineNumber":32,"author":{"gitId":"Kb-Tay"},"content":"            : Throws an error;","lastModifiedDate":"2023-11-05"},{"lineNumber":33,"author":{"gitId":"Kb-Tay"},"content":"            endswitch","lastModifiedDate":"2023-11-05"},{"lineNumber":34,"author":{"gitId":"Kb-Tay"},"content":"        endswitch","lastModifiedDate":"2023-11-05"},{"lineNumber":35,"author":{"gitId":"Kb-Tay"},"content":"case([else])","lastModifiedDate":"2023-11-05"},{"lineNumber":36,"author":{"gitId":"Kb-Tay"},"content":"    : Throws an error;","lastModifiedDate":"2023-11-05"},{"lineNumber":37,"author":{"gitId":"Kb-Tay"},"content":"endswitch","lastModifiedDate":"2023-11-05"},{"lineNumber":38,"author":{"gitId":"Kb-Tay"},"content":"stop","lastModifiedDate":"2023-11-05"},{"lineNumber":39,"author":{"gitId":"Kb-Tay"},"content":"@enduml","lastModifiedDate":"2023-11-05"},{"lineNumber":40,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-11-05"}],"authorContributionMap":{"Kb-Tay":40}},{"path":"docs/diagrams/CompleteClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Kb-Tay"},"content":"@startuml","lastModifiedDate":"2023-11-12"},{"lineNumber":2,"author":{"gitId":"Kb-Tay"},"content":"hide empty methods","lastModifiedDate":"2023-11-12"},{"lineNumber":3,"author":{"gitId":"Kb-Tay"},"content":"hide empty attributes","lastModifiedDate":"2023-11-12"},{"lineNumber":4,"author":{"gitId":"Kb-Tay"},"content":"hide circle","lastModifiedDate":"2023-11-12"},{"lineNumber":5,"author":{"gitId":"Kb-Tay"},"content":"skinparam class {","lastModifiedDate":"2023-11-12"},{"lineNumber":6,"author":{"gitId":"Kb-Tay"},"content":"  BackgroundColor #3333C4","lastModifiedDate":"2023-11-12"},{"lineNumber":7,"author":{"gitId":"Kb-Tay"},"content":"  FontColor #FFFFFF","lastModifiedDate":"2023-11-12"},{"lineNumber":8,"author":{"gitId":"Kb-Tay"},"content":"     FontSize 15","lastModifiedDate":"2023-11-12"},{"lineNumber":9,"author":{"gitId":"Kb-Tay"},"content":"}","lastModifiedDate":"2023-11-12"},{"lineNumber":10,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":11,"author":{"gitId":"Kb-Tay"},"content":"abstract class CompleteCommand {}","lastModifiedDate":"2023-11-12"},{"lineNumber":12,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":13,"author":{"gitId":"Kb-Tay"},"content":"class CompleteByDate {","lastModifiedDate":"2023-11-12"},{"lineNumber":14,"author":{"gitId":"Kb-Tay"},"content":"    date : LocalDateTime","lastModifiedDate":"2023-11-12"},{"lineNumber":15,"author":{"gitId":"Kb-Tay"},"content":"}","lastModifiedDate":"2023-11-12"},{"lineNumber":16,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":17,"author":{"gitId":"Kb-Tay"},"content":"class CompleteByIndex {","lastModifiedDate":"2023-11-12"},{"lineNumber":18,"author":{"gitId":"Kb-Tay"},"content":"    index : Index","lastModifiedDate":"2023-11-12"},{"lineNumber":19,"author":{"gitId":"Kb-Tay"},"content":"}","lastModifiedDate":"2023-11-12"},{"lineNumber":20,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":21,"author":{"gitId":"Kb-Tay"},"content":"abstract class Command {}","lastModifiedDate":"2023-11-12"},{"lineNumber":22,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":23,"author":{"gitId":"Kb-Tay"},"content":"CompleteByDate -up-|\u003e CompleteCommand","lastModifiedDate":"2023-11-12"},{"lineNumber":24,"author":{"gitId":"Kb-Tay"},"content":"CompleteByIndex -up-|\u003e CompleteCommand","lastModifiedDate":"2023-11-12"},{"lineNumber":25,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":26,"author":{"gitId":"Kb-Tay"},"content":"CompleteCommand -up-|\u003e Command","lastModifiedDate":"2023-11-12"},{"lineNumber":27,"author":{"gitId":"Kb-Tay"},"content":"CompleteByDate -[hidden]left-\u003e CompleteByIndex","lastModifiedDate":"2023-11-12"},{"lineNumber":28,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":29,"author":{"gitId":"Kb-Tay"},"content":"@enduml","lastModifiedDate":"2023-11-12"}],"authorContributionMap":{"Kb-Tay":29}},{"path":"docs/diagrams/CompleteSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Kb-Tay"},"content":"@startuml","lastModifiedDate":"2023-11-05"},{"lineNumber":2,"author":{"gitId":"Kb-Tay"},"content":"!include style.puml","lastModifiedDate":"2023-11-05"},{"lineNumber":3,"author":{"gitId":"Kb-Tay"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2023-11-05"},{"lineNumber":4,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":5,"author":{"gitId":"Kb-Tay"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2023-11-05"},{"lineNumber":6,"author":{"gitId":"Kb-Tay"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2023-11-05"},{"lineNumber":7,"author":{"gitId":"Kb-Tay"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2023-11-05"},{"lineNumber":8,"author":{"gitId":"Kb-Tay"},"content":"participant \":CompleteCommandParser\" as CompleteCommandParser LOGIC_COLOR","lastModifiedDate":"2023-11-05"},{"lineNumber":9,"author":{"gitId":"Kb-Tay"},"content":"participant \"c:CompleteByDate\" as CompleteByDate LOGIC_COLOR","lastModifiedDate":"2023-11-12"},{"lineNumber":10,"author":{"gitId":"Kb-Tay"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2023-11-05"},{"lineNumber":11,"author":{"gitId":"Kb-Tay"},"content":"end box","lastModifiedDate":"2023-11-05"},{"lineNumber":12,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":13,"author":{"gitId":"Kb-Tay"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2023-11-05"},{"lineNumber":14,"author":{"gitId":"Kb-Tay"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2023-11-05"},{"lineNumber":15,"author":{"gitId":"Kb-Tay"},"content":"end box","lastModifiedDate":"2023-11-05"},{"lineNumber":16,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":17,"author":{"gitId":"Kb-Tay"},"content":"[-\u003e LogicManager : execute(\"complete d/01-01-2023\")","lastModifiedDate":"2023-11-05"},{"lineNumber":18,"author":{"gitId":"Kb-Tay"},"content":"activate LogicManager","lastModifiedDate":"2023-11-05"},{"lineNumber":19,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":20,"author":{"gitId":"Kb-Tay"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"complete d/01-01-2023\")\")","lastModifiedDate":"2023-11-05"},{"lineNumber":21,"author":{"gitId":"Kb-Tay"},"content":"activate AddressBookParser","lastModifiedDate":"2023-11-05"},{"lineNumber":22,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":23,"author":{"gitId":"Kb-Tay"},"content":"create CompleteCommandParser","lastModifiedDate":"2023-11-05"},{"lineNumber":24,"author":{"gitId":"Kb-Tay"},"content":"AddressBookParser -\u003e CompleteCommandParser","lastModifiedDate":"2023-11-05"},{"lineNumber":25,"author":{"gitId":"Kb-Tay"},"content":"activate CompleteCommandParser","lastModifiedDate":"2023-11-05"},{"lineNumber":26,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":27,"author":{"gitId":"Kb-Tay"},"content":"CompleteCommandParser --\u003e AddressBookParser","lastModifiedDate":"2023-11-05"},{"lineNumber":28,"author":{"gitId":"Kb-Tay"},"content":"deactivate CompleteCommandParser","lastModifiedDate":"2023-11-05"},{"lineNumber":29,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":30,"author":{"gitId":"Kb-Tay"},"content":"AddressBookParser -\u003e CompleteCommandParser : parse(\"d/01-01-2023\")","lastModifiedDate":"2023-11-05"},{"lineNumber":31,"author":{"gitId":"Kb-Tay"},"content":"activate CompleteCommandParser","lastModifiedDate":"2023-11-05"},{"lineNumber":32,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":33,"author":{"gitId":"Kb-Tay"},"content":"create CompleteByDate","lastModifiedDate":"2023-11-12"},{"lineNumber":34,"author":{"gitId":"Kb-Tay"},"content":"CompleteCommandParser -\u003e CompleteByDate","lastModifiedDate":"2023-11-12"},{"lineNumber":35,"author":{"gitId":"Kb-Tay"},"content":"activate CompleteByDate","lastModifiedDate":"2023-11-12"},{"lineNumber":36,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":37,"author":{"gitId":"Kb-Tay"},"content":"CompleteByDate --\u003e CompleteCommandParser : c","lastModifiedDate":"2023-11-12"},{"lineNumber":38,"author":{"gitId":"Kb-Tay"},"content":"deactivate CompleteByDate","lastModifiedDate":"2023-11-12"},{"lineNumber":39,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":40,"author":{"gitId":"Kb-Tay"},"content":"CompleteCommandParser --\u003e AddressBookParser : c","lastModifiedDate":"2023-11-05"},{"lineNumber":41,"author":{"gitId":"Kb-Tay"},"content":"deactivate CompleteCommandParser","lastModifiedDate":"2023-11-05"},{"lineNumber":42,"author":{"gitId":"Kb-Tay"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2023-11-05"},{"lineNumber":43,"author":{"gitId":"Kb-Tay"},"content":"CompleteCommandParser -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2023-11-05"},{"lineNumber":44,"author":{"gitId":"Kb-Tay"},"content":"destroy CompleteCommandParser","lastModifiedDate":"2023-11-05"},{"lineNumber":45,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":46,"author":{"gitId":"Kb-Tay"},"content":"AddressBookParser --\u003e LogicManager : c","lastModifiedDate":"2023-11-05"},{"lineNumber":47,"author":{"gitId":"Kb-Tay"},"content":"deactivate AddressBookParser","lastModifiedDate":"2023-11-05"},{"lineNumber":48,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":49,"author":{"gitId":"Kb-Tay"},"content":"LogicManager -\u003e CompleteByDate : execute()","lastModifiedDate":"2023-11-12"},{"lineNumber":50,"author":{"gitId":"Kb-Tay"},"content":"activate CompleteByDate","lastModifiedDate":"2023-11-12"},{"lineNumber":51,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":52,"author":{"gitId":"Kb-Tay"},"content":"CompleteByDate -\u003e Model : clear appointments by date","lastModifiedDate":"2023-11-12"},{"lineNumber":53,"author":{"gitId":"Kb-Tay"},"content":"activate Model","lastModifiedDate":"2023-11-05"},{"lineNumber":54,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":55,"author":{"gitId":"Kb-Tay"},"content":"Model --\u003e CompleteByDate","lastModifiedDate":"2023-11-12"},{"lineNumber":56,"author":{"gitId":"Kb-Tay"},"content":"deactivate Model","lastModifiedDate":"2023-11-05"},{"lineNumber":57,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":58,"author":{"gitId":"Kb-Tay"},"content":"create CommandResult","lastModifiedDate":"2023-11-05"},{"lineNumber":59,"author":{"gitId":"Kb-Tay"},"content":"CompleteByDate -\u003e CommandResult","lastModifiedDate":"2023-11-12"},{"lineNumber":60,"author":{"gitId":"Kb-Tay"},"content":"activate CommandResult","lastModifiedDate":"2023-11-05"},{"lineNumber":61,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":62,"author":{"gitId":"Kb-Tay"},"content":"CommandResult --\u003e CompleteByDate","lastModifiedDate":"2023-11-12"},{"lineNumber":63,"author":{"gitId":"Kb-Tay"},"content":"deactivate CommandResult","lastModifiedDate":"2023-11-05"},{"lineNumber":64,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":65,"author":{"gitId":"Kb-Tay"},"content":"CompleteByDate --\u003e LogicManager : result","lastModifiedDate":"2023-11-12"},{"lineNumber":66,"author":{"gitId":"Kb-Tay"},"content":"deactivate CompleteByDate","lastModifiedDate":"2023-11-12"},{"lineNumber":67,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":68,"author":{"gitId":"Kb-Tay"},"content":"CompleteByDate -[hidden]-\u003e CompleteCommandParser","lastModifiedDate":"2023-11-12"},{"lineNumber":69,"author":{"gitId":"Kb-Tay"},"content":"destroy CompleteByDate","lastModifiedDate":"2023-11-12"},{"lineNumber":70,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":71,"author":{"gitId":"Kb-Tay"},"content":"[\u003c--LogicManager","lastModifiedDate":"2023-11-05"},{"lineNumber":72,"author":{"gitId":"Kb-Tay"},"content":"deactivate LogicManager","lastModifiedDate":"2023-11-05"},{"lineNumber":73,"author":{"gitId":"Kb-Tay"},"content":"@enduml","lastModifiedDate":"2023-11-05"}],"authorContributionMap":{"Kb-Tay":73}},{"path":"docs/diagrams/GatherClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"AlyssaPng"},"content":"@startuml","lastModifiedDate":"2023-10-26"},{"lineNumber":2,"author":{"gitId":"AlyssaPng"},"content":"!include style.puml","lastModifiedDate":"2023-10-26"},{"lineNumber":3,"author":{"gitId":"AlyssaPng"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2023-10-26"},{"lineNumber":4,"author":{"gitId":"AlyssaPng"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2023-10-26"},{"lineNumber":5,"author":{"gitId":"AlyssaPng"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2023-10-26"},{"lineNumber":6,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":7,"author":{"gitId":"AlyssaPng"},"content":"Class Person {","lastModifiedDate":"2023-10-26"},{"lineNumber":8,"author":{"gitId":"AlyssaPng"},"content":"  -email: String","lastModifiedDate":"2023-10-26"},{"lineNumber":9,"author":{"gitId":"AlyssaPng"},"content":"  +gatherEmailsContainsFinancialPlan(): String","lastModifiedDate":"2023-10-26"},{"lineNumber":10,"author":{"gitId":"AlyssaPng"},"content":"  +gatherEmailsContainsTag(): String","lastModifiedDate":"2023-10-26"},{"lineNumber":11,"author":{"gitId":"AlyssaPng"},"content":"}","lastModifiedDate":"2023-10-26"},{"lineNumber":12,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":13,"author":{"gitId":"AlyssaPng"},"content":"Class GatherCommandParser {","lastModifiedDate":"2023-10-26"},{"lineNumber":14,"author":{"gitId":"AlyssaPng"},"content":"  +parse(String args): GatherCommand","lastModifiedDate":"2023-10-26"},{"lineNumber":15,"author":{"gitId":"AlyssaPng"},"content":"}","lastModifiedDate":"2023-10-26"},{"lineNumber":16,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":17,"author":{"gitId":"AlyssaPng"},"content":"Class GatherCommand {","lastModifiedDate":"2023-10-26"},{"lineNumber":18,"author":{"gitId":"AlyssaPng"},"content":"  -gatherPrompt: GatherEmailPrompt","lastModifiedDate":"2023-10-26"},{"lineNumber":19,"author":{"gitId":"AlyssaPng"},"content":"  +GatherCommand(GatherEmailPrompt prompt)","lastModifiedDate":"2023-10-26"},{"lineNumber":20,"author":{"gitId":"AlyssaPng"},"content":"  +execute(): void","lastModifiedDate":"2023-10-26"},{"lineNumber":21,"author":{"gitId":"AlyssaPng"},"content":"}","lastModifiedDate":"2023-10-26"},{"lineNumber":22,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":23,"author":{"gitId":"AlyssaPng"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nGatherEmailPrompt\" as GatherEmailPrompt {","lastModifiedDate":"2023-10-26"},{"lineNumber":24,"author":{"gitId":"AlyssaPng"},"content":"  +gatherEmails(Person person): void","lastModifiedDate":"2023-10-26"},{"lineNumber":25,"author":{"gitId":"AlyssaPng"},"content":"}","lastModifiedDate":"2023-10-26"},{"lineNumber":26,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":27,"author":{"gitId":"AlyssaPng"},"content":"Class GatherEmailByFinancialPlan {","lastModifiedDate":"2023-10-26"},{"lineNumber":28,"author":{"gitId":"AlyssaPng"},"content":"  - promptFp: String","lastModifiedDate":"2023-10-26"},{"lineNumber":29,"author":{"gitId":"AlyssaPng"},"content":"  +gatherEmails(Person person): void","lastModifiedDate":"2023-10-26"},{"lineNumber":30,"author":{"gitId":"AlyssaPng"},"content":"}","lastModifiedDate":"2023-10-26"},{"lineNumber":31,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":32,"author":{"gitId":"AlyssaPng"},"content":"Class GatherEmailByTag {","lastModifiedDate":"2023-10-26"},{"lineNumber":33,"author":{"gitId":"AlyssaPng"},"content":"  - promptTag: String","lastModifiedDate":"2023-10-26"},{"lineNumber":34,"author":{"gitId":"AlyssaPng"},"content":"  +gatherEmails(Person person): void","lastModifiedDate":"2023-10-26"},{"lineNumber":35,"author":{"gitId":"AlyssaPng"},"content":"}","lastModifiedDate":"2023-10-26"},{"lineNumber":36,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":37,"author":{"gitId":"AlyssaPng"},"content":"GatherCommandParser .down.\u003e GatherCommand : creates \u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":38,"author":{"gitId":"AlyssaPng"},"content":"GatherCommandParser .down.\u003e GatherEmailPrompt : creates \u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":39,"author":{"gitId":"AlyssaPng"},"content":"GatherCommand  -right-\u003e \"1\" GatherEmailPrompt","lastModifiedDate":"2023-10-26"},{"lineNumber":40,"author":{"gitId":"AlyssaPng"},"content":"GatherEmailByFinancialPlan .up.|\u003e  GatherEmailPrompt","lastModifiedDate":"2023-10-26"},{"lineNumber":41,"author":{"gitId":"AlyssaPng"},"content":"GatherEmailByTag .up.|\u003e GatherEmailPrompt","lastModifiedDate":"2023-10-26"},{"lineNumber":42,"author":{"gitId":"AlyssaPng"},"content":"GatherEmailPrompt .right.\u003e \"1\" Person","lastModifiedDate":"2023-10-26"},{"lineNumber":43,"author":{"gitId":"AlyssaPng"},"content":"@enduml","lastModifiedDate":"2023-10-26"}],"authorContributionMap":{"AlyssaPng":43}},{"path":"docs/diagrams/GatherSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"AlyssaPng"},"content":"@startuml","lastModifiedDate":"2023-10-26"},{"lineNumber":2,"author":{"gitId":"AlyssaPng"},"content":"!include style.puml","lastModifiedDate":"2023-10-26"},{"lineNumber":3,"author":{"gitId":"AlyssaPng"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2023-10-26"},{"lineNumber":4,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":5,"author":{"gitId":"AlyssaPng"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2023-10-26"},{"lineNumber":6,"author":{"gitId":"AlyssaPng"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2023-10-26"},{"lineNumber":7,"author":{"gitId":"AlyssaPng"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2023-10-26"},{"lineNumber":8,"author":{"gitId":"AlyssaPng"},"content":"participant \":GatherCommandParser\" as GatherCommandParser LOGIC_COLOR","lastModifiedDate":"2023-10-26"},{"lineNumber":9,"author":{"gitId":"AlyssaPng"},"content":"participant \"command:GatherCommand\" as GatherCommand LOGIC_COLOR","lastModifiedDate":"2023-10-26"},{"lineNumber":10,"author":{"gitId":"AlyssaPng"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2023-10-26"},{"lineNumber":11,"author":{"gitId":"AlyssaPng"},"content":"end box","lastModifiedDate":"2023-10-26"},{"lineNumber":12,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":13,"author":{"gitId":"AlyssaPng"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2023-10-26"},{"lineNumber":14,"author":{"gitId":"AlyssaPng"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2023-10-26"},{"lineNumber":15,"author":{"gitId":"AlyssaPng"},"content":"participant \":AddressBook\" as AddressBook MODEL_COLOR","lastModifiedDate":"2023-10-26"},{"lineNumber":16,"author":{"gitId":"AlyssaPng"},"content":"participant \":UniquePersonsList\" as UniquePersonsList MODEL_COLOR","lastModifiedDate":"2023-10-26"},{"lineNumber":17,"author":{"gitId":"AlyssaPng"},"content":"participant \"prompt:GatherEmailByFinancialPlan\" as GatherEmailByFinancialPlan MODEL_COLOR","lastModifiedDate":"2023-10-26"},{"lineNumber":18,"author":{"gitId":"AlyssaPng"},"content":"participant \":Person\" as Person MODEL_COLOR","lastModifiedDate":"2023-10-26"},{"lineNumber":19,"author":{"gitId":"AlyssaPng"},"content":"end box","lastModifiedDate":"2023-10-26"},{"lineNumber":20,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":21,"author":{"gitId":"AlyssaPng"},"content":"[-\u003e LogicManager : execute(\"gather fp/Financial Plan A\")","lastModifiedDate":"2023-10-26"},{"lineNumber":22,"author":{"gitId":"AlyssaPng"},"content":"activate LogicManager","lastModifiedDate":"2023-10-26"},{"lineNumber":23,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":24,"author":{"gitId":"AlyssaPng"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"gather fp/Financial Plan A\")","lastModifiedDate":"2023-10-26"},{"lineNumber":25,"author":{"gitId":"AlyssaPng"},"content":"activate AddressBookParser","lastModifiedDate":"2023-10-26"},{"lineNumber":26,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":27,"author":{"gitId":"AlyssaPng"},"content":"AddressBookParser -\u003e GatherCommandParser: parse(\"fp/Financial Plan A\")","lastModifiedDate":"2023-10-26"},{"lineNumber":28,"author":{"gitId":"AlyssaPng"},"content":"activate GatherCommandParser","lastModifiedDate":"2023-10-26"},{"lineNumber":29,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":30,"author":{"gitId":"AlyssaPng"},"content":"create GatherEmailByFinancialPlan","lastModifiedDate":"2023-10-26"},{"lineNumber":31,"author":{"gitId":"AlyssaPng"},"content":"GatherCommandParser -\u003e GatherEmailByFinancialPlan: GatherEmailByFinancialPlan(\"Financial Plan A\")","lastModifiedDate":"2023-10-26"},{"lineNumber":32,"author":{"gitId":"AlyssaPng"},"content":"activate GatherEmailByFinancialPlan","lastModifiedDate":"2023-10-26"},{"lineNumber":33,"author":{"gitId":"AlyssaPng"},"content":"GatherEmailByFinancialPlan --\u003e GatherCommandParser","lastModifiedDate":"2023-10-26"},{"lineNumber":34,"author":{"gitId":"AlyssaPng"},"content":"deactivate GatherEmailByFinancialPlan","lastModifiedDate":"2023-10-26"},{"lineNumber":35,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":36,"author":{"gitId":"AlyssaPng"},"content":"create GatherCommand","lastModifiedDate":"2023-10-26"},{"lineNumber":37,"author":{"gitId":"AlyssaPng"},"content":"GatherCommandParser -\u003e GatherCommand: GatherCommand(prompt)","lastModifiedDate":"2023-10-26"},{"lineNumber":38,"author":{"gitId":"AlyssaPng"},"content":"activate GatherCommand","lastModifiedDate":"2023-10-26"},{"lineNumber":39,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":40,"author":{"gitId":"AlyssaPng"},"content":"GatherCommand --\u003e GatherCommandParser : command","lastModifiedDate":"2023-10-26"},{"lineNumber":41,"author":{"gitId":"AlyssaPng"},"content":"deactivate GatherCommand","lastModifiedDate":"2023-10-26"},{"lineNumber":42,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":43,"author":{"gitId":"AlyssaPng"},"content":"GatherCommandParser --\u003e AddressBookParser : command","lastModifiedDate":"2023-10-26"},{"lineNumber":44,"author":{"gitId":"AlyssaPng"},"content":"deactivate GatherCommandParser","lastModifiedDate":"2023-10-26"},{"lineNumber":45,"author":{"gitId":"AlyssaPng"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2023-10-26"},{"lineNumber":46,"author":{"gitId":"AlyssaPng"},"content":"GatherCommandParser -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2023-10-26"},{"lineNumber":47,"author":{"gitId":"AlyssaPng"},"content":"destroy GatherCommandParser","lastModifiedDate":"2023-10-26"},{"lineNumber":48,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":49,"author":{"gitId":"AlyssaPng"},"content":"AddressBookParser --\u003e LogicManager : command","lastModifiedDate":"2023-10-26"},{"lineNumber":50,"author":{"gitId":"AlyssaPng"},"content":"deactivate AddressBookParser","lastModifiedDate":"2023-10-26"},{"lineNumber":51,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":52,"author":{"gitId":"AlyssaPng"},"content":"LogicManager -\u003e GatherCommand : execute()","lastModifiedDate":"2023-10-26"},{"lineNumber":53,"author":{"gitId":"AlyssaPng"},"content":"activate GatherCommand","lastModifiedDate":"2023-10-26"},{"lineNumber":54,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":55,"author":{"gitId":"AlyssaPng"},"content":"GatherCommand -\u003e Model: gatherEmails(prompt)","lastModifiedDate":"2023-10-26"},{"lineNumber":56,"author":{"gitId":"AlyssaPng"},"content":"activate Model","lastModifiedDate":"2023-10-26"},{"lineNumber":57,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":58,"author":{"gitId":"AlyssaPng"},"content":"Model -\u003e AddressBook: gatherEmails(prompt)","lastModifiedDate":"2023-10-26"},{"lineNumber":59,"author":{"gitId":"AlyssaPng"},"content":"activate AddressBook","lastModifiedDate":"2023-10-26"},{"lineNumber":60,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":61,"author":{"gitId":"AlyssaPng"},"content":"AddressBook -\u003e UniquePersonsList: gatherEmails(prompt)","lastModifiedDate":"2023-10-26"},{"lineNumber":62,"author":{"gitId":"AlyssaPng"},"content":"activate UniquePersonsList","lastModifiedDate":"2023-10-26"},{"lineNumber":63,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":64,"author":{"gitId":"AlyssaPng"},"content":"loop through internalList","lastModifiedDate":"2023-10-26"},{"lineNumber":65,"author":{"gitId":"AlyssaPng"},"content":"    UniquePersonsList -\u003e GatherEmailByFinancialPlan: gatherEmails(person)","lastModifiedDate":"2023-10-26"},{"lineNumber":66,"author":{"gitId":"AlyssaPng"},"content":"    activate GatherEmailByFinancialPlan","lastModifiedDate":"2023-10-26"},{"lineNumber":67,"author":{"gitId":"AlyssaPng"},"content":"    GatherEmailByFinancialPlan -\u003e Person: gatherEmailsContainsFinancialPlan(\"Financial Plan A\")","lastModifiedDate":"2023-10-26"},{"lineNumber":68,"author":{"gitId":"AlyssaPng"},"content":"    activate Person","lastModifiedDate":"2023-10-26"},{"lineNumber":69,"author":{"gitId":"AlyssaPng"},"content":"    Person --\u003e GatherEmailByFinancialPlan: email (or Empty String)","lastModifiedDate":"2023-10-26"},{"lineNumber":70,"author":{"gitId":"AlyssaPng"},"content":"    deactivate Person","lastModifiedDate":"2023-10-26"},{"lineNumber":71,"author":{"gitId":"AlyssaPng"},"content":"    GatherEmailByFinancialPlan --\u003e UniquePersonsList: email (or Empty String)","lastModifiedDate":"2023-10-26"},{"lineNumber":72,"author":{"gitId":"AlyssaPng"},"content":"    deactivate GatherEmailByFinancialPlan","lastModifiedDate":"2023-10-26"},{"lineNumber":73,"author":{"gitId":"AlyssaPng"},"content":"end loop","lastModifiedDate":"2023-10-26"},{"lineNumber":74,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":75,"author":{"gitId":"AlyssaPng"},"content":"UniquePersonsList --\u003e AddressBook: emails (or Empty String)","lastModifiedDate":"2023-10-26"},{"lineNumber":76,"author":{"gitId":"AlyssaPng"},"content":"deactivate UniquePersonsList","lastModifiedDate":"2023-10-26"},{"lineNumber":77,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":78,"author":{"gitId":"AlyssaPng"},"content":"AddressBook --\u003e Model: emails (or Empty String)","lastModifiedDate":"2023-10-26"},{"lineNumber":79,"author":{"gitId":"AlyssaPng"},"content":"deactivate AddressBook","lastModifiedDate":"2023-10-26"},{"lineNumber":80,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":81,"author":{"gitId":"AlyssaPng"},"content":"Model --\u003e GatherCommand: emails (or Empty String)","lastModifiedDate":"2023-10-26"},{"lineNumber":82,"author":{"gitId":"AlyssaPng"},"content":"deactivate Model","lastModifiedDate":"2023-10-26"},{"lineNumber":83,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":84,"author":{"gitId":"AlyssaPng"},"content":"alt emails.isEmpty()","lastModifiedDate":"2023-10-26"},{"lineNumber":85,"author":{"gitId":"AlyssaPng"},"content":"    GatherCommand --\u003e LogicManager: CommandResult(MESSAGE_NO_PERSON_FOUND + prompt.toString())","lastModifiedDate":"2023-10-26"},{"lineNumber":86,"author":{"gitId":"AlyssaPng"},"content":"else","lastModifiedDate":"2023-10-26"},{"lineNumber":87,"author":{"gitId":"AlyssaPng"},"content":"    GatherCommand --\u003e LogicManager: CommandResult(emails)","lastModifiedDate":"2023-10-26"},{"lineNumber":88,"author":{"gitId":"AlyssaPng"},"content":"end","lastModifiedDate":"2023-10-26"},{"lineNumber":89,"author":{"gitId":"AlyssaPng"},"content":"    deactivate GatherCommand","lastModifiedDate":"2023-10-26"},{"lineNumber":90,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":91,"author":{"gitId":"AlyssaPng"},"content":"[\u003c--LogicManager","lastModifiedDate":"2023-10-26"},{"lineNumber":92,"author":{"gitId":"AlyssaPng"},"content":"deactivate LogicManager","lastModifiedDate":"2023-10-26"},{"lineNumber":93,"author":{"gitId":"AlyssaPng"},"content":"@enduml","lastModifiedDate":"2023-10-26"}],"authorContributionMap":{"AlyssaPng":93}},{"path":"docs/diagrams/ModelClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Package Model as ModelPackage \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2023-07-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nReadOnlyAddressBook\" as ReadOnlyAddressBook","lastModifiedDate":"2022-01-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nReadOnlyUserPrefs\" as ReadOnlyUserPrefs","lastModifiedDate":"2022-01-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nModel\" as Model","lastModifiedDate":"2022-01-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class AddressBook","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class ModelManager","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class UserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class UniquePersonList","lastModifiedDate":"2021-07-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class Person","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Class Address","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Class Email","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Class Name","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Class Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Class Tag","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"Kb-Tay"},"content":"Class FinancialPlan","lastModifiedDate":"2023-10-23"},{"lineNumber":23,"author":{"gitId":"Kb-Tay"},"content":"abstract Class ScheduleItem","lastModifiedDate":"2023-10-26"},{"lineNumber":24,"author":{"gitId":"Kb-Tay"},"content":"Class NextOfKinName","lastModifiedDate":"2023-10-26"},{"lineNumber":25,"author":{"gitId":"Kb-Tay"},"content":"Class NextOfKinPhone","lastModifiedDate":"2023-10-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"Class I #FFFFFF","lastModifiedDate":"2023-07-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"AddressBook .up.|\u003e ReadOnlyAddressBook","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"ModelManager .up.|\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"Model .right.\u003e ReadOnlyUserPrefs","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"Model .left.\u003e ReadOnlyAddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"ModelManager -left-\u003e \"1\" AddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"ModelManager -right-\u003e \"1\" UserPrefs","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"UserPrefs .up.|\u003e ReadOnlyUserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"AddressBook *--\u003e \"1\" UniquePersonList","lastModifiedDate":"2019-07-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"UniquePersonList --\u003e \"~* all\" Person","lastModifiedDate":"2021-07-31"},{"lineNumber":43,"author":{"gitId":"-"},"content":"Person *--\u003e Name","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"Person *--\u003e Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"Person *--\u003e Email","lastModifiedDate":"2019-07-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"Person *--\u003e Address","lastModifiedDate":"2019-07-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"Person *--\u003e \"*\" Tag","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"Kb-Tay"},"content":"Person *--\u003e \"*\" FinancialPlan","lastModifiedDate":"2023-10-23"},{"lineNumber":49,"author":{"gitId":"Kb-Tay"},"content":"Person *--\u003e ScheduleItem","lastModifiedDate":"2023-10-23"},{"lineNumber":50,"author":{"gitId":"Kb-Tay"},"content":"Person *--\u003e NextOfKinName","lastModifiedDate":"2023-10-26"},{"lineNumber":51,"author":{"gitId":"Kb-Tay"},"content":"Person *--\u003e NextOfKinPhone","lastModifiedDate":"2023-10-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"Person -[hidden]up--\u003e I","lastModifiedDate":"2023-07-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"UniquePersonList -[hidden]right-\u003e I","lastModifiedDate":"2023-07-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"Name -[hidden]right-\u003e Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"Phone -[hidden]right-\u003e Address","lastModifiedDate":"2019-07-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"Address -[hidden]right-\u003e Email","lastModifiedDate":"2019-07-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"ModelManager --\u003e \"~* filtered\" Person","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"Kb-Tay":8,"-":53}},{"path":"docs/diagrams/ScheduleActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Kb-Tay"},"content":"@startuml","lastModifiedDate":"2023-11-05"},{"lineNumber":2,"author":{"gitId":"Kb-Tay"},"content":"skin rose","lastModifiedDate":"2023-11-05"},{"lineNumber":3,"author":{"gitId":"Kb-Tay"},"content":"skinparam ActivityFontSize 15","lastModifiedDate":"2023-11-05"},{"lineNumber":4,"author":{"gitId":"Kb-Tay"},"content":"skinparam ArrowFontSize 12","lastModifiedDate":"2023-11-05"},{"lineNumber":5,"author":{"gitId":"Kb-Tay"},"content":"start","lastModifiedDate":"2023-11-05"},{"lineNumber":6,"author":{"gitId":"Kb-Tay"},"content":":User enters a schedule command;","lastModifiedDate":"2023-11-05"},{"lineNumber":7,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":8,"author":{"gitId":"Kb-Tay"},"content":":ScheduleCommandParser parses the user input and checks validity;","lastModifiedDate":"2023-11-05"},{"lineNumber":9,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":10,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":11,"author":{"gitId":"Kb-Tay"},"content":"\u0027Since the beta syntax does not support placing the condition outside the","lastModifiedDate":"2023-11-05"},{"lineNumber":12,"author":{"gitId":"Kb-Tay"},"content":"\u0027diamond we place it as the true branch instead.","lastModifiedDate":"2023-11-05"},{"lineNumber":13,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":14,"author":{"gitId":"Kb-Tay"},"content":"switch ()","lastModifiedDate":"2023-11-05"},{"lineNumber":15,"author":{"gitId":"Kb-Tay"},"content":"case([the schedule command is valid])","lastModifiedDate":"2023-11-05"},{"lineNumber":16,"author":{"gitId":"Kb-Tay"},"content":"    : Creates a ScheduleCommand which is executed by Logic Manager;","lastModifiedDate":"2023-11-05"},{"lineNumber":17,"author":{"gitId":"Kb-Tay"},"content":"    : Updates Person in FilterPersonList to have the scheduled appointment;","lastModifiedDate":"2023-11-05"},{"lineNumber":18,"author":{"gitId":"Kb-Tay"},"content":"case([else])","lastModifiedDate":"2023-11-05"},{"lineNumber":19,"author":{"gitId":"Kb-Tay"},"content":"    : Throws an error;","lastModifiedDate":"2023-11-05"},{"lineNumber":20,"author":{"gitId":"Kb-Tay"},"content":"endswitch","lastModifiedDate":"2023-11-05"},{"lineNumber":21,"author":{"gitId":"Kb-Tay"},"content":"stop","lastModifiedDate":"2023-11-05"},{"lineNumber":22,"author":{"gitId":"Kb-Tay"},"content":"@enduml","lastModifiedDate":"2023-11-05"}],"authorContributionMap":{"Kb-Tay":22}},{"path":"docs/diagrams/ScheduleClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Kb-Tay"},"content":"@startuml","lastModifiedDate":"2023-10-23"},{"lineNumber":2,"author":{"gitId":"Kb-Tay"},"content":"!include style.puml","lastModifiedDate":"2023-10-23"},{"lineNumber":3,"author":{"gitId":"Kb-Tay"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2023-10-23"},{"lineNumber":4,"author":{"gitId":"Kb-Tay"},"content":"skinparam arrowColor LOGIC_COLOR_T4","lastModifiedDate":"2023-10-23"},{"lineNumber":5,"author":{"gitId":"Kb-Tay"},"content":"skinparam classBackgroundColor LOGIC_COLOR","lastModifiedDate":"2023-10-23"},{"lineNumber":6,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":7,"author":{"gitId":"Kb-Tay"},"content":"Package Schedule as SchedulePackage\u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2023-10-23"},{"lineNumber":8,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":9,"author":{"gitId":"Kb-Tay"},"content":"Class LogicManager","lastModifiedDate":"2023-10-23"},{"lineNumber":10,"author":{"gitId":"Kb-Tay"},"content":"Class AddressBookParser","lastModifiedDate":"2023-10-23"},{"lineNumber":11,"author":{"gitId":"Kb-Tay"},"content":"Class ScheduleCommandParser","lastModifiedDate":"2023-10-23"},{"lineNumber":12,"author":{"gitId":"Kb-Tay"},"content":"Class ScheduleCommand","lastModifiedDate":"2023-10-23"},{"lineNumber":13,"author":{"gitId":"Kb-Tay"},"content":"Class Index","lastModifiedDate":"2023-10-23"},{"lineNumber":14,"author":{"gitId":"Kb-Tay"},"content":"Class CommandResult","lastModifiedDate":"2023-10-23"},{"lineNumber":15,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":16,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":17,"author":{"gitId":"Kb-Tay"},"content":"LogicManager -down- \"1\" ScheduleCommand : executes \u003e","lastModifiedDate":"2023-11-12"},{"lineNumber":18,"author":{"gitId":"Kb-Tay"},"content":"LogicManager -right-\u003e \"1\" AddressBookParser","lastModifiedDate":"2023-10-23"},{"lineNumber":19,"author":{"gitId":"Kb-Tay"},"content":"AddressBookParser ..\u003e ScheduleCommandParser : creates \u003e","lastModifiedDate":"2023-11-12"},{"lineNumber":20,"author":{"gitId":"Kb-Tay"},"content":"ScheduleCommand -right-\u003e \"1\" Appointment","lastModifiedDate":"2023-10-23"},{"lineNumber":21,"author":{"gitId":"Kb-Tay"},"content":"ScheduleCommandParser ..\u003e ScheduleCommand : creates \u003e","lastModifiedDate":"2023-11-12"},{"lineNumber":22,"author":{"gitId":"Kb-Tay"},"content":"ScheduleCommand -right-\u003e \"1\" Index","lastModifiedDate":"2023-10-23"},{"lineNumber":23,"author":{"gitId":"Kb-Tay"},"content":"ScheduleCommand ..down\u003e CommandResult : produces \u003e","lastModifiedDate":"2023-11-12"},{"lineNumber":24,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":25,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":26,"author":{"gitId":"Kb-Tay"},"content":"Appointment -[hidden]down-\u003e Index","lastModifiedDate":"2023-10-23"},{"lineNumber":27,"author":{"gitId":"Kb-Tay"},"content":"}","lastModifiedDate":"2023-10-23"},{"lineNumber":28,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":29,"author":{"gitId":"Kb-Tay"},"content":"@enduml","lastModifiedDate":"2023-10-23"}],"authorContributionMap":{"Kb-Tay":29}},{"path":"docs/diagrams/ScheduleItemClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Kb-Tay"},"content":"@startuml","lastModifiedDate":"2023-10-26"},{"lineNumber":2,"author":{"gitId":"Kb-Tay"},"content":"hide empty methods","lastModifiedDate":"2023-10-26"},{"lineNumber":3,"author":{"gitId":"Kb-Tay"},"content":"hide empty attributes","lastModifiedDate":"2023-10-26"},{"lineNumber":4,"author":{"gitId":"Kb-Tay"},"content":"hide circle","lastModifiedDate":"2023-10-26"},{"lineNumber":5,"author":{"gitId":"Kb-Tay"},"content":"skinparam class {","lastModifiedDate":"2023-10-26"},{"lineNumber":6,"author":{"gitId":"Kb-Tay"},"content":"  BackgroundColor #9D0012","lastModifiedDate":"2023-10-26"},{"lineNumber":7,"author":{"gitId":"Kb-Tay"},"content":"  FontColor #FFFFFF","lastModifiedDate":"2023-10-26"},{"lineNumber":8,"author":{"gitId":"Kb-Tay"},"content":"      FontSize 15","lastModifiedDate":"2023-10-26"},{"lineNumber":9,"author":{"gitId":"Kb-Tay"},"content":"}","lastModifiedDate":"2023-10-26"},{"lineNumber":10,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":11,"author":{"gitId":"Kb-Tay"},"content":"abstract class ScheduleItem {}","lastModifiedDate":"2023-10-26"},{"lineNumber":12,"author":{"gitId":"Kb-Tay"},"content":"class Appointment {","lastModifiedDate":"2023-10-26"},{"lineNumber":13,"author":{"gitId":"Kb-Tay"},"content":"    value : String","lastModifiedDate":"2023-10-26"},{"lineNumber":14,"author":{"gitId":"Kb-Tay"},"content":"    date : LocalDateTime","lastModifiedDate":"2023-10-26"},{"lineNumber":15,"author":{"gitId":"Kb-Tay"},"content":"    person : Person","lastModifiedDate":"2023-10-26"},{"lineNumber":16,"author":{"gitId":"Kb-Tay"},"content":"}","lastModifiedDate":"2023-10-26"},{"lineNumber":17,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":18,"author":{"gitId":"Kb-Tay"},"content":"class NullAppointment \u003c\u003cSingleton\u003e\u003e {","lastModifiedDate":"2023-11-05"},{"lineNumber":19,"author":{"gitId":"Kb-Tay"},"content":"    value : String","lastModifiedDate":"2023-10-26"},{"lineNumber":20,"author":{"gitId":"Kb-Tay"},"content":"}","lastModifiedDate":"2023-10-26"},{"lineNumber":21,"author":{"gitId":"Kb-Tay"},"content":"class Person {}","lastModifiedDate":"2023-10-26"},{"lineNumber":22,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":23,"author":{"gitId":"Kb-Tay"},"content":"Appointment -up-|\u003e ScheduleItem","lastModifiedDate":"2023-10-26"},{"lineNumber":24,"author":{"gitId":"Kb-Tay"},"content":"NullAppointment -up-|\u003e ScheduleItem","lastModifiedDate":"2023-10-26"},{"lineNumber":25,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":26,"author":{"gitId":"nikele2001"},"content":"Person \"1\" *-down-\u003e \"1\" ScheduleItem","lastModifiedDate":"2023-11-10"},{"lineNumber":27,"author":{"gitId":"nikele2001"},"content":"Person -[hidden]down-\u003e NullAppointment","lastModifiedDate":"2023-11-10"},{"lineNumber":28,"author":{"gitId":"nikele2001"},"content":"Person -[hidden]down-\u003e ScheduleItem","lastModifiedDate":"2023-11-10"},{"lineNumber":29,"author":{"gitId":"Kb-Tay"},"content":"Appointment -[hidden]left-\u003e NullAppointment","lastModifiedDate":"2023-10-26"},{"lineNumber":30,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":31,"author":{"gitId":"Kb-Tay"},"content":"@enduml","lastModifiedDate":"2023-10-26"}],"authorContributionMap":{"Kb-Tay":28,"nikele2001":3}},{"path":"docs/diagrams/SortClassActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"jylow"},"content":"@startuml","lastModifiedDate":"2023-10-26"},{"lineNumber":2,"author":{"gitId":"jylow"},"content":"skin rose","lastModifiedDate":"2023-10-26"},{"lineNumber":3,"author":{"gitId":"jylow"},"content":"skinparam ActivityFontSize 15","lastModifiedDate":"2023-10-26"},{"lineNumber":4,"author":{"gitId":"jylow"},"content":"skinparam ArrowFontSize 12","lastModifiedDate":"2023-10-26"},{"lineNumber":5,"author":{"gitId":"jylow"},"content":"start","lastModifiedDate":"2023-10-26"},{"lineNumber":6,"author":{"gitId":"jylow"},"content":":User executes sort command;","lastModifiedDate":"2023-10-26"},{"lineNumber":7,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":8,"author":{"gitId":"jylow"},"content":":User input is parsed;","lastModifiedDate":"2023-10-26"},{"lineNumber":9,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":10,"author":{"gitId":"jylow"},"content":"\u0027Since the beta syntax does not support placing the condition outside the","lastModifiedDate":"2023-10-26"},{"lineNumber":11,"author":{"gitId":"jylow"},"content":"\u0027diamond we place it as the true branch instead.","lastModifiedDate":"2023-10-26"},{"lineNumber":12,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":13,"author":{"gitId":"jylow"},"content":"switch ()","lastModifiedDate":"2023-10-26"},{"lineNumber":14,"author":{"gitId":"jylow"},"content":"case([input \u003d \"name\"])","lastModifiedDate":"2023-10-26"},{"lineNumber":15,"author":{"gitId":"jylow"},"content":"    :Sorts the list by name lexicographically;","lastModifiedDate":"2023-10-26"},{"lineNumber":16,"author":{"gitId":"jylow"},"content":"case([input \u003d \"appointment\"])","lastModifiedDate":"2023-10-26"},{"lineNumber":17,"author":{"gitId":"jylow"},"content":"    :Sorts the list by appointment;","lastModifiedDate":"2023-10-26"},{"lineNumber":18,"author":{"gitId":"jylow"},"content":"case([else])","lastModifiedDate":"2023-10-26"},{"lineNumber":19,"author":{"gitId":"jylow"},"content":"    :Throws error message;","lastModifiedDate":"2023-11-10"},{"lineNumber":20,"author":{"gitId":"jylow"},"content":"endswitch","lastModifiedDate":"2023-10-26"},{"lineNumber":21,"author":{"gitId":"jylow"},"content":"stop","lastModifiedDate":"2023-10-26"},{"lineNumber":22,"author":{"gitId":"jylow"},"content":"@enduml","lastModifiedDate":"2023-10-26"}],"authorContributionMap":{"jylow":22}},{"path":"docs/diagrams/SortClassSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"jylow"},"content":"@startuml","lastModifiedDate":"2023-10-26"},{"lineNumber":2,"author":{"gitId":"jylow"},"content":"!include style.puml","lastModifiedDate":"2023-10-26"},{"lineNumber":3,"author":{"gitId":"jylow"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2023-10-26"},{"lineNumber":4,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":5,"author":{"gitId":"jylow"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2023-10-26"},{"lineNumber":6,"author":{"gitId":"jylow"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2023-10-26"},{"lineNumber":7,"author":{"gitId":"jylow"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2023-10-26"},{"lineNumber":8,"author":{"gitId":"jylow"},"content":"participant \":SortCommandParser\" as SortCommandParser LOGIC_COLOR","lastModifiedDate":"2023-10-26"},{"lineNumber":9,"author":{"gitId":"jylow"},"content":"participant \"command:SortCommand\" as SortCommand LOGIC_COLOR","lastModifiedDate":"2023-10-26"},{"lineNumber":10,"author":{"gitId":"jylow"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2023-10-26"},{"lineNumber":11,"author":{"gitId":"jylow"},"content":"end box","lastModifiedDate":"2023-10-26"},{"lineNumber":12,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":13,"author":{"gitId":"jylow"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2023-10-26"},{"lineNumber":14,"author":{"gitId":"jylow"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2023-10-26"},{"lineNumber":15,"author":{"gitId":"jylow"},"content":"participant \":Person\" as Person MODEL_COLOR","lastModifiedDate":"2023-10-26"},{"lineNumber":16,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":17,"author":{"gitId":"jylow"},"content":"end box","lastModifiedDate":"2023-10-26"},{"lineNumber":18,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":19,"author":{"gitId":"jylow"},"content":"[-\u003e LogicManager : execute(\"sort appointment\")","lastModifiedDate":"2023-10-26"},{"lineNumber":20,"author":{"gitId":"jylow"},"content":"activate LogicManager","lastModifiedDate":"2023-10-26"},{"lineNumber":21,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":22,"author":{"gitId":"jylow"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"sort appointment\")","lastModifiedDate":"2023-10-26"},{"lineNumber":23,"author":{"gitId":"jylow"},"content":"activate AddressBookParser","lastModifiedDate":"2023-10-26"},{"lineNumber":24,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":25,"author":{"gitId":"jylow"},"content":"AddressBookParser -\u003e SortCommandParser: parse(\"appointment\")","lastModifiedDate":"2023-10-26"},{"lineNumber":26,"author":{"gitId":"jylow"},"content":"activate SortCommandParser","lastModifiedDate":"2023-10-26"},{"lineNumber":27,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":28,"author":{"gitId":"jylow"},"content":"create SortCommand","lastModifiedDate":"2023-10-26"},{"lineNumber":29,"author":{"gitId":"jylow"},"content":"SortCommandParser -\u003e SortCommand: SortCommand(new SortByAppointmentComparator)","lastModifiedDate":"2023-10-26"},{"lineNumber":30,"author":{"gitId":"jylow"},"content":"activate SortCommand","lastModifiedDate":"2023-10-26"},{"lineNumber":31,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":32,"author":{"gitId":"jylow"},"content":"SortCommand --\u003e SortCommandParser","lastModifiedDate":"2023-11-12"},{"lineNumber":33,"author":{"gitId":"jylow"},"content":"deactivate SortCommand","lastModifiedDate":"2023-11-12"},{"lineNumber":34,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":35,"author":{"gitId":"jylow"},"content":"SortCommandParser --\u003e AddressBookParser","lastModifiedDate":"2023-11-12"},{"lineNumber":36,"author":{"gitId":"jylow"},"content":"deactivate SortCommandParser","lastModifiedDate":"2023-11-12"},{"lineNumber":37,"author":{"gitId":"jylow"},"content":"SortCommandParser -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2023-11-12"},{"lineNumber":38,"author":{"gitId":"jylow"},"content":"destroy SortCommandParser","lastModifiedDate":"2023-11-12"},{"lineNumber":39,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":40,"author":{"gitId":"jylow"},"content":"AddressBookParser --\u003e LogicManager","lastModifiedDate":"2023-11-12"},{"lineNumber":41,"author":{"gitId":"jylow"},"content":"deactivate AddressBookParser","lastModifiedDate":"2023-11-12"},{"lineNumber":42,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":43,"author":{"gitId":"jylow"},"content":"LogicManager -\u003e SortCommand: execute()","lastModifiedDate":"2023-11-12"},{"lineNumber":44,"author":{"gitId":"jylow"},"content":"activate SortCommand","lastModifiedDate":"2023-11-12"},{"lineNumber":45,"author":{"gitId":"jylow"},"content":"SortCommand -\u003e Model: model.sortFilteredPersonList(comparator);","lastModifiedDate":"2023-11-12"},{"lineNumber":46,"author":{"gitId":"jylow"},"content":"activate Model","lastModifiedDate":"2023-10-26"},{"lineNumber":47,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":48,"author":{"gitId":"jylow"},"content":"Model -\u003e Person : sortFilteredPersonList(SortByAppointmentComparator)","lastModifiedDate":"2023-11-12"},{"lineNumber":49,"author":{"gitId":"jylow"},"content":"activate Person","lastModifiedDate":"2023-10-26"},{"lineNumber":50,"author":{"gitId":"jylow"},"content":"deactivate Person","lastModifiedDate":"2023-10-26"},{"lineNumber":51,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":52,"author":{"gitId":"jylow"},"content":"Model --\u003e SortCommand","lastModifiedDate":"2023-11-12"},{"lineNumber":53,"author":{"gitId":"jylow"},"content":"deactivate Model","lastModifiedDate":"2023-10-26"},{"lineNumber":54,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":55,"author":{"gitId":"jylow"},"content":"create CommandResult","lastModifiedDate":"2023-11-12"},{"lineNumber":56,"author":{"gitId":"jylow"},"content":"SortCommand -\u003e CommandResult","lastModifiedDate":"2023-11-12"},{"lineNumber":57,"author":{"gitId":"jylow"},"content":"activate CommandResult","lastModifiedDate":"2023-10-26"},{"lineNumber":58,"author":{"gitId":"jylow"},"content":"CommandResult --\u003e SortCommand","lastModifiedDate":"2023-10-26"},{"lineNumber":59,"author":{"gitId":"jylow"},"content":"deactivate CommandResult","lastModifiedDate":"2023-10-26"},{"lineNumber":60,"author":{"gitId":"jylow"},"content":"SortCommand --\u003e LogicManager","lastModifiedDate":"2023-11-12"},{"lineNumber":61,"author":{"gitId":"jylow"},"content":"deactivate SortCommand","lastModifiedDate":"2023-10-26"},{"lineNumber":62,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":63,"author":{"gitId":"jylow"},"content":"SortCommandParser -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2023-11-12"},{"lineNumber":64,"author":{"gitId":"jylow"},"content":"destroy SortCommand","lastModifiedDate":"2023-11-12"},{"lineNumber":65,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":66,"author":{"gitId":"jylow"},"content":"[\u003c-- LogicManager","lastModifiedDate":"2023-11-10"},{"lineNumber":67,"author":{"gitId":"jylow"},"content":"deactivate LogicManager","lastModifiedDate":"2023-10-26"},{"lineNumber":68,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":69,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":70,"author":{"gitId":"jylow"},"content":"@enduml","lastModifiedDate":"2023-10-26"}],"authorContributionMap":{"jylow":70}},{"path":"docs/diagrams/StorageClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package Storage as StoragePackage {","lastModifiedDate":"2023-07-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":9,"author":{"gitId":"-"},"content":"package \"UserPrefs Storage\" #F4F6F6{","lastModifiedDate":"2021-07-31"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nUserPrefsStorage\" as UserPrefsStorage","lastModifiedDate":"2022-01-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class JsonUserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nStorage\" as Storage","lastModifiedDate":"2022-01-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class StorageManager","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"package \"AddressBook Storage\" #F4F6F6{","lastModifiedDate":"2021-07-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nAddressBookStorage\" as AddressBookStorage","lastModifiedDate":"2022-01-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Class JsonAddressBookStorage","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Class JsonSerializableAddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Class JsonAdaptedPerson","lastModifiedDate":"2021-07-31"},{"lineNumber":22,"author":{"gitId":"-"},"content":"Class JsonAdaptedTag","lastModifiedDate":"2021-07-31"},{"lineNumber":23,"author":{"gitId":"Kb-Tay"},"content":"Class JsonAdaptedFinancialPlan","lastModifiedDate":"2023-10-23"},{"lineNumber":24,"author":{"gitId":"Kb-Tay"},"content":"Class JsonAdaptedAppointment","lastModifiedDate":"2023-10-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Storage","lastModifiedDate":"2021-07-31"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"StorageManager .up.|\u003e Storage","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"StorageManager -up-\u003e \"1\" UserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"StorageManager -up-\u003e \"1\" AddressBookStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"Storage -left-|\u003e UserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"Storage -right-|\u003e AddressBookStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"JsonUserPrefsStorage .up.|\u003e UserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":40,"author":{"gitId":"-"},"content":"JsonAddressBookStorage .up.|\u003e AddressBookStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":41,"author":{"gitId":"-"},"content":"JsonAddressBookStorage ..\u003e JsonSerializableAddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":42,"author":{"gitId":"-"},"content":"JsonSerializableAddressBook --\u003e \"*\" JsonAdaptedPerson","lastModifiedDate":"2021-07-31"},{"lineNumber":43,"author":{"gitId":"-"},"content":"JsonAdaptedPerson --\u003e \"*\" JsonAdaptedTag","lastModifiedDate":"2021-07-31"},{"lineNumber":44,"author":{"gitId":"Kb-Tay"},"content":"JsonAdaptedPerson --\u003e \"1\" JsonAdaptedAppointment","lastModifiedDate":"2023-10-23"},{"lineNumber":45,"author":{"gitId":"Kb-Tay"},"content":"JsonAdaptedPerson --\u003e \"*\" JsonAdaptedFinancialPlan","lastModifiedDate":"2023-10-23"},{"lineNumber":46,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":47,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":48,"author":{"gitId":"Kb-Tay"},"content":"JsonAdaptedFinancialPlan -[hidden]up-\u003e JsonAdaptedTag","lastModifiedDate":"2023-10-23"},{"lineNumber":49,"author":{"gitId":"Kb-Tay"},"content":"JsonAdaptedAppointment -[hidden]left-\u003e JsonAdaptedFinancialPlan","lastModifiedDate":"2023-10-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":51,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"Kb-Tay":8,"-":43}},{"path":"docs/diagrams/UiClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor UI_COLOR_T4","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package UI \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nUi\" as Ui","lastModifiedDate":"2022-01-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Class \"{abstract}\\nUiPart\" as UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class UiManager","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class MainWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class HelpWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"sopa301"},"content":"Class OverrideWindow","lastModifiedDate":"2023-11-10"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Class ResultDisplay","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class PersonListPanel","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class PersonCard","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"nikele2001"},"content":"Class AppointmentListPanel","lastModifiedDate":"2023-10-26"},{"lineNumber":18,"author":{"gitId":"nikele2001"},"content":"Class AppointmentCard","lastModifiedDate":"2023-10-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Class StatusBarFooter","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Class CommandBox","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"package Model \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"Class HiddenModel #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"package Logic \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"Class HiddenLogic #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Ui","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"UiManager .left.|\u003e Ui","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"UiManager -down-\u003e \"1\" MainWindow","lastModifiedDate":"2023-11-11"},{"lineNumber":36,"author":{"gitId":"sopa301"},"content":"MainWindow *-down--\u003e  \"1\" CommandBox","lastModifiedDate":"2023-11-10"},{"lineNumber":37,"author":{"gitId":"sopa301"},"content":"MainWindow *-down--\u003e \"1\" ResultDisplay","lastModifiedDate":"2023-11-10"},{"lineNumber":38,"author":{"gitId":"sopa301"},"content":"MainWindow *-down--\u003e \"1\" PersonListPanel","lastModifiedDate":"2023-11-10"},{"lineNumber":39,"author":{"gitId":"sopa301"},"content":"MainWindow *-down--\u003e \"1\" AppointmentListPanel","lastModifiedDate":"2023-11-10"},{"lineNumber":40,"author":{"gitId":"nikele2001"},"content":"MainWindow *-down--\u003e \"1\" StatusBarFooter","lastModifiedDate":"2023-11-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"MainWindow --\u003e \"0..1\" HelpWindow","lastModifiedDate":"2023-11-11"},{"lineNumber":42,"author":{"gitId":"nikele2001"},"content":"MainWindow --\u003e \"0..1\" OverrideWindow","lastModifiedDate":"2023-11-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"PersonListPanel -down-\u003e \"*\" PersonCard","lastModifiedDate":"2021-07-31"},{"lineNumber":45,"author":{"gitId":"nikele2001"},"content":"AppointmentListPanel -down-\u003e \"*\" AppointmentCard","lastModifiedDate":"2023-10-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"MainWindow -left-|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"ResultDisplay --|\u003e UiPart","lastModifiedDate":"2023-11-11"},{"lineNumber":50,"author":{"gitId":"-"},"content":"CommandBox --|\u003e UiPart","lastModifiedDate":"2023-11-11"},{"lineNumber":51,"author":{"gitId":"-"},"content":"PersonListPanel --|\u003e UiPart","lastModifiedDate":"2023-11-11"},{"lineNumber":52,"author":{"gitId":"-"},"content":"PersonCard --|\u003e UiPart","lastModifiedDate":"2023-11-11"},{"lineNumber":53,"author":{"gitId":"sopa301"},"content":"AppointmentListPanel --|\u003e UiPart","lastModifiedDate":"2023-11-10"},{"lineNumber":54,"author":{"gitId":"sopa301"},"content":"AppointmentCard --|\u003e UiPart","lastModifiedDate":"2023-11-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"StatusBarFooter --|\u003e UiPart","lastModifiedDate":"2023-11-11"},{"lineNumber":56,"author":{"gitId":"-"},"content":"HelpWindow --|\u003e UiPart","lastModifiedDate":"2023-11-11"},{"lineNumber":57,"author":{"gitId":"nikele2001"},"content":"OverrideWindow --|\u003e UiPart","lastModifiedDate":"2023-11-11"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":59,"author":{"gitId":"nikele2001"},"content":"PersonCard ...\u003e Model","lastModifiedDate":"2023-11-11"},{"lineNumber":60,"author":{"gitId":"sopa301"},"content":"AppointmentCard ...\u003e Model","lastModifiedDate":"2023-11-10"},{"lineNumber":61,"author":{"gitId":"-"},"content":"UiManager -right-\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"MainWindow -left-\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"PersonListPanel -[hidden]left- HelpWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"HelpWindow -[hidden]left- CommandBox","lastModifiedDate":"2019-07-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"CommandBox -[hidden]left- ResultDisplay","lastModifiedDate":"2019-07-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"ResultDisplay -[hidden]left- StatusBarFooter","lastModifiedDate":"2019-07-30"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"MainWindow -[hidden]-|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":70,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"nikele2001":7,"sopa301":8,"-":55}},{"path":"docs/team/alyssapng.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"AlyssaPng"},"content":"---","lastModifiedDate":"2023-09-27"},{"lineNumber":2,"author":{"gitId":"AlyssaPng"},"content":"layout: page","lastModifiedDate":"2023-09-27"},{"lineNumber":3,"author":{"gitId":"AlyssaPng"},"content":"title: Alyssa Png Kai Wen\u0027s Project Portfolio Page","lastModifiedDate":"2023-09-27"},{"lineNumber":4,"author":{"gitId":"AlyssaPng"},"content":"---","lastModifiedDate":"2023-09-27"},{"lineNumber":5,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":6,"author":{"gitId":"AlyssaPng"},"content":"### Overview","lastModifiedDate":"2023-09-27"},{"lineNumber":7,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":8,"author":{"gitId":"AlyssaPng"},"content":"To be added soon.","lastModifiedDate":"2023-09-27"},{"lineNumber":9,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":10,"author":{"gitId":"AlyssaPng"},"content":"### Summary of Contributions","lastModifiedDate":"2023-09-27"},{"lineNumber":11,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":12,"author":{"gitId":"AlyssaPng"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-09-27"},{"lineNumber":13,"author":{"gitId":"AlyssaPng"},"content":"* **New feature**: Added the ability to gather email of clients by Financial plan and Tag","lastModifiedDate":"2023-10-26"},{"lineNumber":14,"author":{"gitId":"AlyssaPng"},"content":"    * What it does: It takes a prompt as input and retrieves emails of clients where the prompt matches a substring of their Financial Plan or Tag names. ","lastModifiedDate":"2023-10-26"},{"lineNumber":15,"author":{"gitId":"AlyssaPng"},"content":"    * Justification: This feature significantly improves the product\u0027s efficiency by allowing financial advisors to consolidate emails effectively. It simplifies communication, enabling advisors to update multiple clients about changes in their financial plans or schedule crucial meetings promptly. ","lastModifiedDate":"2023-10-26"},{"lineNumber":16,"author":{"gitId":"AlyssaPng"},"content":"    * Highlights:","lastModifiedDate":"2023-10-26"},{"lineNumber":17,"author":{"gitId":"AlyssaPng"},"content":"      * Provides a foundation for future email gathering implementations, paving the way for potential expansions into other fields. ","lastModifiedDate":"2023-10-26"},{"lineNumber":18,"author":{"gitId":"AlyssaPng"},"content":"      * Required a deep understanding of interfaces and integration with existing codebase.","lastModifiedDate":"2023-10-26"},{"lineNumber":19,"author":{"gitId":"AlyssaPng"},"content":"    * Credits:","lastModifiedDate":"2023-10-26"},{"lineNumber":20,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":21,"author":{"gitId":"jylow"},"content":"* **Code Contributed**: [RepoSense](https://nus-cs2103-ay2324s1.github.io/tp-dashboard/?search\u003dalyssapng\u0026breakdown\u003dtrue)","lastModifiedDate":"2023-09-29"},{"lineNumber":22,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":23,"author":{"gitId":"AlyssaPng"},"content":"* **Enhancements Implemented**: gather command to be able to gather emails by tags.","lastModifiedDate":"2023-10-26"},{"lineNumber":24,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":25,"author":{"gitId":"AlyssaPng"},"content":"* **Contributions to the UG**:","lastModifiedDate":"2023-10-26"},{"lineNumber":26,"author":{"gitId":"AlyssaPng"},"content":"  * Added documentation for the features `gather`","lastModifiedDate":"2023-10-26"},{"lineNumber":27,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":28,"author":{"gitId":"AlyssaPng"},"content":"* **Contributions to the DG**:","lastModifiedDate":"2023-10-26"},{"lineNumber":29,"author":{"gitId":"AlyssaPng"},"content":"  * Added target user profile, value proposition, user stories and user cases.","lastModifiedDate":"2023-10-26"},{"lineNumber":30,"author":{"gitId":"AlyssaPng"},"content":"  * Added implementation details for gather.","lastModifiedDate":"2023-10-26"},{"lineNumber":31,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":32,"author":{"gitId":"AlyssaPng"},"content":"* **Contributions to team-based tasks**:","lastModifiedDate":"2023-10-26"},{"lineNumber":33,"author":{"gitId":"AlyssaPng"},"content":"  * Release v1.2 JAR file.","lastModifiedDate":"2023-10-26"},{"lineNumber":34,"author":{"gitId":"AlyssaPng"},"content":"  * Added screenshots into project notes document.","lastModifiedDate":"2023-10-26"}],"authorContributionMap":{"AlyssaPng":33,"jylow":1}},{"path":"docs/team/jylow.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"jylow"},"content":"---","lastModifiedDate":"2023-09-29"},{"lineNumber":2,"author":{"gitId":"jylow"},"content":"layout: page","lastModifiedDate":"2023-09-29"},{"lineNumber":3,"author":{"gitId":"jylow"},"content":"title: Low Jun Yu\u0027s Project Portfolio Page","lastModifiedDate":"2023-09-29"},{"lineNumber":4,"author":{"gitId":"jylow"},"content":"---","lastModifiedDate":"2023-09-29"},{"lineNumber":5,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":6,"author":{"gitId":"jylow"},"content":"### Overview","lastModifiedDate":"2023-09-29"},{"lineNumber":7,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":8,"author":{"gitId":"jylow"},"content":"UNOFAS is a desktop app for Financial Advisors (FA) to manage client’s contacts, optimized for use via a Command Line","lastModifiedDate":"2023-11-09"},{"lineNumber":9,"author":{"gitId":"jylow"},"content":"Interface (CLI) while still having the benefits of a Graphical User Interface (GUI). The app also includes features","lastModifiedDate":"2023-11-09"},{"lineNumber":10,"author":{"gitId":"jylow"},"content":"such as sorting, scheduling and other commands to query information quickly required by the FA.","lastModifiedDate":"2023-11-09"},{"lineNumber":11,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":12,"author":{"gitId":"jylow"},"content":"### Summary of Contributions","lastModifiedDate":"2023-09-29"},{"lineNumber":13,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":14,"author":{"gitId":"jylow"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-09-29"},{"lineNumber":15,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":16,"author":{"gitId":"jylow"},"content":"* **New Feature**: Added the ability to sort list by appointments and lexicographical order","lastModifiedDate":"2023-10-24"},{"lineNumber":17,"author":{"gitId":"jylow"},"content":"    * What it does: allows the user to perform sorting of list by appointment time and lexicographical order of name.","lastModifiedDate":"2023-10-24"},{"lineNumber":18,"author":{"gitId":"jylow"},"content":"    * Justification: This feature improves the product significantly because a user can more efficiently find clients by name and the proximity of their appointments to view upcoming appointments.","lastModifiedDate":"2023-10-24"},{"lineNumber":19,"author":{"gitId":"jylow"},"content":"    * Highlights: This enhancement creates a base to implement different sorting capabilities in the future through sorting by new comparators. It required an understanding of ObservableList interface and the way the list is being tracked by JavaFX.","lastModifiedDate":"2023-10-24"},{"lineNumber":20,"author":{"gitId":"jylow"},"content":"  ","lastModifiedDate":"2023-10-24"},{"lineNumber":21,"author":{"gitId":"jylow"},"content":"* **New Feature**: Added confirm override window for `schedule` command if person already has a current appointment","lastModifiedDate":"2023-11-08"},{"lineNumber":22,"author":{"gitId":"jylow"},"content":"  * What it does: Caution a user if he intends to schedule a new appointment when there is already one that is not yet complete.","lastModifiedDate":"2023-11-08"},{"lineNumber":23,"author":{"gitId":"jylow"},"content":"  * Justification: This feature reduces the likelihood of overwriting an appointment if a person already has one. Most people only arrange one appointment at a time. So the design prevents multiple appointments and also serves as a reminder of a previously set appointment that might have been forgotten.","lastModifiedDate":"2023-11-08"},{"lineNumber":24,"author":{"gitId":"jylow"},"content":"  * Highlights: This feature causes the logic flow of the method to change if there is currently an appointment and results in breaking the execution into 2, getting a response from the user before deciding whether to continue the execution of the program.","lastModifiedDate":"2023-11-08"},{"lineNumber":25,"author":{"gitId":"jylow"},"content":"* **Code Contributed**: [RepoSense](https://nus-cs2103-ay2324s1.github.io/tp-dashboard/?search\u003djylow\u0026breakdown\u003dtrue)","lastModifiedDate":"2023-09-29"},{"lineNumber":26,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":27,"author":{"gitId":"jylow"},"content":"* **Enhancements Implemented**: ","lastModifiedDate":"2023-11-08"},{"lineNumber":28,"author":{"gitId":"jylow"},"content":"    * Sort Command to enable the list to be sorted by lexicographical order of name of client","lastModifiedDate":"2023-11-08"},{"lineNumber":29,"author":{"gitId":"jylow"},"content":"    * Override prompt to ask user for confirmation before overriding an appointment.","lastModifiedDate":"2023-11-08"},{"lineNumber":30,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":31,"author":{"gitId":"jylow"},"content":"* **Contributions to the UG**:","lastModifiedDate":"2023-10-24"},{"lineNumber":32,"author":{"gitId":"jylow"},"content":"    * Added documentation for the features `sort` [\\#81](https://github.com/AY2324S1-CS2103T-F12-1/tp/pull/81)","lastModifiedDate":"2023-10-25"},{"lineNumber":33,"author":{"gitId":"jylow"},"content":"    * Maintained know issues to be solved","lastModifiedDate":"2023-11-12"},{"lineNumber":34,"author":{"gitId":"jylow"},"content":"    * Proofreading of UG","lastModifiedDate":"2023-11-12"},{"lineNumber":35,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":36,"author":{"gitId":"jylow"},"content":"* **Contributions to the DG**: ","lastModifiedDate":"2023-11-12"},{"lineNumber":37,"author":{"gitId":"jylow"},"content":"    * Added sequence diagram for sort function ","lastModifiedDate":"2023-11-12"},{"lineNumber":38,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":39,"author":{"gitId":"jylow"},"content":"* **Community**:","lastModifiedDate":"2023-10-25"},{"lineNumber":40,"author":{"gitId":"jylow"},"content":"  * PRs reviewed (with non-trivial review comments): [\\#125](https://github.com/AY2324S1-CS2103T-F12-1/tp/pull/125) [\\#133](https://github.com/AY2324S1-CS2103T-F12-1/tp/pull/133#pullrequestreview-1699166607)","lastModifiedDate":"2023-10-26"},{"lineNumber":41,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":42,"author":{"gitId":"jylow"},"content":"* **Contributions to team-based tasks**: ","lastModifiedDate":"2023-11-09"},{"lineNumber":43,"author":{"gitId":"jylow"},"content":"  * Released version 1.3 of the application","lastModifiedDate":"2023-11-09"},{"lineNumber":44,"author":{"gitId":"jylow"},"content":"  * Released version 1.4 of the application","lastModifiedDate":"2023-11-12"}],"authorContributionMap":{"jylow":44}},{"path":"docs/team/kb-tay.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Kb-Tay"},"content":"---","lastModifiedDate":"2023-09-29"},{"lineNumber":2,"author":{"gitId":"Kb-Tay"},"content":"layout: page","lastModifiedDate":"2023-09-29"},{"lineNumber":3,"author":{"gitId":"Kb-Tay"},"content":"title: Aaron Tay\u0027s Project Portfolio Page","lastModifiedDate":"2023-09-29"},{"lineNumber":4,"author":{"gitId":"Kb-Tay"},"content":"---","lastModifiedDate":"2023-09-29"},{"lineNumber":5,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":6,"author":{"gitId":"Kb-Tay"},"content":"### Overview","lastModifiedDate":"2023-09-29"},{"lineNumber":7,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":8,"author":{"gitId":"Kb-Tay"},"content":"UNOFAS is a desktop app for **Financial Advisors (FA)** to manage client’s contacts, optimized for use via a **Command Line Interface (CLI)** while still having the benefits of a **Graphical User Interface (GUI)**. The app also includes features such as sorting, scheduling and other commands to query information quickly required by the FA.","lastModifiedDate":"2023-11-05"},{"lineNumber":9,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":10,"author":{"gitId":"Kb-Tay"},"content":"### Summary of Contributions","lastModifiedDate":"2023-09-29"},{"lineNumber":11,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":12,"author":{"gitId":"Kb-Tay"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-09-29"},{"lineNumber":13,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":14,"author":{"gitId":"Kb-Tay"},"content":"* **New Feature**: Added the ScheduleItem class as a new field to Person","lastModifiedDate":"2023-11-05"},{"lineNumber":15,"author":{"gitId":"Kb-Tay"},"content":"  * What it does: Ensures that a Person has a 1-to-1 relationship with a ScheduleItem object.","lastModifiedDate":"2023-11-05"},{"lineNumber":16,"author":{"gitId":"Kb-Tay"},"content":"  * Justification: This feature provides users the ability to associate appointments with their clients. ","lastModifiedDate":"2023-11-05"},{"lineNumber":17,"author":{"gitId":"Kb-Tay"},"content":"  * Highlights: An abstract class is used to allow methods to be executed on the person\u0027s appointment field without needing to know if it is a null appointment or appointment. ","lastModifiedDate":"2023-11-05"},{"lineNumber":18,"author":{"gitId":"Kb-Tay"},"content":"  * Pull Request [#70](https://github.com/AY2324S1-CS2103T-F12-1/tp/pull/70)","lastModifiedDate":"2023-11-05"},{"lineNumber":19,"author":{"gitId":"Kb-Tay"},"content":"  ","lastModifiedDate":"2023-11-05"},{"lineNumber":20,"author":{"gitId":"Kb-Tay"},"content":"  \u003cbr\u003e","lastModifiedDate":"2023-11-05"},{"lineNumber":21,"author":{"gitId":"Kb-Tay"},"content":"  ","lastModifiedDate":"2023-11-05"},{"lineNumber":22,"author":{"gitId":"Kb-Tay"},"content":"* **New Feature** Added the ability to schedule appointments. ","lastModifiedDate":"2023-11-05"},{"lineNumber":23,"author":{"gitId":"Kb-Tay"},"content":"  * What it does: Allows the user to create an appointment with the specified client.","lastModifiedDate":"2023-11-05"},{"lineNumber":24,"author":{"gitId":"Kb-Tay"},"content":"  * Justification: This feature provides users the ability to schedule and keep track of appointments with their clients.","lastModifiedDate":"2023-11-05"},{"lineNumber":25,"author":{"gitId":"Kb-Tay"},"content":"  * Pull Request [#70](https://github.com/AY2324S1-CS2103T-F12-1/tp/pull/70)","lastModifiedDate":"2023-11-05"},{"lineNumber":26,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":27,"author":{"gitId":"Kb-Tay"},"content":"  \u003cbr\u003e","lastModifiedDate":"2023-11-05"},{"lineNumber":28,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":29,"author":{"gitId":"Kb-Tay"},"content":"* **New Feature** Added the ability to complete appointments. ","lastModifiedDate":"2023-11-05"},{"lineNumber":30,"author":{"gitId":"Kb-Tay"},"content":"  * What it does: Allows users to clear appointments completed from the contact book. ","lastModifiedDate":"2023-11-05"},{"lineNumber":31,"author":{"gitId":"Kb-Tay"},"content":"  * Justification: With this feature, user can keep track of appointments completed.","lastModifiedDate":"2023-11-05"},{"lineNumber":32,"author":{"gitId":"Kb-Tay"},"content":"  * Highlights: This command allows for more flexibility, giving users the choice to clear appointments by user\u0027s index or by a date. ","lastModifiedDate":"2023-11-05"},{"lineNumber":33,"author":{"gitId":"Kb-Tay"},"content":"  * Pull Request [#133](https://github.com/AY2324S1-CS2103T-F12-1/tp/pull/133)","lastModifiedDate":"2023-11-05"},{"lineNumber":34,"author":{"gitId":"Kb-Tay"},"content":"  ","lastModifiedDate":"2023-11-05"},{"lineNumber":35,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":36,"author":{"gitId":"Kb-Tay"},"content":"* **Code Contributed**: [RepoSense](https://nus-cs2103-ay2324s1.github.io/tp-dashboard/?search\u003dkb-tay\u0026breakdown\u003dtrue)","lastModifiedDate":"2023-09-29"},{"lineNumber":37,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":38,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":39,"author":{"gitId":"Kb-Tay"},"content":"* **Enhancements Implemented**: ","lastModifiedDate":"2023-11-05"},{"lineNumber":40,"author":{"gitId":"Kb-Tay"},"content":"  * Added testing for implemented features","lastModifiedDate":"2023-11-05"},{"lineNumber":41,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":42,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":43,"author":{"gitId":"Kb-Tay"},"content":"* **Contributions to the UG**:","lastModifiedDate":"2023-11-05"},{"lineNumber":44,"author":{"gitId":"Kb-Tay"},"content":"  * Added documentation for `schedule` command and `complete` under feature section. [#137](https://github.com/AY2324S1-CS2103T-F12-1/tp/pull/137) [#135](https://github.com/AY2324S1-CS2103T-F12-1/tp/pull/137) [#210](https://github.com/AY2324S1-CS2103T-F12-1/tp/pull/210) ","lastModifiedDate":"2023-11-08"},{"lineNumber":45,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":46,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":47,"author":{"gitId":"Kb-Tay"},"content":"* **Contributions to the DG**:","lastModifiedDate":"2023-11-05"},{"lineNumber":48,"author":{"gitId":"Kb-Tay"},"content":"  * Added class diagram and sequence diagram for `schedule` feature.","lastModifiedDate":"2023-11-08"},{"lineNumber":49,"author":{"gitId":"Kb-Tay"},"content":"  * Added documentation on implementation and design considerations for `schedule` feature.","lastModifiedDate":"2023-11-08"},{"lineNumber":50,"author":{"gitId":"Kb-Tay"},"content":"  * Added sequence and activity diagram for `complete` feature. ","lastModifiedDate":"2023-11-08"},{"lineNumber":51,"author":{"gitId":"Kb-Tay"},"content":"  * Added documentation on implementation and design considerations for `complete` feature.","lastModifiedDate":"2023-11-08"},{"lineNumber":52,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":53,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":54,"author":{"gitId":"sopa301"},"content":"* **Contributions to team-based tasks**:","lastModifiedDate":"2023-11-09"},{"lineNumber":55,"author":{"gitId":"Kb-Tay"},"content":"  * Review PRs of teammates. [#109](https://github.com/AY2324S1-CS2103T-F12-1/tp/pull/109) [#205](https://github.com/AY2324S1-CS2103T-F12-1/tp/pull/205) [#110](https://github.com/AY2324S1-CS2103T-F12-1/tp/pull/110)","lastModifiedDate":"2023-11-08"}],"authorContributionMap":{"Kb-Tay":54,"sopa301":1}},{"path":"docs/team/nikele2001.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"nikele2001"},"content":"---","lastModifiedDate":"2023-09-27"},{"lineNumber":2,"author":{"gitId":"nikele2001"},"content":"layout: page","lastModifiedDate":"2023-09-27"},{"lineNumber":3,"author":{"gitId":"nikele2001"},"content":"title: Nicholas Chia Zhi Jie\u0027s Project Portfolio Page","lastModifiedDate":"2023-09-27"},{"lineNumber":4,"author":{"gitId":"nikele2001"},"content":"---","lastModifiedDate":"2023-09-27"},{"lineNumber":5,"author":{"gitId":"nikele2001"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":6,"author":{"gitId":"nikele2001"},"content":"### Overview","lastModifiedDate":"2023-09-27"},{"lineNumber":7,"author":{"gitId":"nikele2001"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":8,"author":{"gitId":"nikele2001"},"content":"UNOFAS is a desktop app for Financial Advisors (FA) to manage client’s contacts, optimized for use via a Command Line","lastModifiedDate":"2023-11-09"},{"lineNumber":9,"author":{"gitId":"nikele2001"},"content":"Interface (CLI) while still having the benefits of a Graphical User Interface (GUI). The app also includes features","lastModifiedDate":"2023-11-09"},{"lineNumber":10,"author":{"gitId":"nikele2001"},"content":"such as sorting, scheduling and other commands to query information quickly required by the FA.","lastModifiedDate":"2023-11-09"},{"lineNumber":11,"author":{"gitId":"nikele2001"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":12,"author":{"gitId":"nikele2001"},"content":"### Summary of Contributions","lastModifiedDate":"2023-09-27"},{"lineNumber":13,"author":{"gitId":"nikele2001"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":14,"author":{"gitId":"nikele2001"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-09-27"},{"lineNumber":15,"author":{"gitId":"nikele2001"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":16,"author":{"gitId":"nikele2001"},"content":"* **New Feature**: Added `FinancialPlan` field and wrote tests","lastModifiedDate":"2023-11-10"},{"lineNumber":17,"author":{"gitId":"nikele2001"},"content":"    * Justification: As a financial advisor, it would be convenient to have a person\u0027s current financial plans available for business purposes.","lastModifiedDate":"2023-11-10"},{"lineNumber":18,"author":{"gitId":"nikele2001"},"content":"    * (Pull request [#69](https://github.com/AY2324S1-CS2103T-F12-1/tp/pull/69))","lastModifiedDate":"2023-11-10"},{"lineNumber":19,"author":{"gitId":"nikele2001"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":20,"author":{"gitId":"nikele2001"},"content":"* **New Feature**: Added appointment sidebar that shows upcoming appointments of clients in chronological order and wrote tests","lastModifiedDate":"2023-11-10"},{"lineNumber":21,"author":{"gitId":"nikele2001"},"content":"    * Justification: Financial advisors may want to view all upcoming appointments easily in chronological order so that it is easier for them to plan their timetables.","lastModifiedDate":"2023-11-10"},{"lineNumber":22,"author":{"gitId":"nikele2001"},"content":"    * Highlights: This enhancement creates another UI element to show various other appointment-specific details in the future. It requires an understanding of ObservableList interface and the way the list is being tracked by JavaFX.","lastModifiedDate":"2023-11-10"},{"lineNumber":23,"author":{"gitId":"nikele2001"},"content":"    * (Pull request [#110](https://github.com/AY2324S1-CS2103T-F12-1/tp/pull/110))","lastModifiedDate":"2023-11-10"},{"lineNumber":24,"author":{"gitId":"nikele2001"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":25,"author":{"gitId":"jylow"},"content":"* **Code Contributed**: [RepoSense](https://nus-cs2103-ay2324s1.github.io/tp-dashboard/?search\u003dnikele2001\u0026breakdown\u003dtrue)","lastModifiedDate":"2023-09-29"},{"lineNumber":26,"author":{"gitId":"nikele2001"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":27,"author":{"gitId":"nikele2001"},"content":"* **Enhancements Implemented**:","lastModifiedDate":"2023-11-09"},{"lineNumber":28,"author":{"gitId":"nikele2001"},"content":"    * `FinancialPlan` field to allow financial advisors to execute commands specific to financial plans subscribed by clients","lastModifiedDate":"2023-11-10"},{"lineNumber":29,"author":{"gitId":"nikele2001"},"content":"    * Override prompt to ask user for confirmation before overriding an appointment.","lastModifiedDate":"2023-11-10"},{"lineNumber":30,"author":{"gitId":"nikele2001"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":31,"author":{"gitId":"nikele2001"},"content":"* **Contributions to the UG**:","lastModifiedDate":"2023-11-09"},{"lineNumber":32,"author":{"gitId":"nikele2001"},"content":"  * Added and updated all UI images.","lastModifiedDate":"2023-11-09"},{"lineNumber":33,"author":{"gitId":"nikele2001"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":34,"author":{"gitId":"nikele2001"},"content":"* **Contributions to the DG**:","lastModifiedDate":"2023-11-09"},{"lineNumber":35,"author":{"gitId":"nikele2001"},"content":"  * Added use cases for `schedule` command, adding financial plans via the `fp/` prefix and sorting clients\u0027 contacts.","lastModifiedDate":"2023-11-09"},{"lineNumber":36,"author":{"gitId":"nikele2001"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":37,"author":{"gitId":"nikele2001"},"content":"* **Contributions to team-based tasks**:","lastModifiedDate":"2023-11-09"},{"lineNumber":38,"author":{"gitId":"nikele2001"},"content":"  * Set up team organisation.","lastModifiedDate":"2023-11-09"},{"lineNumber":39,"author":{"gitId":"nikele2001"},"content":"  * Set up TP repository.","lastModifiedDate":"2023-11-09"},{"lineNumber":40,"author":{"gitId":"nikele2001"},"content":"  * Set up Jekyll.","lastModifiedDate":"2023-11-09"},{"lineNumber":41,"author":{"gitId":"nikele2001"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":42,"author":{"gitId":"nikele2001"},"content":"* **Review/mentoring contributions**:","lastModifiedDate":"2023-11-09"},{"lineNumber":43,"author":{"gitId":"nikele2001"},"content":"  * PRs reviewed (with non-trivial commments):","lastModifiedDate":"2023-11-09"},{"lineNumber":44,"author":{"gitId":"nikele2001"},"content":"[#72](https://github.com/AY2324S1-CS2103T-F12-1/tp/pull/72),","lastModifiedDate":"2023-11-09"},{"lineNumber":45,"author":{"gitId":"nikele2001"},"content":"[#108](https://github.com/AY2324S1-CS2103T-F12-1/tp/pull/108)","lastModifiedDate":"2023-11-09"}],"authorContributionMap":{"nikele2001":44,"jylow":1}},{"path":"docs/team/sopa301.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"sopa301"},"content":"---","lastModifiedDate":"2023-09-26"},{"lineNumber":2,"author":{"gitId":"sopa301"},"content":"layout: page","lastModifiedDate":"2023-09-26"},{"lineNumber":3,"author":{"gitId":"sopa301"},"content":"title: Poon Yip Hang, Ryan\u0027s Project Portfolio Page","lastModifiedDate":"2023-09-26"},{"lineNumber":4,"author":{"gitId":"sopa301"},"content":"---","lastModifiedDate":"2023-09-26"},{"lineNumber":5,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":6,"author":{"gitId":"sopa301"},"content":"### Overview","lastModifiedDate":"2023-09-26"},{"lineNumber":7,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":8,"author":{"gitId":"sopa301"},"content":"UNOFAS is a desktop app for Financial Advisors (FA) to manage client’s contacts, optimized for use via a Command Line","lastModifiedDate":"2023-11-06"},{"lineNumber":9,"author":{"gitId":"sopa301"},"content":"Interface (CLI) while still having the benefits of a Graphical User Interface (GUI). The app also includes features","lastModifiedDate":"2023-11-06"},{"lineNumber":10,"author":{"gitId":"sopa301"},"content":"such as sorting, scheduling and other commands to query information quickly required by the FA.","lastModifiedDate":"2023-11-06"},{"lineNumber":11,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":12,"author":{"gitId":"sopa301"},"content":"### Summary of Contributions","lastModifiedDate":"2023-09-26"},{"lineNumber":13,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":14,"author":{"gitId":"sopa301"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-09-26"},{"lineNumber":15,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":16,"author":{"gitId":"sopa301"},"content":"* **Code Contributed**: [RepoSense link](https://nus-cs2103-ay2324s1.github.io/tp-dashboard/?search\u003dsopa301\u0026breakdown\u003dtrue)","lastModifiedDate":"2023-11-06"},{"lineNumber":17,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":18,"author":{"gitId":"sopa301"},"content":"* **Enhancements Implemented**:","lastModifiedDate":"2023-11-06"},{"lineNumber":19,"author":{"gitId":"sopa301"},"content":"  * Added `next-of-kin` and `next-of-kin phone` fields and wrote tests","lastModifiedDate":"2023-11-06"},{"lineNumber":20,"author":{"gitId":"sopa301"},"content":"    * Justification: As a financial advisor, it would be convenient to have a person\u0027s next-of-kin details available for","lastModifiedDate":"2023-11-09"},{"lineNumber":21,"author":{"gitId":"sopa301"},"content":"    business purposes.","lastModifiedDate":"2023-11-09"},{"lineNumber":22,"author":{"gitId":"sopa301"},"content":"    * Pull request [#43](https://github.com/AY2324S1-CS2103T-F12-1/tp/pull/43)","lastModifiedDate":"2023-11-09"},{"lineNumber":23,"author":{"gitId":"sopa301"},"content":"  * Added confirm clear window for `clear` command","lastModifiedDate":"2023-11-06"},{"lineNumber":24,"author":{"gitId":"sopa301"},"content":"    * Justification: `clear` is a very powerful command that can delete the entirety of a user\u0027s work in an instant. To","lastModifiedDate":"2023-11-09"},{"lineNumber":25,"author":{"gitId":"sopa301"},"content":"    safeguard against mistakes, we decided to add an extra confirmation requirement to ensure that the user actually wants","lastModifiedDate":"2023-11-09"},{"lineNumber":26,"author":{"gitId":"sopa301"},"content":"    to wipe the contact book.","lastModifiedDate":"2023-11-09"},{"lineNumber":27,"author":{"gitId":"nikele2001"},"content":"    * Highlights: This feature causes the logic flow of the method to change if the clear command is about to be executed, getting a response from the user before deciding whether to continue the execution of the program.","lastModifiedDate":"2023-11-10"},{"lineNumber":28,"author":{"gitId":"sopa301"},"content":"    * Pull request [#75](https://github.com/AY2324S1-CS2103T-F12-1/tp/pull/75)","lastModifiedDate":"2023-11-09"},{"lineNumber":29,"author":{"gitId":"sopa301"},"content":"  * Added available keywords for `help` command","lastModifiedDate":"2023-11-06"},{"lineNumber":30,"author":{"gitId":"sopa301"},"content":"    * Pull request [#67](https://github.com/AY2324S1-CS2103T-F12-1/tp/pull/67)","lastModifiedDate":"2023-11-09"},{"lineNumber":31,"author":{"gitId":"sopa301"},"content":"  * Enhanced `find` command to accept multiple names, tags and financial plans and wrote tests","lastModifiedDate":"2023-11-06"},{"lineNumber":32,"author":{"gitId":"sopa301"},"content":"    * Justification: Users may want to search by other fields, not just name. Also, searching across categories have","lastModifiedDate":"2023-11-09"},{"lineNumber":33,"author":{"gitId":"sopa301"},"content":"    niche uses and can be easily supported.","lastModifiedDate":"2023-11-09"},{"lineNumber":34,"author":{"gitId":"sopa301"},"content":"    * Pull request [#125](https://github.com/AY2324S1-CS2103T-F12-1/tp/pull/125)","lastModifiedDate":"2023-11-09"},{"lineNumber":35,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":36,"author":{"gitId":"sopa301"},"content":"* **Contributions to the UG**:","lastModifiedDate":"2023-11-06"},{"lineNumber":37,"author":{"gitId":"sopa301"},"content":"  * Updated commands for `add`, `clear`, `edit`, `find` and `help`.","lastModifiedDate":"2023-11-06"},{"lineNumber":38,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":39,"author":{"gitId":"sopa301"},"content":"* **Contributions to the DG**:","lastModifiedDate":"2023-11-06"},{"lineNumber":40,"author":{"gitId":"sopa301"},"content":"  * Added implementation details for enhanced `find` command.","lastModifiedDate":"2023-11-06"},{"lineNumber":41,"author":{"gitId":"sopa301"},"content":"  * Drafted Planned Enhancements section.","lastModifiedDate":"2023-11-06"},{"lineNumber":42,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":43,"author":{"gitId":"sopa301"},"content":"* **Contributions to team-based tasks**:","lastModifiedDate":"2023-11-06"},{"lineNumber":44,"author":{"gitId":"sopa301"},"content":"  * Maintained issue tracker.","lastModifiedDate":"2023-11-06"},{"lineNumber":45,"author":{"gitId":"sopa301"},"content":"  * Released product for `v1.1` and `v1.3.trial`.","lastModifiedDate":"2023-11-06"},{"lineNumber":46,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":47,"author":{"gitId":"sopa301"},"content":"* **Review/mentoring contributions**:","lastModifiedDate":"2023-11-06"},{"lineNumber":48,"author":{"gitId":"sopa301"},"content":"  * PRs reviewed (with non-trivial comments): [#70](https://github.com/AY2324S1-CS2103T-F12-1/tp/pull/70),","lastModifiedDate":"2023-11-06"},{"lineNumber":49,"author":{"gitId":"sopa301"},"content":"[#72](https://github.com/AY2324S1-CS2103T-F12-1/tp/pull/72),","lastModifiedDate":"2023-11-06"},{"lineNumber":50,"author":{"gitId":"sopa301"},"content":"[#109](https://github.com/AY2324S1-CS2103T-F12-1/tp/pull/109),","lastModifiedDate":"2023-11-06"},{"lineNumber":51,"author":{"gitId":"sopa301"},"content":"[#110](https://github.com/AY2324S1-CS2103T-F12-1/tp/pull/110)","lastModifiedDate":"2023-11-06"},{"lineNumber":52,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-09-26"}],"authorContributionMap":{"nikele2001":1,"sopa301":51}},{"path":"src/main/java/seedu/address/MainApp.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Config;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Version;","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-06-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ConfigUtil;","lastModifiedDate":"2016-10-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.LogicManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-01-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-01-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-01-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-01-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-01-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2016-12-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.storage.AddressBookStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.storage.UserPrefsStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.ui.Ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.ui.UiManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":" * Runs the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"public class MainApp extends Application {","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"jylow"},"content":"    public static final Version VERSION \u003d new Version(1, 3, 0, false);","lastModifiedDate":"2023-11-02"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(MainApp.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    protected Ui ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    protected Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    protected Storage storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    protected Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    protected Config config;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void init() throws Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d[ Initializing AddressBook ]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2016-09-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        super.init();","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d AppParameters.parse(getParameters());","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        config \u003d initConfig(appParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        initLogging(config);","lastModifiedDate":"2023-07-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        UserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(config.getUserPrefsFilePath());","lastModifiedDate":"2017-02-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d initPrefs(userPrefsStorage);","lastModifiedDate":"2018-12-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        AddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(userPrefs.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2017-02-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        model \u003d initModelManager(storage, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        ui \u003d new UiManager(logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * Returns a {@code ModelManager} with the data from {@code storage}\u0027s address book and {@code userPrefs}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * The data from the sample address book will be used instead if {@code storage}\u0027s address book is not found,","lastModifiedDate":"2017-08-16"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * or an empty address book will be used instead if errors occur when reading {@code storage}\u0027s address book.","lastModifiedDate":"2017-08-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    private Model initModelManager(Storage storage, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        logger.info(\"Using data file : \" + storage.getAddressBookFilePath());","lastModifiedDate":"2023-07-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        Optional\u003cReadOnlyAddressBook\u003e addressBookOptional;","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook initialData;","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            addressBookOptional \u003d storage.readAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            if (!addressBookOptional.isPresent()) {","lastModifiedDate":"2016-09-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"                logger.info(\"Creating a new data file \" + storage.getAddressBookFilePath()","lastModifiedDate":"2023-05-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":"                        + \" populated with a sample AddressBook.\");","lastModifiedDate":"2023-05-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            initialData \u003d addressBookOptional.orElseGet(SampleDataUtil::getSampleAddressBook);","lastModifiedDate":"2016-12-20"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        } catch (DataLoadingException e) {","lastModifiedDate":"2023-06-14"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            logger.warning(\"Data file at \" + storage.getAddressBookFilePath() + \" could not be loaded.\"","lastModifiedDate":"2023-06-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"                    + \" Will be starting with an empty AddressBook.\");","lastModifiedDate":"2023-05-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            initialData \u003d new AddressBook();","lastModifiedDate":"2016-09-24"},{"lineNumber":91,"author":{"gitId":"nikele2001"},"content":"            this.saveEmptyAddressBook(initialData);","lastModifiedDate":"2023-11-10"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        return new ModelManager(initialData, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":97,"author":{"gitId":"nikele2001"},"content":"    /**","lastModifiedDate":"2023-11-10"},{"lineNumber":98,"author":{"gitId":"nikele2001"},"content":"     * Wipes corrupted data in addressbook.json when starting the application with corrupted data.","lastModifiedDate":"2023-11-10"},{"lineNumber":99,"author":{"gitId":"nikele2001"},"content":"     */","lastModifiedDate":"2023-11-10"},{"lineNumber":100,"author":{"gitId":"nikele2001"},"content":"    private void saveEmptyAddressBook(ReadOnlyAddressBook initialData) {","lastModifiedDate":"2023-11-10"},{"lineNumber":101,"author":{"gitId":"nikele2001"},"content":"        try {","lastModifiedDate":"2023-11-10"},{"lineNumber":102,"author":{"gitId":"nikele2001"},"content":"            storage.saveAddressBook(initialData);","lastModifiedDate":"2023-11-10"},{"lineNumber":103,"author":{"gitId":"nikele2001"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-11-10"},{"lineNumber":104,"author":{"gitId":"nikele2001"},"content":"            logger.warning(\"Failed to locate filepath.\");","lastModifiedDate":"2023-11-10"},{"lineNumber":105,"author":{"gitId":"nikele2001"},"content":"        }","lastModifiedDate":"2023-11-10"},{"lineNumber":106,"author":{"gitId":"nikele2001"},"content":"    }","lastModifiedDate":"2023-11-10"},{"lineNumber":107,"author":{"gitId":"nikele2001"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    private void initLogging(Config config) {","lastModifiedDate":"2016-09-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        LogsCenter.init(config);","lastModifiedDate":"2016-09-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * Returns a {@code Config} using the file at {@code configFilePath}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * The default file path {@code Config#DEFAULT_CONFIG_FILE} will be used instead","lastModifiedDate":"2017-08-16"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * if {@code configFilePath} is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    protected Config initConfig(Path configFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        Config initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        Path configFilePathUsed;","lastModifiedDate":"2018-04-21"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        configFilePathUsed \u003d Config.DEFAULT_CONFIG_FILE;","lastModifiedDate":"2016-09-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        if (configFilePath !\u003d null) {","lastModifiedDate":"2016-09-24"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            logger.info(\"Custom Config file specified \" + configFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            configFilePathUsed \u003d configFilePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        logger.info(\"Using config file : \" + configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            Optional\u003cConfig\u003e configOptional \u003d ConfigUtil.readConfig(configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            if (!configOptional.isPresent()) {","lastModifiedDate":"2023-01-03"},{"lineNumber":133,"author":{"gitId":"-"},"content":"                logger.info(\"Creating new config file \" + configFilePathUsed);","lastModifiedDate":"2023-05-15"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2023-01-03"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            initializedConfig \u003d configOptional.orElse(new Config());","lastModifiedDate":"2016-09-24"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        } catch (DataLoadingException e) {","lastModifiedDate":"2023-06-14"},{"lineNumber":137,"author":{"gitId":"-"},"content":"            logger.warning(\"Config file at \" + configFilePathUsed + \" could not be loaded.\"","lastModifiedDate":"2023-06-15"},{"lineNumber":138,"author":{"gitId":"-"},"content":"                    + \" Using default config properties.\");","lastModifiedDate":"2023-05-15"},{"lineNumber":139,"author":{"gitId":"-"},"content":"            initializedConfig \u003d new Config();","lastModifiedDate":"2016-09-24"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        //Update config file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            ConfigUtil.saveConfig(initializedConfig, configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        return initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":152,"author":{"gitId":"-"},"content":"     * Returns a {@code UserPrefs} using the file at {@code storage}\u0027s user prefs file path,","lastModifiedDate":"2017-08-16"},{"lineNumber":153,"author":{"gitId":"-"},"content":"     * or a new {@code UserPrefs} with default configuration if errors occur when","lastModifiedDate":"2017-08-16"},{"lineNumber":154,"author":{"gitId":"-"},"content":"     * reading from the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":155,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    protected UserPrefs initPrefs(UserPrefsStorage storage) {","lastModifiedDate":"2017-02-25"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d storage.getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        logger.info(\"Using preference file : \" + prefsFilePath);","lastModifiedDate":"2023-05-15"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        UserPrefs initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            Optional\u003cUserPrefs\u003e prefsOptional \u003d storage.readUserPrefs();","lastModifiedDate":"2016-09-25"},{"lineNumber":163,"author":{"gitId":"-"},"content":"            if (!prefsOptional.isPresent()) {","lastModifiedDate":"2023-01-03"},{"lineNumber":164,"author":{"gitId":"-"},"content":"                logger.info(\"Creating new preference file \" + prefsFilePath);","lastModifiedDate":"2023-05-15"},{"lineNumber":165,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2023-01-03"},{"lineNumber":166,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d prefsOptional.orElse(new UserPrefs());","lastModifiedDate":"2016-09-24"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        } catch (DataLoadingException e) {","lastModifiedDate":"2023-06-14"},{"lineNumber":168,"author":{"gitId":"-"},"content":"            logger.warning(\"Preference file at \" + prefsFilePath + \" could not be loaded.\"","lastModifiedDate":"2023-06-15"},{"lineNumber":169,"author":{"gitId":"-"},"content":"                    + \" Using default preferences.\");","lastModifiedDate":"2023-05-15"},{"lineNumber":170,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        //Update prefs file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":175,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(initializedPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":177,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        return initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-08-08"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        logger.info(\"Starting AddressBook \" + MainApp.VERSION);","lastModifiedDate":"2016-09-29"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        ui.start(primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    public void stop() {","lastModifiedDate":"2016-08-08"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d [ Stopping Address Book ] \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2016-09-29"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":193,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(model.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":195,"author":{"gitId":"-"},"content":"            logger.severe(\"Failed to save preferences \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":198,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"nikele2001":12,"jylow":1,"-":185}},{"path":"src/main/java/seedu/address/commons/util/StringUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.StringWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":9,"author":{"gitId":"sopa301"},"content":"import java.util.Collections;","lastModifiedDate":"2023-10-25"},{"lineNumber":10,"author":{"gitId":"sopa301"},"content":"import java.util.List;","lastModifiedDate":"2023-10-25"},{"lineNumber":11,"author":{"gitId":"sopa301"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-10-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Helper functions for handling strings.","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class StringUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Returns true if the {@code sentence} contains the {@code word}.","lastModifiedDate":"2016-10-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *   Ignores case, but a full word match is required.","lastModifiedDate":"2016-10-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *   \u003cbr\u003eexamples:\u003cpre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"abc\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"DEF\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"AB\") \u003d\u003d false //not a full word match","lastModifiedDate":"2016-10-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *       \u003c/pre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @param sentence cannot be null","lastModifiedDate":"2016-10-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * @param word cannot be null, cannot be empty, must be a single word","lastModifiedDate":"2016-10-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static boolean containsWordIgnoreCase(String sentence, String word) {","lastModifiedDate":"2016-10-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        requireNonNull(sentence);","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        requireNonNull(word);","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        String preppedWord \u003d word.trim();","lastModifiedDate":"2016-10-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        checkArgument(!preppedWord.isEmpty(), \"Word parameter cannot be empty\");","lastModifiedDate":"2017-05-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        checkArgument(preppedWord.split(\"\\\\s+\").length \u003d\u003d 1, \"Word parameter should be a single word\");","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        String preppedSentence \u003d sentence;","lastModifiedDate":"2016-10-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        String[] wordsInPreppedSentence \u003d preppedSentence.split(\"\\\\s+\");","lastModifiedDate":"2016-10-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return Arrays.stream(wordsInPreppedSentence)","lastModifiedDate":"2018-01-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                .anyMatch(preppedWord::equalsIgnoreCase);","lastModifiedDate":"2018-01-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"sopa301"},"content":"    /**","lastModifiedDate":"2023-10-25"},{"lineNumber":45,"author":{"gitId":"sopa301"},"content":"     * Returns true if the {@code sentence} contains the {@code words}.","lastModifiedDate":"2023-10-25"},{"lineNumber":46,"author":{"gitId":"sopa301"},"content":"     *   Ignores case, but a full phrase match is required.","lastModifiedDate":"2023-10-25"},{"lineNumber":47,"author":{"gitId":"sopa301"},"content":"     *   \u003cbr\u003eexamples:\u003cpre\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":48,"author":{"gitId":"sopa301"},"content":"     *       containsWordsIgnoreCase(\"ABc def\", \"abc def\") \u003d\u003d true","lastModifiedDate":"2023-10-25"},{"lineNumber":49,"author":{"gitId":"sopa301"},"content":"     *       containsWordsIgnoreCase(\"ABc def\", \"DEF\") \u003d\u003d true","lastModifiedDate":"2023-10-25"},{"lineNumber":50,"author":{"gitId":"sopa301"},"content":"     *       containsWordsIgnoreCase(\"ABc def\", \"ABc de\") \u003d\u003d false //not a full word match","lastModifiedDate":"2023-10-25"},{"lineNumber":51,"author":{"gitId":"sopa301"},"content":"     *       \u003c/pre\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":52,"author":{"gitId":"sopa301"},"content":"     * @param sentence cannot be null","lastModifiedDate":"2023-10-25"},{"lineNumber":53,"author":{"gitId":"sopa301"},"content":"     * @param words cannot be null, cannot be empty","lastModifiedDate":"2023-10-25"},{"lineNumber":54,"author":{"gitId":"sopa301"},"content":"     */","lastModifiedDate":"2023-10-25"},{"lineNumber":55,"author":{"gitId":"sopa301"},"content":"    public static boolean containsWordsIgnoreCase(String sentence, String words) {","lastModifiedDate":"2023-10-25"},{"lineNumber":56,"author":{"gitId":"sopa301"},"content":"        requireNonNull(sentence);","lastModifiedDate":"2023-10-25"},{"lineNumber":57,"author":{"gitId":"sopa301"},"content":"        requireNonNull(words);","lastModifiedDate":"2023-10-25"},{"lineNumber":58,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":59,"author":{"gitId":"sopa301"},"content":"        String trimmedWords \u003d words.trim();","lastModifiedDate":"2023-10-25"},{"lineNumber":60,"author":{"gitId":"sopa301"},"content":"        checkArgument(!trimmedWords.isEmpty(), \"Word parameter cannot be empty\");","lastModifiedDate":"2023-10-25"},{"lineNumber":61,"author":{"gitId":"sopa301"},"content":"        List\u003cString\u003e preppedWords \u003d prepareWords(trimmedWords);","lastModifiedDate":"2023-10-25"},{"lineNumber":62,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":63,"author":{"gitId":"sopa301"},"content":"        String trimmedSentence \u003d sentence.trim();","lastModifiedDate":"2023-10-25"},{"lineNumber":64,"author":{"gitId":"sopa301"},"content":"        if (trimmedSentence.isEmpty()) {","lastModifiedDate":"2023-10-25"},{"lineNumber":65,"author":{"gitId":"sopa301"},"content":"            return false;","lastModifiedDate":"2023-10-25"},{"lineNumber":66,"author":{"gitId":"sopa301"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":67,"author":{"gitId":"sopa301"},"content":"        List\u003cString\u003e preppedSentence \u003d prepareWords(sentence);","lastModifiedDate":"2023-10-25"},{"lineNumber":68,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":69,"author":{"gitId":"sopa301"},"content":"        return Collections.indexOfSubList(preppedSentence, preppedWords) !\u003d -1;","lastModifiedDate":"2023-10-25"},{"lineNumber":70,"author":{"gitId":"sopa301"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":71,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":72,"author":{"gitId":"sopa301"},"content":"    /**","lastModifiedDate":"2023-10-25"},{"lineNumber":73,"author":{"gitId":"sopa301"},"content":"     * Prepares the given words to be compared in the containsWordsIgnoreCase() method.","lastModifiedDate":"2023-10-25"},{"lineNumber":74,"author":{"gitId":"sopa301"},"content":"     *","lastModifiedDate":"2023-10-25"},{"lineNumber":75,"author":{"gitId":"sopa301"},"content":"     * @param words cannot be null","lastModifiedDate":"2023-10-25"},{"lineNumber":76,"author":{"gitId":"sopa301"},"content":"     * @return the prepared list of strings","lastModifiedDate":"2023-10-25"},{"lineNumber":77,"author":{"gitId":"sopa301"},"content":"     */","lastModifiedDate":"2023-10-25"},{"lineNumber":78,"author":{"gitId":"sopa301"},"content":"    private static List\u003cString\u003e prepareWords(String words) {","lastModifiedDate":"2023-10-25"},{"lineNumber":79,"author":{"gitId":"sopa301"},"content":"        requireNonNull(words);","lastModifiedDate":"2023-10-25"},{"lineNumber":80,"author":{"gitId":"sopa301"},"content":"        return Arrays.stream(words.split(\"\\\\s+\"))","lastModifiedDate":"2023-10-25"},{"lineNumber":81,"author":{"gitId":"sopa301"},"content":"                .map(word -\u003e word.toLowerCase())","lastModifiedDate":"2023-10-25"},{"lineNumber":82,"author":{"gitId":"sopa301"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2023-10-25"},{"lineNumber":83,"author":{"gitId":"sopa301"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":84,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Returns a detailed message of the t, including the stack trace.","lastModifiedDate":"2016-09-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public static String getDetails(Throwable t) {","lastModifiedDate":"2016-09-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        requireNonNull(t);","lastModifiedDate":"2017-05-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        StringWriter sw \u003d new StringWriter();","lastModifiedDate":"2016-09-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        t.printStackTrace(new PrintWriter(sw));","lastModifiedDate":"2016-09-21"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        return t.getMessage() + \"\\n\" + sw.toString();","lastModifiedDate":"2016-09-21"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-22"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * Returns true if {@code s} represents a non-zero unsigned integer","lastModifiedDate":"2017-06-02"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * e.g. 1, 2, 3, ..., {@code Integer.MAX_VALUE} \u003cbr\u003e","lastModifiedDate":"2017-06-02"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * Will return false for any other non-null string input","lastModifiedDate":"2017-06-02"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * e.g. empty string, \"-1\", \"0\", \"+1\", and \" 2 \" (untrimmed), \"3 0\" (contains whitespace), \"1 a\" (contains letters)","lastModifiedDate":"2017-06-02"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code s} is null.","lastModifiedDate":"2017-06-02"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-22"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public static boolean isNonZeroUnsignedInteger(String s) {","lastModifiedDate":"2017-06-02"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        requireNonNull(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-06-02"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            int value \u003d Integer.parseInt(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            return value \u003e 0 \u0026\u0026 !s.startsWith(\"+\"); // \"+1\" is successfully parsed by Integer#parseInt(String)","lastModifiedDate":"2017-06-02"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        } catch (NumberFormatException nfe) {","lastModifiedDate":"2017-06-02"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-06-02"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-02"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"sopa301":44,"-":68}},{"path":"src/main/java/seedu/address/logic/Logic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"sopa301"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2023-10-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":12,"author":{"gitId":"nikele2001"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2023-10-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * API of the Logic component","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2016-09-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":27,"author":{"gitId":"sopa301"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":28,"author":{"gitId":"sopa301"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2023-10-18"},{"lineNumber":29,"author":{"gitId":"sopa301"},"content":"     * @param command The command to be executed.","lastModifiedDate":"2023-10-18"},{"lineNumber":30,"author":{"gitId":"sopa301"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2023-10-18"},{"lineNumber":31,"author":{"gitId":"sopa301"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2023-10-18"},{"lineNumber":32,"author":{"gitId":"sopa301"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":33,"author":{"gitId":"sopa301"},"content":"    CommandResult execute(Command command) throws CommandException;","lastModifiedDate":"2023-10-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Returns the AddressBook.","lastModifiedDate":"2018-12-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * @see seedu.address.model.Model#getAddressBook()","lastModifiedDate":"2018-12-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered list of persons */","lastModifiedDate":"2017-09-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":45,"author":{"gitId":"nikele2001"},"content":"    /** Returns an unmodifiable view of the list of appointments */","lastModifiedDate":"2023-10-23"},{"lineNumber":46,"author":{"gitId":"nikele2001"},"content":"    ObservableList\u003cAppointment\u003e getAppointmentList();","lastModifiedDate":"2023-10-23"},{"lineNumber":47,"author":{"gitId":"nikele2001"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * Set the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"nikele2001":4,"sopa301":8,"-":50}},{"path":"src/main/java/seedu/address/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.AccessDeniedException;","lastModifiedDate":"2023-06-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.AddressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":18,"author":{"gitId":"nikele2001"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2023-10-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2016-09-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_FORMAT \u003d \"Could not save data due to the following error: %s\";","lastModifiedDate":"2023-06-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_PERMISSION_ERROR_FORMAT \u003d","lastModifiedDate":"2023-06-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            \"Could not save data to file %s due to insufficient permissions to write to the file or the folder.\";","lastModifiedDate":"2023-06-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2016-09-29"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private final Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private final Storage storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private final AddressBookParser addressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public LogicManager(Model model, Storage storage) {","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2016-09-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        addressBookParser \u003d new AddressBookParser();","lastModifiedDate":"2018-01-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2016-09-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        Command command \u003d addressBookParser.parseCommand(commandText);","lastModifiedDate":"2017-07-07"},{"lineNumber":52,"author":{"gitId":"sopa301"},"content":"        commandResult \u003d execute(command);","lastModifiedDate":"2023-10-18"},{"lineNumber":53,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":54,"author":{"gitId":"sopa301"},"content":"        return commandResult;","lastModifiedDate":"2023-10-18"},{"lineNumber":55,"author":{"gitId":"sopa301"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":56,"author":{"gitId":"sopa301"},"content":"    @Override","lastModifiedDate":"2023-10-18"},{"lineNumber":57,"author":{"gitId":"sopa301"},"content":"    public CommandResult execute(Command command) throws CommandException {","lastModifiedDate":"2023-10-18"},{"lineNumber":58,"author":{"gitId":"sopa301"},"content":"        CommandResult commandResult \u003d command.execute(model);","lastModifiedDate":"2023-10-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2018-12-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        } catch (AccessDeniedException e) {","lastModifiedDate":"2023-06-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            throw new CommandException(String.format(FILE_OPS_PERMISSION_ERROR_FORMAT, e.getMessage()), e);","lastModifiedDate":"2023-06-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-12-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            throw new CommandException(String.format(FILE_OPS_ERROR_FORMAT, ioe.getMessage()), ioe);","lastModifiedDate":"2023-06-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-03"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2018-12-03"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return model.getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-03"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return model.getFilteredPersonList();","lastModifiedDate":"2016-09-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-29"},{"lineNumber":80,"author":{"gitId":"nikele2001"},"content":"    @Override","lastModifiedDate":"2023-10-23"},{"lineNumber":81,"author":{"gitId":"nikele2001"},"content":"    public ObservableList\u003cAppointment\u003e getAppointmentList() {","lastModifiedDate":"2023-10-23"},{"lineNumber":82,"author":{"gitId":"nikele2001"},"content":"        return model.getAppointmentList();","lastModifiedDate":"2023-10-23"},{"lineNumber":83,"author":{"gitId":"nikele2001"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":84,"author":{"gitId":"nikele2001"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        return model.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"nikele2001":6,"sopa301":7,"-":86}},{"path":"src/main/java/seedu/address/logic/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2023-07-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2023-07-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-07-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-07-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.Prefix;","lastModifiedDate":"2023-07-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2019-02-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2016-09-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_PERSON_DISPLAYED_INDEX \u003d \"The person index provided is invalid\";","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_PERSONS_LISTED_OVERVIEW \u003d \"%1$d persons listed!\";","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_FIELDS \u003d","lastModifiedDate":"2023-07-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"                \"Multiple values specified for the following single-valued field(s): \";","lastModifiedDate":"2023-07-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-07-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Returns an error message indicating the duplicate prefixes.","lastModifiedDate":"2023-07-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-07-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static String getErrorMessageForDuplicatePrefixes(Prefix... duplicatePrefixes) {","lastModifiedDate":"2023-07-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assert duplicatePrefixes.length \u003e 0;","lastModifiedDate":"2023-07-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        Set\u003cString\u003e duplicateFields \u003d","lastModifiedDate":"2023-07-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"                Stream.of(duplicatePrefixes).map(Prefix::toString).collect(Collectors.toSet());","lastModifiedDate":"2023-07-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return MESSAGE_DUPLICATE_FIELDS + String.join(\" \", duplicateFields);","lastModifiedDate":"2023-07-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-07-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-02-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Formats the {@code person} for display to the user.","lastModifiedDate":"2019-02-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-02-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static String format(Person person) {","lastModifiedDate":"2019-02-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2019-02-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        builder.append(person.getName())","lastModifiedDate":"2019-02-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                .append(\"; Phone: \")","lastModifiedDate":"2019-02-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                .append(person.getPhone())","lastModifiedDate":"2019-02-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                .append(\"; Email: \")","lastModifiedDate":"2019-02-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                .append(person.getEmail())","lastModifiedDate":"2019-02-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                .append(\"; Address: \")","lastModifiedDate":"2019-02-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                .append(person.getAddress())","lastModifiedDate":"2019-02-23"},{"lineNumber":46,"author":{"gitId":"sopa301"},"content":"                .append(\"; Next-of-kin Name: \")","lastModifiedDate":"2023-09-28"},{"lineNumber":47,"author":{"gitId":"sopa301"},"content":"                .append(person.getNextOfKinName())","lastModifiedDate":"2023-09-28"},{"lineNumber":48,"author":{"gitId":"sopa301"},"content":"                .append(\"; Next-of-kin Phone: \")","lastModifiedDate":"2023-09-28"},{"lineNumber":49,"author":{"gitId":"sopa301"},"content":"                .append(person.getNextOfKinPhone())","lastModifiedDate":"2023-09-28"},{"lineNumber":50,"author":{"gitId":"Kb-Tay"},"content":"                .append(\"; Appointment: \")","lastModifiedDate":"2023-10-17"},{"lineNumber":51,"author":{"gitId":"Kb-Tay"},"content":"                .append(person.getAppointment())","lastModifiedDate":"2023-10-17"},{"lineNumber":52,"author":{"gitId":"nikele2001"},"content":"                .append(\"; Financial Plans: \");","lastModifiedDate":"2023-10-16"},{"lineNumber":53,"author":{"gitId":"nikele2001"},"content":"        person.getFinancialPlans().forEach(builder::append);","lastModifiedDate":"2023-10-16"},{"lineNumber":54,"author":{"gitId":"nikele2001"},"content":"        builder.append(\"; Tags: \");","lastModifiedDate":"2023-10-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        person.getTags().forEach(builder::append);","lastModifiedDate":"2019-02-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Kb-Tay":2,"nikele2001":3,"sopa301":4,"-":50}},{"path":"src/main/java/seedu/address/logic/commands/AddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-10-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-10-16"},{"lineNumber":6,"author":{"gitId":"nikele2001"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_FINANCIAL_PLAN;","lastModifiedDate":"2023-10-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-10-16"},{"lineNumber":8,"author":{"gitId":"nikele2001"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NEXT_OF_KIN_NAME;","lastModifiedDate":"2023-10-16"},{"lineNumber":9,"author":{"gitId":"nikele2001"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NEXT_OF_KIN_PHONE;","lastModifiedDate":"2023-10-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-10-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-10-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-01-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * Adds a person to the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a person to the address book. \"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + \"Parameters: \"","lastModifiedDate":"2017-06-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2017-06-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"PHONE \"","lastModifiedDate":"2017-05-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"EMAIL \"","lastModifiedDate":"2017-05-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"ADDRESS \"","lastModifiedDate":"2017-05-09"},{"lineNumber":32,"author":{"gitId":"sopa301"},"content":"            + PREFIX_NEXT_OF_KIN_NAME + \"NEXT_OF_KIN_NAME \"","lastModifiedDate":"2023-09-29"},{"lineNumber":33,"author":{"gitId":"sopa301"},"content":"            + PREFIX_NEXT_OF_KIN_PHONE + \"NEXT_OF_KIN_PHONE \"","lastModifiedDate":"2023-09-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":35,"author":{"gitId":"nikele2001"},"content":"            + \"[\" + PREFIX_FINANCIAL_PLAN + \"FINANCIAL_PLAN]...\\n\"","lastModifiedDate":"2023-10-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2017-06-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"98765432 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johnd@example.com \"","lastModifiedDate":"2017-05-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"311, Clementi Ave 2, #02-25 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":41,"author":{"gitId":"sopa301"},"content":"            + PREFIX_NEXT_OF_KIN_NAME + \"Jim Doe \"","lastModifiedDate":"2023-09-29"},{"lineNumber":42,"author":{"gitId":"sopa301"},"content":"            + PREFIX_NEXT_OF_KIN_PHONE + \"92345678 \"","lastModifiedDate":"2023-09-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            + PREFIX_TAG + \"friends \"","lastModifiedDate":"2017-05-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            + PREFIX_TAG + \"owesMoney\";","lastModifiedDate":"2017-05-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New person added: %1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book\";","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    private final Person toAdd;","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Creates an AddCommand to add the specified {@code Person}","lastModifiedDate":"2018-01-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public AddCommand(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        toAdd \u003d person;","lastModifiedDate":"2018-01-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        if (model.hasPerson(toAdd)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        model.addPerson(toAdd);","lastModifiedDate":"2016-09-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, Messages.format(toAdd)));","lastModifiedDate":"2019-02-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        if (!(other instanceof AddCommand)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        AddCommand otherAddCommand \u003d (AddCommand) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        return toAdd.equals(otherAddCommand.toAdd);","lastModifiedDate":"2023-07-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"                .add(\"toAdd\", toAdd)","lastModifiedDate":"2019-02-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"nikele2001":4,"sopa301":4,"-":84}},{"path":"src/main/java/seedu/address/logic/commands/ClearCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"sopa301"},"content":" * Attempts to clear the address book.","lastModifiedDate":"2023-10-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class ClearCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"clear\";","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"sopa301"},"content":"    public static final String CONFIRM_CLEAR_MESSAGE \u003d \"Please confirm the command.\";","lastModifiedDate":"2023-10-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":19,"author":{"gitId":"sopa301"},"content":"        return new CommandResult(CONFIRM_CLEAR_MESSAGE, false, false, true);","lastModifiedDate":"2023-10-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"sopa301":3,"-":18}},{"path":"src/main/java/seedu/address/logic/commands/CommandResult.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2018-12-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":8,"author":{"gitId":"jylow"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2023-10-24"},{"lineNumber":9,"author":{"gitId":"jylow"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents the result of a command execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class CommandResult {","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private final String feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /** Help information should be shown to the user. */","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final boolean showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /** The application should exit. */","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final boolean exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"sopa301"},"content":"    /** Confirmation for clear command should be requested. */","lastModifiedDate":"2023-10-18"},{"lineNumber":24,"author":{"gitId":"sopa301"},"content":"    private final boolean showClear;","lastModifiedDate":"2023-10-18"},{"lineNumber":25,"author":{"gitId":"jylow"},"content":"    /** Confirmation for overriding command should be requested. */","lastModifiedDate":"2023-10-24"},{"lineNumber":26,"author":{"gitId":"jylow"},"content":"    private final boolean showOverride;","lastModifiedDate":"2023-10-24"},{"lineNumber":27,"author":{"gitId":"jylow"},"content":"    /** Appointment that will be replaced **/","lastModifiedDate":"2023-10-24"},{"lineNumber":28,"author":{"gitId":"jylow"},"content":"    private Appointment appointment \u003d null;","lastModifiedDate":"2023-10-24"},{"lineNumber":29,"author":{"gitId":"jylow"},"content":"    /** Person who\u0027s appointment will be replaced **/","lastModifiedDate":"2023-10-24"},{"lineNumber":30,"author":{"gitId":"jylow"},"content":"    private Person personToEdit \u003d null;","lastModifiedDate":"2023-10-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"sopa301"},"content":"     * Constructs a {@code CommandResult} with the specified fields, with showClear set to false.","lastModifiedDate":"2023-10-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public CommandResult(String feedbackToUser, boolean showHelp, boolean exit) {","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.feedbackToUser \u003d requireNonNull(feedbackToUser);","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.showHelp \u003d showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this.exit \u003d exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"sopa301"},"content":"        this.showClear \u003d false;","lastModifiedDate":"2023-10-18"},{"lineNumber":40,"author":{"gitId":"jylow"},"content":"        this.showOverride \u003d false;","lastModifiedDate":"2023-10-24"},{"lineNumber":41,"author":{"gitId":"sopa301"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":42,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":43,"author":{"gitId":"sopa301"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":44,"author":{"gitId":"sopa301"},"content":"     * Constructs a {@code CommandResult} with the specified fields.","lastModifiedDate":"2023-10-18"},{"lineNumber":45,"author":{"gitId":"sopa301"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":46,"author":{"gitId":"sopa301"},"content":"    public CommandResult(String feedbackToUser, boolean showHelp, boolean exit, boolean showClear) {","lastModifiedDate":"2023-10-18"},{"lineNumber":47,"author":{"gitId":"sopa301"},"content":"        this.feedbackToUser \u003d requireNonNull(feedbackToUser);","lastModifiedDate":"2023-10-18"},{"lineNumber":48,"author":{"gitId":"sopa301"},"content":"        this.showHelp \u003d showHelp;","lastModifiedDate":"2023-10-18"},{"lineNumber":49,"author":{"gitId":"sopa301"},"content":"        this.exit \u003d exit;","lastModifiedDate":"2023-10-18"},{"lineNumber":50,"author":{"gitId":"sopa301"},"content":"        this.showClear \u003d showClear;","lastModifiedDate":"2023-10-18"},{"lineNumber":51,"author":{"gitId":"jylow"},"content":"        this.showOverride \u003d false;","lastModifiedDate":"2023-10-24"},{"lineNumber":52,"author":{"gitId":"jylow"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":53,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":54,"author":{"gitId":"jylow"},"content":"    /**","lastModifiedDate":"2023-10-24"},{"lineNumber":55,"author":{"gitId":"jylow"},"content":"     * Constructs a {@code CommandResult} with the specified fields.","lastModifiedDate":"2023-10-24"},{"lineNumber":56,"author":{"gitId":"jylow"},"content":"     */","lastModifiedDate":"2023-10-24"},{"lineNumber":57,"author":{"gitId":"jylow"},"content":"    public CommandResult(String feedbackToUser, boolean showHelp, boolean exit, boolean showOverride,","lastModifiedDate":"2023-10-24"},{"lineNumber":58,"author":{"gitId":"jylow"},"content":"                         Person personToEdit, Appointment appointment) {","lastModifiedDate":"2023-10-24"},{"lineNumber":59,"author":{"gitId":"jylow"},"content":"        this.feedbackToUser \u003d requireNonNull(feedbackToUser);","lastModifiedDate":"2023-10-24"},{"lineNumber":60,"author":{"gitId":"jylow"},"content":"        this.showHelp \u003d showHelp;","lastModifiedDate":"2023-10-24"},{"lineNumber":61,"author":{"gitId":"jylow"},"content":"        this.exit \u003d exit;","lastModifiedDate":"2023-10-24"},{"lineNumber":62,"author":{"gitId":"jylow"},"content":"        this.showOverride \u003d showOverride;","lastModifiedDate":"2023-10-24"},{"lineNumber":63,"author":{"gitId":"jylow"},"content":"        this.showClear \u003d false;","lastModifiedDate":"2023-10-24"},{"lineNumber":64,"author":{"gitId":"jylow"},"content":"        this.personToEdit \u003d personToEdit;","lastModifiedDate":"2023-10-24"},{"lineNumber":65,"author":{"gitId":"jylow"},"content":"        this.appointment \u003d appointment;","lastModifiedDate":"2023-10-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified {@code feedbackToUser},","lastModifiedDate":"2018-12-09"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * and other fields set to their default value.","lastModifiedDate":"2018-12-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public CommandResult(String feedbackToUser) {","lastModifiedDate":"2018-12-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        this(feedbackToUser, false, false);","lastModifiedDate":"2018-12-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public String getFeedbackToUser() {","lastModifiedDate":"2018-12-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public boolean isShowHelp() {","lastModifiedDate":"2018-12-09"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public boolean isExit() {","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":87,"author":{"gitId":"sopa301"},"content":"    public boolean isShowClear() {","lastModifiedDate":"2023-10-18"},{"lineNumber":88,"author":{"gitId":"sopa301"},"content":"        return showClear;","lastModifiedDate":"2023-10-18"},{"lineNumber":89,"author":{"gitId":"sopa301"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":90,"author":{"gitId":"jylow"},"content":"    public boolean isShowOverride() {","lastModifiedDate":"2023-10-24"},{"lineNumber":91,"author":{"gitId":"jylow"},"content":"        return showOverride;","lastModifiedDate":"2023-10-24"},{"lineNumber":92,"author":{"gitId":"jylow"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2018-12-09"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-12-09"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-12-09"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2018-12-09"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        if (!(other instanceof CommandResult)) {","lastModifiedDate":"2018-12-09"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-12-09"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        CommandResult otherCommandResult \u003d (CommandResult) other;","lastModifiedDate":"2018-12-09"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        return feedbackToUser.equals(otherCommandResult.feedbackToUser)","lastModifiedDate":"2018-12-09"},{"lineNumber":106,"author":{"gitId":"-"},"content":"                \u0026\u0026 showHelp \u003d\u003d otherCommandResult.showHelp","lastModifiedDate":"2018-12-09"},{"lineNumber":107,"author":{"gitId":"sopa301"},"content":"                \u0026\u0026 exit \u003d\u003d otherCommandResult.exit","lastModifiedDate":"2023-10-18"},{"lineNumber":108,"author":{"gitId":"sopa301"},"content":"                \u0026\u0026 showClear \u003d\u003d otherCommandResult.showClear;","lastModifiedDate":"2023-10-18"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":113,"author":{"gitId":"sopa301"},"content":"        return Objects.hash(feedbackToUser, showHelp, exit, showClear);","lastModifiedDate":"2023-10-18"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"                .add(\"feedbackToUser\", feedbackToUser)","lastModifiedDate":"2019-02-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"                .add(\"showHelp\", showHelp)","lastModifiedDate":"2019-02-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"                .add(\"exit\", exit)","lastModifiedDate":"2019-02-23"},{"lineNumber":122,"author":{"gitId":"sopa301"},"content":"                .add(\"showClear\", showClear)","lastModifiedDate":"2023-10-18"},{"lineNumber":123,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":126,"author":{"gitId":"jylow"},"content":"    public Appointment getAppointment() {","lastModifiedDate":"2023-10-24"},{"lineNumber":127,"author":{"gitId":"jylow"},"content":"        return this.appointment;","lastModifiedDate":"2023-10-24"},{"lineNumber":128,"author":{"gitId":"jylow"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":129,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":130,"author":{"gitId":"jylow"},"content":"    public Person getPersonToEdit() {","lastModifiedDate":"2023-10-24"},{"lineNumber":131,"author":{"gitId":"jylow"},"content":"        return this.personToEdit;","lastModifiedDate":"2023-10-24"},{"lineNumber":132,"author":{"gitId":"jylow"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"sopa301":21,"jylow":34,"-":78}},{"path":"src/main/java/seedu/address/logic/commands/CompleteByDate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Kb-Tay"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-11-07"},{"lineNumber":2,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":3,"author":{"gitId":"Kb-Tay"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-11-07"},{"lineNumber":4,"author":{"gitId":"Kb-Tay"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2023-11-07"},{"lineNumber":5,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":6,"author":{"gitId":"Kb-Tay"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-11-07"},{"lineNumber":7,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":8,"author":{"gitId":"Kb-Tay"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-11-07"},{"lineNumber":9,"author":{"gitId":"Kb-Tay"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-11-07"},{"lineNumber":10,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":11,"author":{"gitId":"Kb-Tay"},"content":"/**","lastModifiedDate":"2023-11-07"},{"lineNumber":12,"author":{"gitId":"Kb-Tay"},"content":" * Completes and removes appointments from one or multiple person in address book by date input.","lastModifiedDate":"2023-11-07"},{"lineNumber":13,"author":{"gitId":"Kb-Tay"},"content":" * All persons with appointments date matching user input will be cleared.","lastModifiedDate":"2023-11-07"},{"lineNumber":14,"author":{"gitId":"Kb-Tay"},"content":" */","lastModifiedDate":"2023-11-07"},{"lineNumber":15,"author":{"gitId":"Kb-Tay"},"content":"public class CompleteByDate extends CompleteCommand {","lastModifiedDate":"2023-11-07"},{"lineNumber":16,"author":{"gitId":"Kb-Tay"},"content":"    private final LocalDate date;","lastModifiedDate":"2023-11-07"},{"lineNumber":17,"author":{"gitId":"Kb-Tay"},"content":"    public CompleteByDate(LocalDate date) {","lastModifiedDate":"2023-11-07"},{"lineNumber":18,"author":{"gitId":"Kb-Tay"},"content":"        this.date \u003d date;","lastModifiedDate":"2023-11-07"},{"lineNumber":19,"author":{"gitId":"Kb-Tay"},"content":"    }","lastModifiedDate":"2023-11-07"},{"lineNumber":20,"author":{"gitId":"Kb-Tay"},"content":"    @Override","lastModifiedDate":"2023-11-07"},{"lineNumber":21,"author":{"gitId":"Kb-Tay"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-11-07"},{"lineNumber":22,"author":{"gitId":"Kb-Tay"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-11-07"},{"lineNumber":23,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":24,"author":{"gitId":"Kb-Tay"},"content":"        if (!model.hasAppointmentWithDate(date)) {","lastModifiedDate":"2023-11-10"},{"lineNumber":25,"author":{"gitId":"Kb-Tay"},"content":"            throw new CommandException(MESSAGE_DATE_NO_APPOINTMENT);","lastModifiedDate":"2023-11-07"},{"lineNumber":26,"author":{"gitId":"Kb-Tay"},"content":"        }","lastModifiedDate":"2023-11-07"},{"lineNumber":27,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":28,"author":{"gitId":"Kb-Tay"},"content":"        model.clearAppointments(date);","lastModifiedDate":"2023-11-10"},{"lineNumber":29,"author":{"gitId":"Kb-Tay"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2023-11-07"},{"lineNumber":30,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":31,"author":{"gitId":"Kb-Tay"},"content":"        return new CommandResult(MESSAGE_COMPLETE_SUCCESS);","lastModifiedDate":"2023-11-07"},{"lineNumber":32,"author":{"gitId":"Kb-Tay"},"content":"    }","lastModifiedDate":"2023-11-07"},{"lineNumber":33,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":34,"author":{"gitId":"Kb-Tay"},"content":"    @Override","lastModifiedDate":"2023-11-07"},{"lineNumber":35,"author":{"gitId":"Kb-Tay"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-11-07"},{"lineNumber":36,"author":{"gitId":"Kb-Tay"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-11-07"},{"lineNumber":37,"author":{"gitId":"Kb-Tay"},"content":"            return true;","lastModifiedDate":"2023-11-07"},{"lineNumber":38,"author":{"gitId":"Kb-Tay"},"content":"        }","lastModifiedDate":"2023-11-07"},{"lineNumber":39,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":40,"author":{"gitId":"Kb-Tay"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-11-07"},{"lineNumber":41,"author":{"gitId":"Kb-Tay"},"content":"        if (!(other instanceof CompleteByDate)) {","lastModifiedDate":"2023-11-07"},{"lineNumber":42,"author":{"gitId":"Kb-Tay"},"content":"            return false;","lastModifiedDate":"2023-11-07"},{"lineNumber":43,"author":{"gitId":"Kb-Tay"},"content":"        }","lastModifiedDate":"2023-11-07"},{"lineNumber":44,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":45,"author":{"gitId":"Kb-Tay"},"content":"        CompleteByDate otherCommand \u003d (CompleteByDate) other;","lastModifiedDate":"2023-11-07"},{"lineNumber":46,"author":{"gitId":"Kb-Tay"},"content":"        return this.date.equals(otherCommand.date);","lastModifiedDate":"2023-11-07"},{"lineNumber":47,"author":{"gitId":"Kb-Tay"},"content":"    }","lastModifiedDate":"2023-11-07"},{"lineNumber":48,"author":{"gitId":"Kb-Tay"},"content":"}","lastModifiedDate":"2023-11-07"}],"authorContributionMap":{"Kb-Tay":48}},{"path":"src/main/java/seedu/address/logic/commands/CompleteByIndex.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Kb-Tay"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-11-07"},{"lineNumber":2,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":3,"author":{"gitId":"Kb-Tay"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-11-07"},{"lineNumber":4,"author":{"gitId":"Kb-Tay"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2023-11-07"},{"lineNumber":5,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":6,"author":{"gitId":"Kb-Tay"},"content":"import java.util.List;","lastModifiedDate":"2023-11-07"},{"lineNumber":7,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":8,"author":{"gitId":"Kb-Tay"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-11-07"},{"lineNumber":9,"author":{"gitId":"Kb-Tay"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-11-07"},{"lineNumber":10,"author":{"gitId":"Kb-Tay"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-11-07"},{"lineNumber":11,"author":{"gitId":"Kb-Tay"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-11-07"},{"lineNumber":12,"author":{"gitId":"Kb-Tay"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-11-07"},{"lineNumber":13,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":14,"author":{"gitId":"Kb-Tay"},"content":"/**","lastModifiedDate":"2023-11-07"},{"lineNumber":15,"author":{"gitId":"Kb-Tay"},"content":" * Completes and removes appointments from person in address book specified by index.","lastModifiedDate":"2023-11-07"},{"lineNumber":16,"author":{"gitId":"Kb-Tay"},"content":" */","lastModifiedDate":"2023-11-07"},{"lineNumber":17,"author":{"gitId":"Kb-Tay"},"content":"public class CompleteByIndex extends CompleteCommand {","lastModifiedDate":"2023-11-07"},{"lineNumber":18,"author":{"gitId":"Kb-Tay"},"content":"    public final Index index;","lastModifiedDate":"2023-11-07"},{"lineNumber":19,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":20,"author":{"gitId":"Kb-Tay"},"content":"    public CompleteByIndex(Index index) {","lastModifiedDate":"2023-11-07"},{"lineNumber":21,"author":{"gitId":"Kb-Tay"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-11-07"},{"lineNumber":22,"author":{"gitId":"Kb-Tay"},"content":"    }","lastModifiedDate":"2023-11-07"},{"lineNumber":23,"author":{"gitId":"Kb-Tay"},"content":"    @Override","lastModifiedDate":"2023-11-07"},{"lineNumber":24,"author":{"gitId":"Kb-Tay"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-11-07"},{"lineNumber":25,"author":{"gitId":"Kb-Tay"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-11-07"},{"lineNumber":26,"author":{"gitId":"Kb-Tay"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2023-11-07"},{"lineNumber":27,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":28,"author":{"gitId":"Kb-Tay"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-11-07"},{"lineNumber":29,"author":{"gitId":"Kb-Tay"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-11-07"},{"lineNumber":30,"author":{"gitId":"Kb-Tay"},"content":"        }","lastModifiedDate":"2023-11-07"},{"lineNumber":31,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":32,"author":{"gitId":"Kb-Tay"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2023-11-07"},{"lineNumber":33,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":34,"author":{"gitId":"Kb-Tay"},"content":"        if (personToEdit.hasNullAppointment()) {","lastModifiedDate":"2023-11-07"},{"lineNumber":35,"author":{"gitId":"Kb-Tay"},"content":"            throw new CommandException(MESSAGE_PERSON_NO_APPOINTMENT);","lastModifiedDate":"2023-11-07"},{"lineNumber":36,"author":{"gitId":"Kb-Tay"},"content":"        }","lastModifiedDate":"2023-11-07"},{"lineNumber":37,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":38,"author":{"gitId":"Kb-Tay"},"content":"        Person personWithoutAppointment \u003d personToEdit.clearAppointment();","lastModifiedDate":"2023-11-10"},{"lineNumber":39,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":40,"author":{"gitId":"Kb-Tay"},"content":"        model.setPerson(personToEdit, personWithoutAppointment);","lastModifiedDate":"2023-11-07"},{"lineNumber":41,"author":{"gitId":"Kb-Tay"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2023-11-07"},{"lineNumber":42,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":43,"author":{"gitId":"Kb-Tay"},"content":"        return new CommandResult(MESSAGE_COMPLETE_SUCCESS);","lastModifiedDate":"2023-11-07"},{"lineNumber":44,"author":{"gitId":"Kb-Tay"},"content":"    }","lastModifiedDate":"2023-11-07"},{"lineNumber":45,"author":{"gitId":"Kb-Tay"},"content":"    @Override","lastModifiedDate":"2023-11-07"},{"lineNumber":46,"author":{"gitId":"Kb-Tay"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-11-07"},{"lineNumber":47,"author":{"gitId":"Kb-Tay"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-11-07"},{"lineNumber":48,"author":{"gitId":"Kb-Tay"},"content":"            return true;","lastModifiedDate":"2023-11-07"},{"lineNumber":49,"author":{"gitId":"Kb-Tay"},"content":"        }","lastModifiedDate":"2023-11-07"},{"lineNumber":50,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":51,"author":{"gitId":"Kb-Tay"},"content":"        // instanceof handles null","lastModifiedDate":"2023-11-10"},{"lineNumber":52,"author":{"gitId":"Kb-Tay"},"content":"        if (!(other instanceof CompleteByIndex)) {","lastModifiedDate":"2023-11-07"},{"lineNumber":53,"author":{"gitId":"Kb-Tay"},"content":"            return false;","lastModifiedDate":"2023-11-07"},{"lineNumber":54,"author":{"gitId":"Kb-Tay"},"content":"        }","lastModifiedDate":"2023-11-07"},{"lineNumber":55,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":56,"author":{"gitId":"Kb-Tay"},"content":"        CompleteByIndex otherCommand \u003d (CompleteByIndex) other;","lastModifiedDate":"2023-11-07"},{"lineNumber":57,"author":{"gitId":"Kb-Tay"},"content":"        return this.index.equals(otherCommand.index);","lastModifiedDate":"2023-11-07"},{"lineNumber":58,"author":{"gitId":"Kb-Tay"},"content":"    }","lastModifiedDate":"2023-11-07"},{"lineNumber":59,"author":{"gitId":"Kb-Tay"},"content":"}","lastModifiedDate":"2023-11-07"}],"authorContributionMap":{"Kb-Tay":59}},{"path":"src/main/java/seedu/address/logic/commands/CompleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Kb-Tay"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-24"},{"lineNumber":2,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":3,"author":{"gitId":"Kb-Tay"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_APPOINTMENT_DATE;","lastModifiedDate":"2023-10-24"},{"lineNumber":4,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":5,"author":{"gitId":"Kb-Tay"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-24"},{"lineNumber":6,"author":{"gitId":"Kb-Tay"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-24"},{"lineNumber":7,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":8,"author":{"gitId":"Kb-Tay"},"content":"/**","lastModifiedDate":"2023-10-25"},{"lineNumber":9,"author":{"gitId":"Kb-Tay"},"content":" * Completes and removes appointments from one or multiple person in address book.","lastModifiedDate":"2023-11-07"},{"lineNumber":10,"author":{"gitId":"Kb-Tay"},"content":" */","lastModifiedDate":"2023-10-25"},{"lineNumber":11,"author":{"gitId":"Kb-Tay"},"content":"public abstract class CompleteCommand extends Command {","lastModifiedDate":"2023-11-07"},{"lineNumber":12,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":13,"author":{"gitId":"Kb-Tay"},"content":"    public static final String COMMAND_WORD \u003d \"complete\";","lastModifiedDate":"2023-10-24"},{"lineNumber":14,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":15,"author":{"gitId":"nikele2001"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Completes an appointment identified \"","lastModifiedDate":"2023-11-10"},{"lineNumber":16,"author":{"gitId":"Kb-Tay"},"content":"            + \"by the index number used in the displayed person list or \"","lastModifiedDate":"2023-10-24"},{"lineNumber":17,"author":{"gitId":"Kb-Tay"},"content":"            + \"by a specified date\\n\"","lastModifiedDate":"2023-10-26"},{"lineNumber":18,"author":{"gitId":"Kb-Tay"},"content":"            + \"Parameters: [INDEX(must be a positive integer)] \"","lastModifiedDate":"2023-10-26"},{"lineNumber":19,"author":{"gitId":"jylow"},"content":"            + \"[\" + PREFIX_APPOINTMENT_DATE + \"Appointment Date] *Only one of the 2 parameters may and \"","lastModifiedDate":"2023-11-11"},{"lineNumber":20,"author":{"gitId":"jylow"},"content":"            + \"must be specified\\n\"","lastModifiedDate":"2023-11-11"},{"lineNumber":21,"author":{"gitId":"Kb-Tay"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \";","lastModifiedDate":"2023-10-24"},{"lineNumber":22,"author":{"gitId":"AlyssaPng"},"content":"    public static final String MESSAGE_COMPLETE_SUCCESS \u003d \"Appointment(s) Completed!\";","lastModifiedDate":"2023-11-07"},{"lineNumber":23,"author":{"gitId":"Kb-Tay"},"content":"    public static final String MESSAGE_INVALID_DATE_FORMAT \u003d \"Input Date should be in format of dd-MM-yyyy\";","lastModifiedDate":"2023-10-26"},{"lineNumber":24,"author":{"gitId":"Kb-Tay"},"content":"    public static final String MESSAGE_INVALID_DATE \u003d \"Please input a valid Date\";","lastModifiedDate":"2023-10-26"},{"lineNumber":25,"author":{"gitId":"Kb-Tay"},"content":"    public static final String MESSAGE_PERSON_NO_APPOINTMENT \u003d \"No Appointment Found:\"","lastModifiedDate":"2023-11-02"},{"lineNumber":26,"author":{"gitId":"Kb-Tay"},"content":"            + \" Selected Person currently has no appointment scheduled\";","lastModifiedDate":"2023-11-02"},{"lineNumber":27,"author":{"gitId":"Kb-Tay"},"content":"    public static final String MESSAGE_DATE_NO_APPOINTMENT \u003d \"No Appointment Found:\"","lastModifiedDate":"2023-11-02"},{"lineNumber":28,"author":{"gitId":"Kb-Tay"},"content":"            + \" No Appointments found with the current date\";","lastModifiedDate":"2023-11-02"},{"lineNumber":29,"author":{"gitId":"Kb-Tay"},"content":"    @Override","lastModifiedDate":"2023-10-26"},{"lineNumber":30,"author":{"gitId":"Kb-Tay"},"content":"    public abstract CommandResult execute(Model model) throws CommandException;","lastModifiedDate":"2023-11-07"},{"lineNumber":31,"author":{"gitId":"Kb-Tay"},"content":"}","lastModifiedDate":"2023-10-24"}],"authorContributionMap":{"Kb-Tay":27,"nikele2001":1,"AlyssaPng":1,"jylow":2}},{"path":"src/main/java/seedu/address/logic/commands/ConfirmClearCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sopa301"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-18"},{"lineNumber":2,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":3,"author":{"gitId":"sopa301"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-18"},{"lineNumber":4,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":5,"author":{"gitId":"sopa301"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2023-10-18"},{"lineNumber":6,"author":{"gitId":"sopa301"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-18"},{"lineNumber":7,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":8,"author":{"gitId":"sopa301"},"content":"/**","lastModifiedDate":"2023-10-18"},{"lineNumber":9,"author":{"gitId":"sopa301"},"content":" * Clears the address book.","lastModifiedDate":"2023-10-18"},{"lineNumber":10,"author":{"gitId":"sopa301"},"content":" */","lastModifiedDate":"2023-10-18"},{"lineNumber":11,"author":{"gitId":"sopa301"},"content":"public class ConfirmClearCommand extends Command {","lastModifiedDate":"2023-10-18"},{"lineNumber":12,"author":{"gitId":"sopa301"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Contacts cleared!\";","lastModifiedDate":"2023-10-18"},{"lineNumber":13,"author":{"gitId":"sopa301"},"content":"    @Override","lastModifiedDate":"2023-10-18"},{"lineNumber":14,"author":{"gitId":"sopa301"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2023-10-18"},{"lineNumber":15,"author":{"gitId":"sopa301"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-18"},{"lineNumber":16,"author":{"gitId":"sopa301"},"content":"        model.setAddressBook(new AddressBook());","lastModifiedDate":"2023-10-18"},{"lineNumber":17,"author":{"gitId":"sopa301"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2023-10-18"},{"lineNumber":18,"author":{"gitId":"sopa301"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":19,"author":{"gitId":"sopa301"},"content":"}","lastModifiedDate":"2023-10-18"}],"authorContributionMap":{"sopa301":19}},{"path":"src/main/java/seedu/address/logic/commands/ConfirmOverrideCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jylow"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-24"},{"lineNumber":2,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":3,"author":{"gitId":"jylow"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-24"},{"lineNumber":4,"author":{"gitId":"jylow"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2023-10-24"},{"lineNumber":5,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":6,"author":{"gitId":"jylow"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-24"},{"lineNumber":7,"author":{"gitId":"jylow"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-24"},{"lineNumber":8,"author":{"gitId":"jylow"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2023-10-24"},{"lineNumber":9,"author":{"gitId":"jylow"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-24"},{"lineNumber":10,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":11,"author":{"gitId":"jylow"},"content":"/** Overrides the current appointment and replaces it with the new appointment after confirmation **/","lastModifiedDate":"2023-10-24"},{"lineNumber":12,"author":{"gitId":"jylow"},"content":"public class ConfirmOverrideCommand extends Command {","lastModifiedDate":"2023-10-24"},{"lineNumber":13,"author":{"gitId":"jylow"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Appointment updated!\";","lastModifiedDate":"2023-10-24"},{"lineNumber":14,"author":{"gitId":"jylow"},"content":"    private static Appointment appointment \u003d null;","lastModifiedDate":"2023-10-24"},{"lineNumber":15,"author":{"gitId":"jylow"},"content":"    private static Person personToEdit \u003d null;","lastModifiedDate":"2023-10-24"},{"lineNumber":16,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":17,"author":{"gitId":"jylow"},"content":"    /**","lastModifiedDate":"2023-10-24"},{"lineNumber":18,"author":{"gitId":"jylow"},"content":"     * Default constructor for a confirm override command","lastModifiedDate":"2023-10-24"},{"lineNumber":19,"author":{"gitId":"jylow"},"content":"     * @param appointment new appointment","lastModifiedDate":"2023-10-24"},{"lineNumber":20,"author":{"gitId":"jylow"},"content":"     * @param personToEdit person whos old appointment will be replaced by the new appointment","lastModifiedDate":"2023-10-24"},{"lineNumber":21,"author":{"gitId":"jylow"},"content":"     */","lastModifiedDate":"2023-10-24"},{"lineNumber":22,"author":{"gitId":"jylow"},"content":"    public ConfirmOverrideCommand(Appointment appointment, Person personToEdit) {","lastModifiedDate":"2023-10-24"},{"lineNumber":23,"author":{"gitId":"jylow"},"content":"        requireNonNull(appointment);","lastModifiedDate":"2023-11-10"},{"lineNumber":24,"author":{"gitId":"jylow"},"content":"        requireNonNull(personToEdit);","lastModifiedDate":"2023-11-10"},{"lineNumber":25,"author":{"gitId":"jylow"},"content":"        this.appointment \u003d appointment;","lastModifiedDate":"2023-10-24"},{"lineNumber":26,"author":{"gitId":"jylow"},"content":"        this.personToEdit \u003d personToEdit;","lastModifiedDate":"2023-10-24"},{"lineNumber":27,"author":{"gitId":"jylow"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":28,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":29,"author":{"gitId":"jylow"},"content":"    public static Appointment getAppointment() {","lastModifiedDate":"2023-10-24"},{"lineNumber":30,"author":{"gitId":"jylow"},"content":"        return appointment;","lastModifiedDate":"2023-10-24"},{"lineNumber":31,"author":{"gitId":"jylow"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":32,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":33,"author":{"gitId":"jylow"},"content":"    public static Person getPersonToEdit() {","lastModifiedDate":"2023-10-24"},{"lineNumber":34,"author":{"gitId":"jylow"},"content":"        return personToEdit;","lastModifiedDate":"2023-10-24"},{"lineNumber":35,"author":{"gitId":"jylow"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":36,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":37,"author":{"gitId":"jylow"},"content":"    @Override","lastModifiedDate":"2023-10-24"},{"lineNumber":38,"author":{"gitId":"jylow"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2023-10-24"},{"lineNumber":39,"author":{"gitId":"jylow"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-24"},{"lineNumber":40,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":41,"author":{"gitId":"jylow"},"content":"        Person personWithApt \u003d createPersonWithAppointment(personToEdit);","lastModifiedDate":"2023-10-24"},{"lineNumber":42,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":43,"author":{"gitId":"jylow"},"content":"        assert personWithApt.getAppointment() instanceof Appointment","lastModifiedDate":"2023-10-24"},{"lineNumber":44,"author":{"gitId":"jylow"},"content":"                    : \"Schedule Command: person should have appointment\";","lastModifiedDate":"2023-10-24"},{"lineNumber":45,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":46,"author":{"gitId":"jylow"},"content":"        appointment.setPerson(personWithApt); //sets person to appointment","lastModifiedDate":"2023-10-24"},{"lineNumber":47,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":48,"author":{"gitId":"jylow"},"content":"        model.setPerson(personToEdit, personWithApt);","lastModifiedDate":"2023-10-24"},{"lineNumber":49,"author":{"gitId":"jylow"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2023-10-24"},{"lineNumber":50,"author":{"gitId":"jylow"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, Messages.format(personWithApt)));","lastModifiedDate":"2023-10-24"},{"lineNumber":51,"author":{"gitId":"jylow"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":52,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":53,"author":{"gitId":"jylow"},"content":"    @Override","lastModifiedDate":"2023-10-24"},{"lineNumber":54,"author":{"gitId":"jylow"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-24"},{"lineNumber":55,"author":{"gitId":"jylow"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-24"},{"lineNumber":56,"author":{"gitId":"jylow"},"content":"            return true;","lastModifiedDate":"2023-10-24"},{"lineNumber":57,"author":{"gitId":"jylow"},"content":"        }","lastModifiedDate":"2023-10-24"},{"lineNumber":58,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":59,"author":{"gitId":"jylow"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-24"},{"lineNumber":60,"author":{"gitId":"jylow"},"content":"        if (!(other instanceof ConfirmOverrideCommand)) {","lastModifiedDate":"2023-10-24"},{"lineNumber":61,"author":{"gitId":"jylow"},"content":"            return false;","lastModifiedDate":"2023-10-24"},{"lineNumber":62,"author":{"gitId":"jylow"},"content":"        }","lastModifiedDate":"2023-10-24"},{"lineNumber":63,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":64,"author":{"gitId":"jylow"},"content":"        ConfirmOverrideCommand otherOverrideCommand \u003d (ConfirmOverrideCommand) other;","lastModifiedDate":"2023-10-24"},{"lineNumber":65,"author":{"gitId":"jylow"},"content":"        return appointment.equals(otherOverrideCommand.appointment);","lastModifiedDate":"2023-10-24"},{"lineNumber":66,"author":{"gitId":"jylow"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":67,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":68,"author":{"gitId":"jylow"},"content":"    /**","lastModifiedDate":"2023-10-24"},{"lineNumber":69,"author":{"gitId":"jylow"},"content":"     * Returns the {@code Person} with the scheduled Appointment.","lastModifiedDate":"2023-10-24"},{"lineNumber":70,"author":{"gitId":"jylow"},"content":"     *","lastModifiedDate":"2023-10-24"},{"lineNumber":71,"author":{"gitId":"jylow"},"content":"     * @param personToEdit The Person the appointment is scheduled to.","lastModifiedDate":"2023-10-24"},{"lineNumber":72,"author":{"gitId":"jylow"},"content":"     * @return The Person with scheduled appointment.","lastModifiedDate":"2023-10-24"},{"lineNumber":73,"author":{"gitId":"jylow"},"content":"     */","lastModifiedDate":"2023-10-24"},{"lineNumber":74,"author":{"gitId":"jylow"},"content":"    private Person createPersonWithAppointment(Person personToEdit) {","lastModifiedDate":"2023-10-24"},{"lineNumber":75,"author":{"gitId":"jylow"},"content":"        return new Person(personToEdit.getName(), personToEdit.getPhone(), personToEdit.getEmail(),","lastModifiedDate":"2023-10-24"},{"lineNumber":76,"author":{"gitId":"jylow"},"content":"                personToEdit.getAddress(), personToEdit.getNextOfKinName(), personToEdit.getNextOfKinPhone(),","lastModifiedDate":"2023-10-24"},{"lineNumber":77,"author":{"gitId":"jylow"},"content":"                personToEdit.getFinancialPlans(), personToEdit.getTags(), appointment);","lastModifiedDate":"2023-10-24"},{"lineNumber":78,"author":{"gitId":"jylow"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":79,"author":{"gitId":"jylow"},"content":"}","lastModifiedDate":"2023-10-24"}],"authorContributionMap":{"jylow":79}},{"path":"src/main/java/seedu/address/logic/commands/EditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-12-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":6,"author":{"gitId":"nikele2001"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_FINANCIAL_PLAN;","lastModifiedDate":"2023-10-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":8,"author":{"gitId":"sopa301"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NEXT_OF_KIN_NAME;","lastModifiedDate":"2023-09-29"},{"lineNumber":9,"author":{"gitId":"sopa301"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NEXT_OF_KIN_PHONE;","lastModifiedDate":"2023-09-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-01-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-01-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2023-07-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-12-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2016-12-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":27,"author":{"gitId":"Kb-Tay"},"content":"import seedu.address.model.appointment.ScheduleItem;","lastModifiedDate":"2023-10-22"},{"lineNumber":28,"author":{"gitId":"nikele2001"},"content":"import seedu.address.model.financialplan.FinancialPlan;","lastModifiedDate":"2023-10-17"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2016-12-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2016-12-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2016-12-26"},{"lineNumber":32,"author":{"gitId":"sopa301"},"content":"import seedu.address.model.person.NextOfKinName;","lastModifiedDate":"2023-09-28"},{"lineNumber":33,"author":{"gitId":"sopa301"},"content":"import seedu.address.model.person.NextOfKinPhone;","lastModifiedDate":"2023-09-28"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2016-12-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":" * Edits the details of an existing person in the address book.","lastModifiedDate":"2016-12-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"public class EditCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2016-12-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the person identified \"","lastModifiedDate":"2016-12-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            + \"by the index number used in the displayed person list. \"","lastModifiedDate":"2018-04-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2016-12-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2017-06-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2017-06-06"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_ADDRESS + \"ADDRESS] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":53,"author":{"gitId":"sopa301"},"content":"            + \"[\" + PREFIX_NEXT_OF_KIN_NAME + \"NOK_NAME] \"","lastModifiedDate":"2023-09-29"},{"lineNumber":54,"author":{"gitId":"sopa301"},"content":"            + \"[\" + PREFIX_NEXT_OF_KIN_PHONE + \"NOK_PHONE] \"","lastModifiedDate":"2023-09-29"},{"lineNumber":55,"author":{"gitId":"nikele2001"},"content":"            + \"[\" + PREFIX_FINANCIAL_PLAN + \"FINANCIAL_PLAN]...\\n\"","lastModifiedDate":"2023-10-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"91234567 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johndoe@example.com\";","lastModifiedDate":"2017-05-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_EDIT_PERSON_SUCCESS \u003d \"Edited Person: %1$s\";","lastModifiedDate":"2016-12-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    private final EditPersonDescriptor editPersonDescriptor;","lastModifiedDate":"2016-12-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * @param index of the person in the filtered person list to edit","lastModifiedDate":"2017-05-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * @param editPersonDescriptor details to edit the person with","lastModifiedDate":"2016-12-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public EditCommand(Index index, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2017-05-25"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        requireNonNull(index);","lastModifiedDate":"2017-05-25"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        requireNonNull(editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2017-05-25"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        this.editPersonDescriptor \u003d new EditPersonDescriptor(editPersonDescriptor);","lastModifiedDate":"2016-12-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2018-04-19"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d createEditedPerson(personToEdit, editPersonDescriptor);","lastModifiedDate":"2018-04-19"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        if (!personToEdit.isSamePerson(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson)));","lastModifiedDate":"2019-02-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToEdit}","lastModifiedDate":"2016-12-26"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * edited with {@code editPersonDescriptor}.","lastModifiedDate":"2016-12-26"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    private static Person createEditedPerson(Person personToEdit, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2018-01-10"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assert personToEdit !\u003d null;","lastModifiedDate":"2016-12-26"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        Name updatedName \u003d editPersonDescriptor.getName().orElse(personToEdit.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        Phone updatedPhone \u003d editPersonDescriptor.getPhone().orElse(personToEdit.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        Email updatedEmail \u003d editPersonDescriptor.getEmail().orElse(personToEdit.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        Address updatedAddress \u003d editPersonDescriptor.getAddress().orElse(personToEdit.getAddress());","lastModifiedDate":"2017-06-21"},{"lineNumber":111,"author":{"gitId":"sopa301"},"content":"        NextOfKinName updatedNokName \u003d editPersonDescriptor.getNextOfKinName().orElse(personToEdit.getNextOfKinName());","lastModifiedDate":"2023-09-28"},{"lineNumber":112,"author":{"gitId":"sopa301"},"content":"        NextOfKinPhone updatedNokPhone \u003d editPersonDescriptor.getNextOfKinPhone()","lastModifiedDate":"2023-09-28"},{"lineNumber":113,"author":{"gitId":"sopa301"},"content":"                .orElse(personToEdit.getNextOfKinPhone());","lastModifiedDate":"2023-09-28"},{"lineNumber":114,"author":{"gitId":"nikele2001"},"content":"        Set\u003cFinancialPlan\u003e updatedFinancialPlans \u003d editPersonDescriptor.getFinancialPlans()","lastModifiedDate":"2023-10-16"},{"lineNumber":115,"author":{"gitId":"nikele2001"},"content":"                .orElse(personToEdit.getFinancialPlans());","lastModifiedDate":"2023-10-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e updatedTags \u003d editPersonDescriptor.getTags().orElse(personToEdit.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":117,"author":{"gitId":"Kb-Tay"},"content":"        ScheduleItem appointment \u003d editPersonDescriptor.getAppointment().orElse(personToEdit.getAppointment());","lastModifiedDate":"2023-10-22"},{"lineNumber":118,"author":{"gitId":"sopa301"},"content":"        return new Person(updatedName, updatedPhone, updatedEmail, updatedAddress, updatedNokName,","lastModifiedDate":"2023-09-28"},{"lineNumber":119,"author":{"gitId":"Kb-Tay"},"content":"                updatedNokPhone, updatedFinancialPlans, updatedTags, appointment);","lastModifiedDate":"2023-10-19"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        if (!(other instanceof EditCommand)) {","lastModifiedDate":"2017-05-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        EditCommand otherEditCommand \u003d (EditCommand) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        return index.equals(otherEditCommand.index)","lastModifiedDate":"2023-07-13"},{"lineNumber":135,"author":{"gitId":"-"},"content":"                \u0026\u0026 editPersonDescriptor.equals(otherEditCommand.editPersonDescriptor);","lastModifiedDate":"2023-07-13"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"                .add(\"index\", index)","lastModifiedDate":"2019-02-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"                .add(\"editPersonDescriptor\", editPersonDescriptor)","lastModifiedDate":"2019-02-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     * Stores the details to edit the person with. Each non-empty field value will replace the","lastModifiedDate":"2016-12-26"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     * corresponding field value of the person.","lastModifiedDate":"2016-12-26"},{"lineNumber":149,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    public static class EditPersonDescriptor {","lastModifiedDate":"2016-12-26"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        private Name name;","lastModifiedDate":"2017-06-21"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        private Phone phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        private Email email;","lastModifiedDate":"2017-06-21"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        private Address address;","lastModifiedDate":"2017-06-21"},{"lineNumber":155,"author":{"gitId":"sopa301"},"content":"        private NextOfKinName nextOfKinName;","lastModifiedDate":"2023-09-29"},{"lineNumber":156,"author":{"gitId":"sopa301"},"content":"        private NextOfKinPhone nextOfKinPhone;","lastModifiedDate":"2023-09-29"},{"lineNumber":157,"author":{"gitId":"nikele2001"},"content":"        private Set\u003cFinancialPlan\u003e financialPlans;","lastModifiedDate":"2023-10-16"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-06-21"},{"lineNumber":159,"author":{"gitId":"Kb-Tay"},"content":"        private ScheduleItem appointment;","lastModifiedDate":"2023-10-22"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor() {}","lastModifiedDate":"2016-12-26"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":164,"author":{"gitId":"-"},"content":"         * Copy constructor.","lastModifiedDate":"2018-01-11"},{"lineNumber":165,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":166,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor(EditPersonDescriptor toCopy) {","lastModifiedDate":"2016-12-26"},{"lineNumber":168,"author":{"gitId":"-"},"content":"            setName(toCopy.name);","lastModifiedDate":"2018-01-15"},{"lineNumber":169,"author":{"gitId":"-"},"content":"            setPhone(toCopy.phone);","lastModifiedDate":"2018-01-15"},{"lineNumber":170,"author":{"gitId":"-"},"content":"            setEmail(toCopy.email);","lastModifiedDate":"2018-01-15"},{"lineNumber":171,"author":{"gitId":"-"},"content":"            setAddress(toCopy.address);","lastModifiedDate":"2018-01-15"},{"lineNumber":172,"author":{"gitId":"sopa301"},"content":"            setNextOfKinName(toCopy.nextOfKinName);","lastModifiedDate":"2023-09-29"},{"lineNumber":173,"author":{"gitId":"sopa301"},"content":"            setNextOfKinPhone(toCopy.nextOfKinPhone);","lastModifiedDate":"2023-09-29"},{"lineNumber":174,"author":{"gitId":"nikele2001"},"content":"            setFinancialPlans(toCopy.financialPlans);","lastModifiedDate":"2023-10-16"},{"lineNumber":175,"author":{"gitId":"-"},"content":"            setTags(toCopy.tags);","lastModifiedDate":"2018-01-11"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-12-26"},{"lineNumber":179,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2016-12-26"},{"lineNumber":180,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-26"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2016-12-26"},{"lineNumber":182,"author":{"gitId":"nikele2001"},"content":"            return CollectionUtil.isAnyNonNull(name, phone, email, address, nextOfKinName,","lastModifiedDate":"2023-10-16"},{"lineNumber":183,"author":{"gitId":"nikele2001"},"content":"                    nextOfKinPhone, financialPlans, tags);","lastModifiedDate":"2023-10-16"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        public void setName(Name name) {","lastModifiedDate":"2017-06-21"},{"lineNumber":187,"author":{"gitId":"-"},"content":"            this.name \u003d name;","lastModifiedDate":"2017-06-21"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2016-12-26"},{"lineNumber":191,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2017-06-21"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        public void setPhone(Phone phone) {","lastModifiedDate":"2017-06-21"},{"lineNumber":195,"author":{"gitId":"-"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2016-12-26"},{"lineNumber":199,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(phone);","lastModifiedDate":"2017-06-21"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        public void setEmail(Email email) {","lastModifiedDate":"2017-06-21"},{"lineNumber":203,"author":{"gitId":"-"},"content":"            this.email \u003d email;","lastModifiedDate":"2017-06-21"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        public Optional\u003cEmail\u003e getEmail() {","lastModifiedDate":"2016-12-26"},{"lineNumber":207,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(email);","lastModifiedDate":"2017-06-21"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        public void setAddress(Address address) {","lastModifiedDate":"2017-06-21"},{"lineNumber":211,"author":{"gitId":"-"},"content":"            this.address \u003d address;","lastModifiedDate":"2017-06-21"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        public Optional\u003cAddress\u003e getAddress() {","lastModifiedDate":"2016-12-26"},{"lineNumber":215,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(address);","lastModifiedDate":"2017-06-21"},{"lineNumber":216,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":217,"author":{"gitId":"sopa301"},"content":"        public void setNextOfKinName(NextOfKinName nokName) {","lastModifiedDate":"2023-09-28"},{"lineNumber":218,"author":{"gitId":"sopa301"},"content":"            this.nextOfKinName \u003d nokName;","lastModifiedDate":"2023-09-29"},{"lineNumber":219,"author":{"gitId":"sopa301"},"content":"        }","lastModifiedDate":"2023-09-28"},{"lineNumber":220,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":221,"author":{"gitId":"sopa301"},"content":"        public Optional\u003cNextOfKinName\u003e getNextOfKinName() {","lastModifiedDate":"2023-09-28"},{"lineNumber":222,"author":{"gitId":"sopa301"},"content":"            return Optional.ofNullable(nextOfKinName);","lastModifiedDate":"2023-09-29"},{"lineNumber":223,"author":{"gitId":"sopa301"},"content":"        }","lastModifiedDate":"2023-09-28"},{"lineNumber":224,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":225,"author":{"gitId":"sopa301"},"content":"        public void setNextOfKinPhone(NextOfKinPhone nokPhone) {","lastModifiedDate":"2023-09-28"},{"lineNumber":226,"author":{"gitId":"sopa301"},"content":"            this.nextOfKinPhone \u003d nokPhone;","lastModifiedDate":"2023-09-29"},{"lineNumber":227,"author":{"gitId":"sopa301"},"content":"        }","lastModifiedDate":"2023-09-28"},{"lineNumber":228,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":229,"author":{"gitId":"sopa301"},"content":"        public Optional\u003cNextOfKinPhone\u003e getNextOfKinPhone() {","lastModifiedDate":"2023-09-28"},{"lineNumber":230,"author":{"gitId":"sopa301"},"content":"            return Optional.ofNullable(nextOfKinPhone);","lastModifiedDate":"2023-09-29"},{"lineNumber":231,"author":{"gitId":"sopa301"},"content":"        }","lastModifiedDate":"2023-09-28"},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":233,"author":{"gitId":"Kb-Tay"},"content":"        public void setAppointment(ScheduleItem appointment) {","lastModifiedDate":"2023-10-22"},{"lineNumber":234,"author":{"gitId":"Kb-Tay"},"content":"            this.appointment \u003d appointment;","lastModifiedDate":"2023-10-17"},{"lineNumber":235,"author":{"gitId":"Kb-Tay"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":236,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":237,"author":{"gitId":"Kb-Tay"},"content":"        public Optional\u003cScheduleItem\u003e getAppointment() {","lastModifiedDate":"2023-10-22"},{"lineNumber":238,"author":{"gitId":"Kb-Tay"},"content":"            return Optional.ofNullable(appointment);","lastModifiedDate":"2023-10-17"},{"lineNumber":239,"author":{"gitId":"Kb-Tay"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":240,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":241,"author":{"gitId":"nikele2001"},"content":"        /**","lastModifiedDate":"2023-10-16"},{"lineNumber":242,"author":{"gitId":"nikele2001"},"content":"         * Sets {@code financialPlans} to this object\u0027s {@code financialPlans}.","lastModifiedDate":"2023-10-16"},{"lineNumber":243,"author":{"gitId":"nikele2001"},"content":"         * A defensive copy of {@code financialPlans} is used internally.","lastModifiedDate":"2023-10-16"},{"lineNumber":244,"author":{"gitId":"nikele2001"},"content":"         */","lastModifiedDate":"2023-10-16"},{"lineNumber":245,"author":{"gitId":"nikele2001"},"content":"        public void setFinancialPlans(Set\u003cFinancialPlan\u003e financialPlans) {","lastModifiedDate":"2023-10-16"},{"lineNumber":246,"author":{"gitId":"nikele2001"},"content":"            this.financialPlans \u003d (financialPlans !\u003d null) ? new HashSet\u003c\u003e(financialPlans) : null;","lastModifiedDate":"2023-10-16"},{"lineNumber":247,"author":{"gitId":"nikele2001"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":248,"author":{"gitId":"nikele2001"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":249,"author":{"gitId":"nikele2001"},"content":"        /**","lastModifiedDate":"2023-10-16"},{"lineNumber":250,"author":{"gitId":"nikele2001"},"content":"         * Returns an unmodifiable financial plan set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2023-10-16"},{"lineNumber":251,"author":{"gitId":"nikele2001"},"content":"         * if modification is attempted.","lastModifiedDate":"2023-10-16"},{"lineNumber":252,"author":{"gitId":"nikele2001"},"content":"         * Returns {@code Optional#empty()} if {@code financialPlans} is null.","lastModifiedDate":"2023-10-16"},{"lineNumber":253,"author":{"gitId":"nikele2001"},"content":"         */","lastModifiedDate":"2023-10-16"},{"lineNumber":254,"author":{"gitId":"nikele2001"},"content":"        public Optional\u003cSet\u003cFinancialPlan\u003e\u003e getFinancialPlans() {","lastModifiedDate":"2023-10-16"},{"lineNumber":255,"author":{"gitId":"nikele2001"},"content":"            return (financialPlans !\u003d null)","lastModifiedDate":"2023-10-16"},{"lineNumber":256,"author":{"gitId":"nikele2001"},"content":"                    ? Optional.of(Collections.unmodifiableSet(financialPlans)) : Optional.empty();","lastModifiedDate":"2023-10-16"},{"lineNumber":257,"author":{"gitId":"nikele2001"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":259,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":260,"author":{"gitId":"-"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2018-01-11"},{"lineNumber":261,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":262,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":263,"author":{"gitId":"-"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2017-06-21"},{"lineNumber":264,"author":{"gitId":"-"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2018-01-11"},{"lineNumber":265,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":267,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":268,"author":{"gitId":"-"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2018-01-11"},{"lineNumber":269,"author":{"gitId":"-"},"content":"         * if modification is attempted.","lastModifiedDate":"2018-01-11"},{"lineNumber":270,"author":{"gitId":"-"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2018-01-11"},{"lineNumber":271,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":272,"author":{"gitId":"-"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":273,"author":{"gitId":"-"},"content":"            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2018-01-11"},{"lineNumber":274,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":276,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-05"},{"lineNumber":277,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2017-05-05"},{"lineNumber":278,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-05"},{"lineNumber":279,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2017-05-05"},{"lineNumber":280,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":282,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2017-05-05"},{"lineNumber":283,"author":{"gitId":"-"},"content":"            if (!(other instanceof EditPersonDescriptor)) {","lastModifiedDate":"2017-05-05"},{"lineNumber":284,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2017-05-05"},{"lineNumber":285,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":287,"author":{"gitId":"-"},"content":"            EditPersonDescriptor otherEditPersonDescriptor \u003d (EditPersonDescriptor) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":288,"author":{"gitId":"-"},"content":"            return Objects.equals(name, otherEditPersonDescriptor.name)","lastModifiedDate":"2023-07-13"},{"lineNumber":289,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(phone, otherEditPersonDescriptor.phone)","lastModifiedDate":"2023-07-13"},{"lineNumber":290,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(email, otherEditPersonDescriptor.email)","lastModifiedDate":"2023-07-13"},{"lineNumber":291,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(address, otherEditPersonDescriptor.address)","lastModifiedDate":"2023-07-13"},{"lineNumber":292,"author":{"gitId":"sopa301"},"content":"                    \u0026\u0026 Objects.equals(nextOfKinName, otherEditPersonDescriptor.nextOfKinName)","lastModifiedDate":"2023-09-29"},{"lineNumber":293,"author":{"gitId":"sopa301"},"content":"                    \u0026\u0026 Objects.equals(nextOfKinPhone, otherEditPersonDescriptor.nextOfKinPhone)","lastModifiedDate":"2023-09-29"},{"lineNumber":294,"author":{"gitId":"nikele2001"},"content":"                    \u0026\u0026 Objects.equals(financialPlans, otherEditPersonDescriptor.financialPlans)","lastModifiedDate":"2023-10-16"},{"lineNumber":295,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(tags, otherEditPersonDescriptor.tags);","lastModifiedDate":"2023-07-13"},{"lineNumber":296,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-05"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":298,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":299,"author":{"gitId":"-"},"content":"        public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":300,"author":{"gitId":"-"},"content":"            return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":301,"author":{"gitId":"-"},"content":"                    .add(\"name\", name)","lastModifiedDate":"2019-02-23"},{"lineNumber":302,"author":{"gitId":"-"},"content":"                    .add(\"phone\", phone)","lastModifiedDate":"2019-02-23"},{"lineNumber":303,"author":{"gitId":"-"},"content":"                    .add(\"email\", email)","lastModifiedDate":"2019-02-23"},{"lineNumber":304,"author":{"gitId":"-"},"content":"                    .add(\"address\", address)","lastModifiedDate":"2019-02-23"},{"lineNumber":305,"author":{"gitId":"sopa301"},"content":"                    .add(\"nextOfKinName\", nextOfKinName)","lastModifiedDate":"2023-09-29"},{"lineNumber":306,"author":{"gitId":"sopa301"},"content":"                    .add(\"nextOfKinPhone\", nextOfKinPhone)","lastModifiedDate":"2023-09-29"},{"lineNumber":307,"author":{"gitId":"nikele2001"},"content":"                    .add(\"financialPlans\", financialPlans)","lastModifiedDate":"2023-10-16"},{"lineNumber":308,"author":{"gitId":"-"},"content":"                    .add(\"tags\", tags)","lastModifiedDate":"2019-02-23"},{"lineNumber":309,"author":{"gitId":"-"},"content":"                    .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":310,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2019-02-23"},{"lineNumber":311,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":312,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26"}],"authorContributionMap":{"Kb-Tay":12,"nikele2001":28,"sopa301":33,"-":239}},{"path":"src/main/java/seedu/address/logic/commands/FindCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"sopa301"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_FINANCIAL_PLAN;","lastModifiedDate":"2023-10-24"},{"lineNumber":5,"author":{"gitId":"sopa301"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-10-24"},{"lineNumber":6,"author":{"gitId":"sopa301"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-10-24"},{"lineNumber":7,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":8,"author":{"gitId":"sopa301"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-10-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"sopa301"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"sopa301"},"content":" * Finds and lists all persons in address book whose name, tags or financial plans contains any of the argument","lastModifiedDate":"2023-10-24"},{"lineNumber":17,"author":{"gitId":"sopa301"},"content":" * keywords. Keyword matching is case-insensitive.","lastModifiedDate":"2023-10-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"find\";","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"sopa301"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all persons whose names, tags or financial\"","lastModifiedDate":"2023-10-24"},{"lineNumber":24,"author":{"gitId":"sopa301"},"content":"            + \" plans contain any of \"","lastModifiedDate":"2023-10-24"},{"lineNumber":25,"author":{"gitId":"sopa301"},"content":"            + \"the specified keywords (case-insensitive) and displays them as a list with index numbers. \"","lastModifiedDate":"2023-10-25"},{"lineNumber":26,"author":{"gitId":"sopa301"},"content":"            + \"At least one argument must be given.\\n\"","lastModifiedDate":"2023-10-25"},{"lineNumber":27,"author":{"gitId":"sopa301"},"content":"            + \"Parameters: \"","lastModifiedDate":"2023-10-24"},{"lineNumber":28,"author":{"gitId":"sopa301"},"content":"            + \"[\" + PREFIX_NAME + \"NAME]... \"","lastModifiedDate":"2023-10-25"},{"lineNumber":29,"author":{"gitId":"sopa301"},"content":"            + \"[\" + PREFIX_FINANCIAL_PLAN + \"FINANCIAL_PLAN]... \"","lastModifiedDate":"2023-10-25"},{"lineNumber":30,"author":{"gitId":"sopa301"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2023-10-25"},{"lineNumber":31,"author":{"gitId":"sopa301"},"content":"            + \"Example: \" + COMMAND_WORD + \" \" + PREFIX_FINANCIAL_PLAN + \"Financial Plan A \"","lastModifiedDate":"2023-10-24"},{"lineNumber":32,"author":{"gitId":"sopa301"},"content":"            + PREFIX_TAG + \"TagA\";","lastModifiedDate":"2023-10-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":34,"author":{"gitId":"sopa301"},"content":"    private final Predicate\u003cPerson\u003e predicate;","lastModifiedDate":"2023-10-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":36,"author":{"gitId":"sopa301"},"content":"    public FindCommand(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2023-10-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return new CommandResult(","lastModifiedDate":"2018-04-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                String.format(Messages.MESSAGE_PERSONS_LISTED_OVERVIEW, model.getFilteredPersonList().size()));","lastModifiedDate":"2018-04-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        if (!(other instanceof FindCommand)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        FindCommand otherFindCommand \u003d (FindCommand) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return predicate.equals(otherFindCommand.predicate);","lastModifiedDate":"2023-07-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                .add(\"predicate\", predicate)","lastModifiedDate":"2019-02-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"sopa301":20,"-":49}},{"path":"src/main/java/seedu/address/logic/commands/GatherCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"AlyssaPng"},"content":"//@@author AlyssaPng","lastModifiedDate":"2023-11-09"},{"lineNumber":2,"author":{"gitId":"AlyssaPng"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-18"},{"lineNumber":3,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":4,"author":{"gitId":"AlyssaPng"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-23"},{"lineNumber":5,"author":{"gitId":"AlyssaPng"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_FINANCIAL_PLAN;","lastModifiedDate":"2023-10-22"},{"lineNumber":6,"author":{"gitId":"AlyssaPng"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-10-22"},{"lineNumber":7,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":8,"author":{"gitId":"AlyssaPng"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-18"},{"lineNumber":9,"author":{"gitId":"AlyssaPng"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-18"},{"lineNumber":10,"author":{"gitId":"AlyssaPng"},"content":"import seedu.address.model.person.gatheremail.GatherEmailPrompt;","lastModifiedDate":"2023-10-23"},{"lineNumber":11,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":12,"author":{"gitId":"AlyssaPng"},"content":"/**","lastModifiedDate":"2023-10-18"},{"lineNumber":13,"author":{"gitId":"AlyssaPng"},"content":" * Gathers and lists all persons in address book emails whose details contain a given Financial Plan.","lastModifiedDate":"2023-10-18"},{"lineNumber":14,"author":{"gitId":"AlyssaPng"},"content":" * Keyword matching is case-insensitive.","lastModifiedDate":"2023-10-26"},{"lineNumber":15,"author":{"gitId":"AlyssaPng"},"content":" */","lastModifiedDate":"2023-10-18"},{"lineNumber":16,"author":{"gitId":"AlyssaPng"},"content":"public class GatherCommand extends Command {","lastModifiedDate":"2023-10-18"},{"lineNumber":17,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":18,"author":{"gitId":"AlyssaPng"},"content":"    public static final String COMMAND_WORD \u003d \"gather\";","lastModifiedDate":"2023-10-18"},{"lineNumber":19,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":20,"author":{"gitId":"AlyssaPng"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Gathers all emails of people whose details match \"","lastModifiedDate":"2023-11-08"},{"lineNumber":21,"author":{"gitId":"AlyssaPng"},"content":"            + \"the desired prompt.\\n\"","lastModifiedDate":"2023-11-08"},{"lineNumber":22,"author":{"gitId":"AlyssaPng"},"content":"            + \"Emails can be gather by either Financial Plans or Tags, but not both.\\n\"","lastModifiedDate":"2023-11-08"},{"lineNumber":23,"author":{"gitId":"AlyssaPng"},"content":"            + \"Parameters: \"","lastModifiedDate":"2023-10-22"},{"lineNumber":24,"author":{"gitId":"AlyssaPng"},"content":"            + \"[\" + PREFIX_FINANCIAL_PLAN + \"FINANCIAL_PLAN] or \"","lastModifiedDate":"2023-10-22"},{"lineNumber":25,"author":{"gitId":"AlyssaPng"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]\\n\"","lastModifiedDate":"2023-10-22"},{"lineNumber":26,"author":{"gitId":"AlyssaPng"},"content":"            + \"Example: \" + COMMAND_WORD + \" \" + PREFIX_FINANCIAL_PLAN + \"Financial Plan A\";","lastModifiedDate":"2023-10-22"},{"lineNumber":27,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":28,"author":{"gitId":"AlyssaPng"},"content":"    public static final String MESSAGE_NO_PERSON_FOUND \u003d \"0 persons were found with \";","lastModifiedDate":"2023-10-18"},{"lineNumber":29,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":30,"author":{"gitId":"AlyssaPng"},"content":"    private final GatherEmailPrompt prompt;","lastModifiedDate":"2023-10-23"},{"lineNumber":31,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":32,"author":{"gitId":"AlyssaPng"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":33,"author":{"gitId":"AlyssaPng"},"content":"     * Constructs a new GatherCommand object.","lastModifiedDate":"2023-10-18"},{"lineNumber":34,"author":{"gitId":"AlyssaPng"},"content":"     * @param prompt The user\u0027s prompt","lastModifiedDate":"2023-10-18"},{"lineNumber":35,"author":{"gitId":"AlyssaPng"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":36,"author":{"gitId":"AlyssaPng"},"content":"    public GatherCommand(GatherEmailPrompt prompt) {","lastModifiedDate":"2023-10-23"},{"lineNumber":37,"author":{"gitId":"AlyssaPng"},"content":"        this.prompt \u003d prompt;","lastModifiedDate":"2023-10-18"},{"lineNumber":38,"author":{"gitId":"AlyssaPng"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":39,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":40,"author":{"gitId":"AlyssaPng"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":41,"author":{"gitId":"AlyssaPng"},"content":"     * Overrides Command execute method.","lastModifiedDate":"2023-10-18"},{"lineNumber":42,"author":{"gitId":"AlyssaPng"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2023-10-18"},{"lineNumber":43,"author":{"gitId":"AlyssaPng"},"content":"     * @return The CommandResult depending on the user input","lastModifiedDate":"2023-10-18"},{"lineNumber":44,"author":{"gitId":"AlyssaPng"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":45,"author":{"gitId":"AlyssaPng"},"content":"    @Override","lastModifiedDate":"2023-10-18"},{"lineNumber":46,"author":{"gitId":"AlyssaPng"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2023-10-18"},{"lineNumber":47,"author":{"gitId":"AlyssaPng"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-23"},{"lineNumber":48,"author":{"gitId":"AlyssaPng"},"content":"        String emails \u003d model.gatherEmails(prompt);","lastModifiedDate":"2023-10-18"},{"lineNumber":49,"author":{"gitId":"AlyssaPng"},"content":"        if (emails.isEmpty()) {","lastModifiedDate":"2023-10-18"},{"lineNumber":50,"author":{"gitId":"AlyssaPng"},"content":"            return new CommandResult(MESSAGE_NO_PERSON_FOUND + prompt.toString());","lastModifiedDate":"2023-10-22"},{"lineNumber":51,"author":{"gitId":"AlyssaPng"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":52,"author":{"gitId":"AlyssaPng"},"content":"        return new CommandResult(emails);","lastModifiedDate":"2023-10-18"},{"lineNumber":53,"author":{"gitId":"AlyssaPng"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":54,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":55,"author":{"gitId":"AlyssaPng"},"content":"    @Override","lastModifiedDate":"2023-10-18"},{"lineNumber":56,"author":{"gitId":"AlyssaPng"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-18"},{"lineNumber":57,"author":{"gitId":"AlyssaPng"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-18"},{"lineNumber":58,"author":{"gitId":"AlyssaPng"},"content":"            return true;","lastModifiedDate":"2023-10-18"},{"lineNumber":59,"author":{"gitId":"AlyssaPng"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":60,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":61,"author":{"gitId":"AlyssaPng"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-18"},{"lineNumber":62,"author":{"gitId":"AlyssaPng"},"content":"        if (!(other instanceof GatherCommand)) {","lastModifiedDate":"2023-10-18"},{"lineNumber":63,"author":{"gitId":"AlyssaPng"},"content":"            return false;","lastModifiedDate":"2023-10-18"},{"lineNumber":64,"author":{"gitId":"AlyssaPng"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":65,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":66,"author":{"gitId":"AlyssaPng"},"content":"        GatherCommand otherGatherCommand \u003d (GatherCommand) other;","lastModifiedDate":"2023-10-18"},{"lineNumber":67,"author":{"gitId":"AlyssaPng"},"content":"        return prompt.equals(otherGatherCommand.prompt);","lastModifiedDate":"2023-10-18"},{"lineNumber":68,"author":{"gitId":"AlyssaPng"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":69,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":70,"author":{"gitId":"AlyssaPng"},"content":"    @Override","lastModifiedDate":"2023-10-18"},{"lineNumber":71,"author":{"gitId":"AlyssaPng"},"content":"    public String toString() {","lastModifiedDate":"2023-10-18"},{"lineNumber":72,"author":{"gitId":"AlyssaPng"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-10-18"},{"lineNumber":73,"author":{"gitId":"AlyssaPng"},"content":"                .add(\"prompt\", prompt)","lastModifiedDate":"2023-10-18"},{"lineNumber":74,"author":{"gitId":"AlyssaPng"},"content":"                .toString();","lastModifiedDate":"2023-10-18"},{"lineNumber":75,"author":{"gitId":"AlyssaPng"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":76,"author":{"gitId":"AlyssaPng"},"content":"}","lastModifiedDate":"2023-10-18"}],"authorContributionMap":{"AlyssaPng":76}},{"path":"src/main/java/seedu/address/logic/commands/HelpCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Format full help instructions for every command for display.","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"help\";","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"sopa301"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Shows program usage instructions \"","lastModifiedDate":"2023-10-14"},{"lineNumber":13,"author":{"gitId":"sopa301"},"content":"            + \"and available keywords.\\n\"","lastModifiedDate":"2023-10-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"sopa301"},"content":"    public static final String SHOWING_HELP_MESSAGE \u003d \"Opened help window. Available keywords:\\n\"","lastModifiedDate":"2023-10-14"},{"lineNumber":17,"author":{"gitId":"sopa301"},"content":"            + AddCommand.COMMAND_WORD + \", \"","lastModifiedDate":"2023-10-14"},{"lineNumber":18,"author":{"gitId":"sopa301"},"content":"            + ClearCommand.COMMAND_WORD + \", \"","lastModifiedDate":"2023-10-14"},{"lineNumber":19,"author":{"gitId":"sopa301"},"content":"            + CompleteCommand.COMMAND_WORD + \", \"","lastModifiedDate":"2023-11-05"},{"lineNumber":20,"author":{"gitId":"sopa301"},"content":"            + DeleteCommand.COMMAND_WORD + \", \"","lastModifiedDate":"2023-10-14"},{"lineNumber":21,"author":{"gitId":"sopa301"},"content":"            + EditCommand.COMMAND_WORD + \", \"","lastModifiedDate":"2023-10-14"},{"lineNumber":22,"author":{"gitId":"sopa301"},"content":"            + ExitCommand.COMMAND_WORD + \", \"","lastModifiedDate":"2023-10-14"},{"lineNumber":23,"author":{"gitId":"sopa301"},"content":"            + FindCommand.COMMAND_WORD + \", \"","lastModifiedDate":"2023-10-14"},{"lineNumber":24,"author":{"gitId":"nikele2001"},"content":"            + GatherCommand.COMMAND_WORD + \", \"","lastModifiedDate":"2023-10-19"},{"lineNumber":25,"author":{"gitId":"sopa301"},"content":"            + COMMAND_WORD + \", \"","lastModifiedDate":"2023-10-14"},{"lineNumber":26,"author":{"gitId":"nikele2001"},"content":"            + ListCommand.COMMAND_WORD + \", \"","lastModifiedDate":"2023-10-19"},{"lineNumber":27,"author":{"gitId":"nikele2001"},"content":"            + ScheduleCommand.COMMAND_WORD + \", \"","lastModifiedDate":"2023-10-20"},{"lineNumber":28,"author":{"gitId":"nikele2001"},"content":"            + SortCommand.COMMAND_WORD;","lastModifiedDate":"2023-10-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return new CommandResult(SHOWING_HELP_MESSAGE, true, false);","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"nikele2001":4,"sopa301":11,"-":19}},{"path":"src/main/java/seedu/address/logic/commands/ScheduleCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Kb-Tay"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-17"},{"lineNumber":2,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":3,"author":{"gitId":"Kb-Tay"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"Kb-Tay"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_APPOINTMENT;","lastModifiedDate":"2023-10-20"},{"lineNumber":5,"author":{"gitId":"Kb-Tay"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_APPOINTMENT_DATE;","lastModifiedDate":"2023-10-20"},{"lineNumber":6,"author":{"gitId":"Kb-Tay"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"Kb-Tay"},"content":"import java.util.List;","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"Kb-Tay"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"Kb-Tay"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"Kb-Tay"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"Kb-Tay"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-17"},{"lineNumber":14,"author":{"gitId":"Kb-Tay"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2023-10-17"},{"lineNumber":15,"author":{"gitId":"jylow"},"content":"import seedu.address.model.appointment.NullAppointment;","lastModifiedDate":"2023-10-24"},{"lineNumber":16,"author":{"gitId":"Kb-Tay"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"Kb-Tay"},"content":"/**","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"Kb-Tay"},"content":" * Schedules an appointment for a person.","lastModifiedDate":"2023-10-17"},{"lineNumber":20,"author":{"gitId":"Kb-Tay"},"content":" */","lastModifiedDate":"2023-10-17"},{"lineNumber":21,"author":{"gitId":"Kb-Tay"},"content":"public class ScheduleCommand extends Command {","lastModifiedDate":"2023-10-17"},{"lineNumber":22,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":23,"author":{"gitId":"Kb-Tay"},"content":"    public static final String COMMAND_WORD \u003d \"schedule\";","lastModifiedDate":"2023-10-17"},{"lineNumber":24,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":25,"author":{"gitId":"Kb-Tay"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Schedules an appointment of the person identified \"","lastModifiedDate":"2023-10-20"},{"lineNumber":26,"author":{"gitId":"Kb-Tay"},"content":"            + \"by the index number used in the displayed person list. \"","lastModifiedDate":"2023-10-20"},{"lineNumber":27,"author":{"gitId":"Kb-Tay"},"content":"            + \"\\nParameters: INDEX(must be a positive integer) \"","lastModifiedDate":"2023-11-02"},{"lineNumber":28,"author":{"gitId":"AlyssaPng"},"content":"            + PREFIX_APPOINTMENT + \"Appointment Name \"","lastModifiedDate":"2023-11-10"},{"lineNumber":29,"author":{"gitId":"AlyssaPng"},"content":"            + PREFIX_APPOINTMENT_DATE + \"Appointment Date \"","lastModifiedDate":"2023-11-10"},{"lineNumber":30,"author":{"gitId":"Kb-Tay"},"content":"            + \"\\nExample: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2023-11-02"},{"lineNumber":31,"author":{"gitId":"Kb-Tay"},"content":"            + PREFIX_APPOINTMENT + \"Review Insurance \"","lastModifiedDate":"2023-10-20"},{"lineNumber":32,"author":{"gitId":"Kb-Tay"},"content":"            + PREFIX_APPOINTMENT_DATE + \"01-01-2023 20:00\";","lastModifiedDate":"2023-10-20"},{"lineNumber":33,"author":{"gitId":"Kb-Tay"},"content":"    public static final String MESSAGE_SCHEDULE_SUCCESS \u003d \"New appointment added: %1$s\";","lastModifiedDate":"2023-10-17"},{"lineNumber":34,"author":{"gitId":"jylow"},"content":"    public static final String CONFIRM_OVERRIDE_MESSAGE \u003d \"Previous appointment found.\";","lastModifiedDate":"2023-10-24"},{"lineNumber":35,"author":{"gitId":"Kb-Tay"},"content":"    private final Index index;","lastModifiedDate":"2023-10-17"},{"lineNumber":36,"author":{"gitId":"Kb-Tay"},"content":"    private final Appointment toAdd;","lastModifiedDate":"2023-10-17"},{"lineNumber":37,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":38,"author":{"gitId":"Kb-Tay"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":39,"author":{"gitId":"Kb-Tay"},"content":"     * Creates a ScheduleCommand to schedule the specified {@code Appointment} to the indexed person.","lastModifiedDate":"2023-10-17"},{"lineNumber":40,"author":{"gitId":"Kb-Tay"},"content":"     *","lastModifiedDate":"2023-10-17"},{"lineNumber":41,"author":{"gitId":"Kb-Tay"},"content":"     * @param index       The index of the person.","lastModifiedDate":"2023-10-17"},{"lineNumber":42,"author":{"gitId":"Kb-Tay"},"content":"     * @param appointment The Appointment to schedule.","lastModifiedDate":"2023-10-17"},{"lineNumber":43,"author":{"gitId":"Kb-Tay"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":44,"author":{"gitId":"Kb-Tay"},"content":"    public ScheduleCommand(Index index, Appointment appointment) {","lastModifiedDate":"2023-10-17"},{"lineNumber":45,"author":{"gitId":"Kb-Tay"},"content":"        requireNonNull(index);","lastModifiedDate":"2023-10-17"},{"lineNumber":46,"author":{"gitId":"Kb-Tay"},"content":"        requireNonNull(appointment);","lastModifiedDate":"2023-10-17"},{"lineNumber":47,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":48,"author":{"gitId":"Kb-Tay"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-10-17"},{"lineNumber":49,"author":{"gitId":"Kb-Tay"},"content":"        this.toAdd \u003d appointment;","lastModifiedDate":"2023-10-17"},{"lineNumber":50,"author":{"gitId":"Kb-Tay"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":51,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":52,"author":{"gitId":"Kb-Tay"},"content":"    @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":53,"author":{"gitId":"Kb-Tay"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-17"},{"lineNumber":54,"author":{"gitId":"Kb-Tay"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-17"},{"lineNumber":55,"author":{"gitId":"Kb-Tay"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2023-10-17"},{"lineNumber":56,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":57,"author":{"gitId":"Kb-Tay"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-10-17"},{"lineNumber":58,"author":{"gitId":"Kb-Tay"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-17"},{"lineNumber":59,"author":{"gitId":"Kb-Tay"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":60,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":61,"author":{"gitId":"Kb-Tay"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2023-10-17"},{"lineNumber":62,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":63,"author":{"gitId":"Kb-Tay"},"content":"        if (!personToEdit.hasNullAppointment()) {","lastModifiedDate":"2023-11-10"},{"lineNumber":64,"author":{"gitId":"Kb-Tay"},"content":"            return new CommandResult(CONFIRM_OVERRIDE_MESSAGE,","lastModifiedDate":"2023-11-10"},{"lineNumber":65,"author":{"gitId":"Kb-Tay"},"content":"                    false, false, true, personToEdit, toAdd);","lastModifiedDate":"2023-11-10"},{"lineNumber":66,"author":{"gitId":"Kb-Tay"},"content":"        }","lastModifiedDate":"2023-11-10"},{"lineNumber":67,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":68,"author":{"gitId":"Kb-Tay"},"content":"        assert personToEdit.getAppointment() instanceof NullAppointment;","lastModifiedDate":"2023-11-10"},{"lineNumber":69,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":70,"author":{"gitId":"Kb-Tay"},"content":"        Person personWithApt \u003d createPersonWithAppointment(personToEdit);","lastModifiedDate":"2023-10-17"},{"lineNumber":71,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":72,"author":{"gitId":"Kb-Tay"},"content":"        assert personWithApt.getAppointment() instanceof Appointment","lastModifiedDate":"2023-10-22"},{"lineNumber":73,"author":{"gitId":"Kb-Tay"},"content":"                : \"Schedule Command: person should have appointment\";","lastModifiedDate":"2023-10-22"},{"lineNumber":74,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":75,"author":{"gitId":"Kb-Tay"},"content":"        toAdd.setPerson(personWithApt); //sets person to appointment","lastModifiedDate":"2023-10-24"},{"lineNumber":76,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":77,"author":{"gitId":"Kb-Tay"},"content":"        model.setPerson(personToEdit, personWithApt);","lastModifiedDate":"2023-10-17"},{"lineNumber":78,"author":{"gitId":"Kb-Tay"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2023-10-17"},{"lineNumber":79,"author":{"gitId":"Kb-Tay"},"content":"        return new CommandResult(String.format(MESSAGE_SCHEDULE_SUCCESS, Messages.format(personWithApt)));","lastModifiedDate":"2023-10-17"},{"lineNumber":80,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":81,"author":{"gitId":"Kb-Tay"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":82,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":83,"author":{"gitId":"Kb-Tay"},"content":"    @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":84,"author":{"gitId":"Kb-Tay"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-17"},{"lineNumber":85,"author":{"gitId":"Kb-Tay"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-17"},{"lineNumber":86,"author":{"gitId":"Kb-Tay"},"content":"            return true;","lastModifiedDate":"2023-10-17"},{"lineNumber":87,"author":{"gitId":"Kb-Tay"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":88,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":89,"author":{"gitId":"Kb-Tay"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-17"},{"lineNumber":90,"author":{"gitId":"Kb-Tay"},"content":"        if (!(other instanceof ScheduleCommand)) {","lastModifiedDate":"2023-10-17"},{"lineNumber":91,"author":{"gitId":"Kb-Tay"},"content":"            return false;","lastModifiedDate":"2023-10-17"},{"lineNumber":92,"author":{"gitId":"Kb-Tay"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":93,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":94,"author":{"gitId":"Kb-Tay"},"content":"        ScheduleCommand otherScheduleCommand \u003d (ScheduleCommand) other;","lastModifiedDate":"2023-10-17"},{"lineNumber":95,"author":{"gitId":"Kb-Tay"},"content":"        return index.equals(otherScheduleCommand.index)","lastModifiedDate":"2023-10-17"},{"lineNumber":96,"author":{"gitId":"Kb-Tay"},"content":"                \u0026\u0026 toAdd.equals(toAdd);","lastModifiedDate":"2023-10-17"},{"lineNumber":97,"author":{"gitId":"Kb-Tay"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":98,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":99,"author":{"gitId":"Kb-Tay"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":100,"author":{"gitId":"Kb-Tay"},"content":"     * Returns the {@code Person} with the scheduled Appointment.","lastModifiedDate":"2023-10-17"},{"lineNumber":101,"author":{"gitId":"Kb-Tay"},"content":"     *","lastModifiedDate":"2023-10-17"},{"lineNumber":102,"author":{"gitId":"Kb-Tay"},"content":"     * @param personToEdit The Person the appointment is scheduled to.","lastModifiedDate":"2023-10-17"},{"lineNumber":103,"author":{"gitId":"Kb-Tay"},"content":"     * @return The Person with scheduled appointment.","lastModifiedDate":"2023-10-17"},{"lineNumber":104,"author":{"gitId":"Kb-Tay"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":105,"author":{"gitId":"Kb-Tay"},"content":"    private Person createPersonWithAppointment(Person personToEdit) {","lastModifiedDate":"2023-10-17"},{"lineNumber":106,"author":{"gitId":"Kb-Tay"},"content":"        return new Person(personToEdit.getName(), personToEdit.getPhone(), personToEdit.getEmail(),","lastModifiedDate":"2023-10-17"},{"lineNumber":107,"author":{"gitId":"Kb-Tay"},"content":"                personToEdit.getAddress(), personToEdit.getNextOfKinName(), personToEdit.getNextOfKinPhone(),","lastModifiedDate":"2023-10-17"},{"lineNumber":108,"author":{"gitId":"Kb-Tay"},"content":"                personToEdit.getFinancialPlans(), personToEdit.getTags(), toAdd);","lastModifiedDate":"2023-10-19"},{"lineNumber":109,"author":{"gitId":"Kb-Tay"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":110,"author":{"gitId":"Kb-Tay"},"content":"}","lastModifiedDate":"2023-10-17"}],"authorContributionMap":{"Kb-Tay":105,"AlyssaPng":2,"jylow":3}},{"path":"src/main/java/seedu/address/logic/commands/SortCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jylow"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-17"},{"lineNumber":2,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":3,"author":{"gitId":"jylow"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-18"},{"lineNumber":4,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":5,"author":{"gitId":"jylow"},"content":"import java.util.Comparator;","lastModifiedDate":"2023-10-20"},{"lineNumber":6,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":7,"author":{"gitId":"jylow"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"jylow"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"jylow"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"jylow"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-19"},{"lineNumber":11,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":13,"author":{"gitId":"jylow"},"content":"/**","lastModifiedDate":"2023-10-18"},{"lineNumber":14,"author":{"gitId":"jylow"},"content":" * Sorts all persons in the list by lexicographical order barring capitalisation.","lastModifiedDate":"2023-10-18"},{"lineNumber":15,"author":{"gitId":"jylow"},"content":" */","lastModifiedDate":"2023-10-18"},{"lineNumber":16,"author":{"gitId":"jylow"},"content":"public class SortCommand extends Command {","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"jylow"},"content":"    public static final String COMMAND_WORD \u003d \"sort\";","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":20,"author":{"gitId":"jylow"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Sorts the current list based currently available \"","lastModifiedDate":"2023-10-20"},{"lineNumber":21,"author":{"gitId":"jylow"},"content":"            + \"sort functions.\\n\"","lastModifiedDate":"2023-10-20"},{"lineNumber":22,"author":{"gitId":"jylow"},"content":"            + \"Currently available sorting variations: \\n\"","lastModifiedDate":"2023-10-20"},{"lineNumber":23,"author":{"gitId":"jylow"},"content":"            + \"-name (lexicographical name sort)\\n-appointment (earliest timing first)\\n\"","lastModifiedDate":"2023-11-02"},{"lineNumber":24,"author":{"gitId":"jylow"},"content":"            + \"Parameters: sort [variation]...\\n\"","lastModifiedDate":"2023-10-20"},{"lineNumber":25,"author":{"gitId":"jylow"},"content":"            + \"Example: sort name\";","lastModifiedDate":"2023-11-02"},{"lineNumber":26,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":27,"author":{"gitId":"jylow"},"content":"    private final Comparator\u003cPerson\u003e comparator;","lastModifiedDate":"2023-10-20"},{"lineNumber":28,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":29,"author":{"gitId":"jylow"},"content":"    /**","lastModifiedDate":"2023-10-20"},{"lineNumber":30,"author":{"gitId":"jylow"},"content":"     * Default constructor for a SortCommand.","lastModifiedDate":"2023-10-20"},{"lineNumber":31,"author":{"gitId":"jylow"},"content":"     * @param comparator comparator to be used to sort the list.","lastModifiedDate":"2023-10-20"},{"lineNumber":32,"author":{"gitId":"jylow"},"content":"     */","lastModifiedDate":"2023-10-20"},{"lineNumber":33,"author":{"gitId":"jylow"},"content":"    public SortCommand(Comparator\u003cPerson\u003e comparator) {","lastModifiedDate":"2023-10-19"},{"lineNumber":34,"author":{"gitId":"jylow"},"content":"        requireNonNull(comparator);","lastModifiedDate":"2023-11-10"},{"lineNumber":35,"author":{"gitId":"jylow"},"content":"        this.comparator \u003d comparator;","lastModifiedDate":"2023-10-19"},{"lineNumber":36,"author":{"gitId":"jylow"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":37,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":38,"author":{"gitId":"jylow"},"content":"    @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":39,"author":{"gitId":"jylow"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2023-10-17"},{"lineNumber":40,"author":{"gitId":"jylow"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-17"},{"lineNumber":41,"author":{"gitId":"jylow"},"content":"        model.sortFilteredPersonList(comparator);","lastModifiedDate":"2023-10-17"},{"lineNumber":42,"author":{"gitId":"jylow"},"content":"        return new CommandResult(","lastModifiedDate":"2023-10-17"},{"lineNumber":43,"author":{"gitId":"jylow"},"content":"                String.format(Messages.MESSAGE_PERSONS_LISTED_OVERVIEW, model.getFilteredPersonList().size()));","lastModifiedDate":"2023-10-17"},{"lineNumber":44,"author":{"gitId":"jylow"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":45,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":46,"author":{"gitId":"jylow"},"content":"    @Override","lastModifiedDate":"2023-10-20"},{"lineNumber":47,"author":{"gitId":"jylow"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-20"},{"lineNumber":48,"author":{"gitId":"jylow"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-20"},{"lineNumber":49,"author":{"gitId":"jylow"},"content":"            return true;","lastModifiedDate":"2023-10-20"},{"lineNumber":50,"author":{"gitId":"jylow"},"content":"        }","lastModifiedDate":"2023-10-20"},{"lineNumber":51,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":52,"author":{"gitId":"jylow"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-20"},{"lineNumber":53,"author":{"gitId":"jylow"},"content":"        if (!(other instanceof SortCommand)) {","lastModifiedDate":"2023-10-20"},{"lineNumber":54,"author":{"gitId":"jylow"},"content":"            return false;","lastModifiedDate":"2023-10-20"},{"lineNumber":55,"author":{"gitId":"jylow"},"content":"        }","lastModifiedDate":"2023-10-20"},{"lineNumber":56,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":57,"author":{"gitId":"jylow"},"content":"        SortCommand otherSortCommand \u003d (SortCommand) other;","lastModifiedDate":"2023-10-20"},{"lineNumber":58,"author":{"gitId":"jylow"},"content":"        return comparator.equals(otherSortCommand.comparator);","lastModifiedDate":"2023-10-20"},{"lineNumber":59,"author":{"gitId":"jylow"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":60,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":61,"author":{"gitId":"jylow"},"content":"    @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":62,"author":{"gitId":"jylow"},"content":"    public String toString() {","lastModifiedDate":"2023-10-17"},{"lineNumber":63,"author":{"gitId":"jylow"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-10-17"},{"lineNumber":64,"author":{"gitId":"jylow"},"content":"                .add(\"comparator\", comparator)","lastModifiedDate":"2023-10-17"},{"lineNumber":65,"author":{"gitId":"jylow"},"content":"                .toString();","lastModifiedDate":"2023-10-17"},{"lineNumber":66,"author":{"gitId":"jylow"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":67,"author":{"gitId":"jylow"},"content":"}","lastModifiedDate":"2023-10-17"}],"authorContributionMap":{"jylow":67}},{"path":"src/main/java/seedu/address/logic/parser/AddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-02-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-02-05"},{"lineNumber":6,"author":{"gitId":"nikele2001"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_FINANCIAL_PLAN;","lastModifiedDate":"2023-10-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":8,"author":{"gitId":"sopa301"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NEXT_OF_KIN_NAME;","lastModifiedDate":"2023-09-29"},{"lineNumber":9,"author":{"gitId":"sopa301"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NEXT_OF_KIN_PHONE;","lastModifiedDate":"2023-09-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-02-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-02-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-03-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-02-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"Kb-Tay"},"content":"import seedu.address.model.appointment.NullAppointment;","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"Kb-Tay"},"content":"import seedu.address.model.appointment.ScheduleItem;","lastModifiedDate":"2023-10-22"},{"lineNumber":20,"author":{"gitId":"nikele2001"},"content":"import seedu.address.model.financialplan.FinancialPlan;","lastModifiedDate":"2023-10-17"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-03-17"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-03-17"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-03-17"},{"lineNumber":24,"author":{"gitId":"sopa301"},"content":"import seedu.address.model.person.NextOfKinName;","lastModifiedDate":"2023-09-28"},{"lineNumber":25,"author":{"gitId":"sopa301"},"content":"import seedu.address.model.person.NextOfKinPhone;","lastModifiedDate":"2023-09-28"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-03-17"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-03-17"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-17"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2017-02-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class AddCommandParser implements Parser\u003cAddCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2017-02-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public AddCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":41,"author":{"gitId":"sopa301"},"content":"        ArgumentMultimap argMultimap \u003d processRawCommand(args);","lastModifiedDate":"2023-11-11"},{"lineNumber":42,"author":{"gitId":"sopa301"},"content":"        Person person \u003d createPerson(argMultimap);","lastModifiedDate":"2023-11-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return new AddCommand(person);","lastModifiedDate":"2023-11-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-11-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-11-11"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2023-11-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2023-11-11"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-11-11"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2023-11-11"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2023-11-11"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-11-11"},{"lineNumber":53,"author":{"gitId":"sopa301"},"content":"    /**","lastModifiedDate":"2023-11-11"},{"lineNumber":54,"author":{"gitId":"sopa301"},"content":"     * Processes the given {@code String} into an ArgumentMultimap in the context of an AddCommand.","lastModifiedDate":"2023-11-11"},{"lineNumber":55,"author":{"gitId":"sopa301"},"content":"     *","lastModifiedDate":"2023-11-11"},{"lineNumber":56,"author":{"gitId":"sopa301"},"content":"     * @param args Raw command string.","lastModifiedDate":"2023-11-11"},{"lineNumber":57,"author":{"gitId":"sopa301"},"content":"     * @return ArgumentMultimap containing argument values to create a Person with.","lastModifiedDate":"2023-11-11"},{"lineNumber":58,"author":{"gitId":"sopa301"},"content":"     * @throws ParseException if the string contains invalid arguments or duplicate arguments for Person fields that","lastModifiedDate":"2023-11-11"},{"lineNumber":59,"author":{"gitId":"sopa301"},"content":"     *      require exactly one argument.","lastModifiedDate":"2023-11-11"},{"lineNumber":60,"author":{"gitId":"sopa301"},"content":"     */","lastModifiedDate":"2023-11-11"},{"lineNumber":61,"author":{"gitId":"sopa301"},"content":"    private ArgumentMultimap processRawCommand(String args) throws ParseException {","lastModifiedDate":"2023-11-11"},{"lineNumber":62,"author":{"gitId":"sopa301"},"content":"        ArgumentMultimap argumentMultimap \u003d","lastModifiedDate":"2023-11-11"},{"lineNumber":63,"author":{"gitId":"sopa301"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS,","lastModifiedDate":"2023-09-28"},{"lineNumber":64,"author":{"gitId":"nikele2001"},"content":"                        PREFIX_NEXT_OF_KIN_NAME, PREFIX_NEXT_OF_KIN_PHONE, PREFIX_FINANCIAL_PLAN, PREFIX_TAG);","lastModifiedDate":"2023-10-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":66,"author":{"gitId":"sopa301"},"content":"        if (!arePrefixesPresent(argumentMultimap, PREFIX_NAME, PREFIX_ADDRESS, PREFIX_PHONE, PREFIX_EMAIL,","lastModifiedDate":"2023-11-11"},{"lineNumber":67,"author":{"gitId":"sopa301"},"content":"                PREFIX_NEXT_OF_KIN_NAME, PREFIX_NEXT_OF_KIN_PHONE)","lastModifiedDate":"2023-09-29"},{"lineNumber":68,"author":{"gitId":"sopa301"},"content":"                || !argumentMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2023-11-11"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-17"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":72,"author":{"gitId":"sopa301"},"content":"        argumentMultimap.verifyNoDuplicatePrefixesFor(PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS,","lastModifiedDate":"2023-11-11"},{"lineNumber":73,"author":{"gitId":"sopa301"},"content":"                PREFIX_NEXT_OF_KIN_NAME, PREFIX_NEXT_OF_KIN_PHONE);","lastModifiedDate":"2023-09-29"},{"lineNumber":74,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":75,"author":{"gitId":"sopa301"},"content":"        return argumentMultimap;","lastModifiedDate":"2023-11-11"},{"lineNumber":76,"author":{"gitId":"sopa301"},"content":"    }","lastModifiedDate":"2023-11-11"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":78,"author":{"gitId":"sopa301"},"content":"    /**","lastModifiedDate":"2023-11-11"},{"lineNumber":79,"author":{"gitId":"sopa301"},"content":"     * Creates a Person from the given ArgumentMultimap. This method ignores fields in the multimap that are not","lastModifiedDate":"2023-11-11"},{"lineNumber":80,"author":{"gitId":"sopa301"},"content":"     * relevant to the Person class and will use the last value in the multimap if any prefixes are mapped to","lastModifiedDate":"2023-11-11"},{"lineNumber":81,"author":{"gitId":"sopa301"},"content":"     * multiple values.","lastModifiedDate":"2023-11-11"},{"lineNumber":82,"author":{"gitId":"sopa301"},"content":"     *","lastModifiedDate":"2023-11-11"},{"lineNumber":83,"author":{"gitId":"sopa301"},"content":"     * @param argumentMultimap Multimap to draw values from.","lastModifiedDate":"2023-11-11"},{"lineNumber":84,"author":{"gitId":"sopa301"},"content":"     * @return Person object.","lastModifiedDate":"2023-11-11"},{"lineNumber":85,"author":{"gitId":"sopa301"},"content":"     * @throws ParseException if the multimap contains invalid values necessary to create a Person.","lastModifiedDate":"2023-11-11"},{"lineNumber":86,"author":{"gitId":"sopa301"},"content":"     */","lastModifiedDate":"2023-11-11"},{"lineNumber":87,"author":{"gitId":"sopa301"},"content":"    private Person createPerson(ArgumentMultimap argumentMultimap) throws ParseException {","lastModifiedDate":"2023-11-11"},{"lineNumber":88,"author":{"gitId":"sopa301"},"content":"        Name name \u003d ParserUtil.parseName(argumentMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2023-11-11"},{"lineNumber":89,"author":{"gitId":"sopa301"},"content":"        Phone phone \u003d ParserUtil.parsePhone(argumentMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2023-11-11"},{"lineNumber":90,"author":{"gitId":"sopa301"},"content":"        Email email \u003d ParserUtil.parseEmail(argumentMultimap.getValue(PREFIX_EMAIL).get());","lastModifiedDate":"2023-11-11"},{"lineNumber":91,"author":{"gitId":"sopa301"},"content":"        Address address \u003d ParserUtil.parseAddress(argumentMultimap.getValue(PREFIX_ADDRESS).get());","lastModifiedDate":"2023-11-11"},{"lineNumber":92,"author":{"gitId":"sopa301"},"content":"        NextOfKinName nokName \u003d ParserUtil.parseNextOfKinName(argumentMultimap.getValue(PREFIX_NEXT_OF_KIN_NAME).get());","lastModifiedDate":"2023-11-11"},{"lineNumber":93,"author":{"gitId":"sopa301"},"content":"        NextOfKinPhone nokPhone \u003d ParserUtil","lastModifiedDate":"2023-09-29"},{"lineNumber":94,"author":{"gitId":"sopa301"},"content":"                .parseNextOfKinPhone((argumentMultimap.getValue(PREFIX_NEXT_OF_KIN_PHONE)).get());","lastModifiedDate":"2023-11-11"},{"lineNumber":95,"author":{"gitId":"nikele2001"},"content":"        Set\u003cFinancialPlan\u003e financialPlanList \u003d ParserUtil.parseFinancialPlans(","lastModifiedDate":"2023-10-16"},{"lineNumber":96,"author":{"gitId":"sopa301"},"content":"                argumentMultimap.getAllValues(PREFIX_FINANCIAL_PLAN));","lastModifiedDate":"2023-11-11"},{"lineNumber":97,"author":{"gitId":"sopa301"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argumentMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2023-11-11"},{"lineNumber":98,"author":{"gitId":"Kb-Tay"},"content":"        ScheduleItem appointment \u003d NullAppointment.getNullAppointment();","lastModifiedDate":"2023-10-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":100,"author":{"gitId":"Kb-Tay"},"content":"        Person person \u003d new Person(name, phone, email, address, nokName, nokPhone,","lastModifiedDate":"2023-10-19"},{"lineNumber":101,"author":{"gitId":"Kb-Tay"},"content":"                financialPlanList, tagList, appointment);","lastModifiedDate":"2023-10-19"},{"lineNumber":102,"author":{"gitId":"sopa301"},"content":"        return person;","lastModifiedDate":"2023-11-11"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-17"},{"lineNumber":104,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"Kb-Tay":5,"nikele2001":4,"sopa301":45,"-":50}},{"path":"src/main/java/seedu/address/logic/parser/AddressBookParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-07-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-07-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2017-01-18"},{"lineNumber":14,"author":{"gitId":"Kb-Tay"},"content":"import seedu.address.logic.commands.CompleteCommand;","lastModifiedDate":"2023-10-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":19,"author":{"gitId":"AlyssaPng"},"content":"import seedu.address.logic.commands.GatherCommand;","lastModifiedDate":"2023-10-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":22,"author":{"gitId":"Kb-Tay"},"content":"import seedu.address.logic.commands.ScheduleCommand;","lastModifiedDate":"2023-10-17"},{"lineNumber":23,"author":{"gitId":"jylow"},"content":"import seedu.address.logic.commands.SortCommand;","lastModifiedDate":"2023-10-17"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class AddressBookParser {","lastModifiedDate":"2017-07-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(AddressBookParser.class);","lastModifiedDate":"2023-07-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // Note to developers: Change the log level in config.json to enable lower level (i.e., FINE, FINER and lower)","lastModifiedDate":"2023-07-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // log messages such as the one below.","lastModifiedDate":"2023-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // Lower level log messages are used sparingly to minimize noise in the code.","lastModifiedDate":"2023-07-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        logger.fine(\"Command word: \" + commandWord + \"; Arguments: \" + arguments);","lastModifiedDate":"2023-07-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        case AddCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            return new AddCommandParser().parse(arguments);","lastModifiedDate":"2017-02-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        case EditCommand.COMMAND_WORD:","lastModifiedDate":"2016-12-21"},{"lineNumber":64,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return new EditCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            return new DeleteCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            return new ClearCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            return new FindCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            return new ListCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":85,"author":{"gitId":"Kb-Tay"},"content":"        case ScheduleCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-17"},{"lineNumber":86,"author":{"gitId":"Kb-Tay"},"content":"            return new ScheduleCommandParser().parse(arguments);","lastModifiedDate":"2023-10-17"},{"lineNumber":87,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":88,"author":{"gitId":"jylow"},"content":"        case SortCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-17"},{"lineNumber":89,"author":{"gitId":"jylow"},"content":"            return new SortCommandParser().parse(arguments);","lastModifiedDate":"2023-10-19"},{"lineNumber":90,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":91,"author":{"gitId":"AlyssaPng"},"content":"        case GatherCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-18"},{"lineNumber":92,"author":{"gitId":"AlyssaPng"},"content":"            return new GatherCommandParser().parse(arguments);","lastModifiedDate":"2023-10-18"},{"lineNumber":93,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":94,"author":{"gitId":"Kb-Tay"},"content":"        case CompleteCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-24"},{"lineNumber":95,"author":{"gitId":"Kb-Tay"},"content":"            return new CompleteCommandParser().parse(arguments);","lastModifiedDate":"2023-10-24"},{"lineNumber":96,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            logger.finer(\"This user input caused a ParseException: \" + userInput);","lastModifiedDate":"2023-07-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Kb-Tay":9,"AlyssaPng":4,"jylow":4,"-":86}},{"path":"src/main/java/seedu/address/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2017-06-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"e/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_ADDRESS \u003d new Prefix(\"a/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"nikele2001"},"content":"    public static final Prefix PREFIX_FINANCIAL_PLAN \u003d new Prefix(\"fp/\");","lastModifiedDate":"2023-10-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"t/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":15,"author":{"gitId":"sopa301"},"content":"    public static final Prefix PREFIX_NEXT_OF_KIN_NAME \u003d new Prefix(\"nk/\");","lastModifiedDate":"2023-09-29"},{"lineNumber":16,"author":{"gitId":"sopa301"},"content":"    public static final Prefix PREFIX_NEXT_OF_KIN_PHONE \u003d new Prefix(\"nkp/\");","lastModifiedDate":"2023-09-29"},{"lineNumber":17,"author":{"gitId":"Kb-Tay"},"content":"    public static final Prefix PREFIX_APPOINTMENT \u003d new Prefix(\"ap/\");","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"Kb-Tay"},"content":"    public static final Prefix PREFIX_APPOINTMENT_DATE \u003d new Prefix(\"d/\");","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"Kb-Tay":2,"nikele2001":1,"sopa301":2,"-":14}},{"path":"src/main/java/seedu/address/logic/parser/CompleteCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Kb-Tay"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-24"},{"lineNumber":2,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":3,"author":{"gitId":"Kb-Tay"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-24"},{"lineNumber":4,"author":{"gitId":"Kb-Tay"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-24"},{"lineNumber":5,"author":{"gitId":"Kb-Tay"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_APPOINTMENT_DATE;","lastModifiedDate":"2023-10-24"},{"lineNumber":6,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":7,"author":{"gitId":"Kb-Tay"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-10-25"},{"lineNumber":8,"author":{"gitId":"Kb-Tay"},"content":"import java.util.Optional;","lastModifiedDate":"2023-11-07"},{"lineNumber":9,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":10,"author":{"gitId":"Kb-Tay"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-24"},{"lineNumber":11,"author":{"gitId":"Kb-Tay"},"content":"import seedu.address.logic.commands.CompleteByDate;","lastModifiedDate":"2023-11-07"},{"lineNumber":12,"author":{"gitId":"Kb-Tay"},"content":"import seedu.address.logic.commands.CompleteByIndex;","lastModifiedDate":"2023-11-07"},{"lineNumber":13,"author":{"gitId":"Kb-Tay"},"content":"import seedu.address.logic.commands.CompleteCommand;","lastModifiedDate":"2023-10-24"},{"lineNumber":14,"author":{"gitId":"Kb-Tay"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-24"},{"lineNumber":15,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":16,"author":{"gitId":"Kb-Tay"},"content":"/**","lastModifiedDate":"2023-10-25"},{"lineNumber":17,"author":{"gitId":"Kb-Tay"},"content":" * Parse input arguments and creates a new CompleteCommand object","lastModifiedDate":"2023-10-25"},{"lineNumber":18,"author":{"gitId":"Kb-Tay"},"content":" */","lastModifiedDate":"2023-10-25"},{"lineNumber":19,"author":{"gitId":"Kb-Tay"},"content":"public class CompleteCommandParser implements Parser\u003cCompleteCommand\u003e {","lastModifiedDate":"2023-10-24"},{"lineNumber":20,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":21,"author":{"gitId":"Kb-Tay"},"content":"    /**","lastModifiedDate":"2023-10-25"},{"lineNumber":22,"author":{"gitId":"Kb-Tay"},"content":"     * Parses the given {@code String} of arguments in the context of the CompleteCommand","lastModifiedDate":"2023-10-25"},{"lineNumber":23,"author":{"gitId":"Kb-Tay"},"content":"     * and returns an CompleteCommand object for execution.","lastModifiedDate":"2023-10-25"},{"lineNumber":24,"author":{"gitId":"Kb-Tay"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-10-25"},{"lineNumber":25,"author":{"gitId":"Kb-Tay"},"content":"     */","lastModifiedDate":"2023-10-25"},{"lineNumber":26,"author":{"gitId":"Kb-Tay"},"content":"    @Override","lastModifiedDate":"2023-10-24"},{"lineNumber":27,"author":{"gitId":"Kb-Tay"},"content":"    public CompleteCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-24"},{"lineNumber":28,"author":{"gitId":"Kb-Tay"},"content":"        requireNonNull(args);","lastModifiedDate":"2023-10-24"},{"lineNumber":29,"author":{"gitId":"Kb-Tay"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_APPOINTMENT_DATE);","lastModifiedDate":"2023-10-24"},{"lineNumber":30,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":31,"author":{"gitId":"Kb-Tay"},"content":"        String strIndex \u003d argMultimap.getPreamble().trim();","lastModifiedDate":"2023-11-07"},{"lineNumber":32,"author":{"gitId":"Kb-Tay"},"content":"        Optional\u003cString\u003e strDate \u003d argMultimap.getValue(PREFIX_APPOINTMENT_DATE);","lastModifiedDate":"2023-11-07"},{"lineNumber":33,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":34,"author":{"gitId":"Kb-Tay"},"content":"        if (!isValidArguments(strIndex, strDate)) {","lastModifiedDate":"2023-11-12"},{"lineNumber":35,"author":{"gitId":"Kb-Tay"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-11-05"},{"lineNumber":36,"author":{"gitId":"Kb-Tay"},"content":"                    CompleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-11-05"},{"lineNumber":37,"author":{"gitId":"Kb-Tay"},"content":"        }","lastModifiedDate":"2023-11-05"},{"lineNumber":38,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":39,"author":{"gitId":"Kb-Tay"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_APPOINTMENT_DATE);","lastModifiedDate":"2023-11-07"},{"lineNumber":40,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":41,"author":{"gitId":"Kb-Tay"},"content":"        if (strDate.isPresent()) {","lastModifiedDate":"2023-11-07"},{"lineNumber":42,"author":{"gitId":"Kb-Tay"},"content":"            LocalDate date \u003d ParserUtil.parseDate(argMultimap.getValue(PREFIX_APPOINTMENT_DATE).get());","lastModifiedDate":"2023-11-07"},{"lineNumber":43,"author":{"gitId":"Kb-Tay"},"content":"            return new CompleteByDate(date);","lastModifiedDate":"2023-11-07"},{"lineNumber":44,"author":{"gitId":"Kb-Tay"},"content":"        } else {","lastModifiedDate":"2023-11-07"},{"lineNumber":45,"author":{"gitId":"Kb-Tay"},"content":"            try {","lastModifiedDate":"2023-11-07"},{"lineNumber":46,"author":{"gitId":"Kb-Tay"},"content":"                Index index \u003d ParserUtil.parseIndex(strIndex);","lastModifiedDate":"2023-11-07"},{"lineNumber":47,"author":{"gitId":"Kb-Tay"},"content":"                return new CompleteByIndex(index);","lastModifiedDate":"2023-11-07"},{"lineNumber":48,"author":{"gitId":"Kb-Tay"},"content":"            } catch (ParseException pe) {","lastModifiedDate":"2023-11-07"},{"lineNumber":49,"author":{"gitId":"Kb-Tay"},"content":"                throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-10-26"},{"lineNumber":50,"author":{"gitId":"Kb-Tay"},"content":"                        CompleteCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2023-11-07"},{"lineNumber":51,"author":{"gitId":"Kb-Tay"},"content":"            }","lastModifiedDate":"2023-11-07"},{"lineNumber":52,"author":{"gitId":"Kb-Tay"},"content":"        }","lastModifiedDate":"2023-10-24"},{"lineNumber":53,"author":{"gitId":"Kb-Tay"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":54,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":55,"author":{"gitId":"Kb-Tay"},"content":"    private boolean isValidArguments(String strIndex, Optional\u003cString\u003e strDate) {","lastModifiedDate":"2023-11-12"},{"lineNumber":56,"author":{"gitId":"Kb-Tay"},"content":"        //if no input","lastModifiedDate":"2023-11-12"},{"lineNumber":57,"author":{"gitId":"Kb-Tay"},"content":"        if (strIndex.isEmpty() \u0026\u0026 strDate.isEmpty()) {","lastModifiedDate":"2023-11-12"},{"lineNumber":58,"author":{"gitId":"Kb-Tay"},"content":"            return false;","lastModifiedDate":"2023-11-12"},{"lineNumber":59,"author":{"gitId":"Kb-Tay"},"content":"        }","lastModifiedDate":"2023-11-12"},{"lineNumber":60,"author":{"gitId":"Kb-Tay"},"content":"        //if both date and index given","lastModifiedDate":"2023-11-12"},{"lineNumber":61,"author":{"gitId":"Kb-Tay"},"content":"        if (!strIndex.isEmpty() \u0026\u0026 strDate.isPresent()) {","lastModifiedDate":"2023-11-12"},{"lineNumber":62,"author":{"gitId":"Kb-Tay"},"content":"            return false;","lastModifiedDate":"2023-11-12"},{"lineNumber":63,"author":{"gitId":"Kb-Tay"},"content":"        }","lastModifiedDate":"2023-11-12"},{"lineNumber":64,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":65,"author":{"gitId":"Kb-Tay"},"content":"        return true;","lastModifiedDate":"2023-11-12"},{"lineNumber":66,"author":{"gitId":"Kb-Tay"},"content":"    }","lastModifiedDate":"2023-11-12"},{"lineNumber":67,"author":{"gitId":"Kb-Tay"},"content":"}","lastModifiedDate":"2023-10-24"}],"authorContributionMap":{"Kb-Tay":67}},{"path":"src/main/java/seedu/address/logic/parser/EditCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-10-16"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-10-16"},{"lineNumber":7,"author":{"gitId":"nikele2001"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_FINANCIAL_PLAN;","lastModifiedDate":"2023-10-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-10-16"},{"lineNumber":9,"author":{"gitId":"nikele2001"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NEXT_OF_KIN_NAME;","lastModifiedDate":"2023-10-16"},{"lineNumber":10,"author":{"gitId":"nikele2001"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NEXT_OF_KIN_PHONE;","lastModifiedDate":"2023-10-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-10-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-10-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-01-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":23,"author":{"gitId":"nikele2001"},"content":"import seedu.address.model.financialplan.FinancialPlan;","lastModifiedDate":"2023-10-17"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new EditCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class EditCommandParser implements Parser\u003cEditCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the EditCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * and returns an EditCommand object for execution.","lastModifiedDate":"2017-01-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public EditCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        requireNonNull(args);","lastModifiedDate":"2017-05-15"},{"lineNumber":38,"author":{"gitId":"sopa301"},"content":"        ArgumentMultimap argMultimap \u003d processRawCommand(args);","lastModifiedDate":"2023-11-11"},{"lineNumber":39,"author":{"gitId":"sopa301"},"content":"        Index index \u003d getIndex(argMultimap);","lastModifiedDate":"2023-11-11"},{"lineNumber":40,"author":{"gitId":"sopa301"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d makeEditPersonDescriptor(argMultimap);","lastModifiedDate":"2023-11-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        return new EditCommand(index, editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":44,"author":{"gitId":"nikele2001"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":45,"author":{"gitId":"nikele2001"},"content":"     * Parses {@code Collection\u003cString\u003e financialPlans} into a {@code Set\u003cFinancialPlan\u003e}","lastModifiedDate":"2023-10-16"},{"lineNumber":46,"author":{"gitId":"nikele2001"},"content":"     * if {@code financialPlans} is non-empty.","lastModifiedDate":"2023-10-16"},{"lineNumber":47,"author":{"gitId":"nikele2001"},"content":"     * If {@code financialPlans} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2023-10-16"},{"lineNumber":48,"author":{"gitId":"nikele2001"},"content":"     * {@code Set\u003cFinancialPlan\u003e} containing zero financial plans.","lastModifiedDate":"2023-10-16"},{"lineNumber":49,"author":{"gitId":"nikele2001"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":50,"author":{"gitId":"nikele2001"},"content":"    private Optional\u003cSet\u003cFinancialPlan\u003e\u003e parseFinancialPlansForEdit(","lastModifiedDate":"2023-10-17"},{"lineNumber":51,"author":{"gitId":"nikele2001"},"content":"            Collection\u003cString\u003e financialPlans) throws ParseException {","lastModifiedDate":"2023-10-17"},{"lineNumber":52,"author":{"gitId":"nikele2001"},"content":"        assert financialPlans !\u003d null;","lastModifiedDate":"2023-10-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":54,"author":{"gitId":"nikele2001"},"content":"        if (financialPlans.isEmpty()) {","lastModifiedDate":"2023-10-16"},{"lineNumber":55,"author":{"gitId":"nikele2001"},"content":"            return Optional.empty();","lastModifiedDate":"2023-10-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":57,"author":{"gitId":"nikele2001"},"content":"        Collection\u003cString\u003e financialPlanSet \u003d financialPlans.size() \u003d\u003d 1 \u0026\u0026 financialPlans.contains(\"\")","lastModifiedDate":"2023-10-16"},{"lineNumber":58,"author":{"gitId":"nikele2001"},"content":"                ? Collections.emptySet() : financialPlans;","lastModifiedDate":"2023-10-16"},{"lineNumber":59,"author":{"gitId":"nikele2001"},"content":"        return Optional.of(ParserUtil.parseFinancialPlans(financialPlanSet));","lastModifiedDate":"2023-10-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if {@code tags} is non-empty.","lastModifiedDate":"2017-03-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2017-01-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * {@code Set\u003cTag\u003e} containing zero tags.","lastModifiedDate":"2017-03-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    private Optional\u003cSet\u003cTag\u003e\u003e parseTagsForEdit(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assert tags !\u003d null;","lastModifiedDate":"2017-01-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2017-01-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        Collection\u003cString\u003e tagSet \u003d tags.size() \u003d\u003d 1 \u0026\u0026 tags.contains(\"\") ? Collections.emptySet() : tags;","lastModifiedDate":"2017-01-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return Optional.of(ParserUtil.parseTags(tagSet));","lastModifiedDate":"2017-01-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":77,"author":{"gitId":"sopa301"},"content":"    /**","lastModifiedDate":"2023-11-11"},{"lineNumber":78,"author":{"gitId":"sopa301"},"content":"     * Processes the given {@code String} into an ArgumentMultimap in the context of an EditCommand.","lastModifiedDate":"2023-11-11"},{"lineNumber":79,"author":{"gitId":"sopa301"},"content":"     *","lastModifiedDate":"2023-11-11"},{"lineNumber":80,"author":{"gitId":"sopa301"},"content":"     * @param args Raw command string.","lastModifiedDate":"2023-11-11"},{"lineNumber":81,"author":{"gitId":"sopa301"},"content":"     * @return ArgumentMultimap containing argument values to edit a Person with.","lastModifiedDate":"2023-11-11"},{"lineNumber":82,"author":{"gitId":"sopa301"},"content":"     * @throws ParseException if the string contains extra arguments for Person fields that require at most","lastModifiedDate":"2023-11-11"},{"lineNumber":83,"author":{"gitId":"sopa301"},"content":"     *      one argument.","lastModifiedDate":"2023-11-11"},{"lineNumber":84,"author":{"gitId":"sopa301"},"content":"     */","lastModifiedDate":"2023-11-11"},{"lineNumber":85,"author":{"gitId":"sopa301"},"content":"    private ArgumentMultimap processRawCommand(String args) throws ParseException {","lastModifiedDate":"2023-11-11"},{"lineNumber":86,"author":{"gitId":"sopa301"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-11-11"},{"lineNumber":87,"author":{"gitId":"sopa301"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS,","lastModifiedDate":"2023-11-11"},{"lineNumber":88,"author":{"gitId":"sopa301"},"content":"                        PREFIX_NEXT_OF_KIN_NAME, PREFIX_NEXT_OF_KIN_PHONE, PREFIX_FINANCIAL_PLAN, PREFIX_TAG);","lastModifiedDate":"2023-11-11"},{"lineNumber":89,"author":{"gitId":"sopa301"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS,","lastModifiedDate":"2023-11-11"},{"lineNumber":90,"author":{"gitId":"sopa301"},"content":"                PREFIX_NEXT_OF_KIN_NAME, PREFIX_NEXT_OF_KIN_PHONE);","lastModifiedDate":"2023-11-11"},{"lineNumber":91,"author":{"gitId":"sopa301"},"content":"        return argMultimap;","lastModifiedDate":"2023-11-11"},{"lineNumber":92,"author":{"gitId":"sopa301"},"content":"    }","lastModifiedDate":"2023-11-11"},{"lineNumber":93,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":94,"author":{"gitId":"sopa301"},"content":"    /**","lastModifiedDate":"2023-11-11"},{"lineNumber":95,"author":{"gitId":"sopa301"},"content":"     * Gets the index from an ArgumentMultimap.","lastModifiedDate":"2023-11-11"},{"lineNumber":96,"author":{"gitId":"sopa301"},"content":"     *","lastModifiedDate":"2023-11-11"},{"lineNumber":97,"author":{"gitId":"sopa301"},"content":"     * @param argumentMultimap Multimap to extract index from.","lastModifiedDate":"2023-11-11"},{"lineNumber":98,"author":{"gitId":"sopa301"},"content":"     * @return Index value.","lastModifiedDate":"2023-11-11"},{"lineNumber":99,"author":{"gitId":"sopa301"},"content":"     * @throws ParseException If the map does not contain a valid index in its preamble.","lastModifiedDate":"2023-11-11"},{"lineNumber":100,"author":{"gitId":"sopa301"},"content":"     */","lastModifiedDate":"2023-11-11"},{"lineNumber":101,"author":{"gitId":"sopa301"},"content":"    private Index getIndex(ArgumentMultimap argumentMultimap) throws ParseException {","lastModifiedDate":"2023-11-11"},{"lineNumber":102,"author":{"gitId":"sopa301"},"content":"        try {","lastModifiedDate":"2023-11-11"},{"lineNumber":103,"author":{"gitId":"sopa301"},"content":"            return ParserUtil.parseIndex(argumentMultimap.getPreamble());","lastModifiedDate":"2023-11-11"},{"lineNumber":104,"author":{"gitId":"sopa301"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-11-11"},{"lineNumber":105,"author":{"gitId":"sopa301"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2023-11-11"},{"lineNumber":106,"author":{"gitId":"sopa301"},"content":"        }","lastModifiedDate":"2023-11-11"},{"lineNumber":107,"author":{"gitId":"sopa301"},"content":"    }","lastModifiedDate":"2023-11-11"},{"lineNumber":108,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":109,"author":{"gitId":"sopa301"},"content":"    /**","lastModifiedDate":"2023-11-11"},{"lineNumber":110,"author":{"gitId":"sopa301"},"content":"     * Creates an EditPersonDescriptor using the values from an ArgumentMultimap. Will ignore values not relevant to the","lastModifiedDate":"2023-11-11"},{"lineNumber":111,"author":{"gitId":"sopa301"},"content":"     * EditPersonDescriptor class.","lastModifiedDate":"2023-11-11"},{"lineNumber":112,"author":{"gitId":"sopa301"},"content":"     *","lastModifiedDate":"2023-11-11"},{"lineNumber":113,"author":{"gitId":"sopa301"},"content":"     * @param argumentMultimap Multimap to draw values from.","lastModifiedDate":"2023-11-11"},{"lineNumber":114,"author":{"gitId":"sopa301"},"content":"     * @return EditPersonDescriptor to pass to EditCommand.","lastModifiedDate":"2023-11-11"},{"lineNumber":115,"author":{"gitId":"sopa301"},"content":"     * @throws ParseException if any relevant values are invalid or if the resulting EditPersonDescriptor has no values","lastModifiedDate":"2023-11-11"},{"lineNumber":116,"author":{"gitId":"sopa301"},"content":"     *      to edit.","lastModifiedDate":"2023-11-11"},{"lineNumber":117,"author":{"gitId":"sopa301"},"content":"     */","lastModifiedDate":"2023-11-11"},{"lineNumber":118,"author":{"gitId":"sopa301"},"content":"    private EditPersonDescriptor makeEditPersonDescriptor(ArgumentMultimap argumentMultimap) throws ParseException {","lastModifiedDate":"2023-11-11"},{"lineNumber":119,"author":{"gitId":"sopa301"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2023-11-11"},{"lineNumber":120,"author":{"gitId":"sopa301"},"content":"        if (argumentMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2023-11-11"},{"lineNumber":121,"author":{"gitId":"sopa301"},"content":"            editPersonDescriptor.setName(ParserUtil.parseName(argumentMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2023-11-11"},{"lineNumber":122,"author":{"gitId":"sopa301"},"content":"        }","lastModifiedDate":"2023-11-11"},{"lineNumber":123,"author":{"gitId":"sopa301"},"content":"        if (argumentMultimap.getValue(PREFIX_PHONE).isPresent()) {","lastModifiedDate":"2023-11-11"},{"lineNumber":124,"author":{"gitId":"sopa301"},"content":"            editPersonDescriptor.setPhone(ParserUtil.parsePhone(argumentMultimap.getValue(PREFIX_PHONE).get()));","lastModifiedDate":"2023-11-11"},{"lineNumber":125,"author":{"gitId":"sopa301"},"content":"        }","lastModifiedDate":"2023-11-11"},{"lineNumber":126,"author":{"gitId":"sopa301"},"content":"        if (argumentMultimap.getValue(PREFIX_EMAIL).isPresent()) {","lastModifiedDate":"2023-11-11"},{"lineNumber":127,"author":{"gitId":"sopa301"},"content":"            editPersonDescriptor.setEmail(ParserUtil.parseEmail(argumentMultimap.getValue(PREFIX_EMAIL).get()));","lastModifiedDate":"2023-11-11"},{"lineNumber":128,"author":{"gitId":"sopa301"},"content":"        }","lastModifiedDate":"2023-11-11"},{"lineNumber":129,"author":{"gitId":"sopa301"},"content":"        if (argumentMultimap.getValue(PREFIX_ADDRESS).isPresent()) {","lastModifiedDate":"2023-11-11"},{"lineNumber":130,"author":{"gitId":"sopa301"},"content":"            editPersonDescriptor.setAddress(ParserUtil.parseAddress(argumentMultimap.getValue(PREFIX_ADDRESS).get()));","lastModifiedDate":"2023-11-11"},{"lineNumber":131,"author":{"gitId":"sopa301"},"content":"        }","lastModifiedDate":"2023-11-11"},{"lineNumber":132,"author":{"gitId":"sopa301"},"content":"        if (argumentMultimap.getValue(PREFIX_NEXT_OF_KIN_NAME).isPresent()) {","lastModifiedDate":"2023-11-11"},{"lineNumber":133,"author":{"gitId":"sopa301"},"content":"            editPersonDescriptor.setNextOfKinName(ParserUtil.parseNextOfKinName(argumentMultimap","lastModifiedDate":"2023-11-11"},{"lineNumber":134,"author":{"gitId":"sopa301"},"content":"                    .getValue(PREFIX_NEXT_OF_KIN_NAME)","lastModifiedDate":"2023-11-11"},{"lineNumber":135,"author":{"gitId":"sopa301"},"content":"                    .get()));","lastModifiedDate":"2023-11-11"},{"lineNumber":136,"author":{"gitId":"sopa301"},"content":"        }","lastModifiedDate":"2023-11-11"},{"lineNumber":137,"author":{"gitId":"sopa301"},"content":"        if (argumentMultimap.getValue(PREFIX_NEXT_OF_KIN_PHONE).isPresent()) {","lastModifiedDate":"2023-11-11"},{"lineNumber":138,"author":{"gitId":"sopa301"},"content":"            editPersonDescriptor.setNextOfKinPhone(ParserUtil.parseNextOfKinPhone(argumentMultimap","lastModifiedDate":"2023-11-11"},{"lineNumber":139,"author":{"gitId":"sopa301"},"content":"                    .getValue(PREFIX_NEXT_OF_KIN_PHONE)","lastModifiedDate":"2023-11-11"},{"lineNumber":140,"author":{"gitId":"sopa301"},"content":"                    .get()));","lastModifiedDate":"2023-11-11"},{"lineNumber":141,"author":{"gitId":"sopa301"},"content":"        }","lastModifiedDate":"2023-11-11"},{"lineNumber":142,"author":{"gitId":"sopa301"},"content":"        parseFinancialPlansForEdit(argumentMultimap.getAllValues(PREFIX_FINANCIAL_PLAN))","lastModifiedDate":"2023-11-11"},{"lineNumber":143,"author":{"gitId":"sopa301"},"content":"                .ifPresent(editPersonDescriptor::setFinancialPlans);","lastModifiedDate":"2023-11-11"},{"lineNumber":144,"author":{"gitId":"sopa301"},"content":"        parseTagsForEdit(argumentMultimap.getAllValues(PREFIX_TAG)).ifPresent(editPersonDescriptor::setTags);","lastModifiedDate":"2023-11-11"},{"lineNumber":145,"author":{"gitId":"sopa301"},"content":"        if (!editPersonDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2023-11-11"},{"lineNumber":146,"author":{"gitId":"sopa301"},"content":"            throw new ParseException(EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2023-11-11"},{"lineNumber":147,"author":{"gitId":"sopa301"},"content":"        }","lastModifiedDate":"2023-11-11"},{"lineNumber":148,"author":{"gitId":"sopa301"},"content":"        return editPersonDescriptor;","lastModifiedDate":"2023-11-11"},{"lineNumber":149,"author":{"gitId":"sopa301"},"content":"    }","lastModifiedDate":"2023-11-11"},{"lineNumber":150,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"nikele2001":18,"sopa301":76,"-":56}},{"path":"src/main/java/seedu/address/logic/parser/FindCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"sopa301"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-11-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":5,"author":{"gitId":"sopa301"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_FINANCIAL_PLAN;","lastModifiedDate":"2023-10-24"},{"lineNumber":6,"author":{"gitId":"sopa301"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-10-24"},{"lineNumber":7,"author":{"gitId":"sopa301"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-10-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":9,"author":{"gitId":"sopa301"},"content":"import java.util.List;","lastModifiedDate":"2023-10-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":13,"author":{"gitId":"sopa301"},"content":"import seedu.address.model.person.predicates.CombinedPredicate;","lastModifiedDate":"2023-10-25"},{"lineNumber":14,"author":{"gitId":"sopa301"},"content":"import seedu.address.model.person.predicates.FinancialPlanContainsKeywordsPredicate;","lastModifiedDate":"2023-10-24"},{"lineNumber":15,"author":{"gitId":"sopa301"},"content":"import seedu.address.model.person.predicates.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-10-24"},{"lineNumber":16,"author":{"gitId":"sopa301"},"content":"import seedu.address.model.person.predicates.TagContainsKeywordsPredicate;","lastModifiedDate":"2023-10-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new FindCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class FindCommandParser implements Parser\u003cFindCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the FindCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * and returns a FindCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public FindCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":29,"author":{"gitId":"sopa301"},"content":"        ArgumentMultimap argMultimap \u003d processRawCommand(args);","lastModifiedDate":"2023-11-10"},{"lineNumber":30,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":31,"author":{"gitId":"sopa301"},"content":"        List\u003cString\u003e nameKeywords \u003d getNameList(argMultimap);","lastModifiedDate":"2023-11-10"},{"lineNumber":32,"author":{"gitId":"sopa301"},"content":"        List\u003cString\u003e tagKeywords \u003d getTagList(argMultimap);","lastModifiedDate":"2023-11-10"},{"lineNumber":33,"author":{"gitId":"sopa301"},"content":"        List\u003cString\u003e financialPlanKeywords \u003d getFinancialPlanList(argMultimap);","lastModifiedDate":"2023-11-10"},{"lineNumber":34,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":35,"author":{"gitId":"sopa301"},"content":"        CombinedPredicate combinedPredicate \u003d new CombinedPredicate(","lastModifiedDate":"2023-10-25"},{"lineNumber":36,"author":{"gitId":"sopa301"},"content":"                new FinancialPlanContainsKeywordsPredicate(financialPlanKeywords),","lastModifiedDate":"2023-10-25"},{"lineNumber":37,"author":{"gitId":"sopa301"},"content":"                new NameContainsKeywordsPredicate(nameKeywords),","lastModifiedDate":"2023-10-25"},{"lineNumber":38,"author":{"gitId":"sopa301"},"content":"                new TagContainsKeywordsPredicate(tagKeywords)","lastModifiedDate":"2023-10-25"},{"lineNumber":39,"author":{"gitId":"sopa301"},"content":"        );","lastModifiedDate":"2023-10-25"},{"lineNumber":40,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":41,"author":{"gitId":"sopa301"},"content":"        return new FindCommand(combinedPredicate);","lastModifiedDate":"2023-10-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":43,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":44,"author":{"gitId":"sopa301"},"content":"    /**","lastModifiedDate":"2023-11-10"},{"lineNumber":45,"author":{"gitId":"sopa301"},"content":"     * Processes the raw command string into an ArgumentMultimap.","lastModifiedDate":"2023-11-10"},{"lineNumber":46,"author":{"gitId":"sopa301"},"content":"     *","lastModifiedDate":"2023-11-10"},{"lineNumber":47,"author":{"gitId":"sopa301"},"content":"     * @param args Raw command string.","lastModifiedDate":"2023-11-10"},{"lineNumber":48,"author":{"gitId":"sopa301"},"content":"     * @return ArgumentMultimap containing argument values to find.","lastModifiedDate":"2023-11-10"},{"lineNumber":49,"author":{"gitId":"sopa301"},"content":"     * @throws ParseException if the string contains no arguments or has a non-empty preamble.","lastModifiedDate":"2023-11-10"},{"lineNumber":50,"author":{"gitId":"sopa301"},"content":"     */","lastModifiedDate":"2023-11-10"},{"lineNumber":51,"author":{"gitId":"sopa301"},"content":"    private ArgumentMultimap processRawCommand(String args) throws ParseException {","lastModifiedDate":"2023-11-10"},{"lineNumber":52,"author":{"gitId":"sopa301"},"content":"        requireNonNull(args);","lastModifiedDate":"2023-11-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2023-11-10"},{"lineNumber":54,"author":{"gitId":"sopa301"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_NAME,","lastModifiedDate":"2023-11-10"},{"lineNumber":55,"author":{"gitId":"sopa301"},"content":"                PREFIX_FINANCIAL_PLAN, PREFIX_TAG);","lastModifiedDate":"2023-11-10"},{"lineNumber":56,"author":{"gitId":"sopa301"},"content":"        if (trimmedArgs.isEmpty() || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2023-11-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2023-11-10"},{"lineNumber":58,"author":{"gitId":"-"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-11-10"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-11-10"},{"lineNumber":60,"author":{"gitId":"sopa301"},"content":"        return argMultimap;","lastModifiedDate":"2023-11-10"},{"lineNumber":61,"author":{"gitId":"sopa301"},"content":"    }","lastModifiedDate":"2023-11-10"},{"lineNumber":62,"author":{"gitId":"sopa301"},"content":"    /**","lastModifiedDate":"2023-11-10"},{"lineNumber":63,"author":{"gitId":"sopa301"},"content":"     * Gets the list of values mapped to the given prefix from the given multimap.","lastModifiedDate":"2023-11-10"},{"lineNumber":64,"author":{"gitId":"sopa301"},"content":"     *","lastModifiedDate":"2023-11-10"},{"lineNumber":65,"author":{"gitId":"sopa301"},"content":"     * @param argumentMultimap Multimap to draw values from.","lastModifiedDate":"2023-11-10"},{"lineNumber":66,"author":{"gitId":"sopa301"},"content":"     * @param prefix Key value for the multimap.","lastModifiedDate":"2023-11-10"},{"lineNumber":67,"author":{"gitId":"sopa301"},"content":"     * @param validator Validator for values drawn from multimap.","lastModifiedDate":"2023-11-10"},{"lineNumber":68,"author":{"gitId":"sopa301"},"content":"     * @return List of String values from the multimap.","lastModifiedDate":"2023-11-10"},{"lineNumber":69,"author":{"gitId":"sopa301"},"content":"     * @throws ParseException if any value in the list does not pass the validator\u0027s requirements.","lastModifiedDate":"2023-11-10"},{"lineNumber":70,"author":{"gitId":"sopa301"},"content":"     */","lastModifiedDate":"2023-11-10"},{"lineNumber":71,"author":{"gitId":"sopa301"},"content":"    private List\u003cString\u003e getFieldList(ArgumentMultimap argumentMultimap,","lastModifiedDate":"2023-11-10"},{"lineNumber":72,"author":{"gitId":"sopa301"},"content":"                                      Prefix prefix, Validator validator) throws ParseException {","lastModifiedDate":"2023-11-10"},{"lineNumber":73,"author":{"gitId":"sopa301"},"content":"        requireNonNull(argumentMultimap);","lastModifiedDate":"2023-11-10"},{"lineNumber":74,"author":{"gitId":"sopa301"},"content":"        requireNonNull(prefix);","lastModifiedDate":"2023-11-10"},{"lineNumber":75,"author":{"gitId":"sopa301"},"content":"        requireNonNull(validator);","lastModifiedDate":"2023-11-10"},{"lineNumber":76,"author":{"gitId":"sopa301"},"content":"        List\u003cString\u003e list \u003d argumentMultimap.getAllValues(prefix);","lastModifiedDate":"2023-11-10"},{"lineNumber":77,"author":{"gitId":"sopa301"},"content":"        list.replaceAll(String::trim);","lastModifiedDate":"2023-11-10"},{"lineNumber":78,"author":{"gitId":"sopa301"},"content":"        for (String string : list) {","lastModifiedDate":"2023-11-10"},{"lineNumber":79,"author":{"gitId":"sopa301"},"content":"            validator.validate(string);","lastModifiedDate":"2023-11-10"},{"lineNumber":80,"author":{"gitId":"sopa301"},"content":"        }","lastModifiedDate":"2023-11-10"},{"lineNumber":81,"author":{"gitId":"sopa301"},"content":"        return list;","lastModifiedDate":"2023-11-10"},{"lineNumber":82,"author":{"gitId":"sopa301"},"content":"    }","lastModifiedDate":"2023-11-10"},{"lineNumber":83,"author":{"gitId":"sopa301"},"content":"    private List\u003cString\u003e getNameList(ArgumentMultimap argumentMultimap) throws ParseException {","lastModifiedDate":"2023-11-10"},{"lineNumber":84,"author":{"gitId":"sopa301"},"content":"        return getFieldList(argumentMultimap, PREFIX_NAME, ParserUtil::validateName);","lastModifiedDate":"2023-11-10"},{"lineNumber":85,"author":{"gitId":"sopa301"},"content":"    }","lastModifiedDate":"2023-11-10"},{"lineNumber":86,"author":{"gitId":"sopa301"},"content":"    private List\u003cString\u003e getFinancialPlanList(ArgumentMultimap argumentMultimap) throws ParseException {","lastModifiedDate":"2023-11-10"},{"lineNumber":87,"author":{"gitId":"sopa301"},"content":"        return getFieldList(argumentMultimap, PREFIX_FINANCIAL_PLAN, ParserUtil::validateFinancialPlan);","lastModifiedDate":"2023-11-10"},{"lineNumber":88,"author":{"gitId":"sopa301"},"content":"    }","lastModifiedDate":"2023-11-10"},{"lineNumber":89,"author":{"gitId":"sopa301"},"content":"    private List\u003cString\u003e getTagList(ArgumentMultimap argumentMultimap) throws ParseException {","lastModifiedDate":"2023-11-10"},{"lineNumber":90,"author":{"gitId":"sopa301"},"content":"        return getFieldList(argumentMultimap, PREFIX_TAG, ParserUtil::validateTag);","lastModifiedDate":"2023-11-10"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-11-10"},{"lineNumber":92,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"sopa301":66,"-":26}},{"path":"src/main/java/seedu/address/logic/parser/GatherCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"AlyssaPng"},"content":"//@@author AlyssaPng","lastModifiedDate":"2023-11-09"},{"lineNumber":2,"author":{"gitId":"AlyssaPng"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-18"},{"lineNumber":3,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":4,"author":{"gitId":"AlyssaPng"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-18"},{"lineNumber":5,"author":{"gitId":"AlyssaPng"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_FINANCIAL_PLAN;","lastModifiedDate":"2023-10-22"},{"lineNumber":6,"author":{"gitId":"AlyssaPng"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-10-22"},{"lineNumber":7,"author":{"gitId":"AlyssaPng"},"content":"import static seedu.address.logic.parser.ParserUtil.validateFinancialPlan;","lastModifiedDate":"2023-10-24"},{"lineNumber":8,"author":{"gitId":"AlyssaPng"},"content":"import static seedu.address.logic.parser.ParserUtil.validateTag;","lastModifiedDate":"2023-10-24"},{"lineNumber":9,"author":{"gitId":"AlyssaPng"},"content":"import static seedu.address.model.financialplan.FinancialPlan.isValidFinancialPlanName;","lastModifiedDate":"2023-11-10"},{"lineNumber":10,"author":{"gitId":"AlyssaPng"},"content":"import static seedu.address.model.tag.Tag.isValidTagName;","lastModifiedDate":"2023-11-10"},{"lineNumber":11,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":12,"author":{"gitId":"AlyssaPng"},"content":"import seedu.address.logic.commands.GatherCommand;","lastModifiedDate":"2023-10-18"},{"lineNumber":13,"author":{"gitId":"AlyssaPng"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-18"},{"lineNumber":14,"author":{"gitId":"AlyssaPng"},"content":"import seedu.address.model.person.gatheremail.GatherEmailByFinancialPlan;","lastModifiedDate":"2023-10-23"},{"lineNumber":15,"author":{"gitId":"AlyssaPng"},"content":"import seedu.address.model.person.gatheremail.GatherEmailByTag;","lastModifiedDate":"2023-10-23"},{"lineNumber":16,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":17,"author":{"gitId":"AlyssaPng"},"content":"/**","lastModifiedDate":"2023-10-18"},{"lineNumber":18,"author":{"gitId":"AlyssaPng"},"content":" * Parses input arguments and creates a new GatherCommand object","lastModifiedDate":"2023-10-18"},{"lineNumber":19,"author":{"gitId":"AlyssaPng"},"content":" */","lastModifiedDate":"2023-10-18"},{"lineNumber":20,"author":{"gitId":"AlyssaPng"},"content":"public class GatherCommandParser implements Parser\u003cGatherCommand\u003e {","lastModifiedDate":"2023-10-18"},{"lineNumber":21,"author":{"gitId":"AlyssaPng"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":22,"author":{"gitId":"AlyssaPng"},"content":"     * Parses the given {@code String} of arguments in the context of the GatherCommand.","lastModifiedDate":"2023-11-10"},{"lineNumber":23,"author":{"gitId":"AlyssaPng"},"content":"     * and returns a GatherCommand object for execution.","lastModifiedDate":"2023-10-18"},{"lineNumber":24,"author":{"gitId":"AlyssaPng"},"content":"     * @throws ParseException if the user input does not conform the expected format.","lastModifiedDate":"2023-11-10"},{"lineNumber":25,"author":{"gitId":"AlyssaPng"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":26,"author":{"gitId":"AlyssaPng"},"content":"    public GatherCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-18"},{"lineNumber":27,"author":{"gitId":"AlyssaPng"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2023-10-18"},{"lineNumber":28,"author":{"gitId":"AlyssaPng"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_FINANCIAL_PLAN, PREFIX_TAG);","lastModifiedDate":"2023-10-23"},{"lineNumber":29,"author":{"gitId":"AlyssaPng"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_FINANCIAL_PLAN, PREFIX_TAG);","lastModifiedDate":"2023-10-23"},{"lineNumber":30,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":31,"author":{"gitId":"AlyssaPng"},"content":"        if (argMultimap.getValue(PREFIX_FINANCIAL_PLAN).isPresent() \u0026\u0026 argMultimap.getValue(PREFIX_TAG).isPresent()) {","lastModifiedDate":"2023-10-23"},{"lineNumber":32,"author":{"gitId":"AlyssaPng"},"content":"            throw new ParseException(","lastModifiedDate":"2023-10-23"},{"lineNumber":33,"author":{"gitId":"AlyssaPng"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, GatherCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-23"},{"lineNumber":34,"author":{"gitId":"AlyssaPng"},"content":"        }","lastModifiedDate":"2023-10-23"},{"lineNumber":35,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":36,"author":{"gitId":"AlyssaPng"},"content":"        if (argMultimap.getValue(PREFIX_FINANCIAL_PLAN).isPresent()) {","lastModifiedDate":"2023-10-23"},{"lineNumber":37,"author":{"gitId":"AlyssaPng"},"content":"            String financialPlanArgs \u003d removePrefix(trimmedArgs, PREFIX_FINANCIAL_PLAN);","lastModifiedDate":"2023-11-10"},{"lineNumber":38,"author":{"gitId":"AlyssaPng"},"content":"            validateFinancialPlan(financialPlanArgs);","lastModifiedDate":"2023-10-23"},{"lineNumber":39,"author":{"gitId":"AlyssaPng"},"content":"            assert isValidFinancialPlanName(financialPlanArgs) : \"Prompt has to meets valid FP requirements\";","lastModifiedDate":"2023-11-10"},{"lineNumber":40,"author":{"gitId":"AlyssaPng"},"content":"            return new GatherCommand(new GatherEmailByFinancialPlan(financialPlanArgs));","lastModifiedDate":"2023-10-23"},{"lineNumber":41,"author":{"gitId":"AlyssaPng"},"content":"        }","lastModifiedDate":"2023-11-10"},{"lineNumber":42,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":43,"author":{"gitId":"AlyssaPng"},"content":"        if (argMultimap.getValue(PREFIX_TAG).isPresent()) {","lastModifiedDate":"2023-11-10"},{"lineNumber":44,"author":{"gitId":"AlyssaPng"},"content":"            // Parse Tag","lastModifiedDate":"2023-10-22"},{"lineNumber":45,"author":{"gitId":"AlyssaPng"},"content":"            String tagArgs \u003d removePrefix(trimmedArgs, PREFIX_TAG);","lastModifiedDate":"2023-11-10"},{"lineNumber":46,"author":{"gitId":"AlyssaPng"},"content":"            validateTag(tagArgs);","lastModifiedDate":"2023-10-23"},{"lineNumber":47,"author":{"gitId":"AlyssaPng"},"content":"            assert isValidTagName(tagArgs) : \"Prompt has to meets valid Tag requirements\";","lastModifiedDate":"2023-11-10"},{"lineNumber":48,"author":{"gitId":"AlyssaPng"},"content":"            return new GatherCommand(new GatherEmailByTag(tagArgs));","lastModifiedDate":"2023-10-23"},{"lineNumber":49,"author":{"gitId":"AlyssaPng"},"content":"        }","lastModifiedDate":"2023-10-22"},{"lineNumber":50,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":51,"author":{"gitId":"AlyssaPng"},"content":"        throw new ParseException(","lastModifiedDate":"2023-10-18"},{"lineNumber":52,"author":{"gitId":"AlyssaPng"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, GatherCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-18"},{"lineNumber":53,"author":{"gitId":"AlyssaPng"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":54,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":55,"author":{"gitId":"AlyssaPng"},"content":"    /**","lastModifiedDate":"2023-11-10"},{"lineNumber":56,"author":{"gitId":"AlyssaPng"},"content":"     * Removes the {@code prefix} from the {@code currArg}.","lastModifiedDate":"2023-11-10"},{"lineNumber":57,"author":{"gitId":"AlyssaPng"},"content":"     */","lastModifiedDate":"2023-11-10"},{"lineNumber":58,"author":{"gitId":"AlyssaPng"},"content":"    public String removePrefix(String currArg, Prefix prefix) {","lastModifiedDate":"2023-11-10"},{"lineNumber":59,"author":{"gitId":"AlyssaPng"},"content":"        String noPrefix \u003d currArg.replace(prefix.getPrefix(), \"\");","lastModifiedDate":"2023-11-10"},{"lineNumber":60,"author":{"gitId":"AlyssaPng"},"content":"        String trimmedArg \u003d noPrefix.trim();","lastModifiedDate":"2023-11-10"},{"lineNumber":61,"author":{"gitId":"AlyssaPng"},"content":"        return trimmedArg;","lastModifiedDate":"2023-11-10"},{"lineNumber":62,"author":{"gitId":"AlyssaPng"},"content":"    }","lastModifiedDate":"2023-11-10"},{"lineNumber":63,"author":{"gitId":"AlyssaPng"},"content":"}","lastModifiedDate":"2023-10-18"}],"authorContributionMap":{"AlyssaPng":63}},{"path":"src/main/java/seedu/address/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"sopa301"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"Kb-Tay"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-10-25"},{"lineNumber":7,"author":{"gitId":"Kb-Tay"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"AlyssaPng"},"content":"import java.time.YearMonth;","lastModifiedDate":"2023-11-10"},{"lineNumber":9,"author":{"gitId":"Kb-Tay"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-10-25"},{"lineNumber":10,"author":{"gitId":"Kb-Tay"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-10-20"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-02-11"},{"lineNumber":17,"author":{"gitId":"Kb-Tay"},"content":"import seedu.address.logic.commands.CompleteCommand;","lastModifiedDate":"2023-10-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":19,"author":{"gitId":"Kb-Tay"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2023-10-17"},{"lineNumber":20,"author":{"gitId":"nikele2001"},"content":"import seedu.address.model.financialplan.FinancialPlan;","lastModifiedDate":"2023-10-17"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-02-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-02-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-02-11"},{"lineNumber":24,"author":{"gitId":"sopa301"},"content":"import seedu.address.model.person.NextOfKinName;","lastModifiedDate":"2023-09-28"},{"lineNumber":25,"author":{"gitId":"sopa301"},"content":"import seedu.address.model.person.NextOfKinPhone;","lastModifiedDate":"2023-09-28"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-02-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-02-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":30,"author":{"gitId":"sopa301"},"content":" * Contains utility methods used for parsing and validating strings in the various *Parser classes.","lastModifiedDate":"2023-10-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Parses a {@code String address} into an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code address} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public static Address parseAddress(String address) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-30"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        String trimmedAddress \u003d address.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(trimmedAddress)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            throw new ParseException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        return new Address(trimmedAddress);","lastModifiedDate":"2017-05-30"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2017-05-30"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":107,"author":{"gitId":"sopa301"},"content":"    /**","lastModifiedDate":"2023-09-28"},{"lineNumber":108,"author":{"gitId":"sopa301"},"content":"     * Parses a {@code String nokName} into a {@code NextOfKinName}.","lastModifiedDate":"2023-09-28"},{"lineNumber":109,"author":{"gitId":"sopa301"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-09-28"},{"lineNumber":110,"author":{"gitId":"sopa301"},"content":"     *","lastModifiedDate":"2023-09-28"},{"lineNumber":111,"author":{"gitId":"sopa301"},"content":"     * @throws ParseException if the given {@code nokName} is invalid.","lastModifiedDate":"2023-09-28"},{"lineNumber":112,"author":{"gitId":"sopa301"},"content":"     */","lastModifiedDate":"2023-09-28"},{"lineNumber":113,"author":{"gitId":"sopa301"},"content":"    public static NextOfKinName parseNextOfKinName(String nokName) throws ParseException {","lastModifiedDate":"2023-09-28"},{"lineNumber":114,"author":{"gitId":"sopa301"},"content":"        requireNonNull(nokName);","lastModifiedDate":"2023-09-28"},{"lineNumber":115,"author":{"gitId":"sopa301"},"content":"        String trimmedNokName \u003d nokName.trim();","lastModifiedDate":"2023-09-28"},{"lineNumber":116,"author":{"gitId":"sopa301"},"content":"        if (!NextOfKinName.isValidName(trimmedNokName)) {","lastModifiedDate":"2023-09-28"},{"lineNumber":117,"author":{"gitId":"sopa301"},"content":"            throw new ParseException(NextOfKinName.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-09-28"},{"lineNumber":118,"author":{"gitId":"sopa301"},"content":"        }","lastModifiedDate":"2023-09-28"},{"lineNumber":119,"author":{"gitId":"sopa301"},"content":"        return new NextOfKinName(trimmedNokName);","lastModifiedDate":"2023-09-28"},{"lineNumber":120,"author":{"gitId":"sopa301"},"content":"    }","lastModifiedDate":"2023-09-28"},{"lineNumber":121,"author":{"gitId":"sopa301"},"content":"    /**","lastModifiedDate":"2023-09-28"},{"lineNumber":122,"author":{"gitId":"sopa301"},"content":"     * Parses a {@code String nokPhone} into an {@code NextOfKinPhone}.","lastModifiedDate":"2023-09-28"},{"lineNumber":123,"author":{"gitId":"sopa301"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-09-28"},{"lineNumber":124,"author":{"gitId":"sopa301"},"content":"     *","lastModifiedDate":"2023-09-28"},{"lineNumber":125,"author":{"gitId":"sopa301"},"content":"     * @throws ParseException if the given {@code nokPhone} is invalid.","lastModifiedDate":"2023-09-28"},{"lineNumber":126,"author":{"gitId":"sopa301"},"content":"     */","lastModifiedDate":"2023-09-28"},{"lineNumber":127,"author":{"gitId":"sopa301"},"content":"    public static NextOfKinPhone parseNextOfKinPhone(String nokPhone) throws ParseException {","lastModifiedDate":"2023-09-28"},{"lineNumber":128,"author":{"gitId":"sopa301"},"content":"        requireNonNull(nokPhone);","lastModifiedDate":"2023-09-28"},{"lineNumber":129,"author":{"gitId":"sopa301"},"content":"        String trimmedNokPhone \u003d nokPhone.trim();","lastModifiedDate":"2023-09-28"},{"lineNumber":130,"author":{"gitId":"sopa301"},"content":"        if (!NextOfKinPhone.isValidPhone(trimmedNokPhone)) {","lastModifiedDate":"2023-09-28"},{"lineNumber":131,"author":{"gitId":"sopa301"},"content":"            throw new ParseException(NextOfKinPhone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-09-28"},{"lineNumber":132,"author":{"gitId":"sopa301"},"content":"        }","lastModifiedDate":"2023-09-28"},{"lineNumber":133,"author":{"gitId":"sopa301"},"content":"        return new NextOfKinPhone(trimmedNokPhone);","lastModifiedDate":"2023-09-28"},{"lineNumber":134,"author":{"gitId":"sopa301"},"content":"    }","lastModifiedDate":"2023-09-28"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":136,"author":{"gitId":"nikele2001"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":137,"author":{"gitId":"nikele2001"},"content":"     * Parses a {@code String financialPlan} into a {@code FinancialPlan}.","lastModifiedDate":"2023-10-16"},{"lineNumber":138,"author":{"gitId":"nikele2001"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-10-16"},{"lineNumber":139,"author":{"gitId":"nikele2001"},"content":"     *","lastModifiedDate":"2023-10-16"},{"lineNumber":140,"author":{"gitId":"nikele2001"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2023-10-16"},{"lineNumber":141,"author":{"gitId":"nikele2001"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":142,"author":{"gitId":"nikele2001"},"content":"    public static FinancialPlan parseFinancialPlan(String financialPlan) throws ParseException {","lastModifiedDate":"2023-10-16"},{"lineNumber":143,"author":{"gitId":"nikele2001"},"content":"        requireNonNull(financialPlan);","lastModifiedDate":"2023-10-16"},{"lineNumber":144,"author":{"gitId":"nikele2001"},"content":"        String trimmedFinancialPlan \u003d financialPlan.trim();","lastModifiedDate":"2023-10-16"},{"lineNumber":145,"author":{"gitId":"nikele2001"},"content":"        if (!FinancialPlan.isValidFinancialPlanName(trimmedFinancialPlan)) {","lastModifiedDate":"2023-10-16"},{"lineNumber":146,"author":{"gitId":"nikele2001"},"content":"            throw new ParseException(FinancialPlan.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-16"},{"lineNumber":147,"author":{"gitId":"nikele2001"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":148,"author":{"gitId":"nikele2001"},"content":"        return new FinancialPlan(trimmedFinancialPlan);","lastModifiedDate":"2023-10-16"},{"lineNumber":149,"author":{"gitId":"nikele2001"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":150,"author":{"gitId":"nikele2001"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":151,"author":{"gitId":"nikele2001"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":152,"author":{"gitId":"nikele2001"},"content":"     * Parses {@code Collection\u003cString\u003e financialPlans} into a {@code Set\u003cFinancialPlan\u003e}.","lastModifiedDate":"2023-10-16"},{"lineNumber":153,"author":{"gitId":"nikele2001"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":154,"author":{"gitId":"nikele2001"},"content":"    public static Set\u003cFinancialPlan\u003e parseFinancialPlans(Collection\u003cString\u003e financialPlans) throws ParseException {","lastModifiedDate":"2023-10-16"},{"lineNumber":155,"author":{"gitId":"nikele2001"},"content":"        requireNonNull(financialPlans);","lastModifiedDate":"2023-10-16"},{"lineNumber":156,"author":{"gitId":"nikele2001"},"content":"        final Set\u003cFinancialPlan\u003e financialPlanSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-10-16"},{"lineNumber":157,"author":{"gitId":"nikele2001"},"content":"        for (String financialPlanName : financialPlans) {","lastModifiedDate":"2023-10-16"},{"lineNumber":158,"author":{"gitId":"nikele2001"},"content":"            financialPlanSet.add(parseFinancialPlan(financialPlanName));","lastModifiedDate":"2023-10-16"},{"lineNumber":159,"author":{"gitId":"nikele2001"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":160,"author":{"gitId":"nikele2001"},"content":"        return financialPlanSet;","lastModifiedDate":"2023-10-16"},{"lineNumber":161,"author":{"gitId":"nikele2001"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":162,"author":{"gitId":"nikele2001"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":163,"author":{"gitId":"Kb-Tay"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":164,"author":{"gitId":"Kb-Tay"},"content":"     * Parses a {@code String aptName} and {@code String aptDateString} into an {@code Appointment}.","lastModifiedDate":"2023-10-17"},{"lineNumber":165,"author":{"gitId":"Kb-Tay"},"content":"     *","lastModifiedDate":"2023-10-17"},{"lineNumber":166,"author":{"gitId":"Kb-Tay"},"content":"     * @param appointmentName The name of the appointment.","lastModifiedDate":"2023-10-20"},{"lineNumber":167,"author":{"gitId":"Kb-Tay"},"content":"     * @param appointmentDateString The appointment date and time.","lastModifiedDate":"2023-10-20"},{"lineNumber":168,"author":{"gitId":"Kb-Tay"},"content":"     * @return The Appointment.","lastModifiedDate":"2023-10-17"},{"lineNumber":169,"author":{"gitId":"Kb-Tay"},"content":"     * @throws ParseException If the given {@code aptName} or {@code aptDateString}.","lastModifiedDate":"2023-10-17"},{"lineNumber":170,"author":{"gitId":"Kb-Tay"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":171,"author":{"gitId":"Kb-Tay"},"content":"    public static Appointment parseAppointment(String appointmentName, String appointmentDateString)","lastModifiedDate":"2023-10-20"},{"lineNumber":172,"author":{"gitId":"Kb-Tay"},"content":"            throws ParseException {","lastModifiedDate":"2023-10-20"},{"lineNumber":173,"author":{"gitId":"Kb-Tay"},"content":"        requireNonNull(appointmentName);","lastModifiedDate":"2023-10-20"},{"lineNumber":174,"author":{"gitId":"Kb-Tay"},"content":"        requireNonNull(appointmentDateString);","lastModifiedDate":"2023-10-20"},{"lineNumber":175,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":176,"author":{"gitId":"Kb-Tay"},"content":"        String trimmedAppointmentName \u003d appointmentName.trim();","lastModifiedDate":"2023-10-20"},{"lineNumber":177,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":178,"author":{"gitId":"Kb-Tay"},"content":"        if (!Appointment.isValidDesc(appointmentName)) {","lastModifiedDate":"2023-10-20"},{"lineNumber":179,"author":{"gitId":"Kb-Tay"},"content":"            throw new ParseException(Appointment.MESSAGE_DESC_CONSTRAINTS);","lastModifiedDate":"2023-10-20"},{"lineNumber":180,"author":{"gitId":"Kb-Tay"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":181,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":182,"author":{"gitId":"Kb-Tay"},"content":"        if (!Appointment.isValidDateFormat(appointmentDateString)) {","lastModifiedDate":"2023-10-20"},{"lineNumber":183,"author":{"gitId":"Kb-Tay"},"content":"            throw new ParseException(Appointment.MESSAGE_DATE_CONSTRAINTS);","lastModifiedDate":"2023-10-20"},{"lineNumber":184,"author":{"gitId":"Kb-Tay"},"content":"        }","lastModifiedDate":"2023-10-20"},{"lineNumber":185,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":186,"author":{"gitId":"Kb-Tay"},"content":"        try {","lastModifiedDate":"2023-10-17"},{"lineNumber":187,"author":{"gitId":"AlyssaPng"},"content":"            LocalDateTime appointmentDate \u003d parseAppointmentDate(appointmentDateString);","lastModifiedDate":"2023-11-11"},{"lineNumber":188,"author":{"gitId":"AlyssaPng"},"content":"            return new Appointment(trimmedAppointmentName, appointmentDate);","lastModifiedDate":"2023-11-11"},{"lineNumber":189,"author":{"gitId":"Kb-Tay"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-10-20"},{"lineNumber":190,"author":{"gitId":"Kb-Tay"},"content":"            throw new ParseException(Appointment.MESSAGE_INVALID_DATE);","lastModifiedDate":"2023-10-20"},{"lineNumber":191,"author":{"gitId":"Kb-Tay"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":192,"author":{"gitId":"Kb-Tay"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":193,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":194,"author":{"gitId":"AlyssaPng"},"content":"    /**","lastModifiedDate":"2023-11-10"},{"lineNumber":195,"author":{"gitId":"AlyssaPng"},"content":"     * Parses a {@code String date} into a {@code LocalDateTime}.","lastModifiedDate":"2023-11-10"},{"lineNumber":196,"author":{"gitId":"AlyssaPng"},"content":"     *","lastModifiedDate":"2023-11-10"},{"lineNumber":197,"author":{"gitId":"AlyssaPng"},"content":"     * @throws ParseException if the given {@code date} is invalid.","lastModifiedDate":"2023-11-10"},{"lineNumber":198,"author":{"gitId":"AlyssaPng"},"content":"     */","lastModifiedDate":"2023-11-10"},{"lineNumber":199,"author":{"gitId":"AlyssaPng"},"content":"    public static LocalDateTime parseAppointmentDate(String appointmentDate) throws ParseException {","lastModifiedDate":"2023-11-11"},{"lineNumber":200,"author":{"gitId":"AlyssaPng"},"content":"        String date \u003d appointmentDate.split(\" \")[0];","lastModifiedDate":"2023-11-11"},{"lineNumber":201,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":202,"author":{"gitId":"AlyssaPng"},"content":"        try {","lastModifiedDate":"2023-11-10"},{"lineNumber":203,"author":{"gitId":"AlyssaPng"},"content":"            YearMonth yearMonth \u003d YearMonth.parse(date, Appointment.DATE_FORMATTER);","lastModifiedDate":"2023-11-11"},{"lineNumber":204,"author":{"gitId":"AlyssaPng"},"content":"            if (!isValidDay(yearMonth, date)) {","lastModifiedDate":"2023-11-10"},{"lineNumber":205,"author":{"gitId":"AlyssaPng"},"content":"                throw new ParseException(Appointment.MESSAGE_INVALID_DATE);","lastModifiedDate":"2023-11-10"},{"lineNumber":206,"author":{"gitId":"AlyssaPng"},"content":"            }","lastModifiedDate":"2023-11-10"},{"lineNumber":207,"author":{"gitId":"AlyssaPng"},"content":"            return Appointment.parseAppointmentDate(appointmentDate);","lastModifiedDate":"2023-11-11"},{"lineNumber":208,"author":{"gitId":"AlyssaPng"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-11-10"},{"lineNumber":209,"author":{"gitId":"AlyssaPng"},"content":"            throw new ParseException(Appointment.MESSAGE_INVALID_DATE);","lastModifiedDate":"2023-11-10"},{"lineNumber":210,"author":{"gitId":"AlyssaPng"},"content":"        }","lastModifiedDate":"2023-11-10"},{"lineNumber":211,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":212,"author":{"gitId":"AlyssaPng"},"content":"    }","lastModifiedDate":"2023-11-10"},{"lineNumber":213,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":214,"author":{"gitId":"Kb-Tay"},"content":"    /**","lastModifiedDate":"2023-10-25"},{"lineNumber":215,"author":{"gitId":"Kb-Tay"},"content":"     * Parses a {@code String date} into a {@code LocalDate}.","lastModifiedDate":"2023-10-25"},{"lineNumber":216,"author":{"gitId":"Kb-Tay"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-10-25"},{"lineNumber":217,"author":{"gitId":"Kb-Tay"},"content":"     *","lastModifiedDate":"2023-10-25"},{"lineNumber":218,"author":{"gitId":"Kb-Tay"},"content":"     * @throws ParseException if the given {@code date} is invalid.","lastModifiedDate":"2023-10-25"},{"lineNumber":219,"author":{"gitId":"Kb-Tay"},"content":"     */","lastModifiedDate":"2023-10-25"},{"lineNumber":220,"author":{"gitId":"Kb-Tay"},"content":"    public static LocalDate parseDate(String date) throws ParseException {","lastModifiedDate":"2023-10-25"},{"lineNumber":221,"author":{"gitId":"Kb-Tay"},"content":"        requireNonNull(date);","lastModifiedDate":"2023-10-24"},{"lineNumber":222,"author":{"gitId":"Kb-Tay"},"content":"        String trimmedDate \u003d date.trim();","lastModifiedDate":"2023-10-24"},{"lineNumber":223,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":224,"author":{"gitId":"AlyssaPng"},"content":"        DateTimeFormatter dateFormatter \u003d Appointment.DATE_FORMATTER;","lastModifiedDate":"2023-11-11"},{"lineNumber":225,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":226,"author":{"gitId":"AlyssaPng"},"content":"        if (!trimmedDate.matches(Appointment.VALIDATION_DATE_REGEX)) {","lastModifiedDate":"2023-11-11"},{"lineNumber":227,"author":{"gitId":"Kb-Tay"},"content":"            throw new ParseException(CompleteCommand.MESSAGE_INVALID_DATE_FORMAT);","lastModifiedDate":"2023-10-26"},{"lineNumber":228,"author":{"gitId":"Kb-Tay"},"content":"        }","lastModifiedDate":"2023-10-24"},{"lineNumber":229,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":230,"author":{"gitId":"Kb-Tay"},"content":"        try {","lastModifiedDate":"2023-10-24"},{"lineNumber":231,"author":{"gitId":"AlyssaPng"},"content":"            YearMonth yearMonth \u003d YearMonth.parse(date, dateFormatter);","lastModifiedDate":"2023-11-10"},{"lineNumber":232,"author":{"gitId":"AlyssaPng"},"content":"            if (!isValidDay(yearMonth, date)) {","lastModifiedDate":"2023-11-10"},{"lineNumber":233,"author":{"gitId":"AlyssaPng"},"content":"                throw new ParseException(CompleteCommand.MESSAGE_INVALID_DATE);","lastModifiedDate":"2023-11-10"},{"lineNumber":234,"author":{"gitId":"AlyssaPng"},"content":"            }","lastModifiedDate":"2023-11-10"},{"lineNumber":235,"author":{"gitId":"AlyssaPng"},"content":"            return LocalDate.parse(date, dateFormatter);","lastModifiedDate":"2023-11-11"},{"lineNumber":236,"author":{"gitId":"Kb-Tay"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-10-24"},{"lineNumber":237,"author":{"gitId":"Kb-Tay"},"content":"            throw new ParseException(CompleteCommand.MESSAGE_INVALID_DATE);","lastModifiedDate":"2023-10-26"},{"lineNumber":238,"author":{"gitId":"Kb-Tay"},"content":"        }","lastModifiedDate":"2023-10-24"},{"lineNumber":239,"author":{"gitId":"Kb-Tay"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":240,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":241,"author":{"gitId":"AlyssaPng"},"content":"    /**","lastModifiedDate":"2023-11-10"},{"lineNumber":242,"author":{"gitId":"AlyssaPng"},"content":"     * Checks if the day of the month in the given user-input date is valid.","lastModifiedDate":"2023-11-10"},{"lineNumber":243,"author":{"gitId":"AlyssaPng"},"content":"     *","lastModifiedDate":"2023-11-10"},{"lineNumber":244,"author":{"gitId":"AlyssaPng"},"content":"     * @param date The String representation of the date in \"dd-MM-yyyy\" format.","lastModifiedDate":"2023-11-10"},{"lineNumber":245,"author":{"gitId":"AlyssaPng"},"content":"     * @return True if the day is within the valid range for the month.","lastModifiedDate":"2023-11-10"},{"lineNumber":246,"author":{"gitId":"AlyssaPng"},"content":"     */","lastModifiedDate":"2023-11-10"},{"lineNumber":247,"author":{"gitId":"AlyssaPng"},"content":"    public static boolean isValidDay(YearMonth yearMonth, String date) {","lastModifiedDate":"2023-11-10"},{"lineNumber":248,"author":{"gitId":"AlyssaPng"},"content":"        int day \u003d Integer.parseInt(date.split(\"-\")[0]);","lastModifiedDate":"2023-11-10"},{"lineNumber":249,"author":{"gitId":"AlyssaPng"},"content":"        return day \u003e\u003d 1 \u0026\u0026 day \u003c\u003d yearMonth.lengthOfMonth();","lastModifiedDate":"2023-11-10"},{"lineNumber":250,"author":{"gitId":"AlyssaPng"},"content":"    }","lastModifiedDate":"2023-11-10"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":252,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":253,"author":{"gitId":"-"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":254,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":255,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":256,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":257,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":258,"author":{"gitId":"-"},"content":"    public static Tag parseTag(String tag) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":259,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2017-05-30"},{"lineNumber":260,"author":{"gitId":"-"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":261,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":262,"author":{"gitId":"-"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":263,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":264,"author":{"gitId":"-"},"content":"        return new Tag(trimmedTag);","lastModifiedDate":"2017-05-30"},{"lineNumber":265,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":268,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2017-03-07"},{"lineNumber":269,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":270,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":271,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2017-05-15"},{"lineNumber":272,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2017-02-11"},{"lineNumber":273,"author":{"gitId":"-"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2017-02-11"},{"lineNumber":274,"author":{"gitId":"-"},"content":"            tagSet.add(parseTag(tagName));","lastModifiedDate":"2017-05-30"},{"lineNumber":275,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":276,"author":{"gitId":"-"},"content":"        return tagSet;","lastModifiedDate":"2017-03-07"},{"lineNumber":277,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":278,"author":{"gitId":"sopa301"},"content":"    /**","lastModifiedDate":"2023-10-24"},{"lineNumber":279,"author":{"gitId":"sopa301"},"content":"     * Validates if a {@code String name} is a valid {@code Name}.","lastModifiedDate":"2023-10-24"},{"lineNumber":280,"author":{"gitId":"sopa301"},"content":"     *","lastModifiedDate":"2023-10-24"},{"lineNumber":281,"author":{"gitId":"sopa301"},"content":"     * @param input String to validate.","lastModifiedDate":"2023-10-24"},{"lineNumber":282,"author":{"gitId":"sopa301"},"content":"     * @throws ParseException if the given string is invalid.","lastModifiedDate":"2023-10-24"},{"lineNumber":283,"author":{"gitId":"sopa301"},"content":"     */","lastModifiedDate":"2023-10-24"},{"lineNumber":284,"author":{"gitId":"sopa301"},"content":"    public static void validateName(String input) throws ParseException {","lastModifiedDate":"2023-10-24"},{"lineNumber":285,"author":{"gitId":"sopa301"},"content":"        if (!Name.isValidName(input)) {","lastModifiedDate":"2023-11-07"},{"lineNumber":286,"author":{"gitId":"sopa301"},"content":"            throw new ParseException(","lastModifiedDate":"2023-10-24"},{"lineNumber":287,"author":{"gitId":"sopa301"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, Name.MESSAGE_CONSTRAINTS));","lastModifiedDate":"2023-10-24"},{"lineNumber":288,"author":{"gitId":"sopa301"},"content":"        }","lastModifiedDate":"2023-10-24"},{"lineNumber":289,"author":{"gitId":"sopa301"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":290,"author":{"gitId":"sopa301"},"content":"    /**","lastModifiedDate":"2023-10-24"},{"lineNumber":291,"author":{"gitId":"sopa301"},"content":"     * Validates if a {@code String financial plan} is a valid name for a {@code FinancialPlan}.","lastModifiedDate":"2023-10-24"},{"lineNumber":292,"author":{"gitId":"sopa301"},"content":"     *","lastModifiedDate":"2023-10-24"},{"lineNumber":293,"author":{"gitId":"sopa301"},"content":"     * @param input String to validate.","lastModifiedDate":"2023-10-24"},{"lineNumber":294,"author":{"gitId":"sopa301"},"content":"     * @throws ParseException if the given string is invalid.","lastModifiedDate":"2023-10-24"},{"lineNumber":295,"author":{"gitId":"sopa301"},"content":"     */","lastModifiedDate":"2023-10-24"},{"lineNumber":296,"author":{"gitId":"sopa301"},"content":"    public static void validateFinancialPlan(String input) throws ParseException {","lastModifiedDate":"2023-10-24"},{"lineNumber":297,"author":{"gitId":"sopa301"},"content":"        if (!FinancialPlan.isValidFinancialPlanName(input)) {","lastModifiedDate":"2023-11-07"},{"lineNumber":298,"author":{"gitId":"sopa301"},"content":"            throw new ParseException(","lastModifiedDate":"2023-10-24"},{"lineNumber":299,"author":{"gitId":"sopa301"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FinancialPlan.MESSAGE_CONSTRAINTS));","lastModifiedDate":"2023-10-24"},{"lineNumber":300,"author":{"gitId":"sopa301"},"content":"        }","lastModifiedDate":"2023-10-24"},{"lineNumber":301,"author":{"gitId":"sopa301"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":302,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":303,"author":{"gitId":"sopa301"},"content":"    /**","lastModifiedDate":"2023-10-24"},{"lineNumber":304,"author":{"gitId":"sopa301"},"content":"     * Validates if a {@code String tag} is a valid name for a {@code Tag}.","lastModifiedDate":"2023-10-24"},{"lineNumber":305,"author":{"gitId":"sopa301"},"content":"     *","lastModifiedDate":"2023-10-24"},{"lineNumber":306,"author":{"gitId":"sopa301"},"content":"     * @param input String to validate.","lastModifiedDate":"2023-10-24"},{"lineNumber":307,"author":{"gitId":"sopa301"},"content":"     * @throws ParseException if the given string is invalid.","lastModifiedDate":"2023-10-24"},{"lineNumber":308,"author":{"gitId":"sopa301"},"content":"     */","lastModifiedDate":"2023-10-24"},{"lineNumber":309,"author":{"gitId":"sopa301"},"content":"    public static void validateTag(String input) throws ParseException {","lastModifiedDate":"2023-10-24"},{"lineNumber":310,"author":{"gitId":"sopa301"},"content":"        if (!Tag.isValidTagName(input)) {","lastModifiedDate":"2023-11-07"},{"lineNumber":311,"author":{"gitId":"sopa301"},"content":"            throw new ParseException(","lastModifiedDate":"2023-10-24"},{"lineNumber":312,"author":{"gitId":"sopa301"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, Tag.MESSAGE_CONSTRAINTS));","lastModifiedDate":"2023-10-24"},{"lineNumber":313,"author":{"gitId":"sopa301"},"content":"        }","lastModifiedDate":"2023-10-24"},{"lineNumber":314,"author":{"gitId":"sopa301"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":315,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"Kb-Tay":55,"AlyssaPng":40,"nikele2001":28,"sopa301":69,"-":123}},{"path":"src/main/java/seedu/address/logic/parser/ScheduleCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Kb-Tay"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-17"},{"lineNumber":2,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":3,"author":{"gitId":"Kb-Tay"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"Kb-Tay"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"Kb-Tay"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_APPOINTMENT;","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"Kb-Tay"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_APPOINTMENT_DATE;","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"Kb-Tay"},"content":"import static seedu.address.logic.parser.ParserUtil.parseAppointment;","lastModifiedDate":"2023-10-20"},{"lineNumber":8,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"Kb-Tay"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-10-20"},{"lineNumber":10,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":11,"author":{"gitId":"Kb-Tay"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"Kb-Tay"},"content":"import seedu.address.logic.commands.ScheduleCommand;","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"Kb-Tay"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-17"},{"lineNumber":14,"author":{"gitId":"Kb-Tay"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2023-10-17"},{"lineNumber":15,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"Kb-Tay"},"content":"/**","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"Kb-Tay"},"content":" * Parses the input arguments and creates a new ScheduleCommand object","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"Kb-Tay"},"content":" */","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"Kb-Tay"},"content":"public class ScheduleCommandParser implements Parser\u003cScheduleCommand\u003e {","lastModifiedDate":"2023-10-17"},{"lineNumber":20,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":21,"author":{"gitId":"Kb-Tay"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":22,"author":{"gitId":"Kb-Tay"},"content":"     * Parses the given {@code String} of arguments in the context of the ScheduleCommand","lastModifiedDate":"2023-10-17"},{"lineNumber":23,"author":{"gitId":"Kb-Tay"},"content":"     * and returns a ScheduleCommand object for execution.","lastModifiedDate":"2023-10-17"},{"lineNumber":24,"author":{"gitId":"Kb-Tay"},"content":"     *","lastModifiedDate":"2023-10-17"},{"lineNumber":25,"author":{"gitId":"Kb-Tay"},"content":"     * @throws ParseException if the user input does not conform to expected format.","lastModifiedDate":"2023-10-17"},{"lineNumber":26,"author":{"gitId":"Kb-Tay"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":27,"author":{"gitId":"Kb-Tay"},"content":"    public ScheduleCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-17"},{"lineNumber":28,"author":{"gitId":"Kb-Tay"},"content":"        requireNonNull(args);","lastModifiedDate":"2023-10-17"},{"lineNumber":29,"author":{"gitId":"Kb-Tay"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-10-17"},{"lineNumber":30,"author":{"gitId":"Kb-Tay"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_APPOINTMENT, PREFIX_APPOINTMENT_DATE);","lastModifiedDate":"2023-10-17"},{"lineNumber":31,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":32,"author":{"gitId":"Kb-Tay"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_APPOINTMENT, PREFIX_APPOINTMENT_DATE)","lastModifiedDate":"2023-10-20"},{"lineNumber":33,"author":{"gitId":"Kb-Tay"},"content":"                || argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2023-10-20"},{"lineNumber":34,"author":{"gitId":"Kb-Tay"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, ScheduleCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-20"},{"lineNumber":35,"author":{"gitId":"Kb-Tay"},"content":"        }","lastModifiedDate":"2023-10-20"},{"lineNumber":36,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":37,"author":{"gitId":"Kb-Tay"},"content":"        Index index;","lastModifiedDate":"2023-10-17"},{"lineNumber":38,"author":{"gitId":"Kb-Tay"},"content":"        try {","lastModifiedDate":"2023-10-17"},{"lineNumber":39,"author":{"gitId":"Kb-Tay"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2023-10-17"},{"lineNumber":40,"author":{"gitId":"Kb-Tay"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-10-17"},{"lineNumber":41,"author":{"gitId":"Kb-Tay"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, ScheduleCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2023-10-20"},{"lineNumber":42,"author":{"gitId":"Kb-Tay"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":43,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":44,"author":{"gitId":"Kb-Tay"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_APPOINTMENT, PREFIX_APPOINTMENT_DATE);","lastModifiedDate":"2023-10-17"},{"lineNumber":45,"author":{"gitId":"Kb-Tay"},"content":"        Appointment appointment \u003d parseAppointment(argMultimap.getValue(PREFIX_APPOINTMENT).get(),","lastModifiedDate":"2023-10-20"},{"lineNumber":46,"author":{"gitId":"Kb-Tay"},"content":"                argMultimap.getValue(PREFIX_APPOINTMENT_DATE).get());","lastModifiedDate":"2023-10-17"},{"lineNumber":47,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":48,"author":{"gitId":"Kb-Tay"},"content":"        assert appointment.value !\u003d null;","lastModifiedDate":"2023-10-22"},{"lineNumber":49,"author":{"gitId":"Kb-Tay"},"content":"        assert appointment.date !\u003d null;","lastModifiedDate":"2023-10-22"},{"lineNumber":50,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":51,"author":{"gitId":"Kb-Tay"},"content":"        return new ScheduleCommand(index, appointment);","lastModifiedDate":"2023-10-17"},{"lineNumber":52,"author":{"gitId":"Kb-Tay"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":53,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":54,"author":{"gitId":"Kb-Tay"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2023-10-20"},{"lineNumber":55,"author":{"gitId":"Kb-Tay"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2023-10-20"},{"lineNumber":56,"author":{"gitId":"Kb-Tay"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":57,"author":{"gitId":"Kb-Tay"},"content":"}","lastModifiedDate":"2023-10-17"}],"authorContributionMap":{"Kb-Tay":57}},{"path":"src/main/java/seedu/address/logic/parser/SortCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jylow"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-19"},{"lineNumber":2,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":3,"author":{"gitId":"jylow"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-19"},{"lineNumber":4,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":5,"author":{"gitId":"jylow"},"content":"import seedu.address.logic.commands.SortCommand;","lastModifiedDate":"2023-10-19"},{"lineNumber":6,"author":{"gitId":"jylow"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-19"},{"lineNumber":7,"author":{"gitId":"jylow"},"content":"import seedu.address.model.person.comparator.SortByAppointmentComparator;","lastModifiedDate":"2023-11-10"},{"lineNumber":8,"author":{"gitId":"jylow"},"content":"import seedu.address.model.person.comparator.SortByNameComparator;","lastModifiedDate":"2023-11-10"},{"lineNumber":9,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":10,"author":{"gitId":"jylow"},"content":"/**","lastModifiedDate":"2023-10-19"},{"lineNumber":11,"author":{"gitId":"jylow"},"content":" * Parses input arguments and creates a new SortCommand object","lastModifiedDate":"2023-10-20"},{"lineNumber":12,"author":{"gitId":"jylow"},"content":" */","lastModifiedDate":"2023-10-19"},{"lineNumber":13,"author":{"gitId":"jylow"},"content":"public class SortCommandParser implements Parser\u003cSortCommand\u003e {","lastModifiedDate":"2023-10-19"},{"lineNumber":14,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":15,"author":{"gitId":"jylow"},"content":"    /**","lastModifiedDate":"2023-10-19"},{"lineNumber":16,"author":{"gitId":"jylow"},"content":"     * Parses the given {@code String} of arguments in the context of the SortCommand","lastModifiedDate":"2023-10-20"},{"lineNumber":17,"author":{"gitId":"jylow"},"content":"     * and returns a SortCommand object for execution.","lastModifiedDate":"2023-10-20"},{"lineNumber":18,"author":{"gitId":"jylow"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-10-19"},{"lineNumber":19,"author":{"gitId":"jylow"},"content":"     */","lastModifiedDate":"2023-10-19"},{"lineNumber":20,"author":{"gitId":"jylow"},"content":"    public SortCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-19"},{"lineNumber":21,"author":{"gitId":"jylow"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2023-10-19"},{"lineNumber":22,"author":{"gitId":"jylow"},"content":"        switch (trimmedArgs) {","lastModifiedDate":"2023-11-10"},{"lineNumber":23,"author":{"gitId":"jylow"},"content":"        case \"name\":","lastModifiedDate":"2023-11-10"},{"lineNumber":24,"author":{"gitId":"jylow"},"content":"            return new SortCommand(new SortByNameComparator());","lastModifiedDate":"2023-10-19"},{"lineNumber":25,"author":{"gitId":"jylow"},"content":"        case \"appointment\":","lastModifiedDate":"2023-11-10"},{"lineNumber":26,"author":{"gitId":"jylow"},"content":"            return new SortCommand(new SortByAppointmentComparator());","lastModifiedDate":"2023-10-19"},{"lineNumber":27,"author":{"gitId":"jylow"},"content":"        default:","lastModifiedDate":"2023-11-10"},{"lineNumber":28,"author":{"gitId":"jylow"},"content":"            throw new ParseException(","lastModifiedDate":"2023-10-19"},{"lineNumber":29,"author":{"gitId":"jylow"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, SortCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-20"},{"lineNumber":30,"author":{"gitId":"jylow"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":31,"author":{"gitId":"jylow"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":32,"author":{"gitId":"jylow"},"content":"}","lastModifiedDate":"2023-10-19"}],"authorContributionMap":{"jylow":32}},{"path":"src/main/java/seedu/address/logic/parser/Validator.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sopa301"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-11-10"},{"lineNumber":2,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":3,"author":{"gitId":"sopa301"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-11-10"},{"lineNumber":4,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":5,"author":{"gitId":"sopa301"},"content":"/**","lastModifiedDate":"2023-11-10"},{"lineNumber":6,"author":{"gitId":"sopa301"},"content":" * Functional interface for validating input strings.","lastModifiedDate":"2023-11-10"},{"lineNumber":7,"author":{"gitId":"sopa301"},"content":" */","lastModifiedDate":"2023-11-10"},{"lineNumber":8,"author":{"gitId":"sopa301"},"content":"@FunctionalInterface","lastModifiedDate":"2023-11-10"},{"lineNumber":9,"author":{"gitId":"sopa301"},"content":"public interface Validator {","lastModifiedDate":"2023-11-10"},{"lineNumber":10,"author":{"gitId":"sopa301"},"content":"    /**","lastModifiedDate":"2023-11-10"},{"lineNumber":11,"author":{"gitId":"sopa301"},"content":"     * Validates the given string.","lastModifiedDate":"2023-11-10"},{"lineNumber":12,"author":{"gitId":"sopa301"},"content":"     *","lastModifiedDate":"2023-11-10"},{"lineNumber":13,"author":{"gitId":"sopa301"},"content":"     * @param string value to validate.","lastModifiedDate":"2023-11-10"},{"lineNumber":14,"author":{"gitId":"sopa301"},"content":"     * @throws ParseException if the string does not meet the requirements.","lastModifiedDate":"2023-11-10"},{"lineNumber":15,"author":{"gitId":"sopa301"},"content":"     */","lastModifiedDate":"2023-11-10"},{"lineNumber":16,"author":{"gitId":"sopa301"},"content":"    void validate(String string) throws ParseException;","lastModifiedDate":"2023-11-10"},{"lineNumber":17,"author":{"gitId":"sopa301"},"content":"}","lastModifiedDate":"2023-11-10"}],"authorContributionMap":{"sopa301":17}},{"path":"src/main/java/seedu/address/model/AddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"Kb-Tay"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-10-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.UniquePersonList;","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"AlyssaPng"},"content":"import seedu.address.model.person.gatheremail.GatherEmailPrompt;","lastModifiedDate":"2023-10-23"},{"lineNumber":13,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Wraps all data at the address-book level","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Duplicates are not allowed (by .isSamePerson comparison)","lastModifiedDate":"2018-04-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class AddressBook implements ReadOnlyAddressBook {","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final UniquePersonList persons;","lastModifiedDate":"2016-08-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2019-05-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2016-10-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     *   among constructors.","lastModifiedDate":"2016-10-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    {","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        persons \u003d new UniquePersonList();","lastModifiedDate":"2016-08-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public AddressBook() {}","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Creates an AddressBook using the Persons in the {@code toBeCopied}","lastModifiedDate":"2018-03-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public AddressBook(ReadOnlyAddressBook toBeCopied) {","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2016-12-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2016-12-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    //// list overwrite operations","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Replaces the contents of the person list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        this.persons.setPersons(persons);","lastModifiedDate":"2016-10-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code AddressBook} with {@code newData}.","lastModifiedDate":"2017-08-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyAddressBook newData) {","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        requireNonNull(newData);","lastModifiedDate":"2017-05-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        setPersons(newData.getPersonList());","lastModifiedDate":"2018-03-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    //// person-level operations","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return persons.contains(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Adds a person to the address book.","lastModifiedDate":"2016-09-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * The person must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void addPerson(Person p) {","lastModifiedDate":"2018-08-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        persons.add(p);","lastModifiedDate":"2018-03-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2018-01-10"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        requireNonNull(editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        persons.setPerson(target, editedPerson);","lastModifiedDate":"2018-03-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Removes {@code key} from this {@code AddressBook}.","lastModifiedDate":"2017-08-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public void removePerson(Person key) {","lastModifiedDate":"2018-08-07"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        persons.remove(key);","lastModifiedDate":"2018-02-28"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"AlyssaPng"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":99,"author":{"gitId":"AlyssaPng"},"content":"     * Gathers the {@code persons} emails with {@code prompt} from this {@code AddressBook}.","lastModifiedDate":"2023-10-26"},{"lineNumber":100,"author":{"gitId":"AlyssaPng"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":101,"author":{"gitId":"AlyssaPng"},"content":"    public String gatherEmails(GatherEmailPrompt prompt) {","lastModifiedDate":"2023-10-23"},{"lineNumber":102,"author":{"gitId":"AlyssaPng"},"content":"        return persons.gatherEmails(prompt);","lastModifiedDate":"2023-10-18"},{"lineNumber":103,"author":{"gitId":"AlyssaPng"},"content":"    };","lastModifiedDate":"2023-10-18"},{"lineNumber":104,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":105,"author":{"gitId":"Kb-Tay"},"content":"    public void clearAppointments(LocalDate date) {","lastModifiedDate":"2023-11-10"},{"lineNumber":106,"author":{"gitId":"Kb-Tay"},"content":"        persons.clearAppointments(date);","lastModifiedDate":"2023-11-10"},{"lineNumber":107,"author":{"gitId":"Kb-Tay"},"content":"    }","lastModifiedDate":"2023-11-10"},{"lineNumber":108,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":109,"author":{"gitId":"Kb-Tay"},"content":"    public boolean hasAppointmentWithDate(LocalDate date) {","lastModifiedDate":"2023-11-10"},{"lineNumber":110,"author":{"gitId":"Kb-Tay"},"content":"        return persons.hasAppointmentWithDate(date);","lastModifiedDate":"2023-11-10"},{"lineNumber":111,"author":{"gitId":"Kb-Tay"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":112,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    //// util methods","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"                .add(\"persons\", persons)","lastModifiedDate":"2019-02-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        return persons.asUnmodifiableObservableList();","lastModifiedDate":"2018-04-05"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-01"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-01"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        if (!(other instanceof AddressBook)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        AddressBook otherAddressBook \u003d (AddressBook) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        return persons.equals(otherAddressBook.persons);","lastModifiedDate":"2023-07-13"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        return persons.hashCode();","lastModifiedDate":"2018-03-29"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":146,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Kb-Tay":9,"AlyssaPng":9,"-":128}},{"path":"src/main/java/seedu/address/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"Kb-Tay"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-10-25"},{"lineNumber":5,"author":{"gitId":"jylow"},"content":"import java.util.Comparator;","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"nikele2001"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2023-10-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":12,"author":{"gitId":"AlyssaPng"},"content":"import seedu.address.model.person.gatheremail.GatherEmailPrompt;","lastModifiedDate":"2023-10-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2017-08-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    Predicate\u003cPerson\u003e PREDICATE_SHOW_ALL_PERSONS \u003d unused -\u003e true;","lastModifiedDate":"2018-01-10"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    void setAddressBookFilePath(Path addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Replaces address book data with the data in {@code addressBook}.","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    void setAddressBook(ReadOnlyAddressBook addressBook);","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /** Returns the AddressBook */","lastModifiedDate":"2016-09-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    boolean hasPerson(Person person);","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * Deletes the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * The person must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    void deletePerson(Person target);","lastModifiedDate":"2018-08-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * Adds the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * {@code person} must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    void addPerson(Person person);","lastModifiedDate":"2018-08-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    void setPerson(Person target, Person editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered person list */","lastModifiedDate":"2017-09-01"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":86,"author":{"gitId":"nikele2001"},"content":"    /** Returns an unmodifiable view of the appointment list */","lastModifiedDate":"2023-10-23"},{"lineNumber":87,"author":{"gitId":"nikele2001"},"content":"    ObservableList\u003cAppointment\u003e getAppointmentList();","lastModifiedDate":"2023-10-23"},{"lineNumber":88,"author":{"gitId":"nikele2001"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * Updates the filter of the filtered person list to filter by the given {@code predicate}.","lastModifiedDate":"2017-08-05"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate);","lastModifiedDate":"2018-01-10"},{"lineNumber":94,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":95,"author":{"gitId":"jylow"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":96,"author":{"gitId":"jylow"},"content":"     * Sorts the filtered person list to sort by the given {@code comparator}.","lastModifiedDate":"2023-10-18"},{"lineNumber":97,"author":{"gitId":"jylow"},"content":"     * @param comparator comparator to be sorted with.","lastModifiedDate":"2023-10-18"},{"lineNumber":98,"author":{"gitId":"jylow"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":99,"author":{"gitId":"jylow"},"content":"    void sortFilteredPersonList(Comparator\u003cPerson\u003e comparator);","lastModifiedDate":"2023-10-17"},{"lineNumber":100,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":101,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":102,"author":{"gitId":"AlyssaPng"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":103,"author":{"gitId":"AlyssaPng"},"content":"     * Gathers the emails of person with the given prompt.","lastModifiedDate":"2023-10-18"},{"lineNumber":104,"author":{"gitId":"AlyssaPng"},"content":"     * @param prompt The user input for command.","lastModifiedDate":"2023-11-10"},{"lineNumber":105,"author":{"gitId":"AlyssaPng"},"content":"     * @return The String representation of all the gathered emails.","lastModifiedDate":"2023-10-18"},{"lineNumber":106,"author":{"gitId":"AlyssaPng"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":107,"author":{"gitId":"AlyssaPng"},"content":"    String gatherEmails(GatherEmailPrompt prompt);","lastModifiedDate":"2023-10-23"},{"lineNumber":108,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":109,"author":{"gitId":"Kb-Tay"},"content":"    void clearAppointments(LocalDate date);","lastModifiedDate":"2023-11-10"},{"lineNumber":110,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":111,"author":{"gitId":"Kb-Tay"},"content":"    boolean hasAppointmentWithDate(LocalDate date);","lastModifiedDate":"2023-11-10"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"Kb-Tay":5,"nikele2001":4,"AlyssaPng":7,"jylow":9,"-":87}},{"path":"src/main/java/seedu/address/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"Kb-Tay"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-10-25"},{"lineNumber":8,"author":{"gitId":"jylow"},"content":"import java.util.Comparator;","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"nikele2001"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-10-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":15,"author":{"gitId":"jylow"},"content":"import javafx.collections.transformation.SortedList;","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":18,"author":{"gitId":"nikele2001"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2023-10-23"},{"lineNumber":19,"author":{"gitId":"nikele2001"},"content":"import seedu.address.model.appointment.ScheduleItem;","lastModifiedDate":"2023-10-23"},{"lineNumber":20,"author":{"gitId":"nikele2001"},"content":"import seedu.address.model.appointment.SortByAppointmentDateComparator;","lastModifiedDate":"2023-10-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":22,"author":{"gitId":"AlyssaPng"},"content":"import seedu.address.model.person.gatheremail.GatherEmailPrompt;","lastModifiedDate":"2023-10-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Represents the in-memory model of the address book data.","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private final FilteredList\u003cPerson\u003e filteredPersons;","lastModifiedDate":"2018-01-10"},{"lineNumber":33,"author":{"gitId":"jylow"},"content":"    private SortedList\u003cPerson\u003e sortedPersons;","lastModifiedDate":"2023-10-17"},{"lineNumber":34,"author":{"gitId":"nikele2001"},"content":"    private ObservableList\u003cAppointment\u003e observableAppointments;","lastModifiedDate":"2023-10-23"},{"lineNumber":35,"author":{"gitId":"nikele2001"},"content":"    private SortedList\u003cAppointment\u003e sortedAppointments;","lastModifiedDate":"2023-10-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Initializes a ModelManager with the given addressBook and userPrefs.","lastModifiedDate":"2016-12-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public ModelManager(ReadOnlyAddressBook addressBook, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        requireAllNonNull(addressBook, userPrefs);","lastModifiedDate":"2017-05-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        logger.fine(\"Initializing with address book: \" + addressBook + \" and user prefs \" + userPrefs);","lastModifiedDate":"2016-12-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        this.addressBook \u003d new AddressBook(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":47,"author":{"gitId":"jylow"},"content":"        sortedPersons \u003d new SortedList\u003c\u003e(this.addressBook.getPersonList());","lastModifiedDate":"2023-10-17"},{"lineNumber":48,"author":{"gitId":"jylow"},"content":"        filteredPersons \u003d new FilteredList\u003c\u003e(sortedPersons);","lastModifiedDate":"2023-10-17"},{"lineNumber":49,"author":{"gitId":"nikele2001"},"content":"        observableAppointments \u003d FXCollections.observableArrayList();","lastModifiedDate":"2023-10-23"},{"lineNumber":50,"author":{"gitId":"nikele2001"},"content":"        sortedAppointments \u003d new SortedList\u003c\u003e(observableAppointments,","lastModifiedDate":"2023-10-23"},{"lineNumber":51,"author":{"gitId":"nikele2001"},"content":"                                              new SortByAppointmentDateComparator());","lastModifiedDate":"2023-10-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        this(new AddressBook(), new UserPrefs());","lastModifiedDate":"2016-09-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        return userPrefs.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public void setAddressBook(ReadOnlyAddressBook addressBook) {","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        this.addressBook.resetData(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":98,"author":{"gitId":"nikele2001"},"content":"        setAppointmentList();","lastModifiedDate":"2023-10-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2016-09-21"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        return addressBook.hasPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public void deletePerson(Person target) {","lastModifiedDate":"2018-08-15"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        addressBook.removePerson(target);","lastModifiedDate":"2019-01-25"},{"lineNumber":115,"author":{"gitId":"nikele2001"},"content":"        setAppointmentList();","lastModifiedDate":"2023-10-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public void addPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        addressBook.addPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":122,"author":{"gitId":"nikele2001"},"content":"        setAppointmentList();","lastModifiedDate":"2023-10-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2017-06-07"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        addressBook.setPerson(target, editedPerson);","lastModifiedDate":"2019-01-25"},{"lineNumber":129,"author":{"gitId":"nikele2001"},"content":"        setAppointmentList();","lastModifiedDate":"2023-10-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":132,"author":{"gitId":"AlyssaPng"},"content":"    @Override","lastModifiedDate":"2023-10-18"},{"lineNumber":133,"author":{"gitId":"AlyssaPng"},"content":"    public String gatherEmails(GatherEmailPrompt prompt) {","lastModifiedDate":"2023-10-23"},{"lineNumber":134,"author":{"gitId":"AlyssaPng"},"content":"        return addressBook.gatherEmails(prompt);","lastModifiedDate":"2023-10-18"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Person List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-10-12"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the list of {@code Person} backed by the internal list of","lastModifiedDate":"2018-01-10"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2018-06-11"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        return filteredPersons;","lastModifiedDate":"2018-12-09"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":148,"author":{"gitId":"nikele2001"},"content":"    /**","lastModifiedDate":"2023-10-23"},{"lineNumber":149,"author":{"gitId":"nikele2001"},"content":"     * Returns an unmodifiable view of the list of {@code Person} backed by the internal list of","lastModifiedDate":"2023-10-23"},{"lineNumber":150,"author":{"gitId":"nikele2001"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2023-10-23"},{"lineNumber":151,"author":{"gitId":"nikele2001"},"content":"     */","lastModifiedDate":"2023-10-23"},{"lineNumber":152,"author":{"gitId":"nikele2001"},"content":"    @Override","lastModifiedDate":"2023-10-23"},{"lineNumber":153,"author":{"gitId":"nikele2001"},"content":"    public SortedList\u003cAppointment\u003e getAppointmentList() {","lastModifiedDate":"2023-10-23"},{"lineNumber":154,"author":{"gitId":"nikele2001"},"content":"        setAppointmentList();","lastModifiedDate":"2023-10-23"},{"lineNumber":155,"author":{"gitId":"nikele2001"},"content":"        return sortedAppointments;","lastModifiedDate":"2023-10-23"},{"lineNumber":156,"author":{"gitId":"nikele2001"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":157,"author":{"gitId":"nikele2001"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":158,"author":{"gitId":"nikele2001"},"content":"    public void setAppointmentList() {","lastModifiedDate":"2023-10-23"},{"lineNumber":159,"author":{"gitId":"nikele2001"},"content":"        observableAppointments.clear();","lastModifiedDate":"2023-10-23"},{"lineNumber":160,"author":{"gitId":"nikele2001"},"content":"        // appointmentList.add(new Appointment(\"appointment123\", LocalDateTime.now()));","lastModifiedDate":"2023-10-23"},{"lineNumber":161,"author":{"gitId":"nikele2001"},"content":"        for (int i \u003d 0; i \u003c filteredPersons.size(); i++) {","lastModifiedDate":"2023-10-23"},{"lineNumber":162,"author":{"gitId":"nikele2001"},"content":"            ScheduleItem appt \u003d filteredPersons.get(i).getAppointment();","lastModifiedDate":"2023-10-23"},{"lineNumber":163,"author":{"gitId":"nikele2001"},"content":"            if (appt instanceof Appointment) {","lastModifiedDate":"2023-10-23"},{"lineNumber":164,"author":{"gitId":"nikele2001"},"content":"                Appointment tmp \u003d (Appointment) appt;","lastModifiedDate":"2023-10-24"},{"lineNumber":165,"author":{"gitId":"nikele2001"},"content":"                tmp.setPerson(filteredPersons.get(i));","lastModifiedDate":"2023-10-24"},{"lineNumber":166,"author":{"gitId":"nikele2001"},"content":"                observableAppointments.add(tmp);","lastModifiedDate":"2023-10-24"},{"lineNumber":167,"author":{"gitId":"nikele2001"},"content":"            }","lastModifiedDate":"2023-10-23"},{"lineNumber":168,"author":{"gitId":"nikele2001"},"content":"        }","lastModifiedDate":"2023-10-23"},{"lineNumber":169,"author":{"gitId":"nikele2001"},"content":"        sortedAppointments.setComparator(new SortByAppointmentDateComparator());","lastModifiedDate":"2023-10-24"},{"lineNumber":170,"author":{"gitId":"nikele2001"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":171,"author":{"gitId":"nikele2001"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":172,"author":{"gitId":"Kb-Tay"},"content":"    @Override","lastModifiedDate":"2023-10-24"},{"lineNumber":173,"author":{"gitId":"Kb-Tay"},"content":"    public void clearAppointments(LocalDate date) {","lastModifiedDate":"2023-11-10"},{"lineNumber":174,"author":{"gitId":"Kb-Tay"},"content":"        addressBook.clearAppointments(date);","lastModifiedDate":"2023-11-10"},{"lineNumber":175,"author":{"gitId":"Kb-Tay"},"content":"        setAppointmentList();","lastModifiedDate":"2023-10-24"},{"lineNumber":176,"author":{"gitId":"Kb-Tay"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":177,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":178,"author":{"gitId":"Kb-Tay"},"content":"    @Override","lastModifiedDate":"2023-11-10"},{"lineNumber":179,"author":{"gitId":"Kb-Tay"},"content":"    public boolean hasAppointmentWithDate(LocalDate date) {","lastModifiedDate":"2023-11-10"},{"lineNumber":180,"author":{"gitId":"Kb-Tay"},"content":"        return addressBook.hasAppointmentWithDate(date);","lastModifiedDate":"2023-11-10"},{"lineNumber":181,"author":{"gitId":"Kb-Tay"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":182,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        filteredPersons.setPredicate(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":187,"author":{"gitId":"nikele2001"},"content":"        setAppointmentList();","lastModifiedDate":"2023-10-24"},{"lineNumber":188,"author":{"gitId":"nikele2001"},"content":"        filteredPersons.setPredicate(predicate);","lastModifiedDate":"2023-10-24"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":191,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":192,"author":{"gitId":"jylow"},"content":"    @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":193,"author":{"gitId":"jylow"},"content":"    public void sortFilteredPersonList(Comparator\u003cPerson\u003e comparator) {","lastModifiedDate":"2023-10-17"},{"lineNumber":194,"author":{"gitId":"jylow"},"content":"        requireNonNull(comparator);","lastModifiedDate":"2023-10-17"},{"lineNumber":195,"author":{"gitId":"jylow"},"content":"        sortedPersons.setComparator(comparator);","lastModifiedDate":"2023-10-17"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-07-13"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":201,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        if (!(other instanceof ModelManager)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":206,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        ModelManager otherModelManager \u003d (ModelManager) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        return addressBook.equals(otherModelManager.addressBook)","lastModifiedDate":"2023-07-13"},{"lineNumber":211,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(otherModelManager.userPrefs)","lastModifiedDate":"2023-07-13"},{"lineNumber":212,"author":{"gitId":"-"},"content":"                \u0026\u0026 filteredPersons.equals(otherModelManager.filteredPersons);","lastModifiedDate":"2023-07-13"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":215,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Kb-Tay":12,"nikele2001":39,"AlyssaPng":4,"jylow":10,"-":150}},{"path":"src/main/java/seedu/address/model/appointment/Appointment.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Kb-Tay"},"content":"package seedu.address.model.appointment;","lastModifiedDate":"2023-10-17"},{"lineNumber":2,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":3,"author":{"gitId":"Kb-Tay"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-19"},{"lineNumber":4,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":5,"author":{"gitId":"Kb-Tay"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-10-25"},{"lineNumber":6,"author":{"gitId":"Kb-Tay"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"Kb-Tay"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"Kb-Tay"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-10-20"},{"lineNumber":9,"author":{"gitId":"Kb-Tay"},"content":"import java.util.Objects;","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"Kb-Tay"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"Kb-Tay"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"Kb-Tay"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":14,"author":{"gitId":"Kb-Tay"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-24"},{"lineNumber":15,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":16,"author":{"gitId":"Kb-Tay"},"content":"/**","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"Kb-Tay"},"content":" * Represents an Appointment in the address book.","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"Kb-Tay"},"content":" */","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"Kb-Tay"},"content":"public class Appointment extends ScheduleItem implements Comparable\u003cScheduleItem\u003e {","lastModifiedDate":"2023-10-22"},{"lineNumber":20,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":21,"author":{"gitId":"Kb-Tay"},"content":"    public static final String MESSAGE_DATE_CONSTRAINTS \u003d \"Input Date should be in format of dd-MM-yyyy HH:mm\";","lastModifiedDate":"2023-10-20"},{"lineNumber":22,"author":{"gitId":"Kb-Tay"},"content":"    public static final String MESSAGE_INVALID_DATE \u003d \"Please ensure you input a valid date and time\";","lastModifiedDate":"2023-10-20"},{"lineNumber":23,"author":{"gitId":"Kb-Tay"},"content":"    public static final String MESSAGE_DESC_CONSTRAINTS \u003d \"Appointment description should only contain alphanumeric \"","lastModifiedDate":"2023-10-20"},{"lineNumber":24,"author":{"gitId":"Kb-Tay"},"content":"            + \"characters and spaces, and it should not be blank\";","lastModifiedDate":"2023-10-20"},{"lineNumber":25,"author":{"gitId":"Kb-Tay"},"content":"    public static final String MESSAGE_APT_CONSTRAINTS \u003d \"Invalid appointment string. \"","lastModifiedDate":"2023-10-17"},{"lineNumber":26,"author":{"gitId":"Kb-Tay"},"content":"            + \"Should be (description), (date) (time)\";","lastModifiedDate":"2023-10-17"},{"lineNumber":27,"author":{"gitId":"AlyssaPng"},"content":"    public static final String VALIDATION_DATE_TIME_REGEX \u003d \"\\\\d{2}-\\\\d{2}-\\\\d{4} \\\\d{2}:\\\\d{2}\";","lastModifiedDate":"2023-11-11"},{"lineNumber":28,"author":{"gitId":"AlyssaPng"},"content":"    public static final String VALIDATION_DATE_REGEX \u003d \"\\\\d{2}-\\\\d{2}-\\\\d{4}\";","lastModifiedDate":"2023-11-11"},{"lineNumber":29,"author":{"gitId":"Kb-Tay"},"content":"    public static final String VALIDATION_DESC_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2023-10-20"},{"lineNumber":30,"author":{"gitId":"Kb-Tay"},"content":"    public static final String VALIDATION_APT_REGEX \u003d \"^([\\\\p{Alnum}][\\\\p{Alnum} ]*), \"","lastModifiedDate":"2023-10-20"},{"lineNumber":31,"author":{"gitId":"Kb-Tay"},"content":"            + \"(\\\\d{2}-\\\\d{2}-\\\\d{4} \\\\d{2}:\\\\d{2})$\";","lastModifiedDate":"2023-10-20"},{"lineNumber":32,"author":{"gitId":"AlyssaPng"},"content":"    public static final DateTimeFormatter DATE_TIME_FORMATTER \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy HH:mm\");","lastModifiedDate":"2023-11-11"},{"lineNumber":33,"author":{"gitId":"AlyssaPng"},"content":"    public static final DateTimeFormatter DATE_FORMATTER \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy\");","lastModifiedDate":"2023-11-11"},{"lineNumber":34,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":35,"author":{"gitId":"Kb-Tay"},"content":"    public final String value;","lastModifiedDate":"2023-10-17"},{"lineNumber":36,"author":{"gitId":"Kb-Tay"},"content":"    public final LocalDateTime date;","lastModifiedDate":"2023-10-17"},{"lineNumber":37,"author":{"gitId":"Kb-Tay"},"content":"    private Person person;","lastModifiedDate":"2023-10-24"},{"lineNumber":38,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":39,"author":{"gitId":"Kb-Tay"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":40,"author":{"gitId":"Kb-Tay"},"content":"     * Constructs a {@code Appointment}","lastModifiedDate":"2023-10-17"},{"lineNumber":41,"author":{"gitId":"Kb-Tay"},"content":"     *","lastModifiedDate":"2023-10-17"},{"lineNumber":42,"author":{"gitId":"Kb-Tay"},"content":"     * @param value A valid description of the Appointment.","lastModifiedDate":"2023-10-17"},{"lineNumber":43,"author":{"gitId":"Kb-Tay"},"content":"     * @param date A valid LocalDateTime object representing Appointment date.","lastModifiedDate":"2023-10-17"},{"lineNumber":44,"author":{"gitId":"Kb-Tay"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":45,"author":{"gitId":"Kb-Tay"},"content":"    public Appointment(String value, LocalDateTime date) {","lastModifiedDate":"2023-10-17"},{"lineNumber":46,"author":{"gitId":"Kb-Tay"},"content":"        requireNonNull(value);","lastModifiedDate":"2023-10-19"},{"lineNumber":47,"author":{"gitId":"Kb-Tay"},"content":"        this.value \u003d value;","lastModifiedDate":"2023-10-17"},{"lineNumber":48,"author":{"gitId":"Kb-Tay"},"content":"        this.date \u003d date;","lastModifiedDate":"2023-10-17"},{"lineNumber":49,"author":{"gitId":"Kb-Tay"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":50,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":51,"author":{"gitId":"nikele2001"},"content":"    public String getName() {","lastModifiedDate":"2023-10-23"},{"lineNumber":52,"author":{"gitId":"nikele2001"},"content":"        return this.value;","lastModifiedDate":"2023-10-23"},{"lineNumber":53,"author":{"gitId":"nikele2001"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":54,"author":{"gitId":"nikele2001"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":55,"author":{"gitId":"nikele2001"},"content":"    public LocalDateTime getDateTime() {","lastModifiedDate":"2023-10-23"},{"lineNumber":56,"author":{"gitId":"nikele2001"},"content":"        return this.date;","lastModifiedDate":"2023-10-23"},{"lineNumber":57,"author":{"gitId":"nikele2001"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":58,"author":{"gitId":"Kb-Tay"},"content":"    public Person getPerson() {","lastModifiedDate":"2023-10-24"},{"lineNumber":59,"author":{"gitId":"Kb-Tay"},"content":"        return this.person;","lastModifiedDate":"2023-10-24"},{"lineNumber":60,"author":{"gitId":"Kb-Tay"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":61,"author":{"gitId":"Kb-Tay"},"content":"    @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":62,"author":{"gitId":"Kb-Tay"},"content":"    public String toString() {","lastModifiedDate":"2023-10-17"},{"lineNumber":63,"author":{"gitId":"AlyssaPng"},"content":"        return value + \", \" + date.format(DATE_TIME_FORMATTER);","lastModifiedDate":"2023-11-11"},{"lineNumber":64,"author":{"gitId":"Kb-Tay"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":65,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":66,"author":{"gitId":"Kb-Tay"},"content":"    @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":67,"author":{"gitId":"Kb-Tay"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-17"},{"lineNumber":68,"author":{"gitId":"Kb-Tay"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-17"},{"lineNumber":69,"author":{"gitId":"Kb-Tay"},"content":"            return true;","lastModifiedDate":"2023-10-17"},{"lineNumber":70,"author":{"gitId":"Kb-Tay"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":71,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":72,"author":{"gitId":"Kb-Tay"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-17"},{"lineNumber":73,"author":{"gitId":"Kb-Tay"},"content":"        if (!(other instanceof Appointment)) {","lastModifiedDate":"2023-10-17"},{"lineNumber":74,"author":{"gitId":"Kb-Tay"},"content":"            return false;","lastModifiedDate":"2023-10-17"},{"lineNumber":75,"author":{"gitId":"Kb-Tay"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":76,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":77,"author":{"gitId":"Kb-Tay"},"content":"        Appointment otherAppointment \u003d (Appointment) other;","lastModifiedDate":"2023-10-17"},{"lineNumber":78,"author":{"gitId":"Kb-Tay"},"content":"        return value.equals(otherAppointment.value)","lastModifiedDate":"2023-10-17"},{"lineNumber":79,"author":{"gitId":"Kb-Tay"},"content":"                \u0026\u0026 date.equals(otherAppointment.date);","lastModifiedDate":"2023-10-17"},{"lineNumber":80,"author":{"gitId":"Kb-Tay"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":81,"author":{"gitId":"Kb-Tay"},"content":"    @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":82,"author":{"gitId":"Kb-Tay"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-17"},{"lineNumber":83,"author":{"gitId":"Kb-Tay"},"content":"        return Objects.hash(value, date);","lastModifiedDate":"2023-10-17"},{"lineNumber":84,"author":{"gitId":"Kb-Tay"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":85,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":86,"author":{"gitId":"Kb-Tay"},"content":"    /**","lastModifiedDate":"2023-10-20"},{"lineNumber":87,"author":{"gitId":"Kb-Tay"},"content":"     * Returns true if given string is valid appointment description.","lastModifiedDate":"2023-10-20"},{"lineNumber":88,"author":{"gitId":"Kb-Tay"},"content":"     */","lastModifiedDate":"2023-10-20"},{"lineNumber":89,"author":{"gitId":"Kb-Tay"},"content":"    public static boolean isValidDesc(String desc) {","lastModifiedDate":"2023-10-20"},{"lineNumber":90,"author":{"gitId":"Kb-Tay"},"content":"        requireNonNull(desc);","lastModifiedDate":"2023-10-20"},{"lineNumber":91,"author":{"gitId":"Kb-Tay"},"content":"        return desc.matches(VALIDATION_DESC_REGEX);","lastModifiedDate":"2023-10-20"},{"lineNumber":92,"author":{"gitId":"Kb-Tay"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":93,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":94,"author":{"gitId":"Kb-Tay"},"content":"    /**","lastModifiedDate":"2023-10-20"},{"lineNumber":95,"author":{"gitId":"Kb-Tay"},"content":"     * Returns true if given string is valid date time.","lastModifiedDate":"2023-10-20"},{"lineNumber":96,"author":{"gitId":"Kb-Tay"},"content":"     */","lastModifiedDate":"2023-10-20"},{"lineNumber":97,"author":{"gitId":"Kb-Tay"},"content":"    public static boolean isValidDateFormat(String date) {","lastModifiedDate":"2023-10-20"},{"lineNumber":98,"author":{"gitId":"Kb-Tay"},"content":"        requireNonNull(date);","lastModifiedDate":"2023-10-20"},{"lineNumber":99,"author":{"gitId":"AlyssaPng"},"content":"        return date.matches(VALIDATION_DATE_TIME_REGEX);","lastModifiedDate":"2023-11-11"},{"lineNumber":100,"author":{"gitId":"Kb-Tay"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":101,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":102,"author":{"gitId":"Kb-Tay"},"content":"    /**","lastModifiedDate":"2023-10-20"},{"lineNumber":103,"author":{"gitId":"Kb-Tay"},"content":"     * Returns true if given string is valid appointment.","lastModifiedDate":"2023-10-20"},{"lineNumber":104,"author":{"gitId":"Kb-Tay"},"content":"     */","lastModifiedDate":"2023-10-20"},{"lineNumber":105,"author":{"gitId":"Kb-Tay"},"content":"    public static boolean isValidAppointment(String appointment) {","lastModifiedDate":"2023-10-17"},{"lineNumber":106,"author":{"gitId":"Kb-Tay"},"content":"        requireNonNull(appointment);","lastModifiedDate":"2023-10-20"},{"lineNumber":107,"author":{"gitId":"Kb-Tay"},"content":"        return appointment.matches(VALIDATION_APT_REGEX);","lastModifiedDate":"2023-10-17"},{"lineNumber":108,"author":{"gitId":"Kb-Tay"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":109,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":110,"author":{"gitId":"Kb-Tay"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":111,"author":{"gitId":"Kb-Tay"},"content":"     * Returns the LocaleDateTime object representing the date and time of the Appointment.","lastModifiedDate":"2023-10-17"},{"lineNumber":112,"author":{"gitId":"Kb-Tay"},"content":"     *","lastModifiedDate":"2023-10-17"},{"lineNumber":113,"author":{"gitId":"Kb-Tay"},"content":"     * @param input The input date and time from user.","lastModifiedDate":"2023-10-17"},{"lineNumber":114,"author":{"gitId":"Kb-Tay"},"content":"     * @return The LocaleDateTime object representing Appointment date.","lastModifiedDate":"2023-10-17"},{"lineNumber":115,"author":{"gitId":"Kb-Tay"},"content":"     * @throws IllegalArgumentException If input date does not match specified format.","lastModifiedDate":"2023-10-17"},{"lineNumber":116,"author":{"gitId":"Kb-Tay"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":117,"author":{"gitId":"Kb-Tay"},"content":"    public static LocalDateTime parseAppointmentDate(String input) throws DateTimeParseException {","lastModifiedDate":"2023-10-20"},{"lineNumber":118,"author":{"gitId":"AlyssaPng"},"content":"        return LocalDateTime.parse(input, DATE_TIME_FORMATTER);","lastModifiedDate":"2023-11-11"},{"lineNumber":119,"author":{"gitId":"Kb-Tay"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":120,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":121,"author":{"gitId":"Kb-Tay"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":122,"author":{"gitId":"Kb-Tay"},"content":"     * Returns an Appointment after parsing the string representation of the appointment.","lastModifiedDate":"2023-10-17"},{"lineNumber":123,"author":{"gitId":"Kb-Tay"},"content":"     *","lastModifiedDate":"2023-10-17"},{"lineNumber":124,"author":{"gitId":"Kb-Tay"},"content":"     * @param appointment The string representation of the appointment.","lastModifiedDate":"2023-10-17"},{"lineNumber":125,"author":{"gitId":"Kb-Tay"},"content":"     * @return The Appointment object.","lastModifiedDate":"2023-10-17"},{"lineNumber":126,"author":{"gitId":"Kb-Tay"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":127,"author":{"gitId":"Kb-Tay"},"content":"    public static Appointment parseAppointmentDescription(String appointment) {","lastModifiedDate":"2023-10-17"},{"lineNumber":128,"author":{"gitId":"Kb-Tay"},"content":"        Logger logger \u003d Logger.getLogger(Appointment.class.getName());","lastModifiedDate":"2023-10-17"},{"lineNumber":129,"author":{"gitId":"Kb-Tay"},"content":"        Pattern pattern \u003d Pattern.compile(VALIDATION_APT_REGEX);","lastModifiedDate":"2023-10-17"},{"lineNumber":130,"author":{"gitId":"Kb-Tay"},"content":"        Matcher matcher \u003d pattern.matcher(appointment);","lastModifiedDate":"2023-10-17"},{"lineNumber":131,"author":{"gitId":"Kb-Tay"},"content":"        logger.info(\"Matches: \" + matcher.matches());","lastModifiedDate":"2023-10-17"},{"lineNumber":132,"author":{"gitId":"Kb-Tay"},"content":"        String valueField \u003d matcher.group(1).trim();","lastModifiedDate":"2023-10-17"},{"lineNumber":133,"author":{"gitId":"Kb-Tay"},"content":"        String dateField \u003d matcher.group(2).trim();","lastModifiedDate":"2023-10-17"},{"lineNumber":134,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":135,"author":{"gitId":"Kb-Tay"},"content":"        return new Appointment(valueField, parseAppointmentDate(dateField));","lastModifiedDate":"2023-10-17"},{"lineNumber":136,"author":{"gitId":"Kb-Tay"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":137,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":138,"author":{"gitId":"Kb-Tay"},"content":"    public void setPerson(Person person) {","lastModifiedDate":"2023-10-24"},{"lineNumber":139,"author":{"gitId":"Kb-Tay"},"content":"        this.person \u003d person;","lastModifiedDate":"2023-10-24"},{"lineNumber":140,"author":{"gitId":"Kb-Tay"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":141,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":142,"author":{"gitId":"jylow"},"content":"    @Override","lastModifiedDate":"2023-10-20"},{"lineNumber":143,"author":{"gitId":"Kb-Tay"},"content":"    public int compareTo(ScheduleItem scheduleItem) {","lastModifiedDate":"2023-10-22"},{"lineNumber":144,"author":{"gitId":"Kb-Tay"},"content":"        if (scheduleItem instanceof NullAppointment) {","lastModifiedDate":"2023-10-22"},{"lineNumber":145,"author":{"gitId":"jylow"},"content":"            return -1; //person with appointment should be smaller to be sorted up on the list","lastModifiedDate":"2023-11-08"},{"lineNumber":146,"author":{"gitId":"jylow"},"content":"        } else {","lastModifiedDate":"2023-10-20"},{"lineNumber":147,"author":{"gitId":"Kb-Tay"},"content":"            Appointment appointment \u003d (Appointment) scheduleItem;","lastModifiedDate":"2023-10-22"},{"lineNumber":148,"author":{"gitId":"jylow"},"content":"            return this.date.compareTo(appointment.date);","lastModifiedDate":"2023-10-19"},{"lineNumber":149,"author":{"gitId":"jylow"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":150,"author":{"gitId":"Kb-Tay"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":151,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":152,"author":{"gitId":"Kb-Tay"},"content":"    @Override","lastModifiedDate":"2023-10-24"},{"lineNumber":153,"author":{"gitId":"Kb-Tay"},"content":"    public boolean isSameDate(LocalDate date) {","lastModifiedDate":"2023-10-25"},{"lineNumber":154,"author":{"gitId":"Kb-Tay"},"content":"        return this.date.toLocalDate().equals(date);","lastModifiedDate":"2023-10-25"},{"lineNumber":155,"author":{"gitId":"Kb-Tay"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":156,"author":{"gitId":"jylow"},"content":"}","lastModifiedDate":"2023-10-20"}],"authorContributionMap":{"Kb-Tay":134,"AlyssaPng":7,"nikele2001":7,"jylow":8}},{"path":"src/main/java/seedu/address/model/appointment/NullAppointment.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Kb-Tay"},"content":"package seedu.address.model.appointment;","lastModifiedDate":"2023-10-17"},{"lineNumber":2,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":3,"author":{"gitId":"Kb-Tay"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-10-25"},{"lineNumber":4,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":5,"author":{"gitId":"Kb-Tay"},"content":"/**","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"Kb-Tay"},"content":" * An empty Appointment Object to represent Appointments that have not been made.","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"Kb-Tay"},"content":" */","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"Kb-Tay"},"content":"public class NullAppointment extends ScheduleItem implements Comparable\u003cScheduleItem\u003e {","lastModifiedDate":"2023-10-22"},{"lineNumber":9,"author":{"gitId":"Kb-Tay"},"content":"    public static final String MESSAGE_NULL_APT \u003d \"No Appointment made!\";","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"Kb-Tay"},"content":"    private static final NullAppointment nullappointment \u003d new NullAppointment();","lastModifiedDate":"2023-10-22"},{"lineNumber":11,"author":{"gitId":"Kb-Tay"},"content":"    private final String value;","lastModifiedDate":"2023-10-22"},{"lineNumber":12,"author":{"gitId":"Kb-Tay"},"content":"    private NullAppointment() {","lastModifiedDate":"2023-10-22"},{"lineNumber":13,"author":{"gitId":"Kb-Tay"},"content":"        this.value \u003d MESSAGE_NULL_APT;","lastModifiedDate":"2023-10-22"},{"lineNumber":14,"author":{"gitId":"Kb-Tay"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":15,"author":{"gitId":"Kb-Tay"},"content":"    public static NullAppointment getNullAppointment() {","lastModifiedDate":"2023-10-23"},{"lineNumber":16,"author":{"gitId":"Kb-Tay"},"content":"        return nullappointment;","lastModifiedDate":"2023-10-22"},{"lineNumber":17,"author":{"gitId":"Kb-Tay"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"Kb-Tay"},"content":"    @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"Kb-Tay"},"content":"    public String toString() {","lastModifiedDate":"2023-10-17"},{"lineNumber":20,"author":{"gitId":"Kb-Tay"},"content":"        return MESSAGE_NULL_APT;","lastModifiedDate":"2023-10-17"},{"lineNumber":21,"author":{"gitId":"Kb-Tay"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":22,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":23,"author":{"gitId":"Kb-Tay"},"content":"    @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":24,"author":{"gitId":"Kb-Tay"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-17"},{"lineNumber":25,"author":{"gitId":"Kb-Tay"},"content":"        return other \u003d\u003d this; // Check if other is the same NullAppointment","lastModifiedDate":"2023-10-22"},{"lineNumber":26,"author":{"gitId":"Kb-Tay"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":27,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":28,"author":{"gitId":"Kb-Tay"},"content":"    @Override","lastModifiedDate":"2023-10-22"},{"lineNumber":29,"author":{"gitId":"Kb-Tay"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-22"},{"lineNumber":30,"author":{"gitId":"Kb-Tay"},"content":"        return this.value.hashCode();","lastModifiedDate":"2023-10-22"},{"lineNumber":31,"author":{"gitId":"Kb-Tay"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":32,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":33,"author":{"gitId":"jylow"},"content":"    @Override","lastModifiedDate":"2023-10-20"},{"lineNumber":34,"author":{"gitId":"Kb-Tay"},"content":"    public int compareTo(ScheduleItem appointment) {","lastModifiedDate":"2023-10-22"},{"lineNumber":35,"author":{"gitId":"jylow"},"content":"        if (appointment \u003d\u003d this) {","lastModifiedDate":"2023-11-08"},{"lineNumber":36,"author":{"gitId":"jylow"},"content":"            return 0;","lastModifiedDate":"2023-11-08"},{"lineNumber":37,"author":{"gitId":"jylow"},"content":"        } else {","lastModifiedDate":"2023-11-08"},{"lineNumber":38,"author":{"gitId":"jylow"},"content":"            return 1; //null appointment returns \u003e0 so it will be sorted further down the list","lastModifiedDate":"2023-11-08"},{"lineNumber":39,"author":{"gitId":"jylow"},"content":"        }","lastModifiedDate":"2023-11-08"},{"lineNumber":40,"author":{"gitId":"jylow"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":41,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":42,"author":{"gitId":"Kb-Tay"},"content":"    @Override","lastModifiedDate":"2023-10-24"},{"lineNumber":43,"author":{"gitId":"Kb-Tay"},"content":"    public boolean isSameDate(LocalDate date) {","lastModifiedDate":"2023-10-25"},{"lineNumber":44,"author":{"gitId":"Kb-Tay"},"content":"        return false;","lastModifiedDate":"2023-10-24"},{"lineNumber":45,"author":{"gitId":"Kb-Tay"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":46,"author":{"gitId":"Kb-Tay"},"content":"}","lastModifiedDate":"2023-10-17"}],"authorContributionMap":{"Kb-Tay":38,"jylow":8}},{"path":"src/main/java/seedu/address/model/appointment/ScheduleItem.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Kb-Tay"},"content":"package seedu.address.model.appointment;","lastModifiedDate":"2023-10-22"},{"lineNumber":2,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":3,"author":{"gitId":"Kb-Tay"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-10-25"},{"lineNumber":4,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":5,"author":{"gitId":"Kb-Tay"},"content":"/**","lastModifiedDate":"2023-10-22"},{"lineNumber":6,"author":{"gitId":"Kb-Tay"},"content":" * Abstract class representing schedule item.","lastModifiedDate":"2023-10-22"},{"lineNumber":7,"author":{"gitId":"Kb-Tay"},"content":" * Subclasses should implement compareTo method to define how","lastModifiedDate":"2023-10-22"},{"lineNumber":8,"author":{"gitId":"Kb-Tay"},"content":" * schedule items are compared.","lastModifiedDate":"2023-10-22"},{"lineNumber":9,"author":{"gitId":"Kb-Tay"},"content":" */","lastModifiedDate":"2023-10-22"},{"lineNumber":10,"author":{"gitId":"Kb-Tay"},"content":"public abstract class ScheduleItem implements Comparable\u003cScheduleItem\u003e {","lastModifiedDate":"2023-10-22"},{"lineNumber":11,"author":{"gitId":"Kb-Tay"},"content":"    public abstract boolean isSameDate(LocalDate date);","lastModifiedDate":"2023-10-25"},{"lineNumber":12,"author":{"gitId":"Kb-Tay"},"content":"    @Override","lastModifiedDate":"2023-10-22"},{"lineNumber":13,"author":{"gitId":"Kb-Tay"},"content":"    public abstract int compareTo(ScheduleItem scheduleItem);","lastModifiedDate":"2023-10-22"},{"lineNumber":14,"author":{"gitId":"Kb-Tay"},"content":"}","lastModifiedDate":"2023-10-22"}],"authorContributionMap":{"Kb-Tay":14}},{"path":"src/main/java/seedu/address/model/appointment/SortByAppointmentDateComparator.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nikele2001"},"content":"package seedu.address.model.appointment;","lastModifiedDate":"2023-10-23"},{"lineNumber":2,"author":{"gitId":"nikele2001"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":3,"author":{"gitId":"nikele2001"},"content":"import java.util.Comparator;","lastModifiedDate":"2023-10-23"},{"lineNumber":4,"author":{"gitId":"nikele2001"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":5,"author":{"gitId":"nikele2001"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-23"},{"lineNumber":6,"author":{"gitId":"nikele2001"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":7,"author":{"gitId":"nikele2001"},"content":"/**","lastModifiedDate":"2023-10-23"},{"lineNumber":8,"author":{"gitId":"nikele2001"},"content":" * Compares an {@code Appointment} to another {@code Appointment} to determine","lastModifiedDate":"2023-10-23"},{"lineNumber":9,"author":{"gitId":"nikele2001"},"content":" * appointment ordering.","lastModifiedDate":"2023-10-23"},{"lineNumber":10,"author":{"gitId":"nikele2001"},"content":" */","lastModifiedDate":"2023-10-23"},{"lineNumber":11,"author":{"gitId":"nikele2001"},"content":"public class SortByAppointmentDateComparator implements Comparator\u003cAppointment\u003e {","lastModifiedDate":"2023-10-23"},{"lineNumber":12,"author":{"gitId":"nikele2001"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":13,"author":{"gitId":"nikele2001"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":14,"author":{"gitId":"nikele2001"},"content":"    @Override","lastModifiedDate":"2023-10-23"},{"lineNumber":15,"author":{"gitId":"nikele2001"},"content":"    public int compare(Appointment apt1, Appointment apt2) {","lastModifiedDate":"2023-10-23"},{"lineNumber":16,"author":{"gitId":"nikele2001"},"content":"        if (apt1.getDateTime().isBefore(apt2.getDateTime())) {","lastModifiedDate":"2023-10-23"},{"lineNumber":17,"author":{"gitId":"nikele2001"},"content":"            return 0;","lastModifiedDate":"2023-10-23"},{"lineNumber":18,"author":{"gitId":"nikele2001"},"content":"        }","lastModifiedDate":"2023-10-23"},{"lineNumber":19,"author":{"gitId":"nikele2001"},"content":"        return 1;","lastModifiedDate":"2023-10-23"},{"lineNumber":20,"author":{"gitId":"nikele2001"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":21,"author":{"gitId":"nikele2001"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":22,"author":{"gitId":"nikele2001"},"content":"    @Override","lastModifiedDate":"2023-10-23"},{"lineNumber":23,"author":{"gitId":"nikele2001"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-23"},{"lineNumber":24,"author":{"gitId":"nikele2001"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-23"},{"lineNumber":25,"author":{"gitId":"nikele2001"},"content":"            return true;","lastModifiedDate":"2023-10-23"},{"lineNumber":26,"author":{"gitId":"nikele2001"},"content":"        }","lastModifiedDate":"2023-10-23"},{"lineNumber":27,"author":{"gitId":"nikele2001"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":28,"author":{"gitId":"nikele2001"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-23"},{"lineNumber":29,"author":{"gitId":"nikele2001"},"content":"        if (!(other instanceof SortByAppointmentDateComparator)) {","lastModifiedDate":"2023-10-23"},{"lineNumber":30,"author":{"gitId":"nikele2001"},"content":"            return false;","lastModifiedDate":"2023-10-23"},{"lineNumber":31,"author":{"gitId":"nikele2001"},"content":"        }","lastModifiedDate":"2023-10-23"},{"lineNumber":32,"author":{"gitId":"nikele2001"},"content":"        return true;","lastModifiedDate":"2023-10-23"},{"lineNumber":33,"author":{"gitId":"nikele2001"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":34,"author":{"gitId":"nikele2001"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":35,"author":{"gitId":"nikele2001"},"content":"    @Override","lastModifiedDate":"2023-10-23"},{"lineNumber":36,"author":{"gitId":"nikele2001"},"content":"    public String toString() {","lastModifiedDate":"2023-10-23"},{"lineNumber":37,"author":{"gitId":"nikele2001"},"content":"        return new ToStringBuilder(this).toString();","lastModifiedDate":"2023-10-23"},{"lineNumber":38,"author":{"gitId":"nikele2001"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":39,"author":{"gitId":"nikele2001"},"content":"}","lastModifiedDate":"2023-10-23"}],"authorContributionMap":{"nikele2001":39}},{"path":"src/main/java/seedu/address/model/financialplan/FinancialPlan.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nikele2001"},"content":"package seedu.address.model.financialplan;","lastModifiedDate":"2023-10-17"},{"lineNumber":2,"author":{"gitId":"nikele2001"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":3,"author":{"gitId":"nikele2001"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-16"},{"lineNumber":4,"author":{"gitId":"nikele2001"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-10-16"},{"lineNumber":5,"author":{"gitId":"nikele2001"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":6,"author":{"gitId":"nikele2001"},"content":"/**","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"nikele2001"},"content":" * Represents a Financial Plan in the address book.","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"nikele2001"},"content":" * Guarantees: immutable; name is valid as declared in {@link #isValidFinancialPlanName(String)}","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"nikele2001"},"content":" */","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"nikele2001"},"content":"public class FinancialPlan {","lastModifiedDate":"2023-10-16"},{"lineNumber":11,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":12,"author":{"gitId":"AlyssaPng"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Financial plan names should be alphanumeric or space characters, \"","lastModifiedDate":"2023-11-09"},{"lineNumber":13,"author":{"gitId":"AlyssaPng"},"content":"                                                        + \"and it should not be blank\";","lastModifiedDate":"2023-11-09"},{"lineNumber":14,"author":{"gitId":"nikele2001"},"content":"    public static final String VALIDATION_REGEX \u003d \"^[a-zA-Z0-9\\\\s]+\";","lastModifiedDate":"2023-10-16"},{"lineNumber":15,"author":{"gitId":"nikele2001"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":16,"author":{"gitId":"nikele2001"},"content":"    public final String financialPlanName;","lastModifiedDate":"2023-10-16"},{"lineNumber":17,"author":{"gitId":"nikele2001"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":18,"author":{"gitId":"nikele2001"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":19,"author":{"gitId":"nikele2001"},"content":"     * Constructs a {@code financialPlan}.","lastModifiedDate":"2023-10-16"},{"lineNumber":20,"author":{"gitId":"nikele2001"},"content":"     *","lastModifiedDate":"2023-10-16"},{"lineNumber":21,"author":{"gitId":"nikele2001"},"content":"     * @param financialPlanName A valid financial plan name.","lastModifiedDate":"2023-10-16"},{"lineNumber":22,"author":{"gitId":"nikele2001"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":23,"author":{"gitId":"nikele2001"},"content":"    public FinancialPlan(String financialPlanName) {","lastModifiedDate":"2023-10-16"},{"lineNumber":24,"author":{"gitId":"nikele2001"},"content":"        requireNonNull(financialPlanName);","lastModifiedDate":"2023-10-16"},{"lineNumber":25,"author":{"gitId":"nikele2001"},"content":"        checkArgument(isValidFinancialPlanName(financialPlanName), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-16"},{"lineNumber":26,"author":{"gitId":"nikele2001"},"content":"        this.financialPlanName \u003d financialPlanName;","lastModifiedDate":"2023-10-16"},{"lineNumber":27,"author":{"gitId":"nikele2001"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":28,"author":{"gitId":"nikele2001"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":29,"author":{"gitId":"nikele2001"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":30,"author":{"gitId":"nikele2001"},"content":"     * Returns true if a given string is a valid financial plan name.","lastModifiedDate":"2023-10-16"},{"lineNumber":31,"author":{"gitId":"nikele2001"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":32,"author":{"gitId":"nikele2001"},"content":"    public static boolean isValidFinancialPlanName(String test) {","lastModifiedDate":"2023-10-16"},{"lineNumber":33,"author":{"gitId":"nikele2001"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-10-16"},{"lineNumber":34,"author":{"gitId":"nikele2001"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":35,"author":{"gitId":"nikele2001"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":36,"author":{"gitId":"AlyssaPng"},"content":"    /**","lastModifiedDate":"2023-10-23"},{"lineNumber":37,"author":{"gitId":"AlyssaPng"},"content":"     * Returns true if the given string is a substring of {@code financialPlanName}.","lastModifiedDate":"2023-11-10"},{"lineNumber":38,"author":{"gitId":"AlyssaPng"},"content":"     */","lastModifiedDate":"2023-10-23"},{"lineNumber":39,"author":{"gitId":"AlyssaPng"},"content":"    public boolean containsSubstring(String substring) {","lastModifiedDate":"2023-10-22"},{"lineNumber":40,"author":{"gitId":"AlyssaPng"},"content":"        return financialPlanName.toLowerCase().contains(substring.toLowerCase());","lastModifiedDate":"2023-10-22"},{"lineNumber":41,"author":{"gitId":"AlyssaPng"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":42,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":43,"author":{"gitId":"nikele2001"},"content":"    @Override","lastModifiedDate":"2023-10-16"},{"lineNumber":44,"author":{"gitId":"nikele2001"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-16"},{"lineNumber":45,"author":{"gitId":"nikele2001"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-16"},{"lineNumber":46,"author":{"gitId":"nikele2001"},"content":"            return true;","lastModifiedDate":"2023-10-16"},{"lineNumber":47,"author":{"gitId":"nikele2001"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":48,"author":{"gitId":"nikele2001"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":49,"author":{"gitId":"nikele2001"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-16"},{"lineNumber":50,"author":{"gitId":"nikele2001"},"content":"        if (!(other instanceof FinancialPlan)) {","lastModifiedDate":"2023-10-16"},{"lineNumber":51,"author":{"gitId":"nikele2001"},"content":"            return false;","lastModifiedDate":"2023-10-16"},{"lineNumber":52,"author":{"gitId":"nikele2001"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":53,"author":{"gitId":"nikele2001"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":54,"author":{"gitId":"nikele2001"},"content":"        FinancialPlan otherFinancialPlan \u003d (FinancialPlan) other;","lastModifiedDate":"2023-10-16"},{"lineNumber":55,"author":{"gitId":"nikele2001"},"content":"        return financialPlanName.equals(otherFinancialPlan.financialPlanName);","lastModifiedDate":"2023-10-16"},{"lineNumber":56,"author":{"gitId":"nikele2001"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":57,"author":{"gitId":"nikele2001"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":58,"author":{"gitId":"nikele2001"},"content":"    @Override","lastModifiedDate":"2023-10-16"},{"lineNumber":59,"author":{"gitId":"nikele2001"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-16"},{"lineNumber":60,"author":{"gitId":"nikele2001"},"content":"        return financialPlanName.hashCode();","lastModifiedDate":"2023-10-16"},{"lineNumber":61,"author":{"gitId":"nikele2001"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":62,"author":{"gitId":"nikele2001"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":63,"author":{"gitId":"nikele2001"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":64,"author":{"gitId":"nikele2001"},"content":"     * Format state as text for viewing.","lastModifiedDate":"2023-10-16"},{"lineNumber":65,"author":{"gitId":"nikele2001"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":66,"author":{"gitId":"nikele2001"},"content":"    public String toString() {","lastModifiedDate":"2023-10-16"},{"lineNumber":67,"author":{"gitId":"nikele2001"},"content":"        return \u0027[\u0027 + financialPlanName + \u0027]\u0027;","lastModifiedDate":"2023-10-16"},{"lineNumber":68,"author":{"gitId":"nikele2001"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":69,"author":{"gitId":"nikele2001"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":70,"author":{"gitId":"nikele2001"},"content":"}","lastModifiedDate":"2023-10-16"}],"authorContributionMap":{"nikele2001":60,"AlyssaPng":10}},{"path":"src/main/java/seedu/address/model/person/Name.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s name in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"jylow"},"content":"public class Name implements Comparable\u003cName\u003e {","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            \"Names should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2018-04-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2017-01-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2018-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public final String fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Constructs a {@code Name}.","lastModifiedDate":"2017-05-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @param name A valid name.","lastModifiedDate":"2017-05-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public Name(String name) {","lastModifiedDate":"2017-05-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        checkArgument(isValidName(name), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        fullName \u003d name;","lastModifiedDate":"2018-08-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2018-04-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static boolean isValidName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        if (!(other instanceof Name)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Name otherName \u003d (Name) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return fullName.equals(otherName.fullName);","lastModifiedDate":"2023-07-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"jylow"},"content":"    @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":63,"author":{"gitId":"jylow"},"content":"    public int compareTo(Name a) {","lastModifiedDate":"2023-10-17"},{"lineNumber":64,"author":{"gitId":"jylow"},"content":"        return this.fullName.compareToIgnoreCase(a.fullName);","lastModifiedDate":"2023-10-17"},{"lineNumber":65,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":66,"author":{"gitId":"jylow"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":67,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return fullName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"jylow":7,"-":66}},{"path":"src/main/java/seedu/address/model/person/NextOfKinName.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sopa301"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-09-28"},{"lineNumber":2,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":3,"author":{"gitId":"sopa301"},"content":"/**","lastModifiedDate":"2023-09-28"},{"lineNumber":4,"author":{"gitId":"sopa301"},"content":" * Represents a Person\u0027s next-of-kin name in the address book.","lastModifiedDate":"2023-09-28"},{"lineNumber":5,"author":{"gitId":"sopa301"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidName(String)}","lastModifiedDate":"2023-09-28"},{"lineNumber":6,"author":{"gitId":"sopa301"},"content":" */","lastModifiedDate":"2023-09-28"},{"lineNumber":7,"author":{"gitId":"sopa301"},"content":"public class NextOfKinName extends Name {","lastModifiedDate":"2023-09-28"},{"lineNumber":8,"author":{"gitId":"sopa301"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Next of Kin\u0027s \" + Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-11-02"},{"lineNumber":9,"author":{"gitId":"sopa301"},"content":"    /**","lastModifiedDate":"2023-09-28"},{"lineNumber":10,"author":{"gitId":"sopa301"},"content":"     * Constructs a {@code NextOfKinName}.","lastModifiedDate":"2023-09-28"},{"lineNumber":11,"author":{"gitId":"sopa301"},"content":"     *","lastModifiedDate":"2023-09-28"},{"lineNumber":12,"author":{"gitId":"sopa301"},"content":"     * @param nextOfKinName A valid next-of-kin name.","lastModifiedDate":"2023-09-29"},{"lineNumber":13,"author":{"gitId":"sopa301"},"content":"     */","lastModifiedDate":"2023-09-28"},{"lineNumber":14,"author":{"gitId":"sopa301"},"content":"    public NextOfKinName(String nextOfKinName) {","lastModifiedDate":"2023-09-29"},{"lineNumber":15,"author":{"gitId":"sopa301"},"content":"        super(nextOfKinName);","lastModifiedDate":"2023-09-29"},{"lineNumber":16,"author":{"gitId":"sopa301"},"content":"    }","lastModifiedDate":"2023-09-28"},{"lineNumber":17,"author":{"gitId":"sopa301"},"content":"}","lastModifiedDate":"2023-09-28"}],"authorContributionMap":{"sopa301":17}},{"path":"src/main/java/seedu/address/model/person/NextOfKinPhone.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sopa301"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-09-28"},{"lineNumber":2,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":3,"author":{"gitId":"sopa301"},"content":"/**","lastModifiedDate":"2023-09-28"},{"lineNumber":4,"author":{"gitId":"sopa301"},"content":" * Represents a Person\u0027s next-of-kin phone number in the address book.","lastModifiedDate":"2023-09-28"},{"lineNumber":5,"author":{"gitId":"sopa301"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidPhone(String)}","lastModifiedDate":"2023-09-28"},{"lineNumber":6,"author":{"gitId":"sopa301"},"content":" */","lastModifiedDate":"2023-09-28"},{"lineNumber":7,"author":{"gitId":"sopa301"},"content":"public class NextOfKinPhone extends Phone {","lastModifiedDate":"2023-09-28"},{"lineNumber":8,"author":{"gitId":"sopa301"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Next of Kin\u0027s \" + Phone.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-11-02"},{"lineNumber":9,"author":{"gitId":"sopa301"},"content":"    /**","lastModifiedDate":"2023-09-28"},{"lineNumber":10,"author":{"gitId":"sopa301"},"content":"     * Constructs a {@code NextOfKinPhone}.","lastModifiedDate":"2023-09-28"},{"lineNumber":11,"author":{"gitId":"sopa301"},"content":"     *","lastModifiedDate":"2023-09-28"},{"lineNumber":12,"author":{"gitId":"sopa301"},"content":"     * @param nextOfKinPhone A valid phone number.","lastModifiedDate":"2023-09-29"},{"lineNumber":13,"author":{"gitId":"sopa301"},"content":"     */","lastModifiedDate":"2023-09-28"},{"lineNumber":14,"author":{"gitId":"sopa301"},"content":"    public NextOfKinPhone(String nextOfKinPhone) {","lastModifiedDate":"2023-09-29"},{"lineNumber":15,"author":{"gitId":"sopa301"},"content":"        super(nextOfKinPhone);","lastModifiedDate":"2023-09-29"},{"lineNumber":16,"author":{"gitId":"sopa301"},"content":"    }","lastModifiedDate":"2023-09-28"},{"lineNumber":17,"author":{"gitId":"sopa301"},"content":"}","lastModifiedDate":"2023-09-28"}],"authorContributionMap":{"sopa301":17}},{"path":"src/main/java/seedu/address/model/person/Person.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"Kb-Tay"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-10-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-03-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-03-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":12,"author":{"gitId":"Kb-Tay"},"content":"import seedu.address.model.appointment.NullAppointment;","lastModifiedDate":"2023-10-24"},{"lineNumber":13,"author":{"gitId":"Kb-Tay"},"content":"import seedu.address.model.appointment.ScheduleItem;","lastModifiedDate":"2023-10-22"},{"lineNumber":14,"author":{"gitId":"nikele2001"},"content":"import seedu.address.model.financialplan.FinancialPlan;","lastModifiedDate":"2023-10-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Represents a Person in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2017-12-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class Person {","lastModifiedDate":"2018-01-10"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final Address address;","lastModifiedDate":"2018-04-19"},{"lineNumber":28,"author":{"gitId":"sopa301"},"content":"    private final NextOfKinName nextOfKinName;","lastModifiedDate":"2023-09-29"},{"lineNumber":29,"author":{"gitId":"sopa301"},"content":"    private final NextOfKinPhone nextOfKinPhone;","lastModifiedDate":"2023-09-29"},{"lineNumber":30,"author":{"gitId":"nikele2001"},"content":"    private final Set\u003cFinancialPlan\u003e financialPlans \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-10-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":32,"author":{"gitId":"Kb-Tay"},"content":"    private final ScheduleItem appointment;","lastModifiedDate":"2023-10-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"sopa301"},"content":"    public Person(Name name, Phone phone, Email email, Address address, NextOfKinName nextOfKinName,","lastModifiedDate":"2023-09-29"},{"lineNumber":37,"author":{"gitId":"Kb-Tay"},"content":"                  NextOfKinPhone nextOfKinPhone, Set\u003cFinancialPlan\u003e financialPlans,","lastModifiedDate":"2023-10-19"},{"lineNumber":38,"author":{"gitId":"Kb-Tay"},"content":"                  Set\u003cTag\u003e tags, ScheduleItem appointment) {","lastModifiedDate":"2023-10-22"},{"lineNumber":39,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":40,"author":{"gitId":"Kb-Tay"},"content":"        requireAllNonNull(name, phone, email, address, nextOfKinName, nextOfKinPhone,","lastModifiedDate":"2023-10-19"},{"lineNumber":41,"author":{"gitId":"Kb-Tay"},"content":"                financialPlans, tags, appointment);","lastModifiedDate":"2023-10-19"},{"lineNumber":42,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2017-12-20"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2017-12-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2017-12-20"},{"lineNumber":47,"author":{"gitId":"sopa301"},"content":"        this.nextOfKinName \u003d nextOfKinName;","lastModifiedDate":"2023-09-29"},{"lineNumber":48,"author":{"gitId":"sopa301"},"content":"        this.nextOfKinPhone \u003d nextOfKinPhone;","lastModifiedDate":"2023-09-29"},{"lineNumber":49,"author":{"gitId":"nikele2001"},"content":"        this.financialPlans.addAll(financialPlans);","lastModifiedDate":"2023-10-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":51,"author":{"gitId":"Kb-Tay"},"content":"        this.appointment \u003d appointment;","lastModifiedDate":"2023-10-17"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public Name getName() {","lastModifiedDate":"2017-07-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2017-12-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public Phone getPhone() {","lastModifiedDate":"2017-07-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public Email getEmail() {","lastModifiedDate":"2017-07-12"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return email;","lastModifiedDate":"2017-12-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public Address getAddress() {","lastModifiedDate":"2017-07-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return address;","lastModifiedDate":"2017-12-20"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-12"},{"lineNumber":69,"author":{"gitId":"sopa301"},"content":"    public NextOfKinName getNextOfKinName() {","lastModifiedDate":"2023-09-28"},{"lineNumber":70,"author":{"gitId":"sopa301"},"content":"        return nextOfKinName;","lastModifiedDate":"2023-09-29"},{"lineNumber":71,"author":{"gitId":"sopa301"},"content":"    }","lastModifiedDate":"2023-09-28"},{"lineNumber":72,"author":{"gitId":"sopa301"},"content":"    public NextOfKinPhone getNextOfKinPhone() {","lastModifiedDate":"2023-09-28"},{"lineNumber":73,"author":{"gitId":"sopa301"},"content":"        return nextOfKinPhone;","lastModifiedDate":"2023-09-29"},{"lineNumber":74,"author":{"gitId":"sopa301"},"content":"    }","lastModifiedDate":"2023-09-28"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":76,"author":{"gitId":"Kb-Tay"},"content":"    public ScheduleItem getAppointment() {","lastModifiedDate":"2023-10-22"},{"lineNumber":77,"author":{"gitId":"Kb-Tay"},"content":"        return appointment;","lastModifiedDate":"2023-10-17"},{"lineNumber":78,"author":{"gitId":"Kb-Tay"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":79,"author":{"gitId":"nikele2001"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":80,"author":{"gitId":"nikele2001"},"content":"     * Returns an immutable financial plan set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2023-10-16"},{"lineNumber":81,"author":{"gitId":"nikele2001"},"content":"     * if modification is attempted.","lastModifiedDate":"2023-10-16"},{"lineNumber":82,"author":{"gitId":"nikele2001"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":83,"author":{"gitId":"nikele2001"},"content":"    public Set\u003cFinancialPlan\u003e getFinancialPlans() {","lastModifiedDate":"2023-10-16"},{"lineNumber":84,"author":{"gitId":"nikele2001"},"content":"        return Collections.unmodifiableSet(financialPlans);","lastModifiedDate":"2023-10-16"},{"lineNumber":85,"author":{"gitId":"nikele2001"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2017-03-07"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * if modification is attempted.","lastModifiedDate":"2017-03-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-07"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same name.","lastModifiedDate":"2020-12-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * This defines a weaker notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public boolean isSamePerson(Person otherPerson) {","lastModifiedDate":"2018-04-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        if (otherPerson \u003d\u003d this) {","lastModifiedDate":"2018-04-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        return otherPerson !\u003d null","lastModifiedDate":"2018-04-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getName().equals(getName());","lastModifiedDate":"2020-12-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":108,"author":{"gitId":"AlyssaPng"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":109,"author":{"gitId":"AlyssaPng"},"content":"     * Checks if the given {@code prompt} is a substring of {@code financialPlan} name in {@code financialPlans}","lastModifiedDate":"2023-10-22"},{"lineNumber":110,"author":{"gitId":"AlyssaPng"},"content":"     * and returns the email if true.","lastModifiedDate":"2023-10-22"},{"lineNumber":111,"author":{"gitId":"AlyssaPng"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":112,"author":{"gitId":"AlyssaPng"},"content":"    public String gatherEmailsContainsFinancialPlan(String prompt) {","lastModifiedDate":"2023-10-18"},{"lineNumber":113,"author":{"gitId":"AlyssaPng"},"content":"        StringBuilder result \u003d new StringBuilder();","lastModifiedDate":"2023-10-22"},{"lineNumber":114,"author":{"gitId":"AlyssaPng"},"content":"        for (FinancialPlan financialPlan : financialPlans) {","lastModifiedDate":"2023-10-22"},{"lineNumber":115,"author":{"gitId":"AlyssaPng"},"content":"            // Check if the financialPlan contains the prompt as a substring","lastModifiedDate":"2023-11-06"},{"lineNumber":116,"author":{"gitId":"AlyssaPng"},"content":"            if (financialPlan.containsSubstring(prompt)) {","lastModifiedDate":"2023-10-22"},{"lineNumber":117,"author":{"gitId":"AlyssaPng"},"content":"                result.append(email);","lastModifiedDate":"2023-11-06"},{"lineNumber":118,"author":{"gitId":"AlyssaPng"},"content":"                break; // Should only add email to result once","lastModifiedDate":"2023-11-06"},{"lineNumber":119,"author":{"gitId":"AlyssaPng"},"content":"            }","lastModifiedDate":"2023-10-22"},{"lineNumber":120,"author":{"gitId":"AlyssaPng"},"content":"            assert result.length() \u003d\u003d 0 : \"Results string should be empty\";","lastModifiedDate":"2023-11-10"},{"lineNumber":121,"author":{"gitId":"AlyssaPng"},"content":"        }","lastModifiedDate":"2023-10-22"},{"lineNumber":122,"author":{"gitId":"AlyssaPng"},"content":"        return result.toString();","lastModifiedDate":"2023-10-22"},{"lineNumber":123,"author":{"gitId":"AlyssaPng"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":124,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":125,"author":{"gitId":"AlyssaPng"},"content":"    /**","lastModifiedDate":"2023-10-22"},{"lineNumber":126,"author":{"gitId":"AlyssaPng"},"content":"     * Checks if the given {@code prompt} is a substring of {@code tag} name in {@code Tags}","lastModifiedDate":"2023-10-22"},{"lineNumber":127,"author":{"gitId":"AlyssaPng"},"content":"     * and returns the email if true.","lastModifiedDate":"2023-10-22"},{"lineNumber":128,"author":{"gitId":"AlyssaPng"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":129,"author":{"gitId":"AlyssaPng"},"content":"    public String gatherEmailsContainsTag(String prompt) {","lastModifiedDate":"2023-10-22"},{"lineNumber":130,"author":{"gitId":"AlyssaPng"},"content":"        StringBuilder result \u003d new StringBuilder();","lastModifiedDate":"2023-10-22"},{"lineNumber":131,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":132,"author":{"gitId":"AlyssaPng"},"content":"        for (Tag tag : tags) {","lastModifiedDate":"2023-10-22"},{"lineNumber":133,"author":{"gitId":"AlyssaPng"},"content":"            // Check if the tag contains the prompt substring","lastModifiedDate":"2023-11-06"},{"lineNumber":134,"author":{"gitId":"AlyssaPng"},"content":"            if (tag.containsSubstring(prompt)) {","lastModifiedDate":"2023-10-22"},{"lineNumber":135,"author":{"gitId":"AlyssaPng"},"content":"                result.append(email);","lastModifiedDate":"2023-11-06"},{"lineNumber":136,"author":{"gitId":"AlyssaPng"},"content":"                break; // Should only add email to result once","lastModifiedDate":"2023-11-06"},{"lineNumber":137,"author":{"gitId":"AlyssaPng"},"content":"            }","lastModifiedDate":"2023-10-22"},{"lineNumber":138,"author":{"gitId":"AlyssaPng"},"content":"            assert result.length() \u003d\u003d 0 : \"Results string should be empty\";","lastModifiedDate":"2023-11-10"},{"lineNumber":139,"author":{"gitId":"AlyssaPng"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":140,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":141,"author":{"gitId":"AlyssaPng"},"content":"        return result.toString();","lastModifiedDate":"2023-10-22"},{"lineNumber":142,"author":{"gitId":"AlyssaPng"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":143,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":144,"author":{"gitId":"Kb-Tay"},"content":"    public boolean isSameAppointmentDate(LocalDate date) {","lastModifiedDate":"2023-10-25"},{"lineNumber":145,"author":{"gitId":"Kb-Tay"},"content":"        return appointment.isSameDate(date);","lastModifiedDate":"2023-10-24"},{"lineNumber":146,"author":{"gitId":"Kb-Tay"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":147,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":148,"author":{"gitId":"Kb-Tay"},"content":"    /**","lastModifiedDate":"2023-10-25"},{"lineNumber":149,"author":{"gitId":"Kb-Tay"},"content":"     * Creates the same {@code Person} with a NullAppointment object.","lastModifiedDate":"2023-10-25"},{"lineNumber":150,"author":{"gitId":"Kb-Tay"},"content":"     */","lastModifiedDate":"2023-10-25"},{"lineNumber":151,"author":{"gitId":"Kb-Tay"},"content":"    public Person clearAppointment() {","lastModifiedDate":"2023-10-24"},{"lineNumber":152,"author":{"gitId":"Kb-Tay"},"content":"        return new Person(name, phone, email, address, nextOfKinName,","lastModifiedDate":"2023-10-24"},{"lineNumber":153,"author":{"gitId":"Kb-Tay"},"content":"                nextOfKinPhone, financialPlans,","lastModifiedDate":"2023-10-24"},{"lineNumber":154,"author":{"gitId":"Kb-Tay"},"content":"                tags, NullAppointment.getNullAppointment());","lastModifiedDate":"2023-10-24"},{"lineNumber":155,"author":{"gitId":"Kb-Tay"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":156,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":157,"author":{"gitId":"Kb-Tay"},"content":"    public boolean hasNullAppointment() {","lastModifiedDate":"2023-11-02"},{"lineNumber":158,"author":{"gitId":"Kb-Tay"},"content":"        return appointment.equals(NullAppointment.getNullAppointment());","lastModifiedDate":"2023-11-02"},{"lineNumber":159,"author":{"gitId":"Kb-Tay"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":160,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":162,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same identity and data fields.","lastModifiedDate":"2018-04-19"},{"lineNumber":163,"author":{"gitId":"-"},"content":"     * This defines a stronger notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":164,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10"},{"lineNumber":168,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        if (!(other instanceof Person)) {","lastModifiedDate":"2018-01-10"},{"lineNumber":173,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        Person otherPerson \u003d (Person) other;","lastModifiedDate":"2018-01-10"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        return name.equals(otherPerson.name)","lastModifiedDate":"2023-07-13"},{"lineNumber":178,"author":{"gitId":"-"},"content":"                \u0026\u0026 phone.equals(otherPerson.phone)","lastModifiedDate":"2023-07-13"},{"lineNumber":179,"author":{"gitId":"-"},"content":"                \u0026\u0026 email.equals(otherPerson.email)","lastModifiedDate":"2023-07-13"},{"lineNumber":180,"author":{"gitId":"-"},"content":"                \u0026\u0026 address.equals(otherPerson.address)","lastModifiedDate":"2023-07-13"},{"lineNumber":181,"author":{"gitId":"sopa301"},"content":"                \u0026\u0026 nextOfKinName.equals(otherPerson.nextOfKinName)","lastModifiedDate":"2023-09-29"},{"lineNumber":182,"author":{"gitId":"sopa301"},"content":"                \u0026\u0026 nextOfKinPhone.equals(otherPerson.nextOfKinPhone)","lastModifiedDate":"2023-09-29"},{"lineNumber":183,"author":{"gitId":"Kb-Tay"},"content":"                \u0026\u0026 tags.equals(otherPerson.tags)","lastModifiedDate":"2023-10-15"},{"lineNumber":184,"author":{"gitId":"Kb-Tay"},"content":"                \u0026\u0026 appointment.equals(otherPerson.appointment)","lastModifiedDate":"2023-10-19"},{"lineNumber":185,"author":{"gitId":"nikele2001"},"content":"                \u0026\u0026 financialPlans.equals(otherPerson.financialPlans);","lastModifiedDate":"2023-10-20"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2016-08-24"},{"lineNumber":191,"author":{"gitId":"Kb-Tay"},"content":"        return Objects.hash(name, phone, email, address, nextOfKinName, nextOfKinPhone,","lastModifiedDate":"2023-10-22"},{"lineNumber":192,"author":{"gitId":"Kb-Tay"},"content":"                financialPlans, tags, appointment);","lastModifiedDate":"2023-10-22"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"                .add(\"name\", name)","lastModifiedDate":"2019-02-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"                .add(\"phone\", phone)","lastModifiedDate":"2019-02-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"                .add(\"email\", email)","lastModifiedDate":"2019-02-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"                .add(\"address\", address)","lastModifiedDate":"2019-02-23"},{"lineNumber":202,"author":{"gitId":"sopa301"},"content":"                .add(\"nextOfKinName\", nextOfKinName)","lastModifiedDate":"2023-09-29"},{"lineNumber":203,"author":{"gitId":"sopa301"},"content":"                .add(\"nextOfKinPhone\", nextOfKinPhone)","lastModifiedDate":"2023-09-29"},{"lineNumber":204,"author":{"gitId":"nikele2001"},"content":"                .add(\"financialPlans\", financialPlans)","lastModifiedDate":"2023-10-16"},{"lineNumber":205,"author":{"gitId":"-"},"content":"                .add(\"tags\", tags)","lastModifiedDate":"2019-02-23"},{"lineNumber":206,"author":{"gitId":"Kb-Tay"},"content":"                .add(\"appointment\", appointment)","lastModifiedDate":"2023-10-17"},{"lineNumber":207,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":210,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Kb-Tay":36,"nikele2001":12,"AlyssaPng":36,"sopa301":15,"-":111}},{"path":"src/main/java/seedu/address/model/person/UniquePersonList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"Kb-Tay"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-10-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Iterator;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2017-06-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2017-06-09"},{"lineNumber":14,"author":{"gitId":"AlyssaPng"},"content":"import seedu.address.model.person.gatheremail.GatherEmailPrompt;","lastModifiedDate":"2023-10-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * A list of persons that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2016-09-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * A person is considered unique by comparing using {@code Person#isSamePerson(Person)}. As such, adding and updating of","lastModifiedDate":"2018-04-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * persons uses Person#isSamePerson(Person) for equality so as to ensure that the person being added or updated is","lastModifiedDate":"2018-04-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * unique in terms of identity in the UniquePersonList. However, the removal of a person uses Person#equals(Object) so","lastModifiedDate":"2018-04-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * as to ensure that the person with exactly the same fields will be removed.","lastModifiedDate":"2018-04-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2016-09-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * @see Person#isSamePerson(Person)","lastModifiedDate":"2018-04-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class UniquePersonList implements Iterable\u003cPerson\u003e {","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final ObservableList\u003cPerson\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2016-10-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final ObservableList\u003cPerson\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Returns true if the list contains an equivalent person as the given argument.","lastModifiedDate":"2016-09-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public boolean contains(Person toCheck) {","lastModifiedDate":"2018-01-10"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2017-05-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return internalList.stream().anyMatch(toCheck::isSamePerson);","lastModifiedDate":"2018-04-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Adds a person to the list.","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * The person must not already exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void add(Person toAdd) {","lastModifiedDate":"2018-08-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2017-05-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2018-01-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Replaces the person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2018-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2017-06-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2017-06-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2017-06-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        if (!target.isSamePerson(editedPerson) \u0026\u0026 contains(editedPerson)) {","lastModifiedDate":"2018-04-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2016-12-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        internalList.set(index, editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Removes the equivalent person from the list.","lastModifiedDate":"2016-08-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * The person must exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void remove(Person toRemove) {","lastModifiedDate":"2018-08-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2017-05-15"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2018-02-28"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2016-08-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void setPersons(UniquePersonList replacement) {","lastModifiedDate":"2016-10-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2018-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2018-08-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * Replaces the contents of this list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        requireAllNonNull(persons);","lastModifiedDate":"2018-01-10"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        if (!personsAreUnique(persons)) {","lastModifiedDate":"2018-04-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2018-01-21"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-21"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        internalList.setAll(persons);","lastModifiedDate":"2018-08-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":102,"author":{"gitId":"AlyssaPng"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":103,"author":{"gitId":"AlyssaPng"},"content":"     * Gathers emails of persons with {@code prompt} from this {@code persons}.","lastModifiedDate":"2023-10-22"},{"lineNumber":104,"author":{"gitId":"AlyssaPng"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":105,"author":{"gitId":"AlyssaPng"},"content":"    public String gatherEmails(GatherEmailPrompt prompt) {","lastModifiedDate":"2023-10-23"},{"lineNumber":106,"author":{"gitId":"AlyssaPng"},"content":"        StringBuilder emails \u003d new StringBuilder();","lastModifiedDate":"2023-10-18"},{"lineNumber":107,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":108,"author":{"gitId":"AlyssaPng"},"content":"        for (Person person : internalList) {","lastModifiedDate":"2023-10-18"},{"lineNumber":109,"author":{"gitId":"AlyssaPng"},"content":"            String email \u003d prompt.gatherEmails(person);","lastModifiedDate":"2023-10-22"},{"lineNumber":110,"author":{"gitId":"AlyssaPng"},"content":"            if (!email.isEmpty()) {","lastModifiedDate":"2023-10-18"},{"lineNumber":111,"author":{"gitId":"jylow"},"content":"                emails.append(email).append(\"; \");","lastModifiedDate":"2023-11-11"},{"lineNumber":112,"author":{"gitId":"AlyssaPng"},"content":"            }","lastModifiedDate":"2023-10-18"},{"lineNumber":113,"author":{"gitId":"AlyssaPng"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":114,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":115,"author":{"gitId":"AlyssaPng"},"content":"        return emails.toString().trim();","lastModifiedDate":"2023-10-18"},{"lineNumber":116,"author":{"gitId":"AlyssaPng"},"content":"    }","lastModifiedDate":"2023-11-10"},{"lineNumber":117,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":118,"author":{"gitId":"Kb-Tay"},"content":"    /**","lastModifiedDate":"2023-10-25"},{"lineNumber":119,"author":{"gitId":"Kb-Tay"},"content":"     * Clears all appointments of {@code Person} in {@code persons} that match the given {@code LocalDate date}.","lastModifiedDate":"2023-10-25"},{"lineNumber":120,"author":{"gitId":"Kb-Tay"},"content":"     */","lastModifiedDate":"2023-10-25"},{"lineNumber":121,"author":{"gitId":"Kb-Tay"},"content":"    public void clearAppointments(LocalDate date) {","lastModifiedDate":"2023-11-10"},{"lineNumber":122,"author":{"gitId":"Kb-Tay"},"content":"        for (Person person: internalList) {","lastModifiedDate":"2023-10-24"},{"lineNumber":123,"author":{"gitId":"Kb-Tay"},"content":"            if (person.isSameAppointmentDate(date)) {","lastModifiedDate":"2023-10-24"},{"lineNumber":124,"author":{"gitId":"Kb-Tay"},"content":"                setPerson(person, person.clearAppointment());","lastModifiedDate":"2023-10-24"},{"lineNumber":125,"author":{"gitId":"Kb-Tay"},"content":"            }","lastModifiedDate":"2023-11-10"},{"lineNumber":126,"author":{"gitId":"Kb-Tay"},"content":"        }","lastModifiedDate":"2023-10-24"},{"lineNumber":127,"author":{"gitId":"Kb-Tay"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":128,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":129,"author":{"gitId":"Kb-Tay"},"content":"    /**","lastModifiedDate":"2023-11-10"},{"lineNumber":130,"author":{"gitId":"Kb-Tay"},"content":"     * Returns if any Person {@code internalList} has an Appointment matching the {@code date}.","lastModifiedDate":"2023-11-10"},{"lineNumber":131,"author":{"gitId":"Kb-Tay"},"content":"     */","lastModifiedDate":"2023-11-10"},{"lineNumber":132,"author":{"gitId":"Kb-Tay"},"content":"    public boolean hasAppointmentWithDate(LocalDate date) {","lastModifiedDate":"2023-11-10"},{"lineNumber":133,"author":{"gitId":"Kb-Tay"},"content":"        for (Person person : internalList) {","lastModifiedDate":"2023-11-10"},{"lineNumber":134,"author":{"gitId":"Kb-Tay"},"content":"            if (person.isSameAppointmentDate(date)) {","lastModifiedDate":"2023-11-10"},{"lineNumber":135,"author":{"gitId":"Kb-Tay"},"content":"                return true;","lastModifiedDate":"2023-11-10"},{"lineNumber":136,"author":{"gitId":"Kb-Tay"},"content":"            }","lastModifiedDate":"2023-11-10"},{"lineNumber":137,"author":{"gitId":"Kb-Tay"},"content":"        }","lastModifiedDate":"2023-11-10"},{"lineNumber":138,"author":{"gitId":"Kb-Tay"},"content":"        return false;","lastModifiedDate":"2023-11-10"},{"lineNumber":139,"author":{"gitId":"Kb-Tay"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":140,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-09-01"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2017-09-01"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-09-01"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2018-04-05"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2018-12-09"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    public Iterator\u003cPerson\u003e iterator() {","lastModifiedDate":"2016-08-24"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        return internalList.iterator();","lastModifiedDate":"2016-08-24"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":156,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        if (!(other instanceof UniquePersonList)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":161,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        UniquePersonList otherUniquePersonList \u003d (UniquePersonList) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        return internalList.equals(otherUniquePersonList.internalList);","lastModifiedDate":"2023-07-13"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        return internalList.hashCode();","lastModifiedDate":"2016-09-21"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-24"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-24"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        return internalList.toString();","lastModifiedDate":"2019-02-24"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-24"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-24"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":179,"author":{"gitId":"-"},"content":"     * Returns true if {@code persons} contains only unique persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":180,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    private boolean personsAreUnique(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-04-19"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c persons.size() - 1; i++) {","lastModifiedDate":"2018-04-19"},{"lineNumber":183,"author":{"gitId":"-"},"content":"            for (int j \u003d i + 1; j \u003c persons.size(); j++) {","lastModifiedDate":"2018-04-19"},{"lineNumber":184,"author":{"gitId":"-"},"content":"                if (persons.get(i).isSamePerson(persons.get(j))) {","lastModifiedDate":"2018-04-19"},{"lineNumber":185,"author":{"gitId":"-"},"content":"                    return false;","lastModifiedDate":"2018-04-19"},{"lineNumber":186,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2018-04-19"},{"lineNumber":187,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-04-19"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":191,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Kb-Tay":24,"AlyssaPng":16,"jylow":1,"-":150}},{"path":"src/main/java/seedu/address/model/person/comparator/SortByAppointmentComparator.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jylow"},"content":"package seedu.address.model.person.comparator;","lastModifiedDate":"2023-11-10"},{"lineNumber":2,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":3,"author":{"gitId":"jylow"},"content":"import java.util.Comparator;","lastModifiedDate":"2023-10-19"},{"lineNumber":4,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":5,"author":{"gitId":"jylow"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-19"},{"lineNumber":6,"author":{"gitId":"jylow"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-11-10"},{"lineNumber":7,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":8,"author":{"gitId":"jylow"},"content":"/**","lastModifiedDate":"2023-10-19"},{"lineNumber":9,"author":{"gitId":"jylow"},"content":" * Compares a {@code Person}\u0027s {@code Appointment} to another {@code Person}\u0027s {@code Appointment} to determine","lastModifiedDate":"2023-10-20"},{"lineNumber":10,"author":{"gitId":"jylow"},"content":" * appointment ordering.","lastModifiedDate":"2023-10-20"},{"lineNumber":11,"author":{"gitId":"jylow"},"content":" */","lastModifiedDate":"2023-10-19"},{"lineNumber":12,"author":{"gitId":"jylow"},"content":"public class SortByAppointmentComparator implements Comparator\u003cPerson\u003e {","lastModifiedDate":"2023-10-19"},{"lineNumber":13,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":14,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":15,"author":{"gitId":"jylow"},"content":"    @Override","lastModifiedDate":"2023-10-19"},{"lineNumber":16,"author":{"gitId":"jylow"},"content":"    public int compare(Person o1, Person o2) {","lastModifiedDate":"2023-10-19"},{"lineNumber":17,"author":{"gitId":"jylow"},"content":"        return o1.getAppointment().compareTo(o2.getAppointment());","lastModifiedDate":"2023-10-19"},{"lineNumber":18,"author":{"gitId":"jylow"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":19,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":20,"author":{"gitId":"jylow"},"content":"    @Override","lastModifiedDate":"2023-10-20"},{"lineNumber":21,"author":{"gitId":"jylow"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-20"},{"lineNumber":22,"author":{"gitId":"jylow"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-20"},{"lineNumber":23,"author":{"gitId":"jylow"},"content":"            return true;","lastModifiedDate":"2023-10-20"},{"lineNumber":24,"author":{"gitId":"jylow"},"content":"        }","lastModifiedDate":"2023-10-20"},{"lineNumber":25,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":26,"author":{"gitId":"jylow"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-20"},{"lineNumber":27,"author":{"gitId":"jylow"},"content":"        if (!(other instanceof SortByAppointmentComparator)) {","lastModifiedDate":"2023-10-20"},{"lineNumber":28,"author":{"gitId":"jylow"},"content":"            return false;","lastModifiedDate":"2023-10-20"},{"lineNumber":29,"author":{"gitId":"jylow"},"content":"        }","lastModifiedDate":"2023-10-20"},{"lineNumber":30,"author":{"gitId":"jylow"},"content":"        return true;","lastModifiedDate":"2023-10-20"},{"lineNumber":31,"author":{"gitId":"jylow"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":32,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":33,"author":{"gitId":"jylow"},"content":"    @Override","lastModifiedDate":"2023-10-19"},{"lineNumber":34,"author":{"gitId":"jylow"},"content":"    public String toString() {","lastModifiedDate":"2023-10-19"},{"lineNumber":35,"author":{"gitId":"jylow"},"content":"        return new ToStringBuilder(this).toString();","lastModifiedDate":"2023-10-19"},{"lineNumber":36,"author":{"gitId":"jylow"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":37,"author":{"gitId":"jylow"},"content":"}","lastModifiedDate":"2023-10-19"}],"authorContributionMap":{"jylow":37}},{"path":"src/main/java/seedu/address/model/person/comparator/SortByNameComparator.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jylow"},"content":"package seedu.address.model.person.comparator;","lastModifiedDate":"2023-11-10"},{"lineNumber":2,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":3,"author":{"gitId":"jylow"},"content":"import java.util.Comparator;","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"jylow"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"jylow"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-11-10"},{"lineNumber":7,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"jylow"},"content":"/**","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"jylow"},"content":" * Compares a {@code Person}\u0027s {@code Name} to another {@code Person}\u0027s {@code Name} to determine","lastModifiedDate":"2023-10-18"},{"lineNumber":10,"author":{"gitId":"jylow"},"content":" * lexicographical ordering of the names.","lastModifiedDate":"2023-10-18"},{"lineNumber":11,"author":{"gitId":"jylow"},"content":" */","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"jylow"},"content":"public class SortByNameComparator implements Comparator\u003cPerson\u003e {","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":14,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":15,"author":{"gitId":"jylow"},"content":"    @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"jylow"},"content":"    public int compare(Person o1, Person o2) {","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"jylow"},"content":"        return o1.getName().compareTo(o2.getName());","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"jylow"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":20,"author":{"gitId":"jylow"},"content":"    @Override","lastModifiedDate":"2023-10-20"},{"lineNumber":21,"author":{"gitId":"jylow"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-20"},{"lineNumber":22,"author":{"gitId":"jylow"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-20"},{"lineNumber":23,"author":{"gitId":"jylow"},"content":"            return true;","lastModifiedDate":"2023-10-20"},{"lineNumber":24,"author":{"gitId":"jylow"},"content":"        }","lastModifiedDate":"2023-10-20"},{"lineNumber":25,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":26,"author":{"gitId":"jylow"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-20"},{"lineNumber":27,"author":{"gitId":"jylow"},"content":"        if (!(other instanceof SortByNameComparator)) {","lastModifiedDate":"2023-10-20"},{"lineNumber":28,"author":{"gitId":"jylow"},"content":"            return false;","lastModifiedDate":"2023-10-20"},{"lineNumber":29,"author":{"gitId":"jylow"},"content":"        }","lastModifiedDate":"2023-10-20"},{"lineNumber":30,"author":{"gitId":"jylow"},"content":"        return true;","lastModifiedDate":"2023-10-20"},{"lineNumber":31,"author":{"gitId":"jylow"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":32,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":33,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":34,"author":{"gitId":"jylow"},"content":"    @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":35,"author":{"gitId":"jylow"},"content":"    public String toString() {","lastModifiedDate":"2023-10-17"},{"lineNumber":36,"author":{"gitId":"jylow"},"content":"        return new ToStringBuilder(this).toString();","lastModifiedDate":"2023-10-17"},{"lineNumber":37,"author":{"gitId":"jylow"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":38,"author":{"gitId":"jylow"},"content":"}","lastModifiedDate":"2023-10-17"}],"authorContributionMap":{"jylow":38}},{"path":"src/main/java/seedu/address/model/person/gatheremail/GatherEmailByFinancialPlan.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"AlyssaPng"},"content":"//@@author AlyssaPng","lastModifiedDate":"2023-11-10"},{"lineNumber":2,"author":{"gitId":"AlyssaPng"},"content":"package seedu.address.model.person.gatheremail;","lastModifiedDate":"2023-10-23"},{"lineNumber":3,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":4,"author":{"gitId":"AlyssaPng"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-23"},{"lineNumber":5,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":6,"author":{"gitId":"AlyssaPng"},"content":"/**","lastModifiedDate":"2023-10-22"},{"lineNumber":7,"author":{"gitId":"AlyssaPng"},"content":" * Gathers the email of {@code Person} if {@code Person}\u0027s Financial Plans Names contains {@code promptFp}","lastModifiedDate":"2023-10-26"},{"lineNumber":8,"author":{"gitId":"AlyssaPng"},"content":" * as a substring.","lastModifiedDate":"2023-10-22"},{"lineNumber":9,"author":{"gitId":"AlyssaPng"},"content":" */","lastModifiedDate":"2023-10-22"},{"lineNumber":10,"author":{"gitId":"AlyssaPng"},"content":"public class GatherEmailByFinancialPlan implements GatherEmailPrompt {","lastModifiedDate":"2023-10-23"},{"lineNumber":11,"author":{"gitId":"AlyssaPng"},"content":"    private final String promptFp;","lastModifiedDate":"2023-10-22"},{"lineNumber":12,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":13,"author":{"gitId":"AlyssaPng"},"content":"    /**","lastModifiedDate":"2023-10-23"},{"lineNumber":14,"author":{"gitId":"AlyssaPng"},"content":"     * Constructs a new GatherEmailByFinancial Object","lastModifiedDate":"2023-10-23"},{"lineNumber":15,"author":{"gitId":"AlyssaPng"},"content":"     */","lastModifiedDate":"2023-10-23"},{"lineNumber":16,"author":{"gitId":"AlyssaPng"},"content":"    public GatherEmailByFinancialPlan(String promptFp) {","lastModifiedDate":"2023-10-23"},{"lineNumber":17,"author":{"gitId":"AlyssaPng"},"content":"        this.promptFp \u003d promptFp;","lastModifiedDate":"2023-10-22"},{"lineNumber":18,"author":{"gitId":"AlyssaPng"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":19,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":20,"author":{"gitId":"AlyssaPng"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":21,"author":{"gitId":"AlyssaPng"},"content":"     * Gathers the email of {@code person} if {@code person}\u0027s financial plan names matches a specific prompt.","lastModifiedDate":"2023-11-10"},{"lineNumber":22,"author":{"gitId":"AlyssaPng"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":23,"author":{"gitId":"AlyssaPng"},"content":"    @Override","lastModifiedDate":"2023-10-22"},{"lineNumber":24,"author":{"gitId":"AlyssaPng"},"content":"    public String gatherEmails(Person person) {","lastModifiedDate":"2023-10-22"},{"lineNumber":25,"author":{"gitId":"AlyssaPng"},"content":"        return person.gatherEmailsContainsFinancialPlan(promptFp);","lastModifiedDate":"2023-10-22"},{"lineNumber":26,"author":{"gitId":"AlyssaPng"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":27,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":28,"author":{"gitId":"AlyssaPng"},"content":"    @Override","lastModifiedDate":"2023-10-22"},{"lineNumber":29,"author":{"gitId":"AlyssaPng"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-22"},{"lineNumber":30,"author":{"gitId":"AlyssaPng"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-22"},{"lineNumber":31,"author":{"gitId":"AlyssaPng"},"content":"            return true;","lastModifiedDate":"2023-10-22"},{"lineNumber":32,"author":{"gitId":"AlyssaPng"},"content":"        }","lastModifiedDate":"2023-10-22"},{"lineNumber":33,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":34,"author":{"gitId":"AlyssaPng"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-22"},{"lineNumber":35,"author":{"gitId":"AlyssaPng"},"content":"        if (!(other instanceof GatherEmailByFinancialPlan)) {","lastModifiedDate":"2023-10-23"},{"lineNumber":36,"author":{"gitId":"AlyssaPng"},"content":"            return false;","lastModifiedDate":"2023-10-22"},{"lineNumber":37,"author":{"gitId":"AlyssaPng"},"content":"        }","lastModifiedDate":"2023-10-22"},{"lineNumber":38,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":39,"author":{"gitId":"AlyssaPng"},"content":"        GatherEmailByFinancialPlan otherGatherByFinancialPlan \u003d (GatherEmailByFinancialPlan) other;","lastModifiedDate":"2023-10-23"},{"lineNumber":40,"author":{"gitId":"AlyssaPng"},"content":"        return promptFp.equals(otherGatherByFinancialPlan.promptFp);","lastModifiedDate":"2023-10-23"},{"lineNumber":41,"author":{"gitId":"AlyssaPng"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":42,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":43,"author":{"gitId":"AlyssaPng"},"content":"    /**","lastModifiedDate":"2023-11-10"},{"lineNumber":44,"author":{"gitId":"AlyssaPng"},"content":"     * Returns the String representation of GatherEmailByFinancialPlan Object.","lastModifiedDate":"2023-11-10"},{"lineNumber":45,"author":{"gitId":"AlyssaPng"},"content":"     */","lastModifiedDate":"2023-11-10"},{"lineNumber":46,"author":{"gitId":"AlyssaPng"},"content":"    @Override","lastModifiedDate":"2023-10-22"},{"lineNumber":47,"author":{"gitId":"AlyssaPng"},"content":"    public String toString() {","lastModifiedDate":"2023-10-22"},{"lineNumber":48,"author":{"gitId":"AlyssaPng"},"content":"        return \"Financial Plan: \" + promptFp;","lastModifiedDate":"2023-10-22"},{"lineNumber":49,"author":{"gitId":"AlyssaPng"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":50,"author":{"gitId":"AlyssaPng"},"content":"}","lastModifiedDate":"2023-10-22"}],"authorContributionMap":{"AlyssaPng":50}},{"path":"src/main/java/seedu/address/model/person/gatheremail/GatherEmailByTag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"AlyssaPng"},"content":"//@@author AlyssaPng","lastModifiedDate":"2023-11-10"},{"lineNumber":2,"author":{"gitId":"AlyssaPng"},"content":"package seedu.address.model.person.gatheremail;","lastModifiedDate":"2023-10-23"},{"lineNumber":3,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":4,"author":{"gitId":"AlyssaPng"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-23"},{"lineNumber":5,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":6,"author":{"gitId":"AlyssaPng"},"content":"/**","lastModifiedDate":"2023-10-22"},{"lineNumber":7,"author":{"gitId":"AlyssaPng"},"content":" * Gathers the email of {@code Person} if {@code Person}\u0027s Tags Names contains {@code promptTag}","lastModifiedDate":"2023-10-26"},{"lineNumber":8,"author":{"gitId":"AlyssaPng"},"content":" * as a substring.","lastModifiedDate":"2023-10-22"},{"lineNumber":9,"author":{"gitId":"AlyssaPng"},"content":" */","lastModifiedDate":"2023-10-22"},{"lineNumber":10,"author":{"gitId":"AlyssaPng"},"content":"public class GatherEmailByTag implements GatherEmailPrompt {","lastModifiedDate":"2023-10-23"},{"lineNumber":11,"author":{"gitId":"AlyssaPng"},"content":"    private final String promptTag;","lastModifiedDate":"2023-10-22"},{"lineNumber":12,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":13,"author":{"gitId":"AlyssaPng"},"content":"    /**","lastModifiedDate":"2023-10-23"},{"lineNumber":14,"author":{"gitId":"AlyssaPng"},"content":"     * Constructs a new GatherEmailByTag Object","lastModifiedDate":"2023-10-23"},{"lineNumber":15,"author":{"gitId":"AlyssaPng"},"content":"     */","lastModifiedDate":"2023-10-23"},{"lineNumber":16,"author":{"gitId":"AlyssaPng"},"content":"    public GatherEmailByTag(String promptTag) {","lastModifiedDate":"2023-10-23"},{"lineNumber":17,"author":{"gitId":"AlyssaPng"},"content":"        this.promptTag \u003d promptTag;","lastModifiedDate":"2023-10-22"},{"lineNumber":18,"author":{"gitId":"AlyssaPng"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":19,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":20,"author":{"gitId":"AlyssaPng"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":21,"author":{"gitId":"AlyssaPng"},"content":"     * Gathers the email of {@code person} if {@code person}\u0027s tag names matches a specific prompt.","lastModifiedDate":"2023-10-26"},{"lineNumber":22,"author":{"gitId":"AlyssaPng"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":23,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":24,"author":{"gitId":"AlyssaPng"},"content":"    @Override","lastModifiedDate":"2023-10-22"},{"lineNumber":25,"author":{"gitId":"AlyssaPng"},"content":"    public String gatherEmails(Person person) {","lastModifiedDate":"2023-10-22"},{"lineNumber":26,"author":{"gitId":"AlyssaPng"},"content":"        return person.gatherEmailsContainsTag(promptTag);","lastModifiedDate":"2023-10-22"},{"lineNumber":27,"author":{"gitId":"AlyssaPng"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":28,"author":{"gitId":"AlyssaPng"},"content":"    @Override","lastModifiedDate":"2023-10-22"},{"lineNumber":29,"author":{"gitId":"AlyssaPng"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-22"},{"lineNumber":30,"author":{"gitId":"AlyssaPng"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-22"},{"lineNumber":31,"author":{"gitId":"AlyssaPng"},"content":"            return true;","lastModifiedDate":"2023-10-22"},{"lineNumber":32,"author":{"gitId":"AlyssaPng"},"content":"        }","lastModifiedDate":"2023-10-22"},{"lineNumber":33,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":34,"author":{"gitId":"AlyssaPng"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-22"},{"lineNumber":35,"author":{"gitId":"AlyssaPng"},"content":"        if (!(other instanceof GatherEmailByTag)) {","lastModifiedDate":"2023-10-23"},{"lineNumber":36,"author":{"gitId":"AlyssaPng"},"content":"            return false;","lastModifiedDate":"2023-10-22"},{"lineNumber":37,"author":{"gitId":"AlyssaPng"},"content":"        }","lastModifiedDate":"2023-10-22"},{"lineNumber":38,"author":{"gitId":"AlyssaPng"},"content":"        GatherEmailByTag otherGatherCommand \u003d (GatherEmailByTag) other;","lastModifiedDate":"2023-10-23"},{"lineNumber":39,"author":{"gitId":"AlyssaPng"},"content":"        return promptTag.equals(otherGatherCommand.promptTag);","lastModifiedDate":"2023-10-22"},{"lineNumber":40,"author":{"gitId":"AlyssaPng"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":41,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":42,"author":{"gitId":"AlyssaPng"},"content":"    /**","lastModifiedDate":"2023-11-10"},{"lineNumber":43,"author":{"gitId":"AlyssaPng"},"content":"     * Returns the String representation of GatherEmailByTag Object.","lastModifiedDate":"2023-11-10"},{"lineNumber":44,"author":{"gitId":"AlyssaPng"},"content":"     */","lastModifiedDate":"2023-11-10"},{"lineNumber":45,"author":{"gitId":"AlyssaPng"},"content":"    @Override","lastModifiedDate":"2023-10-22"},{"lineNumber":46,"author":{"gitId":"AlyssaPng"},"content":"    public String toString() {","lastModifiedDate":"2023-10-22"},{"lineNumber":47,"author":{"gitId":"AlyssaPng"},"content":"        return \"Tag: \" + promptTag;","lastModifiedDate":"2023-10-22"},{"lineNumber":48,"author":{"gitId":"AlyssaPng"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":49,"author":{"gitId":"AlyssaPng"},"content":"}","lastModifiedDate":"2023-10-22"}],"authorContributionMap":{"AlyssaPng":49}},{"path":"src/main/java/seedu/address/model/person/gatheremail/GatherEmailPrompt.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"AlyssaPng"},"content":"//@@author AlyssaPng","lastModifiedDate":"2023-11-10"},{"lineNumber":2,"author":{"gitId":"AlyssaPng"},"content":"package seedu.address.model.person.gatheremail;","lastModifiedDate":"2023-10-23"},{"lineNumber":3,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":4,"author":{"gitId":"AlyssaPng"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-23"},{"lineNumber":5,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":6,"author":{"gitId":"AlyssaPng"},"content":"/**","lastModifiedDate":"2023-10-22"},{"lineNumber":7,"author":{"gitId":"AlyssaPng"},"content":" * Gathers the email of {@code Person} if {@code Person}\u0027s matches a specific prompt.","lastModifiedDate":"2023-10-26"},{"lineNumber":8,"author":{"gitId":"AlyssaPng"},"content":" */","lastModifiedDate":"2023-10-22"},{"lineNumber":9,"author":{"gitId":"AlyssaPng"},"content":"public interface GatherEmailPrompt {","lastModifiedDate":"2023-10-23"},{"lineNumber":10,"author":{"gitId":"AlyssaPng"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":11,"author":{"gitId":"AlyssaPng"},"content":"     * Gathers the email of {@code person} if {@code person}\u0027s financial plan or tag names matches a specific prompt.","lastModifiedDate":"2023-10-26"},{"lineNumber":12,"author":{"gitId":"AlyssaPng"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":13,"author":{"gitId":"AlyssaPng"},"content":"    public String gatherEmails(Person person);","lastModifiedDate":"2023-10-22"},{"lineNumber":14,"author":{"gitId":"AlyssaPng"},"content":"}","lastModifiedDate":"2023-10-22"}],"authorContributionMap":{"AlyssaPng":14}},{"path":"src/main/java/seedu/address/model/person/predicates/CombinedPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sopa301"},"content":"package seedu.address.model.person.predicates;","lastModifiedDate":"2023-10-25"},{"lineNumber":2,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":3,"author":{"gitId":"sopa301"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-11-07"},{"lineNumber":4,"author":{"gitId":"sopa301"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-10-25"},{"lineNumber":5,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":6,"author":{"gitId":"sopa301"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2023-11-07"},{"lineNumber":7,"author":{"gitId":"sopa301"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-25"},{"lineNumber":8,"author":{"gitId":"sopa301"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-25"},{"lineNumber":9,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":10,"author":{"gitId":"sopa301"},"content":"/**","lastModifiedDate":"2023-10-25"},{"lineNumber":11,"author":{"gitId":"sopa301"},"content":" * Tests that at least one of a {@code Person}\u0027s fields matches any of the keywords given.","lastModifiedDate":"2023-11-07"},{"lineNumber":12,"author":{"gitId":"sopa301"},"content":" */","lastModifiedDate":"2023-10-25"},{"lineNumber":13,"author":{"gitId":"sopa301"},"content":"public class CombinedPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2023-10-25"},{"lineNumber":14,"author":{"gitId":"sopa301"},"content":"    public final PersonContainsKeywordsPredicate[] predicates;","lastModifiedDate":"2023-11-07"},{"lineNumber":15,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":16,"author":{"gitId":"sopa301"},"content":"    /**","lastModifiedDate":"2023-10-25"},{"lineNumber":17,"author":{"gitId":"sopa301"},"content":"     * Creates a combined \"or\" predicate from the given collection of predicates. Requires that none of the elements","lastModifiedDate":"2023-11-07"},{"lineNumber":18,"author":{"gitId":"sopa301"},"content":"     * in the given collection is null.","lastModifiedDate":"2023-11-07"},{"lineNumber":19,"author":{"gitId":"sopa301"},"content":"     *","lastModifiedDate":"2023-10-25"},{"lineNumber":20,"author":{"gitId":"sopa301"},"content":"     * @param predicates keyword predicates to check a person against.","lastModifiedDate":"2023-11-07"},{"lineNumber":21,"author":{"gitId":"sopa301"},"content":"     */","lastModifiedDate":"2023-10-25"},{"lineNumber":22,"author":{"gitId":"sopa301"},"content":"    public CombinedPredicate(PersonContainsKeywordsPredicate... predicates) {","lastModifiedDate":"2023-11-07"},{"lineNumber":23,"author":{"gitId":"sopa301"},"content":"        CollectionUtil.requireAllNonNull((Object[]) predicates);","lastModifiedDate":"2023-11-07"},{"lineNumber":24,"author":{"gitId":"sopa301"},"content":"        this.predicates \u003d new PersonContainsKeywordsPredicate[predicates.length];","lastModifiedDate":"2023-11-07"},{"lineNumber":25,"author":{"gitId":"sopa301"},"content":"        for (int i \u003d 0; i \u003c predicates.length; i++) {","lastModifiedDate":"2023-11-07"},{"lineNumber":26,"author":{"gitId":"sopa301"},"content":"            this.predicates[i] \u003d predicates[i];","lastModifiedDate":"2023-11-07"},{"lineNumber":27,"author":{"gitId":"sopa301"},"content":"        }","lastModifiedDate":"2023-11-07"},{"lineNumber":28,"author":{"gitId":"sopa301"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":29,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":30,"author":{"gitId":"sopa301"},"content":"    @Override","lastModifiedDate":"2023-10-25"},{"lineNumber":31,"author":{"gitId":"sopa301"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2023-10-25"},{"lineNumber":32,"author":{"gitId":"sopa301"},"content":"        boolean result \u003d false;","lastModifiedDate":"2023-10-25"},{"lineNumber":33,"author":{"gitId":"sopa301"},"content":"        for (PersonContainsKeywordsPredicate predicate : this.predicates) {","lastModifiedDate":"2023-11-07"},{"lineNumber":34,"author":{"gitId":"sopa301"},"content":"            result \u003d result || predicate.test(person);","lastModifiedDate":"2023-11-07"},{"lineNumber":35,"author":{"gitId":"sopa301"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":36,"author":{"gitId":"sopa301"},"content":"        return result;","lastModifiedDate":"2023-10-25"},{"lineNumber":37,"author":{"gitId":"sopa301"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":38,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":39,"author":{"gitId":"sopa301"},"content":"    @Override","lastModifiedDate":"2023-10-25"},{"lineNumber":40,"author":{"gitId":"sopa301"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-25"},{"lineNumber":41,"author":{"gitId":"sopa301"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-25"},{"lineNumber":42,"author":{"gitId":"sopa301"},"content":"            return true;","lastModifiedDate":"2023-10-25"},{"lineNumber":43,"author":{"gitId":"sopa301"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":44,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":45,"author":{"gitId":"sopa301"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-25"},{"lineNumber":46,"author":{"gitId":"sopa301"},"content":"        if (!(other instanceof CombinedPredicate)) {","lastModifiedDate":"2023-10-25"},{"lineNumber":47,"author":{"gitId":"sopa301"},"content":"            return false;","lastModifiedDate":"2023-10-25"},{"lineNumber":48,"author":{"gitId":"sopa301"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":49,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":50,"author":{"gitId":"sopa301"},"content":"        CombinedPredicate otherNameContainsKeywordsPredicate \u003d","lastModifiedDate":"2023-10-25"},{"lineNumber":51,"author":{"gitId":"sopa301"},"content":"                (CombinedPredicate) other;","lastModifiedDate":"2023-10-25"},{"lineNumber":52,"author":{"gitId":"sopa301"},"content":"        return Arrays.equals(predicates,","lastModifiedDate":"2023-11-07"},{"lineNumber":53,"author":{"gitId":"sopa301"},"content":"                otherNameContainsKeywordsPredicate.predicates);","lastModifiedDate":"2023-11-07"},{"lineNumber":54,"author":{"gitId":"sopa301"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":55,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":56,"author":{"gitId":"sopa301"},"content":"    @Override","lastModifiedDate":"2023-10-25"},{"lineNumber":57,"author":{"gitId":"sopa301"},"content":"    public String toString() {","lastModifiedDate":"2023-10-25"},{"lineNumber":58,"author":{"gitId":"sopa301"},"content":"        ToStringBuilder toStringBuilder \u003d new ToStringBuilder(this);","lastModifiedDate":"2023-11-07"},{"lineNumber":59,"author":{"gitId":"sopa301"},"content":"        for (PersonContainsKeywordsPredicate predicate : this.predicates) {","lastModifiedDate":"2023-11-07"},{"lineNumber":60,"author":{"gitId":"sopa301"},"content":"            toStringBuilder.add(predicate.getClass().getCanonicalName(), predicate.toString());","lastModifiedDate":"2023-11-07"},{"lineNumber":61,"author":{"gitId":"sopa301"},"content":"        }","lastModifiedDate":"2023-11-07"},{"lineNumber":62,"author":{"gitId":"sopa301"},"content":"        return toStringBuilder.toString();","lastModifiedDate":"2023-11-07"},{"lineNumber":63,"author":{"gitId":"sopa301"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":64,"author":{"gitId":"sopa301"},"content":"}","lastModifiedDate":"2023-10-25"}],"authorContributionMap":{"sopa301":64}},{"path":"src/main/java/seedu/address/model/person/predicates/FinancialPlanContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sopa301"},"content":"package seedu.address.model.person.predicates;","lastModifiedDate":"2023-10-24"},{"lineNumber":2,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":3,"author":{"gitId":"sopa301"},"content":"import java.util.List;","lastModifiedDate":"2023-10-24"},{"lineNumber":4,"author":{"gitId":"sopa301"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-10-24"},{"lineNumber":5,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":6,"author":{"gitId":"sopa301"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-24"},{"lineNumber":7,"author":{"gitId":"sopa301"},"content":"import seedu.address.model.financialplan.FinancialPlan;","lastModifiedDate":"2023-10-24"},{"lineNumber":8,"author":{"gitId":"sopa301"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-24"},{"lineNumber":9,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":10,"author":{"gitId":"sopa301"},"content":"/**","lastModifiedDate":"2023-10-24"},{"lineNumber":11,"author":{"gitId":"sopa301"},"content":" * Tests that at least one of a {@code Person}\u0027s {@code FinancialPlan} matches any of the keywords given.","lastModifiedDate":"2023-10-24"},{"lineNumber":12,"author":{"gitId":"sopa301"},"content":" */","lastModifiedDate":"2023-10-24"},{"lineNumber":13,"author":{"gitId":"sopa301"},"content":"public class FinancialPlanContainsKeywordsPredicate implements PersonContainsKeywordsPredicate {","lastModifiedDate":"2023-11-07"},{"lineNumber":14,"author":{"gitId":"sopa301"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2023-10-24"},{"lineNumber":15,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":16,"author":{"gitId":"sopa301"},"content":"    public FinancialPlanContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2023-10-24"},{"lineNumber":17,"author":{"gitId":"sopa301"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2023-10-24"},{"lineNumber":18,"author":{"gitId":"sopa301"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":19,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":20,"author":{"gitId":"sopa301"},"content":"    @Override","lastModifiedDate":"2023-10-24"},{"lineNumber":21,"author":{"gitId":"sopa301"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2023-10-24"},{"lineNumber":22,"author":{"gitId":"sopa301"},"content":"        Stream\u003cFinancialPlan\u003e financialPlanStream \u003d person.getFinancialPlans().stream();","lastModifiedDate":"2023-10-24"},{"lineNumber":23,"author":{"gitId":"sopa301"},"content":"        // We check for each financial plan if it contains a keyword as a substring","lastModifiedDate":"2023-10-24"},{"lineNumber":24,"author":{"gitId":"sopa301"},"content":"        return financialPlanStream.anyMatch(financialPlan -\u003e keywords.stream()","lastModifiedDate":"2023-10-24"},{"lineNumber":25,"author":{"gitId":"sopa301"},"content":"                .anyMatch(keyword -\u003e financialPlan.containsSubstring(keyword)));","lastModifiedDate":"2023-10-24"},{"lineNumber":26,"author":{"gitId":"sopa301"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":27,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":28,"author":{"gitId":"sopa301"},"content":"    @Override","lastModifiedDate":"2023-10-24"},{"lineNumber":29,"author":{"gitId":"sopa301"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-24"},{"lineNumber":30,"author":{"gitId":"sopa301"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-24"},{"lineNumber":31,"author":{"gitId":"sopa301"},"content":"            return true;","lastModifiedDate":"2023-10-24"},{"lineNumber":32,"author":{"gitId":"sopa301"},"content":"        }","lastModifiedDate":"2023-10-24"},{"lineNumber":33,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":34,"author":{"gitId":"sopa301"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-24"},{"lineNumber":35,"author":{"gitId":"sopa301"},"content":"        if (!(other instanceof FinancialPlanContainsKeywordsPredicate)) {","lastModifiedDate":"2023-10-24"},{"lineNumber":36,"author":{"gitId":"sopa301"},"content":"            return false;","lastModifiedDate":"2023-10-24"},{"lineNumber":37,"author":{"gitId":"sopa301"},"content":"        }","lastModifiedDate":"2023-10-24"},{"lineNumber":38,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":39,"author":{"gitId":"sopa301"},"content":"        FinancialPlanContainsKeywordsPredicate otherNameContainsKeywordsPredicate \u003d","lastModifiedDate":"2023-10-24"},{"lineNumber":40,"author":{"gitId":"sopa301"},"content":"                (FinancialPlanContainsKeywordsPredicate) other;","lastModifiedDate":"2023-10-24"},{"lineNumber":41,"author":{"gitId":"sopa301"},"content":"        return keywords.equals(otherNameContainsKeywordsPredicate.keywords);","lastModifiedDate":"2023-10-24"},{"lineNumber":42,"author":{"gitId":"sopa301"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":43,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":44,"author":{"gitId":"sopa301"},"content":"    @Override","lastModifiedDate":"2023-10-24"},{"lineNumber":45,"author":{"gitId":"sopa301"},"content":"    public String toString() {","lastModifiedDate":"2023-10-24"},{"lineNumber":46,"author":{"gitId":"sopa301"},"content":"        return new ToStringBuilder(this).add(\"keywords\", keywords).toString();","lastModifiedDate":"2023-10-24"},{"lineNumber":47,"author":{"gitId":"sopa301"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":48,"author":{"gitId":"sopa301"},"content":"}","lastModifiedDate":"2023-10-24"}],"authorContributionMap":{"sopa301":48}},{"path":"src/main/java/seedu/address/model/person/predicates/NameContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sopa301"},"content":"package seedu.address.model.person.predicates;","lastModifiedDate":"2023-10-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":7,"author":{"gitId":"sopa301"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Tests that a {@code Person}\u0027s {@code Name} matches any of the keywords given.","lastModifiedDate":"2018-01-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"sopa301"},"content":"public class NameContainsKeywordsPredicate implements PersonContainsKeywordsPredicate {","lastModifiedDate":"2023-11-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public NameContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        return keywords.stream()","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"sopa301"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordsIgnoreCase(person.getName().fullName, keyword));","lastModifiedDate":"2023-10-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        if (!(other instanceof NameContainsKeywordsPredicate)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate otherNameContainsKeywordsPredicate \u003d (NameContainsKeywordsPredicate) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return keywords.equals(otherNameContainsKeywordsPredicate.keywords);","lastModifiedDate":"2023-07-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this).add(\"keywords\", keywords).toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"sopa301":4,"-":40}},{"path":"src/main/java/seedu/address/model/person/predicates/PersonContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sopa301"},"content":"package seedu.address.model.person.predicates;","lastModifiedDate":"2023-11-07"},{"lineNumber":2,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":3,"author":{"gitId":"sopa301"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-11-07"},{"lineNumber":4,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":5,"author":{"gitId":"sopa301"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-11-07"},{"lineNumber":6,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":7,"author":{"gitId":"sopa301"},"content":"/**","lastModifiedDate":"2023-11-07"},{"lineNumber":8,"author":{"gitId":"sopa301"},"content":" * Tests if a {@code Person} contains certain keywords in a certain field.","lastModifiedDate":"2023-11-07"},{"lineNumber":9,"author":{"gitId":"sopa301"},"content":" */","lastModifiedDate":"2023-11-07"},{"lineNumber":10,"author":{"gitId":"sopa301"},"content":"public interface PersonContainsKeywordsPredicate extends Predicate\u003cPerson\u003e {","lastModifiedDate":"2023-11-07"},{"lineNumber":11,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":12,"author":{"gitId":"sopa301"},"content":"    @Override","lastModifiedDate":"2023-11-07"},{"lineNumber":13,"author":{"gitId":"sopa301"},"content":"    boolean test(Person person);","lastModifiedDate":"2023-11-07"},{"lineNumber":14,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":15,"author":{"gitId":"sopa301"},"content":"    @Override","lastModifiedDate":"2023-11-07"},{"lineNumber":16,"author":{"gitId":"sopa301"},"content":"    boolean equals(Object other);","lastModifiedDate":"2023-11-07"},{"lineNumber":17,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":18,"author":{"gitId":"sopa301"},"content":"    @Override","lastModifiedDate":"2023-11-07"},{"lineNumber":19,"author":{"gitId":"sopa301"},"content":"    String toString();","lastModifiedDate":"2023-11-07"},{"lineNumber":20,"author":{"gitId":"sopa301"},"content":"}","lastModifiedDate":"2023-11-07"}],"authorContributionMap":{"sopa301":20}},{"path":"src/main/java/seedu/address/model/person/predicates/TagContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sopa301"},"content":"package seedu.address.model.person.predicates;","lastModifiedDate":"2023-10-24"},{"lineNumber":2,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":3,"author":{"gitId":"sopa301"},"content":"import java.util.List;","lastModifiedDate":"2023-10-24"},{"lineNumber":4,"author":{"gitId":"sopa301"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-10-24"},{"lineNumber":5,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":6,"author":{"gitId":"sopa301"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-24"},{"lineNumber":7,"author":{"gitId":"sopa301"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-24"},{"lineNumber":8,"author":{"gitId":"sopa301"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-10-24"},{"lineNumber":9,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":10,"author":{"gitId":"sopa301"},"content":"/**","lastModifiedDate":"2023-10-24"},{"lineNumber":11,"author":{"gitId":"sopa301"},"content":" * Tests that at least one of a {@code Person}\u0027s {@code Tag} matches any of the keywords given.","lastModifiedDate":"2023-10-24"},{"lineNumber":12,"author":{"gitId":"sopa301"},"content":" */","lastModifiedDate":"2023-10-24"},{"lineNumber":13,"author":{"gitId":"sopa301"},"content":"public class TagContainsKeywordsPredicate implements PersonContainsKeywordsPredicate {","lastModifiedDate":"2023-11-07"},{"lineNumber":14,"author":{"gitId":"sopa301"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2023-10-24"},{"lineNumber":15,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":16,"author":{"gitId":"sopa301"},"content":"    public TagContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2023-10-24"},{"lineNumber":17,"author":{"gitId":"sopa301"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2023-10-24"},{"lineNumber":18,"author":{"gitId":"sopa301"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":19,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":20,"author":{"gitId":"sopa301"},"content":"    @Override","lastModifiedDate":"2023-10-24"},{"lineNumber":21,"author":{"gitId":"sopa301"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2023-10-24"},{"lineNumber":22,"author":{"gitId":"sopa301"},"content":"        Stream\u003cTag\u003e tagStream \u003d person.getTags().stream();","lastModifiedDate":"2023-10-24"},{"lineNumber":23,"author":{"gitId":"sopa301"},"content":"        // We check for each tag if it contains a keyword as a substring","lastModifiedDate":"2023-10-24"},{"lineNumber":24,"author":{"gitId":"sopa301"},"content":"        return tagStream.anyMatch(tag -\u003e keywords.stream()","lastModifiedDate":"2023-10-24"},{"lineNumber":25,"author":{"gitId":"sopa301"},"content":"                .anyMatch(keyword -\u003e tag.containsSubstring(keyword)));","lastModifiedDate":"2023-10-24"},{"lineNumber":26,"author":{"gitId":"sopa301"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":27,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":28,"author":{"gitId":"sopa301"},"content":"    @Override","lastModifiedDate":"2023-10-24"},{"lineNumber":29,"author":{"gitId":"sopa301"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-24"},{"lineNumber":30,"author":{"gitId":"sopa301"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-24"},{"lineNumber":31,"author":{"gitId":"sopa301"},"content":"            return true;","lastModifiedDate":"2023-10-24"},{"lineNumber":32,"author":{"gitId":"sopa301"},"content":"        }","lastModifiedDate":"2023-10-24"},{"lineNumber":33,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":34,"author":{"gitId":"sopa301"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-24"},{"lineNumber":35,"author":{"gitId":"sopa301"},"content":"        if (!(other instanceof TagContainsKeywordsPredicate)) {","lastModifiedDate":"2023-10-24"},{"lineNumber":36,"author":{"gitId":"sopa301"},"content":"            return false;","lastModifiedDate":"2023-10-24"},{"lineNumber":37,"author":{"gitId":"sopa301"},"content":"        }","lastModifiedDate":"2023-10-24"},{"lineNumber":38,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":39,"author":{"gitId":"sopa301"},"content":"        TagContainsKeywordsPredicate otherNameContainsKeywordsPredicate \u003d (TagContainsKeywordsPredicate) other;","lastModifiedDate":"2023-10-24"},{"lineNumber":40,"author":{"gitId":"sopa301"},"content":"        return keywords.equals(otherNameContainsKeywordsPredicate.keywords);","lastModifiedDate":"2023-10-24"},{"lineNumber":41,"author":{"gitId":"sopa301"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":42,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":43,"author":{"gitId":"sopa301"},"content":"    @Override","lastModifiedDate":"2023-10-24"},{"lineNumber":44,"author":{"gitId":"sopa301"},"content":"    public String toString() {","lastModifiedDate":"2023-10-24"},{"lineNumber":45,"author":{"gitId":"sopa301"},"content":"        return new ToStringBuilder(this).add(\"keywords\", keywords).toString();","lastModifiedDate":"2023-10-24"},{"lineNumber":46,"author":{"gitId":"sopa301"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":47,"author":{"gitId":"sopa301"},"content":"}","lastModifiedDate":"2023-10-24"}],"authorContributionMap":{"sopa301":47}},{"path":"src/main/java/seedu/address/model/tag/Tag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.tag;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Tag in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; name is valid as declared in {@link #isValidTagName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Tag {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"AlyssaPng"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Tags names should be alphanumeric only, \"","lastModifiedDate":"2023-11-09"},{"lineNumber":13,"author":{"gitId":"AlyssaPng"},"content":"                                                        + \"and it should not be blank\";","lastModifiedDate":"2023-11-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\p{Alnum}+\";","lastModifiedDate":"2018-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public final String tagName;","lastModifiedDate":"2016-10-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Constructs a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @param tagName A valid tag name.","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public Tag(String tagName) {","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        requireNonNull(tagName);","lastModifiedDate":"2017-05-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        checkArgument(isValidTagName(tagName), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        this.tagName \u003d tagName;","lastModifiedDate":"2017-05-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid tag name.","lastModifiedDate":"2016-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static boolean isValidTagName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"AlyssaPng"},"content":"    /**","lastModifiedDate":"2023-10-23"},{"lineNumber":36,"author":{"gitId":"AlyssaPng"},"content":"     * Returns true if the given string is a substring of {@code tagName}.","lastModifiedDate":"2023-11-10"},{"lineNumber":37,"author":{"gitId":"AlyssaPng"},"content":"     */","lastModifiedDate":"2023-10-23"},{"lineNumber":38,"author":{"gitId":"AlyssaPng"},"content":"    public boolean containsSubstring(String substring) {","lastModifiedDate":"2023-10-22"},{"lineNumber":39,"author":{"gitId":"AlyssaPng"},"content":"        return tagName.toLowerCase().contains(substring.toLowerCase());","lastModifiedDate":"2023-10-22"},{"lineNumber":40,"author":{"gitId":"AlyssaPng"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":41,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        if (!(other instanceof Tag)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        Tag otherTag \u003d (Tag) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return tagName.equals(otherTag.tagName);","lastModifiedDate":"2023-07-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return tagName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Format state as text for viewing.","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return \u0027[\u0027 + tagName + \u0027]\u0027;","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"AlyssaPng":9,"-":60}},{"path":"src/main/java/seedu/address/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.util;","lastModifiedDate":"2016-12-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":9,"author":{"gitId":"Kb-Tay"},"content":"import seedu.address.model.appointment.NullAppointment;","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"Kb-Tay"},"content":"import seedu.address.model.appointment.ScheduleItem;","lastModifiedDate":"2023-10-22"},{"lineNumber":11,"author":{"gitId":"nikele2001"},"content":"import seedu.address.model.financialplan.FinancialPlan;","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2016-12-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2016-12-20"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2016-12-20"},{"lineNumber":15,"author":{"gitId":"sopa301"},"content":"import seedu.address.model.person.NextOfKinName;","lastModifiedDate":"2023-09-28"},{"lineNumber":16,"author":{"gitId":"sopa301"},"content":"import seedu.address.model.person.NextOfKinPhone;","lastModifiedDate":"2023-09-28"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2016-12-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Contains utility methods for populating {@code AddressBook} with sample data.","lastModifiedDate":"2017-08-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":25,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":26,"author":{"gitId":"Kb-Tay"},"content":"    public static final ScheduleItem EMPTY_APPOINTMENT \u003d NullAppointment.getNullAppointment();","lastModifiedDate":"2023-10-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static Person[] getSamplePersons() {","lastModifiedDate":"2016-12-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return new Person[] {","lastModifiedDate":"2016-12-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Alex Yeoh\"), new Phone(\"87438807\"), new Email(\"alexyeoh@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":30,"author":{"gitId":"sopa301"},"content":"                new Address(\"Blk 30 Geylang Street 29, #06-40\"), new NextOfKinName(\"Alex Dad\"),","lastModifiedDate":"2023-09-28"},{"lineNumber":31,"author":{"gitId":"Kb-Tay"},"content":"                new NextOfKinPhone(\"999\"), getFinancialPlanSet(\"voodoo financial plan A\"),","lastModifiedDate":"2023-10-19"},{"lineNumber":32,"author":{"gitId":"Kb-Tay"},"content":"                    getTagSet(\"friends\"), EMPTY_APPOINTMENT),","lastModifiedDate":"2023-10-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Bernice Yu\"), new Phone(\"99272758\"), new Email(\"berniceyu@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":34,"author":{"gitId":"sopa301"},"content":"                new Address(\"Blk 30 Lorong 3 Serangoon Gardens, #07-18\"), new NextOfKinName(\"Bernice Mom\"),","lastModifiedDate":"2023-09-28"},{"lineNumber":35,"author":{"gitId":"nikele2001"},"content":"                new NextOfKinPhone(\"888\"), getFinancialPlanSet(\"voodoo financial plan B\"),","lastModifiedDate":"2023-10-16"},{"lineNumber":36,"author":{"gitId":"Kb-Tay"},"content":"                    getTagSet(\"colleagues\", \"friends\"), EMPTY_APPOINTMENT),","lastModifiedDate":"2023-10-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Charlotte Oliveiro\"), new Phone(\"93210283\"), new Email(\"charlotte@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":38,"author":{"gitId":"sopa301"},"content":"                new Address(\"Blk 11 Ang Mo Kio Street 74, #11-04\"), new NextOfKinName(\"Charlotte Bro\"),","lastModifiedDate":"2023-09-28"},{"lineNumber":39,"author":{"gitId":"Kb-Tay"},"content":"                new NextOfKinPhone(\"777\"), getFinancialPlanSet(\"voodoo financial plan C\"),","lastModifiedDate":"2023-10-19"},{"lineNumber":40,"author":{"gitId":"Kb-Tay"},"content":"                    getTagSet(\"neighbours\"), EMPTY_APPOINTMENT),","lastModifiedDate":"2023-10-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            new Person(new Name(\"David Li\"), new Phone(\"91031282\"), new Email(\"lidavid@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":42,"author":{"gitId":"sopa301"},"content":"                new Address(\"Blk 436 Serangoon Gardens Street 26, #16-43\"), new NextOfKinName(\"David Sis\"),","lastModifiedDate":"2023-09-28"},{"lineNumber":43,"author":{"gitId":"Kb-Tay"},"content":"                new NextOfKinPhone(\"666\"), getFinancialPlanSet(\"voodoo financial plan D\"),","lastModifiedDate":"2023-10-19"},{"lineNumber":44,"author":{"gitId":"Kb-Tay"},"content":"                    getTagSet(\"family\"), EMPTY_APPOINTMENT),","lastModifiedDate":"2023-10-19"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Irfan Ibrahim\"), new Phone(\"92492021\"), new Email(\"irfan@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":46,"author":{"gitId":"sopa301"},"content":"                new Address(\"Blk 47 Tampines Street 20, #17-35\"), new NextOfKinName(\"Ifran Grandpa\"),","lastModifiedDate":"2023-09-28"},{"lineNumber":47,"author":{"gitId":"Kb-Tay"},"content":"                new NextOfKinPhone(\"555\"), getFinancialPlanSet(\"voodoo financial plan E\"),","lastModifiedDate":"2023-10-19"},{"lineNumber":48,"author":{"gitId":"Kb-Tay"},"content":"                    getTagSet(\"classmates\"), EMPTY_APPOINTMENT),","lastModifiedDate":"2023-10-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Roy Balakrishnan\"), new Phone(\"92624417\"), new Email(\"royb@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":50,"author":{"gitId":"sopa301"},"content":"                new Address(\"Blk 45 Aljunied Street 85, #11-31\"), new NextOfKinName(\"Roy Grandma\"),","lastModifiedDate":"2023-09-28"},{"lineNumber":51,"author":{"gitId":"Kb-Tay"},"content":"                new NextOfKinPhone(\"444\"), getFinancialPlanSet(\"voodoo financial plan F\"),","lastModifiedDate":"2023-10-19"},{"lineNumber":52,"author":{"gitId":"Kb-Tay"},"content":"                    getTagSet(\"colleagues\"), EMPTY_APPOINTMENT)","lastModifiedDate":"2023-10-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public static ReadOnlyAddressBook getSampleAddressBook() {","lastModifiedDate":"2016-12-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        AddressBook sampleAb \u003d new AddressBook();","lastModifiedDate":"2017-04-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        for (Person samplePerson : getSamplePersons()) {","lastModifiedDate":"2016-12-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            sampleAb.addPerson(samplePerson);","lastModifiedDate":"2017-04-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return sampleAb;","lastModifiedDate":"2017-04-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":64,"author":{"gitId":"nikele2001"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":65,"author":{"gitId":"nikele2001"},"content":"     * Returns a financial plan set containing the list of strings given.","lastModifiedDate":"2023-10-16"},{"lineNumber":66,"author":{"gitId":"nikele2001"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":67,"author":{"gitId":"nikele2001"},"content":"    public static Set\u003cFinancialPlan\u003e getFinancialPlanSet(String... strings) {","lastModifiedDate":"2023-10-16"},{"lineNumber":68,"author":{"gitId":"nikele2001"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2023-10-16"},{"lineNumber":69,"author":{"gitId":"nikele2001"},"content":"                .map(FinancialPlan::new)","lastModifiedDate":"2023-10-16"},{"lineNumber":70,"author":{"gitId":"nikele2001"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2023-10-16"},{"lineNumber":71,"author":{"gitId":"nikele2001"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":72,"author":{"gitId":"nikele2001"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Returns a tag set containing the list of strings given.","lastModifiedDate":"2017-03-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e getTagSet(String... strings) {","lastModifiedDate":"2017-05-30"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2018-01-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                .map(Tag::new)","lastModifiedDate":"2018-01-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2018-01-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"Kb-Tay":15,"nikele2001":11,"sopa301":8,"-":48}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedAppointment.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Kb-Tay"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-10-17"},{"lineNumber":2,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":3,"author":{"gitId":"Kb-Tay"},"content":"import static seedu.address.model.appointment.NullAppointment.MESSAGE_NULL_APT;","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"AlyssaPng"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-11-10"},{"lineNumber":6,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":7,"author":{"gitId":"Kb-Tay"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"Kb-Tay"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"AlyssaPng"},"content":"import seedu.address.MainApp;","lastModifiedDate":"2023-11-10"},{"lineNumber":11,"author":{"gitId":"AlyssaPng"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-11-10"},{"lineNumber":12,"author":{"gitId":"Kb-Tay"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"Kb-Tay"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2023-10-17"},{"lineNumber":14,"author":{"gitId":"Kb-Tay"},"content":"import seedu.address.model.appointment.NullAppointment;","lastModifiedDate":"2023-10-17"},{"lineNumber":15,"author":{"gitId":"Kb-Tay"},"content":"import seedu.address.model.appointment.ScheduleItem;","lastModifiedDate":"2023-10-22"},{"lineNumber":16,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"Kb-Tay"},"content":"/**","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"Kb-Tay"},"content":" * Jackson-friendly version of {@link Appointment}.","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"Kb-Tay"},"content":" */","lastModifiedDate":"2023-10-17"},{"lineNumber":20,"author":{"gitId":"Kb-Tay"},"content":"class JsonAdaptedAppointment {","lastModifiedDate":"2023-10-17"},{"lineNumber":21,"author":{"gitId":"AlyssaPng"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(MainApp.class);","lastModifiedDate":"2023-11-10"},{"lineNumber":22,"author":{"gitId":"AlyssaPng"},"content":"    private final String appointment;","lastModifiedDate":"2023-11-10"},{"lineNumber":23,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":24,"author":{"gitId":"Kb-Tay"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":25,"author":{"gitId":"Kb-Tay"},"content":"     * Constructs a {@code JsonAdaptedAppointment} with the given {@code Appointment}.","lastModifiedDate":"2023-10-17"},{"lineNumber":26,"author":{"gitId":"Kb-Tay"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":27,"author":{"gitId":"Kb-Tay"},"content":"    @JsonCreator","lastModifiedDate":"2023-10-17"},{"lineNumber":28,"author":{"gitId":"Kb-Tay"},"content":"    public JsonAdaptedAppointment(String appointment) {","lastModifiedDate":"2023-10-17"},{"lineNumber":29,"author":{"gitId":"Kb-Tay"},"content":"        this.appointment \u003d appointment;","lastModifiedDate":"2023-10-17"},{"lineNumber":30,"author":{"gitId":"Kb-Tay"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":31,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":32,"author":{"gitId":"Kb-Tay"},"content":"    @JsonValue","lastModifiedDate":"2023-10-17"},{"lineNumber":33,"author":{"gitId":"Kb-Tay"},"content":"    public String getAptDescription() {","lastModifiedDate":"2023-10-17"},{"lineNumber":34,"author":{"gitId":"Kb-Tay"},"content":"        return appointment;","lastModifiedDate":"2023-10-17"},{"lineNumber":35,"author":{"gitId":"Kb-Tay"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":36,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":37,"author":{"gitId":"Kb-Tay"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":38,"author":{"gitId":"Kb-Tay"},"content":"     * Converts this Jackson-friendly adapted tag object into the model\u0027s {@code Tag} object.","lastModifiedDate":"2023-10-17"},{"lineNumber":39,"author":{"gitId":"Kb-Tay"},"content":"     *","lastModifiedDate":"2023-10-17"},{"lineNumber":40,"author":{"gitId":"Kb-Tay"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted tag.","lastModifiedDate":"2023-10-17"},{"lineNumber":41,"author":{"gitId":"Kb-Tay"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":42,"author":{"gitId":"Kb-Tay"},"content":"    public ScheduleItem toModelType() throws IllegalValueException {","lastModifiedDate":"2023-10-22"},{"lineNumber":43,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":44,"author":{"gitId":"Kb-Tay"},"content":"        if (appointment.equals(MESSAGE_NULL_APT)) {","lastModifiedDate":"2023-10-17"},{"lineNumber":45,"author":{"gitId":"Kb-Tay"},"content":"            return NullAppointment.getNullAppointment();","lastModifiedDate":"2023-10-23"},{"lineNumber":46,"author":{"gitId":"Kb-Tay"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":47,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":48,"author":{"gitId":"Kb-Tay"},"content":"        if (!Appointment.isValidAppointment(appointment)) {","lastModifiedDate":"2023-10-17"},{"lineNumber":49,"author":{"gitId":"AlyssaPng"},"content":"            logger.warning(\"Invalid Appointment Format: \" + appointment);","lastModifiedDate":"2023-11-10"},{"lineNumber":50,"author":{"gitId":"Kb-Tay"},"content":"            throw new IllegalValueException(Appointment.MESSAGE_APT_CONSTRAINTS);","lastModifiedDate":"2023-10-17"},{"lineNumber":51,"author":{"gitId":"Kb-Tay"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":52,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":53,"author":{"gitId":"Kb-Tay"},"content":"        return Appointment.parseAppointmentDescription(appointment);","lastModifiedDate":"2023-10-17"},{"lineNumber":54,"author":{"gitId":"Kb-Tay"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":55,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":56,"author":{"gitId":"Kb-Tay"},"content":"}","lastModifiedDate":"2023-10-17"}],"authorContributionMap":{"Kb-Tay":49,"AlyssaPng":7}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedFinancialPlan.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nikele2001"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-10-16"},{"lineNumber":2,"author":{"gitId":"nikele2001"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":3,"author":{"gitId":"AlyssaPng"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-11-10"},{"lineNumber":4,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":5,"author":{"gitId":"nikele2001"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2023-10-16"},{"lineNumber":6,"author":{"gitId":"nikele2001"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2023-10-16"},{"lineNumber":7,"author":{"gitId":"nikele2001"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":8,"author":{"gitId":"AlyssaPng"},"content":"import seedu.address.MainApp;","lastModifiedDate":"2023-11-10"},{"lineNumber":9,"author":{"gitId":"AlyssaPng"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-11-10"},{"lineNumber":10,"author":{"gitId":"nikele2001"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-10-16"},{"lineNumber":11,"author":{"gitId":"nikele2001"},"content":"import seedu.address.model.financialplan.FinancialPlan;","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"nikele2001"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":13,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":14,"author":{"gitId":"nikele2001"},"content":"/**","lastModifiedDate":"2023-10-16"},{"lineNumber":15,"author":{"gitId":"nikele2001"},"content":" * Jackson-friendly version of {@link FinancialPlan}.","lastModifiedDate":"2023-10-16"},{"lineNumber":16,"author":{"gitId":"nikele2001"},"content":" */","lastModifiedDate":"2023-10-16"},{"lineNumber":17,"author":{"gitId":"nikele2001"},"content":"public class JsonAdaptedFinancialPlan {","lastModifiedDate":"2023-10-16"},{"lineNumber":18,"author":{"gitId":"nikele2001"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":19,"author":{"gitId":"AlyssaPng"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(MainApp.class);","lastModifiedDate":"2023-11-10"},{"lineNumber":20,"author":{"gitId":"AlyssaPng"},"content":"    private final String financialPlanName;","lastModifiedDate":"2023-11-10"},{"lineNumber":21,"author":{"gitId":"nikele2001"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":22,"author":{"gitId":"nikele2001"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":23,"author":{"gitId":"nikele2001"},"content":"     * Constructs a {@code JsonAdaptedTag} with the given {@code tagName}.","lastModifiedDate":"2023-10-16"},{"lineNumber":24,"author":{"gitId":"nikele2001"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":25,"author":{"gitId":"nikele2001"},"content":"    @JsonCreator","lastModifiedDate":"2023-10-16"},{"lineNumber":26,"author":{"gitId":"nikele2001"},"content":"    public JsonAdaptedFinancialPlan(String financialPlanName) {","lastModifiedDate":"2023-10-16"},{"lineNumber":27,"author":{"gitId":"nikele2001"},"content":"        this.financialPlanName \u003d financialPlanName;","lastModifiedDate":"2023-10-16"},{"lineNumber":28,"author":{"gitId":"nikele2001"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":29,"author":{"gitId":"nikele2001"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":30,"author":{"gitId":"nikele2001"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":31,"author":{"gitId":"nikele2001"},"content":"     * Converts a given {@code Tag} into this class for Jackson use.","lastModifiedDate":"2023-10-16"},{"lineNumber":32,"author":{"gitId":"nikele2001"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":33,"author":{"gitId":"nikele2001"},"content":"    public JsonAdaptedFinancialPlan(FinancialPlan source) {","lastModifiedDate":"2023-10-16"},{"lineNumber":34,"author":{"gitId":"nikele2001"},"content":"        financialPlanName \u003d source.financialPlanName;","lastModifiedDate":"2023-10-16"},{"lineNumber":35,"author":{"gitId":"nikele2001"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":36,"author":{"gitId":"nikele2001"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":37,"author":{"gitId":"nikele2001"},"content":"    @JsonValue","lastModifiedDate":"2023-10-16"},{"lineNumber":38,"author":{"gitId":"nikele2001"},"content":"    public String getFinancialPlanName() {","lastModifiedDate":"2023-10-16"},{"lineNumber":39,"author":{"gitId":"nikele2001"},"content":"        return financialPlanName;","lastModifiedDate":"2023-10-16"},{"lineNumber":40,"author":{"gitId":"nikele2001"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":41,"author":{"gitId":"nikele2001"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":42,"author":{"gitId":"nikele2001"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":43,"author":{"gitId":"nikele2001"},"content":"     * Converts this Jackson-friendly adapted tag object into the model\u0027s {@code Tag} object.","lastModifiedDate":"2023-10-16"},{"lineNumber":44,"author":{"gitId":"nikele2001"},"content":"     *","lastModifiedDate":"2023-10-16"},{"lineNumber":45,"author":{"gitId":"nikele2001"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted tag.","lastModifiedDate":"2023-10-16"},{"lineNumber":46,"author":{"gitId":"nikele2001"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":47,"author":{"gitId":"nikele2001"},"content":"    public FinancialPlan toModelType() throws IllegalValueException {","lastModifiedDate":"2023-10-16"},{"lineNumber":48,"author":{"gitId":"nikele2001"},"content":"        if (!FinancialPlan.isValidFinancialPlanName(financialPlanName)) {","lastModifiedDate":"2023-10-16"},{"lineNumber":49,"author":{"gitId":"AlyssaPng"},"content":"            logger.warning(\"Invalid Financial Plan Name: \" + financialPlanName);","lastModifiedDate":"2023-11-10"},{"lineNumber":50,"author":{"gitId":"nikele2001"},"content":"            throw new IllegalValueException(FinancialPlan.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-16"},{"lineNumber":51,"author":{"gitId":"nikele2001"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":52,"author":{"gitId":"nikele2001"},"content":"        return new FinancialPlan(financialPlanName);","lastModifiedDate":"2023-10-16"},{"lineNumber":53,"author":{"gitId":"nikele2001"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":54,"author":{"gitId":"nikele2001"},"content":"}","lastModifiedDate":"2023-10-16"}],"authorContributionMap":{"nikele2001":46,"AlyssaPng":8}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedPerson.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"AlyssaPng"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-11-10"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"AlyssaPng"},"content":"import seedu.address.MainApp;","lastModifiedDate":"2023-11-10"},{"lineNumber":14,"author":{"gitId":"AlyssaPng"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-11-10"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"Kb-Tay"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"Kb-Tay"},"content":"import seedu.address.model.appointment.ScheduleItem;","lastModifiedDate":"2023-10-22"},{"lineNumber":18,"author":{"gitId":"nikele2001"},"content":"import seedu.address.model.financialplan.FinancialPlan;","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"sopa301"},"content":"import seedu.address.model.person.NextOfKinName;","lastModifiedDate":"2023-09-28"},{"lineNumber":23,"author":{"gitId":"sopa301"},"content":"import seedu.address.model.person.NextOfKinPhone;","lastModifiedDate":"2023-09-28"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Person}.","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"class JsonAdaptedPerson {","lastModifiedDate":"2018-12-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Person\u0027s %s field is missing!\";","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"AlyssaPng"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(MainApp.class);","lastModifiedDate":"2023-11-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private final String name;","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private final String phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private final String email;","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private final String address;","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"sopa301"},"content":"    private final String nextOfKinName;","lastModifiedDate":"2023-09-29"},{"lineNumber":40,"author":{"gitId":"sopa301"},"content":"    private final String nextOfKinPhone;","lastModifiedDate":"2023-09-29"},{"lineNumber":41,"author":{"gitId":"nikele2001"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":42,"author":{"gitId":"nikele2001"},"content":"    private final List\u003cJsonAdaptedFinancialPlan\u003e financialPlans \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedTag\u003e tags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-09"},{"lineNumber":44,"author":{"gitId":"Kb-Tay"},"content":"    private final JsonAdaptedAppointment appointment;","lastModifiedDate":"2023-10-17"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedPerson} with the given person details.","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(@JsonProperty(\"name\") String name, @JsonProperty(\"phone\") String phone,","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                             @JsonProperty(\"email\") String email, @JsonProperty(\"address\") String address,","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"sopa301"},"content":"                             @JsonProperty(\"nextOfKinName\") String nextOfKinName,","lastModifiedDate":"2023-09-29"},{"lineNumber":53,"author":{"gitId":"sopa301"},"content":"                             @JsonProperty(\"nextOfKinPhone\") String nextOfKinPhone,","lastModifiedDate":"2023-09-29"},{"lineNumber":54,"author":{"gitId":"nikele2001"},"content":"                             @JsonProperty(\"financialPlans\") List\u003cJsonAdaptedFinancialPlan\u003e financialPlans,","lastModifiedDate":"2023-10-16"},{"lineNumber":55,"author":{"gitId":"Kb-Tay"},"content":"                             @JsonProperty(\"tags\") List\u003cJsonAdaptedTag\u003e tags,","lastModifiedDate":"2023-10-17"},{"lineNumber":56,"author":{"gitId":"Kb-Tay"},"content":"                             @JsonProperty(\"appointment\") JsonAdaptedAppointment appointment) {","lastModifiedDate":"2023-10-17"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"sopa301"},"content":"        this.nextOfKinName \u003d nextOfKinName;","lastModifiedDate":"2023-09-29"},{"lineNumber":62,"author":{"gitId":"sopa301"},"content":"        this.nextOfKinPhone \u003d nextOfKinPhone;","lastModifiedDate":"2023-09-29"},{"lineNumber":63,"author":{"gitId":"nikele2001"},"content":"        if (financialPlans !\u003d null) {","lastModifiedDate":"2023-10-16"},{"lineNumber":64,"author":{"gitId":"nikele2001"},"content":"            this.financialPlans.addAll(financialPlans);","lastModifiedDate":"2023-10-16"},{"lineNumber":65,"author":{"gitId":"nikele2001"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        if (tags !\u003d null) {","lastModifiedDate":"2023-01-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            this.tags.addAll(tags);","lastModifiedDate":"2023-01-09"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"Kb-Tay"},"content":"        this.appointment \u003d appointment;","lastModifiedDate":"2023-10-17"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Converts a given {@code Person} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(Person source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        phone \u003d source.getPhone().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        email \u003d source.getEmail().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        address \u003d source.getAddress().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"sopa301"},"content":"        nextOfKinName \u003d source.getNextOfKinName().fullName;","lastModifiedDate":"2023-09-29"},{"lineNumber":81,"author":{"gitId":"sopa301"},"content":"        nextOfKinPhone \u003d source.getNextOfKinPhone().value;","lastModifiedDate":"2023-09-29"},{"lineNumber":82,"author":{"gitId":"nikele2001"},"content":"        financialPlans.addAll(source.getFinancialPlans().stream()","lastModifiedDate":"2023-10-16"},{"lineNumber":83,"author":{"gitId":"nikele2001"},"content":"                .map(JsonAdaptedFinancialPlan::new)","lastModifiedDate":"2023-10-16"},{"lineNumber":84,"author":{"gitId":"nikele2001"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2023-10-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        tags.addAll(source.getTags().stream()","lastModifiedDate":"2023-01-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"                .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"Kb-Tay"},"content":"        appointment \u003d new JsonAdaptedAppointment(source.getAppointment().toString());","lastModifiedDate":"2023-10-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted person object into the model\u0027s {@code Person} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted person.","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public Person toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"nikele2001"},"content":"        final List\u003cFinancialPlan\u003e personFinancialPlans \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-16"},{"lineNumber":98,"author":{"gitId":"nikele2001"},"content":"        for (JsonAdaptedFinancialPlan plan : financialPlans) {","lastModifiedDate":"2023-10-16"},{"lineNumber":99,"author":{"gitId":"nikele2001"},"content":"            personFinancialPlans.add(plan.toModelType());","lastModifiedDate":"2023-10-16"},{"lineNumber":100,"author":{"gitId":"nikele2001"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        final List\u003cTag\u003e personTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        for (JsonAdaptedTag tag : tags) {","lastModifiedDate":"2023-01-09"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            personTags.add(tag.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"AlyssaPng"},"content":"            logger.warning(\"Invalid Name: \" + name);","lastModifiedDate":"2023-11-10"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2018-08-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        if (phone \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(phone)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":119,"author":{"gitId":"AlyssaPng"},"content":"            logger.warning(\"Invalid Phone: \" + phone);","lastModifiedDate":"2023-11-10"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        final Phone modelPhone \u003d new Phone(phone);","lastModifiedDate":"2018-08-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        if (email \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(email)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":128,"author":{"gitId":"AlyssaPng"},"content":"            logger.warning(\"Invalid Email: \" + email);","lastModifiedDate":"2023-11-10"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        final Email modelEmail \u003d new Email(email);","lastModifiedDate":"2018-08-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        if (address \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(address)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":137,"author":{"gitId":"AlyssaPng"},"content":"            logger.warning(\"Invalid Address: \" + address);","lastModifiedDate":"2023-11-10"},{"lineNumber":138,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        final Address modelAddress \u003d new Address(address);","lastModifiedDate":"2018-08-13"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":142,"author":{"gitId":"sopa301"},"content":"        if (nextOfKinName \u003d\u003d null) {","lastModifiedDate":"2023-09-29"},{"lineNumber":143,"author":{"gitId":"sopa301"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2023-09-28"},{"lineNumber":144,"author":{"gitId":"sopa301"},"content":"                    NextOfKinName.class.getSimpleName()));","lastModifiedDate":"2023-09-28"},{"lineNumber":145,"author":{"gitId":"sopa301"},"content":"        }","lastModifiedDate":"2023-09-28"},{"lineNumber":146,"author":{"gitId":"sopa301"},"content":"        if (!NextOfKinName.isValidName(nextOfKinName)) {","lastModifiedDate":"2023-09-29"},{"lineNumber":147,"author":{"gitId":"AlyssaPng"},"content":"            logger.warning(\"Invalid Next of Kin Name: \" + nextOfKinName);","lastModifiedDate":"2023-11-10"},{"lineNumber":148,"author":{"gitId":"sopa301"},"content":"            throw new IllegalValueException(NextOfKinName.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-09-28"},{"lineNumber":149,"author":{"gitId":"sopa301"},"content":"        }","lastModifiedDate":"2023-09-28"},{"lineNumber":150,"author":{"gitId":"sopa301"},"content":"        final NextOfKinName modelNextOfKinName \u003d new NextOfKinName(nextOfKinName);","lastModifiedDate":"2023-09-29"},{"lineNumber":151,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":152,"author":{"gitId":"sopa301"},"content":"        if (nextOfKinPhone \u003d\u003d null) {","lastModifiedDate":"2023-09-29"},{"lineNumber":153,"author":{"gitId":"sopa301"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2023-09-28"},{"lineNumber":154,"author":{"gitId":"sopa301"},"content":"                    NextOfKinPhone.class.getSimpleName()));","lastModifiedDate":"2023-09-28"},{"lineNumber":155,"author":{"gitId":"sopa301"},"content":"        }","lastModifiedDate":"2023-09-28"},{"lineNumber":156,"author":{"gitId":"sopa301"},"content":"        if (!NextOfKinPhone.isValidPhone(nextOfKinPhone)) {","lastModifiedDate":"2023-09-29"},{"lineNumber":157,"author":{"gitId":"AlyssaPng"},"content":"            logger.warning(\"Invalid Next of Kin Phone: \" + nextOfKinPhone);","lastModifiedDate":"2023-11-10"},{"lineNumber":158,"author":{"gitId":"sopa301"},"content":"            throw new IllegalValueException(NextOfKinPhone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-09-28"},{"lineNumber":159,"author":{"gitId":"sopa301"},"content":"        }","lastModifiedDate":"2023-09-28"},{"lineNumber":160,"author":{"gitId":"sopa301"},"content":"        final NextOfKinPhone modelNextOfKinPhone \u003d new NextOfKinPhone(nextOfKinPhone);","lastModifiedDate":"2023-09-29"},{"lineNumber":161,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(personTags);","lastModifiedDate":"2018-08-13"},{"lineNumber":163,"author":{"gitId":"nikele2001"},"content":"        final Set\u003cFinancialPlan\u003e modelFinancialPlans \u003d new HashSet\u003c\u003e(personFinancialPlans);","lastModifiedDate":"2023-10-16"},{"lineNumber":164,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":165,"author":{"gitId":"Kb-Tay"},"content":"        if (appointment \u003d\u003d null) {","lastModifiedDate":"2023-10-17"},{"lineNumber":166,"author":{"gitId":"Kb-Tay"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2023-10-17"},{"lineNumber":167,"author":{"gitId":"Kb-Tay"},"content":"                    Appointment.class.getSimpleName()));","lastModifiedDate":"2023-10-17"},{"lineNumber":168,"author":{"gitId":"Kb-Tay"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":169,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":170,"author":{"gitId":"Kb-Tay"},"content":"        final ScheduleItem modelAppointment \u003d appointment.toModelType();","lastModifiedDate":"2023-10-22"},{"lineNumber":171,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":172,"author":{"gitId":"sopa301"},"content":"        return new Person(modelName, modelPhone, modelEmail, modelAddress, modelNextOfKinName, modelNextOfKinPhone,","lastModifiedDate":"2023-09-28"},{"lineNumber":173,"author":{"gitId":"Kb-Tay"},"content":"                modelFinancialPlans, modelTags, modelAppointment);","lastModifiedDate":"2023-10-19"},{"lineNumber":174,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":177,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"Kb-Tay":17,"AlyssaPng":10,"nikele2001":15,"sopa301":29,"-":106}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedTag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"AlyssaPng"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-11-10"},{"lineNumber":4,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"AlyssaPng"},"content":"import seedu.address.MainApp;","lastModifiedDate":"2023-11-10"},{"lineNumber":9,"author":{"gitId":"AlyssaPng"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-11-10"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Tag}.","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"class JsonAdaptedTag {","lastModifiedDate":"2018-12-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"AlyssaPng"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(MainApp.class);","lastModifiedDate":"2023-11-10"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final String tagName;","lastModifiedDate":"2023-11-10"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedTag} with the given {@code tagName}.","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public JsonAdaptedTag(String tagName) {","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        this.tagName \u003d tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Converts a given {@code Tag} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public JsonAdaptedTag(Tag source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        tagName \u003d source.tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @JsonValue","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public String getTagName() {","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted tag object into the model\u0027s {@code Tag} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted tag.","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public Tag toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(tagName)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"AlyssaPng"},"content":"            logger.warning(\"Invalid Tag Name: \" + tagName);","lastModifiedDate":"2023-11-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return new Tag(tagName);","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"AlyssaPng":6,"-":48}},{"path":"src/main/java/seedu/address/ui/AppointmentCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nikele2001"},"content":"package seedu.address.ui;","lastModifiedDate":"2023-10-23"},{"lineNumber":2,"author":{"gitId":"nikele2001"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":3,"author":{"gitId":"nikele2001"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-10-23"},{"lineNumber":4,"author":{"gitId":"nikele2001"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":5,"author":{"gitId":"nikele2001"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-10-23"},{"lineNumber":6,"author":{"gitId":"nikele2001"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-10-23"},{"lineNumber":7,"author":{"gitId":"nikele2001"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-10-23"},{"lineNumber":8,"author":{"gitId":"nikele2001"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-10-23"},{"lineNumber":9,"author":{"gitId":"nikele2001"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2023-10-23"},{"lineNumber":10,"author":{"gitId":"nikele2001"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":11,"author":{"gitId":"nikele2001"},"content":"/**","lastModifiedDate":"2023-10-23"},{"lineNumber":12,"author":{"gitId":"nikele2001"},"content":" * An UI component that displays information of a {@code Appointment}.","lastModifiedDate":"2023-10-23"},{"lineNumber":13,"author":{"gitId":"nikele2001"},"content":" */","lastModifiedDate":"2023-10-23"},{"lineNumber":14,"author":{"gitId":"nikele2001"},"content":"public class AppointmentCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-10-23"},{"lineNumber":15,"author":{"gitId":"nikele2001"},"content":"    private static final String FXML \u003d \"AppointmentListCard.fxml\";","lastModifiedDate":"2023-10-23"},{"lineNumber":16,"author":{"gitId":"nikele2001"},"content":"    private static final DateTimeFormatter DATE_FORMATTER \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy HH:mm\");","lastModifiedDate":"2023-10-23"},{"lineNumber":17,"author":{"gitId":"nikele2001"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":18,"author":{"gitId":"nikele2001"},"content":"    /**","lastModifiedDate":"2023-10-23"},{"lineNumber":19,"author":{"gitId":"nikele2001"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2023-10-23"},{"lineNumber":20,"author":{"gitId":"nikele2001"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2023-10-23"},{"lineNumber":21,"author":{"gitId":"nikele2001"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2023-10-23"},{"lineNumber":22,"author":{"gitId":"nikele2001"},"content":"     *","lastModifiedDate":"2023-10-23"},{"lineNumber":23,"author":{"gitId":"nikele2001"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2023-10-23"},{"lineNumber":24,"author":{"gitId":"nikele2001"},"content":"     */","lastModifiedDate":"2023-10-23"},{"lineNumber":25,"author":{"gitId":"nikele2001"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":26,"author":{"gitId":"nikele2001"},"content":"    public final Appointment appt;","lastModifiedDate":"2023-10-23"},{"lineNumber":27,"author":{"gitId":"nikele2001"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":28,"author":{"gitId":"nikele2001"},"content":"    @FXML","lastModifiedDate":"2023-10-23"},{"lineNumber":29,"author":{"gitId":"nikele2001"},"content":"    private HBox cardPane;","lastModifiedDate":"2023-10-23"},{"lineNumber":30,"author":{"gitId":"nikele2001"},"content":"    @FXML","lastModifiedDate":"2023-10-23"},{"lineNumber":31,"author":{"gitId":"nikele2001"},"content":"    private Label id;","lastModifiedDate":"2023-10-23"},{"lineNumber":32,"author":{"gitId":"nikele2001"},"content":"    @FXML","lastModifiedDate":"2023-10-23"},{"lineNumber":33,"author":{"gitId":"nikele2001"},"content":"    private Label name;","lastModifiedDate":"2023-10-23"},{"lineNumber":34,"author":{"gitId":"nikele2001"},"content":"    @FXML","lastModifiedDate":"2023-10-23"},{"lineNumber":35,"author":{"gitId":"nikele2001"},"content":"    private Label personName;","lastModifiedDate":"2023-10-24"},{"lineNumber":36,"author":{"gitId":"nikele2001"},"content":"    @FXML","lastModifiedDate":"2023-10-24"},{"lineNumber":37,"author":{"gitId":"nikele2001"},"content":"    private Label dateTime;","lastModifiedDate":"2023-10-24"},{"lineNumber":38,"author":{"gitId":"nikele2001"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":39,"author":{"gitId":"nikele2001"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":40,"author":{"gitId":"nikele2001"},"content":"    /**","lastModifiedDate":"2023-10-23"},{"lineNumber":41,"author":{"gitId":"nikele2001"},"content":"     * Creates a {@code AppointmentCode} with the given {@code Appointment} and index to display.","lastModifiedDate":"2023-10-23"},{"lineNumber":42,"author":{"gitId":"nikele2001"},"content":"     */","lastModifiedDate":"2023-10-23"},{"lineNumber":43,"author":{"gitId":"nikele2001"},"content":"    public AppointmentCard(Appointment appt, int displayedIndex) {","lastModifiedDate":"2023-10-23"},{"lineNumber":44,"author":{"gitId":"nikele2001"},"content":"        super(FXML);","lastModifiedDate":"2023-10-23"},{"lineNumber":45,"author":{"gitId":"nikele2001"},"content":"        this.appt \u003d appt;","lastModifiedDate":"2023-10-23"},{"lineNumber":46,"author":{"gitId":"nikele2001"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":47,"author":{"gitId":"nikele2001"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2023-10-23"},{"lineNumber":48,"author":{"gitId":"nikele2001"},"content":"        name.setText(appt.getName());","lastModifiedDate":"2023-10-23"},{"lineNumber":49,"author":{"gitId":"nikele2001"},"content":"        personName.setText(appt.getPerson().getName().toString());","lastModifiedDate":"2023-10-24"},{"lineNumber":50,"author":{"gitId":"nikele2001"},"content":"        dateTime.setText(appt.getDateTime().format(DATE_FORMATTER));","lastModifiedDate":"2023-10-24"},{"lineNumber":51,"author":{"gitId":"nikele2001"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":52,"author":{"gitId":"nikele2001"},"content":"}","lastModifiedDate":"2023-10-23"}],"authorContributionMap":{"nikele2001":52}},{"path":"src/main/java/seedu/address/ui/AppointmentListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nikele2001"},"content":"package seedu.address.ui;","lastModifiedDate":"2023-10-23"},{"lineNumber":2,"author":{"gitId":"nikele2001"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":3,"author":{"gitId":"nikele2001"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-10-23"},{"lineNumber":4,"author":{"gitId":"nikele2001"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":5,"author":{"gitId":"nikele2001"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-10-23"},{"lineNumber":6,"author":{"gitId":"nikele2001"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-10-23"},{"lineNumber":7,"author":{"gitId":"nikele2001"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2023-10-23"},{"lineNumber":8,"author":{"gitId":"nikele2001"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2023-10-23"},{"lineNumber":9,"author":{"gitId":"nikele2001"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-10-23"},{"lineNumber":10,"author":{"gitId":"nikele2001"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-10-23"},{"lineNumber":11,"author":{"gitId":"nikele2001"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2023-10-23"},{"lineNumber":12,"author":{"gitId":"nikele2001"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":13,"author":{"gitId":"nikele2001"},"content":"/**","lastModifiedDate":"2023-10-23"},{"lineNumber":14,"author":{"gitId":"nikele2001"},"content":" * Panel containing the list of persons.","lastModifiedDate":"2023-10-23"},{"lineNumber":15,"author":{"gitId":"nikele2001"},"content":" */","lastModifiedDate":"2023-10-23"},{"lineNumber":16,"author":{"gitId":"nikele2001"},"content":"public class AppointmentListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-10-23"},{"lineNumber":17,"author":{"gitId":"nikele2001"},"content":"    private static final String FXML \u003d \"AppointmentListPanel.fxml\";","lastModifiedDate":"2023-10-23"},{"lineNumber":18,"author":{"gitId":"nikele2001"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(AppointmentListPanel.class);","lastModifiedDate":"2023-10-23"},{"lineNumber":19,"author":{"gitId":"nikele2001"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":20,"author":{"gitId":"nikele2001"},"content":"    @FXML","lastModifiedDate":"2023-10-23"},{"lineNumber":21,"author":{"gitId":"nikele2001"},"content":"    private ListView\u003cAppointment\u003e appointmentListView;","lastModifiedDate":"2023-10-23"},{"lineNumber":22,"author":{"gitId":"nikele2001"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":23,"author":{"gitId":"nikele2001"},"content":"    /**","lastModifiedDate":"2023-10-23"},{"lineNumber":24,"author":{"gitId":"nikele2001"},"content":"     * Creates a {@code AppointmentListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2023-10-23"},{"lineNumber":25,"author":{"gitId":"nikele2001"},"content":"     */","lastModifiedDate":"2023-10-23"},{"lineNumber":26,"author":{"gitId":"nikele2001"},"content":"    public AppointmentListPanel(ObservableList\u003cAppointment\u003e appointmentList) {","lastModifiedDate":"2023-10-23"},{"lineNumber":27,"author":{"gitId":"nikele2001"},"content":"        super(FXML);","lastModifiedDate":"2023-10-23"},{"lineNumber":28,"author":{"gitId":"nikele2001"},"content":"        appointmentListView.setItems(appointmentList);","lastModifiedDate":"2023-10-23"},{"lineNumber":29,"author":{"gitId":"nikele2001"},"content":"        appointmentListView.setCellFactory(listView -\u003e new AppointmentListViewCell());","lastModifiedDate":"2023-10-23"},{"lineNumber":30,"author":{"gitId":"nikele2001"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":31,"author":{"gitId":"nikele2001"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":32,"author":{"gitId":"nikele2001"},"content":"    /**","lastModifiedDate":"2023-10-23"},{"lineNumber":33,"author":{"gitId":"nikele2001"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Appointment} using a {@code AppointmentCard}.","lastModifiedDate":"2023-10-23"},{"lineNumber":34,"author":{"gitId":"nikele2001"},"content":"     */","lastModifiedDate":"2023-10-23"},{"lineNumber":35,"author":{"gitId":"nikele2001"},"content":"    class AppointmentListViewCell extends ListCell\u003cAppointment\u003e {","lastModifiedDate":"2023-10-23"},{"lineNumber":36,"author":{"gitId":"nikele2001"},"content":"        @Override","lastModifiedDate":"2023-10-23"},{"lineNumber":37,"author":{"gitId":"nikele2001"},"content":"        protected void updateItem(Appointment appt, boolean empty) {","lastModifiedDate":"2023-10-23"},{"lineNumber":38,"author":{"gitId":"nikele2001"},"content":"            super.updateItem(appt, empty);","lastModifiedDate":"2023-10-23"},{"lineNumber":39,"author":{"gitId":"nikele2001"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":40,"author":{"gitId":"nikele2001"},"content":"            if (empty || appt \u003d\u003d null) {","lastModifiedDate":"2023-10-23"},{"lineNumber":41,"author":{"gitId":"nikele2001"},"content":"                setGraphic(null);","lastModifiedDate":"2023-10-23"},{"lineNumber":42,"author":{"gitId":"nikele2001"},"content":"                setText(null);","lastModifiedDate":"2023-10-23"},{"lineNumber":43,"author":{"gitId":"nikele2001"},"content":"            } else {","lastModifiedDate":"2023-10-23"},{"lineNumber":44,"author":{"gitId":"nikele2001"},"content":"                setGraphic(new AppointmentCard(appt, getIndex() + 1).getRoot());","lastModifiedDate":"2023-10-23"},{"lineNumber":45,"author":{"gitId":"nikele2001"},"content":"            }","lastModifiedDate":"2023-10-23"},{"lineNumber":46,"author":{"gitId":"nikele2001"},"content":"        }","lastModifiedDate":"2023-10-23"},{"lineNumber":47,"author":{"gitId":"nikele2001"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":48,"author":{"gitId":"nikele2001"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":49,"author":{"gitId":"nikele2001"},"content":"}","lastModifiedDate":"2023-10-23"}],"authorContributionMap":{"nikele2001":49}},{"path":"src/main/java/seedu/address/ui/ClearWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sopa301"},"content":"package seedu.address.ui;","lastModifiedDate":"2023-10-18"},{"lineNumber":2,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":3,"author":{"gitId":"sopa301"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-10-18"},{"lineNumber":4,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":5,"author":{"gitId":"sopa301"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-10-18"},{"lineNumber":6,"author":{"gitId":"sopa301"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-10-18"},{"lineNumber":7,"author":{"gitId":"sopa301"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-10-18"},{"lineNumber":8,"author":{"gitId":"sopa301"},"content":"import javafx.stage.Modality;","lastModifiedDate":"2023-10-18"},{"lineNumber":9,"author":{"gitId":"sopa301"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-10-18"},{"lineNumber":10,"author":{"gitId":"sopa301"},"content":"import javafx.stage.StageStyle;","lastModifiedDate":"2023-10-18"},{"lineNumber":11,"author":{"gitId":"sopa301"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-10-18"},{"lineNumber":12,"author":{"gitId":"sopa301"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2023-10-18"},{"lineNumber":13,"author":{"gitId":"sopa301"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2023-10-18"},{"lineNumber":14,"author":{"gitId":"sopa301"},"content":"import seedu.address.logic.commands.ConfirmClearCommand;","lastModifiedDate":"2023-10-18"},{"lineNumber":15,"author":{"gitId":"sopa301"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-18"},{"lineNumber":16,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":17,"author":{"gitId":"sopa301"},"content":"/**","lastModifiedDate":"2023-10-18"},{"lineNumber":18,"author":{"gitId":"sopa301"},"content":" * Controller for the clear command confirmation page.","lastModifiedDate":"2023-10-18"},{"lineNumber":19,"author":{"gitId":"sopa301"},"content":" */","lastModifiedDate":"2023-10-18"},{"lineNumber":20,"author":{"gitId":"sopa301"},"content":"public class ClearWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2023-10-18"},{"lineNumber":21,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":22,"author":{"gitId":"sopa301"},"content":"    public static final String CONFIRM_CLEAR_MESSAGE \u003d \"Are you sure you want to clear all entries?\";","lastModifiedDate":"2023-10-18"},{"lineNumber":23,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":24,"author":{"gitId":"sopa301"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ClearWindow.class);","lastModifiedDate":"2023-10-18"},{"lineNumber":25,"author":{"gitId":"sopa301"},"content":"    private static final String FXML \u003d \"ClearWindow.fxml\";","lastModifiedDate":"2023-10-18"},{"lineNumber":26,"author":{"gitId":"sopa301"},"content":"    private CommandExecutor commandExecutor;","lastModifiedDate":"2023-10-18"},{"lineNumber":27,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":28,"author":{"gitId":"sopa301"},"content":"    @FXML","lastModifiedDate":"2023-10-18"},{"lineNumber":29,"author":{"gitId":"sopa301"},"content":"    private Label clearMessage;","lastModifiedDate":"2023-10-18"},{"lineNumber":30,"author":{"gitId":"sopa301"},"content":"    @FXML","lastModifiedDate":"2023-10-18"},{"lineNumber":31,"author":{"gitId":"sopa301"},"content":"    private Button clearButton;","lastModifiedDate":"2023-10-18"},{"lineNumber":32,"author":{"gitId":"sopa301"},"content":"    @FXML","lastModifiedDate":"2023-10-18"},{"lineNumber":33,"author":{"gitId":"sopa301"},"content":"    private Button cancelButton;","lastModifiedDate":"2023-10-18"},{"lineNumber":34,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":35,"author":{"gitId":"sopa301"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":36,"author":{"gitId":"sopa301"},"content":"     * Creates a new ClearWindow.","lastModifiedDate":"2023-10-18"},{"lineNumber":37,"author":{"gitId":"sopa301"},"content":"     *","lastModifiedDate":"2023-10-18"},{"lineNumber":38,"author":{"gitId":"sopa301"},"content":"     * @param root Stage to use as the root of the ClearWindow.","lastModifiedDate":"2023-10-18"},{"lineNumber":39,"author":{"gitId":"sopa301"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":40,"author":{"gitId":"sopa301"},"content":"    public ClearWindow(Stage root) {","lastModifiedDate":"2023-10-18"},{"lineNumber":41,"author":{"gitId":"sopa301"},"content":"        super(FXML, root);","lastModifiedDate":"2023-10-18"},{"lineNumber":42,"author":{"gitId":"sopa301"},"content":"        root.initStyle(StageStyle.UNDECORATED);","lastModifiedDate":"2023-10-18"},{"lineNumber":43,"author":{"gitId":"sopa301"},"content":"        root.initModality(Modality.APPLICATION_MODAL);","lastModifiedDate":"2023-10-18"},{"lineNumber":44,"author":{"gitId":"sopa301"},"content":"        clearMessage.setText(CONFIRM_CLEAR_MESSAGE);","lastModifiedDate":"2023-10-18"},{"lineNumber":45,"author":{"gitId":"sopa301"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":46,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":47,"author":{"gitId":"sopa301"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":48,"author":{"gitId":"sopa301"},"content":"     * Creates a new ClearWindow.","lastModifiedDate":"2023-10-18"},{"lineNumber":49,"author":{"gitId":"sopa301"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":50,"author":{"gitId":"sopa301"},"content":"    public ClearWindow(CommandExecutor commandExecutor) {","lastModifiedDate":"2023-10-18"},{"lineNumber":51,"author":{"gitId":"sopa301"},"content":"        this(new Stage());","lastModifiedDate":"2023-10-18"},{"lineNumber":52,"author":{"gitId":"sopa301"},"content":"        this.commandExecutor \u003d commandExecutor;","lastModifiedDate":"2023-10-18"},{"lineNumber":53,"author":{"gitId":"sopa301"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":54,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":55,"author":{"gitId":"sopa301"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":56,"author":{"gitId":"sopa301"},"content":"     * Shows the clear window.","lastModifiedDate":"2023-10-18"},{"lineNumber":57,"author":{"gitId":"sopa301"},"content":"     * @throws IllegalStateException","lastModifiedDate":"2023-10-18"},{"lineNumber":58,"author":{"gitId":"sopa301"},"content":"     *     \u003cul\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":59,"author":{"gitId":"sopa301"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":60,"author":{"gitId":"sopa301"},"content":"     *             if this method is called on a thread other than the JavaFX Application Thread.","lastModifiedDate":"2023-10-18"},{"lineNumber":61,"author":{"gitId":"sopa301"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":62,"author":{"gitId":"sopa301"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":63,"author":{"gitId":"sopa301"},"content":"     *             if this method is called during animation or layout processing.","lastModifiedDate":"2023-10-18"},{"lineNumber":64,"author":{"gitId":"sopa301"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":65,"author":{"gitId":"sopa301"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":66,"author":{"gitId":"sopa301"},"content":"     *             if this method is called on the primary stage.","lastModifiedDate":"2023-10-18"},{"lineNumber":67,"author":{"gitId":"sopa301"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":68,"author":{"gitId":"sopa301"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":69,"author":{"gitId":"sopa301"},"content":"     *             if {@code dialogStage} is already showing.","lastModifiedDate":"2023-10-18"},{"lineNumber":70,"author":{"gitId":"sopa301"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":71,"author":{"gitId":"sopa301"},"content":"     *     \u003c/ul\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":72,"author":{"gitId":"sopa301"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":73,"author":{"gitId":"sopa301"},"content":"    public void show() {","lastModifiedDate":"2023-10-18"},{"lineNumber":74,"author":{"gitId":"sopa301"},"content":"        logger.fine(\"Showing confirm clear window.\");","lastModifiedDate":"2023-10-20"},{"lineNumber":75,"author":{"gitId":"sopa301"},"content":"        getRoot().show();","lastModifiedDate":"2023-10-18"},{"lineNumber":76,"author":{"gitId":"sopa301"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2023-10-18"},{"lineNumber":77,"author":{"gitId":"sopa301"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":78,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":79,"author":{"gitId":"sopa301"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":80,"author":{"gitId":"sopa301"},"content":"     * Returns true if the clear window is currently being shown.","lastModifiedDate":"2023-10-18"},{"lineNumber":81,"author":{"gitId":"sopa301"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":82,"author":{"gitId":"sopa301"},"content":"    public boolean isShowing() {","lastModifiedDate":"2023-10-18"},{"lineNumber":83,"author":{"gitId":"sopa301"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2023-10-18"},{"lineNumber":84,"author":{"gitId":"sopa301"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":85,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":86,"author":{"gitId":"sopa301"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":87,"author":{"gitId":"sopa301"},"content":"     * Hides the clear window.","lastModifiedDate":"2023-10-18"},{"lineNumber":88,"author":{"gitId":"sopa301"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":89,"author":{"gitId":"sopa301"},"content":"    public void hide() {","lastModifiedDate":"2023-10-18"},{"lineNumber":90,"author":{"gitId":"sopa301"},"content":"        getRoot().hide();","lastModifiedDate":"2023-10-18"},{"lineNumber":91,"author":{"gitId":"sopa301"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":92,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":93,"author":{"gitId":"sopa301"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":94,"author":{"gitId":"sopa301"},"content":"     * Focuses on the clear window.","lastModifiedDate":"2023-10-18"},{"lineNumber":95,"author":{"gitId":"sopa301"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":96,"author":{"gitId":"sopa301"},"content":"    public void focus() {","lastModifiedDate":"2023-10-18"},{"lineNumber":97,"author":{"gitId":"sopa301"},"content":"        getRoot().requestFocus();","lastModifiedDate":"2023-10-18"},{"lineNumber":98,"author":{"gitId":"sopa301"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":99,"author":{"gitId":"sopa301"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":100,"author":{"gitId":"sopa301"},"content":"     * Clears the address book.","lastModifiedDate":"2023-10-18"},{"lineNumber":101,"author":{"gitId":"sopa301"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":102,"author":{"gitId":"sopa301"},"content":"    @FXML","lastModifiedDate":"2023-10-18"},{"lineNumber":103,"author":{"gitId":"sopa301"},"content":"    private void confirmClear() {","lastModifiedDate":"2023-10-18"},{"lineNumber":104,"author":{"gitId":"sopa301"},"content":"        Command clearCommand \u003d new ConfirmClearCommand();","lastModifiedDate":"2023-10-18"},{"lineNumber":105,"author":{"gitId":"sopa301"},"content":"        try {","lastModifiedDate":"2023-10-18"},{"lineNumber":106,"author":{"gitId":"sopa301"},"content":"            commandExecutor.execute(clearCommand);","lastModifiedDate":"2023-10-18"},{"lineNumber":107,"author":{"gitId":"sopa301"},"content":"        } catch (CommandException e) {","lastModifiedDate":"2023-10-18"},{"lineNumber":108,"author":{"gitId":"sopa301"},"content":"            // nothing to do in this window if there\u0027s an error.","lastModifiedDate":"2023-10-18"},{"lineNumber":109,"author":{"gitId":"sopa301"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":110,"author":{"gitId":"sopa301"},"content":"        hide();","lastModifiedDate":"2023-10-18"},{"lineNumber":111,"author":{"gitId":"sopa301"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":112,"author":{"gitId":"sopa301"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":113,"author":{"gitId":"sopa301"},"content":"     * Cancels the clear command.","lastModifiedDate":"2023-10-18"},{"lineNumber":114,"author":{"gitId":"sopa301"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":115,"author":{"gitId":"sopa301"},"content":"    @FXML","lastModifiedDate":"2023-10-18"},{"lineNumber":116,"author":{"gitId":"sopa301"},"content":"    private void cancel() {","lastModifiedDate":"2023-10-18"},{"lineNumber":117,"author":{"gitId":"sopa301"},"content":"        hide();","lastModifiedDate":"2023-10-18"},{"lineNumber":118,"author":{"gitId":"sopa301"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":119,"author":{"gitId":"sopa301"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":120,"author":{"gitId":"sopa301"},"content":"     * Represents a function that can execute commands.","lastModifiedDate":"2023-10-18"},{"lineNumber":121,"author":{"gitId":"sopa301"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":122,"author":{"gitId":"sopa301"},"content":"    @FunctionalInterface","lastModifiedDate":"2023-10-18"},{"lineNumber":123,"author":{"gitId":"sopa301"},"content":"    public interface CommandExecutor {","lastModifiedDate":"2023-10-18"},{"lineNumber":124,"author":{"gitId":"sopa301"},"content":"        /**","lastModifiedDate":"2023-10-18"},{"lineNumber":125,"author":{"gitId":"sopa301"},"content":"         * Executes the command and returns the result.","lastModifiedDate":"2023-10-18"},{"lineNumber":126,"author":{"gitId":"sopa301"},"content":"         *","lastModifiedDate":"2023-10-18"},{"lineNumber":127,"author":{"gitId":"sopa301"},"content":"         * @see seedu.address.logic.Logic#execute(Command)","lastModifiedDate":"2023-10-18"},{"lineNumber":128,"author":{"gitId":"sopa301"},"content":"         */","lastModifiedDate":"2023-10-18"},{"lineNumber":129,"author":{"gitId":"sopa301"},"content":"        CommandResult execute(Command command) throws CommandException;","lastModifiedDate":"2023-10-18"},{"lineNumber":130,"author":{"gitId":"sopa301"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":131,"author":{"gitId":"sopa301"},"content":"}","lastModifiedDate":"2023-10-18"}],"authorContributionMap":{"sopa301":131}},{"path":"src/main/java/seedu/address/ui/HelpWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2019-08-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2019-08-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.input.Clipboard;","lastModifiedDate":"2019-08-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.ClipboardContent;","lastModifiedDate":"2019-08-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Controller for a help page","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class HelpWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-12-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"nikele2001"},"content":"    public static final String USERGUIDE_URL \u003d \"https://ay2324s1-cs2103t-f12-1.github.io/tp/UserGuide.html\";","lastModifiedDate":"2023-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String HELP_MESSAGE \u003d \"Refer to the user guide: \" + USERGUIDE_URL;","lastModifiedDate":"2019-08-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(HelpWindow.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"HelpWindow.fxml\";","lastModifiedDate":"2016-09-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Button copyButton;","lastModifiedDate":"2019-08-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Label helpMessage;","lastModifiedDate":"2019-08-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-12-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @param root Stage to use as the root of the HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public HelpWindow(Stage root) {","lastModifiedDate":"2017-12-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        super(FXML, root);","lastModifiedDate":"2017-12-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        helpMessage.setText(HELP_MESSAGE);","lastModifiedDate":"2019-08-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public HelpWindow() {","lastModifiedDate":"2017-12-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this(new Stage());","lastModifiedDate":"2017-12-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Shows the help window.","lastModifiedDate":"2017-08-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * @throws IllegalStateException","lastModifiedDate":"2017-08-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     *     \u003cul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     *             if this method is called on a thread other than the JavaFX Application Thread.","lastModifiedDate":"2017-08-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     *             if this method is called during animation or layout processing.","lastModifiedDate":"2017-08-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     *             if this method is called on the primary stage.","lastModifiedDate":"2017-08-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     *             if {@code dialogStage} is already showing.","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     *     \u003c/ul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void show() {","lastModifiedDate":"2016-08-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        logger.fine(\"Showing help page about the application.\");","lastModifiedDate":"2016-12-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        getRoot().show();","lastModifiedDate":"2018-02-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2019-08-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Returns true if the help window is currently being shown.","lastModifiedDate":"2018-03-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public boolean isShowing() {","lastModifiedDate":"2018-03-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2018-03-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Hides the help window.","lastModifiedDate":"2018-12-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void hide() {","lastModifiedDate":"2018-12-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        getRoot().hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Focuses on the help window.","lastModifiedDate":"2018-03-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void focus() {","lastModifiedDate":"2018-03-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        getRoot().requestFocus();","lastModifiedDate":"2018-03-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-08-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Copies the URL to the user guide to the clipboard.","lastModifiedDate":"2019-08-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-08-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void copyUrl() {","lastModifiedDate":"2019-08-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        final Clipboard clipboard \u003d Clipboard.getSystemClipboard();","lastModifiedDate":"2019-08-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        final ClipboardContent url \u003d new ClipboardContent();","lastModifiedDate":"2019-08-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        url.putString(USERGUIDE_URL);","lastModifiedDate":"2019-08-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        clipboard.setContent(url);","lastModifiedDate":"2019-08-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-08-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"nikele2001":1,"-":101}},{"path":"src/main/java/seedu/address/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-06-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2016-08-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2016-09-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2017-06-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"sopa301"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2023-10-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"jylow"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2023-10-24"},{"lineNumber":21,"author":{"gitId":"jylow"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2016-08-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-11-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2018-08-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private Stage primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2016-08-18"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private PersonListPanel personListPanel;","lastModifiedDate":"2016-08-18"},{"lineNumber":38,"author":{"gitId":"nikele2001"},"content":"    private AppointmentListPanel appointmentListPanel;","lastModifiedDate":"2023-10-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private HelpWindow helpWindow;","lastModifiedDate":"2018-03-15"},{"lineNumber":41,"author":{"gitId":"sopa301"},"content":"    private ClearWindow clearWindow;","lastModifiedDate":"2023-10-18"},{"lineNumber":42,"author":{"gitId":"jylow"},"content":"    private OverrideWindow overrideWindow;","lastModifiedDate":"2023-10-24"},{"lineNumber":43,"author":{"gitId":"jylow"},"content":"    private Appointment appointment;","lastModifiedDate":"2023-10-24"},{"lineNumber":44,"author":{"gitId":"jylow"},"content":"    private Person personToEdit;","lastModifiedDate":"2023-10-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2016-08-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private StackPane personListPanelPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"nikele2001"},"content":"    @FXML","lastModifiedDate":"2023-10-23"},{"lineNumber":56,"author":{"gitId":"nikele2001"},"content":"    private StackPane appointmentListPanelPlaceholder;","lastModifiedDate":"2023-10-23"},{"lineNumber":57,"author":{"gitId":"nikele2001"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    private StackPane resultDisplayPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    private StackPane statusbarPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public MainWindow(Stage primaryStage, Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2016-09-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2016-09-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        setAccelerators();","lastModifiedDate":"2016-09-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2018-03-15"},{"lineNumber":78,"author":{"gitId":"sopa301"},"content":"        clearWindow \u003d new ClearWindow(this::executeCommand);","lastModifiedDate":"2023-10-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2016-12-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2016-12-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    private void setAccelerators() {","lastModifiedDate":"2016-09-21"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2016-12-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2016-12-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","lastModifiedDate":"2016-12-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2016-12-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2016-12-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-12-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2016-12-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","lastModifiedDate":"2016-12-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"         * is fixed in later version of SDK.","lastModifiedDate":"2016-12-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2016-12-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2016-12-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will","lastModifiedDate":"2016-12-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"         * not work when the focus is in them because the key event is consumed by","lastModifiedDate":"2016-12-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"         * the TextInputControl(s).","lastModifiedDate":"2016-12-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2016-12-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"         * help window purposely so to support accelerators even when focus is","lastModifiedDate":"2016-12-18"},{"lineNumber":109,"author":{"gitId":"-"},"content":"         * in CommandBox or ResultDisplay.","lastModifiedDate":"2016-12-18"},{"lineNumber":110,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-18"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2016-12-18"},{"lineNumber":113,"author":{"gitId":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2016-12-18"},{"lineNumber":114,"author":{"gitId":"-"},"content":"                event.consume();","lastModifiedDate":"2016-12-18"},{"lineNumber":115,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-12-18"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2016-12-18"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2017-08-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","lastModifiedDate":"2016-09-21"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        personListPanel \u003d new PersonListPanel(logic.getFilteredPersonList());","lastModifiedDate":"2019-01-25"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        personListPanelPlaceholder.getChildren().add(personListPanel.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":126,"author":{"gitId":"nikele2001"},"content":"        appointmentListPanel \u003d new AppointmentListPanel(logic.getAppointmentList());","lastModifiedDate":"2023-10-23"},{"lineNumber":127,"author":{"gitId":"nikele2001"},"content":"        appointmentListPanelPlaceholder.getChildren().add(appointmentListPanel.getRoot());","lastModifiedDate":"2023-10-23"},{"lineNumber":128,"author":{"gitId":"nikele2001"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2018-12-09"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(logic.getAddressBookFilePath());","lastModifiedDate":"2019-01-25"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeCommand);","lastModifiedDate":"2019-01-25"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2018-11-27"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2018-11-27"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2018-11-27"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2018-11-27"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2018-11-27"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2018-11-27"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":152,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2018-03-15"},{"lineNumber":153,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    public void handleHelp() {","lastModifiedDate":"2016-08-31"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2018-03-15"},{"lineNumber":157,"author":{"gitId":"-"},"content":"            helpWindow.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2018-03-15"},{"lineNumber":159,"author":{"gitId":"-"},"content":"            helpWindow.focus();","lastModifiedDate":"2018-03-15"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-15"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":163,"author":{"gitId":"sopa301"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":164,"author":{"gitId":"sopa301"},"content":"     * Opens the clear window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2023-10-18"},{"lineNumber":165,"author":{"gitId":"sopa301"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":166,"author":{"gitId":"sopa301"},"content":"    @FXML","lastModifiedDate":"2023-10-18"},{"lineNumber":167,"author":{"gitId":"sopa301"},"content":"    public void handleClear() {","lastModifiedDate":"2023-10-18"},{"lineNumber":168,"author":{"gitId":"sopa301"},"content":"        if (!clearWindow.isShowing()) {","lastModifiedDate":"2023-10-18"},{"lineNumber":169,"author":{"gitId":"sopa301"},"content":"            clearWindow.show();","lastModifiedDate":"2023-10-18"},{"lineNumber":170,"author":{"gitId":"sopa301"},"content":"        } else {","lastModifiedDate":"2023-10-18"},{"lineNumber":171,"author":{"gitId":"sopa301"},"content":"            clearWindow.focus();","lastModifiedDate":"2023-10-18"},{"lineNumber":172,"author":{"gitId":"sopa301"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":173,"author":{"gitId":"sopa301"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":174,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":175,"author":{"gitId":"jylow"},"content":"    /**","lastModifiedDate":"2023-10-24"},{"lineNumber":176,"author":{"gitId":"jylow"},"content":"     * Opens the override window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2023-10-24"},{"lineNumber":177,"author":{"gitId":"jylow"},"content":"     */","lastModifiedDate":"2023-10-24"},{"lineNumber":178,"author":{"gitId":"jylow"},"content":"    @FXML","lastModifiedDate":"2023-10-24"},{"lineNumber":179,"author":{"gitId":"jylow"},"content":"    public void handleOverride(Appointment appointment, Person personToEdit) {","lastModifiedDate":"2023-10-24"},{"lineNumber":180,"author":{"gitId":"jylow"},"content":"        overrideWindow \u003d new OverrideWindow(this::executeCommand, appointment, personToEdit);","lastModifiedDate":"2023-10-24"},{"lineNumber":181,"author":{"gitId":"jylow"},"content":"        if (!overrideWindow.isShowing()) {","lastModifiedDate":"2023-10-24"},{"lineNumber":182,"author":{"gitId":"jylow"},"content":"            overrideWindow.show();","lastModifiedDate":"2023-10-24"},{"lineNumber":183,"author":{"gitId":"jylow"},"content":"        } else {","lastModifiedDate":"2023-10-24"},{"lineNumber":184,"author":{"gitId":"jylow"},"content":"            overrideWindow.focus();","lastModifiedDate":"2023-10-24"},{"lineNumber":185,"author":{"gitId":"jylow"},"content":"        }","lastModifiedDate":"2023-10-24"},{"lineNumber":186,"author":{"gitId":"jylow"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":187,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    void show() {","lastModifiedDate":"2016-10-15"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        primaryStage.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":193,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2016-08-18"},{"lineNumber":194,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    private void handleExit() {","lastModifiedDate":"2016-08-18"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2018-12-08"},{"lineNumber":198,"author":{"gitId":"-"},"content":"                (int) primaryStage.getX(), (int) primaryStage.getY());","lastModifiedDate":"2018-12-08"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2018-12-08"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        helpWindow.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":201,"author":{"gitId":"sopa301"},"content":"        clearWindow.hide();","lastModifiedDate":"2023-10-18"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        primaryStage.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    public PersonListPanel getPersonListPanel() {","lastModifiedDate":"2016-08-25"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        return personListPanel;","lastModifiedDate":"2018-08-14"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-25"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":210,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":211,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-09"},{"lineNumber":212,"author":{"gitId":"-"},"content":"     * @see seedu.address.logic.Logic#execute(String)","lastModifiedDate":"2018-12-09"},{"lineNumber":213,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":214,"author":{"gitId":"-"},"content":"    private CommandResult executeCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2018-12-09"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":216,"author":{"gitId":"-"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":217,"author":{"gitId":"sopa301"},"content":"            handleCommandResult(commandResult);","lastModifiedDate":"2023-10-18"},{"lineNumber":218,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2023-10-18"},{"lineNumber":219,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2023-10-18"},{"lineNumber":220,"author":{"gitId":"-"},"content":"            logger.info(\"An error occurred while executing command: \" + commandText);","lastModifiedDate":"2023-10-18"},{"lineNumber":221,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2023-10-18"},{"lineNumber":222,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2023-10-18"},{"lineNumber":223,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":224,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":225,"author":{"gitId":"sopa301"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":226,"author":{"gitId":"sopa301"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2023-10-18"},{"lineNumber":227,"author":{"gitId":"sopa301"},"content":"     *","lastModifiedDate":"2023-10-18"},{"lineNumber":228,"author":{"gitId":"sopa301"},"content":"     * @see seedu.address.logic.Logic#execute(Command)","lastModifiedDate":"2023-10-18"},{"lineNumber":229,"author":{"gitId":"sopa301"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":230,"author":{"gitId":"sopa301"},"content":"    private CommandResult executeCommand(Command command) throws CommandException {","lastModifiedDate":"2023-10-18"},{"lineNumber":231,"author":{"gitId":"sopa301"},"content":"        try {","lastModifiedDate":"2023-10-18"},{"lineNumber":232,"author":{"gitId":"sopa301"},"content":"            CommandResult commandResult \u003d logic.execute(command);","lastModifiedDate":"2023-10-18"},{"lineNumber":233,"author":{"gitId":"sopa301"},"content":"            handleCommandResult(commandResult);","lastModifiedDate":"2023-10-18"},{"lineNumber":234,"author":{"gitId":"sopa301"},"content":"            return commandResult;","lastModifiedDate":"2023-10-18"},{"lineNumber":235,"author":{"gitId":"sopa301"},"content":"        } catch (CommandException e) {","lastModifiedDate":"2023-10-18"},{"lineNumber":236,"author":{"gitId":"sopa301"},"content":"            logger.info(\"An error occurred while executing internal command.\");","lastModifiedDate":"2023-10-18"},{"lineNumber":237,"author":{"gitId":"sopa301"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2023-10-18"},{"lineNumber":238,"author":{"gitId":"sopa301"},"content":"            throw e;","lastModifiedDate":"2023-10-18"},{"lineNumber":239,"author":{"gitId":"sopa301"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":240,"author":{"gitId":"sopa301"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":241,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":242,"author":{"gitId":"sopa301"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":243,"author":{"gitId":"sopa301"},"content":"     * Logs command result, sends feedback to user and shows windows depending on the command result.","lastModifiedDate":"2023-10-18"},{"lineNumber":244,"author":{"gitId":"sopa301"},"content":"     *","lastModifiedDate":"2023-10-18"},{"lineNumber":245,"author":{"gitId":"sopa301"},"content":"     * @param commandResult Command result to handle.","lastModifiedDate":"2023-10-18"},{"lineNumber":246,"author":{"gitId":"sopa301"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":247,"author":{"gitId":"sopa301"},"content":"    private void handleCommandResult(CommandResult commandResult) {","lastModifiedDate":"2023-10-18"},{"lineNumber":248,"author":{"gitId":"-"},"content":"        logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":249,"author":{"gitId":"-"},"content":"        resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":251,"author":{"gitId":"-"},"content":"        if (commandResult.isShowHelp()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":252,"author":{"gitId":"-"},"content":"            handleHelp();","lastModifiedDate":"2018-12-09"},{"lineNumber":253,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":254,"author":{"gitId":"-"},"content":"        if (commandResult.isExit()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":255,"author":{"gitId":"-"},"content":"            handleExit();","lastModifiedDate":"2018-12-09"},{"lineNumber":256,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":257,"author":{"gitId":"sopa301"},"content":"        if (commandResult.isShowClear()) {","lastModifiedDate":"2023-10-18"},{"lineNumber":258,"author":{"gitId":"sopa301"},"content":"            handleClear();","lastModifiedDate":"2023-10-18"},{"lineNumber":259,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":260,"author":{"gitId":"jylow"},"content":"        if (commandResult.isShowOverride()) {","lastModifiedDate":"2023-10-24"},{"lineNumber":261,"author":{"gitId":"jylow"},"content":"            this.appointment \u003d commandResult.getAppointment();","lastModifiedDate":"2023-10-24"},{"lineNumber":262,"author":{"gitId":"jylow"},"content":"            this.personToEdit \u003d commandResult.getPersonToEdit();","lastModifiedDate":"2023-10-24"},{"lineNumber":263,"author":{"gitId":"jylow"},"content":"            handleOverride(appointment, personToEdit);","lastModifiedDate":"2023-10-24"},{"lineNumber":264,"author":{"gitId":"jylow"},"content":"        }","lastModifiedDate":"2023-10-24"},{"lineNumber":265,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":266,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"nikele2001":7,"sopa301":42,"jylow":23,"-":194}},{"path":"src/main/java/seedu/address/ui/OverrideWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jylow"},"content":"package seedu.address.ui;","lastModifiedDate":"2023-10-24"},{"lineNumber":2,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":3,"author":{"gitId":"jylow"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-10-24"},{"lineNumber":4,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":5,"author":{"gitId":"jylow"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-10-24"},{"lineNumber":6,"author":{"gitId":"jylow"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-10-24"},{"lineNumber":7,"author":{"gitId":"jylow"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-10-24"},{"lineNumber":8,"author":{"gitId":"jylow"},"content":"import javafx.stage.Modality;","lastModifiedDate":"2023-10-24"},{"lineNumber":9,"author":{"gitId":"jylow"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-10-24"},{"lineNumber":10,"author":{"gitId":"jylow"},"content":"import javafx.stage.StageStyle;","lastModifiedDate":"2023-10-24"},{"lineNumber":11,"author":{"gitId":"jylow"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-10-24"},{"lineNumber":12,"author":{"gitId":"jylow"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2023-10-24"},{"lineNumber":13,"author":{"gitId":"jylow"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2023-10-24"},{"lineNumber":14,"author":{"gitId":"jylow"},"content":"import seedu.address.logic.commands.ConfirmOverrideCommand;","lastModifiedDate":"2023-10-24"},{"lineNumber":15,"author":{"gitId":"jylow"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-24"},{"lineNumber":16,"author":{"gitId":"jylow"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2023-10-24"},{"lineNumber":17,"author":{"gitId":"jylow"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-24"},{"lineNumber":18,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":19,"author":{"gitId":"jylow"},"content":"/**","lastModifiedDate":"2023-10-24"},{"lineNumber":20,"author":{"gitId":"jylow"},"content":" * Controller for the override appointment command confirmation page.","lastModifiedDate":"2023-10-24"},{"lineNumber":21,"author":{"gitId":"jylow"},"content":" */","lastModifiedDate":"2023-10-24"},{"lineNumber":22,"author":{"gitId":"jylow"},"content":"public class OverrideWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2023-10-24"},{"lineNumber":23,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":24,"author":{"gitId":"nikele2001"},"content":"    public static final String CONFIRM_OVERRIDE_MESSAGE \u003d \"There is an appointment found under this person\u0027s name. \"","lastModifiedDate":"2023-11-05"},{"lineNumber":25,"author":{"gitId":"nikele2001"},"content":"            + \"Are you sure you want to override this appointment? \\n\";","lastModifiedDate":"2023-11-05"},{"lineNumber":26,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":27,"author":{"gitId":"jylow"},"content":"    private static String message;","lastModifiedDate":"2023-10-24"},{"lineNumber":28,"author":{"gitId":"jylow"},"content":"    private static Appointment appointment \u003d null;","lastModifiedDate":"2023-10-24"},{"lineNumber":29,"author":{"gitId":"jylow"},"content":"    private static Person personToEdit \u003d null;","lastModifiedDate":"2023-10-24"},{"lineNumber":30,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":31,"author":{"gitId":"jylow"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(OverrideWindow.class);","lastModifiedDate":"2023-10-24"},{"lineNumber":32,"author":{"gitId":"jylow"},"content":"    private static final String FXML \u003d \"OverrideWindow.fxml\";","lastModifiedDate":"2023-10-24"},{"lineNumber":33,"author":{"gitId":"jylow"},"content":"    private CommandExecutor commandExecutor;","lastModifiedDate":"2023-10-24"},{"lineNumber":34,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":35,"author":{"gitId":"jylow"},"content":"    @FXML","lastModifiedDate":"2023-10-24"},{"lineNumber":36,"author":{"gitId":"jylow"},"content":"    private Label overrideMessage;","lastModifiedDate":"2023-10-24"},{"lineNumber":37,"author":{"gitId":"jylow"},"content":"    @FXML","lastModifiedDate":"2023-10-24"},{"lineNumber":38,"author":{"gitId":"jylow"},"content":"    private Button overrideButton;","lastModifiedDate":"2023-10-24"},{"lineNumber":39,"author":{"gitId":"jylow"},"content":"    @FXML","lastModifiedDate":"2023-10-24"},{"lineNumber":40,"author":{"gitId":"jylow"},"content":"    private Button cancelButton;","lastModifiedDate":"2023-10-24"},{"lineNumber":41,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":42,"author":{"gitId":"jylow"},"content":"    /**","lastModifiedDate":"2023-10-24"},{"lineNumber":43,"author":{"gitId":"jylow"},"content":"     * Creates a new OverrideWindow.","lastModifiedDate":"2023-10-24"},{"lineNumber":44,"author":{"gitId":"jylow"},"content":"     *","lastModifiedDate":"2023-10-24"},{"lineNumber":45,"author":{"gitId":"jylow"},"content":"     * @param root Stage to use as the root of the OverrideWindow.","lastModifiedDate":"2023-10-24"},{"lineNumber":46,"author":{"gitId":"jylow"},"content":"     */","lastModifiedDate":"2023-10-24"},{"lineNumber":47,"author":{"gitId":"jylow"},"content":"    public OverrideWindow(Stage root) {","lastModifiedDate":"2023-10-24"},{"lineNumber":48,"author":{"gitId":"jylow"},"content":"        super(FXML, root);","lastModifiedDate":"2023-10-24"},{"lineNumber":49,"author":{"gitId":"jylow"},"content":"        root.initStyle(StageStyle.UNDECORATED);","lastModifiedDate":"2023-10-24"},{"lineNumber":50,"author":{"gitId":"jylow"},"content":"        root.initModality(Modality.APPLICATION_MODAL);","lastModifiedDate":"2023-10-24"},{"lineNumber":51,"author":{"gitId":"jylow"},"content":"        overrideMessage.setText(CONFIRM_OVERRIDE_MESSAGE);","lastModifiedDate":"2023-10-24"},{"lineNumber":52,"author":{"gitId":"jylow"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":53,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":54,"author":{"gitId":"jylow"},"content":"    /**","lastModifiedDate":"2023-10-24"},{"lineNumber":55,"author":{"gitId":"jylow"},"content":"     * Creates a new OverrideWindow.","lastModifiedDate":"2023-10-24"},{"lineNumber":56,"author":{"gitId":"jylow"},"content":"     */","lastModifiedDate":"2023-10-24"},{"lineNumber":57,"author":{"gitId":"jylow"},"content":"    public OverrideWindow(CommandExecutor commandExecutor, Appointment appointment, Person personToEdit) {","lastModifiedDate":"2023-10-24"},{"lineNumber":58,"author":{"gitId":"jylow"},"content":"        this(new Stage());","lastModifiedDate":"2023-10-24"},{"lineNumber":59,"author":{"gitId":"jylow"},"content":"        this.commandExecutor \u003d commandExecutor;","lastModifiedDate":"2023-10-24"},{"lineNumber":60,"author":{"gitId":"jylow"},"content":"        this.appointment \u003d appointment;","lastModifiedDate":"2023-10-24"},{"lineNumber":61,"author":{"gitId":"jylow"},"content":"        this.personToEdit \u003d personToEdit;","lastModifiedDate":"2023-10-24"},{"lineNumber":62,"author":{"gitId":"jylow"},"content":"        overrideMessage.setText(CONFIRM_OVERRIDE_MESSAGE + personToEdit.getAppointment().toString());","lastModifiedDate":"2023-10-24"},{"lineNumber":63,"author":{"gitId":"jylow"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":64,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":65,"author":{"gitId":"jylow"},"content":"    /**","lastModifiedDate":"2023-10-24"},{"lineNumber":66,"author":{"gitId":"jylow"},"content":"     * Shows the clear window.","lastModifiedDate":"2023-10-24"},{"lineNumber":67,"author":{"gitId":"jylow"},"content":"     * @throws IllegalStateException","lastModifiedDate":"2023-10-24"},{"lineNumber":68,"author":{"gitId":"jylow"},"content":"     *     \u003cul\u003e","lastModifiedDate":"2023-10-24"},{"lineNumber":69,"author":{"gitId":"jylow"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2023-10-24"},{"lineNumber":70,"author":{"gitId":"jylow"},"content":"     *             if this method is called on a thread other than the JavaFX Application Thread.","lastModifiedDate":"2023-10-24"},{"lineNumber":71,"author":{"gitId":"jylow"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2023-10-24"},{"lineNumber":72,"author":{"gitId":"jylow"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2023-10-24"},{"lineNumber":73,"author":{"gitId":"jylow"},"content":"     *             if this method is called during animation or layout processing.","lastModifiedDate":"2023-10-24"},{"lineNumber":74,"author":{"gitId":"jylow"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2023-10-24"},{"lineNumber":75,"author":{"gitId":"jylow"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2023-10-24"},{"lineNumber":76,"author":{"gitId":"jylow"},"content":"     *             if this method is called on the primary stage.","lastModifiedDate":"2023-10-24"},{"lineNumber":77,"author":{"gitId":"jylow"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2023-10-24"},{"lineNumber":78,"author":{"gitId":"jylow"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2023-10-24"},{"lineNumber":79,"author":{"gitId":"jylow"},"content":"     *             if {@code dialogStage} is already showing.","lastModifiedDate":"2023-10-24"},{"lineNumber":80,"author":{"gitId":"jylow"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2023-10-24"},{"lineNumber":81,"author":{"gitId":"jylow"},"content":"     *     \u003c/ul\u003e","lastModifiedDate":"2023-10-24"},{"lineNumber":82,"author":{"gitId":"jylow"},"content":"     */","lastModifiedDate":"2023-10-24"},{"lineNumber":83,"author":{"gitId":"jylow"},"content":"    public void show() {","lastModifiedDate":"2023-10-24"},{"lineNumber":84,"author":{"gitId":"jylow"},"content":"        logger.fine(\"Showing confirm override window.\");","lastModifiedDate":"2023-10-24"},{"lineNumber":85,"author":{"gitId":"jylow"},"content":"        getRoot().show();","lastModifiedDate":"2023-10-24"},{"lineNumber":86,"author":{"gitId":"jylow"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2023-10-24"},{"lineNumber":87,"author":{"gitId":"jylow"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":88,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":89,"author":{"gitId":"jylow"},"content":"    /**","lastModifiedDate":"2023-10-24"},{"lineNumber":90,"author":{"gitId":"jylow"},"content":"     * Returns true if the override window is currently being shown.","lastModifiedDate":"2023-10-24"},{"lineNumber":91,"author":{"gitId":"jylow"},"content":"     */","lastModifiedDate":"2023-10-24"},{"lineNumber":92,"author":{"gitId":"jylow"},"content":"    public boolean isShowing() {","lastModifiedDate":"2023-10-24"},{"lineNumber":93,"author":{"gitId":"jylow"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2023-10-24"},{"lineNumber":94,"author":{"gitId":"jylow"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":95,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":96,"author":{"gitId":"jylow"},"content":"    /**","lastModifiedDate":"2023-10-24"},{"lineNumber":97,"author":{"gitId":"jylow"},"content":"     * Hides the override window.","lastModifiedDate":"2023-10-24"},{"lineNumber":98,"author":{"gitId":"jylow"},"content":"     */","lastModifiedDate":"2023-10-24"},{"lineNumber":99,"author":{"gitId":"jylow"},"content":"    public void hide() {","lastModifiedDate":"2023-10-24"},{"lineNumber":100,"author":{"gitId":"jylow"},"content":"        getRoot().hide();","lastModifiedDate":"2023-10-24"},{"lineNumber":101,"author":{"gitId":"jylow"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":102,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":103,"author":{"gitId":"jylow"},"content":"    /**","lastModifiedDate":"2023-10-24"},{"lineNumber":104,"author":{"gitId":"jylow"},"content":"     * Focuses on the override window.","lastModifiedDate":"2023-10-24"},{"lineNumber":105,"author":{"gitId":"jylow"},"content":"     */","lastModifiedDate":"2023-10-24"},{"lineNumber":106,"author":{"gitId":"jylow"},"content":"    public void focus() {","lastModifiedDate":"2023-10-24"},{"lineNumber":107,"author":{"gitId":"jylow"},"content":"        getRoot().requestFocus();","lastModifiedDate":"2023-10-24"},{"lineNumber":108,"author":{"gitId":"jylow"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":109,"author":{"gitId":"jylow"},"content":"    /**","lastModifiedDate":"2023-10-24"},{"lineNumber":110,"author":{"gitId":"jylow"},"content":"     * Executes changing of the appointment.","lastModifiedDate":"2023-10-24"},{"lineNumber":111,"author":{"gitId":"jylow"},"content":"     */","lastModifiedDate":"2023-10-24"},{"lineNumber":112,"author":{"gitId":"jylow"},"content":"    @FXML","lastModifiedDate":"2023-10-24"},{"lineNumber":113,"author":{"gitId":"jylow"},"content":"    private void confirmOverride() {","lastModifiedDate":"2023-10-24"},{"lineNumber":114,"author":{"gitId":"jylow"},"content":"        Command overrideCommand \u003d new ConfirmOverrideCommand(this.appointment, this.personToEdit);","lastModifiedDate":"2023-10-24"},{"lineNumber":115,"author":{"gitId":"jylow"},"content":"        try {","lastModifiedDate":"2023-10-24"},{"lineNumber":116,"author":{"gitId":"jylow"},"content":"            commandExecutor.execute(overrideCommand);","lastModifiedDate":"2023-10-24"},{"lineNumber":117,"author":{"gitId":"jylow"},"content":"        } catch (CommandException e) {","lastModifiedDate":"2023-10-24"},{"lineNumber":118,"author":{"gitId":"jylow"},"content":"            // nothing to do in this window if there\u0027s an error.","lastModifiedDate":"2023-10-24"},{"lineNumber":119,"author":{"gitId":"jylow"},"content":"        }","lastModifiedDate":"2023-10-24"},{"lineNumber":120,"author":{"gitId":"jylow"},"content":"        hide();","lastModifiedDate":"2023-10-24"},{"lineNumber":121,"author":{"gitId":"jylow"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":122,"author":{"gitId":"jylow"},"content":"    /**","lastModifiedDate":"2023-10-24"},{"lineNumber":123,"author":{"gitId":"jylow"},"content":"     * Cancels the override command.","lastModifiedDate":"2023-10-24"},{"lineNumber":124,"author":{"gitId":"jylow"},"content":"     */","lastModifiedDate":"2023-10-24"},{"lineNumber":125,"author":{"gitId":"jylow"},"content":"    @FXML","lastModifiedDate":"2023-10-24"},{"lineNumber":126,"author":{"gitId":"jylow"},"content":"    private void cancel() {","lastModifiedDate":"2023-10-24"},{"lineNumber":127,"author":{"gitId":"jylow"},"content":"        hide();","lastModifiedDate":"2023-10-24"},{"lineNumber":128,"author":{"gitId":"jylow"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":129,"author":{"gitId":"jylow"},"content":"    /**","lastModifiedDate":"2023-10-24"},{"lineNumber":130,"author":{"gitId":"jylow"},"content":"     * Represents a function that can execute commands.","lastModifiedDate":"2023-10-24"},{"lineNumber":131,"author":{"gitId":"jylow"},"content":"     */","lastModifiedDate":"2023-10-24"},{"lineNumber":132,"author":{"gitId":"jylow"},"content":"    @FunctionalInterface","lastModifiedDate":"2023-10-24"},{"lineNumber":133,"author":{"gitId":"jylow"},"content":"    public interface CommandExecutor {","lastModifiedDate":"2023-10-24"},{"lineNumber":134,"author":{"gitId":"jylow"},"content":"        /**","lastModifiedDate":"2023-10-24"},{"lineNumber":135,"author":{"gitId":"jylow"},"content":"         * Executes the command and returns the result.","lastModifiedDate":"2023-10-24"},{"lineNumber":136,"author":{"gitId":"jylow"},"content":"         *","lastModifiedDate":"2023-10-24"},{"lineNumber":137,"author":{"gitId":"jylow"},"content":"         * @see seedu.address.logic.Logic#execute(Command)","lastModifiedDate":"2023-10-24"},{"lineNumber":138,"author":{"gitId":"jylow"},"content":"         */","lastModifiedDate":"2023-10-24"},{"lineNumber":139,"author":{"gitId":"jylow"},"content":"        CommandResult execute(Command command) throws CommandException;","lastModifiedDate":"2023-10-24"},{"lineNumber":140,"author":{"gitId":"jylow"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":141,"author":{"gitId":"jylow"},"content":"}","lastModifiedDate":"2023-10-24"}],"authorContributionMap":{"nikele2001":2,"jylow":139}},{"path":"src/main/java/seedu/address/ui/PersonCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Comparator;","lastModifiedDate":"2019-01-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":13,"author":{"gitId":"sopa301"},"content":" * A UI component that displays information of a {@code Person}.","lastModifiedDate":"2023-11-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class PersonCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"PersonListCard.fxml\";","lastModifiedDate":"2016-09-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2017-03-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2017-03-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2017-03-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public final Person person;","lastModifiedDate":"2018-01-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Label name;","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Label id;","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private Label phone;","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private Label address;","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private Label email;","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"sopa301"},"content":"    private Label nextOfKinName;","lastModifiedDate":"2023-09-28"},{"lineNumber":43,"author":{"gitId":"sopa301"},"content":"    @FXML","lastModifiedDate":"2023-09-28"},{"lineNumber":44,"author":{"gitId":"sopa301"},"content":"    private Label nextOfKinPhone;","lastModifiedDate":"2023-09-28"},{"lineNumber":45,"author":{"gitId":"sopa301"},"content":"    @FXML","lastModifiedDate":"2023-09-28"},{"lineNumber":46,"author":{"gitId":"Kb-Tay"},"content":"    private Label appointment;","lastModifiedDate":"2023-10-17"},{"lineNumber":47,"author":{"gitId":"Kb-Tay"},"content":"    @FXML","lastModifiedDate":"2023-10-17"},{"lineNumber":48,"author":{"gitId":"nikele2001"},"content":"    private FlowPane financialPlans;","lastModifiedDate":"2023-10-16"},{"lineNumber":49,"author":{"gitId":"nikele2001"},"content":"    @FXML","lastModifiedDate":"2023-10-16"},{"lineNumber":50,"author":{"gitId":"nikele2001"},"content":"    private Label tagsTitle;","lastModifiedDate":"2023-10-16"},{"lineNumber":51,"author":{"gitId":"nikele2001"},"content":"    @FXML","lastModifiedDate":"2023-10-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private FlowPane tags;","lastModifiedDate":"2016-12-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"nikele2001"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonCode} with the given {@code Person} and index to display.","lastModifiedDate":"2020-05-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public PersonCard(Person person, int displayedIndex) {","lastModifiedDate":"2018-01-10"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        this.person \u003d person;","lastModifiedDate":"2017-07-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2016-09-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        name.setText(person.getName().fullName);","lastModifiedDate":"2017-12-20"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        phone.setText(person.getPhone().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        address.setText(person.getAddress().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        email.setText(person.getEmail().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":66,"author":{"gitId":"sopa301"},"content":"        String nextOfKinNameText \u003d \"Next-of-kin: \" + person.getNextOfKinName().fullName;","lastModifiedDate":"2023-09-29"},{"lineNumber":67,"author":{"gitId":"sopa301"},"content":"        nextOfKinName.setText(nextOfKinNameText);","lastModifiedDate":"2023-09-29"},{"lineNumber":68,"author":{"gitId":"sopa301"},"content":"        String nextOfKinPhoneText \u003d \"Next-of-kin Phone: \" + person.getNextOfKinPhone().value;","lastModifiedDate":"2023-09-29"},{"lineNumber":69,"author":{"gitId":"sopa301"},"content":"        nextOfKinPhone.setText(nextOfKinPhoneText);","lastModifiedDate":"2023-09-29"},{"lineNumber":70,"author":{"gitId":"Kb-Tay"},"content":"        String appointmentText \u003d \"Appointment: \" + person.getAppointment().toString();","lastModifiedDate":"2023-10-17"},{"lineNumber":71,"author":{"gitId":"Kb-Tay"},"content":"        appointment.setText(appointmentText);","lastModifiedDate":"2023-10-17"},{"lineNumber":72,"author":{"gitId":"nikele2001"},"content":"        person.getFinancialPlans().stream()","lastModifiedDate":"2023-10-16"},{"lineNumber":73,"author":{"gitId":"nikele2001"},"content":"                .sorted(Comparator.comparing(financialPlan -\u003e financialPlan.financialPlanName))","lastModifiedDate":"2023-10-16"},{"lineNumber":74,"author":{"gitId":"sopa301"},"content":"                .forEach(financialPlan -\u003e financialPlans.getChildren()","lastModifiedDate":"2023-11-12"},{"lineNumber":75,"author":{"gitId":"sopa301"},"content":"                        .add(new Label(financialPlan.financialPlanName)));","lastModifiedDate":"2023-11-12"},{"lineNumber":76,"author":{"gitId":"sopa301"},"content":"        financialPlans.getChildren().forEach(label -\u003e ((Label) label).setMaxWidth(500));","lastModifiedDate":"2023-11-12"},{"lineNumber":77,"author":{"gitId":"sopa301"},"content":"        financialPlans.getChildren().forEach(label -\u003e ((Label) label).setWrapText(true));","lastModifiedDate":"2023-11-12"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        person.getTags().stream()","lastModifiedDate":"2019-01-02"},{"lineNumber":79,"author":{"gitId":"-"},"content":"                .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2019-01-02"},{"lineNumber":80,"author":{"gitId":"-"},"content":"                .forEach(tag -\u003e tags.getChildren().add(new Label(tag.tagName)));","lastModifiedDate":"2019-01-02"},{"lineNumber":81,"author":{"gitId":"sopa301"},"content":"        tags.getChildren().forEach(label -\u003e ((Label) label).setMaxWidth(500));","lastModifiedDate":"2023-11-12"},{"lineNumber":82,"author":{"gitId":"sopa301"},"content":"        tags.getChildren().forEach(label -\u003e ((Label) label).setWrapText(true));","lastModifiedDate":"2023-11-12"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"Kb-Tay":4,"nikele2001":7,"sopa301":15,"-":58}},{"path":"src/main/resources/view/AppointmentListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nikele2001"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-10-23"},{"lineNumber":2,"author":{"gitId":"nikele2001"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":3,"author":{"gitId":"nikele2001"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-10-23"},{"lineNumber":4,"author":{"gitId":"nikele2001"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-10-23"},{"lineNumber":5,"author":{"gitId":"nikele2001"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2023-10-23"},{"lineNumber":6,"author":{"gitId":"nikele2001"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2023-10-23"},{"lineNumber":7,"author":{"gitId":"nikele2001"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2023-10-23"},{"lineNumber":8,"author":{"gitId":"nikele2001"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-10-23"},{"lineNumber":9,"author":{"gitId":"nikele2001"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2023-10-23"},{"lineNumber":10,"author":{"gitId":"nikele2001"},"content":"\u003c?import javafx.scene.layout.RowConstraints?\u003e","lastModifiedDate":"2023-10-23"},{"lineNumber":11,"author":{"gitId":"nikele2001"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-10-23"},{"lineNumber":12,"author":{"gitId":"nikele2001"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":13,"author":{"gitId":"nikele2001"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/17.0.2-ea\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-10-23"},{"lineNumber":14,"author":{"gitId":"nikele2001"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-10-23"},{"lineNumber":15,"author":{"gitId":"nikele2001"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2023-10-23"},{"lineNumber":16,"author":{"gitId":"sopa301"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"250\" /\u003e","lastModifiedDate":"2023-10-23"},{"lineNumber":17,"author":{"gitId":"nikele2001"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2023-10-23"},{"lineNumber":18,"author":{"gitId":"nikele2001"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2023-10-23"},{"lineNumber":19,"author":{"gitId":"nikele2001"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2023-10-23"},{"lineNumber":20,"author":{"gitId":"nikele2001"},"content":"        \u003cInsets bottom\u003d\"5\" left\u003d\"15\" right\u003d\"5\" top\u003d\"5\" /\u003e","lastModifiedDate":"2023-10-23"},{"lineNumber":21,"author":{"gitId":"nikele2001"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2023-10-23"},{"lineNumber":22,"author":{"gitId":"nikele2001"},"content":"      \u003cHBox alignment\u003d\"CENTER_LEFT\" spacing\u003d\"5\"\u003e","lastModifiedDate":"2023-10-23"},{"lineNumber":23,"author":{"gitId":"nikele2001"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2023-10-23"},{"lineNumber":24,"author":{"gitId":"nikele2001"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2023-10-23"},{"lineNumber":25,"author":{"gitId":"nikele2001"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2023-10-23"},{"lineNumber":26,"author":{"gitId":"nikele2001"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2023-10-23"},{"lineNumber":27,"author":{"gitId":"nikele2001"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2023-10-23"},{"lineNumber":28,"author":{"gitId":"nikele2001"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2023-10-23"},{"lineNumber":29,"author":{"gitId":"AlyssaPng"},"content":"        \u003cLabel fx:id\u003d\"name\" styleClass\u003d\"cell_big_label\" text\u003d\"\\$first\" wrapText\u003d\"true\"/\u003e","lastModifiedDate":"2023-11-07"},{"lineNumber":30,"author":{"gitId":"nikele2001"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2023-10-23"},{"lineNumber":31,"author":{"gitId":"AlyssaPng"},"content":"      \u003cLabel fx:id\u003d\"personName\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$personName\" wrapText\u003d\"true\"/\u003e","lastModifiedDate":"2023-11-07"},{"lineNumber":32,"author":{"gitId":"AlyssaPng"},"content":"      \u003cLabel fx:id\u003d\"dateTime\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$dateTime\" wrapText\u003d\"true\"/\u003e","lastModifiedDate":"2023-11-07"},{"lineNumber":33,"author":{"gitId":"nikele2001"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2023-10-23"},{"lineNumber":34,"author":{"gitId":"nikele2001"},"content":"      \u003crowConstraints\u003e","lastModifiedDate":"2023-10-23"},{"lineNumber":35,"author":{"gitId":"nikele2001"},"content":"         \u003cRowConstraints /\u003e","lastModifiedDate":"2023-10-23"},{"lineNumber":36,"author":{"gitId":"nikele2001"},"content":"      \u003c/rowConstraints\u003e","lastModifiedDate":"2023-10-23"},{"lineNumber":37,"author":{"gitId":"nikele2001"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2023-10-23"},{"lineNumber":38,"author":{"gitId":"sopa301"},"content":"   \u003cFlowPane prefHeight\u003d\"100.0\" prefWidth\u003d\"10.0\" /\u003e","lastModifiedDate":"2023-10-23"},{"lineNumber":39,"author":{"gitId":"nikele2001"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2023-10-23"}],"authorContributionMap":{"nikele2001":34,"AlyssaPng":3,"sopa301":2}},{"path":"src/main/resources/view/AppointmentListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nikele2001"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-10-23"},{"lineNumber":2,"author":{"gitId":"nikele2001"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":3,"author":{"gitId":"nikele2001"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2023-10-23"},{"lineNumber":4,"author":{"gitId":"nikele2001"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-10-23"},{"lineNumber":5,"author":{"gitId":"nikele2001"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":6,"author":{"gitId":"nikele2001"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-10-23"},{"lineNumber":7,"author":{"gitId":"nikele2001"},"content":"  \u003cListView fx:id\u003d\"appointmentListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2023-10-23"},{"lineNumber":8,"author":{"gitId":"nikele2001"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2023-10-23"}],"authorContributionMap":{"nikele2001":8}},{"path":"src/main/resources/view/ClearWindow.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sopa301"},"content":"#copyButton, #helpMessage {","lastModifiedDate":"2023-10-18"},{"lineNumber":2,"author":{"gitId":"sopa301"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2023-10-18"},{"lineNumber":3,"author":{"gitId":"sopa301"},"content":"}","lastModifiedDate":"2023-10-18"},{"lineNumber":4,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":5,"author":{"gitId":"sopa301"},"content":"#copyButton {","lastModifiedDate":"2023-10-18"},{"lineNumber":6,"author":{"gitId":"sopa301"},"content":"    -fx-background-color: dimgray;","lastModifiedDate":"2023-10-18"},{"lineNumber":7,"author":{"gitId":"sopa301"},"content":"}","lastModifiedDate":"2023-10-18"},{"lineNumber":8,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":9,"author":{"gitId":"sopa301"},"content":"#copyButton:hover {","lastModifiedDate":"2023-10-18"},{"lineNumber":10,"author":{"gitId":"sopa301"},"content":"    -fx-background-color: gray;","lastModifiedDate":"2023-10-18"},{"lineNumber":11,"author":{"gitId":"sopa301"},"content":"}","lastModifiedDate":"2023-10-18"},{"lineNumber":12,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":13,"author":{"gitId":"sopa301"},"content":"#copyButton:armed {","lastModifiedDate":"2023-10-18"},{"lineNumber":14,"author":{"gitId":"sopa301"},"content":"    -fx-background-color: darkgray;","lastModifiedDate":"2023-10-18"},{"lineNumber":15,"author":{"gitId":"sopa301"},"content":"}","lastModifiedDate":"2023-10-18"},{"lineNumber":16,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":17,"author":{"gitId":"sopa301"},"content":"#helpMessageContainer {","lastModifiedDate":"2023-10-18"},{"lineNumber":18,"author":{"gitId":"sopa301"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2023-10-18"},{"lineNumber":19,"author":{"gitId":"sopa301"},"content":"}","lastModifiedDate":"2023-10-18"}],"authorContributionMap":{"sopa301":19}},{"path":"src/main/resources/view/ClearWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sopa301"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":2,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":3,"author":{"gitId":"sopa301"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":4,"author":{"gitId":"sopa301"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":5,"author":{"gitId":"sopa301"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":6,"author":{"gitId":"sopa301"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":7,"author":{"gitId":"sopa301"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":8,"author":{"gitId":"sopa301"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":9,"author":{"gitId":"sopa301"},"content":"\u003c?import javafx.stage.Stage?\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":10,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":11,"author":{"gitId":"sopa301"},"content":"\u003cfx:root resizable\u003d\"false\" title\u003d\"\" type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":12,"author":{"gitId":"sopa301"},"content":"    \u003cscene\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":13,"author":{"gitId":"sopa301"},"content":"        \u003cScene\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":14,"author":{"gitId":"sopa301"},"content":"            \u003cstylesheets\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":15,"author":{"gitId":"sopa301"},"content":"                \u003cURL value\u003d\"@ClearWindow.css\" /\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":16,"author":{"gitId":"sopa301"},"content":"            \u003c/stylesheets\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":17,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":18,"author":{"gitId":"sopa301"},"content":"            \u003cHBox alignment\u003d\"CENTER\" fx:id\u003d\"clearMessageContainer\"\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":19,"author":{"gitId":"sopa301"},"content":"                \u003cchildren\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":20,"author":{"gitId":"sopa301"},"content":"                    \u003cLabel fx:id\u003d\"clearMessage\" text\u003d\"Label\"\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":21,"author":{"gitId":"sopa301"},"content":"                        \u003cHBox.margin\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":22,"author":{"gitId":"sopa301"},"content":"                            \u003cInsets right\u003d\"5.0\" /\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":23,"author":{"gitId":"sopa301"},"content":"                        \u003c/HBox.margin\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":24,"author":{"gitId":"sopa301"},"content":"                    \u003c/Label\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":25,"author":{"gitId":"sopa301"},"content":"                    \u003cButton fx:id\u003d\"clearButton\" mnemonicParsing\u003d\"false\" onAction\u003d\"#confirmClear\" text\u003d\"Clear\"\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":26,"author":{"gitId":"sopa301"},"content":"                        \u003cHBox.margin\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":27,"author":{"gitId":"sopa301"},"content":"                            \u003cInsets left\u003d\"5.0\" /\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":28,"author":{"gitId":"sopa301"},"content":"                        \u003c/HBox.margin\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":29,"author":{"gitId":"sopa301"},"content":"                    \u003c/Button\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":30,"author":{"gitId":"sopa301"},"content":"                    \u003cButton fx:id\u003d\"cancelButton\" mnemonicParsing\u003d\"false\" onAction\u003d\"#cancel\" text\u003d\"Cancel\"\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":31,"author":{"gitId":"sopa301"},"content":"                        \u003cHBox.margin\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":32,"author":{"gitId":"sopa301"},"content":"                            \u003cInsets left\u003d\"5.0\" /\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":33,"author":{"gitId":"sopa301"},"content":"                        \u003c/HBox.margin\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":34,"author":{"gitId":"sopa301"},"content":"                    \u003c/Button\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":35,"author":{"gitId":"sopa301"},"content":"                \u003c/children\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":36,"author":{"gitId":"sopa301"},"content":"                \u003copaqueInsets\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":37,"author":{"gitId":"sopa301"},"content":"                    \u003cInsets bottom\u003d\"10.0\" left\u003d\"5.0\" right\u003d\"10.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":38,"author":{"gitId":"sopa301"},"content":"                \u003c/opaqueInsets\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":39,"author":{"gitId":"sopa301"},"content":"                \u003cpadding\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":40,"author":{"gitId":"sopa301"},"content":"                    \u003cInsets bottom\u003d\"10.0\" left\u003d\"5.0\" right\u003d\"10.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":41,"author":{"gitId":"sopa301"},"content":"                \u003c/padding\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":42,"author":{"gitId":"sopa301"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":43,"author":{"gitId":"sopa301"},"content":"        \u003c/Scene\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":44,"author":{"gitId":"sopa301"},"content":"    \u003c/scene\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":45,"author":{"gitId":"sopa301"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-10-18"}],"authorContributionMap":{"sopa301":45}},{"path":"src/main/resources/view/DarkTheme.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":".background {","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"AlyssaPng"},"content":"    -fx-background-color: #F5F7F8;","lastModifiedDate":"2023-11-02"},{"lineNumber":3,"author":{"gitId":"AlyssaPng"},"content":"    background-color: #F4CE14;","lastModifiedDate":"2023-11-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":".label {","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":9,"author":{"gitId":"AlyssaPng"},"content":"    -fx-text-fill: #4F6F52;","lastModifiedDate":"2023-11-02"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":".label-bright {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":16,"author":{"gitId":"AlyssaPng"},"content":"    -fx-text-fill: #ECE3CE;","lastModifiedDate":"2023-11-02"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":".label-header {","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    -fx-font-size: 32pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":23,"author":{"gitId":"AlyssaPng"},"content":"    -fx-text-fill: #ECE3CE;","lastModifiedDate":"2023-11-02"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"AlyssaPng"},"content":".title-pane {","lastModifiedDate":"2023-11-02"},{"lineNumber":28,"author":{"gitId":"AlyssaPng"},"content":"    -fx-font-size: 18px;","lastModifiedDate":"2023-11-02"},{"lineNumber":29,"author":{"gitId":"AlyssaPng"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2023-11-02"},{"lineNumber":30,"author":{"gitId":"AlyssaPng"},"content":"    -fx-padding: 10px;","lastModifiedDate":"2023-11-02"},{"lineNumber":31,"author":{"gitId":"AlyssaPng"},"content":"    -fx-text-fill: #ECE3CE;","lastModifiedDate":"2023-11-02"},{"lineNumber":32,"author":{"gitId":"AlyssaPng"},"content":"    -fx-alignment: center;","lastModifiedDate":"2023-11-02"},{"lineNumber":33,"author":{"gitId":"AlyssaPng"},"content":"}","lastModifiedDate":"2023-11-02"},{"lineNumber":34,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":35,"author":{"gitId":"-"},"content":".text-field {","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":".tab-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":".tab-pane .tab-header-area {","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    -fx-min-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    -fx-max-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":".table-view {","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"AlyssaPng"},"content":"    -fx-base: #9E7777;","lastModifiedDate":"2023-11-02"},{"lineNumber":52,"author":{"gitId":"AlyssaPng"},"content":"    -fx-control-inner-background: #45474B;","lastModifiedDate":"2023-11-02"},{"lineNumber":53,"author":{"gitId":"AlyssaPng"},"content":"    -fx-background-color: #45474B;","lastModifiedDate":"2023-11-02"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    -fx-table-cell-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    -fx-table-header-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    -fx-padding: 5;","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":".table-view .column-header-background {","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":".table-view .column-header, .table-view .filler {","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    -fx-size: 35;","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    -fx-border-width: 0 0 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    -fx-border-color:","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"AlyssaPng"},"content":"        derive(#739072, 80%)","lastModifiedDate":"2023-11-02"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0 10 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":".table-view .column-header .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    -fx-font-size: 20pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    -fx-alignment: center-left;","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":".table-view:focused .table-row-cell:filled:focused:selected {","lastModifiedDate":"2016-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":".split-pane:horizontal .split-pane-divider {","lastModifiedDate":"2016-08-08"},{"lineNumber":88,"author":{"gitId":"AlyssaPng"},"content":"    -fx-background-color: derive(#45474B, 20%);","lastModifiedDate":"2023-11-02"},{"lineNumber":89,"author":{"gitId":"AlyssaPng"},"content":"    -fx-border-color: transparent transparent transparent #4F6F52;","lastModifiedDate":"2023-11-02"},{"lineNumber":90,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":".split-pane {","lastModifiedDate":"2016-08-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    -fx-border-radius: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":95,"author":{"gitId":"AlyssaPng"},"content":"    -fx-background-color: derive(#45474B, 20%);","lastModifiedDate":"2023-11-02"},{"lineNumber":96,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":".list-view {","lastModifiedDate":"2017-03-02"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":100,"author":{"gitId":"AlyssaPng"},"content":"    -fx-padding: 5;","lastModifiedDate":"2023-11-02"},{"lineNumber":101,"author":{"gitId":"AlyssaPng"},"content":"    -fx-background-color: #45474B;","lastModifiedDate":"2023-11-02"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":104,"author":{"gitId":"-"},"content":".list-cell {","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    -fx-label-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    -fx-graphic-text-gap : 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"AlyssaPng"},"content":"    -fx-background-color: #45474B;","lastModifiedDate":"2023-11-02"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":".list-cell:filled:even {","lastModifiedDate":"2017-03-02"},{"lineNumber":112,"author":{"gitId":"AlyssaPng"},"content":"    -fx-background-color: #495E57;","lastModifiedDate":"2023-11-02"},{"lineNumber":113,"author":{"gitId":"AlyssaPng"},"content":"    -fx-background-radius: 10px;","lastModifiedDate":"2023-11-02"},{"lineNumber":114,"author":{"gitId":"AlyssaPng"},"content":"    -fx-margin-bottom: 10px;","lastModifiedDate":"2023-11-02"},{"lineNumber":115,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":117,"author":{"gitId":"-"},"content":".list-cell:filled:odd {","lastModifiedDate":"2017-03-02"},{"lineNumber":118,"author":{"gitId":"AlyssaPng"},"content":"    -fx-background-color: #739072;","lastModifiedDate":"2023-11-02"},{"lineNumber":119,"author":{"gitId":"AlyssaPng"},"content":"    -fx-background-radius: 10px;","lastModifiedDate":"2023-11-02"},{"lineNumber":120,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":122,"author":{"gitId":"-"},"content":".list-cell:filled:selected {","lastModifiedDate":"2017-03-02"},{"lineNumber":123,"author":{"gitId":"AlyssaPng"},"content":"    -fx-background-color: #3A4D39;","lastModifiedDate":"2023-11-02"},{"lineNumber":124,"author":{"gitId":"AlyssaPng"},"content":"    -fx-background-radius: 10px;","lastModifiedDate":"2023-11-02"},{"lineNumber":125,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":127,"author":{"gitId":"-"},"content":".list-cell:filled:selected #cardPane {","lastModifiedDate":"2017-03-02"},{"lineNumber":128,"author":{"gitId":"AlyssaPng"},"content":"    -fx-border-color: #4F6F52;","lastModifiedDate":"2023-11-02"},{"lineNumber":129,"author":{"gitId":"AlyssaPng"},"content":"    -fx-border-radius: 10px;","lastModifiedDate":"2023-11-02"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":131,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":133,"author":{"gitId":"-"},"content":".list-cell .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":135,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":".cell_big_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    -fx-font-size: 16px;","lastModifiedDate":"2016-08-08"},{"lineNumber":140,"author":{"gitId":"AlyssaPng"},"content":"    -fx-text-fill: #3A4D39;","lastModifiedDate":"2023-11-02"},{"lineNumber":141,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":".cell_small_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\";","lastModifiedDate":"2022-01-13"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    -fx-font-size: 13px;","lastModifiedDate":"2017-03-02"},{"lineNumber":146,"author":{"gitId":"AlyssaPng"},"content":"    -fx-text-fill: #3A4D39;","lastModifiedDate":"2023-11-02"},{"lineNumber":147,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":149,"author":{"gitId":"-"},"content":".stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":150,"author":{"gitId":"AlyssaPng"},"content":"     -fx-background-color: derive(#45474B, 20%);","lastModifiedDate":"2023-11-02"},{"lineNumber":151,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":".pane-with-border {","lastModifiedDate":"2017-05-15"},{"lineNumber":154,"author":{"gitId":"AlyssaPng"},"content":"     -fx-background-color: derive(#45474B, 20%);","lastModifiedDate":"2023-11-02"},{"lineNumber":155,"author":{"gitId":"AlyssaPng"},"content":"     -fx-border-color: derive(#45474B, 10%);","lastModifiedDate":"2023-11-02"},{"lineNumber":156,"author":{"gitId":"-"},"content":"     -fx-border-top-width: 1px;","lastModifiedDate":"2017-05-09"},{"lineNumber":157,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-09"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":159,"author":{"gitId":"-"},"content":".status-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":160,"author":{"gitId":"AlyssaPng"},"content":"    -fx-background-color: derive(#45474B, 30%);","lastModifiedDate":"2023-11-02"},{"lineNumber":161,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":163,"author":{"gitId":"-"},"content":".result-display {","lastModifiedDate":"2016-09-14"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2017-03-02"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":168,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":170,"author":{"gitId":"-"},"content":".result-display .label {","lastModifiedDate":"2016-09-14"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    -fx-text-fill: black !important;","lastModifiedDate":"2016-09-14"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":".status-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    -fx-padding: 4px;","lastModifiedDate":"2018-12-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    -fx-pref-height: 30px;","lastModifiedDate":"2018-12-08"},{"lineNumber":179,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":181,"author":{"gitId":"-"},"content":".status-bar-with-border {","lastModifiedDate":"2016-08-08"},{"lineNumber":182,"author":{"gitId":"AlyssaPng"},"content":"    -fx-background-color: derive(#45474B, 30%);","lastModifiedDate":"2023-11-02"},{"lineNumber":183,"author":{"gitId":"AlyssaPng"},"content":"    -fx-border-color: derive(#45474B, 25%);","lastModifiedDate":"2023-11-02"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":185,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":187,"author":{"gitId":"-"},"content":".status-bar-with-border .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":189,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":191,"author":{"gitId":"-"},"content":".grid-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":192,"author":{"gitId":"AlyssaPng"},"content":"    -fx-background-color: derive(#45474B, 30%);","lastModifiedDate":"2023-11-02"},{"lineNumber":193,"author":{"gitId":"AlyssaPng"},"content":"    -fx-border-color: derive(#45474B, 30%);","lastModifiedDate":"2023-11-02"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":195,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":197,"author":{"gitId":"-"},"content":".grid-pane .stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":198,"author":{"gitId":"AlyssaPng"},"content":"    -fx-background-color: derive(#45474B, 30%);","lastModifiedDate":"2023-11-02"},{"lineNumber":199,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":201,"author":{"gitId":"-"},"content":".context-menu {","lastModifiedDate":"2016-08-08"},{"lineNumber":202,"author":{"gitId":"AlyssaPng"},"content":"    -fx-background-color: derive(#45474B, 50%);","lastModifiedDate":"2023-11-02"},{"lineNumber":203,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":205,"author":{"gitId":"-"},"content":".context-menu .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":207,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":209,"author":{"gitId":"-"},"content":".menu-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":210,"author":{"gitId":"AlyssaPng"},"content":"    -fx-background-color: derive(#45474B, 20%);","lastModifiedDate":"2023-11-02"},{"lineNumber":211,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":213,"author":{"gitId":"-"},"content":".menu-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":214,"author":{"gitId":"-"},"content":"    -fx-font-size: 14pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":216,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":218,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":220,"author":{"gitId":"-"},"content":".menu .left-container {","lastModifiedDate":"2016-08-08"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    -fx-background-color: black;","lastModifiedDate":"2016-08-08"},{"lineNumber":222,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":224,"author":{"gitId":"-"},"content":"/*","lastModifiedDate":"2016-08-08"},{"lineNumber":225,"author":{"gitId":"-"},"content":" * Metro style Push Button","lastModifiedDate":"2016-08-08"},{"lineNumber":226,"author":{"gitId":"-"},"content":" * Author: Pedro Duque Vieira","lastModifiedDate":"2016-08-08"},{"lineNumber":227,"author":{"gitId":"-"},"content":" * http://pixelduke.wordpress.com/2012/10/23/jmetro-windows-8-controls-on-java/","lastModifiedDate":"2016-08-08"},{"lineNumber":228,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":229,"author":{"gitId":"-"},"content":".button {","lastModifiedDate":"2016-08-08"},{"lineNumber":230,"author":{"gitId":"-"},"content":"    -fx-padding: 5 22 5 22;","lastModifiedDate":"2016-08-08"},{"lineNumber":231,"author":{"gitId":"-"},"content":"    -fx-border-color: #e2e2e2;","lastModifiedDate":"2016-08-08"},{"lineNumber":232,"author":{"gitId":"-"},"content":"    -fx-border-width: 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":234,"author":{"gitId":"AlyssaPng"},"content":"    -fx-background-color: #45474B;","lastModifiedDate":"2023-11-02"},{"lineNumber":235,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\", Helvetica, Arial, sans-serif;","lastModifiedDate":"2022-01-13"},{"lineNumber":236,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":237,"author":{"gitId":"-"},"content":"    -fx-text-fill: #d8d8d8;","lastModifiedDate":"2016-08-08"},{"lineNumber":238,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0 0 0 0, 0, 1, 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":239,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":241,"author":{"gitId":"-"},"content":".button:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":242,"author":{"gitId":"-"},"content":"    -fx-background-color: #3a3a3a;","lastModifiedDate":"2016-08-08"},{"lineNumber":243,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":245,"author":{"gitId":"-"},"content":".button:pressed, .button:default:hover:pressed {","lastModifiedDate":"2016-08-08"},{"lineNumber":246,"author":{"gitId":"-"},"content":"  -fx-background-color: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":247,"author":{"gitId":"AlyssaPng"},"content":"  -fx-text-fill: #45474B;","lastModifiedDate":"2023-11-02"},{"lineNumber":248,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":250,"author":{"gitId":"-"},"content":".button:focused {","lastModifiedDate":"2016-08-08"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    -fx-border-color: white, white;","lastModifiedDate":"2016-08-08"},{"lineNumber":252,"author":{"gitId":"-"},"content":"    -fx-border-width: 1, 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    -fx-border-style: solid, segments(1, 1);","lastModifiedDate":"2016-08-08"},{"lineNumber":254,"author":{"gitId":"-"},"content":"    -fx-border-radius: 0, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":255,"author":{"gitId":"-"},"content":"    -fx-border-insets: 1 1 1 1, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":256,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":258,"author":{"gitId":"-"},"content":".button:disabled, .button:default:disabled {","lastModifiedDate":"2016-08-08"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.4;","lastModifiedDate":"2016-08-08"},{"lineNumber":260,"author":{"gitId":"AlyssaPng"},"content":"    -fx-background-color: #45474B;","lastModifiedDate":"2023-11-02"},{"lineNumber":261,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":262,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":264,"author":{"gitId":"-"},"content":".button:default {","lastModifiedDate":"2016-08-08"},{"lineNumber":265,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":266,"author":{"gitId":"-"},"content":"    -fx-text-fill: #ffffff;","lastModifiedDate":"2016-08-08"},{"lineNumber":267,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":269,"author":{"gitId":"-"},"content":".button:default:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":270,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(-fx-focus-color, 30%);","lastModifiedDate":"2016-08-08"},{"lineNumber":271,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":273,"author":{"gitId":"-"},"content":".dialog-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":274,"author":{"gitId":"AlyssaPng"},"content":"    -fx-background-color: #45474B;","lastModifiedDate":"2023-11-02"},{"lineNumber":275,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":277,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.button-bar \u003e *.container {","lastModifiedDate":"2016-08-08"},{"lineNumber":278,"author":{"gitId":"AlyssaPng"},"content":"    -fx-background-color: #45474B;","lastModifiedDate":"2023-11-02"},{"lineNumber":279,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":281,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.label.content {","lastModifiedDate":"2016-08-08"},{"lineNumber":282,"author":{"gitId":"-"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2016-08-08"},{"lineNumber":283,"author":{"gitId":"-"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2016-08-08"},{"lineNumber":284,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":285,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":287,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel {","lastModifiedDate":"2016-08-08"},{"lineNumber":288,"author":{"gitId":"AlyssaPng"},"content":"    -fx-background-color: derive(#45474B, 25%);","lastModifiedDate":"2023-11-02"},{"lineNumber":289,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":291,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel *.label {","lastModifiedDate":"2016-08-08"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    -fx-font-size: 18px;","lastModifiedDate":"2016-08-08"},{"lineNumber":293,"author":{"gitId":"-"},"content":"    -fx-font-style: italic;","lastModifiedDate":"2016-08-08"},{"lineNumber":294,"author":{"gitId":"-"},"content":"    -fx-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":295,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":296,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":298,"author":{"gitId":"-"},"content":".scroll-bar {","lastModifiedDate":"2017-03-02"},{"lineNumber":299,"author":{"gitId":"AlyssaPng"},"content":"    -fx-background-color: derive(#45474B, 20%);","lastModifiedDate":"2023-11-02"},{"lineNumber":300,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":302,"author":{"gitId":"-"},"content":".scroll-bar .thumb {","lastModifiedDate":"2016-08-15"},{"lineNumber":303,"author":{"gitId":"AlyssaPng"},"content":"    -fx-background-color: derive(#45474B, 50%);","lastModifiedDate":"2023-11-02"},{"lineNumber":304,"author":{"gitId":"-"},"content":"    -fx-background-insets: 3;","lastModifiedDate":"2016-08-15"},{"lineNumber":305,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":307,"author":{"gitId":"-"},"content":".scroll-bar .increment-button, .scroll-bar .decrement-button {","lastModifiedDate":"2016-08-15"},{"lineNumber":308,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-15"},{"lineNumber":309,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-15"},{"lineNumber":310,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":311,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":312,"author":{"gitId":"-"},"content":".scroll-bar .increment-arrow, .scroll-bar .decrement-arrow {","lastModifiedDate":"2016-08-15"},{"lineNumber":313,"author":{"gitId":"-"},"content":"    -fx-shape: \" \";","lastModifiedDate":"2016-08-15"},{"lineNumber":314,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":315,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":316,"author":{"gitId":"-"},"content":".scroll-bar:vertical .increment-arrow, .scroll-bar:vertical .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":317,"author":{"gitId":"-"},"content":"    -fx-padding: 1 8 1 8;","lastModifiedDate":"2016-08-15"},{"lineNumber":318,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":320,"author":{"gitId":"-"},"content":".scroll-bar:horizontal .increment-arrow, .scroll-bar:horizontal .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":321,"author":{"gitId":"-"},"content":"    -fx-padding: 8 1 8 1;","lastModifiedDate":"2016-08-18"},{"lineNumber":322,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":323,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":324,"author":{"gitId":"-"},"content":"#cardPane {","lastModifiedDate":"2016-08-08"},{"lineNumber":325,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":326,"author":{"gitId":"-"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":327,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":328,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":329,"author":{"gitId":"-"},"content":"#commandTypeLabel {","lastModifiedDate":"2016-08-08"},{"lineNumber":330,"author":{"gitId":"-"},"content":"    -fx-font-size: 11px;","lastModifiedDate":"2016-08-08"},{"lineNumber":331,"author":{"gitId":"-"},"content":"    -fx-text-fill: #F70D1A;","lastModifiedDate":"2016-08-08"},{"lineNumber":332,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":333,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":334,"author":{"gitId":"-"},"content":"#commandTextField {","lastModifiedDate":"2017-03-02"},{"lineNumber":335,"author":{"gitId":"AlyssaPng"},"content":"    -fx-background-color: transparent #45474B  transparent #45474B;","lastModifiedDate":"2023-11-02"},{"lineNumber":336,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":337,"author":{"gitId":"AlyssaPng"},"content":"    -fx-border-color: #45474B #45474B #ECE3CE #45474B;","lastModifiedDate":"2023-11-02"},{"lineNumber":338,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":339,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":340,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":341,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":342,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":343,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":344,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":345,"author":{"gitId":"-"},"content":"#filterField, #personListPanel, #personWebpage {","lastModifiedDate":"2016-08-15"},{"lineNumber":346,"author":{"gitId":"-"},"content":"    -fx-effect: innershadow(gaussian, black, 10, 0, 0, 0);","lastModifiedDate":"2016-08-15"},{"lineNumber":347,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":348,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":349,"author":{"gitId":"-"},"content":"#resultDisplay .content {","lastModifiedDate":"2017-03-02"},{"lineNumber":350,"author":{"gitId":"AlyssaPng"},"content":"    -fx-background-color: transparent, #45474B, transparent, #45474B;","lastModifiedDate":"2023-11-02"},{"lineNumber":351,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":352,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":353,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":354,"author":{"gitId":"-"},"content":"#tags {","lastModifiedDate":"2016-12-18"},{"lineNumber":355,"author":{"gitId":"nikele2001"},"content":"    -fx-padding: 3 0 3 0;","lastModifiedDate":"2023-10-16"},{"lineNumber":356,"author":{"gitId":"-"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2016-12-18"},{"lineNumber":357,"author":{"gitId":"-"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":358,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":359,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":360,"author":{"gitId":"-"},"content":"#tags .label {","lastModifiedDate":"2016-12-18"},{"lineNumber":361,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-12-18"},{"lineNumber":362,"author":{"gitId":"-"},"content":"    -fx-background-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":363,"author":{"gitId":"-"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":364,"author":{"gitId":"-"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":365,"author":{"gitId":"-"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":366,"author":{"gitId":"-"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2016-12-18"},{"lineNumber":367,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":368,"author":{"gitId":"nikele2001"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":369,"author":{"gitId":"nikele2001"},"content":"#financialPlans {","lastModifiedDate":"2023-10-16"},{"lineNumber":370,"author":{"gitId":"nikele2001"},"content":"    -fx-padding: 3 0 3 0;","lastModifiedDate":"2023-10-16"},{"lineNumber":371,"author":{"gitId":"nikele2001"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2023-10-16"},{"lineNumber":372,"author":{"gitId":"nikele2001"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2023-10-16"},{"lineNumber":373,"author":{"gitId":"nikele2001"},"content":"}","lastModifiedDate":"2023-10-16"},{"lineNumber":374,"author":{"gitId":"nikele2001"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":375,"author":{"gitId":"nikele2001"},"content":"#financialPlans .label {","lastModifiedDate":"2023-10-16"},{"lineNumber":376,"author":{"gitId":"AlyssaPng"},"content":"    -fx-text-fill: #0C356A;","lastModifiedDate":"2023-11-02"},{"lineNumber":377,"author":{"gitId":"AlyssaPng"},"content":"    -fx-background-color: #FFC436;","lastModifiedDate":"2023-11-02"},{"lineNumber":378,"author":{"gitId":"nikele2001"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2023-10-16"},{"lineNumber":379,"author":{"gitId":"nikele2001"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2023-10-16"},{"lineNumber":380,"author":{"gitId":"nikele2001"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2023-10-16"},{"lineNumber":381,"author":{"gitId":"nikele2001"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2023-10-16"},{"lineNumber":382,"author":{"gitId":"nikele2001"},"content":"}","lastModifiedDate":"2023-10-16"}],"authorContributionMap":{"AlyssaPng":58,"nikele2001":14,"-":310}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.SplitPane?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":11,"author":{"gitId":"nikele2001"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-10-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":14,"author":{"gitId":"AlyssaPng"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"\u003cfx:root type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2023-07-27"},{"lineNumber":17,"author":{"gitId":"AlyssaPng"},"content":"         title\u003d\"UNOFAS\" minWidth\u003d\"500\" minHeight\u003d\"600\" onCloseRequest\u003d\"#handleExit\"\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    \u003cImage url\u003d\"@/images/address_book_32.png\" /\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@DarkTheme.css\" /\u003e","lastModifiedDate":"2016-08-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Extensions.css\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"      \u003cVBox\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        \u003cMenuBar fx:id\u003d\"menuBar\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2017-06-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        \u003c/MenuBar\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"commandBoxPlaceholder\" styleClass\u003d\"pane-with-border\"\u003e","lastModifiedDate":"2017-05-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"resultDisplayPlaceholder\" styleClass\u003d\"pane-with-border\"","lastModifiedDate":"2017-05-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                   minHeight\u003d\"100\" prefHeight\u003d\"100\" maxHeight\u003d\"100\"\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":50,"author":{"gitId":"nikele2001"},"content":"        \u003cHBox prefHeight\u003d\"500.0\" prefWidth\u003d\"200.0\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-10-23"},{"lineNumber":51,"author":{"gitId":"nikele2001"},"content":"        \u003cVBox fx:id\u003d\"personList\" minWidth\u003d\"300.0\" prefWidth\u003d\"500.0\" styleClass\u003d\"pane-with-border\" HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-10-23"},{"lineNumber":52,"author":{"gitId":"AlyssaPng"},"content":"          \u003cLabel text\u003d\"Contacts\" styleClass\u003d\"title-pane\" /\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":53,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"          \u003cStackPane fx:id\u003d\"personListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2017-06-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":58,"author":{"gitId":"nikele2001"},"content":"        \u003cVBox fx:id\u003d\"appointmentList\" minWidth\u003d\"150.0\" prefWidth\u003d\"200.0\" styleClass\u003d\"pane-with-border\" HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-10-23"},{"lineNumber":59,"author":{"gitId":"AlyssaPng"},"content":"          \u003cLabel text\u003d\"Appointments\" styleClass\u003d\"title-pane\" /\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":60,"author":{"gitId":"nikele2001"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2023-10-23"},{"lineNumber":61,"author":{"gitId":"nikele2001"},"content":"            \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\" /\u003e","lastModifiedDate":"2023-10-23"},{"lineNumber":62,"author":{"gitId":"nikele2001"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2023-10-23"},{"lineNumber":63,"author":{"gitId":"nikele2001"},"content":"          \u003cStackPane fx:id\u003d\"appointmentListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2023-10-23"},{"lineNumber":64,"author":{"gitId":"nikele2001"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2023-10-23"},{"lineNumber":65,"author":{"gitId":"nikele2001"},"content":"        \u003c/HBox\u003e","lastModifiedDate":"2023-10-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" VBox.vgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"nikele2001":10,"AlyssaPng":4,"-":56}},{"path":"src/main/resources/view/OverrideWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jylow"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-10-24"},{"lineNumber":2,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":3,"author":{"gitId":"jylow"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2023-10-24"},{"lineNumber":4,"author":{"gitId":"jylow"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-10-24"},{"lineNumber":5,"author":{"gitId":"jylow"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2023-10-24"},{"lineNumber":6,"author":{"gitId":"jylow"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-10-24"},{"lineNumber":7,"author":{"gitId":"jylow"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-10-24"},{"lineNumber":8,"author":{"gitId":"jylow"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-10-24"},{"lineNumber":9,"author":{"gitId":"jylow"},"content":"\u003c?import javafx.stage.Stage?\u003e","lastModifiedDate":"2023-10-24"},{"lineNumber":10,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":11,"author":{"gitId":"jylow"},"content":"\u003cfx:root resizable\u003d\"false\" title\u003d\"\" type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-10-24"},{"lineNumber":12,"author":{"gitId":"jylow"},"content":"    \u003cscene\u003e","lastModifiedDate":"2023-10-24"},{"lineNumber":13,"author":{"gitId":"jylow"},"content":"        \u003cScene\u003e","lastModifiedDate":"2023-10-24"},{"lineNumber":14,"author":{"gitId":"jylow"},"content":"            \u003cstylesheets\u003e","lastModifiedDate":"2023-10-24"},{"lineNumber":15,"author":{"gitId":"jylow"},"content":"                \u003cURL value\u003d\"@ClearWindow.css\" /\u003e","lastModifiedDate":"2023-10-24"},{"lineNumber":16,"author":{"gitId":"jylow"},"content":"            \u003c/stylesheets\u003e","lastModifiedDate":"2023-10-24"},{"lineNumber":17,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":18,"author":{"gitId":"jylow"},"content":"            \u003cHBox alignment\u003d\"CENTER\" fx:id\u003d\"clearMessageContainer\"\u003e","lastModifiedDate":"2023-10-24"},{"lineNumber":19,"author":{"gitId":"jylow"},"content":"                \u003cchildren\u003e","lastModifiedDate":"2023-10-24"},{"lineNumber":20,"author":{"gitId":"jylow"},"content":"                    \u003cLabel fx:id\u003d\"overrideMessage\" text\u003d\"Label\"\u003e","lastModifiedDate":"2023-10-24"},{"lineNumber":21,"author":{"gitId":"jylow"},"content":"                        \u003cHBox.margin\u003e","lastModifiedDate":"2023-10-24"},{"lineNumber":22,"author":{"gitId":"jylow"},"content":"                            \u003cInsets right\u003d\"5.0\" /\u003e","lastModifiedDate":"2023-10-24"},{"lineNumber":23,"author":{"gitId":"jylow"},"content":"                        \u003c/HBox.margin\u003e","lastModifiedDate":"2023-10-24"},{"lineNumber":24,"author":{"gitId":"jylow"},"content":"                    \u003c/Label\u003e","lastModifiedDate":"2023-10-24"},{"lineNumber":25,"author":{"gitId":"jylow"},"content":"                    \u003cButton fx:id\u003d\"overrideButton\" mnemonicParsing\u003d\"false\" onAction\u003d\"#confirmOverride\" text\u003d\"Override\"\u003e","lastModifiedDate":"2023-10-24"},{"lineNumber":26,"author":{"gitId":"jylow"},"content":"                        \u003cHBox.margin\u003e","lastModifiedDate":"2023-10-24"},{"lineNumber":27,"author":{"gitId":"jylow"},"content":"                            \u003cInsets left\u003d\"5.0\" /\u003e","lastModifiedDate":"2023-10-24"},{"lineNumber":28,"author":{"gitId":"jylow"},"content":"                        \u003c/HBox.margin\u003e","lastModifiedDate":"2023-10-24"},{"lineNumber":29,"author":{"gitId":"jylow"},"content":"                    \u003c/Button\u003e","lastModifiedDate":"2023-10-24"},{"lineNumber":30,"author":{"gitId":"jylow"},"content":"                    \u003cButton fx:id\u003d\"cancelButton\" mnemonicParsing\u003d\"false\" onAction\u003d\"#cancel\" text\u003d\"Cancel\"\u003e","lastModifiedDate":"2023-10-24"},{"lineNumber":31,"author":{"gitId":"jylow"},"content":"                        \u003cHBox.margin\u003e","lastModifiedDate":"2023-10-24"},{"lineNumber":32,"author":{"gitId":"jylow"},"content":"                            \u003cInsets left\u003d\"5.0\" /\u003e","lastModifiedDate":"2023-10-24"},{"lineNumber":33,"author":{"gitId":"jylow"},"content":"                        \u003c/HBox.margin\u003e","lastModifiedDate":"2023-10-24"},{"lineNumber":34,"author":{"gitId":"jylow"},"content":"                    \u003c/Button\u003e","lastModifiedDate":"2023-10-24"},{"lineNumber":35,"author":{"gitId":"jylow"},"content":"                \u003c/children\u003e","lastModifiedDate":"2023-10-24"},{"lineNumber":36,"author":{"gitId":"jylow"},"content":"                \u003copaqueInsets\u003e","lastModifiedDate":"2023-10-24"},{"lineNumber":37,"author":{"gitId":"jylow"},"content":"                    \u003cInsets bottom\u003d\"10.0\" left\u003d\"5.0\" right\u003d\"10.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2023-10-24"},{"lineNumber":38,"author":{"gitId":"jylow"},"content":"                \u003c/opaqueInsets\u003e","lastModifiedDate":"2023-10-24"},{"lineNumber":39,"author":{"gitId":"jylow"},"content":"                \u003cpadding\u003e","lastModifiedDate":"2023-10-24"},{"lineNumber":40,"author":{"gitId":"jylow"},"content":"                    \u003cInsets bottom\u003d\"10.0\" left\u003d\"5.0\" right\u003d\"10.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2023-10-24"},{"lineNumber":41,"author":{"gitId":"jylow"},"content":"                \u003c/padding\u003e","lastModifiedDate":"2023-10-24"},{"lineNumber":42,"author":{"gitId":"jylow"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2023-10-24"},{"lineNumber":43,"author":{"gitId":"jylow"},"content":"        \u003c/Scene\u003e","lastModifiedDate":"2023-10-24"},{"lineNumber":44,"author":{"gitId":"jylow"},"content":"    \u003c/scene\u003e","lastModifiedDate":"2023-10-24"},{"lineNumber":45,"author":{"gitId":"jylow"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-10-24"}],"authorContributionMap":{"jylow":45}},{"path":"src/main/resources/view/PersonListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":10,"author":{"gitId":"nikele2001"},"content":"\u003c?import javafx.scene.layout.RowConstraints?\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":13,"author":{"gitId":"nikele2001"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/17.0.2-ea\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-10-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"sopa301"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"500\" /\u003e","lastModifiedDate":"2023-10-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":19,"author":{"gitId":"-"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"nikele2001"},"content":"        \u003cInsets bottom\u003d\"5\" left\u003d\"15\" right\u003d\"5\" top\u003d\"5\" /\u003e","lastModifiedDate":"2023-10-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"nikele2001"},"content":"      \u003cHBox alignment\u003d\"CENTER_LEFT\" spacing\u003d\"5\"\u003e","lastModifiedDate":"2023-10-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":29,"author":{"gitId":"sopa301"},"content":"        \u003cLabel fx:id\u003d\"name\" styleClass\u003d\"cell_big_label\" text\u003d\"\\$first\" wrapText\u003d\"true\" maxWidth\u003d\"500\"/\u003e","lastModifiedDate":"2023-11-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2016-09-03"},{"lineNumber":31,"author":{"gitId":"nikele2001"},"content":"      \u003cFlowPane fx:id\u003d\"financialPlans\" /\u003e","lastModifiedDate":"2023-10-16"},{"lineNumber":32,"author":{"gitId":"sopa301"},"content":"      \u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" wrapText\u003d\"true\" maxWidth\u003d\"500\"/\u003e","lastModifiedDate":"2023-11-12"},{"lineNumber":33,"author":{"gitId":"sopa301"},"content":"      \u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" wrapText\u003d\"true\" maxWidth\u003d\"500\"/\u003e","lastModifiedDate":"2023-11-12"},{"lineNumber":34,"author":{"gitId":"sopa301"},"content":"      \u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" wrapText\u003d\"true\" maxWidth\u003d\"500\"/\u003e","lastModifiedDate":"2023-11-12"},{"lineNumber":35,"author":{"gitId":"sopa301"},"content":"      \u003cLabel fx:id\u003d\"nextOfKinName\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$nextOfKinName\" wrapText\u003d\"true\" maxWidth\u003d\"500\"/\u003e","lastModifiedDate":"2023-11-12"},{"lineNumber":36,"author":{"gitId":"sopa301"},"content":"      \u003cLabel fx:id\u003d\"nextOfKinPhone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$nextOfKinPhone\" wrapText\u003d\"true\"","lastModifiedDate":"2023-11-12"},{"lineNumber":37,"author":{"gitId":"sopa301"},"content":"             maxWidth\u003d\"500\"/\u003e","lastModifiedDate":"2023-11-12"},{"lineNumber":38,"author":{"gitId":"sopa301"},"content":"      \u003cLabel fx:id\u003d\"appointment\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$appointment\" wrapText\u003d\"true\" maxWidth\u003d\"500\"/\u003e","lastModifiedDate":"2023-11-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"      \u003cFlowPane fx:id\u003d\"tags\" /\u003e","lastModifiedDate":"2023-10-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"nikele2001"},"content":"      \u003crowConstraints\u003e","lastModifiedDate":"2023-10-16"},{"lineNumber":42,"author":{"gitId":"nikele2001"},"content":"         \u003cRowConstraints /\u003e","lastModifiedDate":"2023-10-16"},{"lineNumber":43,"author":{"gitId":"nikele2001"},"content":"      \u003c/rowConstraints\u003e","lastModifiedDate":"2023-10-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"sopa301"},"content":"   \u003cFlowPane prefHeight\u003d\"100.0\" prefWidth\u003d\"10.0\" /\u003e","lastModifiedDate":"2023-10-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"nikele2001":8,"sopa301":10,"-":28}},{"path":"src/test/java/seedu/address/commons/util/StringUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class StringUtilTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    //---------------- Tests for isNonZeroUnsignedInteger --------------------------------------","lastModifiedDate":"2019-02-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void isNonZeroUnsignedInteger() {","lastModifiedDate":"2019-02-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        // EP: empty strings","lastModifiedDate":"2016-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"\")); // Boundary value","lastModifiedDate":"2017-06-02"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"  \"));","lastModifiedDate":"2017-06-02"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // EP: not a number","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"a\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"aaa\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // EP: zero","lastModifiedDate":"2016-10-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"0\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // EP: zero as prefix","lastModifiedDate":"2017-06-02"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"01\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // EP: signed numbers","lastModifiedDate":"2016-10-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"-1\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"+1\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // EP: numbers with white space","lastModifiedDate":"2016-10-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\" 10 \")); // Leading/trailing spaces","lastModifiedDate":"2017-06-02"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"1 0\")); // Spaces in the middle","lastModifiedDate":"2017-06-02"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // EP: number larger than Integer.MAX_VALUE","lastModifiedDate":"2017-06-02"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2017-06-02"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // EP: valid numbers, should return true","lastModifiedDate":"2016-10-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"1\")); // Boundary value","lastModifiedDate":"2017-06-02"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"10\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    //---------------- Tests for containsWordIgnoreCase --------------------------------------","lastModifiedDate":"2016-10-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Invalid equivalence partitions for word: null, empty, multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Invalid equivalence partitions for sentence: null","lastModifiedDate":"2016-10-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * The four test cases below test one invalid input at a time.","lastModifiedDate":"2016-10-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_nullWord_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", null));","lastModifiedDate":"2019-03-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_emptyWord_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, \"Word parameter cannot be empty\", ()","lastModifiedDate":"2019-03-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", \"  \"));","lastModifiedDate":"2019-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_multipleWords_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, \"Word parameter should be a single word\", ()","lastModifiedDate":"2019-03-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", \"aaa BBB\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_nullSentence_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.containsWordIgnoreCase(null, \"abc\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Valid equivalence partitions for word:","lastModifiedDate":"2016-10-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     *   - any word","lastModifiedDate":"2016-10-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     *   - word containing symbols/numbers","lastModifiedDate":"2016-10-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     *   - word with leading/trailing spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Valid equivalence partitions for sentence:","lastModifiedDate":"2016-10-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     *   - empty string","lastModifiedDate":"2016-10-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     *   - one word","lastModifiedDate":"2016-10-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     *   - multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     *   - sentence with extra spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Possible scenarios returning true:","lastModifiedDate":"2016-10-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     *   - matches first word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     *   - last word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     *   - middle word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     *   - matches multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Possible scenarios returning false:","lastModifiedDate":"2016-10-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     *   - query word matches part of a sentence word","lastModifiedDate":"2016-10-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     *   - sentence word matches part of the query word","lastModifiedDate":"2016-10-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * The test method below tries to verify all above with a reasonably low number of test cases.","lastModifiedDate":"2016-10-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_validInputs_correctResult() {","lastModifiedDate":"2016-10-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // Empty sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"\", \"abc\")); // Boundary case","lastModifiedDate":"2016-10-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"    \", \"123\"));","lastModifiedDate":"2016-10-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // Matches a partial word only","lastModifiedDate":"2016-10-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"bb\")); // Sentence word bigger than query word","lastModifiedDate":"2016-10-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"bbbb\")); // Query word bigger than sentence word","lastModifiedDate":"2016-10-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        // Matches word in the sentence, different upper/lower case letters","lastModifiedDate":"2016-10-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bBb ccc\", \"Bbb\")); // First word (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bBb ccc@1\", \"CCc@1\")); // Last word (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"  AAA   bBb   ccc  \", \"aaa\")); // Sentence has extra spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"Aaa\", \"aaa\")); // Only one word in sentence (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"  ccc  \")); // Leading/trailing spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        // Matches multiple words in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"AAA bBb ccc  bbb\", \"bbB\"));","lastModifiedDate":"2016-10-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":126,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":127,"author":{"gitId":"sopa301"},"content":"    //---------------- Tests for containsWordsIgnoreCase -------------------------","lastModifiedDate":"2023-10-25"},{"lineNumber":128,"author":{"gitId":"sopa301"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":129,"author":{"gitId":"sopa301"},"content":"    public void containsWordsIgnoreCase_nullWord_throwsNullPointerException() {","lastModifiedDate":"2023-10-25"},{"lineNumber":130,"author":{"gitId":"sopa301"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.containsWordsIgnoreCase(\"typical sentence\", null));","lastModifiedDate":"2023-10-25"},{"lineNumber":131,"author":{"gitId":"sopa301"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":132,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":133,"author":{"gitId":"sopa301"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":134,"author":{"gitId":"sopa301"},"content":"    public void containsWordsIgnoreCase_emptyWord_throwsIllegalArgumentException() {","lastModifiedDate":"2023-10-25"},{"lineNumber":135,"author":{"gitId":"sopa301"},"content":"        assertThrows(IllegalArgumentException.class, \"Word parameter cannot be empty\", ()","lastModifiedDate":"2023-10-25"},{"lineNumber":136,"author":{"gitId":"sopa301"},"content":"                -\u003e StringUtil.containsWordsIgnoreCase(\"typical sentence\", \"  \"));","lastModifiedDate":"2023-10-25"},{"lineNumber":137,"author":{"gitId":"sopa301"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":138,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":139,"author":{"gitId":"sopa301"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":140,"author":{"gitId":"sopa301"},"content":"    public void containsWordsIgnoreCase_nullSentence_throwsNullPointerException() {","lastModifiedDate":"2023-10-25"},{"lineNumber":141,"author":{"gitId":"sopa301"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.containsWordsIgnoreCase(null, \"abc\"));","lastModifiedDate":"2023-10-25"},{"lineNumber":142,"author":{"gitId":"sopa301"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":143,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":144,"author":{"gitId":"sopa301"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":145,"author":{"gitId":"sopa301"},"content":"    public void containsWordsIgnoreCase_validInputs_correctResult() {","lastModifiedDate":"2023-10-25"},{"lineNumber":146,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":147,"author":{"gitId":"sopa301"},"content":"        // Empty sentence","lastModifiedDate":"2023-10-25"},{"lineNumber":148,"author":{"gitId":"sopa301"},"content":"        assertFalse(StringUtil.containsWordsIgnoreCase(\"\", \"abc\")); // Boundary case","lastModifiedDate":"2023-10-25"},{"lineNumber":149,"author":{"gitId":"sopa301"},"content":"        assertFalse(StringUtil.containsWordsIgnoreCase(\"    \", \"123\"));","lastModifiedDate":"2023-10-25"},{"lineNumber":150,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":151,"author":{"gitId":"sopa301"},"content":"        // Matches a partial word only","lastModifiedDate":"2023-10-25"},{"lineNumber":152,"author":{"gitId":"sopa301"},"content":"        assertFalse(StringUtil.containsWordsIgnoreCase(\"aaa bbb ccc\", \"bbb c\")); // Sentence word bigger than query word","lastModifiedDate":"2023-10-25"},{"lineNumber":153,"author":{"gitId":"sopa301"},"content":"        assertFalse(StringUtil.containsWordsIgnoreCase(\"aaa bbb ccc\", \"bbbb\")); // Query word bigger than sentence word","lastModifiedDate":"2023-10-25"},{"lineNumber":154,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":155,"author":{"gitId":"sopa301"},"content":"        // Matches word in the sentence, different upper/lower case letters","lastModifiedDate":"2023-10-25"},{"lineNumber":156,"author":{"gitId":"sopa301"},"content":"        assertTrue(StringUtil.containsWordsIgnoreCase(\"aaa bBb ccc\", \"Bbb\")); // First word (boundary case)","lastModifiedDate":"2023-10-25"},{"lineNumber":157,"author":{"gitId":"sopa301"},"content":"        assertTrue(StringUtil.containsWordsIgnoreCase(\"aaa bBb ccc@1\", \"CCc@1\")); // Last word (boundary case)","lastModifiedDate":"2023-10-25"},{"lineNumber":158,"author":{"gitId":"sopa301"},"content":"        assertTrue(StringUtil.containsWordsIgnoreCase(\"  AAA   bBb   ccc  \", \"aaa bbb\")); // Sentence has extra spaces","lastModifiedDate":"2023-10-25"},{"lineNumber":159,"author":{"gitId":"sopa301"},"content":"        assertTrue(StringUtil.containsWordsIgnoreCase(\"Aaa\", \"aaa\")); // Only one word in sentence (boundary case)","lastModifiedDate":"2023-10-25"},{"lineNumber":160,"author":{"gitId":"sopa301"},"content":"        assertTrue(StringUtil.containsWordsIgnoreCase(\"aaa bbb ccc\", \"  bbb ccc  \")); // Leading/trailing spaces","lastModifiedDate":"2023-10-25"},{"lineNumber":161,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":162,"author":{"gitId":"sopa301"},"content":"        // Matches multiple words in sentence","lastModifiedDate":"2023-10-25"},{"lineNumber":163,"author":{"gitId":"sopa301"},"content":"        assertTrue(StringUtil.containsWordsIgnoreCase(\"AAA bBb ccc  bbb ccc\", \"bbB ccc\"));","lastModifiedDate":"2023-10-25"},{"lineNumber":164,"author":{"gitId":"sopa301"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":165,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    //---------------- Tests for getDetails --------------------------------------","lastModifiedDate":"2016-10-13"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":169,"author":{"gitId":"-"},"content":"     * Equivalence Partitions: null, valid throwable object","lastModifiedDate":"2016-10-13"},{"lineNumber":170,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    public void getDetails_exceptionGiven() {","lastModifiedDate":"2016-09-30"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.getDetails(new FileNotFoundException(\"file not found\"))","lastModifiedDate":"2019-03-14"},{"lineNumber":175,"author":{"gitId":"-"},"content":"            .contains(\"java.io.FileNotFoundException: file not found\"));","lastModifiedDate":"2019-03-14"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    public void getDetails_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.getDetails(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"sopa301":40,"-":143}},{"path":"src/test/java/seedu/address/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX;","lastModifiedDate":"2023-07-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-07-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":8,"author":{"gitId":"nikele2001"},"content":"import static seedu.address.logic.commands.CommandTestUtil.FINANCIAL_PLAN_DESC_1;","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":10,"author":{"gitId":"sopa301"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NEXT_OF_KIN_NAME_DESC_AMY;","lastModifiedDate":"2023-09-29"},{"lineNumber":11,"author":{"gitId":"sopa301"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NEXT_OF_KIN_PHONE_DESC_AMY;","lastModifiedDate":"2023-09-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.nio.file.AccessDeniedException;","lastModifiedDate":"2023-06-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":24,"author":{"gitId":"sopa301"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"sopa301"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2023-10-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2017-01-18"},{"lineNumber":28,"author":{"gitId":"sopa301"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2023-10-18"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy IO exception\");","lastModifiedDate":"2023-06-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_AD_EXCEPTION \u003d new AccessDeniedException(\"dummy access denied exception\");","lastModifiedDate":"2023-06-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-20"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"                new JsonAddressBookStorage(temporaryFolder.resolve(\"addressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2018-12-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":62,"author":{"gitId":"sopa301"},"content":"    public void execute_invalidCommandStringFormat_throwsParseException() {","lastModifiedDate":"2023-10-18"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-06-20"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-14"},{"lineNumber":68,"author":{"gitId":"sopa301"},"content":"    public void execute_commandStringExecutionError_throwsCommandException() {","lastModifiedDate":"2023-10-18"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        String deleteCommand \u003d \"delete 9\";","lastModifiedDate":"2017-06-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertCommandException(deleteCommand, MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2017-06-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19"},{"lineNumber":74,"author":{"gitId":"sopa301"},"content":"    public void execute_validCommandString_success() throws Exception {","lastModifiedDate":"2023-10-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        String listCommand \u003d ListCommand.COMMAND_WORD;","lastModifiedDate":"2017-06-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertCommandSuccess(listCommand, ListCommand.MESSAGE_SUCCESS, model);","lastModifiedDate":"2017-06-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":78,"author":{"gitId":"sopa301"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":79,"author":{"gitId":"sopa301"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2023-10-18"},{"lineNumber":80,"author":{"gitId":"sopa301"},"content":"        Command deleteCommand \u003d new DeleteCommand(Index.fromOneBased(9));","lastModifiedDate":"2023-10-18"},{"lineNumber":81,"author":{"gitId":"sopa301"},"content":"        assertCommandException(deleteCommand, MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-18"},{"lineNumber":82,"author":{"gitId":"sopa301"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":84,"author":{"gitId":"sopa301"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":85,"author":{"gitId":"sopa301"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2023-10-18"},{"lineNumber":86,"author":{"gitId":"sopa301"},"content":"        Command listCommand \u003d new ListCommand();","lastModifiedDate":"2023-10-18"},{"lineNumber":87,"author":{"gitId":"sopa301"},"content":"        assertCommandSuccess(listCommand, ListCommand.MESSAGE_SUCCESS, model);","lastModifiedDate":"2023-10-18"},{"lineNumber":88,"author":{"gitId":"sopa301"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2019-04-25"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertCommandFailureForExceptionFromStorage(DUMMY_IO_EXCEPTION, String.format(","lastModifiedDate":"2023-06-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"                LogicManager.FILE_OPS_ERROR_FORMAT, DUMMY_IO_EXCEPTION.getMessage()));","lastModifiedDate":"2023-06-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-06-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-06-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsAdException_throwsCommandException() {","lastModifiedDate":"2023-06-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertCommandFailureForExceptionFromStorage(DUMMY_AD_EXCEPTION, String.format(","lastModifiedDate":"2023-06-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"                LogicManager.FILE_OPS_PERMISSION_ERROR_FORMAT, DUMMY_AD_EXCEPTION.getMessage()));","lastModifiedDate":"2023-06-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":117,"author":{"gitId":"nikele2001"},"content":"        assertEquals(logic.getAppointmentList(), expectedModel.getAppointmentList());","lastModifiedDate":"2023-10-24"},{"lineNumber":118,"author":{"gitId":"nikele2001"},"content":"        assertEquals(model.getAppointmentList(), expectedModel.getAppointmentList());","lastModifiedDate":"2023-10-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":121,"author":{"gitId":"sopa301"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":122,"author":{"gitId":"sopa301"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2023-10-18"},{"lineNumber":123,"author":{"gitId":"sopa301"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":124,"author":{"gitId":"sopa301"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":125,"author":{"gitId":"sopa301"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":126,"author":{"gitId":"sopa301"},"content":"     * @see #assertCommandFailure(Command, Class, String, Model)","lastModifiedDate":"2023-10-18"},{"lineNumber":127,"author":{"gitId":"sopa301"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":128,"author":{"gitId":"sopa301"},"content":"    private void assertCommandSuccess(Command inputCommand, String expectedMessage,","lastModifiedDate":"2023-10-18"},{"lineNumber":129,"author":{"gitId":"sopa301"},"content":"                                      Model expectedModel) throws CommandException {","lastModifiedDate":"2023-10-18"},{"lineNumber":130,"author":{"gitId":"sopa301"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2023-10-18"},{"lineNumber":131,"author":{"gitId":"nikele2001"},"content":"        assertEquals(logic.getAppointmentList(), expectedModel.getAppointmentList());","lastModifiedDate":"2023-10-24"},{"lineNumber":132,"author":{"gitId":"nikele2001"},"content":"        assertEquals(model.getAppointmentList(), expectedModel.getAppointmentList());","lastModifiedDate":"2023-10-24"},{"lineNumber":133,"author":{"gitId":"sopa301"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2023-10-18"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2023-10-18"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":151,"author":{"gitId":"sopa301"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":152,"author":{"gitId":"sopa301"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2023-10-18"},{"lineNumber":153,"author":{"gitId":"sopa301"},"content":"     * @see #assertCommandFailure(Command, Class, String, Model)","lastModifiedDate":"2023-10-18"},{"lineNumber":154,"author":{"gitId":"sopa301"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":155,"author":{"gitId":"sopa301"},"content":"    private void assertCommandException(Command inputCommand, String expectedMessage) {","lastModifiedDate":"2023-10-18"},{"lineNumber":156,"author":{"gitId":"sopa301"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2023-10-18"},{"lineNumber":157,"author":{"gitId":"sopa301"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":159,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":160,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":161,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":162,"author":{"gitId":"sopa301"},"content":"    private void assertCommandFailure(Command inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2023-10-18"},{"lineNumber":163,"author":{"gitId":"-"},"content":"            String expectedMessage) {","lastModifiedDate":"2023-10-18"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-18"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-18"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":167,"author":{"gitId":"sopa301"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":168,"author":{"gitId":"sopa301"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2023-10-18"},{"lineNumber":169,"author":{"gitId":"sopa301"},"content":"     * @see #assertCommandFailure(Command, Class, String, Model)","lastModifiedDate":"2023-10-18"},{"lineNumber":170,"author":{"gitId":"sopa301"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":172,"author":{"gitId":"-"},"content":"                                      String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-05-31"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":177,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":178,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":179,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":180,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":181,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":182,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":184,"author":{"gitId":"-"},"content":"            String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2019-03-14"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":188,"author":{"gitId":"sopa301"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":189,"author":{"gitId":"sopa301"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2023-10-18"},{"lineNumber":190,"author":{"gitId":"sopa301"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":191,"author":{"gitId":"sopa301"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":192,"author":{"gitId":"sopa301"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":193,"author":{"gitId":"sopa301"},"content":"     * @see #assertCommandSuccess(Command, String, Model)","lastModifiedDate":"2023-10-18"},{"lineNumber":194,"author":{"gitId":"sopa301"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":195,"author":{"gitId":"sopa301"},"content":"    private void assertCommandFailure(Command command, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2023-10-18"},{"lineNumber":196,"author":{"gitId":"sopa301"},"content":"                                      String expectedMessage, Model expectedModel) {","lastModifiedDate":"2023-10-18"},{"lineNumber":197,"author":{"gitId":"sopa301"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(command));","lastModifiedDate":"2023-10-18"},{"lineNumber":198,"author":{"gitId":"sopa301"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2023-10-18"},{"lineNumber":199,"author":{"gitId":"sopa301"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":201,"author":{"gitId":"-"},"content":"     * Tests the Logic component\u0027s handling of an {@code IOException} thrown by the Storage component.","lastModifiedDate":"2023-06-13"},{"lineNumber":202,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2023-06-13"},{"lineNumber":203,"author":{"gitId":"-"},"content":"     * @param e the exception to be thrown by the Storage component","lastModifiedDate":"2023-06-13"},{"lineNumber":204,"author":{"gitId":"-"},"content":"     * @param expectedMessage the message expected inside exception thrown by the Logic component","lastModifiedDate":"2023-06-13"},{"lineNumber":205,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    private void assertCommandFailureForExceptionFromStorage(IOException e, String expectedMessage) {","lastModifiedDate":"2023-06-13"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        Path prefPath \u003d temporaryFolder.resolve(\"ExceptionUserPrefs.json\");","lastModifiedDate":"2023-06-13"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        // Inject LogicManager with an AddressBookStorage that throws the IOException e when saving","lastModifiedDate":"2023-06-13"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(prefPath) {","lastModifiedDate":"2023-06-13"},{"lineNumber":211,"author":{"gitId":"-"},"content":"            @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":212,"author":{"gitId":"-"},"content":"            public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath)","lastModifiedDate":"2023-06-13"},{"lineNumber":213,"author":{"gitId":"-"},"content":"                    throws IOException {","lastModifiedDate":"2023-06-13"},{"lineNumber":214,"author":{"gitId":"-"},"content":"                throw e;","lastModifiedDate":"2023-06-13"},{"lineNumber":215,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":216,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2023-06-13"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":218,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2023-06-13"},{"lineNumber":219,"author":{"gitId":"-"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ExceptionUserPrefs.json\"));","lastModifiedDate":"2023-06-13"},{"lineNumber":220,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2023-06-13"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":222,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2023-06-13"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":224,"author":{"gitId":"-"},"content":"        // Triggers the saveAddressBook method by executing an add command","lastModifiedDate":"2023-06-13"},{"lineNumber":225,"author":{"gitId":"nikele2001"},"content":"        String addCommand \u003d AddCommand.COMMAND_WORD + NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2023-10-17"},{"lineNumber":226,"author":{"gitId":"nikele2001"},"content":"                + ADDRESS_DESC_AMY + FINANCIAL_PLAN_DESC_1 + NEXT_OF_KIN_NAME_DESC_AMY + NEXT_OF_KIN_PHONE_DESC_AMY;","lastModifiedDate":"2023-10-17"},{"lineNumber":227,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withTags().build();","lastModifiedDate":"2023-06-13"},{"lineNumber":228,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2023-06-13"},{"lineNumber":229,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(expectedPerson);","lastModifiedDate":"2023-06-13"},{"lineNumber":230,"author":{"gitId":"-"},"content":"        assertCommandFailure(addCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2023-06-13"},{"lineNumber":231,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":232,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"nikele2001":7,"sopa301":53,"-":172}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2019-02-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"Kb-Tay"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-10-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-12"},{"lineNumber":14,"author":{"gitId":"jylow"},"content":"import java.util.Comparator;","lastModifiedDate":"2023-10-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-05-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-05-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"nikele2001"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2023-10-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-12"},{"lineNumber":29,"author":{"gitId":"AlyssaPng"},"content":"import seedu.address.model.person.gatheremail.GatherEmailPrompt;","lastModifiedDate":"2023-10-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"public class AddCommandTest {","lastModifiedDate":"2017-05-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void constructor_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddCommand(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void execute_personAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2017-05-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        ModelStubAcceptingPersonAdded modelStub \u003d new ModelStubAcceptingPersonAdded();","lastModifiedDate":"2017-05-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new AddCommand(validPerson).execute(modelStub);","lastModifiedDate":"2019-01-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertEquals(String.format(AddCommand.MESSAGE_SUCCESS, Messages.format(validPerson)),","lastModifiedDate":"2019-02-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                commandResult.getFeedbackToUser());","lastModifiedDate":"2019-02-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(validPerson), modelStub.personsAdded);","lastModifiedDate":"2017-05-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        AddCommand addCommand \u003d new AddCommand(validPerson);","lastModifiedDate":"2018-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        ModelStub modelStub \u003d new ModelStubWithPerson(validPerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, AddCommand.MESSAGE_DUPLICATE_PERSON, () -\u003e addCommand.execute(modelStub));","lastModifiedDate":"2019-05-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        Person alice \u003d new PersonBuilder().withName(\"Alice\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        Person bob \u003d new PersonBuilder().withName(\"Bob\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommand \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        AddCommand addBobCommand \u003d new AddCommand(bob);","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommandCopy \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2017-06-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2017-06-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        AddCommand addCommand \u003d new AddCommand(ALICE);","lastModifiedDate":"2019-02-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        String expected \u003d AddCommand.class.getCanonicalName() + \"{toAdd\u003d\" + ALICE + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertEquals(expected, addCommand.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2017-05-12"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2017-05-12"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":117,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":127,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2018-11-27"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-12"},{"lineNumber":137,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":142,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-06"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        public void deletePerson(Person target) {","lastModifiedDate":"2018-08-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":157,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":160,"author":{"gitId":"nikele2001"},"content":"        @Override","lastModifiedDate":"2023-10-23"},{"lineNumber":161,"author":{"gitId":"nikele2001"},"content":"        public ObservableList\u003cAppointment\u003e getAppointmentList() {","lastModifiedDate":"2023-10-23"},{"lineNumber":162,"author":{"gitId":"nikele2001"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-23"},{"lineNumber":163,"author":{"gitId":"nikele2001"},"content":"        }","lastModifiedDate":"2023-10-23"},{"lineNumber":164,"author":{"gitId":"nikele2001"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":167,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":169,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":170,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":171,"author":{"gitId":"jylow"},"content":"        @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":172,"author":{"gitId":"jylow"},"content":"        public void sortFilteredPersonList(Comparator\u003cPerson\u003e comparator) {","lastModifiedDate":"2023-10-17"},{"lineNumber":173,"author":{"gitId":"jylow"},"content":"            throw new AssertionError(\"This method should not be called\");","lastModifiedDate":"2023-10-17"},{"lineNumber":174,"author":{"gitId":"jylow"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":175,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":176,"author":{"gitId":"AlyssaPng"},"content":"        @Override","lastModifiedDate":"2023-10-18"},{"lineNumber":177,"author":{"gitId":"AlyssaPng"},"content":"        public String gatherEmails(GatherEmailPrompt prompt) {","lastModifiedDate":"2023-10-23"},{"lineNumber":178,"author":{"gitId":"AlyssaPng"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-18"},{"lineNumber":179,"author":{"gitId":"AlyssaPng"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":180,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":181,"author":{"gitId":"Kb-Tay"},"content":"        @Override","lastModifiedDate":"2023-10-25"},{"lineNumber":182,"author":{"gitId":"Kb-Tay"},"content":"        public void clearAppointments(LocalDate date) {","lastModifiedDate":"2023-11-10"},{"lineNumber":183,"author":{"gitId":"Kb-Tay"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-11-10"},{"lineNumber":184,"author":{"gitId":"Kb-Tay"},"content":"        }","lastModifiedDate":"2023-11-10"},{"lineNumber":185,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":186,"author":{"gitId":"Kb-Tay"},"content":"        @Override","lastModifiedDate":"2023-11-10"},{"lineNumber":187,"author":{"gitId":"Kb-Tay"},"content":"        public boolean hasAppointmentWithDate(LocalDate date) {","lastModifiedDate":"2023-11-10"},{"lineNumber":188,"author":{"gitId":"Kb-Tay"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-25"},{"lineNumber":189,"author":{"gitId":"Kb-Tay"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":193,"author":{"gitId":"-"},"content":"     * A Model stub that contains a single person.","lastModifiedDate":"2018-08-07"},{"lineNumber":194,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    private class ModelStubWithPerson extends ModelStub {","lastModifiedDate":"2018-08-07"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        private final Person person;","lastModifiedDate":"2018-08-07"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        ModelStubWithPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":199,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":200,"author":{"gitId":"-"},"content":"            this.person \u003d person;","lastModifiedDate":"2018-08-07"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":205,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":206,"author":{"gitId":"-"},"content":"            return this.person.isSamePerson(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":208,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":211,"author":{"gitId":"-"},"content":"     * A Model stub that always accept the person being added.","lastModifiedDate":"2017-05-12"},{"lineNumber":212,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    private class ModelStubAcceptingPersonAdded extends ModelStub {","lastModifiedDate":"2017-05-12"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        final ArrayList\u003cPerson\u003e personsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2017-05-12"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":216,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07"},{"lineNumber":217,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":218,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":219,"author":{"gitId":"-"},"content":"            return personsAdded.stream().anyMatch(person::isSamePerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":220,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":222,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":223,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-08"},{"lineNumber":224,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":225,"author":{"gitId":"-"},"content":"            personsAdded.add(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":226,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":228,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":229,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-04"},{"lineNumber":230,"author":{"gitId":"-"},"content":"            return new AddressBook();","lastModifiedDate":"2017-05-04"},{"lineNumber":231,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":232,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"Kb-Tay":11,"nikele2001":6,"AlyssaPng":5,"jylow":8,"-":204}},{"path":"src/test/java/seedu/address/logic/commands/ClearCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class ClearCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public void execute_emptyAddressBook_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":19,"author":{"gitId":"sopa301"},"content":"        assertCommandSuccess(new ClearCommand(), model,","lastModifiedDate":"2023-10-18"},{"lineNumber":20,"author":{"gitId":"sopa301"},"content":"                new CommandResult(ClearCommand.CONFIRM_CLEAR_MESSAGE, false, false, true),","lastModifiedDate":"2023-10-18"},{"lineNumber":21,"author":{"gitId":"sopa301"},"content":"                expectedModel);","lastModifiedDate":"2023-10-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void execute_nonEmptyAddressBook_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2018-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":29,"author":{"gitId":"sopa301"},"content":"        assertCommandSuccess(new ClearCommand(), model,","lastModifiedDate":"2023-10-18"},{"lineNumber":30,"author":{"gitId":"sopa301"},"content":"                new CommandResult(ClearCommand.CONFIRM_CLEAR_MESSAGE, false, false, true),","lastModifiedDate":"2023-10-18"},{"lineNumber":31,"author":{"gitId":"sopa301"},"content":"                expectedModel);","lastModifiedDate":"2023-10-18"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"sopa301":6,"-":28}},{"path":"src/test/java/seedu/address/logic/commands/CommandResultTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2018-12-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class CommandResultTest {","lastModifiedDate":"2018-12-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\")));","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\", false, false)));","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(commandResult));","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(null));","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(0.5f));","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"different\")));","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // different showHelp value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", true, false)));","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", false, true)));","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"sopa301"},"content":"        // different showClear value -\u003e returns false","lastModifiedDate":"2023-10-18"},{"lineNumber":37,"author":{"gitId":"sopa301"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", false, false, true)));","lastModifiedDate":"2023-10-18"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void hashcode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // same values -\u003e returns same hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertEquals(commandResult.hashCode(), new CommandResult(\"feedback\").hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"different\").hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // different showHelp value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", true, false).hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", false, true).hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"sopa301"},"content":"        // different showClear value -\u003e returns different hashcode","lastModifiedDate":"2023-10-18"},{"lineNumber":56,"author":{"gitId":"sopa301"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\",","lastModifiedDate":"2023-10-18"},{"lineNumber":57,"author":{"gitId":"sopa301"},"content":"                false, false, true).hashCode());","lastModifiedDate":"2023-10-18"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2019-02-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        String expected \u003d CommandResult.class.getCanonicalName() + \"{feedbackToUser\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                + commandResult.getFeedbackToUser() + \", showHelp\u003d\" + commandResult.isShowHelp()","lastModifiedDate":"2019-02-23"},{"lineNumber":65,"author":{"gitId":"sopa301"},"content":"                + \", exit\u003d\" + commandResult.isExit() + \", showClear\u003d\" + commandResult.isShowClear() + \"}\";","lastModifiedDate":"2023-10-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertEquals(expected, commandResult.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-12-09"}],"authorContributionMap":{"sopa301":6,"-":62}},{"path":"src/test/java/seedu/address/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"Kb-Tay"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_APPOINTMENT;","lastModifiedDate":"2023-10-20"},{"lineNumber":7,"author":{"gitId":"Kb-Tay"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_APPOINTMENT_DATE;","lastModifiedDate":"2023-10-20"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"nikele2001"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_FINANCIAL_PLAN;","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"nikele2001"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NEXT_OF_KIN_NAME;","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"nikele2001"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NEXT_OF_KIN_PHONE;","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-10-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-10-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-07-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2018-01-31"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-06-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-06-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":26,"author":{"gitId":"sopa301"},"content":"import seedu.address.model.person.predicates.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-10-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-07-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2017-07-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2017-07-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_AMY \u003d \"11111111\";","lastModifiedDate":"2017-07-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_BOB \u003d \"22222222\";","lastModifiedDate":"2017-07-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_AMY \u003d \"amy@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_BOB \u003d \"bob@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_AMY \u003d \"Block 312, Amy Street 1\";","lastModifiedDate":"2017-07-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_BOB \u003d \"Block 123, Bobby Street 3\";","lastModifiedDate":"2017-07-05"},{"lineNumber":42,"author":{"gitId":"sopa301"},"content":"    public static final String VALID_NEXT_OF_KIN_NAME_AMY \u003d \"Amy Dad\";","lastModifiedDate":"2023-09-29"},{"lineNumber":43,"author":{"gitId":"sopa301"},"content":"    public static final String VALID_NEXT_OF_KIN_NAME_BOB \u003d \"Bob Dad\";","lastModifiedDate":"2023-09-29"},{"lineNumber":44,"author":{"gitId":"sopa301"},"content":"    public static final String VALID_NEXT_OF_KIN_PHONE_AMY \u003d \"33333333\";","lastModifiedDate":"2023-09-29"},{"lineNumber":45,"author":{"gitId":"sopa301"},"content":"    public static final String VALID_NEXT_OF_KIN_PHONE_BOB \u003d \"44444444\";","lastModifiedDate":"2023-09-29"},{"lineNumber":46,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_HUSBAND \u003d \"husband\";","lastModifiedDate":"2017-07-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_FRIEND \u003d \"friend\";","lastModifiedDate":"2017-07-05"},{"lineNumber":49,"author":{"gitId":"nikele2001"},"content":"    public static final String VALID_FINANCIAL_PLAN_1 \u003d \"financial plan 1\";","lastModifiedDate":"2023-10-16"},{"lineNumber":50,"author":{"gitId":"nikele2001"},"content":"    public static final String VALID_FINANCIAL_PLAN_2 \u003d \"financial plan 2\";","lastModifiedDate":"2023-10-16"},{"lineNumber":51,"author":{"gitId":"Kb-Tay"},"content":"    public static final String VALID_APPOINTMENT_NAME \u003d \"Review Insurance\";","lastModifiedDate":"2023-10-19"},{"lineNumber":52,"author":{"gitId":"Kb-Tay"},"content":"    public static final String VALID_APPOINTMENT_DATE \u003d \"01-01-2023 20:00\";","lastModifiedDate":"2023-10-19"},{"lineNumber":53,"author":{"gitId":"Kb-Tay"},"content":"    public static final String VALID_APPOINTMENT \u003d VALID_APPOINTMENT_NAME + \", \" + VALID_APPOINTMENT_DATE;","lastModifiedDate":"2023-10-19"},{"lineNumber":54,"author":{"gitId":"Kb-Tay"},"content":"    public static final String VALID_COMPLETE_DATE \u003d \"05-01-2023\";","lastModifiedDate":"2023-10-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_AMY \u003d \" \" + PREFIX_PHONE + VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_BOB \u003d \" \" + PREFIX_PHONE + VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_AMY \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_BOB \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_AMY \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_BOB \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":63,"author":{"gitId":"sopa301"},"content":"    public static final String NEXT_OF_KIN_NAME_DESC_AMY \u003d \" \" + PREFIX_NEXT_OF_KIN_NAME + VALID_NEXT_OF_KIN_NAME_AMY;","lastModifiedDate":"2023-09-29"},{"lineNumber":64,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":65,"author":{"gitId":"sopa301"},"content":"    public static final String NEXT_OF_KIN_NAME_DESC_BOB \u003d \" \" + PREFIX_NEXT_OF_KIN_NAME + VALID_NEXT_OF_KIN_NAME_BOB;","lastModifiedDate":"2023-09-29"},{"lineNumber":66,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":67,"author":{"gitId":"sopa301"},"content":"    public static final String NEXT_OF_KIN_PHONE_DESC_AMY \u003d \" \" + PREFIX_NEXT_OF_KIN_PHONE","lastModifiedDate":"2023-09-29"},{"lineNumber":68,"author":{"gitId":"sopa301"},"content":"            + VALID_NEXT_OF_KIN_PHONE_AMY;","lastModifiedDate":"2023-09-29"},{"lineNumber":69,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":70,"author":{"gitId":"sopa301"},"content":"    public static final String NEXT_OF_KIN_PHONE_DESC_BOB \u003d \" \" + PREFIX_NEXT_OF_KIN_PHONE","lastModifiedDate":"2023-09-29"},{"lineNumber":71,"author":{"gitId":"sopa301"},"content":"            + VALID_NEXT_OF_KIN_PHONE_BOB;","lastModifiedDate":"2023-09-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_FRIEND \u003d \" \" + PREFIX_TAG + VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_HUSBAND \u003d \" \" + PREFIX_TAG + VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":74,"author":{"gitId":"nikele2001"},"content":"    public static final String FINANCIAL_PLAN_DESC_1 \u003d \" \" + PREFIX_FINANCIAL_PLAN + VALID_FINANCIAL_PLAN_1;","lastModifiedDate":"2023-10-16"},{"lineNumber":75,"author":{"gitId":"nikele2001"},"content":"    public static final String FINANCIAL_PLAN_DESC_2 \u003d \" \" + PREFIX_FINANCIAL_PLAN + VALID_FINANCIAL_PLAN_2;","lastModifiedDate":"2023-10-16"},{"lineNumber":76,"author":{"gitId":"Kb-Tay"},"content":"    public static final String APPOINTMENT_NAME_DESC \u003d \" \" + PREFIX_APPOINTMENT + VALID_APPOINTMENT_NAME;","lastModifiedDate":"2023-10-20"},{"lineNumber":77,"author":{"gitId":"Kb-Tay"},"content":"    public static final String APPOINTMENT_DATE_DESC \u003d \" \" + PREFIX_APPOINTMENT_DATE + VALID_APPOINTMENT_DATE;","lastModifiedDate":"2023-10-20"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2017-07-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public static final String INVALID_PHONE_DESC \u003d \" \" + PREFIX_PHONE + \"911a\"; // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2017-07-05"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public static final String INVALID_EMAIL_DESC \u003d \" \" + PREFIX_EMAIL + \"bob!yahoo\"; // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-07-05"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public static final String INVALID_ADDRESS_DESC \u003d \" \" + PREFIX_ADDRESS; // empty string not allowed for addresses","lastModifiedDate":"2017-07-05"},{"lineNumber":82,"author":{"gitId":"sopa301"},"content":"    public static final String INVALID_NEXT_OF_KIN_NAME_DESC \u003d \" \" + PREFIX_NEXT_OF_KIN_NAME","lastModifiedDate":"2023-09-29"},{"lineNumber":83,"author":{"gitId":"sopa301"},"content":"            + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2023-09-29"},{"lineNumber":84,"author":{"gitId":"sopa301"},"content":"    public static final String INVALID_NEXT_OF_KIN_PHONE_DESC \u003d \" \" + PREFIX_NEXT_OF_KIN_PHONE","lastModifiedDate":"2023-09-29"},{"lineNumber":85,"author":{"gitId":"sopa301"},"content":"            + \"911a\"; // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2023-09-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public static final String INVALID_TAG_DESC \u003d \" \" + PREFIX_TAG + \"hubby*\"; // \u0027*\u0027 not allowed in tags","lastModifiedDate":"2017-07-05"},{"lineNumber":87,"author":{"gitId":"nikele2001"},"content":"    public static final String INVALID_FINANCIAL_PLAN_DESC \u003d \" \" + PREFIX_FINANCIAL_PLAN","lastModifiedDate":"2023-10-17"},{"lineNumber":88,"author":{"gitId":"nikele2001"},"content":"            + \"financial_plan\"; // \u0027_\u0027 not allowed in financial plan names","lastModifiedDate":"2023-10-17"},{"lineNumber":89,"author":{"gitId":"Kb-Tay"},"content":"    public static final String INVALID_APPOINTMENT_NAME_DESC \u003d \" \" + PREFIX_APPOINTMENT + \"Review *\u0026Insurance\";","lastModifiedDate":"2023-10-20"},{"lineNumber":90,"author":{"gitId":"Kb-Tay"},"content":"    public static final String INVALID_APPOINTMENT_TIME_FORMAT \u003d \" \" + PREFIX_APPOINTMENT_DATE + \"01-01-2023 12pm\";","lastModifiedDate":"2023-10-20"},{"lineNumber":91,"author":{"gitId":"Kb-Tay"},"content":"    public static final String INVALID_APPOINTMENT_DATE_FORMAT \u003d \" \" + PREFIX_APPOINTMENT_DATE + \"1 Jan 2023 18:00\";","lastModifiedDate":"2023-10-20"},{"lineNumber":92,"author":{"gitId":"Kb-Tay"},"content":"    public static final String INVALID_APPOINTMENT_DATE \u003d \" \" + PREFIX_APPOINTMENT_DATE + \"10-13-2023 00:00\";","lastModifiedDate":"2023-10-20"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        DESC_AMY \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":101,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":102,"author":{"gitId":"sopa301"},"content":"                .withNextOfKinName(VALID_NEXT_OF_KIN_NAME_AMY).withNextOfKinPhone(VALID_NEXT_OF_KIN_PHONE_AMY)","lastModifiedDate":"2023-09-29"},{"lineNumber":103,"author":{"gitId":"nikele2001"},"content":"                .withTags(VALID_TAG_FRIEND).withFinancialPlans(VALID_FINANCIAL_PLAN_1).build();","lastModifiedDate":"2023-10-16"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        DESC_BOB \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":106,"author":{"gitId":"sopa301"},"content":"                .withNextOfKinName(VALID_NEXT_OF_KIN_NAME_BOB).withNextOfKinPhone(VALID_NEXT_OF_KIN_PHONE_BOB)","lastModifiedDate":"2023-09-29"},{"lineNumber":107,"author":{"gitId":"nikele2001"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND)","lastModifiedDate":"2023-10-16"},{"lineNumber":108,"author":{"gitId":"nikele2001"},"content":"                .withFinancialPlans(VALID_FINANCIAL_PLAN_1, VALID_FINANCIAL_PLAN_2).build();","lastModifiedDate":"2023-10-16"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":117,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":121,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * - the address book, filtered person list and selected person in {@code actualModel} remain unchanged","lastModifiedDate":"2019-01-25"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        AddressBook expectedAddressBook \u003d new AddressBook(actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredPersonList());","lastModifiedDate":"2018-01-10"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2019-05-03"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddressBook, actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredPersonList());","lastModifiedDate":"2017-06-05"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":154,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show only the person at the given {@code targetIndex} in the","lastModifiedDate":"2018-01-31"},{"lineNumber":155,"author":{"gitId":"-"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2018-01-31"},{"lineNumber":156,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    public static void showPersonAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2018-01-31"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredPersonList().size());","lastModifiedDate":"2018-01-31"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        Person person \u003d model.getFilteredPersonList().get(targetIndex.getZeroBased());","lastModifiedDate":"2018-01-31"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        final String[] splitName \u003d person.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-20"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2017-07-20"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        assertEquals(1, model.getFilteredPersonList().size());","lastModifiedDate":"2018-02-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":167,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"Kb-Tay":12,"nikele2001":12,"sopa301":21,"-":122}},{"path":"src/test/java/seedu/address/logic/commands/CompleteByDateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Kb-Tay"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-11-07"},{"lineNumber":2,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":3,"author":{"gitId":"Kb-Tay"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-11-07"},{"lineNumber":4,"author":{"gitId":"Kb-Tay"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-11-07"},{"lineNumber":5,"author":{"gitId":"Kb-Tay"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-11-07"},{"lineNumber":6,"author":{"gitId":"Kb-Tay"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-11-07"},{"lineNumber":7,"author":{"gitId":"Kb-Tay"},"content":"import static seedu.address.logic.commands.CompleteCommand.MESSAGE_COMPLETE_SUCCESS;","lastModifiedDate":"2023-11-07"},{"lineNumber":8,"author":{"gitId":"Kb-Tay"},"content":"import static seedu.address.logic.commands.CompleteCommand.MESSAGE_DATE_NO_APPOINTMENT;","lastModifiedDate":"2023-11-07"},{"lineNumber":9,"author":{"gitId":"Kb-Tay"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2023-11-07"},{"lineNumber":10,"author":{"gitId":"Kb-Tay"},"content":"import static seedu.address.testutil.TypicalPersons.CARL;","lastModifiedDate":"2023-11-07"},{"lineNumber":11,"author":{"gitId":"Kb-Tay"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2023-11-07"},{"lineNumber":12,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":13,"author":{"gitId":"Kb-Tay"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-11-07"},{"lineNumber":14,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":15,"author":{"gitId":"Kb-Tay"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-11-07"},{"lineNumber":16,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":17,"author":{"gitId":"Kb-Tay"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2023-11-07"},{"lineNumber":18,"author":{"gitId":"Kb-Tay"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-11-07"},{"lineNumber":19,"author":{"gitId":"Kb-Tay"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-11-07"},{"lineNumber":20,"author":{"gitId":"Kb-Tay"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-11-07"},{"lineNumber":21,"author":{"gitId":"Kb-Tay"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-11-07"},{"lineNumber":22,"author":{"gitId":"Kb-Tay"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2023-11-07"},{"lineNumber":23,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":24,"author":{"gitId":"Kb-Tay"},"content":"class CompleteByDateTest {","lastModifiedDate":"2023-11-07"},{"lineNumber":25,"author":{"gitId":"Kb-Tay"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-11-07"},{"lineNumber":26,"author":{"gitId":"Kb-Tay"},"content":"    @Test","lastModifiedDate":"2023-11-07"},{"lineNumber":27,"author":{"gitId":"Kb-Tay"},"content":"    public void execute_dateSpecified_success() {","lastModifiedDate":"2023-11-07"},{"lineNumber":28,"author":{"gitId":"Kb-Tay"},"content":"        Person editedPerson1 \u003d new PersonBuilder(BENSON).withNullAppointment().build();","lastModifiedDate":"2023-11-07"},{"lineNumber":29,"author":{"gitId":"Kb-Tay"},"content":"        Person editedPerson2 \u003d new PersonBuilder(CARL).withNullAppointment().build();","lastModifiedDate":"2023-11-07"},{"lineNumber":30,"author":{"gitId":"Kb-Tay"},"content":"        String expectedMessage \u003d MESSAGE_COMPLETE_SUCCESS;","lastModifiedDate":"2023-11-07"},{"lineNumber":31,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":32,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":33,"author":{"gitId":"Kb-Tay"},"content":"        CompleteByDate completeCommand \u003d new CompleteByDate(LocalDate.of(2023, 05, 01));","lastModifiedDate":"2023-11-07"},{"lineNumber":34,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":35,"author":{"gitId":"Kb-Tay"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2023-11-07"},{"lineNumber":36,"author":{"gitId":"Kb-Tay"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(1), editedPerson1);","lastModifiedDate":"2023-11-07"},{"lineNumber":37,"author":{"gitId":"Kb-Tay"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(2), editedPerson2);","lastModifiedDate":"2023-11-07"},{"lineNumber":38,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":39,"author":{"gitId":"Kb-Tay"},"content":"        assertCommandSuccess(completeCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-11-07"},{"lineNumber":40,"author":{"gitId":"Kb-Tay"},"content":"    }","lastModifiedDate":"2023-11-07"},{"lineNumber":41,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":42,"author":{"gitId":"Kb-Tay"},"content":"    @Test","lastModifiedDate":"2023-11-07"},{"lineNumber":43,"author":{"gitId":"Kb-Tay"},"content":"    public void execute_noMatchingDate_failure() {","lastModifiedDate":"2023-11-07"},{"lineNumber":44,"author":{"gitId":"Kb-Tay"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2023-11-07"},{"lineNumber":45,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":46,"author":{"gitId":"Kb-Tay"},"content":"        //no matching appointment date","lastModifiedDate":"2023-11-07"},{"lineNumber":47,"author":{"gitId":"Kb-Tay"},"content":"        CompleteByDate completeCommand \u003d new CompleteByDate(LocalDate.of(2023, 02, 10));","lastModifiedDate":"2023-11-07"},{"lineNumber":48,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":49,"author":{"gitId":"Kb-Tay"},"content":"        assertCommandFailure(completeCommand, expectedModel, MESSAGE_DATE_NO_APPOINTMENT);","lastModifiedDate":"2023-11-07"},{"lineNumber":50,"author":{"gitId":"Kb-Tay"},"content":"    }","lastModifiedDate":"2023-11-07"},{"lineNumber":51,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":52,"author":{"gitId":"Kb-Tay"},"content":"    @Test","lastModifiedDate":"2023-11-07"},{"lineNumber":53,"author":{"gitId":"Kb-Tay"},"content":"    public void equals() {","lastModifiedDate":"2023-11-07"},{"lineNumber":54,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":55,"author":{"gitId":"Kb-Tay"},"content":"        LocalDate date1 \u003d LocalDate.of(2023, 02, 02);","lastModifiedDate":"2023-11-07"},{"lineNumber":56,"author":{"gitId":"Kb-Tay"},"content":"        LocalDate date2 \u003d LocalDate.of(2023, 01, 01);","lastModifiedDate":"2023-11-07"},{"lineNumber":57,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":58,"author":{"gitId":"Kb-Tay"},"content":"        CompleteByDate completeCommand1 \u003d new CompleteByDate(date1);","lastModifiedDate":"2023-11-07"},{"lineNumber":59,"author":{"gitId":"Kb-Tay"},"content":"        CompleteByDate completeCommand2 \u003d new CompleteByDate(date2);","lastModifiedDate":"2023-11-07"},{"lineNumber":60,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":61,"author":{"gitId":"Kb-Tay"},"content":"        //same object","lastModifiedDate":"2023-11-07"},{"lineNumber":62,"author":{"gitId":"Kb-Tay"},"content":"        assertTrue(completeCommand1.equals(completeCommand1));","lastModifiedDate":"2023-11-07"},{"lineNumber":63,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":64,"author":{"gitId":"Kb-Tay"},"content":"        //same index","lastModifiedDate":"2023-11-07"},{"lineNumber":65,"author":{"gitId":"Kb-Tay"},"content":"        assertTrue(completeCommand1.equals(new CompleteByDate(date1)));","lastModifiedDate":"2023-11-07"},{"lineNumber":66,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":67,"author":{"gitId":"Kb-Tay"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-11-07"},{"lineNumber":68,"author":{"gitId":"Kb-Tay"},"content":"        assertFalse(completeCommand1.equals(null));","lastModifiedDate":"2023-11-07"},{"lineNumber":69,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":70,"author":{"gitId":"Kb-Tay"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-11-07"},{"lineNumber":71,"author":{"gitId":"Kb-Tay"},"content":"        assertFalse(completeCommand1.equals(new ClearCommand()));","lastModifiedDate":"2023-11-07"},{"lineNumber":72,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":73,"author":{"gitId":"Kb-Tay"},"content":"        // diff index -\u003e returns false","lastModifiedDate":"2023-11-07"},{"lineNumber":74,"author":{"gitId":"Kb-Tay"},"content":"        assertFalse(completeCommand1.equals(completeCommand2));","lastModifiedDate":"2023-11-07"},{"lineNumber":75,"author":{"gitId":"Kb-Tay"},"content":"    }","lastModifiedDate":"2023-11-07"},{"lineNumber":76,"author":{"gitId":"Kb-Tay"},"content":"}","lastModifiedDate":"2023-11-07"}],"authorContributionMap":{"Kb-Tay":76}},{"path":"src/test/java/seedu/address/logic/commands/CompleteByIndexTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Kb-Tay"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-11-07"},{"lineNumber":2,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":3,"author":{"gitId":"Kb-Tay"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-11-07"},{"lineNumber":4,"author":{"gitId":"Kb-Tay"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-11-07"},{"lineNumber":5,"author":{"gitId":"Kb-Tay"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-11-07"},{"lineNumber":6,"author":{"gitId":"Kb-Tay"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-11-07"},{"lineNumber":7,"author":{"gitId":"Kb-Tay"},"content":"import static seedu.address.logic.commands.CompleteCommand.MESSAGE_COMPLETE_SUCCESS;","lastModifiedDate":"2023-11-07"},{"lineNumber":8,"author":{"gitId":"Kb-Tay"},"content":"import static seedu.address.logic.commands.CompleteCommand.MESSAGE_PERSON_NO_APPOINTMENT;","lastModifiedDate":"2023-11-07"},{"lineNumber":9,"author":{"gitId":"Kb-Tay"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-11-07"},{"lineNumber":10,"author":{"gitId":"Kb-Tay"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2023-11-07"},{"lineNumber":11,"author":{"gitId":"Kb-Tay"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2023-11-07"},{"lineNumber":12,"author":{"gitId":"Kb-Tay"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2023-11-07"},{"lineNumber":13,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":14,"author":{"gitId":"Kb-Tay"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-11-07"},{"lineNumber":15,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":16,"author":{"gitId":"Kb-Tay"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2023-11-07"},{"lineNumber":17,"author":{"gitId":"Kb-Tay"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-11-07"},{"lineNumber":18,"author":{"gitId":"Kb-Tay"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-11-07"},{"lineNumber":19,"author":{"gitId":"Kb-Tay"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-11-07"},{"lineNumber":20,"author":{"gitId":"Kb-Tay"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-11-07"},{"lineNumber":21,"author":{"gitId":"Kb-Tay"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2023-11-07"},{"lineNumber":22,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":23,"author":{"gitId":"Kb-Tay"},"content":"class CompleteByIndexTest {","lastModifiedDate":"2023-11-07"},{"lineNumber":24,"author":{"gitId":"Kb-Tay"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-11-07"},{"lineNumber":25,"author":{"gitId":"Kb-Tay"},"content":"    @Test","lastModifiedDate":"2023-11-07"},{"lineNumber":26,"author":{"gitId":"Kb-Tay"},"content":"    public void execute_indexSpecified_success() {","lastModifiedDate":"2023-11-07"},{"lineNumber":27,"author":{"gitId":"Kb-Tay"},"content":"        Person editedPerson \u003d new PersonBuilder(BENSON).withNullAppointment().build();","lastModifiedDate":"2023-11-07"},{"lineNumber":28,"author":{"gitId":"Kb-Tay"},"content":"        String expectedMessage \u003d MESSAGE_COMPLETE_SUCCESS;","lastModifiedDate":"2023-11-07"},{"lineNumber":29,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":30,"author":{"gitId":"Kb-Tay"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2023-11-07"},{"lineNumber":31,"author":{"gitId":"Kb-Tay"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(1), editedPerson);","lastModifiedDate":"2023-11-07"},{"lineNumber":32,"author":{"gitId":"Kb-Tay"},"content":"        CompleteByIndex completeCommand \u003d new CompleteByIndex(INDEX_SECOND_PERSON);","lastModifiedDate":"2023-11-07"},{"lineNumber":33,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":34,"author":{"gitId":"Kb-Tay"},"content":"        assertCommandSuccess(completeCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-11-07"},{"lineNumber":35,"author":{"gitId":"Kb-Tay"},"content":"    }","lastModifiedDate":"2023-11-07"},{"lineNumber":36,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":37,"author":{"gitId":"Kb-Tay"},"content":"    @Test","lastModifiedDate":"2023-11-07"},{"lineNumber":38,"author":{"gitId":"Kb-Tay"},"content":"    public void execute_personNoAppointment_failure() {","lastModifiedDate":"2023-11-07"},{"lineNumber":39,"author":{"gitId":"Kb-Tay"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2023-11-07"},{"lineNumber":40,"author":{"gitId":"Kb-Tay"},"content":"        CompleteByIndex completeCommand \u003d new CompleteByIndex(INDEX_FIRST_PERSON); //person has no appointment","lastModifiedDate":"2023-11-07"},{"lineNumber":41,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":42,"author":{"gitId":"Kb-Tay"},"content":"        assertCommandFailure(completeCommand, expectedModel, MESSAGE_PERSON_NO_APPOINTMENT);","lastModifiedDate":"2023-11-07"},{"lineNumber":43,"author":{"gitId":"Kb-Tay"},"content":"    }","lastModifiedDate":"2023-11-07"},{"lineNumber":44,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":45,"author":{"gitId":"Kb-Tay"},"content":"    @Test","lastModifiedDate":"2023-11-07"},{"lineNumber":46,"author":{"gitId":"Kb-Tay"},"content":"    public void equals() {","lastModifiedDate":"2023-11-07"},{"lineNumber":47,"author":{"gitId":"Kb-Tay"},"content":"        CompleteByIndex completeCommand1 \u003d new CompleteByIndex(INDEX_FIRST_PERSON);","lastModifiedDate":"2023-11-07"},{"lineNumber":48,"author":{"gitId":"Kb-Tay"},"content":"        CompleteByIndex completeCommand2 \u003d new CompleteByIndex(INDEX_SECOND_PERSON);","lastModifiedDate":"2023-11-07"},{"lineNumber":49,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":50,"author":{"gitId":"Kb-Tay"},"content":"        //same object","lastModifiedDate":"2023-11-07"},{"lineNumber":51,"author":{"gitId":"Kb-Tay"},"content":"        assertTrue(completeCommand1.equals(completeCommand1));","lastModifiedDate":"2023-11-07"},{"lineNumber":52,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":53,"author":{"gitId":"Kb-Tay"},"content":"        //same index","lastModifiedDate":"2023-11-07"},{"lineNumber":54,"author":{"gitId":"Kb-Tay"},"content":"        assertTrue(completeCommand1.equals(new CompleteByIndex(INDEX_FIRST_PERSON)));","lastModifiedDate":"2023-11-07"},{"lineNumber":55,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":56,"author":{"gitId":"Kb-Tay"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-11-07"},{"lineNumber":57,"author":{"gitId":"Kb-Tay"},"content":"        assertFalse(completeCommand1.equals(null));","lastModifiedDate":"2023-11-07"},{"lineNumber":58,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":59,"author":{"gitId":"Kb-Tay"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-11-07"},{"lineNumber":60,"author":{"gitId":"Kb-Tay"},"content":"        assertFalse(completeCommand1.equals(new ClearCommand()));","lastModifiedDate":"2023-11-07"},{"lineNumber":61,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":62,"author":{"gitId":"Kb-Tay"},"content":"        // diff index -\u003e returns false","lastModifiedDate":"2023-11-07"},{"lineNumber":63,"author":{"gitId":"Kb-Tay"},"content":"        assertFalse(completeCommand1.equals(completeCommand2));","lastModifiedDate":"2023-11-07"},{"lineNumber":64,"author":{"gitId":"Kb-Tay"},"content":"    }","lastModifiedDate":"2023-11-07"},{"lineNumber":65,"author":{"gitId":"Kb-Tay"},"content":"}","lastModifiedDate":"2023-11-07"}],"authorContributionMap":{"Kb-Tay":65}},{"path":"src/test/java/seedu/address/logic/commands/CompleteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Kb-Tay"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-26"},{"lineNumber":2,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":3,"author":{"gitId":"Kb-Tay"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-26"},{"lineNumber":4,"author":{"gitId":"Kb-Tay"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-26"},{"lineNumber":5,"author":{"gitId":"Kb-Tay"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-10-26"},{"lineNumber":6,"author":{"gitId":"Kb-Tay"},"content":"import static seedu.address.logic.commands.CompleteCommand.MESSAGE_COMPLETE_SUCCESS;","lastModifiedDate":"2023-10-26"},{"lineNumber":7,"author":{"gitId":"Kb-Tay"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-10-26"},{"lineNumber":8,"author":{"gitId":"Kb-Tay"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2023-10-26"},{"lineNumber":9,"author":{"gitId":"Kb-Tay"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2023-10-26"},{"lineNumber":10,"author":{"gitId":"Kb-Tay"},"content":"import static seedu.address.testutil.TypicalPersons.CARL;","lastModifiedDate":"2023-10-26"},{"lineNumber":11,"author":{"gitId":"Kb-Tay"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2023-10-26"},{"lineNumber":12,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":13,"author":{"gitId":"Kb-Tay"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-10-26"},{"lineNumber":14,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":15,"author":{"gitId":"Kb-Tay"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-26"},{"lineNumber":16,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":17,"author":{"gitId":"Kb-Tay"},"content":"import seedu.address.logic.parser.CompleteCommandParser;","lastModifiedDate":"2023-11-07"},{"lineNumber":18,"author":{"gitId":"Kb-Tay"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2023-10-26"},{"lineNumber":19,"author":{"gitId":"Kb-Tay"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-26"},{"lineNumber":20,"author":{"gitId":"Kb-Tay"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-10-26"},{"lineNumber":21,"author":{"gitId":"Kb-Tay"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-10-26"},{"lineNumber":22,"author":{"gitId":"Kb-Tay"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-26"},{"lineNumber":23,"author":{"gitId":"Kb-Tay"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2023-10-26"},{"lineNumber":24,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":25,"author":{"gitId":"Kb-Tay"},"content":"class CompleteCommandTest {","lastModifiedDate":"2023-10-26"},{"lineNumber":26,"author":{"gitId":"Kb-Tay"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-26"},{"lineNumber":27,"author":{"gitId":"Kb-Tay"},"content":"    private CompleteCommandParser commandParser \u003d new CompleteCommandParser();","lastModifiedDate":"2023-11-07"},{"lineNumber":28,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":29,"author":{"gitId":"Kb-Tay"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":30,"author":{"gitId":"Kb-Tay"},"content":"    public void testCompleteByIndexSubclass() {","lastModifiedDate":"2023-11-07"},{"lineNumber":31,"author":{"gitId":"Kb-Tay"},"content":"        //valid Index","lastModifiedDate":"2023-11-07"},{"lineNumber":32,"author":{"gitId":"Kb-Tay"},"content":"        Person editedPerson \u003d new PersonBuilder(BENSON).withNullAppointment().build();","lastModifiedDate":"2023-10-26"},{"lineNumber":33,"author":{"gitId":"Kb-Tay"},"content":"        String expectedMessage \u003d MESSAGE_COMPLETE_SUCCESS;","lastModifiedDate":"2023-10-26"},{"lineNumber":34,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":35,"author":{"gitId":"Kb-Tay"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2023-10-26"},{"lineNumber":36,"author":{"gitId":"Kb-Tay"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(1), editedPerson);","lastModifiedDate":"2023-10-26"},{"lineNumber":37,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":38,"author":{"gitId":"Kb-Tay"},"content":"        CompleteCommand completeCommand \u003d new CompleteByIndex(INDEX_SECOND_PERSON);","lastModifiedDate":"2023-11-07"},{"lineNumber":39,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":40,"author":{"gitId":"Kb-Tay"},"content":"        assertCommandSuccess(completeCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-26"},{"lineNumber":41,"author":{"gitId":"Kb-Tay"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":42,"author":{"gitId":"Kb-Tay"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":43,"author":{"gitId":"Kb-Tay"},"content":"    public void testCompleteByDateSubclass() {","lastModifiedDate":"2023-11-07"},{"lineNumber":44,"author":{"gitId":"Kb-Tay"},"content":"        Person editedPerson1 \u003d new PersonBuilder(BENSON).withNullAppointment().build();","lastModifiedDate":"2023-10-26"},{"lineNumber":45,"author":{"gitId":"Kb-Tay"},"content":"        Person editedPerson2 \u003d new PersonBuilder(CARL).withNullAppointment().build();","lastModifiedDate":"2023-10-26"},{"lineNumber":46,"author":{"gitId":"Kb-Tay"},"content":"        String expectedMessage \u003d MESSAGE_COMPLETE_SUCCESS;","lastModifiedDate":"2023-10-26"},{"lineNumber":47,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":48,"author":{"gitId":"Kb-Tay"},"content":"        LocalDate validDate \u003d LocalDate.of(2023, 05, 01);","lastModifiedDate":"2023-11-07"},{"lineNumber":49,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":50,"author":{"gitId":"Kb-Tay"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2023-10-26"},{"lineNumber":51,"author":{"gitId":"Kb-Tay"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(1), editedPerson1);","lastModifiedDate":"2023-10-26"},{"lineNumber":52,"author":{"gitId":"Kb-Tay"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(2), editedPerson2);","lastModifiedDate":"2023-10-26"},{"lineNumber":53,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":54,"author":{"gitId":"Kb-Tay"},"content":"        CompleteCommand completeCommand \u003d new CompleteByDate(validDate);","lastModifiedDate":"2023-11-07"},{"lineNumber":55,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":56,"author":{"gitId":"Kb-Tay"},"content":"        assertCommandSuccess(completeCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-11-07"},{"lineNumber":57,"author":{"gitId":"Kb-Tay"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":58,"author":{"gitId":"Kb-Tay"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":59,"author":{"gitId":"Kb-Tay"},"content":"    public void equals() {","lastModifiedDate":"2023-10-26"},{"lineNumber":60,"author":{"gitId":"Kb-Tay"},"content":"        LocalDate validDate \u003d LocalDate.of(2023, 05, 01);","lastModifiedDate":"2023-11-07"},{"lineNumber":61,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":62,"author":{"gitId":"Kb-Tay"},"content":"        CompleteCommand completeCommandByIndex \u003d new CompleteByIndex(INDEX_FIRST_PERSON);","lastModifiedDate":"2023-11-07"},{"lineNumber":63,"author":{"gitId":"Kb-Tay"},"content":"        CompleteCommand completeCommandByDate \u003d new CompleteByDate(validDate);","lastModifiedDate":"2023-11-07"},{"lineNumber":64,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":65,"author":{"gitId":"Kb-Tay"},"content":"        //different commands","lastModifiedDate":"2023-11-07"},{"lineNumber":66,"author":{"gitId":"Kb-Tay"},"content":"        assertFalse(completeCommandByIndex.equals(completeCommandByDate));","lastModifiedDate":"2023-11-07"},{"lineNumber":67,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":68,"author":{"gitId":"Kb-Tay"},"content":"        //same objects","lastModifiedDate":"2023-11-07"},{"lineNumber":69,"author":{"gitId":"Kb-Tay"},"content":"        assertTrue(completeCommandByIndex.equals(completeCommandByIndex));","lastModifiedDate":"2023-11-07"},{"lineNumber":70,"author":{"gitId":"Kb-Tay"},"content":"        assertTrue(completeCommandByIndex.equals(new CompleteByIndex(INDEX_FIRST_PERSON)));","lastModifiedDate":"2023-11-07"},{"lineNumber":71,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":72,"author":{"gitId":"Kb-Tay"},"content":"        assertTrue(completeCommandByDate.equals(completeCommandByDate));","lastModifiedDate":"2023-11-07"},{"lineNumber":73,"author":{"gitId":"Kb-Tay"},"content":"        assertTrue(completeCommandByDate.equals(new CompleteByDate(validDate)));","lastModifiedDate":"2023-11-07"},{"lineNumber":74,"author":{"gitId":"Kb-Tay"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":75,"author":{"gitId":"Kb-Tay"},"content":"}","lastModifiedDate":"2023-10-26"}],"authorContributionMap":{"Kb-Tay":75}},{"path":"src/test/java/seedu/address/logic/commands/ConfirmClearCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"sopa301"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-18"},{"lineNumber":2,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":3,"author":{"gitId":"sopa301"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-10-18"},{"lineNumber":4,"author":{"gitId":"sopa301"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2023-10-18"},{"lineNumber":5,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":6,"author":{"gitId":"sopa301"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-18"},{"lineNumber":7,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":8,"author":{"gitId":"sopa301"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2023-10-18"},{"lineNumber":9,"author":{"gitId":"sopa301"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-18"},{"lineNumber":10,"author":{"gitId":"sopa301"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-10-18"},{"lineNumber":11,"author":{"gitId":"sopa301"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-10-18"},{"lineNumber":12,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":13,"author":{"gitId":"sopa301"},"content":"public class ConfirmClearCommandTest {","lastModifiedDate":"2023-10-18"},{"lineNumber":14,"author":{"gitId":"sopa301"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":15,"author":{"gitId":"sopa301"},"content":"    public void execute_emptyAddressBook_success() {","lastModifiedDate":"2023-10-18"},{"lineNumber":16,"author":{"gitId":"sopa301"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2023-10-18"},{"lineNumber":17,"author":{"gitId":"sopa301"},"content":"        Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2023-10-18"},{"lineNumber":18,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":19,"author":{"gitId":"sopa301"},"content":"        assertCommandSuccess(new ConfirmClearCommand(), model, ConfirmClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2023-10-18"},{"lineNumber":20,"author":{"gitId":"sopa301"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":21,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":22,"author":{"gitId":"sopa301"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":23,"author":{"gitId":"sopa301"},"content":"    public void execute_nonEmptyAddressBook_success() {","lastModifiedDate":"2023-10-18"},{"lineNumber":24,"author":{"gitId":"sopa301"},"content":"        Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-18"},{"lineNumber":25,"author":{"gitId":"sopa301"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-18"},{"lineNumber":26,"author":{"gitId":"sopa301"},"content":"        expectedModel.setAddressBook(new AddressBook());","lastModifiedDate":"2023-10-18"},{"lineNumber":27,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":28,"author":{"gitId":"sopa301"},"content":"        assertCommandSuccess(new ConfirmClearCommand(), model, ConfirmClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2023-10-18"},{"lineNumber":29,"author":{"gitId":"sopa301"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":30,"author":{"gitId":"sopa301"},"content":"}","lastModifiedDate":"2023-10-18"},{"lineNumber":31,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-10-18"}],"authorContributionMap":{"sopa301":31}},{"path":"src/test/java/seedu/address/logic/commands/ConfirmOverrideCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jylow"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-24"},{"lineNumber":2,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":3,"author":{"gitId":"jylow"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-10-24"},{"lineNumber":4,"author":{"gitId":"jylow"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2023-10-24"},{"lineNumber":5,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":6,"author":{"gitId":"jylow"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-24"},{"lineNumber":7,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":8,"author":{"gitId":"jylow"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-24"},{"lineNumber":9,"author":{"gitId":"jylow"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-10-24"},{"lineNumber":10,"author":{"gitId":"jylow"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-10-24"},{"lineNumber":11,"author":{"gitId":"jylow"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2023-10-24"},{"lineNumber":12,"author":{"gitId":"jylow"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-24"},{"lineNumber":13,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":14,"author":{"gitId":"jylow"},"content":"public class ConfirmOverrideCommandTest {","lastModifiedDate":"2023-10-24"},{"lineNumber":15,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":16,"author":{"gitId":"jylow"},"content":"    private static final String APPOINTMENT_DESCRIPTION_STUB \u003d \"Review Insurance, 01-01-2023 20:00\";","lastModifiedDate":"2023-10-24"},{"lineNumber":17,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":18,"author":{"gitId":"jylow"},"content":"    @Test","lastModifiedDate":"2023-10-24"},{"lineNumber":19,"author":{"gitId":"jylow"},"content":"    public void execute_overridingAppointment_success() {","lastModifiedDate":"2023-10-24"},{"lineNumber":20,"author":{"gitId":"jylow"},"content":"        Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-24"},{"lineNumber":21,"author":{"gitId":"jylow"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-24"},{"lineNumber":22,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":23,"author":{"gitId":"jylow"},"content":"        Person updatedPerson \u003d expectedModel.getFilteredPersonList().get(1);","lastModifiedDate":"2023-10-24"},{"lineNumber":24,"author":{"gitId":"jylow"},"content":"        Person personToEdit \u003d model.getFilteredPersonList().get(1);","lastModifiedDate":"2023-10-24"},{"lineNumber":25,"author":{"gitId":"jylow"},"content":"        Appointment newAppointment \u003d Appointment.parseAppointmentDescription(APPOINTMENT_DESCRIPTION_STUB);","lastModifiedDate":"2023-10-24"},{"lineNumber":26,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":27,"author":{"gitId":"jylow"},"content":"        Person newPerson \u003d new Person(updatedPerson.getName(), updatedPerson.getPhone(), updatedPerson.getEmail(),","lastModifiedDate":"2023-10-24"},{"lineNumber":28,"author":{"gitId":"jylow"},"content":"                updatedPerson.getAddress(), updatedPerson.getNextOfKinName(), updatedPerson.getNextOfKinPhone(),","lastModifiedDate":"2023-10-24"},{"lineNumber":29,"author":{"gitId":"jylow"},"content":"                updatedPerson.getFinancialPlans(), updatedPerson.getTags(), newAppointment);","lastModifiedDate":"2023-10-24"},{"lineNumber":30,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":31,"author":{"gitId":"jylow"},"content":"        expectedModel.setPerson(updatedPerson, newPerson);","lastModifiedDate":"2023-10-24"},{"lineNumber":32,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":33,"author":{"gitId":"jylow"},"content":"        assertCommandSuccess(new ConfirmOverrideCommand(newAppointment, personToEdit), model,","lastModifiedDate":"2023-10-24"},{"lineNumber":34,"author":{"gitId":"jylow"},"content":"                ConfirmOverrideCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2023-10-24"},{"lineNumber":35,"author":{"gitId":"jylow"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":36,"author":{"gitId":"jylow"},"content":"}","lastModifiedDate":"2023-10-24"}],"authorContributionMap":{"jylow":36}},{"path":"src/test/java/seedu/address/logic/commands/EditPersonDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorTest {","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptorWithSameValues \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(descriptorWithSameValues));","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(DESC_AMY));","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(null));","lastModifiedDate":"2017-05-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(5));","lastModifiedDate":"2017-05-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(DESC_BOB));","lastModifiedDate":"2017-05-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2019-02-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        String expected \u003d EditPersonDescriptor.class.getCanonicalName() + \"{name\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                + editPersonDescriptor.getName().orElse(null) + \", phone\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                + editPersonDescriptor.getPhone().orElse(null) + \", email\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                + editPersonDescriptor.getEmail().orElse(null) + \", address\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":67,"author":{"gitId":"sopa301"},"content":"                + editPersonDescriptor.getAddress().orElse(null) + \", nextOfKinName\u003d\"","lastModifiedDate":"2023-09-28"},{"lineNumber":68,"author":{"gitId":"sopa301"},"content":"                + editPersonDescriptor.getNextOfKinName().orElse(null) + \", nextOfKinPhone\u003d\"","lastModifiedDate":"2023-09-28"},{"lineNumber":69,"author":{"gitId":"nikele2001"},"content":"                + editPersonDescriptor.getNextOfKinPhone().orElse(null) + \", financialPlans\u003d\"","lastModifiedDate":"2023-10-16"},{"lineNumber":70,"author":{"gitId":"nikele2001"},"content":"                + editPersonDescriptor.getFinancialPlans().orElse(null) + \", tags\u003d\"","lastModifiedDate":"2023-10-16"},{"lineNumber":71,"author":{"gitId":"-"},"content":"                + editPersonDescriptor.getTags().orElse(null) + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertEquals(expected, editPersonDescriptor.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"nikele2001":2,"sopa301":2,"-":70}},{"path":"src/test/java/seedu/address/logic/commands/FindCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_PERSONS_LISTED_OVERVIEW;","lastModifiedDate":"2023-07-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.CARL;","lastModifiedDate":"2017-07-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ELLE;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.FIONA;","lastModifiedDate":"2017-07-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"sopa301"},"content":"import java.util.List;","lastModifiedDate":"2023-10-25"},{"lineNumber":16,"author":{"gitId":"sopa301"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-10-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"sopa301"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-25"},{"lineNumber":24,"author":{"gitId":"sopa301"},"content":"import seedu.address.model.person.predicates.CombinedPredicate;","lastModifiedDate":"2023-10-25"},{"lineNumber":25,"author":{"gitId":"sopa301"},"content":"import seedu.address.model.person.predicates.FinancialPlanContainsKeywordsPredicate;","lastModifiedDate":"2023-10-25"},{"lineNumber":26,"author":{"gitId":"sopa301"},"content":"import seedu.address.model.person.predicates.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-10-24"},{"lineNumber":27,"author":{"gitId":"sopa301"},"content":"import seedu.address.model.person.predicates.TagContainsKeywordsPredicate;","lastModifiedDate":"2023-10-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code FindCommand}.","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"public class FindCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2018-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"sopa301"},"content":"        Predicate\u003cPerson\u003e firstPredicate \u003d","lastModifiedDate":"2023-10-25"},{"lineNumber":39,"author":{"gitId":"sopa301"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"first\"))","lastModifiedDate":"2023-10-25"},{"lineNumber":40,"author":{"gitId":"sopa301"},"content":"                        .or(new TagContainsKeywordsPredicate(Collections.singletonList(\"firstTag\")));","lastModifiedDate":"2023-10-25"},{"lineNumber":41,"author":{"gitId":"sopa301"},"content":"        Predicate\u003cPerson\u003e secondPredicate \u003d","lastModifiedDate":"2023-10-25"},{"lineNumber":42,"author":{"gitId":"sopa301"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"second\"))","lastModifiedDate":"2023-10-25"},{"lineNumber":43,"author":{"gitId":"sopa301"},"content":"                        .or(new TagContainsKeywordsPredicate(Collections.singletonList(\"firstTag\")));","lastModifiedDate":"2023-10-25"},{"lineNumber":44,"author":{"gitId":"sopa301"},"content":"        Predicate\u003cPerson\u003e firstPredicateAgain \u003d","lastModifiedDate":"2023-10-25"},{"lineNumber":45,"author":{"gitId":"sopa301"},"content":"                new TagContainsKeywordsPredicate(Collections.singletonList(\"firstTag\"))","lastModifiedDate":"2023-10-25"},{"lineNumber":46,"author":{"gitId":"sopa301"},"content":"                        .or(new NameContainsKeywordsPredicate(Collections.singletonList(\"first\")));","lastModifiedDate":"2023-10-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommand \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        FindCommand findSecondCommand \u003d new FindCommand(secondPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":50,"author":{"gitId":"sopa301"},"content":"        FindCommand findFirstCommandAgain \u003d new FindCommand(firstPredicateAgain);","lastModifiedDate":"2023-10-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommandCopy \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":59,"author":{"gitId":"sopa301"},"content":"        // same values, composed differently -\u003e returns true","lastModifiedDate":"2023-10-25"},{"lineNumber":60,"author":{"gitId":"sopa301"},"content":"        assertFalse(findFirstCommand.equals(findFirstCommandAgain));","lastModifiedDate":"2023-10-25"},{"lineNumber":61,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void execute_zeroKeywords_noPersonFound() {","lastModifiedDate":"2023-10-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2023-10-25"},{"lineNumber":75,"author":{"gitId":"sopa301"},"content":"        NameContainsKeywordsPredicate namePredicate \u003d new NameContainsKeywordsPredicate(List.of());","lastModifiedDate":"2023-10-25"},{"lineNumber":76,"author":{"gitId":"sopa301"},"content":"        FinancialPlanContainsKeywordsPredicate financialPlanPredicate \u003d","lastModifiedDate":"2023-10-25"},{"lineNumber":77,"author":{"gitId":"sopa301"},"content":"                new FinancialPlanContainsKeywordsPredicate(List.of());","lastModifiedDate":"2023-10-25"},{"lineNumber":78,"author":{"gitId":"sopa301"},"content":"        TagContainsKeywordsPredicate tagPredicate \u003d new TagContainsKeywordsPredicate(List.of());","lastModifiedDate":"2023-10-25"},{"lineNumber":79,"author":{"gitId":"sopa301"},"content":"        CombinedPredicate combinedPredicate \u003d new CombinedPredicate(financialPlanPredicate,","lastModifiedDate":"2023-10-25"},{"lineNumber":80,"author":{"gitId":"sopa301"},"content":"                namePredicate, tagPredicate);","lastModifiedDate":"2023-10-25"},{"lineNumber":81,"author":{"gitId":"sopa301"},"content":"        FindCommand command \u003d new FindCommand(combinedPredicate);","lastModifiedDate":"2023-10-25"},{"lineNumber":82,"author":{"gitId":"sopa301"},"content":"        expectedModel.updateFilteredPersonList(combinedPredicate);","lastModifiedDate":"2023-10-25"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-25"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredPersonList());","lastModifiedDate":"2023-10-25"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void execute_multipleKeywords_multiplePersonsFound() {","lastModifiedDate":"2017-08-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2017-06-12"},{"lineNumber":89,"author":{"gitId":"sopa301"},"content":"        NameContainsKeywordsPredicate predicate \u003d prepareNamePredicate(\"Kurz Elle Kunz\");","lastModifiedDate":"2023-10-25"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(CARL, ELLE, FIONA), model.getFilteredPersonList());","lastModifiedDate":"2018-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":98,"author":{"gitId":"sopa301"},"content":"        Predicate\u003cPerson\u003e predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"keyword\"))","lastModifiedDate":"2023-10-25"},{"lineNumber":99,"author":{"gitId":"sopa301"},"content":"                .or(new TagContainsKeywordsPredicate(Collections.singletonList(\"tag\")));","lastModifiedDate":"2023-10-25"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        FindCommand findCommand \u003d new FindCommand(predicate);","lastModifiedDate":"2019-02-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        String expected \u003d FindCommand.class.getCanonicalName() + \"{predicate\u003d\" + predicate + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertEquals(expected, findCommand.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-12"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a {@code NameContainsKeywordsPredicate}.","lastModifiedDate":"2018-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-12"},{"lineNumber":108,"author":{"gitId":"sopa301"},"content":"    private NameContainsKeywordsPredicate prepareNamePredicate(String userInput) {","lastModifiedDate":"2023-10-25"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        return new NameContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2018-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":111,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"sopa301":32,"-":79}},{"path":"src/test/java/seedu/address/logic/commands/GatherCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"AlyssaPng"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-18"},{"lineNumber":2,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":3,"author":{"gitId":"AlyssaPng"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-18"},{"lineNumber":4,"author":{"gitId":"AlyssaPng"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-18"},{"lineNumber":5,"author":{"gitId":"AlyssaPng"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-18"},{"lineNumber":6,"author":{"gitId":"AlyssaPng"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-10-18"},{"lineNumber":7,"author":{"gitId":"AlyssaPng"},"content":"import static seedu.address.logic.commands.GatherCommand.MESSAGE_NO_PERSON_FOUND;","lastModifiedDate":"2023-10-18"},{"lineNumber":8,"author":{"gitId":"AlyssaPng"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2023-10-18"},{"lineNumber":9,"author":{"gitId":"AlyssaPng"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2023-10-18"},{"lineNumber":10,"author":{"gitId":"AlyssaPng"},"content":"import static seedu.address.testutil.TypicalPersons.DANIEL;","lastModifiedDate":"2023-10-23"},{"lineNumber":11,"author":{"gitId":"AlyssaPng"},"content":"import static seedu.address.testutil.TypicalPersons.GEORGE;","lastModifiedDate":"2023-10-18"},{"lineNumber":12,"author":{"gitId":"AlyssaPng"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2023-10-18"},{"lineNumber":13,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":14,"author":{"gitId":"AlyssaPng"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-18"},{"lineNumber":15,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":16,"author":{"gitId":"AlyssaPng"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-18"},{"lineNumber":17,"author":{"gitId":"AlyssaPng"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-10-18"},{"lineNumber":18,"author":{"gitId":"AlyssaPng"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-10-18"},{"lineNumber":19,"author":{"gitId":"AlyssaPng"},"content":"import seedu.address.model.person.gatheremail.GatherEmailByFinancialPlan;","lastModifiedDate":"2023-10-23"},{"lineNumber":20,"author":{"gitId":"AlyssaPng"},"content":"import seedu.address.model.person.gatheremail.GatherEmailByTag;","lastModifiedDate":"2023-10-23"},{"lineNumber":21,"author":{"gitId":"AlyssaPng"},"content":"import seedu.address.model.person.gatheremail.GatherEmailPrompt;","lastModifiedDate":"2023-10-23"},{"lineNumber":22,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":23,"author":{"gitId":"AlyssaPng"},"content":"/**","lastModifiedDate":"2023-10-18"},{"lineNumber":24,"author":{"gitId":"AlyssaPng"},"content":" * Contains integration tests (interaction with the Model) for {@code GatherCommand}.","lastModifiedDate":"2023-10-18"},{"lineNumber":25,"author":{"gitId":"AlyssaPng"},"content":" */","lastModifiedDate":"2023-10-18"},{"lineNumber":26,"author":{"gitId":"AlyssaPng"},"content":"public class GatherCommandTest {","lastModifiedDate":"2023-10-18"},{"lineNumber":27,"author":{"gitId":"AlyssaPng"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-18"},{"lineNumber":28,"author":{"gitId":"AlyssaPng"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-18"},{"lineNumber":29,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":30,"author":{"gitId":"AlyssaPng"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":31,"author":{"gitId":"AlyssaPng"},"content":"    void execute_gatherEmailsByFinancialPlan_success() {","lastModifiedDate":"2023-10-23"},{"lineNumber":32,"author":{"gitId":"jylow"},"content":"        String message \u003d ALICE.getEmail() + \"; \" + BENSON.getEmail() + \"; \" + GEORGE.getEmail() + \";\";","lastModifiedDate":"2023-11-11"},{"lineNumber":33,"author":{"gitId":"AlyssaPng"},"content":"        GatherEmailByFinancialPlan prompt \u003d new GatherEmailByFinancialPlan(\"Sample Financial Plan 1\");","lastModifiedDate":"2023-10-23"},{"lineNumber":34,"author":{"gitId":"AlyssaPng"},"content":"        String expectedMessage \u003d expectedModel.gatherEmails(prompt);","lastModifiedDate":"2023-10-18"},{"lineNumber":35,"author":{"gitId":"AlyssaPng"},"content":"        GatherCommand command \u003d new GatherCommand(prompt);","lastModifiedDate":"2023-10-18"},{"lineNumber":36,"author":{"gitId":"AlyssaPng"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-18"},{"lineNumber":37,"author":{"gitId":"AlyssaPng"},"content":"        assertCommandSuccess(command, model, message, expectedModel);","lastModifiedDate":"2023-10-18"},{"lineNumber":38,"author":{"gitId":"AlyssaPng"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":39,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":40,"author":{"gitId":"AlyssaPng"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":41,"author":{"gitId":"AlyssaPng"},"content":"    void execute_gatherEmailsByTag_success() {","lastModifiedDate":"2023-10-23"},{"lineNumber":42,"author":{"gitId":"jylow"},"content":"        String message \u003d ALICE.getEmail() + \"; \" + BENSON.getEmail() + \"; \" + DANIEL.getEmail() + \";\";","lastModifiedDate":"2023-11-11"},{"lineNumber":43,"author":{"gitId":"AlyssaPng"},"content":"        GatherEmailByTag prompt \u003d new GatherEmailByTag(\"friends\");","lastModifiedDate":"2023-10-23"},{"lineNumber":44,"author":{"gitId":"AlyssaPng"},"content":"        String expectedMessage \u003d expectedModel.gatherEmails(prompt);","lastModifiedDate":"2023-10-23"},{"lineNumber":45,"author":{"gitId":"AlyssaPng"},"content":"        GatherCommand command \u003d new GatherCommand(prompt);","lastModifiedDate":"2023-10-18"},{"lineNumber":46,"author":{"gitId":"AlyssaPng"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-18"},{"lineNumber":47,"author":{"gitId":"AlyssaPng"},"content":"        assertCommandSuccess(command, model, message, expectedModel);","lastModifiedDate":"2023-10-23"},{"lineNumber":48,"author":{"gitId":"AlyssaPng"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":49,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":50,"author":{"gitId":"AlyssaPng"},"content":"    @Test","lastModifiedDate":"2023-10-23"},{"lineNumber":51,"author":{"gitId":"AlyssaPng"},"content":"    public void execute_noPersonFound() {","lastModifiedDate":"2023-10-23"},{"lineNumber":52,"author":{"gitId":"AlyssaPng"},"content":"        GatherEmailByFinancialPlan financialPlanPrompt \u003d new GatherEmailByFinancialPlan(\"Sample Plan 3\");","lastModifiedDate":"2023-10-23"},{"lineNumber":53,"author":{"gitId":"AlyssaPng"},"content":"        GatherEmailByTag tagPrompt \u003d new GatherEmailByTag(\"Sample Tag\");","lastModifiedDate":"2023-10-23"},{"lineNumber":54,"author":{"gitId":"AlyssaPng"},"content":"        String fpExpectedMsg \u003d String.format(MESSAGE_NO_PERSON_FOUND + financialPlanPrompt);","lastModifiedDate":"2023-10-23"},{"lineNumber":55,"author":{"gitId":"AlyssaPng"},"content":"        String tagExpectedMsg \u003d String.format(MESSAGE_NO_PERSON_FOUND + tagPrompt);","lastModifiedDate":"2023-10-23"},{"lineNumber":56,"author":{"gitId":"AlyssaPng"},"content":"        GatherCommand financialPlanCommand \u003d new GatherCommand(financialPlanPrompt);","lastModifiedDate":"2023-10-23"},{"lineNumber":57,"author":{"gitId":"AlyssaPng"},"content":"        GatherCommand tagCommand \u003d new GatherCommand(tagPrompt);","lastModifiedDate":"2023-10-23"},{"lineNumber":58,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":59,"author":{"gitId":"AlyssaPng"},"content":"        assertCommandSuccess(financialPlanCommand, model, fpExpectedMsg, expectedModel);","lastModifiedDate":"2023-10-23"},{"lineNumber":60,"author":{"gitId":"AlyssaPng"},"content":"        assertCommandSuccess(tagCommand, model, tagExpectedMsg, expectedModel);","lastModifiedDate":"2023-10-23"},{"lineNumber":61,"author":{"gitId":"AlyssaPng"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":62,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":63,"author":{"gitId":"AlyssaPng"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":64,"author":{"gitId":"AlyssaPng"},"content":"    void testEquals() {","lastModifiedDate":"2023-10-18"},{"lineNumber":65,"author":{"gitId":"AlyssaPng"},"content":"        GatherEmailPrompt first \u003d new GatherEmailByFinancialPlan(\"first\");","lastModifiedDate":"2023-10-23"},{"lineNumber":66,"author":{"gitId":"AlyssaPng"},"content":"        GatherEmailPrompt second \u003d new GatherEmailByFinancialPlan(\"second\");","lastModifiedDate":"2023-10-23"},{"lineNumber":67,"author":{"gitId":"AlyssaPng"},"content":"        GatherCommand gatherFirstCommand \u003d new GatherCommand(first);","lastModifiedDate":"2023-10-22"},{"lineNumber":68,"author":{"gitId":"AlyssaPng"},"content":"        GatherCommand gatherSecondCommand \u003d new GatherCommand(second);","lastModifiedDate":"2023-10-22"},{"lineNumber":69,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":70,"author":{"gitId":"AlyssaPng"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-18"},{"lineNumber":71,"author":{"gitId":"AlyssaPng"},"content":"        assertTrue(gatherFirstCommand.equals(gatherFirstCommand));","lastModifiedDate":"2023-10-18"},{"lineNumber":72,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":73,"author":{"gitId":"AlyssaPng"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-18"},{"lineNumber":74,"author":{"gitId":"AlyssaPng"},"content":"        GatherCommand gatherFirstCommandCopy \u003d new GatherCommand(first);","lastModifiedDate":"2023-10-22"},{"lineNumber":75,"author":{"gitId":"AlyssaPng"},"content":"        assertTrue(gatherFirstCommand.equals(gatherFirstCommandCopy));","lastModifiedDate":"2023-10-18"},{"lineNumber":76,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":77,"author":{"gitId":"AlyssaPng"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-18"},{"lineNumber":78,"author":{"gitId":"AlyssaPng"},"content":"        assertFalse(gatherFirstCommand.equals(1));","lastModifiedDate":"2023-10-18"},{"lineNumber":79,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":80,"author":{"gitId":"AlyssaPng"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-18"},{"lineNumber":81,"author":{"gitId":"AlyssaPng"},"content":"        assertFalse(gatherFirstCommand.equals(null));","lastModifiedDate":"2023-10-18"},{"lineNumber":82,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":83,"author":{"gitId":"AlyssaPng"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2023-10-18"},{"lineNumber":84,"author":{"gitId":"AlyssaPng"},"content":"        assertFalse(gatherFirstCommand.equals(gatherSecondCommand));","lastModifiedDate":"2023-10-18"},{"lineNumber":85,"author":{"gitId":"AlyssaPng"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":86,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":87,"author":{"gitId":"AlyssaPng"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":88,"author":{"gitId":"AlyssaPng"},"content":"    void testToString() {","lastModifiedDate":"2023-10-18"},{"lineNumber":89,"author":{"gitId":"AlyssaPng"},"content":"        GatherEmailByFinancialPlan prompt \u003d new GatherEmailByFinancialPlan(\"prompt\");","lastModifiedDate":"2023-10-23"},{"lineNumber":90,"author":{"gitId":"AlyssaPng"},"content":"        GatherCommand gatherCommand \u003d new GatherCommand(prompt);","lastModifiedDate":"2023-10-18"},{"lineNumber":91,"author":{"gitId":"AlyssaPng"},"content":"        String expected \u003d GatherCommand.class.getCanonicalName() + \"{prompt\u003d\" + prompt + \"}\";","lastModifiedDate":"2023-10-18"},{"lineNumber":92,"author":{"gitId":"AlyssaPng"},"content":"        assertEquals(expected, gatherCommand.toString());","lastModifiedDate":"2023-10-18"},{"lineNumber":93,"author":{"gitId":"AlyssaPng"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":94,"author":{"gitId":"AlyssaPng"},"content":"}","lastModifiedDate":"2023-10-18"}],"authorContributionMap":{"AlyssaPng":92,"jylow":2}},{"path":"src/test/java/seedu/address/logic/commands/ScheduleCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Kb-Tay"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-19"},{"lineNumber":2,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":3,"author":{"gitId":"Kb-Tay"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-24"},{"lineNumber":4,"author":{"gitId":"Kb-Tay"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-10-19"},{"lineNumber":5,"author":{"gitId":"Kb-Tay"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-10-19"},{"lineNumber":6,"author":{"gitId":"Kb-Tay"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2023-10-19"},{"lineNumber":7,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":8,"author":{"gitId":"Kb-Tay"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-19"},{"lineNumber":9,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":10,"author":{"gitId":"Kb-Tay"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-19"},{"lineNumber":11,"author":{"gitId":"Kb-Tay"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2023-10-19"},{"lineNumber":12,"author":{"gitId":"Kb-Tay"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-19"},{"lineNumber":13,"author":{"gitId":"Kb-Tay"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-10-19"},{"lineNumber":14,"author":{"gitId":"Kb-Tay"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-10-19"},{"lineNumber":15,"author":{"gitId":"Kb-Tay"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2023-10-19"},{"lineNumber":16,"author":{"gitId":"Kb-Tay"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-19"},{"lineNumber":17,"author":{"gitId":"Kb-Tay"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2023-10-19"},{"lineNumber":18,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":19,"author":{"gitId":"Kb-Tay"},"content":"class ScheduleCommandTest {","lastModifiedDate":"2023-10-19"},{"lineNumber":20,"author":{"gitId":"Kb-Tay"},"content":"    private static final String APPOINTMENT_DESCRIPTION_STUB \u003d \"Review Insurance, 01-01-2023 20:00\";","lastModifiedDate":"2023-10-19"},{"lineNumber":21,"author":{"gitId":"Kb-Tay"},"content":"    private static final Appointment APPOINTMENT_STUB \u003d Appointment.parseAppointmentDescription(","lastModifiedDate":"2023-10-19"},{"lineNumber":22,"author":{"gitId":"Kb-Tay"},"content":"            APPOINTMENT_DESCRIPTION_STUB);","lastModifiedDate":"2023-10-19"},{"lineNumber":23,"author":{"gitId":"Kb-Tay"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-19"},{"lineNumber":24,"author":{"gitId":"Kb-Tay"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":25,"author":{"gitId":"Kb-Tay"},"content":"    public void execute_scheduleAccepted_scheduleSuccessful() {","lastModifiedDate":"2023-10-19"},{"lineNumber":26,"author":{"gitId":"Kb-Tay"},"content":"        Person personWithoutSchedule \u003d model.getFilteredPersonList().get(0);","lastModifiedDate":"2023-10-19"},{"lineNumber":27,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":28,"author":{"gitId":"Kb-Tay"},"content":"        ScheduleCommand scheduleCommand \u003d new ScheduleCommand(INDEX_FIRST_PERSON, APPOINTMENT_STUB);","lastModifiedDate":"2023-10-19"},{"lineNumber":29,"author":{"gitId":"Kb-Tay"},"content":"        Person personWithSchedule \u003d new PersonBuilder(personWithoutSchedule)","lastModifiedDate":"2023-10-19"},{"lineNumber":30,"author":{"gitId":"Kb-Tay"},"content":"                .withAppointment(APPOINTMENT_DESCRIPTION_STUB).build();","lastModifiedDate":"2023-10-19"},{"lineNumber":31,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":32,"author":{"gitId":"Kb-Tay"},"content":"        String expectedMessage \u003d String.format(ScheduleCommand.MESSAGE_SCHEDULE_SUCCESS,","lastModifiedDate":"2023-10-19"},{"lineNumber":33,"author":{"gitId":"Kb-Tay"},"content":"                Messages.format(personWithSchedule));","lastModifiedDate":"2023-10-19"},{"lineNumber":34,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":35,"author":{"gitId":"Kb-Tay"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2023-10-19"},{"lineNumber":36,"author":{"gitId":"Kb-Tay"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), personWithSchedule);","lastModifiedDate":"2023-10-19"},{"lineNumber":37,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":38,"author":{"gitId":"Kb-Tay"},"content":"        assertCommandSuccess(scheduleCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-19"},{"lineNumber":39,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":40,"author":{"gitId":"Kb-Tay"},"content":"        //checks if the person is associated with appointment","lastModifiedDate":"2023-10-24"},{"lineNumber":41,"author":{"gitId":"Kb-Tay"},"content":"        assertTrue(personWithSchedule.getAppointment().equals(APPOINTMENT_STUB));","lastModifiedDate":"2023-10-24"},{"lineNumber":42,"author":{"gitId":"Kb-Tay"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":43,"author":{"gitId":"Kb-Tay"},"content":"}","lastModifiedDate":"2023-10-19"}],"authorContributionMap":{"Kb-Tay":43}},{"path":"src/test/java/seedu/address/logic/commands/SortCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jylow"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-18"},{"lineNumber":2,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":3,"author":{"gitId":"jylow"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-18"},{"lineNumber":4,"author":{"gitId":"jylow"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-21"},{"lineNumber":5,"author":{"gitId":"jylow"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-21"},{"lineNumber":6,"author":{"gitId":"jylow"},"content":"import static seedu.address.logic.Messages.MESSAGE_PERSONS_LISTED_OVERVIEW;","lastModifiedDate":"2023-10-18"},{"lineNumber":7,"author":{"gitId":"jylow"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-10-18"},{"lineNumber":8,"author":{"gitId":"jylow"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2023-10-18"},{"lineNumber":9,"author":{"gitId":"jylow"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2023-10-18"},{"lineNumber":10,"author":{"gitId":"jylow"},"content":"import static seedu.address.testutil.TypicalPersons.CARL;","lastModifiedDate":"2023-10-18"},{"lineNumber":11,"author":{"gitId":"jylow"},"content":"import static seedu.address.testutil.TypicalPersons.DANIEL;","lastModifiedDate":"2023-10-18"},{"lineNumber":12,"author":{"gitId":"jylow"},"content":"import static seedu.address.testutil.TypicalPersons.ELLE;","lastModifiedDate":"2023-10-18"},{"lineNumber":13,"author":{"gitId":"jylow"},"content":"import static seedu.address.testutil.TypicalPersons.FIONA;","lastModifiedDate":"2023-10-18"},{"lineNumber":14,"author":{"gitId":"jylow"},"content":"import static seedu.address.testutil.TypicalPersons.GEORGE;","lastModifiedDate":"2023-10-18"},{"lineNumber":15,"author":{"gitId":"jylow"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2023-10-18"},{"lineNumber":16,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":17,"author":{"gitId":"jylow"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-10-18"},{"lineNumber":18,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":19,"author":{"gitId":"jylow"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-18"},{"lineNumber":20,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":21,"author":{"gitId":"jylow"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-18"},{"lineNumber":22,"author":{"gitId":"jylow"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-10-18"},{"lineNumber":23,"author":{"gitId":"jylow"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-10-18"},{"lineNumber":24,"author":{"gitId":"jylow"},"content":"import seedu.address.model.person.comparator.SortByAppointmentComparator;","lastModifiedDate":"2023-11-10"},{"lineNumber":25,"author":{"gitId":"jylow"},"content":"import seedu.address.model.person.comparator.SortByNameComparator;","lastModifiedDate":"2023-11-10"},{"lineNumber":26,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":27,"author":{"gitId":"jylow"},"content":"public class SortCommandTest {","lastModifiedDate":"2023-10-18"},{"lineNumber":28,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":29,"author":{"gitId":"jylow"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-18"},{"lineNumber":30,"author":{"gitId":"jylow"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-18"},{"lineNumber":31,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":32,"author":{"gitId":"jylow"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":33,"author":{"gitId":"jylow"},"content":"    public void execute_sortSortCommand() {","lastModifiedDate":"2023-10-20"},{"lineNumber":34,"author":{"gitId":"jylow"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 7);","lastModifiedDate":"2023-10-18"},{"lineNumber":35,"author":{"gitId":"jylow"},"content":"        SortByNameComparator comparator \u003d new SortByNameComparator();","lastModifiedDate":"2023-10-18"},{"lineNumber":36,"author":{"gitId":"jylow"},"content":"        SortCommand command \u003d new SortCommand(comparator);","lastModifiedDate":"2023-10-20"},{"lineNumber":37,"author":{"gitId":"jylow"},"content":"        expectedModel.sortFilteredPersonList(comparator);","lastModifiedDate":"2023-10-18"},{"lineNumber":38,"author":{"gitId":"jylow"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-18"},{"lineNumber":39,"author":{"gitId":"nikele2001"},"content":"        assertEquals(model.getAppointmentList(), expectedModel.getAppointmentList());","lastModifiedDate":"2023-10-24"},{"lineNumber":40,"author":{"gitId":"jylow"},"content":"        assertEquals(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE), model.getFilteredPersonList());","lastModifiedDate":"2023-10-18"},{"lineNumber":41,"author":{"gitId":"jylow"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":42,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":43,"author":{"gitId":"jylow"},"content":"    @Test","lastModifiedDate":"2023-10-21"},{"lineNumber":44,"author":{"gitId":"jylow"},"content":"    public void equals() {","lastModifiedDate":"2023-10-21"},{"lineNumber":45,"author":{"gitId":"jylow"},"content":"        SortByNameComparator nameComparator \u003d new SortByNameComparator();","lastModifiedDate":"2023-10-21"},{"lineNumber":46,"author":{"gitId":"jylow"},"content":"        SortByAppointmentComparator appointmentComparator \u003d new SortByAppointmentComparator();","lastModifiedDate":"2023-10-21"},{"lineNumber":47,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":48,"author":{"gitId":"jylow"},"content":"        SortCommand sortNameCommand \u003d new SortCommand(nameComparator);","lastModifiedDate":"2023-11-08"},{"lineNumber":49,"author":{"gitId":"jylow"},"content":"        SortCommand appointmentSortCommand \u003d new SortCommand(appointmentComparator);","lastModifiedDate":"2023-10-21"},{"lineNumber":50,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":51,"author":{"gitId":"jylow"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-21"},{"lineNumber":52,"author":{"gitId":"jylow"},"content":"        assertTrue(sortNameCommand.equals(sortNameCommand));","lastModifiedDate":"2023-11-08"},{"lineNumber":53,"author":{"gitId":"jylow"},"content":"        assertTrue(appointmentSortCommand.equals(appointmentSortCommand));","lastModifiedDate":"2023-10-21"},{"lineNumber":54,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":55,"author":{"gitId":"jylow"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-21"},{"lineNumber":56,"author":{"gitId":"jylow"},"content":"        assertFalse(sortNameCommand.equals(1));","lastModifiedDate":"2023-11-08"},{"lineNumber":57,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":58,"author":{"gitId":"jylow"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-21"},{"lineNumber":59,"author":{"gitId":"jylow"},"content":"        assertFalse(sortNameCommand.equals(null));","lastModifiedDate":"2023-11-08"},{"lineNumber":60,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":61,"author":{"gitId":"jylow"},"content":"        // different command -\u003e returns false","lastModifiedDate":"2023-10-21"},{"lineNumber":62,"author":{"gitId":"jylow"},"content":"        assertFalse(sortNameCommand.equals(appointmentSortCommand));","lastModifiedDate":"2023-11-08"},{"lineNumber":63,"author":{"gitId":"jylow"},"content":"        assertFalse(appointmentSortCommand.equals(sortNameCommand));","lastModifiedDate":"2023-11-08"},{"lineNumber":64,"author":{"gitId":"jylow"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":65,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":66,"author":{"gitId":"jylow"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":67,"author":{"gitId":"jylow"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-18"},{"lineNumber":68,"author":{"gitId":"jylow"},"content":"        SortByNameComparator comparator \u003d new SortByNameComparator();","lastModifiedDate":"2023-10-18"},{"lineNumber":69,"author":{"gitId":"jylow"},"content":"        SortCommand sortCommand \u003d new SortCommand(comparator);","lastModifiedDate":"2023-10-20"},{"lineNumber":70,"author":{"gitId":"jylow"},"content":"        String expected \u003d SortCommand.class.getCanonicalName() + \"{comparator\u003d\" + comparator + \"}\";","lastModifiedDate":"2023-10-18"},{"lineNumber":71,"author":{"gitId":"jylow"},"content":"        assertEquals(expected, sortCommand.toString());","lastModifiedDate":"2023-10-18"},{"lineNumber":72,"author":{"gitId":"jylow"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":73,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":74,"author":{"gitId":"jylow"},"content":"    @Test","lastModifiedDate":"2023-10-20"},{"lineNumber":75,"author":{"gitId":"jylow"},"content":"    public void execute_sortAppointmentCommand() {","lastModifiedDate":"2023-10-20"},{"lineNumber":76,"author":{"gitId":"jylow"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 7);","lastModifiedDate":"2023-10-20"},{"lineNumber":77,"author":{"gitId":"jylow"},"content":"        SortByAppointmentComparator comparator \u003d new SortByAppointmentComparator();","lastModifiedDate":"2023-10-20"},{"lineNumber":78,"author":{"gitId":"jylow"},"content":"        SortCommand command \u003d new SortCommand(comparator);","lastModifiedDate":"2023-10-20"},{"lineNumber":79,"author":{"gitId":"jylow"},"content":"        expectedModel.sortFilteredPersonList(comparator);","lastModifiedDate":"2023-10-20"},{"lineNumber":80,"author":{"gitId":"jylow"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-20"},{"lineNumber":81,"author":{"gitId":"nikele2001"},"content":"        assertEquals(model.getAppointmentList(), expectedModel.getAppointmentList());","lastModifiedDate":"2023-10-24"},{"lineNumber":82,"author":{"gitId":"jylow"},"content":"        assertEquals(Arrays.asList(CARL, BENSON, ALICE, DANIEL, ELLE, FIONA, GEORGE), model.getFilteredPersonList());","lastModifiedDate":"2023-11-08"},{"lineNumber":83,"author":{"gitId":"jylow"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":84,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":85,"author":{"gitId":"jylow"},"content":"}","lastModifiedDate":"2023-10-18"}],"authorContributionMap":{"nikele2001":2,"jylow":83}},{"path":"src/test/java/seedu/address/logic/parser/AddCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"nikele2001"},"content":"import static seedu.address.logic.commands.CommandTestUtil.FINANCIAL_PLAN_DESC_1;","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"nikele2001"},"content":"import static seedu.address.logic.commands.CommandTestUtil.FINANCIAL_PLAN_DESC_2;","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"nikele2001"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NEXT_OF_KIN_NAME_DESC;","lastModifiedDate":"2023-10-17"},{"lineNumber":14,"author":{"gitId":"nikele2001"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NEXT_OF_KIN_PHONE_DESC;","lastModifiedDate":"2023-10-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"nikele2001"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NEXT_OF_KIN_NAME_DESC_AMY;","lastModifiedDate":"2023-10-17"},{"lineNumber":20,"author":{"gitId":"nikele2001"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NEXT_OF_KIN_NAME_DESC_BOB;","lastModifiedDate":"2023-10-17"},{"lineNumber":21,"author":{"gitId":"nikele2001"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NEXT_OF_KIN_PHONE_DESC_AMY;","lastModifiedDate":"2023-10-17"},{"lineNumber":22,"author":{"gitId":"nikele2001"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NEXT_OF_KIN_PHONE_DESC_BOB;","lastModifiedDate":"2023-10-17"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2023-10-17"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2023-10-17"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2023-10-17"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2023-10-17"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2023-10-17"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2023-10-17"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2023-10-17"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2023-10-17"},{"lineNumber":31,"author":{"gitId":"nikele2001"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_FINANCIAL_PLAN_1;","lastModifiedDate":"2023-10-17"},{"lineNumber":32,"author":{"gitId":"nikele2001"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_FINANCIAL_PLAN_2;","lastModifiedDate":"2023-10-17"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2023-10-17"},{"lineNumber":34,"author":{"gitId":"nikele2001"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NEXT_OF_KIN_NAME_BOB;","lastModifiedDate":"2023-10-17"},{"lineNumber":35,"author":{"gitId":"nikele2001"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NEXT_OF_KIN_PHONE_BOB;","lastModifiedDate":"2023-10-17"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2023-10-17"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2023-10-17"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2023-10-17"},{"lineNumber":39,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-07-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-07-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-07-14"},{"lineNumber":42,"author":{"gitId":"sopa301"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NEXT_OF_KIN_NAME;","lastModifiedDate":"2023-09-29"},{"lineNumber":43,"author":{"gitId":"sopa301"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NEXT_OF_KIN_PHONE;","lastModifiedDate":"2023-09-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-07-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2018-07-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-07-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":52,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-06-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-06-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-06-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-06-15"},{"lineNumber":57,"author":{"gitId":"sopa301"},"content":"import seedu.address.model.person.NextOfKinName;","lastModifiedDate":"2023-09-28"},{"lineNumber":58,"author":{"gitId":"sopa301"},"content":"import seedu.address.model.person.NextOfKinPhone;","lastModifiedDate":"2023-09-28"},{"lineNumber":59,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-06-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-06-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"public class AddCommandParserTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    private AddCommandParser parser \u003d new AddCommandParser();","lastModifiedDate":"2017-06-15"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":69,"author":{"gitId":"nikele2001"},"content":"        Person expectedPerson \u003d new PersonBuilder(BOB).withTags(VALID_TAG_FRIEND)","lastModifiedDate":"2023-10-16"},{"lineNumber":70,"author":{"gitId":"nikele2001"},"content":"                .withFinancialPlans(VALID_FINANCIAL_PLAN_1, VALID_FINANCIAL_PLAN_2).build();","lastModifiedDate":"2023-10-16"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // whitespace only preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":74,"author":{"gitId":"nikele2001"},"content":"                + ADDRESS_DESC_BOB + NEXT_OF_KIN_NAME_DESC_BOB + NEXT_OF_KIN_PHONE_DESC_BOB + FINANCIAL_PLAN_DESC_1","lastModifiedDate":"2023-10-16"},{"lineNumber":75,"author":{"gitId":"nikele2001"},"content":"                        + FINANCIAL_PLAN_DESC_2 + TAG_DESC_FRIEND,","lastModifiedDate":"2023-10-16"},{"lineNumber":76,"author":{"gitId":"sopa301"},"content":"                new AddCommand(expectedPerson));","lastModifiedDate":"2023-09-28"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // multiple tags - all accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        Person expectedPersonMultipleTags \u003d new PersonBuilder(BOB).withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND)","lastModifiedDate":"2018-07-25"},{"lineNumber":81,"author":{"gitId":"nikele2001"},"content":"                .withFinancialPlans(VALID_FINANCIAL_PLAN_1, VALID_FINANCIAL_PLAN_2).build();","lastModifiedDate":"2023-10-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser,","lastModifiedDate":"2023-07-14"},{"lineNumber":83,"author":{"gitId":"sopa301"},"content":"                NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB + NEXT_OF_KIN_NAME_DESC_BOB","lastModifiedDate":"2023-09-29"},{"lineNumber":84,"author":{"gitId":"nikele2001"},"content":"                        + NEXT_OF_KIN_PHONE_DESC_BOB + TAG_DESC_HUSBAND + FINANCIAL_PLAN_DESC_1 + FINANCIAL_PLAN_DESC_2","lastModifiedDate":"2023-10-16"},{"lineNumber":85,"author":{"gitId":"nikele2001"},"content":"                        + TAG_DESC_FRIEND,","lastModifiedDate":"2023-10-16"},{"lineNumber":86,"author":{"gitId":"-"},"content":"                new AddCommand(expectedPersonMultipleTags));","lastModifiedDate":"2023-07-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-07-14"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-07-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void parse_repeatedNonTagValue_failure() {","lastModifiedDate":"2023-07-14"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        String validExpectedPersonString \u003d NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2023-07-14"},{"lineNumber":92,"author":{"gitId":"sopa301"},"content":"                + ADDRESS_DESC_BOB + NEXT_OF_KIN_NAME_DESC_BOB + NEXT_OF_KIN_PHONE_DESC_BOB + TAG_DESC_FRIEND;","lastModifiedDate":"2023-09-29"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // multiple names","lastModifiedDate":"2023-07-14"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":96,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME));","lastModifiedDate":"2023-07-14"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        // multiple phones","lastModifiedDate":"2023-07-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, PHONE_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // multiple emails","lastModifiedDate":"2023-07-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, EMAIL_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_EMAIL));","lastModifiedDate":"2023-07-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        // multiple addresses","lastModifiedDate":"2023-07-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, ADDRESS_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_ADDRESS));","lastModifiedDate":"2023-07-14"},{"lineNumber":109,"author":{"gitId":"sopa301"},"content":"        // multiple nextOfKinNames","lastModifiedDate":"2023-09-28"},{"lineNumber":110,"author":{"gitId":"sopa301"},"content":"        assertParseFailure(parser, NEXT_OF_KIN_NAME_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2023-09-29"},{"lineNumber":111,"author":{"gitId":"sopa301"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NEXT_OF_KIN_NAME));","lastModifiedDate":"2023-09-29"},{"lineNumber":112,"author":{"gitId":"sopa301"},"content":"        // multiple nextOfKinPhones","lastModifiedDate":"2023-09-28"},{"lineNumber":113,"author":{"gitId":"sopa301"},"content":"        assertParseFailure(parser, NEXT_OF_KIN_PHONE_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2023-09-29"},{"lineNumber":114,"author":{"gitId":"sopa301"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NEXT_OF_KIN_PHONE));","lastModifiedDate":"2023-09-29"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        // multiple fields repeated","lastModifiedDate":"2023-07-14"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2023-07-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"                validExpectedPersonString + PHONE_DESC_AMY + EMAIL_DESC_AMY + NAME_DESC_AMY + ADDRESS_DESC_AMY","lastModifiedDate":"2023-07-14"},{"lineNumber":119,"author":{"gitId":"sopa301"},"content":"                        + NEXT_OF_KIN_NAME_DESC_AMY + NEXT_OF_KIN_PHONE_DESC_AMY","lastModifiedDate":"2023-09-29"},{"lineNumber":120,"author":{"gitId":"-"},"content":"                        + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":121,"author":{"gitId":"sopa301"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME, PREFIX_ADDRESS, PREFIX_EMAIL, PREFIX_PHONE,","lastModifiedDate":"2023-09-28"},{"lineNumber":122,"author":{"gitId":"sopa301"},"content":"                        PREFIX_NEXT_OF_KIN_NAME, PREFIX_NEXT_OF_KIN_PHONE));","lastModifiedDate":"2023-09-29"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        // invalid value followed by valid value","lastModifiedDate":"2023-07-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2023-07-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME));","lastModifiedDate":"2023-07-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2023-07-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_EMAIL_DESC + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_EMAIL));","lastModifiedDate":"2023-07-14"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2023-07-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_PHONE_DESC + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        // invalid address","lastModifiedDate":"2023-07-14"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_ADDRESS_DESC + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":140,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_ADDRESS));","lastModifiedDate":"2023-07-14"},{"lineNumber":141,"author":{"gitId":"sopa301"},"content":"        // invalid nextOfKinName","lastModifiedDate":"2023-09-28"},{"lineNumber":142,"author":{"gitId":"sopa301"},"content":"        assertParseFailure(parser, INVALID_NEXT_OF_KIN_NAME_DESC + validExpectedPersonString,","lastModifiedDate":"2023-09-29"},{"lineNumber":143,"author":{"gitId":"sopa301"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NEXT_OF_KIN_NAME));","lastModifiedDate":"2023-09-29"},{"lineNumber":144,"author":{"gitId":"sopa301"},"content":"        // invalid nextOfKinPhone","lastModifiedDate":"2023-09-28"},{"lineNumber":145,"author":{"gitId":"sopa301"},"content":"        assertParseFailure(parser, INVALID_NEXT_OF_KIN_PHONE_DESC + validExpectedPersonString,","lastModifiedDate":"2023-09-29"},{"lineNumber":146,"author":{"gitId":"sopa301"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NEXT_OF_KIN_PHONE));","lastModifiedDate":"2023-09-29"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        // valid value followed by invalid value","lastModifiedDate":"2023-07-14"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2023-07-14"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_NAME_DESC,","lastModifiedDate":"2023-07-14"},{"lineNumber":151,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME));","lastModifiedDate":"2023-07-14"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2023-07-14"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_EMAIL_DESC,","lastModifiedDate":"2023-07-14"},{"lineNumber":155,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_EMAIL));","lastModifiedDate":"2023-07-14"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2023-07-14"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_PHONE_DESC,","lastModifiedDate":"2023-07-14"},{"lineNumber":159,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        // invalid address","lastModifiedDate":"2023-07-14"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_ADDRESS_DESC,","lastModifiedDate":"2023-07-14"},{"lineNumber":163,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_ADDRESS));","lastModifiedDate":"2023-07-14"},{"lineNumber":164,"author":{"gitId":"sopa301"},"content":"        // invalid nextOfKinName","lastModifiedDate":"2023-09-28"},{"lineNumber":165,"author":{"gitId":"sopa301"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_NEXT_OF_KIN_NAME_DESC,","lastModifiedDate":"2023-09-29"},{"lineNumber":166,"author":{"gitId":"sopa301"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NEXT_OF_KIN_NAME));","lastModifiedDate":"2023-09-29"},{"lineNumber":167,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":168,"author":{"gitId":"sopa301"},"content":"        // invalid nextOfKinPhone","lastModifiedDate":"2023-09-28"},{"lineNumber":169,"author":{"gitId":"sopa301"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_NEXT_OF_KIN_PHONE_DESC,","lastModifiedDate":"2023-09-29"},{"lineNumber":170,"author":{"gitId":"sopa301"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NEXT_OF_KIN_PHONE));","lastModifiedDate":"2023-09-29"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    public void parse_optionalFieldsMissing_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        // zero tags","lastModifiedDate":"2017-06-15"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withTags().build();","lastModifiedDate":"2018-07-25"},{"lineNumber":177,"author":{"gitId":"sopa301"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY + ADDRESS_DESC_AMY","lastModifiedDate":"2023-09-28"},{"lineNumber":178,"author":{"gitId":"nikele2001"},"content":"                + NEXT_OF_KIN_NAME_DESC_AMY + FINANCIAL_PLAN_DESC_1 + NEXT_OF_KIN_PHONE_DESC_AMY,","lastModifiedDate":"2023-10-16"},{"lineNumber":179,"author":{"gitId":"-"},"content":"                new AddCommand(expectedPerson));","lastModifiedDate":"2017-12-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-06-15"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        // missing name prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":187,"author":{"gitId":"sopa301"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2023-09-28"},{"lineNumber":188,"author":{"gitId":"sopa301"},"content":"                        + NEXT_OF_KIN_NAME_DESC_BOB + NEXT_OF_KIN_PHONE_DESC_BOB,","lastModifiedDate":"2023-09-29"},{"lineNumber":189,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        // missing phone prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":192,"author":{"gitId":"sopa301"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + VALID_PHONE_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2023-09-28"},{"lineNumber":193,"author":{"gitId":"sopa301"},"content":"                        + NEXT_OF_KIN_NAME_DESC_BOB + NEXT_OF_KIN_PHONE_DESC_BOB,","lastModifiedDate":"2023-09-29"},{"lineNumber":194,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        // missing email prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":197,"author":{"gitId":"sopa301"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + VALID_EMAIL_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2023-09-28"},{"lineNumber":198,"author":{"gitId":"sopa301"},"content":"                        + NEXT_OF_KIN_NAME_DESC_BOB + NEXT_OF_KIN_PHONE_DESC_BOB,","lastModifiedDate":"2023-09-29"},{"lineNumber":199,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        // missing address prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":202,"author":{"gitId":"sopa301"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + VALID_ADDRESS_BOB","lastModifiedDate":"2023-09-28"},{"lineNumber":203,"author":{"gitId":"sopa301"},"content":"                        + NEXT_OF_KIN_NAME_DESC_BOB + NEXT_OF_KIN_PHONE_DESC_BOB,","lastModifiedDate":"2023-09-29"},{"lineNumber":204,"author":{"gitId":"sopa301"},"content":"                expectedMessage);","lastModifiedDate":"2023-09-28"},{"lineNumber":205,"author":{"gitId":"sopa301"},"content":"        // missing nextOfKinName prefix","lastModifiedDate":"2023-09-28"},{"lineNumber":206,"author":{"gitId":"sopa301"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2023-09-28"},{"lineNumber":207,"author":{"gitId":"sopa301"},"content":"                        + VALID_NEXT_OF_KIN_NAME_BOB + NEXT_OF_KIN_PHONE_DESC_BOB,","lastModifiedDate":"2023-09-29"},{"lineNumber":208,"author":{"gitId":"sopa301"},"content":"                expectedMessage);","lastModifiedDate":"2023-09-28"},{"lineNumber":209,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":210,"author":{"gitId":"sopa301"},"content":"        // missing nextOfKinPhone prefix","lastModifiedDate":"2023-09-28"},{"lineNumber":211,"author":{"gitId":"sopa301"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2023-09-28"},{"lineNumber":212,"author":{"gitId":"sopa301"},"content":"                        + NEXT_OF_KIN_NAME_DESC_BOB + VALID_NEXT_OF_KIN_PHONE_BOB,","lastModifiedDate":"2023-09-29"},{"lineNumber":213,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        // all prefixes missing","lastModifiedDate":"2017-06-15"},{"lineNumber":216,"author":{"gitId":"sopa301"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + VALID_PHONE_BOB + VALID_EMAIL_BOB + VALID_ADDRESS_BOB","lastModifiedDate":"2023-09-28"},{"lineNumber":217,"author":{"gitId":"sopa301"},"content":"                + VALID_NEXT_OF_KIN_NAME_BOB + VALID_NEXT_OF_KIN_PHONE_BOB,","lastModifiedDate":"2023-09-29"},{"lineNumber":218,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":223,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-06-15"},{"lineNumber":224,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":225,"author":{"gitId":"sopa301"},"content":"                + NEXT_OF_KIN_NAME_DESC_BOB + NEXT_OF_KIN_PHONE_DESC_BOB","lastModifiedDate":"2023-09-29"},{"lineNumber":226,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":228,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2017-06-15"},{"lineNumber":229,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + INVALID_PHONE_DESC + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":230,"author":{"gitId":"sopa301"},"content":"                + NEXT_OF_KIN_NAME_DESC_BOB + NEXT_OF_KIN_PHONE_DESC_BOB","lastModifiedDate":"2023-09-29"},{"lineNumber":231,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":233,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2017-06-15"},{"lineNumber":234,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + INVALID_EMAIL_DESC + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":235,"author":{"gitId":"sopa301"},"content":"                + NEXT_OF_KIN_NAME_DESC_BOB + NEXT_OF_KIN_PHONE_DESC_BOB","lastModifiedDate":"2023-09-29"},{"lineNumber":236,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":237,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":238,"author":{"gitId":"-"},"content":"        // invalid address","lastModifiedDate":"2017-06-15"},{"lineNumber":239,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_ADDRESS_DESC","lastModifiedDate":"2017-12-23"},{"lineNumber":240,"author":{"gitId":"sopa301"},"content":"                + NEXT_OF_KIN_NAME_DESC_BOB + NEXT_OF_KIN_PHONE_DESC_BOB","lastModifiedDate":"2023-09-29"},{"lineNumber":241,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":242,"author":{"gitId":"sopa301"},"content":"        // invalid nextOfKinName","lastModifiedDate":"2023-09-28"},{"lineNumber":243,"author":{"gitId":"sopa301"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2023-09-28"},{"lineNumber":244,"author":{"gitId":"sopa301"},"content":"                + INVALID_NEXT_OF_KIN_NAME_DESC + NEXT_OF_KIN_PHONE_DESC_BOB","lastModifiedDate":"2023-09-29"},{"lineNumber":245,"author":{"gitId":"sopa301"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, NextOfKinName.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-09-28"},{"lineNumber":246,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":247,"author":{"gitId":"sopa301"},"content":"        // invalid nextOfKinPhone","lastModifiedDate":"2023-09-28"},{"lineNumber":248,"author":{"gitId":"sopa301"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2023-09-28"},{"lineNumber":249,"author":{"gitId":"sopa301"},"content":"                + NEXT_OF_KIN_NAME_DESC_BOB + INVALID_NEXT_OF_KIN_PHONE_DESC","lastModifiedDate":"2023-09-29"},{"lineNumber":250,"author":{"gitId":"sopa301"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, NextOfKinPhone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-09-28"},{"lineNumber":251,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":253,"author":{"gitId":"-"},"content":"        // invalid tag","lastModifiedDate":"2017-06-15"},{"lineNumber":254,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":255,"author":{"gitId":"nikele2001"},"content":"                + NEXT_OF_KIN_NAME_DESC_BOB + NEXT_OF_KIN_PHONE_DESC_BOB + FINANCIAL_PLAN_DESC_1","lastModifiedDate":"2023-10-16"},{"lineNumber":256,"author":{"gitId":"-"},"content":"                + INVALID_TAG_DESC + VALID_TAG_FRIEND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":258,"author":{"gitId":"-"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2017-06-15"},{"lineNumber":259,"author":{"gitId":"sopa301"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_ADDRESS_DESC","lastModifiedDate":"2023-09-28"},{"lineNumber":260,"author":{"gitId":"sopa301"},"content":"                        + NEXT_OF_KIN_NAME_DESC_BOB + NEXT_OF_KIN_PHONE_DESC_BOB,","lastModifiedDate":"2023-09-29"},{"lineNumber":261,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"        // non-empty preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":265,"author":{"gitId":"sopa301"},"content":"                        + ADDRESS_DESC_BOB + NEXT_OF_KIN_NAME_DESC_BOB + NEXT_OF_KIN_PHONE_DESC_BOB + TAG_DESC_HUSBAND","lastModifiedDate":"2023-09-29"},{"lineNumber":266,"author":{"gitId":"sopa301"},"content":"                        + TAG_DESC_FRIEND,","lastModifiedDate":"2023-09-29"},{"lineNumber":267,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-12-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":269,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"nikele2001":21,"sopa301":67,"-":181}},{"path":"src/test/java/seedu/address/logic/parser/AddressBookParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-07-13"},{"lineNumber":7,"author":{"gitId":"AlyssaPng"},"content":"import static seedu.address.logic.commands.CommandTestUtil.FINANCIAL_PLAN_DESC_1;","lastModifiedDate":"2023-10-23"},{"lineNumber":8,"author":{"gitId":"AlyssaPng"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2023-10-23"},{"lineNumber":9,"author":{"gitId":"AlyssaPng"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_FINANCIAL_PLAN_1;","lastModifiedDate":"2023-10-23"},{"lineNumber":10,"author":{"gitId":"AlyssaPng"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2023-10-23"},{"lineNumber":11,"author":{"gitId":"sopa301"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-10-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-06-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-06-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":28,"author":{"gitId":"AlyssaPng"},"content":"import seedu.address.logic.commands.GatherCommand;","lastModifiedDate":"2023-10-18"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-27"},{"lineNumber":33,"author":{"gitId":"AlyssaPng"},"content":"import seedu.address.model.person.gatheremail.GatherEmailByFinancialPlan;","lastModifiedDate":"2023-10-23"},{"lineNumber":34,"author":{"gitId":"AlyssaPng"},"content":"import seedu.address.model.person.gatheremail.GatherEmailByTag;","lastModifiedDate":"2023-10-23"},{"lineNumber":35,"author":{"gitId":"sopa301"},"content":"import seedu.address.model.person.predicates.CombinedPredicate;","lastModifiedDate":"2023-10-25"},{"lineNumber":36,"author":{"gitId":"sopa301"},"content":"import seedu.address.model.person.predicates.FinancialPlanContainsKeywordsPredicate;","lastModifiedDate":"2023-10-25"},{"lineNumber":37,"author":{"gitId":"sopa301"},"content":"import seedu.address.model.person.predicates.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-10-25"},{"lineNumber":38,"author":{"gitId":"sopa301"},"content":"import seedu.address.model.person.predicates.TagContainsKeywordsPredicate;","lastModifiedDate":"2023-10-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonUtil;","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"public class AddressBookParserTest {","lastModifiedDate":"2017-07-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private final AddressBookParser parser \u003d new AddressBookParser();","lastModifiedDate":"2017-07-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void parseCommand_add() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        AddCommand command \u003d (AddCommand) parser.parseCommand(PersonUtil.getAddCommand(person));","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertEquals(new AddCommand(person), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD) instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD + \" 3\") instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void parseCommand_delete() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        DeleteCommand command \u003d (DeleteCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                DeleteCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased());","lastModifiedDate":"2017-06-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertEquals(new DeleteCommand(INDEX_FIRST_PERSON), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void parseCommand_edit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(person).build();","lastModifiedDate":"2017-06-27"},{"lineNumber":71,"author":{"gitId":"nikele2001"},"content":"        System.out.println(descriptor);","lastModifiedDate":"2023-10-16"},{"lineNumber":72,"author":{"gitId":"nikele2001"},"content":"        System.out.println(PersonUtil.getEditPersonDescriptorDetails(descriptor));","lastModifiedDate":"2023-10-16"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        EditCommand command \u003d (EditCommand) parser.parseCommand(EditCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"                + INDEX_FIRST_PERSON.getOneBased() + \" \" + PersonUtil.getEditPersonDescriptorDetails(descriptor));","lastModifiedDate":"2018-03-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertEquals(new EditCommand(INDEX_FIRST_PERSON, descriptor), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void parseCommand_find() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2017-06-12"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        FindCommand command \u003d (FindCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"sopa301"},"content":"                FindCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2023-10-25"},{"lineNumber":89,"author":{"gitId":"sopa301"},"content":"                        + keywords.stream().map(name -\u003e PREFIX_NAME + name).collect(Collectors.joining(\" \")));","lastModifiedDate":"2023-10-25"},{"lineNumber":90,"author":{"gitId":"sopa301"},"content":"        assertEquals(","lastModifiedDate":"2023-10-25"},{"lineNumber":91,"author":{"gitId":"sopa301"},"content":"                new FindCommand(","lastModifiedDate":"2023-10-25"},{"lineNumber":92,"author":{"gitId":"sopa301"},"content":"                        new CombinedPredicate(","lastModifiedDate":"2023-10-25"},{"lineNumber":93,"author":{"gitId":"sopa301"},"content":"                                new FinancialPlanContainsKeywordsPredicate(List.of()),","lastModifiedDate":"2023-10-25"},{"lineNumber":94,"author":{"gitId":"sopa301"},"content":"                                new NameContainsKeywordsPredicate(keywords),","lastModifiedDate":"2023-10-25"},{"lineNumber":95,"author":{"gitId":"sopa301"},"content":"                                new TagContainsKeywordsPredicate(List.of()))),","lastModifiedDate":"2023-10-25"},{"lineNumber":96,"author":{"gitId":"sopa301"},"content":"                command);","lastModifiedDate":"2023-10-25"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"AlyssaPng"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":100,"author":{"gitId":"AlyssaPng"},"content":"    public void parseCommand_gather() throws Exception {","lastModifiedDate":"2023-10-23"},{"lineNumber":101,"author":{"gitId":"AlyssaPng"},"content":"        // financial plan","lastModifiedDate":"2023-10-23"},{"lineNumber":102,"author":{"gitId":"AlyssaPng"},"content":"        GatherEmailByFinancialPlan fpPrompt \u003d new GatherEmailByFinancialPlan(VALID_FINANCIAL_PLAN_1);","lastModifiedDate":"2023-10-23"},{"lineNumber":103,"author":{"gitId":"AlyssaPng"},"content":"        GatherCommand fpCommand \u003d (GatherCommand) parser.parseCommand(","lastModifiedDate":"2023-10-23"},{"lineNumber":104,"author":{"gitId":"AlyssaPng"},"content":"                GatherCommand.COMMAND_WORD + FINANCIAL_PLAN_DESC_1);","lastModifiedDate":"2023-10-23"},{"lineNumber":105,"author":{"gitId":"AlyssaPng"},"content":"        assertEquals(new GatherCommand(fpPrompt), fpCommand);","lastModifiedDate":"2023-10-23"},{"lineNumber":106,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":107,"author":{"gitId":"AlyssaPng"},"content":"        // tag","lastModifiedDate":"2023-10-23"},{"lineNumber":108,"author":{"gitId":"AlyssaPng"},"content":"        GatherEmailByTag tagPrompt \u003d new GatherEmailByTag(VALID_TAG_HUSBAND);","lastModifiedDate":"2023-10-23"},{"lineNumber":109,"author":{"gitId":"AlyssaPng"},"content":"        GatherCommand tagCommand \u003d (GatherCommand) parser.parseCommand(","lastModifiedDate":"2023-10-23"},{"lineNumber":110,"author":{"gitId":"AlyssaPng"},"content":"                GatherCommand.COMMAND_WORD + TAG_DESC_HUSBAND);","lastModifiedDate":"2023-10-23"},{"lineNumber":111,"author":{"gitId":"AlyssaPng"},"content":"        assertEquals(new GatherCommand(tagPrompt), tagCommand);","lastModifiedDate":"2023-10-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    public void parseCommand_list() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD) instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD + \" 3\") instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2019-03-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":136,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"AlyssaPng":20,"nikele2001":2,"sopa301":14,"-":100}},{"path":"src/test/java/seedu/address/logic/parser/CompleteCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Kb-Tay"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-26"},{"lineNumber":2,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":3,"author":{"gitId":"Kb-Tay"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-26"},{"lineNumber":4,"author":{"gitId":"Kb-Tay"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2023-10-26"},{"lineNumber":5,"author":{"gitId":"Kb-Tay"},"content":"import static seedu.address.logic.commands.CompleteCommand.MESSAGE_INVALID_DATE;","lastModifiedDate":"2023-10-26"},{"lineNumber":6,"author":{"gitId":"Kb-Tay"},"content":"import static seedu.address.logic.commands.CompleteCommand.MESSAGE_INVALID_DATE_FORMAT;","lastModifiedDate":"2023-10-26"},{"lineNumber":7,"author":{"gitId":"Kb-Tay"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_APPOINTMENT_DATE;","lastModifiedDate":"2023-10-26"},{"lineNumber":8,"author":{"gitId":"Kb-Tay"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-10-26"},{"lineNumber":9,"author":{"gitId":"Kb-Tay"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-10-26"},{"lineNumber":10,"author":{"gitId":"Kb-Tay"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-10-26"},{"lineNumber":11,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":12,"author":{"gitId":"Kb-Tay"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-10-26"},{"lineNumber":13,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":14,"author":{"gitId":"Kb-Tay"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-26"},{"lineNumber":15,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":16,"author":{"gitId":"Kb-Tay"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-26"},{"lineNumber":17,"author":{"gitId":"Kb-Tay"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-26"},{"lineNumber":18,"author":{"gitId":"Kb-Tay"},"content":"import seedu.address.logic.commands.CompleteByDate;","lastModifiedDate":"2023-11-07"},{"lineNumber":19,"author":{"gitId":"Kb-Tay"},"content":"import seedu.address.logic.commands.CompleteByIndex;","lastModifiedDate":"2023-11-07"},{"lineNumber":20,"author":{"gitId":"Kb-Tay"},"content":"import seedu.address.logic.commands.CompleteCommand;","lastModifiedDate":"2023-10-26"},{"lineNumber":21,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":22,"author":{"gitId":"Kb-Tay"},"content":"class CompleteCommandParserTest {","lastModifiedDate":"2023-10-26"},{"lineNumber":23,"author":{"gitId":"Kb-Tay"},"content":"    public static final String DATE_DESC \u003d \" \" + PREFIX_APPOINTMENT_DATE;","lastModifiedDate":"2023-10-26"},{"lineNumber":24,"author":{"gitId":"Kb-Tay"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2023-10-26"},{"lineNumber":25,"author":{"gitId":"Kb-Tay"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, CompleteCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-10-26"},{"lineNumber":26,"author":{"gitId":"Kb-Tay"},"content":"    private CompleteCommandParser parser \u003d new CompleteCommandParser();","lastModifiedDate":"2023-10-26"},{"lineNumber":27,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":28,"author":{"gitId":"Kb-Tay"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":29,"author":{"gitId":"Kb-Tay"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2023-10-26"},{"lineNumber":30,"author":{"gitId":"Kb-Tay"},"content":"        // negative index","lastModifiedDate":"2023-10-26"},{"lineNumber":31,"author":{"gitId":"Kb-Tay"},"content":"        assertParseFailure(parser, \"-5\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-10-26"},{"lineNumber":32,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":33,"author":{"gitId":"Kb-Tay"},"content":"        // zero index","lastModifiedDate":"2023-10-26"},{"lineNumber":34,"author":{"gitId":"Kb-Tay"},"content":"        assertParseFailure(parser, \"0\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-10-26"},{"lineNumber":35,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":36,"author":{"gitId":"Kb-Tay"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2023-10-26"},{"lineNumber":37,"author":{"gitId":"Kb-Tay"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-10-26"},{"lineNumber":38,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":39,"author":{"gitId":"Kb-Tay"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2023-10-26"},{"lineNumber":40,"author":{"gitId":"Kb-Tay"},"content":"        assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-10-26"},{"lineNumber":41,"author":{"gitId":"Kb-Tay"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":42,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":43,"author":{"gitId":"Kb-Tay"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":44,"author":{"gitId":"Kb-Tay"},"content":"    public void parse_invalidDate_failure() {","lastModifiedDate":"2023-11-05"},{"lineNumber":45,"author":{"gitId":"Kb-Tay"},"content":"        //Invalid date format","lastModifiedDate":"2023-10-26"},{"lineNumber":46,"author":{"gitId":"Kb-Tay"},"content":"        assertParseFailure(parser, DATE_DESC + \"01 May 2023\", MESSAGE_INVALID_DATE_FORMAT);","lastModifiedDate":"2023-10-26"},{"lineNumber":47,"author":{"gitId":"Kb-Tay"},"content":"        assertParseFailure(parser, DATE_DESC + \"01-05\", MESSAGE_INVALID_DATE_FORMAT);","lastModifiedDate":"2023-10-26"},{"lineNumber":48,"author":{"gitId":"Kb-Tay"},"content":"        assertParseFailure(parser, DATE_DESC + \"05-2023\", MESSAGE_INVALID_DATE_FORMAT);","lastModifiedDate":"2023-10-26"},{"lineNumber":49,"author":{"gitId":"Kb-Tay"},"content":"        assertParseFailure(parser, DATE_DESC + \"01-05-2023 20:00\", MESSAGE_INVALID_DATE_FORMAT);","lastModifiedDate":"2023-10-26"},{"lineNumber":50,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":51,"author":{"gitId":"Kb-Tay"},"content":"        //Invalid date","lastModifiedDate":"2023-10-26"},{"lineNumber":52,"author":{"gitId":"Kb-Tay"},"content":"        assertParseFailure(parser, DATE_DESC + \"01-13-2023\", MESSAGE_INVALID_DATE);","lastModifiedDate":"2023-10-26"},{"lineNumber":53,"author":{"gitId":"Kb-Tay"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":54,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":55,"author":{"gitId":"Kb-Tay"},"content":"    @Test","lastModifiedDate":"2023-11-05"},{"lineNumber":56,"author":{"gitId":"Kb-Tay"},"content":"    public void parse_invalidArgs_failure() {","lastModifiedDate":"2023-11-05"},{"lineNumber":57,"author":{"gitId":"Kb-Tay"},"content":"        //no index or date specified","lastModifiedDate":"2023-11-05"},{"lineNumber":58,"author":{"gitId":"Kb-Tay"},"content":"        assertParseFailure(parser, \" \", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-11-05"},{"lineNumber":59,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":60,"author":{"gitId":"Kb-Tay"},"content":"        //both index and date specified","lastModifiedDate":"2023-11-05"},{"lineNumber":61,"author":{"gitId":"Kb-Tay"},"content":"        assertParseFailure(parser, INDEX_FIRST_PERSON.getOneBased() + DATE_DESC + \"01-05-2023\",","lastModifiedDate":"2023-11-05"},{"lineNumber":62,"author":{"gitId":"Kb-Tay"},"content":"                MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-11-05"},{"lineNumber":63,"author":{"gitId":"Kb-Tay"},"content":"    }","lastModifiedDate":"2023-11-05"},{"lineNumber":64,"author":{"gitId":"Kb-Tay"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":65,"author":{"gitId":"Kb-Tay"},"content":"    public void parse_duplicateFields_failure() {","lastModifiedDate":"2023-10-26"},{"lineNumber":66,"author":{"gitId":"Kb-Tay"},"content":"        String userInput \u003d DATE_DESC + \"01-05-2023\" + DATE_DESC + \"02-10-2023\";","lastModifiedDate":"2023-10-26"},{"lineNumber":67,"author":{"gitId":"Kb-Tay"},"content":"        assertParseFailure(parser, userInput, Messages.getErrorMessageForDuplicatePrefixes(PREFIX_APPOINTMENT_DATE));","lastModifiedDate":"2023-10-26"},{"lineNumber":68,"author":{"gitId":"Kb-Tay"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":69,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":70,"author":{"gitId":"Kb-Tay"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":71,"author":{"gitId":"Kb-Tay"},"content":"    public void parse_indexSpecified_success() {","lastModifiedDate":"2023-10-26"},{"lineNumber":72,"author":{"gitId":"Kb-Tay"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2023-10-26"},{"lineNumber":73,"author":{"gitId":"Kb-Tay"},"content":"        String userInput \u003d targetIndex.getOneBased() + \"\";","lastModifiedDate":"2023-10-26"},{"lineNumber":74,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":75,"author":{"gitId":"Kb-Tay"},"content":"        CompleteByIndex expectedCommand \u003d new CompleteByIndex(targetIndex);","lastModifiedDate":"2023-11-07"},{"lineNumber":76,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":77,"author":{"gitId":"Kb-Tay"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-10-26"},{"lineNumber":78,"author":{"gitId":"Kb-Tay"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":79,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":80,"author":{"gitId":"Kb-Tay"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":81,"author":{"gitId":"Kb-Tay"},"content":"    public void parse_dateSpecified_success() {","lastModifiedDate":"2023-10-26"},{"lineNumber":82,"author":{"gitId":"Kb-Tay"},"content":"        String userInput \u003d DATE_DESC + \"01-05-2023\";","lastModifiedDate":"2023-10-26"},{"lineNumber":83,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":84,"author":{"gitId":"Kb-Tay"},"content":"        CompleteByDate expectedCommand \u003d new CompleteByDate(LocalDate.of(2023, 5, 1));","lastModifiedDate":"2023-11-07"},{"lineNumber":85,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":86,"author":{"gitId":"Kb-Tay"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-10-26"},{"lineNumber":87,"author":{"gitId":"Kb-Tay"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":88,"author":{"gitId":"Kb-Tay"},"content":"}","lastModifiedDate":"2023-10-26"}],"authorContributionMap":{"Kb-Tay":88}},{"path":"src/test/java/seedu/address/logic/parser/FindCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"sopa301"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-10-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":9,"author":{"gitId":"sopa301"},"content":"import java.util.List;","lastModifiedDate":"2023-10-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"sopa301"},"content":"import seedu.address.model.person.predicates.CombinedPredicate;","lastModifiedDate":"2023-10-25"},{"lineNumber":15,"author":{"gitId":"sopa301"},"content":"import seedu.address.model.person.predicates.FinancialPlanContainsKeywordsPredicate;","lastModifiedDate":"2023-10-25"},{"lineNumber":16,"author":{"gitId":"sopa301"},"content":"import seedu.address.model.person.predicates.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-10-24"},{"lineNumber":17,"author":{"gitId":"sopa301"},"content":"import seedu.address.model.person.predicates.TagContainsKeywordsPredicate;","lastModifiedDate":"2023-10-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class FindCommandParserTest {","lastModifiedDate":"2017-06-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private FindCommandParser parser \u003d new FindCommandParser();","lastModifiedDate":"2017-06-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2017-06-27"},{"lineNumber":25,"author":{"gitId":"sopa301"},"content":"        assertParseFailure(parser, \"     \",","lastModifiedDate":"2023-10-25"},{"lineNumber":26,"author":{"gitId":"sopa301"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":29,"author":{"gitId":"sopa301"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":30,"author":{"gitId":"sopa301"},"content":"    public void parse_invalidArg_throwsParseException() {","lastModifiedDate":"2023-10-25"},{"lineNumber":31,"author":{"gitId":"sopa301"},"content":"        assertParseFailure(parser, \" doo doo \",","lastModifiedDate":"2023-10-25"},{"lineNumber":32,"author":{"gitId":"sopa301"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsFindCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        FindCommand expectedFindCommand \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"sopa301"},"content":"                new FindCommand(new CombinedPredicate(","lastModifiedDate":"2023-10-25"},{"lineNumber":40,"author":{"gitId":"sopa301"},"content":"                        new FinancialPlanContainsKeywordsPredicate(List.of()),","lastModifiedDate":"2023-10-25"},{"lineNumber":41,"author":{"gitId":"sopa301"},"content":"                        new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\")),","lastModifiedDate":"2023-10-25"},{"lineNumber":42,"author":{"gitId":"sopa301"},"content":"                        new TagContainsKeywordsPredicate(List.of())));","lastModifiedDate":"2023-10-25"},{"lineNumber":43,"author":{"gitId":"sopa301"},"content":"        String rawFindCommand \u003d \" \" + PREFIX_NAME + \"Alice \" + PREFIX_NAME + \"Bob\";","lastModifiedDate":"2023-10-25"},{"lineNumber":44,"author":{"gitId":"sopa301"},"content":"        assertParseSuccess(parser, rawFindCommand, expectedFindCommand);","lastModifiedDate":"2023-10-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"sopa301"},"content":"        rawFindCommand \u003d \" \" + PREFIX_NAME + \" \\n Alice \\n \" + PREFIX_NAME + \" \\t Bob \\t\";","lastModifiedDate":"2023-10-25"},{"lineNumber":48,"author":{"gitId":"sopa301"},"content":"        assertParseSuccess(parser, rawFindCommand, expectedFindCommand);","lastModifiedDate":"2023-10-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-27"}],"authorContributionMap":{"sopa301":20,"-":30}},{"path":"src/test/java/seedu/address/logic/parser/GatherCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"AlyssaPng"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-18"},{"lineNumber":2,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":3,"author":{"gitId":"AlyssaPng"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-11-10"},{"lineNumber":4,"author":{"gitId":"AlyssaPng"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-18"},{"lineNumber":5,"author":{"gitId":"AlyssaPng"},"content":"import static seedu.address.logic.commands.CommandTestUtil.FINANCIAL_PLAN_DESC_1;","lastModifiedDate":"2023-10-23"},{"lineNumber":6,"author":{"gitId":"AlyssaPng"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_FINANCIAL_PLAN_DESC;","lastModifiedDate":"2023-10-23"},{"lineNumber":7,"author":{"gitId":"AlyssaPng"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2023-10-23"},{"lineNumber":8,"author":{"gitId":"AlyssaPng"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2023-10-23"},{"lineNumber":9,"author":{"gitId":"AlyssaPng"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_FINANCIAL_PLAN_1;","lastModifiedDate":"2023-10-23"},{"lineNumber":10,"author":{"gitId":"AlyssaPng"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2023-10-23"},{"lineNumber":11,"author":{"gitId":"AlyssaPng"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_FINANCIAL_PLAN;","lastModifiedDate":"2023-11-10"},{"lineNumber":12,"author":{"gitId":"AlyssaPng"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-11-10"},{"lineNumber":13,"author":{"gitId":"AlyssaPng"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-10-18"},{"lineNumber":14,"author":{"gitId":"AlyssaPng"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-10-18"},{"lineNumber":15,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":16,"author":{"gitId":"AlyssaPng"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-18"},{"lineNumber":17,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":18,"author":{"gitId":"AlyssaPng"},"content":"import seedu.address.logic.commands.GatherCommand;","lastModifiedDate":"2023-10-18"},{"lineNumber":19,"author":{"gitId":"AlyssaPng"},"content":"import seedu.address.model.financialplan.FinancialPlan;","lastModifiedDate":"2023-10-23"},{"lineNumber":20,"author":{"gitId":"AlyssaPng"},"content":"import seedu.address.model.person.gatheremail.GatherEmailByFinancialPlan;","lastModifiedDate":"2023-10-23"},{"lineNumber":21,"author":{"gitId":"AlyssaPng"},"content":"import seedu.address.model.person.gatheremail.GatherEmailByTag;","lastModifiedDate":"2023-10-23"},{"lineNumber":22,"author":{"gitId":"AlyssaPng"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-10-23"},{"lineNumber":23,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":24,"author":{"gitId":"AlyssaPng"},"content":"public class GatherCommandParserTest {","lastModifiedDate":"2023-10-18"},{"lineNumber":25,"author":{"gitId":"AlyssaPng"},"content":"    private GatherCommandParser parser \u003d new GatherCommandParser();","lastModifiedDate":"2023-10-18"},{"lineNumber":26,"author":{"gitId":"AlyssaPng"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":27,"author":{"gitId":"AlyssaPng"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2023-10-18"},{"lineNumber":28,"author":{"gitId":"AlyssaPng"},"content":"        assertParseFailure(parser, \"     \", String.format(MESSAGE_INVALID_COMMAND_FORMAT, GatherCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-18"},{"lineNumber":29,"author":{"gitId":"AlyssaPng"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":30,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":31,"author":{"gitId":"AlyssaPng"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":32,"author":{"gitId":"AlyssaPng"},"content":"    public void parse_invalidArgs_returnsException() {","lastModifiedDate":"2023-10-18"},{"lineNumber":33,"author":{"gitId":"AlyssaPng"},"content":"        // test for Financial Plan","lastModifiedDate":"2023-10-23"},{"lineNumber":34,"author":{"gitId":"AlyssaPng"},"content":"        String fpExceptionMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, FinancialPlan.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-23"},{"lineNumber":35,"author":{"gitId":"AlyssaPng"},"content":"        assertParseFailure(parser, INVALID_FINANCIAL_PLAN_DESC, fpExceptionMessage);","lastModifiedDate":"2023-10-23"},{"lineNumber":36,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":37,"author":{"gitId":"AlyssaPng"},"content":"        // test for Tag","lastModifiedDate":"2023-10-23"},{"lineNumber":38,"author":{"gitId":"AlyssaPng"},"content":"        String tagExceptionMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-23"},{"lineNumber":39,"author":{"gitId":"AlyssaPng"},"content":"        assertParseFailure(parser, INVALID_TAG_DESC, tagExceptionMessage);","lastModifiedDate":"2023-10-23"},{"lineNumber":40,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":41,"author":{"gitId":"AlyssaPng"},"content":"        // both prompts","lastModifiedDate":"2023-10-23"},{"lineNumber":42,"author":{"gitId":"AlyssaPng"},"content":"        String bothPrompts \u003d FINANCIAL_PLAN_DESC_1 + TAG_DESC_HUSBAND;","lastModifiedDate":"2023-10-23"},{"lineNumber":43,"author":{"gitId":"AlyssaPng"},"content":"        String exceptionMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, GatherCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-10-23"},{"lineNumber":44,"author":{"gitId":"AlyssaPng"},"content":"        assertParseFailure(parser, bothPrompts, exceptionMessage);","lastModifiedDate":"2023-10-23"},{"lineNumber":45,"author":{"gitId":"AlyssaPng"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":46,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":47,"author":{"gitId":"AlyssaPng"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":48,"author":{"gitId":"AlyssaPng"},"content":"    public void parse_validArgs_returnsGatherCommand() {","lastModifiedDate":"2023-10-18"},{"lineNumber":49,"author":{"gitId":"AlyssaPng"},"content":"        GatherEmailByFinancialPlan financialPlanPrompt \u003d new GatherEmailByFinancialPlan(VALID_FINANCIAL_PLAN_1);","lastModifiedDate":"2023-10-23"},{"lineNumber":50,"author":{"gitId":"AlyssaPng"},"content":"        GatherCommand fpExpectedGatherCommand \u003d new GatherCommand(financialPlanPrompt);","lastModifiedDate":"2023-10-23"},{"lineNumber":51,"author":{"gitId":"AlyssaPng"},"content":"        assertParseSuccess(parser, FINANCIAL_PLAN_DESC_1, fpExpectedGatherCommand);","lastModifiedDate":"2023-10-23"},{"lineNumber":52,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":53,"author":{"gitId":"AlyssaPng"},"content":"        GatherEmailByTag tagPrompt \u003d new GatherEmailByTag(VALID_TAG_HUSBAND);","lastModifiedDate":"2023-10-23"},{"lineNumber":54,"author":{"gitId":"AlyssaPng"},"content":"        GatherCommand tagExpectedGatherCommand \u003d new GatherCommand(tagPrompt);","lastModifiedDate":"2023-10-23"},{"lineNumber":55,"author":{"gitId":"AlyssaPng"},"content":"        assertParseSuccess(parser, TAG_DESC_HUSBAND, tagExpectedGatherCommand);","lastModifiedDate":"2023-10-23"},{"lineNumber":56,"author":{"gitId":"AlyssaPng"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":57,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":58,"author":{"gitId":"AlyssaPng"},"content":"    @Test","lastModifiedDate":"2023-11-10"},{"lineNumber":59,"author":{"gitId":"AlyssaPng"},"content":"    public void removePrefix_success() {","lastModifiedDate":"2023-11-10"},{"lineNumber":60,"author":{"gitId":"AlyssaPng"},"content":"        // removes for Financial Plan","lastModifiedDate":"2023-11-10"},{"lineNumber":61,"author":{"gitId":"AlyssaPng"},"content":"        assertEquals(VALID_FINANCIAL_PLAN_1, parser.removePrefix(FINANCIAL_PLAN_DESC_1, PREFIX_FINANCIAL_PLAN));","lastModifiedDate":"2023-11-10"},{"lineNumber":62,"author":{"gitId":"AlyssaPng"},"content":"        // removes for Tag","lastModifiedDate":"2023-11-10"},{"lineNumber":63,"author":{"gitId":"AlyssaPng"},"content":"        assertEquals(VALID_TAG_HUSBAND, parser.removePrefix(TAG_DESC_HUSBAND, PREFIX_TAG));","lastModifiedDate":"2023-11-10"},{"lineNumber":64,"author":{"gitId":"AlyssaPng"},"content":"    }","lastModifiedDate":"2023-11-10"},{"lineNumber":65,"author":{"gitId":"AlyssaPng"},"content":"}","lastModifiedDate":"2023-10-18"}],"authorContributionMap":{"AlyssaPng":65}},{"path":"src/test/java/seedu/address/logic/parser/ParserUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"AlyssaPng"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-11-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"sopa301"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2023-10-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.ParserUtil.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2017-06-02"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":11,"author":{"gitId":"Kb-Tay"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-10-20"},{"lineNumber":12,"author":{"gitId":"AlyssaPng"},"content":"import java.time.YearMonth;","lastModifiedDate":"2023-11-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-05-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-05-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-05-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":21,"author":{"gitId":"Kb-Tay"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2023-10-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-05-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-05-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-05-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-05-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-05-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class ParserUtilTest {","lastModifiedDate":"2017-05-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2017-05-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2017-05-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2017-05-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":34,"author":{"gitId":"sopa301"},"content":"    private static final String INVALID_FINANCIAL_PLAN \u003d \"Plan !!\";","lastModifiedDate":"2023-10-25"},{"lineNumber":35,"author":{"gitId":"sopa301"},"content":"    private static final String VALID_NAME_1 \u003d \"Rachel Walker\";","lastModifiedDate":"2023-10-25"},{"lineNumber":36,"author":{"gitId":"sopa301"},"content":"    private static final String VALID_NAME_2 \u003d \"Captain Kek\";","lastModifiedDate":"2023-10-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d \"123456\";","lastModifiedDate":"2017-05-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d \"123 Main Street #0505\";","lastModifiedDate":"2017-05-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d \"rachel@example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_1 \u003d \"friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_2 \u003d \"neighbour\";","lastModifiedDate":"2017-05-22"},{"lineNumber":42,"author":{"gitId":"sopa301"},"content":"    private static final String VALID_FINANCIAL_PLAN_1 \u003d \"Plan A\";","lastModifiedDate":"2023-10-25"},{"lineNumber":43,"author":{"gitId":"sopa301"},"content":"    private static final String VALID_FINANCIAL_PLAN_2 \u003d \"Plan B\";","lastModifiedDate":"2023-10-25"},{"lineNumber":44,"author":{"gitId":"Kb-Tay"},"content":"    private static final String VALID_APPOINTMENT_DESC \u003d \"Review Insurance\";","lastModifiedDate":"2023-10-20"},{"lineNumber":45,"author":{"gitId":"Kb-Tay"},"content":"    private static final String VALID_APPOINTMENT_DATE \u003d \"01-01-2023 20:00\";","lastModifiedDate":"2023-10-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private static final String WHITESPACE \u003d \" \\t\\r\\n\";","lastModifiedDate":"2017-05-29"},{"lineNumber":47,"author":{"gitId":"Kb-Tay"},"content":"    private static final String INVALID_APPOINTMENT_DESC \u003d \"#Review Insurance*\";","lastModifiedDate":"2023-10-20"},{"lineNumber":48,"author":{"gitId":"Kb-Tay"},"content":"    private static final String INVALID_APPOINTMENT_DATE_FORMAT \u003d \"1 May 2023 20:00\";","lastModifiedDate":"2023-10-20"},{"lineNumber":49,"author":{"gitId":"Kb-Tay"},"content":"    private static final String INVALID_APPOINTMENT_DATE \u003d \"01-13-2023 20:00\";","lastModifiedDate":"2023-10-20"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void parseIndex_invalidInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseIndex(\"10 a\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void parseIndex_outOfRangeInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_INVALID_INDEX, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            -\u003e ParserUtil.parseIndex(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2019-03-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void parseIndex_validInput_success() throws Exception {","lastModifiedDate":"2017-05-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // No whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"1\"));","lastModifiedDate":"2017-05-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // Leading and trailing whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"  1  \"));","lastModifiedDate":"2017-05-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void parseName_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseName((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void parseName_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseName(INVALID_NAME));","lastModifiedDate":"2019-03-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithoutWhitespace_returnsName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":82,"author":{"gitId":"sopa301"},"content":"        Name expectedName \u003d new Name(VALID_NAME_1);","lastModifiedDate":"2023-10-25"},{"lineNumber":83,"author":{"gitId":"sopa301"},"content":"        assertEquals(expectedName, ParserUtil.parseName(VALID_NAME_1));","lastModifiedDate":"2023-10-25"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithWhitespace_returnsTrimmedName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":88,"author":{"gitId":"sopa301"},"content":"        String nameWithWhitespace \u003d WHITESPACE + VALID_NAME_1 + WHITESPACE;","lastModifiedDate":"2023-10-25"},{"lineNumber":89,"author":{"gitId":"sopa301"},"content":"        Name expectedName \u003d new Name(VALID_NAME_1);","lastModifiedDate":"2023-10-25"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(nameWithWhitespace));","lastModifiedDate":"2017-05-29"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public void parsePhone_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parsePhone((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public void parsePhone_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parsePhone(INVALID_PHONE));","lastModifiedDate":"2019-03-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithoutWhitespace_returnsPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-22"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(VALID_PHONE));","lastModifiedDate":"2017-05-30"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithWhitespace_returnsTrimmedPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        String phoneWithWhitespace \u003d WHITESPACE + VALID_PHONE + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-30"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(phoneWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public void parseAddress_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseAddress((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    public void parseAddress_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseAddress(INVALID_ADDRESS));","lastModifiedDate":"2019-03-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithoutWhitespace_returnsAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-22"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(VALID_ADDRESS));","lastModifiedDate":"2017-05-30"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithWhitespace_returnsTrimmedAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        String addressWithWhitespace \u003d WHITESPACE + VALID_ADDRESS + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-30"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(addressWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    public void parseEmail_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseEmail((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    public void parseEmail_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseEmail(INVALID_EMAIL));","lastModifiedDate":"2019-03-14"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithoutWhitespace_returnsEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-22"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(VALID_EMAIL));","lastModifiedDate":"2017-05-30"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithWhitespace_returnsTrimmedEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        String emailWithWhitespace \u003d WHITESPACE + VALID_EMAIL + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-30"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(emailWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    public void parseTag_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTag(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    public void parseTag_invalidValue_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTag(INVALID_TAG));","lastModifiedDate":"2019-03-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithoutWhitespace_returnsTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(VALID_TAG_1));","lastModifiedDate":"2017-05-30"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithWhitespace_returnsTrimmedTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        String tagWithWhitespace \u003d WHITESPACE + VALID_TAG_1 + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(tagWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    public void parseTags_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTags(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithInvalidTags_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, INVALID_TAG)));","lastModifiedDate":"2019-03-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    public void parseTags_emptyCollection_returnsEmptySet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        assertTrue(ParserUtil.parseTags(Collections.emptyList()).isEmpty());","lastModifiedDate":"2017-05-22"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithValidTags_returnsTagSet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e actualTagSet \u003d ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, VALID_TAG_2));","lastModifiedDate":"2017-05-22"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e expectedTagSet \u003d new HashSet\u003cTag\u003e(Arrays.asList(new Tag(VALID_TAG_1), new Tag(VALID_TAG_2)));","lastModifiedDate":"2017-05-22"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        assertEquals(expectedTagSet, actualTagSet);","lastModifiedDate":"2017-05-22"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":207,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":208,"author":{"gitId":"Kb-Tay"},"content":"    @Test","lastModifiedDate":"2023-10-20"},{"lineNumber":209,"author":{"gitId":"Kb-Tay"},"content":"    public void parseAppointment_validValueAndDate_returnsAppointment() throws Exception {","lastModifiedDate":"2023-10-20"},{"lineNumber":210,"author":{"gitId":"Kb-Tay"},"content":"        Appointment expectedAppointment \u003d new Appointment(\"Review Insurance\",","lastModifiedDate":"2023-10-20"},{"lineNumber":211,"author":{"gitId":"Kb-Tay"},"content":"                LocalDateTime.of(2023, 1, 1, 20, 0));","lastModifiedDate":"2023-10-20"},{"lineNumber":212,"author":{"gitId":"Kb-Tay"},"content":"        assertEquals(expectedAppointment, ParserUtil.parseAppointment(VALID_APPOINTMENT_DESC, VALID_APPOINTMENT_DATE));","lastModifiedDate":"2023-10-20"},{"lineNumber":213,"author":{"gitId":"Kb-Tay"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":214,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":215,"author":{"gitId":"Kb-Tay"},"content":"    @Test","lastModifiedDate":"2023-10-20"},{"lineNumber":216,"author":{"gitId":"Kb-Tay"},"content":"    public void parseAppointment_null_throwsNullPointerException() {","lastModifiedDate":"2023-10-20"},{"lineNumber":217,"author":{"gitId":"Kb-Tay"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseAppointment(null,","lastModifiedDate":"2023-10-20"},{"lineNumber":218,"author":{"gitId":"Kb-Tay"},"content":"                null));","lastModifiedDate":"2023-10-20"},{"lineNumber":219,"author":{"gitId":"Kb-Tay"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":220,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":221,"author":{"gitId":"Kb-Tay"},"content":"    @Test","lastModifiedDate":"2023-10-20"},{"lineNumber":222,"author":{"gitId":"Kb-Tay"},"content":"    public void parseAppointment_invalidInputs_throwsParseException() {","lastModifiedDate":"2023-10-20"},{"lineNumber":223,"author":{"gitId":"Kb-Tay"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseAppointment(INVALID_APPOINTMENT_DESC,","lastModifiedDate":"2023-10-20"},{"lineNumber":224,"author":{"gitId":"Kb-Tay"},"content":"                VALID_APPOINTMENT_DATE));","lastModifiedDate":"2023-10-20"},{"lineNumber":225,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":226,"author":{"gitId":"Kb-Tay"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseAppointment(VALID_APPOINTMENT_DESC,","lastModifiedDate":"2023-10-20"},{"lineNumber":227,"author":{"gitId":"Kb-Tay"},"content":"                INVALID_APPOINTMENT_DATE_FORMAT));","lastModifiedDate":"2023-10-20"},{"lineNumber":228,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":229,"author":{"gitId":"Kb-Tay"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseAppointment(VALID_APPOINTMENT_DESC,","lastModifiedDate":"2023-10-20"},{"lineNumber":230,"author":{"gitId":"Kb-Tay"},"content":"                INVALID_APPOINTMENT_DATE));","lastModifiedDate":"2023-10-20"},{"lineNumber":231,"author":{"gitId":"Kb-Tay"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":232,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":233,"author":{"gitId":"sopa301"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":234,"author":{"gitId":"sopa301"},"content":"    public void validateName_validInput_success() {","lastModifiedDate":"2023-10-25"},{"lineNumber":235,"author":{"gitId":"sopa301"},"content":"        try {","lastModifiedDate":"2023-10-25"},{"lineNumber":236,"author":{"gitId":"sopa301"},"content":"            ParserUtil.validateName(VALID_NAME_1);","lastModifiedDate":"2023-10-25"},{"lineNumber":237,"author":{"gitId":"sopa301"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2023-10-25"},{"lineNumber":238,"author":{"gitId":"sopa301"},"content":"            fail();","lastModifiedDate":"2023-10-25"},{"lineNumber":239,"author":{"gitId":"sopa301"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":240,"author":{"gitId":"sopa301"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":241,"author":{"gitId":"sopa301"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":242,"author":{"gitId":"sopa301"},"content":"    public void validateName_invalidInput_throwsParseException() {","lastModifiedDate":"2023-10-25"},{"lineNumber":243,"author":{"gitId":"sopa301"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.validateName(INVALID_NAME));","lastModifiedDate":"2023-10-25"},{"lineNumber":244,"author":{"gitId":"sopa301"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":245,"author":{"gitId":"sopa301"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":246,"author":{"gitId":"sopa301"},"content":"    public void validateTag_validInput_success() {","lastModifiedDate":"2023-10-25"},{"lineNumber":247,"author":{"gitId":"sopa301"},"content":"        try {","lastModifiedDate":"2023-10-25"},{"lineNumber":248,"author":{"gitId":"sopa301"},"content":"            ParserUtil.validateTag(VALID_TAG_1);","lastModifiedDate":"2023-10-25"},{"lineNumber":249,"author":{"gitId":"sopa301"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2023-10-25"},{"lineNumber":250,"author":{"gitId":"sopa301"},"content":"            fail();","lastModifiedDate":"2023-10-25"},{"lineNumber":251,"author":{"gitId":"sopa301"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":252,"author":{"gitId":"sopa301"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":253,"author":{"gitId":"sopa301"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":254,"author":{"gitId":"sopa301"},"content":"    public void validateTag_invalidInput_throwsParseException() {","lastModifiedDate":"2023-10-25"},{"lineNumber":255,"author":{"gitId":"sopa301"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.validateTag(INVALID_TAG));","lastModifiedDate":"2023-10-25"},{"lineNumber":256,"author":{"gitId":"sopa301"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":257,"author":{"gitId":"sopa301"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":258,"author":{"gitId":"sopa301"},"content":"    public void validateFinancialPlan_validInput_success() {","lastModifiedDate":"2023-10-25"},{"lineNumber":259,"author":{"gitId":"sopa301"},"content":"        try {","lastModifiedDate":"2023-10-25"},{"lineNumber":260,"author":{"gitId":"sopa301"},"content":"            ParserUtil.validateFinancialPlan(VALID_FINANCIAL_PLAN_1);","lastModifiedDate":"2023-10-25"},{"lineNumber":261,"author":{"gitId":"sopa301"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2023-10-25"},{"lineNumber":262,"author":{"gitId":"sopa301"},"content":"            fail();","lastModifiedDate":"2023-10-25"},{"lineNumber":263,"author":{"gitId":"sopa301"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":264,"author":{"gitId":"sopa301"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":265,"author":{"gitId":"sopa301"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":266,"author":{"gitId":"sopa301"},"content":"    public void validateFinancialPlan_invalidInput_throwsParseException() {","lastModifiedDate":"2023-10-25"},{"lineNumber":267,"author":{"gitId":"sopa301"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.validateFinancialPlan(INVALID_FINANCIAL_PLAN));","lastModifiedDate":"2023-10-25"},{"lineNumber":268,"author":{"gitId":"sopa301"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":269,"author":{"gitId":"AlyssaPng"},"content":"    @Test","lastModifiedDate":"2023-11-10"},{"lineNumber":270,"author":{"gitId":"AlyssaPng"},"content":"    void isValidDay_validDate_shouldReturnTrue() {","lastModifiedDate":"2023-11-10"},{"lineNumber":271,"author":{"gitId":"AlyssaPng"},"content":"        // November has 30 days","lastModifiedDate":"2023-11-10"},{"lineNumber":272,"author":{"gitId":"AlyssaPng"},"content":"        YearMonth yearMonth \u003d YearMonth.of(2022, 11);","lastModifiedDate":"2023-11-10"},{"lineNumber":273,"author":{"gitId":"AlyssaPng"},"content":"        String date \u003d \"15-11-2022\";","lastModifiedDate":"2023-11-10"},{"lineNumber":274,"author":{"gitId":"AlyssaPng"},"content":"        assertTrue(ParserUtil.isValidDay(yearMonth, date));","lastModifiedDate":"2023-11-10"},{"lineNumber":275,"author":{"gitId":"AlyssaPng"},"content":"    }","lastModifiedDate":"2023-11-10"},{"lineNumber":276,"author":{"gitId":"AlyssaPng"},"content":"    @Test","lastModifiedDate":"2023-11-10"},{"lineNumber":277,"author":{"gitId":"AlyssaPng"},"content":"    void isValidDay_invalidDate_shouldReturnFalse() {","lastModifiedDate":"2023-11-10"},{"lineNumber":278,"author":{"gitId":"AlyssaPng"},"content":"        // February has 28 days","lastModifiedDate":"2023-11-10"},{"lineNumber":279,"author":{"gitId":"AlyssaPng"},"content":"        YearMonth yearMonth \u003d YearMonth.of(2022, 2);","lastModifiedDate":"2023-11-10"},{"lineNumber":280,"author":{"gitId":"AlyssaPng"},"content":"        String date \u003d \"31-02-2022\";","lastModifiedDate":"2023-11-10"},{"lineNumber":281,"author":{"gitId":"AlyssaPng"},"content":"        assertFalse(ParserUtil.isValidDay(yearMonth, date));","lastModifiedDate":"2023-11-10"},{"lineNumber":282,"author":{"gitId":"AlyssaPng"},"content":"    }","lastModifiedDate":"2023-11-10"},{"lineNumber":283,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":284,"author":{"gitId":"AlyssaPng"},"content":"    @Test","lastModifiedDate":"2023-11-11"},{"lineNumber":285,"author":{"gitId":"AlyssaPng"},"content":"    void parseDate_validDate_shouldParseSuccessfully() throws ParseException {","lastModifiedDate":"2023-11-11"},{"lineNumber":286,"author":{"gitId":"AlyssaPng"},"content":"        String validDateString \u003d \"29-02-2024\";","lastModifiedDate":"2023-11-11"},{"lineNumber":287,"author":{"gitId":"AlyssaPng"},"content":"        try {","lastModifiedDate":"2023-11-11"},{"lineNumber":288,"author":{"gitId":"AlyssaPng"},"content":"            ParserUtil.parseDate(validDateString);","lastModifiedDate":"2023-11-11"},{"lineNumber":289,"author":{"gitId":"AlyssaPng"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2023-11-11"},{"lineNumber":290,"author":{"gitId":"AlyssaPng"},"content":"            fail();","lastModifiedDate":"2023-11-11"},{"lineNumber":291,"author":{"gitId":"AlyssaPng"},"content":"        }","lastModifiedDate":"2023-11-11"},{"lineNumber":292,"author":{"gitId":"AlyssaPng"},"content":"    }","lastModifiedDate":"2023-11-11"},{"lineNumber":293,"author":{"gitId":"AlyssaPng"},"content":"    @Test","lastModifiedDate":"2023-11-11"},{"lineNumber":294,"author":{"gitId":"AlyssaPng"},"content":"    void parseDate_invalidDate_shouldThrowParseException() {","lastModifiedDate":"2023-11-11"},{"lineNumber":295,"author":{"gitId":"AlyssaPng"},"content":"        // 29th Feb for non leap year","lastModifiedDate":"2023-11-11"},{"lineNumber":296,"author":{"gitId":"AlyssaPng"},"content":"        String invalidDateString1 \u003d \"29-02-2022\";","lastModifiedDate":"2023-11-11"},{"lineNumber":297,"author":{"gitId":"AlyssaPng"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseDate(invalidDateString1));","lastModifiedDate":"2023-11-11"},{"lineNumber":298,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":299,"author":{"gitId":"AlyssaPng"},"content":"        // No 31st Nov","lastModifiedDate":"2023-11-11"},{"lineNumber":300,"author":{"gitId":"AlyssaPng"},"content":"        String invalidDateString2 \u003d \"31-04-2023\";","lastModifiedDate":"2023-11-11"},{"lineNumber":301,"author":{"gitId":"AlyssaPng"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseDate(invalidDateString2));","lastModifiedDate":"2023-11-11"},{"lineNumber":302,"author":{"gitId":"AlyssaPng"},"content":"    }","lastModifiedDate":"2023-11-11"},{"lineNumber":303,"author":{"gitId":"AlyssaPng"},"content":"    @Test","lastModifiedDate":"2023-11-10"},{"lineNumber":304,"author":{"gitId":"AlyssaPng"},"content":"    void parseAppointment_validInput_shouldParseSuccessfully() throws ParseException {","lastModifiedDate":"2023-11-11"},{"lineNumber":305,"author":{"gitId":"AlyssaPng"},"content":"        try {","lastModifiedDate":"2023-11-11"},{"lineNumber":306,"author":{"gitId":"AlyssaPng"},"content":"            ParserUtil.parseAppointment(VALID_APPOINTMENT_DESC, VALID_APPOINTMENT_DATE);","lastModifiedDate":"2023-11-11"},{"lineNumber":307,"author":{"gitId":"AlyssaPng"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2023-11-11"},{"lineNumber":308,"author":{"gitId":"AlyssaPng"},"content":"            fail();","lastModifiedDate":"2023-11-11"},{"lineNumber":309,"author":{"gitId":"AlyssaPng"},"content":"        }","lastModifiedDate":"2023-11-11"},{"lineNumber":310,"author":{"gitId":"AlyssaPng"},"content":"    }","lastModifiedDate":"2023-11-11"},{"lineNumber":311,"author":{"gitId":"AlyssaPng"},"content":"    @Test","lastModifiedDate":"2023-11-11"},{"lineNumber":312,"author":{"gitId":"AlyssaPng"},"content":"    void parseAppointment_invalidInput_shouldThrowParseException() {","lastModifiedDate":"2023-11-11"},{"lineNumber":313,"author":{"gitId":"AlyssaPng"},"content":"        // Invalid description","lastModifiedDate":"2023-11-11"},{"lineNumber":314,"author":{"gitId":"AlyssaPng"},"content":"        assertThrows(ParseException.class, () -\u003e","lastModifiedDate":"2023-11-11"},{"lineNumber":315,"author":{"gitId":"AlyssaPng"},"content":"                ParserUtil.parseAppointment(INVALID_APPOINTMENT_DESC, VALID_APPOINTMENT_DATE));","lastModifiedDate":"2023-11-11"},{"lineNumber":316,"author":{"gitId":"AlyssaPng"},"content":"        // 29th Feb for non leap year","lastModifiedDate":"2023-11-11"},{"lineNumber":317,"author":{"gitId":"AlyssaPng"},"content":"        String invalidDateString1 \u003d \"29-02-2022 14:30\";","lastModifiedDate":"2023-11-11"},{"lineNumber":318,"author":{"gitId":"AlyssaPng"},"content":"        assertThrows(ParseException.class, () -\u003e","lastModifiedDate":"2023-11-11"},{"lineNumber":319,"author":{"gitId":"AlyssaPng"},"content":"                ParserUtil.parseAppointment(VALID_APPOINTMENT_DESC, invalidDateString1));","lastModifiedDate":"2023-11-11"},{"lineNumber":320,"author":{"gitId":"AlyssaPng"},"content":"        // No 31st Nov","lastModifiedDate":"2023-11-11"},{"lineNumber":321,"author":{"gitId":"AlyssaPng"},"content":"        String invalidDateString2 \u003d \"31-11-2023 14:30\";","lastModifiedDate":"2023-11-11"},{"lineNumber":322,"author":{"gitId":"AlyssaPng"},"content":"        assertThrows(ParseException.class, () -\u003e","lastModifiedDate":"2023-11-11"},{"lineNumber":323,"author":{"gitId":"AlyssaPng"},"content":"                ParserUtil.parseAppointment(VALID_APPOINTMENT_DESC, invalidDateString2));","lastModifiedDate":"2023-11-11"},{"lineNumber":324,"author":{"gitId":"AlyssaPng"},"content":"    }","lastModifiedDate":"2023-11-11"},{"lineNumber":325,"author":{"gitId":"AlyssaPng"},"content":"    @Test","lastModifiedDate":"2023-11-11"},{"lineNumber":326,"author":{"gitId":"AlyssaPng"},"content":"    void parseAppointmentDate_validDate_shouldParseSuccessfully() throws ParseException {","lastModifiedDate":"2023-11-11"},{"lineNumber":327,"author":{"gitId":"AlyssaPng"},"content":"        String validDateString \u003d \"29-02-2024 14:30\";","lastModifiedDate":"2023-11-11"},{"lineNumber":328,"author":{"gitId":"AlyssaPng"},"content":"        try {","lastModifiedDate":"2023-11-10"},{"lineNumber":329,"author":{"gitId":"AlyssaPng"},"content":"            ParserUtil.parseAppointmentDate(validDateString);","lastModifiedDate":"2023-11-11"},{"lineNumber":330,"author":{"gitId":"AlyssaPng"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2023-11-10"},{"lineNumber":331,"author":{"gitId":"AlyssaPng"},"content":"            fail();","lastModifiedDate":"2023-11-10"},{"lineNumber":332,"author":{"gitId":"AlyssaPng"},"content":"        }","lastModifiedDate":"2023-11-10"},{"lineNumber":333,"author":{"gitId":"AlyssaPng"},"content":"    }","lastModifiedDate":"2023-11-10"},{"lineNumber":334,"author":{"gitId":"AlyssaPng"},"content":"    @Test","lastModifiedDate":"2023-11-10"},{"lineNumber":335,"author":{"gitId":"AlyssaPng"},"content":"    void parseAppointmentDate_invalidDate_shouldThrowParseException() {","lastModifiedDate":"2023-11-11"},{"lineNumber":336,"author":{"gitId":"AlyssaPng"},"content":"        // 29th Feb for non leap year","lastModifiedDate":"2023-11-11"},{"lineNumber":337,"author":{"gitId":"AlyssaPng"},"content":"        String invalidDateString1 \u003d \"29-02-2022 14:30\";","lastModifiedDate":"2023-11-11"},{"lineNumber":338,"author":{"gitId":"AlyssaPng"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseAppointmentDate(invalidDateString1));","lastModifiedDate":"2023-11-11"},{"lineNumber":339,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":340,"author":{"gitId":"AlyssaPng"},"content":"        // No 31st Nov","lastModifiedDate":"2023-11-11"},{"lineNumber":341,"author":{"gitId":"AlyssaPng"},"content":"        String invalidDateString2 \u003d \"31-11-2023 14:30\";","lastModifiedDate":"2023-11-11"},{"lineNumber":342,"author":{"gitId":"AlyssaPng"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseAppointmentDate(invalidDateString2));","lastModifiedDate":"2023-11-11"},{"lineNumber":343,"author":{"gitId":"AlyssaPng"},"content":"    }","lastModifiedDate":"2023-11-10"},{"lineNumber":344,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-22"}],"authorContributionMap":{"Kb-Tay":32,"AlyssaPng":77,"sopa301":47,"-":188}},{"path":"src/test/java/seedu/address/logic/parser/ScheduleCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Kb-Tay"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-19"},{"lineNumber":2,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":3,"author":{"gitId":"Kb-Tay"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-20"},{"lineNumber":4,"author":{"gitId":"Kb-Tay"},"content":"import static seedu.address.logic.commands.CommandTestUtil.APPOINTMENT_DATE_DESC;","lastModifiedDate":"2023-10-20"},{"lineNumber":5,"author":{"gitId":"Kb-Tay"},"content":"import static seedu.address.logic.commands.CommandTestUtil.APPOINTMENT_NAME_DESC;","lastModifiedDate":"2023-10-20"},{"lineNumber":6,"author":{"gitId":"Kb-Tay"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_APPOINTMENT_DATE;","lastModifiedDate":"2023-10-20"},{"lineNumber":7,"author":{"gitId":"Kb-Tay"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_APPOINTMENT_DATE_FORMAT;","lastModifiedDate":"2023-10-19"},{"lineNumber":8,"author":{"gitId":"Kb-Tay"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_APPOINTMENT_NAME_DESC;","lastModifiedDate":"2023-10-20"},{"lineNumber":9,"author":{"gitId":"Kb-Tay"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_APPOINTMENT_TIME_FORMAT;","lastModifiedDate":"2023-10-19"},{"lineNumber":10,"author":{"gitId":"Kb-Tay"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_APPOINTMENT_DATE;","lastModifiedDate":"2023-10-19"},{"lineNumber":11,"author":{"gitId":"Kb-Tay"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_APPOINTMENT_NAME;","lastModifiedDate":"2023-10-19"},{"lineNumber":12,"author":{"gitId":"Kb-Tay"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_APPOINTMENT;","lastModifiedDate":"2023-10-19"},{"lineNumber":13,"author":{"gitId":"Kb-Tay"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_APPOINTMENT_DATE;","lastModifiedDate":"2023-10-19"},{"lineNumber":14,"author":{"gitId":"Kb-Tay"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-10-19"},{"lineNumber":15,"author":{"gitId":"Kb-Tay"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-10-19"},{"lineNumber":16,"author":{"gitId":"Kb-Tay"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-10-19"},{"lineNumber":17,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":18,"author":{"gitId":"Kb-Tay"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-10-19"},{"lineNumber":19,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":20,"author":{"gitId":"Kb-Tay"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-19"},{"lineNumber":21,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":22,"author":{"gitId":"Kb-Tay"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-19"},{"lineNumber":23,"author":{"gitId":"Kb-Tay"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-20"},{"lineNumber":24,"author":{"gitId":"Kb-Tay"},"content":"import seedu.address.logic.commands.ScheduleCommand;","lastModifiedDate":"2023-10-19"},{"lineNumber":25,"author":{"gitId":"Kb-Tay"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2023-10-19"},{"lineNumber":26,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":27,"author":{"gitId":"Kb-Tay"},"content":"class ScheduleCommandParserTest {","lastModifiedDate":"2023-10-19"},{"lineNumber":28,"author":{"gitId":"Kb-Tay"},"content":"    private ScheduleCommandParser parser \u003d new ScheduleCommandParser();","lastModifiedDate":"2023-10-19"},{"lineNumber":29,"author":{"gitId":"Kb-Tay"},"content":"    private Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2023-10-20"},{"lineNumber":30,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":31,"author":{"gitId":"Kb-Tay"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":32,"author":{"gitId":"Kb-Tay"},"content":"    public void parse_validScheduleInput_success() {","lastModifiedDate":"2023-10-19"},{"lineNumber":33,"author":{"gitId":"Kb-Tay"},"content":"        String userInput \u003d targetIndex.getOneBased() + APPOINTMENT_NAME_DESC + APPOINTMENT_DATE_DESC;","lastModifiedDate":"2023-10-20"},{"lineNumber":34,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":35,"author":{"gitId":"Kb-Tay"},"content":"        LocalDateTime date \u003d Appointment.parseAppointmentDate(VALID_APPOINTMENT_DATE);","lastModifiedDate":"2023-10-19"},{"lineNumber":36,"author":{"gitId":"Kb-Tay"},"content":"        Appointment appointment \u003d new Appointment(VALID_APPOINTMENT_NAME, date);","lastModifiedDate":"2023-10-19"},{"lineNumber":37,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":38,"author":{"gitId":"Kb-Tay"},"content":"        assertParseSuccess(parser, userInput, new ScheduleCommand(targetIndex, appointment));","lastModifiedDate":"2023-10-19"},{"lineNumber":39,"author":{"gitId":"Kb-Tay"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":40,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":41,"author":{"gitId":"Kb-Tay"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":42,"author":{"gitId":"Kb-Tay"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2023-10-20"},{"lineNumber":43,"author":{"gitId":"Kb-Tay"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, ScheduleCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-10-20"},{"lineNumber":44,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":45,"author":{"gitId":"Kb-Tay"},"content":"        //missing appointment name prefix","lastModifiedDate":"2023-10-20"},{"lineNumber":46,"author":{"gitId":"Kb-Tay"},"content":"        assertParseFailure(parser, targetIndex.getOneBased() + \" \" + VALID_APPOINTMENT_NAME","lastModifiedDate":"2023-10-20"},{"lineNumber":47,"author":{"gitId":"Kb-Tay"},"content":"                + APPOINTMENT_DATE_DESC, expectedMessage);","lastModifiedDate":"2023-10-20"},{"lineNumber":48,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":49,"author":{"gitId":"Kb-Tay"},"content":"        //missing appointment date prefix","lastModifiedDate":"2023-10-20"},{"lineNumber":50,"author":{"gitId":"Kb-Tay"},"content":"        assertParseFailure(parser, targetIndex.getOneBased() + APPOINTMENT_NAME_DESC","lastModifiedDate":"2023-10-20"},{"lineNumber":51,"author":{"gitId":"Kb-Tay"},"content":"                + \" \" + VALID_APPOINTMENT_DATE, expectedMessage);","lastModifiedDate":"2023-10-20"},{"lineNumber":52,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":53,"author":{"gitId":"Kb-Tay"},"content":"        //missing index","lastModifiedDate":"2023-10-20"},{"lineNumber":54,"author":{"gitId":"Kb-Tay"},"content":"        assertParseFailure(parser, APPOINTMENT_NAME_DESC + APPOINTMENT_DATE_DESC, expectedMessage);","lastModifiedDate":"2023-10-20"},{"lineNumber":55,"author":{"gitId":"Kb-Tay"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":56,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":57,"author":{"gitId":"Kb-Tay"},"content":"    @Test","lastModifiedDate":"2023-10-20"},{"lineNumber":58,"author":{"gitId":"Kb-Tay"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2023-10-20"},{"lineNumber":59,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":60,"author":{"gitId":"Kb-Tay"},"content":"        // invalid appointment name","lastModifiedDate":"2023-10-20"},{"lineNumber":61,"author":{"gitId":"Kb-Tay"},"content":"        String invalidNameString \u003d targetIndex.getOneBased() + INVALID_APPOINTMENT_NAME_DESC","lastModifiedDate":"2023-10-20"},{"lineNumber":62,"author":{"gitId":"Kb-Tay"},"content":"                + APPOINTMENT_DATE_DESC;","lastModifiedDate":"2023-10-20"},{"lineNumber":63,"author":{"gitId":"Kb-Tay"},"content":"        assertParseFailure(parser, invalidNameString, Appointment.MESSAGE_DESC_CONSTRAINTS);","lastModifiedDate":"2023-10-20"},{"lineNumber":64,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":65,"author":{"gitId":"Kb-Tay"},"content":"        // invalid time format","lastModifiedDate":"2023-10-20"},{"lineNumber":66,"author":{"gitId":"Kb-Tay"},"content":"        String invalidTimeFormatString \u003d targetIndex.getOneBased() + APPOINTMENT_NAME_DESC","lastModifiedDate":"2023-10-20"},{"lineNumber":67,"author":{"gitId":"Kb-Tay"},"content":"                + INVALID_APPOINTMENT_TIME_FORMAT;","lastModifiedDate":"2023-10-20"},{"lineNumber":68,"author":{"gitId":"Kb-Tay"},"content":"        assertParseFailure(parser, invalidTimeFormatString, Appointment.MESSAGE_DATE_CONSTRAINTS);","lastModifiedDate":"2023-10-20"},{"lineNumber":69,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":70,"author":{"gitId":"Kb-Tay"},"content":"        // invalid date format","lastModifiedDate":"2023-10-20"},{"lineNumber":71,"author":{"gitId":"Kb-Tay"},"content":"        String invalidDateFormatString \u003d targetIndex.getOneBased() + APPOINTMENT_NAME_DESC","lastModifiedDate":"2023-10-20"},{"lineNumber":72,"author":{"gitId":"Kb-Tay"},"content":"                + INVALID_APPOINTMENT_DATE_FORMAT;","lastModifiedDate":"2023-10-20"},{"lineNumber":73,"author":{"gitId":"Kb-Tay"},"content":"        assertParseFailure(parser, invalidDateFormatString, Appointment.MESSAGE_DATE_CONSTRAINTS);","lastModifiedDate":"2023-10-20"},{"lineNumber":74,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":75,"author":{"gitId":"Kb-Tay"},"content":"        // invalid date","lastModifiedDate":"2023-10-20"},{"lineNumber":76,"author":{"gitId":"Kb-Tay"},"content":"        String invalidDateString \u003d targetIndex.getOneBased() + APPOINTMENT_NAME_DESC + INVALID_APPOINTMENT_DATE;","lastModifiedDate":"2023-10-20"},{"lineNumber":77,"author":{"gitId":"Kb-Tay"},"content":"        assertParseFailure(parser, invalidDateString, Appointment.MESSAGE_INVALID_DATE);","lastModifiedDate":"2023-10-20"},{"lineNumber":78,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":79,"author":{"gitId":"Kb-Tay"},"content":"        // duplicate name","lastModifiedDate":"2023-10-20"},{"lineNumber":80,"author":{"gitId":"Kb-Tay"},"content":"        String validExpectedSchedule \u003d APPOINTMENT_NAME_DESC + APPOINTMENT_DATE_DESC;","lastModifiedDate":"2023-10-20"},{"lineNumber":81,"author":{"gitId":"Kb-Tay"},"content":"        assertParseFailure(parser, targetIndex.getOneBased() + \" \" + PREFIX_APPOINTMENT","lastModifiedDate":"2023-10-20"},{"lineNumber":82,"author":{"gitId":"Kb-Tay"},"content":"                + VALID_APPOINTMENT_NAME + validExpectedSchedule,","lastModifiedDate":"2023-10-20"},{"lineNumber":83,"author":{"gitId":"Kb-Tay"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_APPOINTMENT));","lastModifiedDate":"2023-10-20"},{"lineNumber":84,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":85,"author":{"gitId":"Kb-Tay"},"content":"        // duplicate date","lastModifiedDate":"2023-10-20"},{"lineNumber":86,"author":{"gitId":"Kb-Tay"},"content":"        assertParseFailure(parser, targetIndex.getOneBased() + validExpectedSchedule + \" \"","lastModifiedDate":"2023-10-20"},{"lineNumber":87,"author":{"gitId":"Kb-Tay"},"content":"                + PREFIX_APPOINTMENT_DATE + VALID_APPOINTMENT_DATE,","lastModifiedDate":"2023-10-20"},{"lineNumber":88,"author":{"gitId":"Kb-Tay"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_APPOINTMENT_DATE));","lastModifiedDate":"2023-10-20"},{"lineNumber":89,"author":{"gitId":"Kb-Tay"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":90,"author":{"gitId":"Kb-Tay"},"content":"}","lastModifiedDate":"2023-10-19"}],"authorContributionMap":{"Kb-Tay":90}},{"path":"src/test/java/seedu/address/logic/parser/SortCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jylow"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-20"},{"lineNumber":2,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":3,"author":{"gitId":"jylow"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-20"},{"lineNumber":4,"author":{"gitId":"jylow"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-10-20"},{"lineNumber":5,"author":{"gitId":"jylow"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-10-20"},{"lineNumber":6,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":7,"author":{"gitId":"jylow"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-20"},{"lineNumber":8,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":9,"author":{"gitId":"jylow"},"content":"import seedu.address.logic.commands.SortCommand;","lastModifiedDate":"2023-10-20"},{"lineNumber":10,"author":{"gitId":"jylow"},"content":"import seedu.address.model.person.comparator.SortByAppointmentComparator;","lastModifiedDate":"2023-11-10"},{"lineNumber":11,"author":{"gitId":"jylow"},"content":"import seedu.address.model.person.comparator.SortByNameComparator;","lastModifiedDate":"2023-11-10"},{"lineNumber":12,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":13,"author":{"gitId":"jylow"},"content":"public class SortCommandParserTest {","lastModifiedDate":"2023-10-20"},{"lineNumber":14,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":15,"author":{"gitId":"jylow"},"content":"    private SortCommandParser parser \u003d new SortCommandParser();","lastModifiedDate":"2023-10-20"},{"lineNumber":16,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":17,"author":{"gitId":"jylow"},"content":"    @Test","lastModifiedDate":"2023-10-20"},{"lineNumber":18,"author":{"gitId":"jylow"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2023-10-20"},{"lineNumber":19,"author":{"gitId":"jylow"},"content":"        assertParseFailure(parser, \"     \", String.format(MESSAGE_INVALID_COMMAND_FORMAT, SortCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-20"},{"lineNumber":20,"author":{"gitId":"jylow"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":21,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":22,"author":{"gitId":"jylow"},"content":"    @Test","lastModifiedDate":"2023-10-20"},{"lineNumber":23,"author":{"gitId":"jylow"},"content":"    public void parse_validArgs_returnsSortByNameCommand() {","lastModifiedDate":"2023-10-20"},{"lineNumber":24,"author":{"gitId":"jylow"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2023-10-20"},{"lineNumber":25,"author":{"gitId":"jylow"},"content":"        SortCommand expectedSortCommand \u003d","lastModifiedDate":"2023-10-20"},{"lineNumber":26,"author":{"gitId":"jylow"},"content":"                new SortCommand(new SortByNameComparator());","lastModifiedDate":"2023-10-20"},{"lineNumber":27,"author":{"gitId":"jylow"},"content":"        assertParseSuccess(parser, \"name\", expectedSortCommand);","lastModifiedDate":"2023-10-25"},{"lineNumber":28,"author":{"gitId":"jylow"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":29,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":30,"author":{"gitId":"jylow"},"content":"    @Test","lastModifiedDate":"2023-10-20"},{"lineNumber":31,"author":{"gitId":"jylow"},"content":"    public void parse_validArgs_returnsSortByAppointmentCommand() {","lastModifiedDate":"2023-10-20"},{"lineNumber":32,"author":{"gitId":"jylow"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2023-10-20"},{"lineNumber":33,"author":{"gitId":"jylow"},"content":"        SortCommand expectedSortCommand \u003d","lastModifiedDate":"2023-10-20"},{"lineNumber":34,"author":{"gitId":"jylow"},"content":"                new SortCommand(new SortByAppointmentComparator());","lastModifiedDate":"2023-10-20"},{"lineNumber":35,"author":{"gitId":"jylow"},"content":"        assertParseSuccess(parser, \"appointment\", expectedSortCommand);","lastModifiedDate":"2023-10-20"},{"lineNumber":36,"author":{"gitId":"jylow"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":37,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":38,"author":{"gitId":"jylow"},"content":"    @Test","lastModifiedDate":"2023-10-20"},{"lineNumber":39,"author":{"gitId":"jylow"},"content":"    public void parse_invalidArg_throwsParseException() {","lastModifiedDate":"2023-10-20"},{"lineNumber":40,"author":{"gitId":"jylow"},"content":"        assertParseFailure(parser, \"sorter\", String.format(MESSAGE_INVALID_COMMAND_FORMAT, SortCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-20"},{"lineNumber":41,"author":{"gitId":"jylow"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":42,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":43,"author":{"gitId":"jylow"},"content":"}","lastModifiedDate":"2023-10-20"}],"authorContributionMap":{"jylow":43}},{"path":"src/test/java/seedu/address/model/AddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-12-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2018-04-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"AlyssaPng"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2023-10-23"},{"lineNumber":11,"author":{"gitId":"AlyssaPng"},"content":"import static seedu.address.testutil.TypicalPersons.ELLE;","lastModifiedDate":"2023-10-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-12-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-12-24"},{"lineNumber":23,"author":{"gitId":"AlyssaPng"},"content":"import seedu.address.model.financialplan.FinancialPlan;","lastModifiedDate":"2023-10-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2018-08-07"},{"lineNumber":26,"author":{"gitId":"AlyssaPng"},"content":"import seedu.address.model.person.gatheremail.GatherEmailByFinancialPlan;","lastModifiedDate":"2023-10-23"},{"lineNumber":27,"author":{"gitId":"AlyssaPng"},"content":"import seedu.address.model.person.gatheremail.GatherEmailByTag;","lastModifiedDate":"2023-10-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-04-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"public class AddressBookTest {","lastModifiedDate":"2016-12-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2016-12-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2016-12-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), addressBook.getPersonList());","lastModifiedDate":"2016-12-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.resetData(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void resetData_withValidReadOnlyAddressBook_replacesData() {","lastModifiedDate":"2016-12-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        AddressBook newData \u003d getTypicalAddressBook();","lastModifiedDate":"2017-07-19"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        addressBook.resetData(newData);","lastModifiedDate":"2016-12-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertEquals(newData, addressBook);","lastModifiedDate":"2016-12-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void resetData_withDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // Two persons with the same identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2018-04-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-04-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e newPersons \u003d Arrays.asList(ALICE, editedAlice);","lastModifiedDate":"2018-04-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        AddressBookStub newData \u003d new AddressBookStub(newPersons);","lastModifiedDate":"2018-03-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e addressBook.resetData(newData));","lastModifiedDate":"2019-03-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":62,"author":{"gitId":"AlyssaPng"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":63,"author":{"gitId":"AlyssaPng"},"content":"    public void gatherByFinancialPlan_noPersonFound() {","lastModifiedDate":"2023-10-22"},{"lineNumber":64,"author":{"gitId":"AlyssaPng"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2023-10-18"},{"lineNumber":65,"author":{"gitId":"AlyssaPng"},"content":"        GatherEmailByFinancialPlan prompt \u003d new GatherEmailByFinancialPlan(\"Sample Financial Plan 3\");","lastModifiedDate":"2023-10-23"},{"lineNumber":66,"author":{"gitId":"AlyssaPng"},"content":"        assertEquals(new String(), addressBook.gatherEmails(prompt));","lastModifiedDate":"2023-10-18"},{"lineNumber":67,"author":{"gitId":"AlyssaPng"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":68,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":69,"author":{"gitId":"AlyssaPng"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":70,"author":{"gitId":"AlyssaPng"},"content":"    public void gatherByFinancialPlan_personFound() {","lastModifiedDate":"2023-10-22"},{"lineNumber":71,"author":{"gitId":"AlyssaPng"},"content":"        addressBook.addPerson(ELLE);","lastModifiedDate":"2023-10-18"},{"lineNumber":72,"author":{"gitId":"AlyssaPng"},"content":"        FinancialPlan elleFinancialPlan \u003d ELLE.getFinancialPlans().iterator().next();","lastModifiedDate":"2023-10-18"},{"lineNumber":73,"author":{"gitId":"AlyssaPng"},"content":"        String fpDescription \u003d elleFinancialPlan.toString().replaceAll(\"[\\\\[\\\\]\\\\(\\\\)]\", \"\");","lastModifiedDate":"2023-10-22"},{"lineNumber":74,"author":{"gitId":"AlyssaPng"},"content":"        GatherEmailByFinancialPlan prompt \u003d new GatherEmailByFinancialPlan(fpDescription);","lastModifiedDate":"2023-10-23"},{"lineNumber":75,"author":{"gitId":"jylow"},"content":"        assertEquals(ELLE.getEmail().toString() + \";\", addressBook.gatherEmails(prompt));","lastModifiedDate":"2023-11-11"},{"lineNumber":76,"author":{"gitId":"AlyssaPng"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":77,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":78,"author":{"gitId":"AlyssaPng"},"content":"    @Test","lastModifiedDate":"2023-10-23"},{"lineNumber":79,"author":{"gitId":"AlyssaPng"},"content":"    public void gatherByTag_noPersonFound() {","lastModifiedDate":"2023-10-23"},{"lineNumber":80,"author":{"gitId":"AlyssaPng"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2023-10-23"},{"lineNumber":81,"author":{"gitId":"AlyssaPng"},"content":"        GatherEmailByTag prompt \u003d new GatherEmailByTag(VALID_TAG_HUSBAND);","lastModifiedDate":"2023-10-23"},{"lineNumber":82,"author":{"gitId":"AlyssaPng"},"content":"        assertEquals(new String(), addressBook.gatherEmails(prompt));","lastModifiedDate":"2023-10-23"},{"lineNumber":83,"author":{"gitId":"AlyssaPng"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":84,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":85,"author":{"gitId":"AlyssaPng"},"content":"    @Test","lastModifiedDate":"2023-10-23"},{"lineNumber":86,"author":{"gitId":"AlyssaPng"},"content":"    public void gatherByTag_personFound() {","lastModifiedDate":"2023-10-23"},{"lineNumber":87,"author":{"gitId":"AlyssaPng"},"content":"        addressBook.addPerson(BOB);","lastModifiedDate":"2023-10-23"},{"lineNumber":88,"author":{"gitId":"AlyssaPng"},"content":"        GatherEmailByTag prompt \u003d new GatherEmailByTag(VALID_TAG_HUSBAND);","lastModifiedDate":"2023-10-23"},{"lineNumber":89,"author":{"gitId":"jylow"},"content":"        assertEquals(BOB.getEmail().toString() + \";\", addressBook.gatherEmails(prompt));","lastModifiedDate":"2023-11-11"},{"lineNumber":90,"author":{"gitId":"AlyssaPng"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":91,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.hasPerson(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertFalse(addressBook.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void hasPerson_personWithSameIdentityFieldsInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2018-08-06"},{"lineNumber":112,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-06"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasPerson(editedAlice));","lastModifiedDate":"2018-08-06"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public void getPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e addressBook.getPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        String expected \u003d AddressBook.class.getCanonicalName() + \"{persons\u003d\" + addressBook.getPersonList() + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertEquals(expected, addressBook.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * A stub ReadOnlyAddressBook whose persons list can violate interface constraints.","lastModifiedDate":"2018-03-29"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-24"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    private static class AddressBookStub implements ReadOnlyAddressBook {","lastModifiedDate":"2016-12-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        private final ObservableList\u003cPerson\u003e persons \u003d FXCollections.observableArrayList();","lastModifiedDate":"2018-01-10"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        AddressBookStub(Collection\u003cPerson\u003e persons) {","lastModifiedDate":"2018-03-29"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            this.persons.setAll(persons);","lastModifiedDate":"2016-12-24"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-12-24"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":139,"author":{"gitId":"-"},"content":"            return persons;","lastModifiedDate":"2016-12-24"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":143,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-24"}],"authorContributionMap":{"AlyssaPng":33,"jylow":2,"-":108}},{"path":"src/test/java/seedu/address/model/ModelManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2017-05-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"AlyssaPng"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2023-10-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2017-07-19"},{"lineNumber":11,"author":{"gitId":"AlyssaPng"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2023-10-23"},{"lineNumber":12,"author":{"gitId":"AlyssaPng"},"content":"import static seedu.address.testutil.TypicalPersons.ELLE;","lastModifiedDate":"2023-10-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":21,"author":{"gitId":"AlyssaPng"},"content":"import seedu.address.model.financialplan.FinancialPlan;","lastModifiedDate":"2023-10-18"},{"lineNumber":22,"author":{"gitId":"AlyssaPng"},"content":"import seedu.address.model.person.gatheremail.GatherEmailByFinancialPlan;","lastModifiedDate":"2023-10-23"},{"lineNumber":23,"author":{"gitId":"AlyssaPng"},"content":"import seedu.address.model.person.gatheremail.GatherEmailByTag;","lastModifiedDate":"2023-10-23"},{"lineNumber":24,"author":{"gitId":"sopa301"},"content":"import seedu.address.model.person.predicates.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-10-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.testutil.AddressBookBuilder;","lastModifiedDate":"2017-05-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class ModelManagerTest {","lastModifiedDate":"2017-05-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2018-08-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertEquals(new GuiSettings(), modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertEquals(new AddressBook(), new AddressBook(modelManager.getAddressBook()));","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void setUserPrefs_nullUserPrefs_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void setUserPrefs_validUserPrefs_copiesUserPrefs() {","lastModifiedDate":"2018-12-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"address/book/file/path\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1, 2, 3, 4));","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        modelManager.setUserPrefs(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertEquals(userPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // Modifying userPrefs should not modify modelManager\u0027s userPrefs","lastModifiedDate":"2018-12-06"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        UserPrefs oldUserPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"new/address/book/file/path\"));","lastModifiedDate":"2018-12-06"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertEquals(oldUserPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setGuiSettings(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void setGuiSettings_validGuiSettings_setsGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(1, 2, 3, 4);","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        modelManager.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertEquals(guiSettings, modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setAddressBookFilePath(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"AlyssaPng"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":75,"author":{"gitId":"AlyssaPng"},"content":"    public void gatherEmailsByFinancialPlan_noPersonFound() {","lastModifiedDate":"2023-10-22"},{"lineNumber":76,"author":{"gitId":"AlyssaPng"},"content":"        modelManager.addPerson(ALICE);","lastModifiedDate":"2023-10-18"},{"lineNumber":77,"author":{"gitId":"AlyssaPng"},"content":"        GatherEmailByFinancialPlan prompt \u003d new GatherEmailByFinancialPlan(\"Sample Financial Plan 3\");","lastModifiedDate":"2023-10-23"},{"lineNumber":78,"author":{"gitId":"AlyssaPng"},"content":"        assertEquals(new String(), modelManager.gatherEmails(prompt));","lastModifiedDate":"2023-10-18"},{"lineNumber":79,"author":{"gitId":"AlyssaPng"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":80,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":81,"author":{"gitId":"AlyssaPng"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":82,"author":{"gitId":"AlyssaPng"},"content":"    public void gatherEmailsByFinancialPlan_personFound() {","lastModifiedDate":"2023-10-22"},{"lineNumber":83,"author":{"gitId":"AlyssaPng"},"content":"        modelManager.addPerson(ELLE);","lastModifiedDate":"2023-10-18"},{"lineNumber":84,"author":{"gitId":"AlyssaPng"},"content":"        FinancialPlan elleFinancialPlan \u003d ELLE.getFinancialPlans().iterator().next();","lastModifiedDate":"2023-10-18"},{"lineNumber":85,"author":{"gitId":"AlyssaPng"},"content":"        String fpDescription \u003d elleFinancialPlan.toString().replaceAll(\"[\\\\[\\\\]\\\\(\\\\)]\", \"\");","lastModifiedDate":"2023-10-22"},{"lineNumber":86,"author":{"gitId":"AlyssaPng"},"content":"        GatherEmailByFinancialPlan prompt \u003d new GatherEmailByFinancialPlan(fpDescription);","lastModifiedDate":"2023-10-23"},{"lineNumber":87,"author":{"gitId":"jylow"},"content":"        assertEquals(ELLE.getEmail().toString() + \";\", modelManager.gatherEmails(prompt));","lastModifiedDate":"2023-11-11"},{"lineNumber":88,"author":{"gitId":"AlyssaPng"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":89,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":90,"author":{"gitId":"AlyssaPng"},"content":"    @Test","lastModifiedDate":"2023-10-23"},{"lineNumber":91,"author":{"gitId":"AlyssaPng"},"content":"    public void gatherByTag_noPersonFound() {","lastModifiedDate":"2023-10-23"},{"lineNumber":92,"author":{"gitId":"AlyssaPng"},"content":"        modelManager.addPerson(ALICE);","lastModifiedDate":"2023-10-23"},{"lineNumber":93,"author":{"gitId":"AlyssaPng"},"content":"        GatherEmailByTag prompt \u003d new GatherEmailByTag(VALID_TAG_HUSBAND);","lastModifiedDate":"2023-10-23"},{"lineNumber":94,"author":{"gitId":"AlyssaPng"},"content":"        assertEquals(new String(), modelManager.gatherEmails(prompt));","lastModifiedDate":"2023-10-23"},{"lineNumber":95,"author":{"gitId":"AlyssaPng"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":96,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":97,"author":{"gitId":"AlyssaPng"},"content":"    @Test","lastModifiedDate":"2023-10-23"},{"lineNumber":98,"author":{"gitId":"AlyssaPng"},"content":"    public void gatherByTag_personFound() {","lastModifiedDate":"2023-10-23"},{"lineNumber":99,"author":{"gitId":"AlyssaPng"},"content":"        modelManager.addPerson(BOB);","lastModifiedDate":"2023-10-23"},{"lineNumber":100,"author":{"gitId":"AlyssaPng"},"content":"        GatherEmailByTag prompt \u003d new GatherEmailByTag(VALID_TAG_HUSBAND);","lastModifiedDate":"2023-10-23"},{"lineNumber":101,"author":{"gitId":"jylow"},"content":"        assertEquals(BOB.getEmail().toString() + \";\", modelManager.gatherEmails(prompt));","lastModifiedDate":"2023-11-11"},{"lineNumber":102,"author":{"gitId":"AlyssaPng"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":103,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_validPath_setsAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        Path path \u003d Paths.get(\"address/book/file/path\");","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        modelManager.setAddressBookFilePath(path);","lastModifiedDate":"2018-11-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertEquals(path, modelManager.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasPerson(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        modelManager.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-31"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        AddressBook addressBook \u003d new AddressBookBuilder().withPerson(ALICE).withPerson(BENSON).build();","lastModifiedDate":"2017-07-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        AddressBook differentAddressBook \u003d new AddressBook();","lastModifiedDate":"2017-05-31"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        modelManager \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2018-08-06"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        ModelManager modelManagerCopy \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2017-05-31"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManagerCopy));","lastModifiedDate":"2017-05-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManager));","lastModifiedDate":"2017-05-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(null));","lastModifiedDate":"2017-05-31"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(5));","lastModifiedDate":"2017-05-31"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        // different addressBook -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(differentAddressBook, userPrefs)));","lastModifiedDate":"2017-05-31"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        // different filteredList -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        String[] keywords \u003d ALICE.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-19"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        modelManager.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(keywords)));","lastModifiedDate":"2017-06-12"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, userPrefs)));","lastModifiedDate":"2017-05-31"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        // resets modelManager to initial state for upcoming tests","lastModifiedDate":"2017-08-05"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        modelManager.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        // different userPrefs -\u003e returns false","lastModifiedDate":"2018-11-27"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        UserPrefs differentUserPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        differentUserPrefs.setAddressBookFilePath(Paths.get(\"differentFilePath\"));","lastModifiedDate":"2018-08-09"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, differentUserPrefs)));","lastModifiedDate":"2018-11-27"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":168,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-31"}],"authorContributionMap":{"AlyssaPng":34,"sopa301":1,"jylow":2,"-":131}},{"path":"src/test/java/seedu/address/model/appointment/AppointmentTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Kb-Tay"},"content":"package seedu.address.model.appointment;","lastModifiedDate":"2023-10-19"},{"lineNumber":2,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":3,"author":{"gitId":"Kb-Tay"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-20"},{"lineNumber":4,"author":{"gitId":"Kb-Tay"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-20"},{"lineNumber":5,"author":{"gitId":"Kb-Tay"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-20"},{"lineNumber":6,"author":{"gitId":"Kb-Tay"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-19"},{"lineNumber":7,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":8,"author":{"gitId":"Kb-Tay"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-11-10"},{"lineNumber":9,"author":{"gitId":"Kb-Tay"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-10-19"},{"lineNumber":10,"author":{"gitId":"Kb-Tay"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-10-20"},{"lineNumber":11,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":12,"author":{"gitId":"Kb-Tay"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-19"},{"lineNumber":13,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":14,"author":{"gitId":"Kb-Tay"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-10-20"},{"lineNumber":15,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":16,"author":{"gitId":"Kb-Tay"},"content":"class AppointmentTest {","lastModifiedDate":"2023-10-19"},{"lineNumber":17,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":18,"author":{"gitId":"Kb-Tay"},"content":"    public static final LocalDateTime VALID_DATE_TIME \u003d LocalDateTime.of(2023, 1,","lastModifiedDate":"2023-11-10"},{"lineNumber":19,"author":{"gitId":"Kb-Tay"},"content":"            1, 20, 0);","lastModifiedDate":"2023-11-10"},{"lineNumber":20,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":21,"author":{"gitId":"Kb-Tay"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":22,"author":{"gitId":"Kb-Tay"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-10-19"},{"lineNumber":23,"author":{"gitId":"Kb-Tay"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Appointment(null,","lastModifiedDate":"2023-10-19"},{"lineNumber":24,"author":{"gitId":"Kb-Tay"},"content":"                LocalDateTime.of(2023, 1, 1, 1, 1)));","lastModifiedDate":"2023-10-19"},{"lineNumber":25,"author":{"gitId":"Kb-Tay"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":26,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":27,"author":{"gitId":"Kb-Tay"},"content":"    @Test","lastModifiedDate":"2023-10-20"},{"lineNumber":28,"author":{"gitId":"Kb-Tay"},"content":"    public void isValidDesc() {","lastModifiedDate":"2023-10-20"},{"lineNumber":29,"author":{"gitId":"Kb-Tay"},"content":"        // null name","lastModifiedDate":"2023-10-20"},{"lineNumber":30,"author":{"gitId":"Kb-Tay"},"content":"        assertThrows(NullPointerException.class, () -\u003e Appointment.isValidDesc(null));","lastModifiedDate":"2023-10-20"},{"lineNumber":31,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":32,"author":{"gitId":"Kb-Tay"},"content":"        // invalid Appointment name","lastModifiedDate":"2023-10-20"},{"lineNumber":33,"author":{"gitId":"Kb-Tay"},"content":"        assertFalse(Name.isValidName(\"\")); // empty string","lastModifiedDate":"2023-10-20"},{"lineNumber":34,"author":{"gitId":"Kb-Tay"},"content":"        assertFalse(Name.isValidName(\" \")); // spaces only","lastModifiedDate":"2023-10-20"},{"lineNumber":35,"author":{"gitId":"Kb-Tay"},"content":"        assertFalse(Name.isValidName(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2023-10-20"},{"lineNumber":36,"author":{"gitId":"Kb-Tay"},"content":"        assertFalse(Name.isValidName(\"peter*\")); // contains non-alphanumeric characters","lastModifiedDate":"2023-10-20"},{"lineNumber":37,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":38,"author":{"gitId":"Kb-Tay"},"content":"        // valid Appointment name","lastModifiedDate":"2023-10-20"},{"lineNumber":39,"author":{"gitId":"Kb-Tay"},"content":"        assertTrue(Name.isValidName(\"insurance\")); // alphabets only","lastModifiedDate":"2023-10-20"},{"lineNumber":40,"author":{"gitId":"Kb-Tay"},"content":"        assertTrue(Name.isValidName(\"12345\")); // numbers only","lastModifiedDate":"2023-10-20"},{"lineNumber":41,"author":{"gitId":"Kb-Tay"},"content":"        assertTrue(Name.isValidName(\"review Insurance 1\")); // alphanumeric characters","lastModifiedDate":"2023-10-20"},{"lineNumber":42,"author":{"gitId":"Kb-Tay"},"content":"        assertTrue(Name.isValidName(\"Review Insurance\")); // with capital letters","lastModifiedDate":"2023-10-20"},{"lineNumber":43,"author":{"gitId":"Kb-Tay"},"content":"        assertTrue(Name.isValidName(\"Review Insurance policy 1\")); // long names","lastModifiedDate":"2023-10-20"},{"lineNumber":44,"author":{"gitId":"Kb-Tay"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":45,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":46,"author":{"gitId":"Kb-Tay"},"content":"    @Test","lastModifiedDate":"2023-10-20"},{"lineNumber":47,"author":{"gitId":"Kb-Tay"},"content":"    public void isValidDateFormat() {","lastModifiedDate":"2023-10-20"},{"lineNumber":48,"author":{"gitId":"Kb-Tay"},"content":"        // null date","lastModifiedDate":"2023-10-20"},{"lineNumber":49,"author":{"gitId":"Kb-Tay"},"content":"        assertThrows(NullPointerException.class, () -\u003e Appointment.isValidDateFormat(null));","lastModifiedDate":"2023-10-20"},{"lineNumber":50,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":51,"author":{"gitId":"Kb-Tay"},"content":"        // valid date","lastModifiedDate":"2023-10-20"},{"lineNumber":52,"author":{"gitId":"Kb-Tay"},"content":"        assertTrue(Appointment.isValidDateFormat(\"01-01-2023 20:00\"));","lastModifiedDate":"2023-10-20"},{"lineNumber":53,"author":{"gitId":"Kb-Tay"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":54,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":55,"author":{"gitId":"Kb-Tay"},"content":"    @Test","lastModifiedDate":"2023-10-20"},{"lineNumber":56,"author":{"gitId":"Kb-Tay"},"content":"    public void isValidAppointment() {","lastModifiedDate":"2023-10-20"},{"lineNumber":57,"author":{"gitId":"Kb-Tay"},"content":"        // null appointment string representation","lastModifiedDate":"2023-10-20"},{"lineNumber":58,"author":{"gitId":"Kb-Tay"},"content":"        assertThrows(NullPointerException.class, () -\u003e Appointment.isValidAppointment(null));","lastModifiedDate":"2023-10-20"},{"lineNumber":59,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":60,"author":{"gitId":"Kb-Tay"},"content":"        // invalid appointment string format","lastModifiedDate":"2023-10-20"},{"lineNumber":61,"author":{"gitId":"Kb-Tay"},"content":"        assertFalse(Appointment.isValidAppointment(\"Review Insurance 01-01-2023 20:00\"));","lastModifiedDate":"2023-10-20"},{"lineNumber":62,"author":{"gitId":"Kb-Tay"},"content":"        assertFalse(Appointment.isValidAppointment(\"Review Insurance, \")); // missing date","lastModifiedDate":"2023-10-20"},{"lineNumber":63,"author":{"gitId":"Kb-Tay"},"content":"        assertFalse(Appointment.isValidAppointment(\"01-01-2023 20:00\")); // missing name","lastModifiedDate":"2023-10-20"},{"lineNumber":64,"author":{"gitId":"Kb-Tay"},"content":"        assertFalse(Appointment.isValidAppointment(\"Review Insurance 01-01-2023 20:00\")); // wrong format","lastModifiedDate":"2023-10-20"},{"lineNumber":65,"author":{"gitId":"Kb-Tay"},"content":"        assertFalse(Appointment.isValidAppointment(\"Review Insurance 1 May 2023 20:00\")); // wrong date","lastModifiedDate":"2023-10-20"},{"lineNumber":66,"author":{"gitId":"Kb-Tay"},"content":"        assertFalse(Appointment.isValidAppointment(\"Review Insurance 01-01-2023 8pm\")); // wrong time","lastModifiedDate":"2023-10-20"},{"lineNumber":67,"author":{"gitId":"Kb-Tay"},"content":"        // valid appointment string","lastModifiedDate":"2023-10-20"},{"lineNumber":68,"author":{"gitId":"Kb-Tay"},"content":"        assertTrue(Appointment.isValidAppointment(\"Review Insurance, 01-01-2023 20:00\"));","lastModifiedDate":"2023-10-20"},{"lineNumber":69,"author":{"gitId":"Kb-Tay"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":70,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":71,"author":{"gitId":"Kb-Tay"},"content":"    @Test","lastModifiedDate":"2023-10-20"},{"lineNumber":72,"author":{"gitId":"Kb-Tay"},"content":"    public void testToStringReturnsExpectedString() {","lastModifiedDate":"2023-10-20"},{"lineNumber":73,"author":{"gitId":"Kb-Tay"},"content":"        Appointment appointment \u003d new Appointment(\"Review Insurance\",","lastModifiedDate":"2023-10-20"},{"lineNumber":74,"author":{"gitId":"Kb-Tay"},"content":"                VALID_DATE_TIME);","lastModifiedDate":"2023-10-20"},{"lineNumber":75,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":76,"author":{"gitId":"Kb-Tay"},"content":"        // correct string","lastModifiedDate":"2023-10-20"},{"lineNumber":77,"author":{"gitId":"Kb-Tay"},"content":"        assertEquals(appointment.toString(), \"Review Insurance, 01-01-2023 20:00\");","lastModifiedDate":"2023-10-20"},{"lineNumber":78,"author":{"gitId":"Kb-Tay"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":79,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":80,"author":{"gitId":"Kb-Tay"},"content":"    @Test","lastModifiedDate":"2023-10-20"},{"lineNumber":81,"author":{"gitId":"Kb-Tay"},"content":"    public void equals() {","lastModifiedDate":"2023-10-20"},{"lineNumber":82,"author":{"gitId":"Kb-Tay"},"content":"        Appointment appointment \u003d new Appointment(\"Review Insurance\",","lastModifiedDate":"2023-10-20"},{"lineNumber":83,"author":{"gitId":"Kb-Tay"},"content":"                LocalDateTime.of(2023, 1, 1, 20, 0));","lastModifiedDate":"2023-10-20"},{"lineNumber":84,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":85,"author":{"gitId":"Kb-Tay"},"content":"        // same values","lastModifiedDate":"2023-10-20"},{"lineNumber":86,"author":{"gitId":"Kb-Tay"},"content":"        assertTrue(appointment.equals(new Appointment(\"Review Insurance\",","lastModifiedDate":"2023-10-20"},{"lineNumber":87,"author":{"gitId":"Kb-Tay"},"content":"                VALID_DATE_TIME)));","lastModifiedDate":"2023-10-20"},{"lineNumber":88,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":89,"author":{"gitId":"Kb-Tay"},"content":"        // same object","lastModifiedDate":"2023-10-20"},{"lineNumber":90,"author":{"gitId":"Kb-Tay"},"content":"        assertTrue(appointment.equals(appointment));","lastModifiedDate":"2023-10-20"},{"lineNumber":91,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":92,"author":{"gitId":"Kb-Tay"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-20"},{"lineNumber":93,"author":{"gitId":"Kb-Tay"},"content":"        assertFalse(appointment.equals(null));","lastModifiedDate":"2023-10-20"},{"lineNumber":94,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":95,"author":{"gitId":"Kb-Tay"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-20"},{"lineNumber":96,"author":{"gitId":"Kb-Tay"},"content":"        assertFalse(appointment.equals(5.0f));","lastModifiedDate":"2023-10-20"},{"lineNumber":97,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":98,"author":{"gitId":"Kb-Tay"},"content":"        // different name values -\u003e returns false","lastModifiedDate":"2023-10-20"},{"lineNumber":99,"author":{"gitId":"Kb-Tay"},"content":"        assertFalse(appointment.equals(new Appointment(\"Insurance nomination\",","lastModifiedDate":"2023-10-20"},{"lineNumber":100,"author":{"gitId":"Kb-Tay"},"content":"                LocalDateTime.of(2023, 1, 1, 20, 0))));","lastModifiedDate":"2023-10-20"},{"lineNumber":101,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":102,"author":{"gitId":"Kb-Tay"},"content":"        // different date obj -\u003e returns false","lastModifiedDate":"2023-10-20"},{"lineNumber":103,"author":{"gitId":"Kb-Tay"},"content":"        assertFalse(appointment.equals(new Appointment(\"Review insurance\",","lastModifiedDate":"2023-10-20"},{"lineNumber":104,"author":{"gitId":"Kb-Tay"},"content":"                LocalDateTime.of(2023, 5, 2, 18, 0))));","lastModifiedDate":"2023-10-20"},{"lineNumber":105,"author":{"gitId":"Kb-Tay"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":106,"author":{"gitId":"Kb-Tay"},"content":"    @Test","lastModifiedDate":"2023-10-20"},{"lineNumber":107,"author":{"gitId":"Kb-Tay"},"content":"    public void parseAppointmentDate() {","lastModifiedDate":"2023-10-20"},{"lineNumber":108,"author":{"gitId":"Kb-Tay"},"content":"        LocalDateTime expectedDateTime \u003d VALID_DATE_TIME;","lastModifiedDate":"2023-10-20"},{"lineNumber":109,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":110,"author":{"gitId":"Kb-Tay"},"content":"        assertEquals(expectedDateTime, Appointment.parseAppointmentDate(\"01-01-2023 20:00\"));","lastModifiedDate":"2023-10-20"},{"lineNumber":111,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":112,"author":{"gitId":"Kb-Tay"},"content":"        // invalid day","lastModifiedDate":"2023-10-20"},{"lineNumber":113,"author":{"gitId":"Kb-Tay"},"content":"        assertThrows(DateTimeParseException.class, () -\u003e Appointment.parseAppointmentDate(\"32-01-2023 20:00\"));","lastModifiedDate":"2023-10-20"},{"lineNumber":114,"author":{"gitId":"Kb-Tay"},"content":"        // invalid month","lastModifiedDate":"2023-10-20"},{"lineNumber":115,"author":{"gitId":"Kb-Tay"},"content":"        assertThrows(DateTimeParseException.class, () -\u003e Appointment.parseAppointmentDate(\"01-13-2023 20:00\"));","lastModifiedDate":"2023-10-20"},{"lineNumber":116,"author":{"gitId":"Kb-Tay"},"content":"        // invalid year","lastModifiedDate":"2023-10-20"},{"lineNumber":117,"author":{"gitId":"Kb-Tay"},"content":"        assertThrows(DateTimeParseException.class, () -\u003e Appointment.parseAppointmentDate(\"01-13-0100 20:00\"));","lastModifiedDate":"2023-10-20"},{"lineNumber":118,"author":{"gitId":"Kb-Tay"},"content":"        // invalid hours","lastModifiedDate":"2023-10-20"},{"lineNumber":119,"author":{"gitId":"Kb-Tay"},"content":"        assertThrows(DateTimeParseException.class, () -\u003e Appointment.parseAppointmentDate(\"01-01-2023 25:00\"));","lastModifiedDate":"2023-10-20"},{"lineNumber":120,"author":{"gitId":"Kb-Tay"},"content":"        // invalid minutes","lastModifiedDate":"2023-10-20"},{"lineNumber":121,"author":{"gitId":"Kb-Tay"},"content":"        assertThrows(DateTimeParseException.class, () -\u003e Appointment.parseAppointmentDate(\"01-01-2023 20:61\"));","lastModifiedDate":"2023-10-20"},{"lineNumber":122,"author":{"gitId":"Kb-Tay"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":123,"author":{"gitId":"Kb-Tay"},"content":"    @Test","lastModifiedDate":"2023-10-20"},{"lineNumber":124,"author":{"gitId":"Kb-Tay"},"content":"    public void parseAppointmentDescription() {","lastModifiedDate":"2023-10-20"},{"lineNumber":125,"author":{"gitId":"Kb-Tay"},"content":"        Appointment expectedAppointment \u003d new Appointment(\"Review Insurance\",","lastModifiedDate":"2023-10-20"},{"lineNumber":126,"author":{"gitId":"Kb-Tay"},"content":"                VALID_DATE_TIME);","lastModifiedDate":"2023-10-20"},{"lineNumber":127,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":128,"author":{"gitId":"Kb-Tay"},"content":"        Appointment testAppointment \u003d Appointment.parseAppointmentDescription(\"Review Insurance, 01-01-2023 20:00\");","lastModifiedDate":"2023-10-20"},{"lineNumber":129,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":130,"author":{"gitId":"Kb-Tay"},"content":"        assertEquals(expectedAppointment, testAppointment);","lastModifiedDate":"2023-10-20"},{"lineNumber":131,"author":{"gitId":"Kb-Tay"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":132,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":133,"author":{"gitId":"Kb-Tay"},"content":"    @Test","lastModifiedDate":"2023-11-10"},{"lineNumber":134,"author":{"gitId":"Kb-Tay"},"content":"    public void compareTo() {","lastModifiedDate":"2023-11-10"},{"lineNumber":135,"author":{"gitId":"Kb-Tay"},"content":"        Appointment appointment1 \u003d new Appointment(\"Review Insurance\", VALID_DATE_TIME);","lastModifiedDate":"2023-11-10"},{"lineNumber":136,"author":{"gitId":"Kb-Tay"},"content":"        Appointment appointment2 \u003d new Appointment(\"Buy Insurance\", LocalDateTime.of(2023, 1,","lastModifiedDate":"2023-11-10"},{"lineNumber":137,"author":{"gitId":"Kb-Tay"},"content":"                1, 8, 0));","lastModifiedDate":"2023-11-10"},{"lineNumber":138,"author":{"gitId":"Kb-Tay"},"content":"        NullAppointment nullAppointment \u003d NullAppointment.getNullAppointment();","lastModifiedDate":"2023-11-10"},{"lineNumber":139,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":140,"author":{"gitId":"Kb-Tay"},"content":"        assertTrue(appointment1.compareTo(nullAppointment) \u003c 0);","lastModifiedDate":"2023-11-10"},{"lineNumber":141,"author":{"gitId":"Kb-Tay"},"content":"        assertTrue(appointment1.compareTo(appointment1) \u003d\u003d 0);","lastModifiedDate":"2023-11-10"},{"lineNumber":142,"author":{"gitId":"Kb-Tay"},"content":"        assertTrue(appointment1.compareTo(appointment2) \u003e 0);","lastModifiedDate":"2023-11-10"},{"lineNumber":143,"author":{"gitId":"Kb-Tay"},"content":"    }","lastModifiedDate":"2023-11-10"},{"lineNumber":144,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":145,"author":{"gitId":"Kb-Tay"},"content":"    @Test","lastModifiedDate":"2023-11-10"},{"lineNumber":146,"author":{"gitId":"Kb-Tay"},"content":"    public void isSameDate() {","lastModifiedDate":"2023-11-10"},{"lineNumber":147,"author":{"gitId":"Kb-Tay"},"content":"        Appointment appointment1 \u003d new Appointment(\"Review Insurance\", VALID_DATE_TIME);","lastModifiedDate":"2023-11-10"},{"lineNumber":148,"author":{"gitId":"Kb-Tay"},"content":"        LocalDate dateTime \u003d LocalDate.of(2023, 1, 1);","lastModifiedDate":"2023-11-10"},{"lineNumber":149,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":150,"author":{"gitId":"Kb-Tay"},"content":"        assertTrue(appointment1.isSameDate(dateTime));","lastModifiedDate":"2023-11-10"},{"lineNumber":151,"author":{"gitId":"Kb-Tay"},"content":"    }","lastModifiedDate":"2023-11-10"},{"lineNumber":152,"author":{"gitId":"Kb-Tay"},"content":"}","lastModifiedDate":"2023-10-19"}],"authorContributionMap":{"Kb-Tay":152}},{"path":"src/test/java/seedu/address/model/appointment/NullAppointmentTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Kb-Tay"},"content":"package seedu.address.model.appointment;","lastModifiedDate":"2023-10-22"},{"lineNumber":2,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":3,"author":{"gitId":"Kb-Tay"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-22"},{"lineNumber":4,"author":{"gitId":"Kb-Tay"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-22"},{"lineNumber":5,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":6,"author":{"gitId":"Kb-Tay"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-10-22"},{"lineNumber":7,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":8,"author":{"gitId":"Kb-Tay"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-22"},{"lineNumber":9,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":10,"author":{"gitId":"Kb-Tay"},"content":"class NullAppointmentTest {","lastModifiedDate":"2023-10-22"},{"lineNumber":11,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":12,"author":{"gitId":"Kb-Tay"},"content":"    @Test","lastModifiedDate":"2023-10-22"},{"lineNumber":13,"author":{"gitId":"Kb-Tay"},"content":"    public void getNullAppointment() {","lastModifiedDate":"2023-10-22"},{"lineNumber":14,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":15,"author":{"gitId":"Kb-Tay"},"content":"        // Factory method should return same null appointment instance","lastModifiedDate":"2023-10-22"},{"lineNumber":16,"author":{"gitId":"Kb-Tay"},"content":"        NullAppointment nullAppointment1 \u003d NullAppointment.getNullAppointment();","lastModifiedDate":"2023-10-23"},{"lineNumber":17,"author":{"gitId":"Kb-Tay"},"content":"        NullAppointment nullAppointment2 \u003d NullAppointment.getNullAppointment();","lastModifiedDate":"2023-10-23"},{"lineNumber":18,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":19,"author":{"gitId":"Kb-Tay"},"content":"        assertTrue(nullAppointment1 \u003d\u003d nullAppointment2);","lastModifiedDate":"2023-10-22"},{"lineNumber":20,"author":{"gitId":"Kb-Tay"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":21,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":22,"author":{"gitId":"Kb-Tay"},"content":"    @Test","lastModifiedDate":"2023-10-22"},{"lineNumber":23,"author":{"gitId":"Kb-Tay"},"content":"    public void equals() {","lastModifiedDate":"2023-10-22"},{"lineNumber":24,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":25,"author":{"gitId":"Kb-Tay"},"content":"        NullAppointment nullAppointment1 \u003d NullAppointment.getNullAppointment();","lastModifiedDate":"2023-10-23"},{"lineNumber":26,"author":{"gitId":"Kb-Tay"},"content":"        Appointment appointment \u003d new Appointment(\"Review Insurance\",","lastModifiedDate":"2023-10-22"},{"lineNumber":27,"author":{"gitId":"Kb-Tay"},"content":"                LocalDateTime.of(2023, 1, 1, 20, 00));","lastModifiedDate":"2023-10-22"},{"lineNumber":28,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":29,"author":{"gitId":"Kb-Tay"},"content":"        assertFalse(nullAppointment1.equals(appointment));","lastModifiedDate":"2023-10-22"},{"lineNumber":30,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":31,"author":{"gitId":"Kb-Tay"},"content":"        NullAppointment nullAppointment2 \u003d NullAppointment.getNullAppointment();","lastModifiedDate":"2023-10-23"},{"lineNumber":32,"author":{"gitId":"Kb-Tay"},"content":"        assertTrue(nullAppointment1.equals(nullAppointment2));","lastModifiedDate":"2023-10-22"},{"lineNumber":33,"author":{"gitId":"Kb-Tay"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":34,"author":{"gitId":"Kb-Tay"},"content":"}","lastModifiedDate":"2023-10-22"}],"authorContributionMap":{"Kb-Tay":34}},{"path":"src/test/java/seedu/address/model/appointment/SortByAppointmentNameComparatorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"nikele2001"},"content":"package seedu.address.model.appointment;","lastModifiedDate":"2023-10-24"},{"lineNumber":2,"author":{"gitId":"nikele2001"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":3,"author":{"gitId":"nikele2001"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-24"},{"lineNumber":4,"author":{"gitId":"nikele2001"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-24"},{"lineNumber":5,"author":{"gitId":"nikele2001"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-24"},{"lineNumber":6,"author":{"gitId":"nikele2001"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":7,"author":{"gitId":"nikele2001"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-24"},{"lineNumber":8,"author":{"gitId":"nikele2001"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":9,"author":{"gitId":"nikele2001"},"content":"public class SortByAppointmentNameComparatorTest {","lastModifiedDate":"2023-10-24"},{"lineNumber":10,"author":{"gitId":"nikele2001"},"content":"    @Test","lastModifiedDate":"2023-10-24"},{"lineNumber":11,"author":{"gitId":"nikele2001"},"content":"    public void equals() {","lastModifiedDate":"2023-10-24"},{"lineNumber":12,"author":{"gitId":"nikele2001"},"content":"        SortByAppointmentDateComparator firstComparator \u003d new SortByAppointmentDateComparator();","lastModifiedDate":"2023-10-24"},{"lineNumber":13,"author":{"gitId":"nikele2001"},"content":"        SortByAppointmentDateComparator secondComparator \u003d new SortByAppointmentDateComparator();","lastModifiedDate":"2023-10-24"},{"lineNumber":14,"author":{"gitId":"nikele2001"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":15,"author":{"gitId":"nikele2001"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-24"},{"lineNumber":16,"author":{"gitId":"nikele2001"},"content":"        assertTrue(firstComparator.equals(firstComparator));","lastModifiedDate":"2023-10-24"},{"lineNumber":17,"author":{"gitId":"nikele2001"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":18,"author":{"gitId":"nikele2001"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-24"},{"lineNumber":19,"author":{"gitId":"nikele2001"},"content":"        assertFalse(firstComparator.equals(1));","lastModifiedDate":"2023-10-24"},{"lineNumber":20,"author":{"gitId":"nikele2001"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":21,"author":{"gitId":"nikele2001"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-24"},{"lineNumber":22,"author":{"gitId":"nikele2001"},"content":"        assertFalse(firstComparator.equals(null));","lastModifiedDate":"2023-10-24"},{"lineNumber":23,"author":{"gitId":"nikele2001"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":24,"author":{"gitId":"nikele2001"},"content":"        // different comparators -\u003e returns true","lastModifiedDate":"2023-10-24"},{"lineNumber":25,"author":{"gitId":"nikele2001"},"content":"        assertTrue(firstComparator.equals(secondComparator));","lastModifiedDate":"2023-10-24"},{"lineNumber":26,"author":{"gitId":"nikele2001"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":27,"author":{"gitId":"nikele2001"},"content":"    @Test","lastModifiedDate":"2023-10-24"},{"lineNumber":28,"author":{"gitId":"nikele2001"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-24"},{"lineNumber":29,"author":{"gitId":"nikele2001"},"content":"        SortByAppointmentDateComparator comparator \u003d new SortByAppointmentDateComparator();","lastModifiedDate":"2023-10-24"},{"lineNumber":30,"author":{"gitId":"nikele2001"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":31,"author":{"gitId":"nikele2001"},"content":"        String expected \u003d SortByAppointmentDateComparator.class.getCanonicalName() + \"{}\";","lastModifiedDate":"2023-10-24"},{"lineNumber":32,"author":{"gitId":"nikele2001"},"content":"        assertEquals(expected, comparator.toString());","lastModifiedDate":"2023-10-24"},{"lineNumber":33,"author":{"gitId":"nikele2001"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":34,"author":{"gitId":"nikele2001"},"content":"}","lastModifiedDate":"2023-10-24"}],"authorContributionMap":{"nikele2001":34}},{"path":"src/test/java/seedu/address/model/financialplan/FinancialPlanTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"nikele2001"},"content":"package seedu.address.model.financialplan;","lastModifiedDate":"2023-10-17"},{"lineNumber":2,"author":{"gitId":"nikele2001"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":3,"author":{"gitId":"AlyssaPng"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-23"},{"lineNumber":4,"author":{"gitId":"AlyssaPng"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-23"},{"lineNumber":5,"author":{"gitId":"AlyssaPng"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_FINANCIAL_PLAN_1;","lastModifiedDate":"2023-10-23"},{"lineNumber":6,"author":{"gitId":"nikele2001"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-16"},{"lineNumber":7,"author":{"gitId":"nikele2001"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":8,"author":{"gitId":"nikele2001"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"nikele2001"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"nikele2001"},"content":"public class FinancialPlanTest {","lastModifiedDate":"2023-10-16"},{"lineNumber":11,"author":{"gitId":"nikele2001"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":12,"author":{"gitId":"nikele2001"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-10-16"},{"lineNumber":13,"author":{"gitId":"nikele2001"},"content":"        assertThrows(NullPointerException.class, () -\u003e new FinancialPlan(null));","lastModifiedDate":"2023-10-16"},{"lineNumber":14,"author":{"gitId":"nikele2001"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":15,"author":{"gitId":"nikele2001"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":16,"author":{"gitId":"nikele2001"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":17,"author":{"gitId":"nikele2001"},"content":"    public void constructor_invalidTagName_throwsIllegalArgumentException() {","lastModifiedDate":"2023-10-16"},{"lineNumber":18,"author":{"gitId":"nikele2001"},"content":"        String invalidFinancialPlanName \u003d \"-_\";","lastModifiedDate":"2023-10-16"},{"lineNumber":19,"author":{"gitId":"nikele2001"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new FinancialPlan(invalidFinancialPlanName));","lastModifiedDate":"2023-10-16"},{"lineNumber":20,"author":{"gitId":"nikele2001"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":21,"author":{"gitId":"nikele2001"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":22,"author":{"gitId":"nikele2001"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":23,"author":{"gitId":"AlyssaPng"},"content":"    public void containsSubstring_failure() {","lastModifiedDate":"2023-10-23"},{"lineNumber":24,"author":{"gitId":"AlyssaPng"},"content":"        FinancialPlan fp \u003d new FinancialPlan(VALID_FINANCIAL_PLAN_1);","lastModifiedDate":"2023-10-23"},{"lineNumber":25,"author":{"gitId":"AlyssaPng"},"content":"        String substring \u003d \"plan 2\";","lastModifiedDate":"2023-10-23"},{"lineNumber":26,"author":{"gitId":"AlyssaPng"},"content":"        assertFalse(fp.containsSubstring(substring));","lastModifiedDate":"2023-10-23"},{"lineNumber":27,"author":{"gitId":"AlyssaPng"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":28,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":29,"author":{"gitId":"AlyssaPng"},"content":"    @Test","lastModifiedDate":"2023-10-23"},{"lineNumber":30,"author":{"gitId":"AlyssaPng"},"content":"    public void containsSubstring_success() {","lastModifiedDate":"2023-10-23"},{"lineNumber":31,"author":{"gitId":"AlyssaPng"},"content":"        FinancialPlan fp \u003d new FinancialPlan(VALID_FINANCIAL_PLAN_1);","lastModifiedDate":"2023-10-23"},{"lineNumber":32,"author":{"gitId":"AlyssaPng"},"content":"        String substring \u003d \"plan 1\";","lastModifiedDate":"2023-10-23"},{"lineNumber":33,"author":{"gitId":"AlyssaPng"},"content":"        assertTrue(fp.containsSubstring(substring));","lastModifiedDate":"2023-10-23"},{"lineNumber":34,"author":{"gitId":"AlyssaPng"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":35,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":36,"author":{"gitId":"AlyssaPng"},"content":"    @Test","lastModifiedDate":"2023-10-23"},{"lineNumber":37,"author":{"gitId":"AlyssaPng"},"content":"    public void isValidFinancialName() {","lastModifiedDate":"2023-10-23"},{"lineNumber":38,"author":{"gitId":"nikele2001"},"content":"        // null tag name","lastModifiedDate":"2023-10-16"},{"lineNumber":39,"author":{"gitId":"nikele2001"},"content":"        assertThrows(NullPointerException.class, () -\u003e FinancialPlan.isValidFinancialPlanName(null));","lastModifiedDate":"2023-10-16"},{"lineNumber":40,"author":{"gitId":"nikele2001"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":41,"author":{"gitId":"nikele2001"},"content":"}","lastModifiedDate":"2023-10-16"}],"authorContributionMap":{"nikele2001":23,"AlyssaPng":18}},{"path":"src/test/java/seedu/address/model/person/NextOfKinNameTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"sopa301"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-09-28"},{"lineNumber":2,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":3,"author":{"gitId":"sopa301"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-09-28"},{"lineNumber":4,"author":{"gitId":"sopa301"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-09-28"},{"lineNumber":5,"author":{"gitId":"sopa301"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-09-28"},{"lineNumber":6,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":7,"author":{"gitId":"sopa301"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-28"},{"lineNumber":8,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":9,"author":{"gitId":"sopa301"},"content":"public class NextOfKinNameTest {","lastModifiedDate":"2023-09-28"},{"lineNumber":10,"author":{"gitId":"sopa301"},"content":"    @Test","lastModifiedDate":"2023-09-28"},{"lineNumber":11,"author":{"gitId":"sopa301"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-09-28"},{"lineNumber":12,"author":{"gitId":"sopa301"},"content":"        assertThrows(NullPointerException.class, () -\u003e new NextOfKinName(null));","lastModifiedDate":"2023-09-28"},{"lineNumber":13,"author":{"gitId":"sopa301"},"content":"    }","lastModifiedDate":"2023-09-28"},{"lineNumber":14,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":15,"author":{"gitId":"sopa301"},"content":"    @Test","lastModifiedDate":"2023-09-28"},{"lineNumber":16,"author":{"gitId":"sopa301"},"content":"    public void constructor_invalidNextOfKinName_throwsIllegalArgumentException() {","lastModifiedDate":"2023-09-28"},{"lineNumber":17,"author":{"gitId":"sopa301"},"content":"        String invalidName \u003d \"\";","lastModifiedDate":"2023-09-28"},{"lineNumber":18,"author":{"gitId":"sopa301"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new NextOfKinName(invalidName));","lastModifiedDate":"2023-09-28"},{"lineNumber":19,"author":{"gitId":"sopa301"},"content":"    }","lastModifiedDate":"2023-09-28"},{"lineNumber":20,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":21,"author":{"gitId":"sopa301"},"content":"    @Test","lastModifiedDate":"2023-09-28"},{"lineNumber":22,"author":{"gitId":"sopa301"},"content":"    public void isValidNextOfKinName() {","lastModifiedDate":"2023-09-28"},{"lineNumber":23,"author":{"gitId":"sopa301"},"content":"        // null name","lastModifiedDate":"2023-09-28"},{"lineNumber":24,"author":{"gitId":"sopa301"},"content":"        assertThrows(NullPointerException.class, () -\u003e NextOfKinName.isValidName(null));","lastModifiedDate":"2023-09-28"},{"lineNumber":25,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":26,"author":{"gitId":"sopa301"},"content":"        // invalid name","lastModifiedDate":"2023-09-28"},{"lineNumber":27,"author":{"gitId":"sopa301"},"content":"        assertFalse(NextOfKinName.isValidName(\"\")); // empty string","lastModifiedDate":"2023-09-28"},{"lineNumber":28,"author":{"gitId":"sopa301"},"content":"        assertFalse(NextOfKinName.isValidName(\" \")); // spaces only","lastModifiedDate":"2023-09-28"},{"lineNumber":29,"author":{"gitId":"sopa301"},"content":"        assertFalse(NextOfKinName.isValidName(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2023-09-28"},{"lineNumber":30,"author":{"gitId":"sopa301"},"content":"        assertFalse(NextOfKinName.isValidName(\"peter*\")); // contains non-alphanumeric characters","lastModifiedDate":"2023-09-28"},{"lineNumber":31,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":32,"author":{"gitId":"sopa301"},"content":"        // valid name","lastModifiedDate":"2023-09-28"},{"lineNumber":33,"author":{"gitId":"sopa301"},"content":"        assertTrue(NextOfKinName.isValidName(\"peter jack\")); // alphabets only","lastModifiedDate":"2023-09-28"},{"lineNumber":34,"author":{"gitId":"sopa301"},"content":"        assertTrue(NextOfKinName.isValidName(\"12345\")); // numbers only","lastModifiedDate":"2023-09-28"},{"lineNumber":35,"author":{"gitId":"sopa301"},"content":"        assertTrue(NextOfKinName.isValidName(\"peter the 2nd\")); // alphanumeric characters","lastModifiedDate":"2023-09-28"},{"lineNumber":36,"author":{"gitId":"sopa301"},"content":"        assertTrue(NextOfKinName.isValidName(\"Capital Tan\")); // with capital letters","lastModifiedDate":"2023-09-28"},{"lineNumber":37,"author":{"gitId":"sopa301"},"content":"        assertTrue(NextOfKinName.isValidName(\"David Roger Jackson Ray Jr 2nd\")); // long names","lastModifiedDate":"2023-09-28"},{"lineNumber":38,"author":{"gitId":"sopa301"},"content":"    }","lastModifiedDate":"2023-09-28"},{"lineNumber":39,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":40,"author":{"gitId":"sopa301"},"content":"    @Test","lastModifiedDate":"2023-09-28"},{"lineNumber":41,"author":{"gitId":"sopa301"},"content":"    public void equals() {","lastModifiedDate":"2023-09-28"},{"lineNumber":42,"author":{"gitId":"sopa301"},"content":"        NextOfKinName name \u003d new NextOfKinName(\"Valid NextOfKinName\");","lastModifiedDate":"2023-09-28"},{"lineNumber":43,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":44,"author":{"gitId":"sopa301"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-09-28"},{"lineNumber":45,"author":{"gitId":"sopa301"},"content":"        assertTrue(name.equals(new NextOfKinName(\"Valid NextOfKinName\")));","lastModifiedDate":"2023-09-28"},{"lineNumber":46,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":47,"author":{"gitId":"sopa301"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-09-28"},{"lineNumber":48,"author":{"gitId":"sopa301"},"content":"        assertTrue(name.equals(name));","lastModifiedDate":"2023-09-28"},{"lineNumber":49,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":50,"author":{"gitId":"sopa301"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-09-28"},{"lineNumber":51,"author":{"gitId":"sopa301"},"content":"        assertFalse(name.equals(null));","lastModifiedDate":"2023-09-28"},{"lineNumber":52,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":53,"author":{"gitId":"sopa301"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-09-28"},{"lineNumber":54,"author":{"gitId":"sopa301"},"content":"        assertFalse(name.equals(5.0f));","lastModifiedDate":"2023-09-28"},{"lineNumber":55,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":56,"author":{"gitId":"sopa301"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2023-09-28"},{"lineNumber":57,"author":{"gitId":"sopa301"},"content":"        assertFalse(name.equals(new NextOfKinName(\"Other Valid NextOfKinName\")));","lastModifiedDate":"2023-09-28"},{"lineNumber":58,"author":{"gitId":"sopa301"},"content":"    }","lastModifiedDate":"2023-09-28"},{"lineNumber":59,"author":{"gitId":"sopa301"},"content":"}","lastModifiedDate":"2023-09-28"}],"authorContributionMap":{"sopa301":59}},{"path":"src/test/java/seedu/address/model/person/NextOfKinPhoneTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"sopa301"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-09-28"},{"lineNumber":2,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":3,"author":{"gitId":"sopa301"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-09-28"},{"lineNumber":4,"author":{"gitId":"sopa301"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-09-28"},{"lineNumber":5,"author":{"gitId":"sopa301"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-09-28"},{"lineNumber":6,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":7,"author":{"gitId":"sopa301"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-28"},{"lineNumber":8,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":9,"author":{"gitId":"sopa301"},"content":"public class NextOfKinPhoneTest {","lastModifiedDate":"2023-09-28"},{"lineNumber":10,"author":{"gitId":"sopa301"},"content":"    @Test","lastModifiedDate":"2023-09-28"},{"lineNumber":11,"author":{"gitId":"sopa301"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-09-28"},{"lineNumber":12,"author":{"gitId":"sopa301"},"content":"        assertThrows(NullPointerException.class, () -\u003e new NextOfKinPhone(null));","lastModifiedDate":"2023-09-28"},{"lineNumber":13,"author":{"gitId":"sopa301"},"content":"    }","lastModifiedDate":"2023-09-28"},{"lineNumber":14,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":15,"author":{"gitId":"sopa301"},"content":"    @Test","lastModifiedDate":"2023-09-28"},{"lineNumber":16,"author":{"gitId":"sopa301"},"content":"    public void constructor_invalidNextOfKinPhone_throwsIllegalArgumentException() {","lastModifiedDate":"2023-09-28"},{"lineNumber":17,"author":{"gitId":"sopa301"},"content":"        String invalidPhone \u003d \"\";","lastModifiedDate":"2023-09-28"},{"lineNumber":18,"author":{"gitId":"sopa301"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new NextOfKinPhone(invalidPhone));","lastModifiedDate":"2023-09-28"},{"lineNumber":19,"author":{"gitId":"sopa301"},"content":"    }","lastModifiedDate":"2023-09-28"},{"lineNumber":20,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":21,"author":{"gitId":"sopa301"},"content":"    @Test","lastModifiedDate":"2023-09-28"},{"lineNumber":22,"author":{"gitId":"sopa301"},"content":"    public void isValidNextOfKinPhone() {","lastModifiedDate":"2023-09-28"},{"lineNumber":23,"author":{"gitId":"sopa301"},"content":"        // null phone number","lastModifiedDate":"2023-09-28"},{"lineNumber":24,"author":{"gitId":"sopa301"},"content":"        assertThrows(NullPointerException.class, () -\u003e NextOfKinPhone.isValidPhone(null));","lastModifiedDate":"2023-09-28"},{"lineNumber":25,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":26,"author":{"gitId":"sopa301"},"content":"        // invalid phone numbers","lastModifiedDate":"2023-09-28"},{"lineNumber":27,"author":{"gitId":"sopa301"},"content":"        assertFalse(NextOfKinPhone.isValidPhone(\"\")); // empty string","lastModifiedDate":"2023-09-28"},{"lineNumber":28,"author":{"gitId":"sopa301"},"content":"        assertFalse(NextOfKinPhone.isValidPhone(\" \")); // spaces only","lastModifiedDate":"2023-09-28"},{"lineNumber":29,"author":{"gitId":"sopa301"},"content":"        assertFalse(NextOfKinPhone.isValidPhone(\"91\")); // less than 3 numbers","lastModifiedDate":"2023-09-28"},{"lineNumber":30,"author":{"gitId":"sopa301"},"content":"        assertFalse(NextOfKinPhone.isValidPhone(\"phone\")); // non-numeric","lastModifiedDate":"2023-09-28"},{"lineNumber":31,"author":{"gitId":"sopa301"},"content":"        assertFalse(NextOfKinPhone.isValidPhone(\"9011p041\")); // alphabets within digits","lastModifiedDate":"2023-09-28"},{"lineNumber":32,"author":{"gitId":"sopa301"},"content":"        assertFalse(NextOfKinPhone.isValidPhone(\"9312 1534\")); // spaces within digits","lastModifiedDate":"2023-09-28"},{"lineNumber":33,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":34,"author":{"gitId":"sopa301"},"content":"        // valid phone numbers","lastModifiedDate":"2023-09-28"},{"lineNumber":35,"author":{"gitId":"sopa301"},"content":"        assertTrue(NextOfKinPhone.isValidPhone(\"911\")); // exactly 3 numbers","lastModifiedDate":"2023-09-28"},{"lineNumber":36,"author":{"gitId":"sopa301"},"content":"        assertTrue(NextOfKinPhone.isValidPhone(\"93121534\"));","lastModifiedDate":"2023-09-28"},{"lineNumber":37,"author":{"gitId":"sopa301"},"content":"        assertTrue(NextOfKinPhone.isValidPhone(\"124293842033123\")); // long phone numbers","lastModifiedDate":"2023-09-28"},{"lineNumber":38,"author":{"gitId":"sopa301"},"content":"    }","lastModifiedDate":"2023-09-28"},{"lineNumber":39,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":40,"author":{"gitId":"sopa301"},"content":"    @Test","lastModifiedDate":"2023-09-28"},{"lineNumber":41,"author":{"gitId":"sopa301"},"content":"    public void equals() {","lastModifiedDate":"2023-09-28"},{"lineNumber":42,"author":{"gitId":"sopa301"},"content":"        NextOfKinPhone phone \u003d new NextOfKinPhone(\"999\");","lastModifiedDate":"2023-09-28"},{"lineNumber":43,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":44,"author":{"gitId":"sopa301"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-09-28"},{"lineNumber":45,"author":{"gitId":"sopa301"},"content":"        assertTrue(phone.equals(new NextOfKinPhone(\"999\")));","lastModifiedDate":"2023-09-28"},{"lineNumber":46,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":47,"author":{"gitId":"sopa301"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-09-28"},{"lineNumber":48,"author":{"gitId":"sopa301"},"content":"        assertTrue(phone.equals(phone));","lastModifiedDate":"2023-09-28"},{"lineNumber":49,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":50,"author":{"gitId":"sopa301"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-09-28"},{"lineNumber":51,"author":{"gitId":"sopa301"},"content":"        assertFalse(phone.equals(null));","lastModifiedDate":"2023-09-28"},{"lineNumber":52,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":53,"author":{"gitId":"sopa301"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-09-28"},{"lineNumber":54,"author":{"gitId":"sopa301"},"content":"        assertFalse(phone.equals(5.0f));","lastModifiedDate":"2023-09-28"},{"lineNumber":55,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":56,"author":{"gitId":"sopa301"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2023-09-28"},{"lineNumber":57,"author":{"gitId":"sopa301"},"content":"        assertFalse(phone.equals(new NextOfKinPhone(\"995\")));","lastModifiedDate":"2023-09-28"},{"lineNumber":58,"author":{"gitId":"sopa301"},"content":"    }","lastModifiedDate":"2023-09-28"},{"lineNumber":59,"author":{"gitId":"sopa301"},"content":"}","lastModifiedDate":"2023-09-28"}],"authorContributionMap":{"sopa301":59}},{"path":"src/test/java/seedu/address/model/person/PersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2018-03-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":7,"author":{"gitId":"Kb-Tay"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_APPOINTMENT_DATE;","lastModifiedDate":"2023-10-20"},{"lineNumber":8,"author":{"gitId":"Kb-Tay"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_APPOINTMENT_NAME;","lastModifiedDate":"2023-10-20"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":10,"author":{"gitId":"AlyssaPng"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_FINANCIAL_PLAN_1;","lastModifiedDate":"2023-10-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":12,"author":{"gitId":"sopa301"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NEXT_OF_KIN_NAME_BOB;","lastModifiedDate":"2023-09-29"},{"lineNumber":13,"author":{"gitId":"sopa301"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NEXT_OF_KIN_PHONE_BOB;","lastModifiedDate":"2023-09-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2018-04-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2018-04-19"},{"lineNumber":18,"author":{"gitId":"Kb-Tay"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2023-10-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":20,"author":{"gitId":"AlyssaPng"},"content":"import static seedu.address.testutil.TypicalPersons.ELLE;","lastModifiedDate":"2023-10-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":24,"author":{"gitId":"AlyssaPng"},"content":"import seedu.address.model.financialplan.FinancialPlan;","lastModifiedDate":"2023-10-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-03-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class PersonTest {","lastModifiedDate":"2018-03-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2018-03-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e person.getTags().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void isSamePerson() {","lastModifiedDate":"2018-04-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // same name, all other attributes different -\u003e returns true","lastModifiedDate":"2020-12-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2020-12-18"},{"lineNumber":45,"author":{"gitId":"sopa301"},"content":"                .withAddress(VALID_ADDRESS_BOB).withNextOfKinName(VALID_NEXT_OF_KIN_NAME_BOB)","lastModifiedDate":"2023-09-29"},{"lineNumber":46,"author":{"gitId":"sopa301"},"content":"                .withNextOfKinPhone(VALID_NEXT_OF_KIN_PHONE_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2023-09-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2020-12-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // different name, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // name differs in case, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        Person editedBob \u003d new PersonBuilder(BOB).withName(VALID_NAME_BOB.toLowerCase()).build();","lastModifiedDate":"2020-12-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertFalse(BOB.isSamePerson(editedBob));","lastModifiedDate":"2020-12-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // name has trailing spaces, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        String nameWithTrailingSpaces \u003d VALID_NAME_BOB + \" \";","lastModifiedDate":"2020-12-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        editedBob \u003d new PersonBuilder(BOB).withName(nameWithTrailingSpaces).build();","lastModifiedDate":"2020-12-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertFalse(BOB.isSamePerson(editedBob));","lastModifiedDate":"2020-12-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-04-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        Person aliceCopy \u003d new PersonBuilder(ALICE).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(aliceCopy));","lastModifiedDate":"2018-04-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(5));","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(BOB));","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-18"},{"lineNumber":97,"author":{"gitId":"sopa301"},"content":"        // different nextOfKinName -\u003e returns false","lastModifiedDate":"2023-09-28"},{"lineNumber":98,"author":{"gitId":"sopa301"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withNextOfKinName(VALID_NEXT_OF_KIN_NAME_BOB).build();","lastModifiedDate":"2023-09-29"},{"lineNumber":99,"author":{"gitId":"sopa301"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2023-09-28"},{"lineNumber":100,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":101,"author":{"gitId":"sopa301"},"content":"        // different nextOfKinPhone -\u003e returns false","lastModifiedDate":"2023-09-28"},{"lineNumber":102,"author":{"gitId":"sopa301"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withNextOfKinPhone(VALID_NEXT_OF_KIN_PHONE_BOB).build();","lastModifiedDate":"2023-09-29"},{"lineNumber":103,"author":{"gitId":"sopa301"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2023-09-28"},{"lineNumber":104,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2018-04-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2018-04-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-18"},{"lineNumber":108,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":109,"author":{"gitId":"Kb-Tay"},"content":"        // different Appointment -\u003e returns false","lastModifiedDate":"2023-10-20"},{"lineNumber":110,"author":{"gitId":"Kb-Tay"},"content":"        Person editedBenson \u003d new PersonBuilder(BENSON).withAppointment(VALID_APPOINTMENT_NAME","lastModifiedDate":"2023-10-20"},{"lineNumber":111,"author":{"gitId":"Kb-Tay"},"content":"                + \", \" + VALID_APPOINTMENT_DATE).build();","lastModifiedDate":"2023-10-20"},{"lineNumber":112,"author":{"gitId":"Kb-Tay"},"content":"        assertFalse(BENSON.equals(editedBenson));","lastModifiedDate":"2023-10-20"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":115,"author":{"gitId":"AlyssaPng"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":116,"author":{"gitId":"AlyssaPng"},"content":"    public void gatherEmailsByFinancialPlan_noPersonFound() {","lastModifiedDate":"2023-11-06"},{"lineNumber":117,"author":{"gitId":"AlyssaPng"},"content":"        assertEquals(new String(), ELLE.gatherEmailsContainsFinancialPlan(VALID_FINANCIAL_PLAN_1));","lastModifiedDate":"2023-10-23"},{"lineNumber":118,"author":{"gitId":"AlyssaPng"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":119,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":120,"author":{"gitId":"AlyssaPng"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":121,"author":{"gitId":"AlyssaPng"},"content":"    public void gatherEmailsByFinancialPlan_personFound() {","lastModifiedDate":"2023-11-06"},{"lineNumber":122,"author":{"gitId":"AlyssaPng"},"content":"        // prompt is full plan name","lastModifiedDate":"2023-11-06"},{"lineNumber":123,"author":{"gitId":"AlyssaPng"},"content":"        FinancialPlan elleFinancialPlan \u003d ELLE.getFinancialPlans().iterator().next();","lastModifiedDate":"2023-10-18"},{"lineNumber":124,"author":{"gitId":"AlyssaPng"},"content":"        String prompt \u003d elleFinancialPlan.toString().replaceAll(\"[\\\\[\\\\]\\\\(\\\\)]\", \"\");","lastModifiedDate":"2023-10-18"},{"lineNumber":125,"author":{"gitId":"AlyssaPng"},"content":"        String prompt2 \u003d \"Sample Financial Plan 2\";","lastModifiedDate":"2023-10-18"},{"lineNumber":126,"author":{"gitId":"AlyssaPng"},"content":"        assertEquals(ELLE.getEmail().toString(), ELLE.gatherEmailsContainsFinancialPlan(prompt));","lastModifiedDate":"2023-10-18"},{"lineNumber":127,"author":{"gitId":"AlyssaPng"},"content":"        assertEquals(ELLE.getEmail().toString(), ELLE.gatherEmailsContainsFinancialPlan(prompt2));","lastModifiedDate":"2023-10-18"},{"lineNumber":128,"author":{"gitId":"AlyssaPng"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":129,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":130,"author":{"gitId":"AlyssaPng"},"content":"    @Test","lastModifiedDate":"2023-11-06"},{"lineNumber":131,"author":{"gitId":"AlyssaPng"},"content":"    public void gatherEmailsByFinancialPlan_substring_personFound() {","lastModifiedDate":"2023-11-06"},{"lineNumber":132,"author":{"gitId":"AlyssaPng"},"content":"        String substring \u003d \"Financial Plan 2\";","lastModifiedDate":"2023-11-06"},{"lineNumber":133,"author":{"gitId":"AlyssaPng"},"content":"        assertEquals(ELLE.getEmail().toString(), ELLE.gatherEmailsContainsFinancialPlan(substring));","lastModifiedDate":"2023-11-06"},{"lineNumber":134,"author":{"gitId":"AlyssaPng"},"content":"    }","lastModifiedDate":"2023-11-06"},{"lineNumber":135,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":136,"author":{"gitId":"AlyssaPng"},"content":"    @Test","lastModifiedDate":"2023-11-06"},{"lineNumber":137,"author":{"gitId":"AlyssaPng"},"content":"    public void gatherEmailsByFinancialPlan_noDuplicateEmail() {","lastModifiedDate":"2023-11-06"},{"lineNumber":138,"author":{"gitId":"AlyssaPng"},"content":"        // prompt is substring for both bobs Financial Plans: \"financial plan 1\" and \"financial plan 2\"","lastModifiedDate":"2023-11-06"},{"lineNumber":139,"author":{"gitId":"AlyssaPng"},"content":"        String substringBob \u003d \"financial plan\";","lastModifiedDate":"2023-11-06"},{"lineNumber":140,"author":{"gitId":"AlyssaPng"},"content":"        assertEquals(BOB.getEmail().toString(), BOB.gatherEmailsContainsFinancialPlan(substringBob));","lastModifiedDate":"2023-11-06"},{"lineNumber":141,"author":{"gitId":"AlyssaPng"},"content":"    }","lastModifiedDate":"2023-11-06"},{"lineNumber":142,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":143,"author":{"gitId":"AlyssaPng"},"content":"    @Test","lastModifiedDate":"2023-11-06"},{"lineNumber":144,"author":{"gitId":"AlyssaPng"},"content":"    public void gatherEmailsByFinancialPlan_caseInsensitive() {","lastModifiedDate":"2023-11-06"},{"lineNumber":145,"author":{"gitId":"AlyssaPng"},"content":"        String uppercaseBob \u003d VALID_FINANCIAL_PLAN_1.toUpperCase();","lastModifiedDate":"2023-11-06"},{"lineNumber":146,"author":{"gitId":"AlyssaPng"},"content":"        String lowercaseBob \u003d VALID_FINANCIAL_PLAN_1.toLowerCase();","lastModifiedDate":"2023-11-06"},{"lineNumber":147,"author":{"gitId":"AlyssaPng"},"content":"        assertEquals(BOB.getEmail().toString(), BOB.gatherEmailsContainsFinancialPlan(uppercaseBob));","lastModifiedDate":"2023-11-06"},{"lineNumber":148,"author":{"gitId":"AlyssaPng"},"content":"        assertEquals(BOB.getEmail().toString(), BOB.gatherEmailsContainsFinancialPlan(lowercaseBob));","lastModifiedDate":"2023-11-06"},{"lineNumber":149,"author":{"gitId":"AlyssaPng"},"content":"    }","lastModifiedDate":"2023-11-06"},{"lineNumber":150,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":151,"author":{"gitId":"AlyssaPng"},"content":"    @Test","lastModifiedDate":"2023-10-23"},{"lineNumber":152,"author":{"gitId":"AlyssaPng"},"content":"    public void gatherByTag_noPersonFound() {","lastModifiedDate":"2023-10-23"},{"lineNumber":153,"author":{"gitId":"AlyssaPng"},"content":"        assertEquals(new String(), ALICE.gatherEmailsContainsTag(VALID_TAG_HUSBAND));","lastModifiedDate":"2023-10-23"},{"lineNumber":154,"author":{"gitId":"AlyssaPng"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":155,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":156,"author":{"gitId":"AlyssaPng"},"content":"    @Test","lastModifiedDate":"2023-10-23"},{"lineNumber":157,"author":{"gitId":"AlyssaPng"},"content":"    public void gatherByTag_personFound() {","lastModifiedDate":"2023-10-23"},{"lineNumber":158,"author":{"gitId":"AlyssaPng"},"content":"        // prompt full tag name","lastModifiedDate":"2023-11-06"},{"lineNumber":159,"author":{"gitId":"AlyssaPng"},"content":"        assertEquals(BOB.getEmail().toString(), BOB.gatherEmailsContainsTag(VALID_TAG_HUSBAND));","lastModifiedDate":"2023-10-23"},{"lineNumber":160,"author":{"gitId":"AlyssaPng"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":161,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":162,"author":{"gitId":"AlyssaPng"},"content":"    @Test","lastModifiedDate":"2023-11-06"},{"lineNumber":163,"author":{"gitId":"AlyssaPng"},"content":"    public void gatherByTag_substring_personFound() {","lastModifiedDate":"2023-11-06"},{"lineNumber":164,"author":{"gitId":"AlyssaPng"},"content":"        // prompt substring","lastModifiedDate":"2023-11-06"},{"lineNumber":165,"author":{"gitId":"AlyssaPng"},"content":"        String substring \u003d \"hus\";","lastModifiedDate":"2023-11-06"},{"lineNumber":166,"author":{"gitId":"AlyssaPng"},"content":"        assertEquals(BOB.getEmail().toString(), BOB.gatherEmailsContainsTag(substring));","lastModifiedDate":"2023-11-06"},{"lineNumber":167,"author":{"gitId":"AlyssaPng"},"content":"    }","lastModifiedDate":"2023-11-06"},{"lineNumber":168,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":169,"author":{"gitId":"AlyssaPng"},"content":"    @Test","lastModifiedDate":"2023-11-06"},{"lineNumber":170,"author":{"gitId":"AlyssaPng"},"content":"    public void gatherEmailsByTag_noDuplicateEmail() {","lastModifiedDate":"2023-11-06"},{"lineNumber":171,"author":{"gitId":"AlyssaPng"},"content":"        // prompt is substring for both bobs tags \"friend\" and \"husband\"","lastModifiedDate":"2023-11-06"},{"lineNumber":172,"author":{"gitId":"AlyssaPng"},"content":"        String substringBob \u003d \"nd\";","lastModifiedDate":"2023-11-06"},{"lineNumber":173,"author":{"gitId":"AlyssaPng"},"content":"        assertEquals(BOB.getEmail().toString(), BOB.gatherEmailsContainsTag(substringBob));","lastModifiedDate":"2023-11-06"},{"lineNumber":174,"author":{"gitId":"AlyssaPng"},"content":"    }","lastModifiedDate":"2023-11-06"},{"lineNumber":175,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":176,"author":{"gitId":"AlyssaPng"},"content":"    @Test","lastModifiedDate":"2023-11-06"},{"lineNumber":177,"author":{"gitId":"AlyssaPng"},"content":"    public void gatherEmailsByTag_caseInsensitive() {","lastModifiedDate":"2023-11-06"},{"lineNumber":178,"author":{"gitId":"AlyssaPng"},"content":"        String uppercaseBob \u003d VALID_TAG_HUSBAND.toUpperCase();","lastModifiedDate":"2023-11-06"},{"lineNumber":179,"author":{"gitId":"AlyssaPng"},"content":"        String lowercaseBob \u003d VALID_TAG_HUSBAND.toLowerCase();","lastModifiedDate":"2023-11-06"},{"lineNumber":180,"author":{"gitId":"AlyssaPng"},"content":"        assertEquals(BOB.getEmail().toString(), BOB.gatherEmailsContainsTag(uppercaseBob));","lastModifiedDate":"2023-11-06"},{"lineNumber":181,"author":{"gitId":"AlyssaPng"},"content":"        assertEquals(BOB.getEmail().toString(), BOB.gatherEmailsContainsTag(lowercaseBob));","lastModifiedDate":"2023-11-06"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-11-06"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        String expected \u003d Person.class.getCanonicalName() + \"{name\u003d\" + ALICE.getName() + \", phone\u003d\" + ALICE.getPhone()","lastModifiedDate":"2019-02-23"},{"lineNumber":187,"author":{"gitId":"sopa301"},"content":"                + \", email\u003d\" + ALICE.getEmail() + \", address\u003d\" + ALICE.getAddress() + \", nextOfKinName\u003d\"","lastModifiedDate":"2023-09-28"},{"lineNumber":188,"author":{"gitId":"sopa301"},"content":"                + ALICE.getNextOfKinName() + \", nextOfKinPhone\u003d\" + ALICE.getNextOfKinPhone()","lastModifiedDate":"2023-09-28"},{"lineNumber":189,"author":{"gitId":"Kb-Tay"},"content":"                + \", financialPlans\u003d\" + ALICE.getFinancialPlans() + \", tags\u003d\" + ALICE.getTags()","lastModifiedDate":"2023-10-19"},{"lineNumber":190,"author":{"gitId":"Kb-Tay"},"content":"                + \", appointment\u003d\" + ALICE.getAppointment() + \"}\";","lastModifiedDate":"2023-10-19"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        assertEquals(expected, ALICE.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"Kb-Tay":10,"AlyssaPng":70,"sopa301":14,"-":99}},{"path":"src/test/java/seedu/address/model/person/SortByAppointmentComparatorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jylow"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-10-21"},{"lineNumber":2,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":3,"author":{"gitId":"jylow"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-21"},{"lineNumber":4,"author":{"gitId":"jylow"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-21"},{"lineNumber":5,"author":{"gitId":"jylow"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-21"},{"lineNumber":6,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":7,"author":{"gitId":"jylow"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-21"},{"lineNumber":8,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":9,"author":{"gitId":"jylow"},"content":"import seedu.address.model.person.comparator.SortByAppointmentComparator;","lastModifiedDate":"2023-11-10"},{"lineNumber":10,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":11,"author":{"gitId":"jylow"},"content":"public class SortByAppointmentComparatorTest {","lastModifiedDate":"2023-10-21"},{"lineNumber":12,"author":{"gitId":"jylow"},"content":"    @Test","lastModifiedDate":"2023-10-21"},{"lineNumber":13,"author":{"gitId":"jylow"},"content":"    public void equals() {","lastModifiedDate":"2023-10-21"},{"lineNumber":14,"author":{"gitId":"jylow"},"content":"        SortByAppointmentComparator firstComparator \u003d new SortByAppointmentComparator();","lastModifiedDate":"2023-10-21"},{"lineNumber":15,"author":{"gitId":"jylow"},"content":"        SortByAppointmentComparator secondComparator \u003d new SortByAppointmentComparator();","lastModifiedDate":"2023-10-21"},{"lineNumber":16,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":17,"author":{"gitId":"jylow"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-21"},{"lineNumber":18,"author":{"gitId":"jylow"},"content":"        assertTrue(firstComparator.equals(firstComparator));","lastModifiedDate":"2023-10-21"},{"lineNumber":19,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":20,"author":{"gitId":"jylow"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-21"},{"lineNumber":21,"author":{"gitId":"jylow"},"content":"        assertFalse(firstComparator.equals(1));","lastModifiedDate":"2023-10-21"},{"lineNumber":22,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":23,"author":{"gitId":"jylow"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-21"},{"lineNumber":24,"author":{"gitId":"jylow"},"content":"        assertFalse(firstComparator.equals(null));","lastModifiedDate":"2023-10-21"},{"lineNumber":25,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":26,"author":{"gitId":"jylow"},"content":"        // different comparators -\u003e returns true","lastModifiedDate":"2023-10-21"},{"lineNumber":27,"author":{"gitId":"jylow"},"content":"        assertTrue(firstComparator.equals(secondComparator));","lastModifiedDate":"2023-10-21"},{"lineNumber":28,"author":{"gitId":"jylow"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":29,"author":{"gitId":"jylow"},"content":"    @Test","lastModifiedDate":"2023-10-21"},{"lineNumber":30,"author":{"gitId":"jylow"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-21"},{"lineNumber":31,"author":{"gitId":"jylow"},"content":"        SortByAppointmentComparator comparator \u003d new SortByAppointmentComparator();","lastModifiedDate":"2023-10-21"},{"lineNumber":32,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":33,"author":{"gitId":"jylow"},"content":"        String expected \u003d SortByAppointmentComparator.class.getCanonicalName() + \"{}\";","lastModifiedDate":"2023-10-21"},{"lineNumber":34,"author":{"gitId":"jylow"},"content":"        assertEquals(expected, comparator.toString());","lastModifiedDate":"2023-10-21"},{"lineNumber":35,"author":{"gitId":"jylow"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":36,"author":{"gitId":"jylow"},"content":"}","lastModifiedDate":"2023-10-21"}],"authorContributionMap":{"jylow":36}},{"path":"src/test/java/seedu/address/model/person/SortByNameComparatorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jylow"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-10-21"},{"lineNumber":2,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":3,"author":{"gitId":"jylow"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-21"},{"lineNumber":4,"author":{"gitId":"jylow"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-21"},{"lineNumber":5,"author":{"gitId":"jylow"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-21"},{"lineNumber":6,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":7,"author":{"gitId":"jylow"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-21"},{"lineNumber":8,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":9,"author":{"gitId":"jylow"},"content":"import seedu.address.model.person.comparator.SortByNameComparator;","lastModifiedDate":"2023-11-10"},{"lineNumber":10,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":11,"author":{"gitId":"jylow"},"content":"public class SortByNameComparatorTest {","lastModifiedDate":"2023-10-21"},{"lineNumber":12,"author":{"gitId":"jylow"},"content":"    @Test","lastModifiedDate":"2023-10-21"},{"lineNumber":13,"author":{"gitId":"jylow"},"content":"    public void equals() {","lastModifiedDate":"2023-10-21"},{"lineNumber":14,"author":{"gitId":"jylow"},"content":"        SortByNameComparator firstComparator \u003d new SortByNameComparator();","lastModifiedDate":"2023-10-21"},{"lineNumber":15,"author":{"gitId":"jylow"},"content":"        SortByNameComparator secondComparator \u003d new SortByNameComparator();","lastModifiedDate":"2023-10-21"},{"lineNumber":16,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":17,"author":{"gitId":"jylow"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-21"},{"lineNumber":18,"author":{"gitId":"jylow"},"content":"        assertTrue(firstComparator.equals(firstComparator));","lastModifiedDate":"2023-10-21"},{"lineNumber":19,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":20,"author":{"gitId":"jylow"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-21"},{"lineNumber":21,"author":{"gitId":"jylow"},"content":"        assertFalse(firstComparator.equals(1));","lastModifiedDate":"2023-10-21"},{"lineNumber":22,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":23,"author":{"gitId":"jylow"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-21"},{"lineNumber":24,"author":{"gitId":"jylow"},"content":"        assertFalse(firstComparator.equals(null));","lastModifiedDate":"2023-10-21"},{"lineNumber":25,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":26,"author":{"gitId":"jylow"},"content":"        // different comparators -\u003e returns true","lastModifiedDate":"2023-10-21"},{"lineNumber":27,"author":{"gitId":"jylow"},"content":"        assertTrue(firstComparator.equals(secondComparator));","lastModifiedDate":"2023-10-21"},{"lineNumber":28,"author":{"gitId":"jylow"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":29,"author":{"gitId":"jylow"},"content":"    @Test","lastModifiedDate":"2023-10-21"},{"lineNumber":30,"author":{"gitId":"jylow"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-21"},{"lineNumber":31,"author":{"gitId":"jylow"},"content":"        SortByNameComparator comparator \u003d new SortByNameComparator();","lastModifiedDate":"2023-10-21"},{"lineNumber":32,"author":{"gitId":"jylow"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":33,"author":{"gitId":"jylow"},"content":"        String expected \u003d SortByNameComparator.class.getCanonicalName() + \"{}\";","lastModifiedDate":"2023-10-21"},{"lineNumber":34,"author":{"gitId":"jylow"},"content":"        assertEquals(expected, comparator.toString());","lastModifiedDate":"2023-10-21"},{"lineNumber":35,"author":{"gitId":"jylow"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":36,"author":{"gitId":"jylow"},"content":"}","lastModifiedDate":"2023-10-21"}],"authorContributionMap":{"jylow":36}},{"path":"src/test/java/seedu/address/model/person/UniquePersonListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2018-08-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-08-08"},{"lineNumber":11,"author":{"gitId":"AlyssaPng"},"content":"import static seedu.address.testutil.TypicalPersons.ELLE;","lastModifiedDate":"2023-10-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":19,"author":{"gitId":"AlyssaPng"},"content":"import seedu.address.model.financialplan.FinancialPlan;","lastModifiedDate":"2023-10-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2018-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2018-08-08"},{"lineNumber":22,"author":{"gitId":"AlyssaPng"},"content":"import seedu.address.model.person.gatheremail.GatherEmailByFinancialPlan;","lastModifiedDate":"2023-10-23"},{"lineNumber":23,"author":{"gitId":"AlyssaPng"},"content":"import seedu.address.model.person.gatheremail.GatherEmailByTag;","lastModifiedDate":"2023-10-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class UniquePersonListTest {","lastModifiedDate":"2017-09-01"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final UniquePersonList uniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void contains_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.contains(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void contains_personNotInList_returnsFalse() {","lastModifiedDate":"2018-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(uniquePersonList.contains(ALICE));","lastModifiedDate":"2018-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void contains_personInList_returnsTrue() {","lastModifiedDate":"2018-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertTrue(uniquePersonList.contains(ALICE));","lastModifiedDate":"2018-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void contains_personWithSameIdentityFieldsInList_returnsTrue() {","lastModifiedDate":"2018-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2018-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertTrue(uniquePersonList.contains(editedAlice));","lastModifiedDate":"2018-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void add_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.add(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void add_duplicatePerson_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.add(ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void setPerson_nullTargetPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPerson(null, ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void setPerson_nullEditedPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPerson(ALICE, null));","lastModifiedDate":"2019-03-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void setPerson_targetPersonNotInList_throwsPersonNotFoundException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e uniquePersonList.setPerson(ALICE, ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonIsSamePerson_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasSameIdentity_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2018-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, editedAlice);","lastModifiedDate":"2018-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(editedAlice);","lastModifiedDate":"2018-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasDifferentIdentity_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasNonUniqueIdentity_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        uniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.setPerson(ALICE, BOB));","lastModifiedDate":"2019-03-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public void remove_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.remove(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    public void remove_personDoesNotExist_throwsPersonNotFoundException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e uniquePersonList.remove(ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    public void remove_existingPerson_removesPerson() {","lastModifiedDate":"2018-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        uniquePersonList.remove(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    public void setPersons_nullUniquePersonList_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPersons((UniquePersonList) null));","lastModifiedDate":"2019-03-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    public void setPersons_uniquePersonList_replacesOwnListWithProvidedUniquePersonList() {","lastModifiedDate":"2018-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        uniquePersonList.setPersons(expectedUniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    public void setPersons_nullList_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPersons((List\u003cPerson\u003e) null));","lastModifiedDate":"2019-03-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    public void setPersons_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2018-08-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e personList \u003d Collections.singletonList(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        uniquePersonList.setPersons(personList);","lastModifiedDate":"2018-08-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    public void setPersons_listWithDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e listWithDuplicatePersons \u003d Arrays.asList(ALICE, ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.setPersons(listWithDuplicatePersons));","lastModifiedDate":"2019-03-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":169,"author":{"gitId":"AlyssaPng"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":170,"author":{"gitId":"AlyssaPng"},"content":"    public void gatherEmailsByFinancialPlan_noPersonFound() {","lastModifiedDate":"2023-10-22"},{"lineNumber":171,"author":{"gitId":"AlyssaPng"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2023-10-18"},{"lineNumber":172,"author":{"gitId":"AlyssaPng"},"content":"        GatherEmailByFinancialPlan prompt \u003d new GatherEmailByFinancialPlan(\"Sample Financial Plan 3\");","lastModifiedDate":"2023-10-23"},{"lineNumber":173,"author":{"gitId":"AlyssaPng"},"content":"        assertEquals(new String(), uniquePersonList.gatherEmails(prompt));","lastModifiedDate":"2023-10-18"},{"lineNumber":174,"author":{"gitId":"AlyssaPng"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":175,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":176,"author":{"gitId":"AlyssaPng"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":177,"author":{"gitId":"AlyssaPng"},"content":"    public void gatherEmailsByFinancialPlan_personFound() {","lastModifiedDate":"2023-10-22"},{"lineNumber":178,"author":{"gitId":"AlyssaPng"},"content":"        uniquePersonList.add(ELLE);","lastModifiedDate":"2023-10-18"},{"lineNumber":179,"author":{"gitId":"AlyssaPng"},"content":"        FinancialPlan elleFinancialPlan \u003d ELLE.getFinancialPlans().iterator().next();","lastModifiedDate":"2023-10-18"},{"lineNumber":180,"author":{"gitId":"AlyssaPng"},"content":"        String fpDescription \u003d elleFinancialPlan.toString().replaceAll(\"[\\\\[\\\\]\\\\(\\\\)]\", \"\");","lastModifiedDate":"2023-10-22"},{"lineNumber":181,"author":{"gitId":"AlyssaPng"},"content":"        GatherEmailByFinancialPlan prompt \u003d new GatherEmailByFinancialPlan(fpDescription);","lastModifiedDate":"2023-10-23"},{"lineNumber":182,"author":{"gitId":"jylow"},"content":"        assertEquals(ELLE.getEmail().toString() + \";\", uniquePersonList.gatherEmails(prompt));","lastModifiedDate":"2023-11-11"},{"lineNumber":183,"author":{"gitId":"AlyssaPng"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":184,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":185,"author":{"gitId":"AlyssaPng"},"content":"    @Test","lastModifiedDate":"2023-10-23"},{"lineNumber":186,"author":{"gitId":"AlyssaPng"},"content":"    public void gatherByTag_noPersonFound() {","lastModifiedDate":"2023-10-23"},{"lineNumber":187,"author":{"gitId":"AlyssaPng"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2023-10-23"},{"lineNumber":188,"author":{"gitId":"AlyssaPng"},"content":"        GatherEmailByTag prompt \u003d new GatherEmailByTag(VALID_TAG_HUSBAND);","lastModifiedDate":"2023-10-23"},{"lineNumber":189,"author":{"gitId":"AlyssaPng"},"content":"        assertEquals(new String(), uniquePersonList.gatherEmails(prompt));","lastModifiedDate":"2023-10-23"},{"lineNumber":190,"author":{"gitId":"AlyssaPng"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":191,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":192,"author":{"gitId":"AlyssaPng"},"content":"    @Test","lastModifiedDate":"2023-10-23"},{"lineNumber":193,"author":{"gitId":"AlyssaPng"},"content":"    public void gatherByTag_personFound() {","lastModifiedDate":"2023-10-23"},{"lineNumber":194,"author":{"gitId":"AlyssaPng"},"content":"        uniquePersonList.add(BOB);","lastModifiedDate":"2023-10-23"},{"lineNumber":195,"author":{"gitId":"AlyssaPng"},"content":"        GatherEmailByTag prompt \u003d new GatherEmailByTag(VALID_TAG_HUSBAND);","lastModifiedDate":"2023-10-23"},{"lineNumber":196,"author":{"gitId":"jylow"},"content":"        assertEquals(BOB.getEmail().toString() + \";\", uniquePersonList.gatherEmails(prompt));","lastModifiedDate":"2023-11-11"},{"lineNumber":197,"author":{"gitId":"AlyssaPng"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":198,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2018-04-05"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"            -\u003e uniquePersonList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-24"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-24"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-24"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        assertEquals(uniquePersonList.asUnmodifiableObservableList().toString(), uniquePersonList.toString());","lastModifiedDate":"2019-02-24"},{"lineNumber":208,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-24"},{"lineNumber":209,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"AlyssaPng":32,"jylow":2,"-":175}},{"path":"src/test/java/seedu/address/model/person/gatheremail/GatherEmailByFinancialPlanTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"AlyssaPng"},"content":"package seedu.address.model.person.gatheremail;","lastModifiedDate":"2023-10-23"},{"lineNumber":2,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":3,"author":{"gitId":"AlyssaPng"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-23"},{"lineNumber":4,"author":{"gitId":"AlyssaPng"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-23"},{"lineNumber":5,"author":{"gitId":"AlyssaPng"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-23"},{"lineNumber":6,"author":{"gitId":"AlyssaPng"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_FINANCIAL_PLAN_1;","lastModifiedDate":"2023-10-23"},{"lineNumber":7,"author":{"gitId":"AlyssaPng"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2023-10-23"},{"lineNumber":8,"author":{"gitId":"AlyssaPng"},"content":"import static seedu.address.testutil.TypicalPersons.ELLE;","lastModifiedDate":"2023-10-23"},{"lineNumber":9,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":10,"author":{"gitId":"AlyssaPng"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-23"},{"lineNumber":11,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":12,"author":{"gitId":"AlyssaPng"},"content":"public class GatherEmailByFinancialPlanTest {","lastModifiedDate":"2023-10-23"},{"lineNumber":13,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":14,"author":{"gitId":"AlyssaPng"},"content":"    @Test","lastModifiedDate":"2023-10-23"},{"lineNumber":15,"author":{"gitId":"AlyssaPng"},"content":"    public void gatherEmails() {","lastModifiedDate":"2023-10-23"},{"lineNumber":16,"author":{"gitId":"AlyssaPng"},"content":"        GatherEmailByFinancialPlan fpPrompt \u003d new GatherEmailByFinancialPlan(VALID_FINANCIAL_PLAN_1);","lastModifiedDate":"2023-10-23"},{"lineNumber":17,"author":{"gitId":"AlyssaPng"},"content":"        assertEquals(new String(), fpPrompt.gatherEmails(ELLE));","lastModifiedDate":"2023-10-23"},{"lineNumber":18,"author":{"gitId":"AlyssaPng"},"content":"        assertEquals(BOB.getEmail().toString(), fpPrompt.gatherEmails(BOB));","lastModifiedDate":"2023-10-23"},{"lineNumber":19,"author":{"gitId":"AlyssaPng"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":20,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":21,"author":{"gitId":"AlyssaPng"},"content":"    @Test","lastModifiedDate":"2023-10-23"},{"lineNumber":22,"author":{"gitId":"AlyssaPng"},"content":"    public void testEquals() {","lastModifiedDate":"2023-10-23"},{"lineNumber":23,"author":{"gitId":"AlyssaPng"},"content":"        GatherEmailByFinancialPlan first \u003d new GatherEmailByFinancialPlan(\"first\");","lastModifiedDate":"2023-10-23"},{"lineNumber":24,"author":{"gitId":"AlyssaPng"},"content":"        GatherEmailByFinancialPlan second \u003d new GatherEmailByFinancialPlan(\"second\");","lastModifiedDate":"2023-10-23"},{"lineNumber":25,"author":{"gitId":"AlyssaPng"},"content":"        GatherEmailByFinancialPlan firstOther \u003d new GatherEmailByFinancialPlan(\"first\");","lastModifiedDate":"2023-10-23"},{"lineNumber":26,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":27,"author":{"gitId":"AlyssaPng"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-23"},{"lineNumber":28,"author":{"gitId":"AlyssaPng"},"content":"        assertTrue(first.equals(first));","lastModifiedDate":"2023-10-23"},{"lineNumber":29,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":30,"author":{"gitId":"AlyssaPng"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-23"},{"lineNumber":31,"author":{"gitId":"AlyssaPng"},"content":"        assertFalse(first.equals(1));","lastModifiedDate":"2023-10-23"},{"lineNumber":32,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":33,"author":{"gitId":"AlyssaPng"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-23"},{"lineNumber":34,"author":{"gitId":"AlyssaPng"},"content":"        assertFalse(first.equals(null));","lastModifiedDate":"2023-10-23"},{"lineNumber":35,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":36,"author":{"gitId":"AlyssaPng"},"content":"        // different object -\u003e returns false","lastModifiedDate":"2023-10-23"},{"lineNumber":37,"author":{"gitId":"AlyssaPng"},"content":"        assertFalse(first.equals(second));","lastModifiedDate":"2023-10-23"},{"lineNumber":38,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":39,"author":{"gitId":"AlyssaPng"},"content":"        // different object -\u003e returns true","lastModifiedDate":"2023-10-23"},{"lineNumber":40,"author":{"gitId":"AlyssaPng"},"content":"        assertTrue(first.equals(firstOther));","lastModifiedDate":"2023-10-23"},{"lineNumber":41,"author":{"gitId":"AlyssaPng"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":42,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":43,"author":{"gitId":"AlyssaPng"},"content":"    @Test","lastModifiedDate":"2023-10-23"},{"lineNumber":44,"author":{"gitId":"AlyssaPng"},"content":"    public void testToString() {","lastModifiedDate":"2023-10-23"},{"lineNumber":45,"author":{"gitId":"AlyssaPng"},"content":"        String prompt \u003d \"prompt\";","lastModifiedDate":"2023-10-23"},{"lineNumber":46,"author":{"gitId":"AlyssaPng"},"content":"        String expected \u003d \"Financial Plan: \" + prompt;","lastModifiedDate":"2023-10-23"},{"lineNumber":47,"author":{"gitId":"AlyssaPng"},"content":"        GatherEmailByFinancialPlan fpPrompt \u003d new GatherEmailByFinancialPlan(prompt);","lastModifiedDate":"2023-10-23"},{"lineNumber":48,"author":{"gitId":"AlyssaPng"},"content":"        assertEquals(fpPrompt.toString(), expected);","lastModifiedDate":"2023-10-23"},{"lineNumber":49,"author":{"gitId":"AlyssaPng"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":50,"author":{"gitId":"AlyssaPng"},"content":"}","lastModifiedDate":"2023-10-23"}],"authorContributionMap":{"AlyssaPng":50}},{"path":"src/test/java/seedu/address/model/person/gatheremail/GatherEmailByTagTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"AlyssaPng"},"content":"package seedu.address.model.person.gatheremail;","lastModifiedDate":"2023-10-23"},{"lineNumber":2,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":3,"author":{"gitId":"AlyssaPng"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-23"},{"lineNumber":4,"author":{"gitId":"AlyssaPng"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-23"},{"lineNumber":5,"author":{"gitId":"AlyssaPng"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-23"},{"lineNumber":6,"author":{"gitId":"AlyssaPng"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2023-10-23"},{"lineNumber":7,"author":{"gitId":"AlyssaPng"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2023-10-23"},{"lineNumber":8,"author":{"gitId":"AlyssaPng"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2023-10-23"},{"lineNumber":9,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":10,"author":{"gitId":"AlyssaPng"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-23"},{"lineNumber":11,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":12,"author":{"gitId":"AlyssaPng"},"content":"public class GatherEmailByTagTest {","lastModifiedDate":"2023-10-23"},{"lineNumber":13,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":14,"author":{"gitId":"AlyssaPng"},"content":"    @Test","lastModifiedDate":"2023-10-23"},{"lineNumber":15,"author":{"gitId":"AlyssaPng"},"content":"    public void gatherEmails() {","lastModifiedDate":"2023-10-23"},{"lineNumber":16,"author":{"gitId":"AlyssaPng"},"content":"        GatherEmailByTag tagPrompt \u003d new GatherEmailByTag(VALID_TAG_HUSBAND);","lastModifiedDate":"2023-10-23"},{"lineNumber":17,"author":{"gitId":"AlyssaPng"},"content":"        assertEquals(new String(), tagPrompt.gatherEmails(ALICE));","lastModifiedDate":"2023-10-23"},{"lineNumber":18,"author":{"gitId":"AlyssaPng"},"content":"        assertEquals(BOB.getEmail().toString(), tagPrompt.gatherEmails(BOB));","lastModifiedDate":"2023-10-23"},{"lineNumber":19,"author":{"gitId":"AlyssaPng"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":20,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":21,"author":{"gitId":"AlyssaPng"},"content":"    @Test","lastModifiedDate":"2023-10-23"},{"lineNumber":22,"author":{"gitId":"AlyssaPng"},"content":"    void testEquals() {","lastModifiedDate":"2023-10-23"},{"lineNumber":23,"author":{"gitId":"AlyssaPng"},"content":"        GatherEmailByTag first \u003d new GatherEmailByTag(\"first\");","lastModifiedDate":"2023-10-23"},{"lineNumber":24,"author":{"gitId":"AlyssaPng"},"content":"        GatherEmailByTag second \u003d new GatherEmailByTag(\"second\");","lastModifiedDate":"2023-10-23"},{"lineNumber":25,"author":{"gitId":"AlyssaPng"},"content":"        GatherEmailByTag firstOther \u003d new GatherEmailByTag(\"first\");","lastModifiedDate":"2023-10-23"},{"lineNumber":26,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":27,"author":{"gitId":"AlyssaPng"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-23"},{"lineNumber":28,"author":{"gitId":"AlyssaPng"},"content":"        assertTrue(first.equals(first));","lastModifiedDate":"2023-10-23"},{"lineNumber":29,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":30,"author":{"gitId":"AlyssaPng"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-23"},{"lineNumber":31,"author":{"gitId":"AlyssaPng"},"content":"        assertFalse(first.equals(1));","lastModifiedDate":"2023-10-23"},{"lineNumber":32,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":33,"author":{"gitId":"AlyssaPng"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-23"},{"lineNumber":34,"author":{"gitId":"AlyssaPng"},"content":"        assertFalse(first.equals(null));","lastModifiedDate":"2023-10-23"},{"lineNumber":35,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":36,"author":{"gitId":"AlyssaPng"},"content":"        // different object -\u003e returns false","lastModifiedDate":"2023-10-23"},{"lineNumber":37,"author":{"gitId":"AlyssaPng"},"content":"        assertFalse(first.equals(second));","lastModifiedDate":"2023-10-23"},{"lineNumber":38,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":39,"author":{"gitId":"AlyssaPng"},"content":"        // different object -\u003e returns true","lastModifiedDate":"2023-10-23"},{"lineNumber":40,"author":{"gitId":"AlyssaPng"},"content":"        assertTrue(first.equals(firstOther));","lastModifiedDate":"2023-10-23"},{"lineNumber":41,"author":{"gitId":"AlyssaPng"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":42,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":43,"author":{"gitId":"AlyssaPng"},"content":"    @Test","lastModifiedDate":"2023-10-23"},{"lineNumber":44,"author":{"gitId":"AlyssaPng"},"content":"    public void testToString() {","lastModifiedDate":"2023-10-23"},{"lineNumber":45,"author":{"gitId":"AlyssaPng"},"content":"        String prompt \u003d \"prompt\";","lastModifiedDate":"2023-10-23"},{"lineNumber":46,"author":{"gitId":"AlyssaPng"},"content":"        String expected \u003d \"Tag: \" + prompt;","lastModifiedDate":"2023-10-23"},{"lineNumber":47,"author":{"gitId":"AlyssaPng"},"content":"        GatherEmailByTag tagPrompt \u003d new GatherEmailByTag(prompt);","lastModifiedDate":"2023-10-23"},{"lineNumber":48,"author":{"gitId":"AlyssaPng"},"content":"        assertEquals(tagPrompt.toString(), expected);","lastModifiedDate":"2023-10-23"},{"lineNumber":49,"author":{"gitId":"AlyssaPng"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":50,"author":{"gitId":"AlyssaPng"},"content":"}","lastModifiedDate":"2023-10-23"}],"authorContributionMap":{"AlyssaPng":50}},{"path":"src/test/java/seedu/address/model/person/predicates/CombinedPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"sopa301"},"content":"package seedu.address.model.person.predicates;","lastModifiedDate":"2023-10-25"},{"lineNumber":2,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":3,"author":{"gitId":"sopa301"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-25"},{"lineNumber":4,"author":{"gitId":"sopa301"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-25"},{"lineNumber":5,"author":{"gitId":"sopa301"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-25"},{"lineNumber":6,"author":{"gitId":"sopa301"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-11-07"},{"lineNumber":7,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":8,"author":{"gitId":"sopa301"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-10-25"},{"lineNumber":9,"author":{"gitId":"sopa301"},"content":"import java.util.Collections;","lastModifiedDate":"2023-10-25"},{"lineNumber":10,"author":{"gitId":"sopa301"},"content":"import java.util.List;","lastModifiedDate":"2023-10-25"},{"lineNumber":11,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":12,"author":{"gitId":"sopa301"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-25"},{"lineNumber":13,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":14,"author":{"gitId":"sopa301"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2023-10-25"},{"lineNumber":15,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":16,"author":{"gitId":"sopa301"},"content":"public class CombinedPredicateTest {","lastModifiedDate":"2023-10-25"},{"lineNumber":17,"author":{"gitId":"sopa301"},"content":"    @Test","lastModifiedDate":"2023-11-07"},{"lineNumber":18,"author":{"gitId":"sopa301"},"content":"    public void constructor_containsNull_throwsException() {","lastModifiedDate":"2023-11-07"},{"lineNumber":19,"author":{"gitId":"sopa301"},"content":"        assertThrows(NullPointerException.class, () -\u003e","lastModifiedDate":"2023-11-07"},{"lineNumber":20,"author":{"gitId":"sopa301"},"content":"                new CombinedPredicate(new FinancialPlanContainsKeywordsPredicate(Arrays.asList(\"foo\")),","lastModifiedDate":"2023-11-07"},{"lineNumber":21,"author":{"gitId":"sopa301"},"content":"                        null));","lastModifiedDate":"2023-11-07"},{"lineNumber":22,"author":{"gitId":"sopa301"},"content":"    }","lastModifiedDate":"2023-11-07"},{"lineNumber":23,"author":{"gitId":"sopa301"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":24,"author":{"gitId":"sopa301"},"content":"    public void equals() {","lastModifiedDate":"2023-10-25"},{"lineNumber":25,"author":{"gitId":"sopa301"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2023-10-25"},{"lineNumber":26,"author":{"gitId":"sopa301"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2023-10-25"},{"lineNumber":27,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":28,"author":{"gitId":"sopa301"},"content":"        CombinedPredicate firstPredicate \u003d","lastModifiedDate":"2023-10-25"},{"lineNumber":29,"author":{"gitId":"sopa301"},"content":"                new CombinedPredicate(new FinancialPlanContainsKeywordsPredicate(firstPredicateKeywordList));","lastModifiedDate":"2023-11-07"},{"lineNumber":30,"author":{"gitId":"sopa301"},"content":"        CombinedPredicate secondPredicate \u003d","lastModifiedDate":"2023-10-25"},{"lineNumber":31,"author":{"gitId":"sopa301"},"content":"                new CombinedPredicate(new FinancialPlanContainsKeywordsPredicate(secondPredicateKeywordList));","lastModifiedDate":"2023-11-07"},{"lineNumber":32,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":33,"author":{"gitId":"sopa301"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-25"},{"lineNumber":34,"author":{"gitId":"sopa301"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2023-10-25"},{"lineNumber":35,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":36,"author":{"gitId":"sopa301"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-25"},{"lineNumber":37,"author":{"gitId":"sopa301"},"content":"        CombinedPredicate firstPredicateCopy \u003d","lastModifiedDate":"2023-10-25"},{"lineNumber":38,"author":{"gitId":"sopa301"},"content":"                new CombinedPredicate(new FinancialPlanContainsKeywordsPredicate(firstPredicateKeywordList));","lastModifiedDate":"2023-11-07"},{"lineNumber":39,"author":{"gitId":"sopa301"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2023-10-25"},{"lineNumber":40,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":41,"author":{"gitId":"sopa301"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-25"},{"lineNumber":42,"author":{"gitId":"sopa301"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2023-10-25"},{"lineNumber":43,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":44,"author":{"gitId":"sopa301"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-25"},{"lineNumber":45,"author":{"gitId":"sopa301"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2023-10-25"},{"lineNumber":46,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":47,"author":{"gitId":"sopa301"},"content":"        // different financial plan -\u003e returns false","lastModifiedDate":"2023-10-25"},{"lineNumber":48,"author":{"gitId":"sopa301"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2023-10-25"},{"lineNumber":49,"author":{"gitId":"sopa301"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":50,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":51,"author":{"gitId":"sopa301"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":52,"author":{"gitId":"sopa301"},"content":"    public void test_personContainsKeywords_returnsTrue() {","lastModifiedDate":"2023-10-25"},{"lineNumber":53,"author":{"gitId":"sopa301"},"content":"        // One keyword","lastModifiedDate":"2023-10-25"},{"lineNumber":54,"author":{"gitId":"sopa301"},"content":"        CombinedPredicate predicate \u003d","lastModifiedDate":"2023-10-25"},{"lineNumber":55,"author":{"gitId":"sopa301"},"content":"                new CombinedPredicate(","lastModifiedDate":"2023-11-07"},{"lineNumber":56,"author":{"gitId":"sopa301"},"content":"                        new FinancialPlanContainsKeywordsPredicate(Collections.singletonList(\"Senior\")));","lastModifiedDate":"2023-11-07"},{"lineNumber":57,"author":{"gitId":"sopa301"},"content":"        assertTrue(predicate.test(new PersonBuilder().withFinancialPlans(\"Senior\").build()));","lastModifiedDate":"2023-10-25"},{"lineNumber":58,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":59,"author":{"gitId":"sopa301"},"content":"        // Multiple keywords for same person","lastModifiedDate":"2023-10-25"},{"lineNumber":60,"author":{"gitId":"sopa301"},"content":"        predicate \u003d new CombinedPredicate(new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\")));","lastModifiedDate":"2023-11-07"},{"lineNumber":61,"author":{"gitId":"sopa301"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2023-10-25"},{"lineNumber":62,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":63,"author":{"gitId":"sopa301"},"content":"        // Multiple keywords in different fields","lastModifiedDate":"2023-10-25"},{"lineNumber":64,"author":{"gitId":"sopa301"},"content":"        predicate \u003d new CombinedPredicate(","lastModifiedDate":"2023-10-25"},{"lineNumber":65,"author":{"gitId":"sopa301"},"content":"                new FinancialPlanContainsKeywordsPredicate(Collections.singletonList(\"Senior\")),","lastModifiedDate":"2023-10-25"},{"lineNumber":66,"author":{"gitId":"sopa301"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"Alice\")));","lastModifiedDate":"2023-11-07"},{"lineNumber":67,"author":{"gitId":"sopa301"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice\").withFinancialPlans(\"Senior\").build()));","lastModifiedDate":"2023-10-25"},{"lineNumber":68,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":69,"author":{"gitId":"sopa301"},"content":"        // Only one matching keyword","lastModifiedDate":"2023-10-25"},{"lineNumber":70,"author":{"gitId":"sopa301"},"content":"        predicate \u003d new CombinedPredicate(","lastModifiedDate":"2023-10-25"},{"lineNumber":71,"author":{"gitId":"sopa301"},"content":"                new FinancialPlanContainsKeywordsPredicate(Collections.singletonList(\"Senior\")),","lastModifiedDate":"2023-10-25"},{"lineNumber":72,"author":{"gitId":"sopa301"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"Alice\")));","lastModifiedDate":"2023-11-07"},{"lineNumber":73,"author":{"gitId":"sopa301"},"content":"        assertTrue(predicate.test(new PersonBuilder().withFinancialPlans(\"Senior\", \"Koopa\").build()));","lastModifiedDate":"2023-10-25"},{"lineNumber":74,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":75,"author":{"gitId":"sopa301"},"content":"        // Mixed-case keywords","lastModifiedDate":"2023-10-25"},{"lineNumber":76,"author":{"gitId":"sopa301"},"content":"        predicate \u003d new CombinedPredicate(","lastModifiedDate":"2023-10-25"},{"lineNumber":77,"author":{"gitId":"sopa301"},"content":"                new FinancialPlanContainsKeywordsPredicate(Collections.singletonList(\"chILD\")));","lastModifiedDate":"2023-11-07"},{"lineNumber":78,"author":{"gitId":"sopa301"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice\").withFinancialPlans(\"Child Premium\").build()));","lastModifiedDate":"2023-10-25"},{"lineNumber":79,"author":{"gitId":"sopa301"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":80,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":81,"author":{"gitId":"sopa301"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":82,"author":{"gitId":"sopa301"},"content":"    public void test_personDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2023-10-25"},{"lineNumber":83,"author":{"gitId":"sopa301"},"content":"        // Zero keywords","lastModifiedDate":"2023-10-25"},{"lineNumber":84,"author":{"gitId":"sopa301"},"content":"        CombinedPredicate predicate \u003d new CombinedPredicate();","lastModifiedDate":"2023-11-07"},{"lineNumber":85,"author":{"gitId":"sopa301"},"content":"        assertFalse(predicate.test(new PersonBuilder().withFinancialPlans(\"Child\").build()));","lastModifiedDate":"2023-10-25"},{"lineNumber":86,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":87,"author":{"gitId":"sopa301"},"content":"        // Non-matching keyword","lastModifiedDate":"2023-10-25"},{"lineNumber":88,"author":{"gitId":"sopa301"},"content":"        predicate \u003d new CombinedPredicate(new FinancialPlanContainsKeywordsPredicate(Arrays.asList(\"Senior\")));","lastModifiedDate":"2023-11-07"},{"lineNumber":89,"author":{"gitId":"sopa301"},"content":"        assertFalse(predicate.test(new PersonBuilder().withFinancialPlans(\"Child Premium\").build()));","lastModifiedDate":"2023-10-25"},{"lineNumber":90,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":91,"author":{"gitId":"sopa301"},"content":"        // Keywords match phone, email and address, but does not match financial plans","lastModifiedDate":"2023-10-25"},{"lineNumber":92,"author":{"gitId":"sopa301"},"content":"        predicate \u003d new CombinedPredicate(new FinancialPlanContainsKeywordsPredicate(","lastModifiedDate":"2023-10-25"},{"lineNumber":93,"author":{"gitId":"sopa301"},"content":"                Arrays.asList(\"12345\", \"alice@email.com\", \"Main\", \"Street\")));","lastModifiedDate":"2023-11-07"},{"lineNumber":94,"author":{"gitId":"sopa301"},"content":"        assertFalse(predicate.test(new PersonBuilder().withFinancialPlans(\"Child\").withPhone(\"12345\")","lastModifiedDate":"2023-10-25"},{"lineNumber":95,"author":{"gitId":"sopa301"},"content":"                .withEmail(\"alice@email.com\").withAddress(\"Main Street\").build()));","lastModifiedDate":"2023-10-25"},{"lineNumber":96,"author":{"gitId":"sopa301"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":97,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":98,"author":{"gitId":"sopa301"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":99,"author":{"gitId":"sopa301"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-25"},{"lineNumber":100,"author":{"gitId":"sopa301"},"content":"        List\u003cString\u003e keywords \u003d List.of(\"keyword1\", \"keyword2\");","lastModifiedDate":"2023-10-25"},{"lineNumber":101,"author":{"gitId":"sopa301"},"content":"        NameContainsKeywordsPredicate nameContainsKeywordsPredicate \u003d new NameContainsKeywordsPredicate(keywords);","lastModifiedDate":"2023-11-07"},{"lineNumber":102,"author":{"gitId":"sopa301"},"content":"        FinancialPlanContainsKeywordsPredicate financialPlanContainsKeywordsPredicate \u003d","lastModifiedDate":"2023-11-07"},{"lineNumber":103,"author":{"gitId":"sopa301"},"content":"                new FinancialPlanContainsKeywordsPredicate(keywords);","lastModifiedDate":"2023-11-07"},{"lineNumber":104,"author":{"gitId":"sopa301"},"content":"        CombinedPredicate predicate \u003d new CombinedPredicate(nameContainsKeywordsPredicate,","lastModifiedDate":"2023-11-07"},{"lineNumber":105,"author":{"gitId":"sopa301"},"content":"                financialPlanContainsKeywordsPredicate);","lastModifiedDate":"2023-11-07"},{"lineNumber":106,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":107,"author":{"gitId":"sopa301"},"content":"        String expected \u003d CombinedPredicate.class.getCanonicalName() + \"{\"","lastModifiedDate":"2023-11-07"},{"lineNumber":108,"author":{"gitId":"sopa301"},"content":"                + nameContainsKeywordsPredicate.getClass().getCanonicalName()","lastModifiedDate":"2023-11-07"},{"lineNumber":109,"author":{"gitId":"sopa301"},"content":"                + \"\u003d\" + nameContainsKeywordsPredicate + \", \"","lastModifiedDate":"2023-11-07"},{"lineNumber":110,"author":{"gitId":"sopa301"},"content":"                + financialPlanContainsKeywordsPredicate.getClass().getCanonicalName()","lastModifiedDate":"2023-11-07"},{"lineNumber":111,"author":{"gitId":"sopa301"},"content":"                + \"\u003d\" + financialPlanContainsKeywordsPredicate","lastModifiedDate":"2023-11-07"},{"lineNumber":112,"author":{"gitId":"sopa301"},"content":"                + \"}\";","lastModifiedDate":"2023-11-07"},{"lineNumber":113,"author":{"gitId":"sopa301"},"content":"        assertEquals(expected, predicate.toString());","lastModifiedDate":"2023-10-25"},{"lineNumber":114,"author":{"gitId":"sopa301"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":115,"author":{"gitId":"sopa301"},"content":"}","lastModifiedDate":"2023-10-25"}],"authorContributionMap":{"sopa301":115}},{"path":"src/test/java/seedu/address/model/person/predicates/FinancialPlanContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"sopa301"},"content":"package seedu.address.model.person.predicates;","lastModifiedDate":"2023-10-25"},{"lineNumber":2,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":3,"author":{"gitId":"sopa301"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-25"},{"lineNumber":4,"author":{"gitId":"sopa301"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-25"},{"lineNumber":5,"author":{"gitId":"sopa301"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-25"},{"lineNumber":6,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":7,"author":{"gitId":"sopa301"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-10-25"},{"lineNumber":8,"author":{"gitId":"sopa301"},"content":"import java.util.Collections;","lastModifiedDate":"2023-10-25"},{"lineNumber":9,"author":{"gitId":"sopa301"},"content":"import java.util.List;","lastModifiedDate":"2023-10-25"},{"lineNumber":10,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":11,"author":{"gitId":"sopa301"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-25"},{"lineNumber":12,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":13,"author":{"gitId":"sopa301"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2023-10-25"},{"lineNumber":14,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":15,"author":{"gitId":"sopa301"},"content":"public class FinancialPlanContainsKeywordsPredicateTest {","lastModifiedDate":"2023-10-25"},{"lineNumber":16,"author":{"gitId":"sopa301"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":17,"author":{"gitId":"sopa301"},"content":"    public void equals() {","lastModifiedDate":"2023-10-25"},{"lineNumber":18,"author":{"gitId":"sopa301"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2023-10-25"},{"lineNumber":19,"author":{"gitId":"sopa301"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2023-10-25"},{"lineNumber":20,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":21,"author":{"gitId":"sopa301"},"content":"        FinancialPlanContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2023-10-25"},{"lineNumber":22,"author":{"gitId":"sopa301"},"content":"                new FinancialPlanContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2023-10-25"},{"lineNumber":23,"author":{"gitId":"sopa301"},"content":"        FinancialPlanContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2023-10-25"},{"lineNumber":24,"author":{"gitId":"sopa301"},"content":"                new FinancialPlanContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2023-10-25"},{"lineNumber":25,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":26,"author":{"gitId":"sopa301"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-25"},{"lineNumber":27,"author":{"gitId":"sopa301"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2023-10-25"},{"lineNumber":28,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":29,"author":{"gitId":"sopa301"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-25"},{"lineNumber":30,"author":{"gitId":"sopa301"},"content":"        FinancialPlanContainsKeywordsPredicate firstPredicateCopy \u003d","lastModifiedDate":"2023-10-25"},{"lineNumber":31,"author":{"gitId":"sopa301"},"content":"                new FinancialPlanContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2023-10-25"},{"lineNumber":32,"author":{"gitId":"sopa301"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2023-10-25"},{"lineNumber":33,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":34,"author":{"gitId":"sopa301"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-25"},{"lineNumber":35,"author":{"gitId":"sopa301"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2023-10-25"},{"lineNumber":36,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":37,"author":{"gitId":"sopa301"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-25"},{"lineNumber":38,"author":{"gitId":"sopa301"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2023-10-25"},{"lineNumber":39,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":40,"author":{"gitId":"sopa301"},"content":"        // different financial plan -\u003e returns false","lastModifiedDate":"2023-10-25"},{"lineNumber":41,"author":{"gitId":"sopa301"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2023-10-25"},{"lineNumber":42,"author":{"gitId":"sopa301"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":43,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":44,"author":{"gitId":"sopa301"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":45,"author":{"gitId":"sopa301"},"content":"    public void test_financialPlansContainKeywords_returnsTrue() {","lastModifiedDate":"2023-10-25"},{"lineNumber":46,"author":{"gitId":"sopa301"},"content":"        // One keyword","lastModifiedDate":"2023-10-25"},{"lineNumber":47,"author":{"gitId":"sopa301"},"content":"        FinancialPlanContainsKeywordsPredicate predicate \u003d","lastModifiedDate":"2023-10-25"},{"lineNumber":48,"author":{"gitId":"sopa301"},"content":"                new FinancialPlanContainsKeywordsPredicate(Collections.singletonList(\"Senior\"));","lastModifiedDate":"2023-10-25"},{"lineNumber":49,"author":{"gitId":"sopa301"},"content":"        assertTrue(predicate.test(new PersonBuilder().withFinancialPlans(\"Senior\").build()));","lastModifiedDate":"2023-10-25"},{"lineNumber":50,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":51,"author":{"gitId":"sopa301"},"content":"        // Multiple keywords in same financial plan","lastModifiedDate":"2023-10-25"},{"lineNumber":52,"author":{"gitId":"sopa301"},"content":"        predicate \u003d new FinancialPlanContainsKeywordsPredicate(Arrays.asList(\"Senior\", \"Premium\"));","lastModifiedDate":"2023-10-25"},{"lineNumber":53,"author":{"gitId":"sopa301"},"content":"        assertTrue(predicate.test(new PersonBuilder().withFinancialPlans(\"Senior Premium\").build()));","lastModifiedDate":"2023-10-25"},{"lineNumber":54,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":55,"author":{"gitId":"sopa301"},"content":"        // Multiple keywords in different financial plans","lastModifiedDate":"2023-10-25"},{"lineNumber":56,"author":{"gitId":"sopa301"},"content":"        predicate \u003d new FinancialPlanContainsKeywordsPredicate(Arrays.asList(\"Senior\", \"Premium\"));","lastModifiedDate":"2023-10-25"},{"lineNumber":57,"author":{"gitId":"sopa301"},"content":"        assertTrue(predicate.test(new PersonBuilder().withFinancialPlans(\"Senior\", \"Premium\").build()));","lastModifiedDate":"2023-10-25"},{"lineNumber":58,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":59,"author":{"gitId":"sopa301"},"content":"        // Only one matching keyword","lastModifiedDate":"2023-10-25"},{"lineNumber":60,"author":{"gitId":"sopa301"},"content":"        predicate \u003d new FinancialPlanContainsKeywordsPredicate(Arrays.asList(\"Child\", \"Premium\"));","lastModifiedDate":"2023-10-25"},{"lineNumber":61,"author":{"gitId":"sopa301"},"content":"        assertTrue(predicate.test(new PersonBuilder().withFinancialPlans(\"Child\", \"Koopa\").build()));","lastModifiedDate":"2023-10-25"},{"lineNumber":62,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":63,"author":{"gitId":"sopa301"},"content":"        // Mixed-case keywords","lastModifiedDate":"2023-10-25"},{"lineNumber":64,"author":{"gitId":"sopa301"},"content":"        predicate \u003d new FinancialPlanContainsKeywordsPredicate(Arrays.asList(\"cHIld\", \"pREmium\"));","lastModifiedDate":"2023-10-25"},{"lineNumber":65,"author":{"gitId":"sopa301"},"content":"        assertTrue(predicate.test(new PersonBuilder().withFinancialPlans(\"Child Premium\").build()));","lastModifiedDate":"2023-10-25"},{"lineNumber":66,"author":{"gitId":"sopa301"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":67,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":68,"author":{"gitId":"sopa301"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":69,"author":{"gitId":"sopa301"},"content":"    public void test_financialPlansDoNotContainKeywords_returnsFalse() {","lastModifiedDate":"2023-10-25"},{"lineNumber":70,"author":{"gitId":"sopa301"},"content":"        // Zero keywords","lastModifiedDate":"2023-10-25"},{"lineNumber":71,"author":{"gitId":"sopa301"},"content":"        FinancialPlanContainsKeywordsPredicate predicate \u003d","lastModifiedDate":"2023-10-25"},{"lineNumber":72,"author":{"gitId":"sopa301"},"content":"                new FinancialPlanContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2023-10-25"},{"lineNumber":73,"author":{"gitId":"sopa301"},"content":"        assertFalse(predicate.test(new PersonBuilder().withFinancialPlans(\"Child\").build()));","lastModifiedDate":"2023-10-25"},{"lineNumber":74,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":75,"author":{"gitId":"sopa301"},"content":"        // Non-matching keyword","lastModifiedDate":"2023-10-25"},{"lineNumber":76,"author":{"gitId":"sopa301"},"content":"        predicate \u003d new FinancialPlanContainsKeywordsPredicate(Arrays.asList(\"Senior\"));","lastModifiedDate":"2023-10-25"},{"lineNumber":77,"author":{"gitId":"sopa301"},"content":"        assertFalse(predicate.test(new PersonBuilder().withFinancialPlans(\"Child Premium\").build()));","lastModifiedDate":"2023-10-25"},{"lineNumber":78,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":79,"author":{"gitId":"sopa301"},"content":"        // Keywords match phone, email and address, but does not match financial plans","lastModifiedDate":"2023-10-25"},{"lineNumber":80,"author":{"gitId":"sopa301"},"content":"        predicate \u003d new FinancialPlanContainsKeywordsPredicate(","lastModifiedDate":"2023-10-25"},{"lineNumber":81,"author":{"gitId":"sopa301"},"content":"                Arrays.asList(\"12345\", \"alice@email.com\", \"Main\", \"Street\"));","lastModifiedDate":"2023-10-25"},{"lineNumber":82,"author":{"gitId":"sopa301"},"content":"        assertFalse(predicate.test(new PersonBuilder().withFinancialPlans(\"Child\").withPhone(\"12345\")","lastModifiedDate":"2023-10-25"},{"lineNumber":83,"author":{"gitId":"sopa301"},"content":"                .withEmail(\"alice@email.com\").withAddress(\"Main Street\").build()));","lastModifiedDate":"2023-10-25"},{"lineNumber":84,"author":{"gitId":"sopa301"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":85,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":86,"author":{"gitId":"sopa301"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":87,"author":{"gitId":"sopa301"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-25"},{"lineNumber":88,"author":{"gitId":"sopa301"},"content":"        List\u003cString\u003e keywords \u003d List.of(\"keyword1\", \"keyword2\");","lastModifiedDate":"2023-10-25"},{"lineNumber":89,"author":{"gitId":"sopa301"},"content":"        FinancialPlanContainsKeywordsPredicate predicate \u003d new FinancialPlanContainsKeywordsPredicate(keywords);","lastModifiedDate":"2023-10-25"},{"lineNumber":90,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":91,"author":{"gitId":"sopa301"},"content":"        String expected \u003d FinancialPlanContainsKeywordsPredicate.class.getCanonicalName()","lastModifiedDate":"2023-10-25"},{"lineNumber":92,"author":{"gitId":"sopa301"},"content":"                + \"{keywords\u003d\" + keywords + \"}\";","lastModifiedDate":"2023-10-25"},{"lineNumber":93,"author":{"gitId":"sopa301"},"content":"        assertEquals(expected, predicate.toString());","lastModifiedDate":"2023-10-25"},{"lineNumber":94,"author":{"gitId":"sopa301"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":95,"author":{"gitId":"sopa301"},"content":"}","lastModifiedDate":"2023-10-25"}],"authorContributionMap":{"sopa301":95}},{"path":"src/test/java/seedu/address/model/person/predicates/NameContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"sopa301"},"content":"package seedu.address.model.person.predicates;","lastModifiedDate":"2023-10-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class NameContainsKeywordsPredicateTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d new NameContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicateCopy \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void test_nameContainsKeywords_returnsTrue() {","lastModifiedDate":"2017-08-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // One keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.singletonList(\"Alice\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // Multiple keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // Only one matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Bob\", \"Carol\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Carol\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // Mixed-case keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"aLIce\", \"bOB\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void test_nameDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2017-08-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // Zero keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2017-06-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // Non-matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Carol\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // Keywords match phone, email and address, but does not match name","lastModifiedDate":"2017-06-12"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"12345\", \"alice@email.com\", \"Main\", \"Street\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").withPhone(\"12345\")","lastModifiedDate":"2017-06-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"                .withEmail(\"alice@email.com\").withAddress(\"Main Street\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d List.of(\"keyword1\", \"keyword2\");","lastModifiedDate":"2019-02-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(keywords);","lastModifiedDate":"2019-02-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        String expected \u003d NameContainsKeywordsPredicate.class.getCanonicalName() + \"{keywords\u003d\" + keywords + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertEquals(expected, predicate.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"sopa301":1,"-":84}},{"path":"src/test/java/seedu/address/model/person/predicates/TagContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"sopa301"},"content":"package seedu.address.model.person.predicates;","lastModifiedDate":"2023-10-25"},{"lineNumber":2,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":3,"author":{"gitId":"sopa301"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-25"},{"lineNumber":4,"author":{"gitId":"sopa301"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-25"},{"lineNumber":5,"author":{"gitId":"sopa301"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-25"},{"lineNumber":6,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":7,"author":{"gitId":"sopa301"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-10-25"},{"lineNumber":8,"author":{"gitId":"sopa301"},"content":"import java.util.Collections;","lastModifiedDate":"2023-10-25"},{"lineNumber":9,"author":{"gitId":"sopa301"},"content":"import java.util.List;","lastModifiedDate":"2023-10-25"},{"lineNumber":10,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":11,"author":{"gitId":"sopa301"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-25"},{"lineNumber":12,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":13,"author":{"gitId":"sopa301"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2023-10-25"},{"lineNumber":14,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":15,"author":{"gitId":"sopa301"},"content":"public class TagContainsKeywordsPredicateTest {","lastModifiedDate":"2023-10-25"},{"lineNumber":16,"author":{"gitId":"sopa301"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":17,"author":{"gitId":"sopa301"},"content":"    public void equals() {","lastModifiedDate":"2023-10-25"},{"lineNumber":18,"author":{"gitId":"sopa301"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2023-10-25"},{"lineNumber":19,"author":{"gitId":"sopa301"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2023-10-25"},{"lineNumber":20,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":21,"author":{"gitId":"sopa301"},"content":"        TagContainsKeywordsPredicate firstPredicate \u003d new TagContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2023-10-25"},{"lineNumber":22,"author":{"gitId":"sopa301"},"content":"        TagContainsKeywordsPredicate secondPredicate \u003d new TagContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2023-10-25"},{"lineNumber":23,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":24,"author":{"gitId":"sopa301"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-25"},{"lineNumber":25,"author":{"gitId":"sopa301"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2023-10-25"},{"lineNumber":26,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":27,"author":{"gitId":"sopa301"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-25"},{"lineNumber":28,"author":{"gitId":"sopa301"},"content":"        TagContainsKeywordsPredicate firstPredicateCopy \u003d new TagContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2023-10-25"},{"lineNumber":29,"author":{"gitId":"sopa301"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2023-10-25"},{"lineNumber":30,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":31,"author":{"gitId":"sopa301"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-25"},{"lineNumber":32,"author":{"gitId":"sopa301"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2023-10-25"},{"lineNumber":33,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":34,"author":{"gitId":"sopa301"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-25"},{"lineNumber":35,"author":{"gitId":"sopa301"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2023-10-25"},{"lineNumber":36,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":37,"author":{"gitId":"sopa301"},"content":"        // different tag -\u003e returns false","lastModifiedDate":"2023-10-25"},{"lineNumber":38,"author":{"gitId":"sopa301"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2023-10-25"},{"lineNumber":39,"author":{"gitId":"sopa301"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":40,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":41,"author":{"gitId":"sopa301"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":42,"author":{"gitId":"sopa301"},"content":"    public void test_tagsContainKeywords_returnsTrue() {","lastModifiedDate":"2023-10-25"},{"lineNumber":43,"author":{"gitId":"sopa301"},"content":"        // One keyword","lastModifiedDate":"2023-10-25"},{"lineNumber":44,"author":{"gitId":"sopa301"},"content":"        TagContainsKeywordsPredicate predicate \u003d new TagContainsKeywordsPredicate(Collections.singletonList(\"Senior\"));","lastModifiedDate":"2023-10-25"},{"lineNumber":45,"author":{"gitId":"sopa301"},"content":"        assertTrue(predicate.test(new PersonBuilder().withTags(\"Senior\").build()));","lastModifiedDate":"2023-10-25"},{"lineNumber":46,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":47,"author":{"gitId":"sopa301"},"content":"        // Multiple keywords in same tag","lastModifiedDate":"2023-10-25"},{"lineNumber":48,"author":{"gitId":"sopa301"},"content":"        predicate \u003d new TagContainsKeywordsPredicate(Arrays.asList(\"Senior\", \"Premium\"));","lastModifiedDate":"2023-10-25"},{"lineNumber":49,"author":{"gitId":"sopa301"},"content":"        assertTrue(predicate.test(new PersonBuilder().withTags(\"SeniorPremium\").build()));","lastModifiedDate":"2023-10-25"},{"lineNumber":50,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":51,"author":{"gitId":"sopa301"},"content":"        // Multiple keywords in different tags","lastModifiedDate":"2023-10-25"},{"lineNumber":52,"author":{"gitId":"sopa301"},"content":"        predicate \u003d new TagContainsKeywordsPredicate(Arrays.asList(\"Senior\", \"Premium\"));","lastModifiedDate":"2023-10-25"},{"lineNumber":53,"author":{"gitId":"sopa301"},"content":"        assertTrue(predicate.test(new PersonBuilder().withTags(\"Senior\", \"Premium\").build()));","lastModifiedDate":"2023-10-25"},{"lineNumber":54,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":55,"author":{"gitId":"sopa301"},"content":"        // Only one matching keyword","lastModifiedDate":"2023-10-25"},{"lineNumber":56,"author":{"gitId":"sopa301"},"content":"        predicate \u003d new TagContainsKeywordsPredicate(Arrays.asList(\"Child\", \"Premium\"));","lastModifiedDate":"2023-10-25"},{"lineNumber":57,"author":{"gitId":"sopa301"},"content":"        assertTrue(predicate.test(new PersonBuilder().withTags(\"Child\", \"Koopa\").build()));","lastModifiedDate":"2023-10-25"},{"lineNumber":58,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":59,"author":{"gitId":"sopa301"},"content":"        // Mixed-case keywords","lastModifiedDate":"2023-10-25"},{"lineNumber":60,"author":{"gitId":"sopa301"},"content":"        predicate \u003d new TagContainsKeywordsPredicate(Arrays.asList(\"cHIld\", \"pREmium\"));","lastModifiedDate":"2023-10-25"},{"lineNumber":61,"author":{"gitId":"sopa301"},"content":"        assertTrue(predicate.test(new PersonBuilder().withTags(\"ChildPremium\").build()));","lastModifiedDate":"2023-10-25"},{"lineNumber":62,"author":{"gitId":"sopa301"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":63,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":64,"author":{"gitId":"sopa301"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":65,"author":{"gitId":"sopa301"},"content":"    public void test_tagsDoNotContainKeywords_returnsFalse() {","lastModifiedDate":"2023-10-25"},{"lineNumber":66,"author":{"gitId":"sopa301"},"content":"        // Zero keywords","lastModifiedDate":"2023-10-25"},{"lineNumber":67,"author":{"gitId":"sopa301"},"content":"        TagContainsKeywordsPredicate predicate \u003d new TagContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2023-10-25"},{"lineNumber":68,"author":{"gitId":"sopa301"},"content":"        assertFalse(predicate.test(new PersonBuilder().withTags(\"Child\").build()));","lastModifiedDate":"2023-10-25"},{"lineNumber":69,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":70,"author":{"gitId":"sopa301"},"content":"        // Non-matching keyword","lastModifiedDate":"2023-10-25"},{"lineNumber":71,"author":{"gitId":"sopa301"},"content":"        predicate \u003d new TagContainsKeywordsPredicate(Arrays.asList(\"Senior\"));","lastModifiedDate":"2023-10-25"},{"lineNumber":72,"author":{"gitId":"sopa301"},"content":"        assertFalse(predicate.test(new PersonBuilder().withTags(\"ChildPremium\").build()));","lastModifiedDate":"2023-10-25"},{"lineNumber":73,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":74,"author":{"gitId":"sopa301"},"content":"        // Keywords match phone, email and address, but does not match tags","lastModifiedDate":"2023-10-25"},{"lineNumber":75,"author":{"gitId":"sopa301"},"content":"        predicate \u003d new TagContainsKeywordsPredicate(Arrays.asList(\"12345\", \"alice@email.com\", \"Main\", \"Street\"));","lastModifiedDate":"2023-10-25"},{"lineNumber":76,"author":{"gitId":"sopa301"},"content":"        assertFalse(predicate.test(new PersonBuilder().withTags(\"Child\").withPhone(\"12345\")","lastModifiedDate":"2023-10-25"},{"lineNumber":77,"author":{"gitId":"sopa301"},"content":"                .withEmail(\"alice@email.com\").withAddress(\"Main Street\").build()));","lastModifiedDate":"2023-10-25"},{"lineNumber":78,"author":{"gitId":"sopa301"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":79,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":80,"author":{"gitId":"sopa301"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":81,"author":{"gitId":"sopa301"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-25"},{"lineNumber":82,"author":{"gitId":"sopa301"},"content":"        List\u003cString\u003e keywords \u003d List.of(\"keyword1\", \"keyword2\");","lastModifiedDate":"2023-10-25"},{"lineNumber":83,"author":{"gitId":"sopa301"},"content":"        TagContainsKeywordsPredicate predicate \u003d new TagContainsKeywordsPredicate(keywords);","lastModifiedDate":"2023-10-25"},{"lineNumber":84,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":85,"author":{"gitId":"sopa301"},"content":"        String expected \u003d TagContainsKeywordsPredicate.class.getCanonicalName() + \"{keywords\u003d\" + keywords + \"}\";","lastModifiedDate":"2023-10-25"},{"lineNumber":86,"author":{"gitId":"sopa301"},"content":"        assertEquals(expected, predicate.toString());","lastModifiedDate":"2023-10-25"},{"lineNumber":87,"author":{"gitId":"sopa301"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":88,"author":{"gitId":"sopa301"},"content":"}","lastModifiedDate":"2023-10-25"}],"authorContributionMap":{"sopa301":88}},{"path":"src/test/java/seedu/address/model/tag/TagTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.tag;","lastModifiedDate":"2017-12-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":3,"author":{"gitId":"AlyssaPng"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-23"},{"lineNumber":4,"author":{"gitId":"AlyssaPng"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-23"},{"lineNumber":5,"author":{"gitId":"AlyssaPng"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2023-10-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-03-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class TagTest {","lastModifiedDate":"2017-12-04"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Tag(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public void constructor_invalidTagName_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        String invalidTagName \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Tag(invalidTagName));","lastModifiedDate":"2019-03-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":23,"author":{"gitId":"AlyssaPng"},"content":"    @Test","lastModifiedDate":"2023-10-23"},{"lineNumber":24,"author":{"gitId":"AlyssaPng"},"content":"    public void containsSubstring_failure() {","lastModifiedDate":"2023-10-23"},{"lineNumber":25,"author":{"gitId":"AlyssaPng"},"content":"        Tag tag \u003d new Tag(VALID_TAG_HUSBAND);","lastModifiedDate":"2023-10-23"},{"lineNumber":26,"author":{"gitId":"AlyssaPng"},"content":"        String substring \u003d \"friend\";","lastModifiedDate":"2023-10-23"},{"lineNumber":27,"author":{"gitId":"AlyssaPng"},"content":"        assertFalse(tag.containsSubstring(substring));","lastModifiedDate":"2023-10-23"},{"lineNumber":28,"author":{"gitId":"AlyssaPng"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":29,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":30,"author":{"gitId":"AlyssaPng"},"content":"    @Test","lastModifiedDate":"2023-10-23"},{"lineNumber":31,"author":{"gitId":"AlyssaPng"},"content":"    public void containsSubstring_success() {","lastModifiedDate":"2023-10-23"},{"lineNumber":32,"author":{"gitId":"AlyssaPng"},"content":"        Tag tag \u003d new Tag(VALID_TAG_HUSBAND);","lastModifiedDate":"2023-10-23"},{"lineNumber":33,"author":{"gitId":"AlyssaPng"},"content":"        String substring \u003d \"hus\";","lastModifiedDate":"2023-10-23"},{"lineNumber":34,"author":{"gitId":"AlyssaPng"},"content":"        assertTrue(tag.containsSubstring(substring));","lastModifiedDate":"2023-10-23"},{"lineNumber":35,"author":{"gitId":"AlyssaPng"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":36,"author":{"gitId":"AlyssaPng"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void isValidTagName() {","lastModifiedDate":"2017-12-04"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // null tag name","lastModifiedDate":"2017-12-04"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Tag.isValidTagName(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-12-04"}],"authorContributionMap":{"AlyssaPng":17,"-":26}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedPersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.storage.JsonAdaptedPerson.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"sopa301"},"content":"import seedu.address.model.person.NextOfKinName;","lastModifiedDate":"2023-09-28"},{"lineNumber":19,"author":{"gitId":"sopa301"},"content":"import seedu.address.model.person.NextOfKinPhone;","lastModifiedDate":"2023-09-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class JsonAdaptedPersonTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"sopa301"},"content":"    private static final String INVALID_NEXT_OF_KIN_NAME \u003d \"R@chel\";","lastModifiedDate":"2023-09-29"},{"lineNumber":28,"author":{"gitId":"sopa301"},"content":"    private static final String INVALID_NEXT_OF_KIN_PHONE \u003d \"+651234\";","lastModifiedDate":"2023-09-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"nikele2001"},"content":"    private static final String INVALID_FINANCIAL_PLAN \u003d \"#plan\";","lastModifiedDate":"2023-10-16"},{"lineNumber":32,"author":{"gitId":"nikele2001"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d BENSON.getName().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d BENSON.getPhone().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d BENSON.getEmail().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d BENSON.getAddress().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"sopa301"},"content":"    private static final String VALID_NEXT_OF_KIN_NAME \u003d BENSON.getNextOfKinName().toString();","lastModifiedDate":"2023-09-29"},{"lineNumber":38,"author":{"gitId":"sopa301"},"content":"    private static final String VALID_NEXT_OF_KIN_PHONE \u003d BENSON.getNextOfKinPhone().toString();","lastModifiedDate":"2023-09-29"},{"lineNumber":39,"author":{"gitId":"Kb-Tay"},"content":"    private static final JsonAdaptedAppointment VALID_APPOINTMENT \u003d new JsonAdaptedAppointment(","lastModifiedDate":"2023-10-17"},{"lineNumber":40,"author":{"gitId":"Kb-Tay"},"content":"            BENSON.getAppointment().toString());","lastModifiedDate":"2023-10-17"},{"lineNumber":41,"author":{"gitId":"nikele2001"},"content":"    private static final List\u003cJsonAdaptedFinancialPlan\u003e VALID_FINANCIAL_PLANS \u003d BENSON.getFinancialPlans().stream()","lastModifiedDate":"2023-10-16"},{"lineNumber":42,"author":{"gitId":"nikele2001"},"content":"            .map(JsonAdaptedFinancialPlan::new)","lastModifiedDate":"2023-10-16"},{"lineNumber":43,"author":{"gitId":"nikele2001"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2023-10-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private static final List\u003cJsonAdaptedTag\u003e VALID_TAGS \u003d BENSON.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void toModelType_validPersonDetails_returnsPerson() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(BENSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertEquals(BENSON, person.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"sopa301"},"content":"                new JsonAdaptedPerson(INVALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2023-09-28"},{"lineNumber":58,"author":{"gitId":"Kb-Tay"},"content":"                        VALID_NEXT_OF_KIN_NAME, VALID_NEXT_OF_KIN_PHONE,","lastModifiedDate":"2023-10-19"},{"lineNumber":59,"author":{"gitId":"Kb-Tay"},"content":"                        VALID_FINANCIAL_PLANS, VALID_TAGS, VALID_APPOINTMENT);","lastModifiedDate":"2023-10-19"},{"lineNumber":60,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"sopa301"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(null, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2023-09-28"},{"lineNumber":68,"author":{"gitId":"Kb-Tay"},"content":"                VALID_NEXT_OF_KIN_NAME, VALID_NEXT_OF_KIN_PHONE, VALID_FINANCIAL_PLANS, VALID_TAGS, VALID_APPOINTMENT);","lastModifiedDate":"2023-10-19"},{"lineNumber":69,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"sopa301"},"content":"                new JsonAdaptedPerson(VALID_NAME, INVALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2023-09-28"},{"lineNumber":78,"author":{"gitId":"Kb-Tay"},"content":"                        VALID_NEXT_OF_KIN_NAME, VALID_NEXT_OF_KIN_PHONE,","lastModifiedDate":"2023-10-19"},{"lineNumber":79,"author":{"gitId":"Kb-Tay"},"content":"                        VALID_FINANCIAL_PLANS, VALID_TAGS, VALID_APPOINTMENT);","lastModifiedDate":"2023-10-19"},{"lineNumber":80,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Phone.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void toModelType_nullPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"sopa301"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, null, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2023-09-28"},{"lineNumber":88,"author":{"gitId":"Kb-Tay"},"content":"                VALID_NEXT_OF_KIN_NAME, VALID_NEXT_OF_KIN_PHONE,","lastModifiedDate":"2023-10-19"},{"lineNumber":89,"author":{"gitId":"Kb-Tay"},"content":"                VALID_FINANCIAL_PLANS, VALID_TAGS, VALID_APPOINTMENT);","lastModifiedDate":"2023-10-19"},{"lineNumber":90,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public void toModelType_invalidEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"sopa301"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, INVALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2023-09-28"},{"lineNumber":99,"author":{"gitId":"Kb-Tay"},"content":"                        VALID_NEXT_OF_KIN_NAME, VALID_NEXT_OF_KIN_PHONE,","lastModifiedDate":"2023-10-19"},{"lineNumber":100,"author":{"gitId":"Kb-Tay"},"content":"                        VALID_FINANCIAL_PLANS, VALID_TAGS, VALID_APPOINTMENT);","lastModifiedDate":"2023-10-19"},{"lineNumber":101,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Email.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public void toModelType_nullEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"sopa301"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, null, VALID_ADDRESS,","lastModifiedDate":"2023-09-28"},{"lineNumber":109,"author":{"gitId":"Kb-Tay"},"content":"                VALID_NEXT_OF_KIN_NAME, VALID_NEXT_OF_KIN_PHONE, VALID_FINANCIAL_PLANS, VALID_TAGS, VALID_APPOINTMENT);","lastModifiedDate":"2023-10-19"},{"lineNumber":110,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public void toModelType_invalidAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":118,"author":{"gitId":"sopa301"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, INVALID_ADDRESS,","lastModifiedDate":"2023-09-28"},{"lineNumber":119,"author":{"gitId":"Kb-Tay"},"content":"                        VALID_NEXT_OF_KIN_NAME, VALID_NEXT_OF_KIN_PHONE,","lastModifiedDate":"2023-10-19"},{"lineNumber":120,"author":{"gitId":"Kb-Tay"},"content":"                        VALID_FINANCIAL_PLANS, VALID_TAGS, VALID_APPOINTMENT);","lastModifiedDate":"2023-10-19"},{"lineNumber":121,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Address.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    public void toModelType_nullAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":128,"author":{"gitId":"sopa301"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, null,","lastModifiedDate":"2023-09-28"},{"lineNumber":129,"author":{"gitId":"Kb-Tay"},"content":"                VALID_NEXT_OF_KIN_NAME, VALID_NEXT_OF_KIN_PHONE, VALID_FINANCIAL_PLANS, VALID_TAGS, VALID_APPOINTMENT);","lastModifiedDate":"2023-10-19"},{"lineNumber":130,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":134,"author":{"gitId":"sopa301"},"content":"    @Test","lastModifiedDate":"2023-09-28"},{"lineNumber":135,"author":{"gitId":"sopa301"},"content":"    public void toModelType_invalidNextOfKinName_throwsIllegalValueException() {","lastModifiedDate":"2023-09-28"},{"lineNumber":136,"author":{"gitId":"sopa301"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2023-09-28"},{"lineNumber":137,"author":{"gitId":"sopa301"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2023-09-28"},{"lineNumber":138,"author":{"gitId":"Kb-Tay"},"content":"                        INVALID_NEXT_OF_KIN_NAME, VALID_NEXT_OF_KIN_PHONE,","lastModifiedDate":"2023-10-19"},{"lineNumber":139,"author":{"gitId":"Kb-Tay"},"content":"                        VALID_FINANCIAL_PLANS, VALID_TAGS, VALID_APPOINTMENT);","lastModifiedDate":"2023-10-19"},{"lineNumber":140,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":141,"author":{"gitId":"sopa301"},"content":"        String expectedMessage \u003d NextOfKinName.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-09-28"},{"lineNumber":142,"author":{"gitId":"sopa301"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2023-09-28"},{"lineNumber":143,"author":{"gitId":"sopa301"},"content":"    }","lastModifiedDate":"2023-09-28"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":145,"author":{"gitId":"sopa301"},"content":"    @Test","lastModifiedDate":"2023-09-28"},{"lineNumber":146,"author":{"gitId":"sopa301"},"content":"    public void toModelType_nullNextOfKinName_throwsIllegalValueException() {","lastModifiedDate":"2023-09-28"},{"lineNumber":147,"author":{"gitId":"sopa301"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2023-09-28"},{"lineNumber":148,"author":{"gitId":"Kb-Tay"},"content":"                null, VALID_NEXT_OF_KIN_PHONE, VALID_FINANCIAL_PLANS, VALID_TAGS, VALID_APPOINTMENT);","lastModifiedDate":"2023-10-19"},{"lineNumber":149,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":150,"author":{"gitId":"sopa301"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, NextOfKinName.class.getSimpleName());","lastModifiedDate":"2023-09-28"},{"lineNumber":151,"author":{"gitId":"sopa301"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2023-09-28"},{"lineNumber":152,"author":{"gitId":"sopa301"},"content":"    }","lastModifiedDate":"2023-09-28"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":154,"author":{"gitId":"sopa301"},"content":"    @Test","lastModifiedDate":"2023-09-28"},{"lineNumber":155,"author":{"gitId":"sopa301"},"content":"    public void toModelType_invalidNextOfKinPhone_throwsIllegalValueException() {","lastModifiedDate":"2023-09-28"},{"lineNumber":156,"author":{"gitId":"sopa301"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2023-09-28"},{"lineNumber":157,"author":{"gitId":"sopa301"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2023-09-28"},{"lineNumber":158,"author":{"gitId":"Kb-Tay"},"content":"                        VALID_NEXT_OF_KIN_NAME, INVALID_NEXT_OF_KIN_PHONE,","lastModifiedDate":"2023-10-19"},{"lineNumber":159,"author":{"gitId":"Kb-Tay"},"content":"                        VALID_FINANCIAL_PLANS, VALID_TAGS, VALID_APPOINTMENT);","lastModifiedDate":"2023-10-19"},{"lineNumber":160,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":161,"author":{"gitId":"sopa301"},"content":"        String expectedMessage \u003d NextOfKinPhone.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-09-28"},{"lineNumber":162,"author":{"gitId":"sopa301"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2023-09-28"},{"lineNumber":163,"author":{"gitId":"sopa301"},"content":"    }","lastModifiedDate":"2023-09-28"},{"lineNumber":164,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":165,"author":{"gitId":"sopa301"},"content":"    @Test","lastModifiedDate":"2023-09-28"},{"lineNumber":166,"author":{"gitId":"sopa301"},"content":"    public void toModelType_nullNextOfKinPhone_throwsIllegalValueException() {","lastModifiedDate":"2023-09-28"},{"lineNumber":167,"author":{"gitId":"sopa301"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2023-09-28"},{"lineNumber":168,"author":{"gitId":"Kb-Tay"},"content":"                VALID_NEXT_OF_KIN_NAME, null,","lastModifiedDate":"2023-10-19"},{"lineNumber":169,"author":{"gitId":"Kb-Tay"},"content":"                VALID_FINANCIAL_PLANS, VALID_TAGS, VALID_APPOINTMENT);","lastModifiedDate":"2023-10-19"},{"lineNumber":170,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":171,"author":{"gitId":"sopa301"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, NextOfKinPhone.class.getSimpleName());","lastModifiedDate":"2023-09-28"},{"lineNumber":172,"author":{"gitId":"sopa301"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2023-09-28"},{"lineNumber":173,"author":{"gitId":"sopa301"},"content":"    }","lastModifiedDate":"2023-09-28"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    public void toModelType_invalidTags_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        List\u003cJsonAdaptedTag\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        invalidTags.add(new JsonAdaptedTag(INVALID_TAG));","lastModifiedDate":"2018-08-13"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":179,"author":{"gitId":"sopa301"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2023-09-28"},{"lineNumber":180,"author":{"gitId":"Kb-Tay"},"content":"                        VALID_NEXT_OF_KIN_NAME, VALID_NEXT_OF_KIN_PHONE,","lastModifiedDate":"2023-10-19"},{"lineNumber":181,"author":{"gitId":"Kb-Tay"},"content":"                        VALID_FINANCIAL_PLANS, invalidTags, VALID_APPOINTMENT);","lastModifiedDate":"2023-10-19"},{"lineNumber":182,"author":{"gitId":"nikele2001"},"content":"        assertThrows(IllegalValueException.class, person::toModelType);","lastModifiedDate":"2023-10-16"},{"lineNumber":183,"author":{"gitId":"nikele2001"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":184,"author":{"gitId":"nikele2001"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":185,"author":{"gitId":"nikele2001"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":186,"author":{"gitId":"nikele2001"},"content":"    public void toModelType_invalidFinancialPlans_throwsIllegalValueException() {","lastModifiedDate":"2023-10-16"},{"lineNumber":187,"author":{"gitId":"nikele2001"},"content":"        List\u003cJsonAdaptedFinancialPlan\u003e invalidFinancialPlans \u003d new ArrayList\u003c\u003e(VALID_FINANCIAL_PLANS);","lastModifiedDate":"2023-10-16"},{"lineNumber":188,"author":{"gitId":"nikele2001"},"content":"        invalidFinancialPlans.add(new JsonAdaptedFinancialPlan(INVALID_FINANCIAL_PLAN));","lastModifiedDate":"2023-10-16"},{"lineNumber":189,"author":{"gitId":"nikele2001"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2023-10-16"},{"lineNumber":190,"author":{"gitId":"nikele2001"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2023-10-16"},{"lineNumber":191,"author":{"gitId":"Kb-Tay"},"content":"                        VALID_NEXT_OF_KIN_NAME, VALID_NEXT_OF_KIN_PHONE,","lastModifiedDate":"2023-10-19"},{"lineNumber":192,"author":{"gitId":"Kb-Tay"},"content":"                        invalidFinancialPlans, VALID_TAGS, VALID_APPOINTMENT);","lastModifiedDate":"2023-10-19"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":196,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"Kb-Tay":38,"nikele2001":14,"sopa301":42,"-":102}},{"path":"src/test/java/seedu/address/testutil/EditPersonDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-05-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-12-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-12-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-12-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":8,"author":{"gitId":"Kb-Tay"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2023-10-19"},{"lineNumber":9,"author":{"gitId":"nikele2001"},"content":"import seedu.address.model.financialplan.FinancialPlan;","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-12-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-12-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-12-23"},{"lineNumber":13,"author":{"gitId":"sopa301"},"content":"import seedu.address.model.person.NextOfKinName;","lastModifiedDate":"2023-09-28"},{"lineNumber":14,"author":{"gitId":"sopa301"},"content":"import seedu.address.model.person.NextOfKinPhone;","lastModifiedDate":"2023-09-28"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-12-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-12-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * A utility class to help with building EditPersonDescriptor objects.","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorBuilder {","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private EditPersonDescriptor descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder() {","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(EditPersonDescriptor descriptor) {","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.descriptor \u003d new EditPersonDescriptor(descriptor);","lastModifiedDate":"2017-05-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Returns an {@code EditPersonDescriptor} with fields containing {@code person}\u0027s details","lastModifiedDate":"2017-06-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-06-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        descriptor.setName(person.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        descriptor.setPhone(person.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        descriptor.setEmail(person.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        descriptor.setAddress(person.getAddress());","lastModifiedDate":"2017-06-21"},{"lineNumber":43,"author":{"gitId":"sopa301"},"content":"        descriptor.setNextOfKinName(person.getNextOfKinName());","lastModifiedDate":"2023-09-28"},{"lineNumber":44,"author":{"gitId":"sopa301"},"content":"        descriptor.setNextOfKinPhone(person.getNextOfKinPhone());","lastModifiedDate":"2023-09-28"},{"lineNumber":45,"author":{"gitId":"nikele2001"},"content":"        descriptor.setFinancialPlans(person.getFinancialPlans());","lastModifiedDate":"2023-10-16"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        descriptor.setTags(person.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":47,"author":{"gitId":"Kb-Tay"},"content":"        descriptor.setAppointment(person.getAppointment());","lastModifiedDate":"2023-10-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        descriptor.setName(new Name(name));","lastModifiedDate":"2017-12-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        descriptor.setPhone(new Phone(phone));","lastModifiedDate":"2017-12-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        descriptor.setEmail(new Email(email));","lastModifiedDate":"2017-12-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * Sets the {@code Address} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withAddress(String address) {","lastModifiedDate":"2017-08-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        descriptor.setAddress(new Address(address));","lastModifiedDate":"2017-12-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":82,"author":{"gitId":"sopa301"},"content":"    /**","lastModifiedDate":"2023-09-28"},{"lineNumber":83,"author":{"gitId":"sopa301"},"content":"     * Sets the {@code NextOfKinName} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2023-09-28"},{"lineNumber":84,"author":{"gitId":"sopa301"},"content":"     */","lastModifiedDate":"2023-09-28"},{"lineNumber":85,"author":{"gitId":"sopa301"},"content":"    public EditPersonDescriptorBuilder withNextOfKinName(String nokName) {","lastModifiedDate":"2023-09-28"},{"lineNumber":86,"author":{"gitId":"sopa301"},"content":"        descriptor.setNextOfKinName(new NextOfKinName(nokName));","lastModifiedDate":"2023-09-28"},{"lineNumber":87,"author":{"gitId":"sopa301"},"content":"        return this;","lastModifiedDate":"2023-09-28"},{"lineNumber":88,"author":{"gitId":"sopa301"},"content":"    }","lastModifiedDate":"2023-09-28"},{"lineNumber":89,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":90,"author":{"gitId":"sopa301"},"content":"    /**","lastModifiedDate":"2023-09-28"},{"lineNumber":91,"author":{"gitId":"sopa301"},"content":"     * Sets the {@code NextOfKinPhone} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2023-09-28"},{"lineNumber":92,"author":{"gitId":"sopa301"},"content":"     */","lastModifiedDate":"2023-09-28"},{"lineNumber":93,"author":{"gitId":"sopa301"},"content":"    public EditPersonDescriptorBuilder withNextOfKinPhone(String nokPhone) {","lastModifiedDate":"2023-09-28"},{"lineNumber":94,"author":{"gitId":"sopa301"},"content":"        descriptor.setNextOfKinPhone(new NextOfKinPhone(nokPhone));","lastModifiedDate":"2023-09-28"},{"lineNumber":95,"author":{"gitId":"sopa301"},"content":"        return this;","lastModifiedDate":"2023-09-28"},{"lineNumber":96,"author":{"gitId":"sopa301"},"content":"    }","lastModifiedDate":"2023-09-28"},{"lineNumber":97,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":98,"author":{"gitId":"nikele2001"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":99,"author":{"gitId":"nikele2001"},"content":"     * Parses the {@code financialPlans} into a {@code Set\u003cFinancialPlan\u003e} and set it to","lastModifiedDate":"2023-10-17"},{"lineNumber":100,"author":{"gitId":"nikele2001"},"content":"     * the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2023-10-17"},{"lineNumber":101,"author":{"gitId":"nikele2001"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":102,"author":{"gitId":"nikele2001"},"content":"    public EditPersonDescriptorBuilder withFinancialPlans(String... financialPlans) {","lastModifiedDate":"2023-10-16"},{"lineNumber":103,"author":{"gitId":"nikele2001"},"content":"        Set\u003cFinancialPlan\u003e financialPlanSet \u003d Stream.of(financialPlans)","lastModifiedDate":"2023-10-17"},{"lineNumber":104,"author":{"gitId":"nikele2001"},"content":"                .map(FinancialPlan::new).collect(Collectors.toSet());","lastModifiedDate":"2023-10-17"},{"lineNumber":105,"author":{"gitId":"nikele2001"},"content":"        descriptor.setFinancialPlans(financialPlanSet);","lastModifiedDate":"2023-10-16"},{"lineNumber":106,"author":{"gitId":"nikele2001"},"content":"        return this;","lastModifiedDate":"2023-10-16"},{"lineNumber":107,"author":{"gitId":"nikele2001"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":108,"author":{"gitId":"nikele2001"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code EditPersonDescriptor}","lastModifiedDate":"2017-07-26"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     * that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withTags(String... tags) {","lastModifiedDate":"2017-08-15"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagSet \u003d Stream.of(tags).map(Tag::new).collect(Collectors.toSet());","lastModifiedDate":"2017-12-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        descriptor.setTags(tagSet);","lastModifiedDate":"2017-12-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":119,"author":{"gitId":"Kb-Tay"},"content":"    /**","lastModifiedDate":"2023-10-19"},{"lineNumber":120,"author":{"gitId":"Kb-Tay"},"content":"     * Parses the {@code appointmentDesc} into a {@code Appointment} and set it to the {@code EditPersonDescriptor}","lastModifiedDate":"2023-10-19"},{"lineNumber":121,"author":{"gitId":"Kb-Tay"},"content":"     * that we are building.","lastModifiedDate":"2023-10-19"},{"lineNumber":122,"author":{"gitId":"Kb-Tay"},"content":"     */","lastModifiedDate":"2023-10-19"},{"lineNumber":123,"author":{"gitId":"Kb-Tay"},"content":"    public EditPersonDescriptorBuilder withAppointment(String appointmentDesc) {","lastModifiedDate":"2023-10-19"},{"lineNumber":124,"author":{"gitId":"Kb-Tay"},"content":"        Appointment appointment \u003d Appointment.parseAppointmentDescription(appointmentDesc);","lastModifiedDate":"2023-10-19"},{"lineNumber":125,"author":{"gitId":"Kb-Tay"},"content":"        descriptor.setAppointment(appointment);","lastModifiedDate":"2023-10-19"},{"lineNumber":126,"author":{"gitId":"Kb-Tay"},"content":"        return this;","lastModifiedDate":"2023-10-19"},{"lineNumber":127,"author":{"gitId":"Kb-Tay"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":128,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    public EditPersonDescriptor build() {","lastModifiedDate":"2017-05-05"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        return descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":132,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"Kb-Tay":12,"nikele2001":13,"sopa301":20,"-":87}},{"path":"src/test/java/seedu/address/testutil/PersonBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-12-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-04-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":6,"author":{"gitId":"Kb-Tay"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"Kb-Tay"},"content":"import seedu.address.model.appointment.NullAppointment;","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"Kb-Tay"},"content":"import seedu.address.model.appointment.ScheduleItem;","lastModifiedDate":"2023-10-22"},{"lineNumber":9,"author":{"gitId":"nikele2001"},"content":"import seedu.address.model.financialplan.FinancialPlan;","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-01-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-01-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-01-18"},{"lineNumber":13,"author":{"gitId":"sopa301"},"content":"import seedu.address.model.person.NextOfKinName;","lastModifiedDate":"2023-09-28"},{"lineNumber":14,"author":{"gitId":"sopa301"},"content":"import seedu.address.model.person.NextOfKinPhone;","lastModifiedDate":"2023-09-28"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-04-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-01-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-04-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2017-04-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * A utility class to help with building Person objects.","lastModifiedDate":"2017-04-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class PersonBuilder {","lastModifiedDate":"2016-09-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2020-12-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_PHONE \u003d \"85355255\";","lastModifiedDate":"2017-04-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_EMAIL \u003d \"amy@gmail.com\";","lastModifiedDate":"2020-12-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_ADDRESS \u003d \"123, Jurong West Ave 6, #08-111\";","lastModifiedDate":"2017-04-05"},{"lineNumber":29,"author":{"gitId":"sopa301"},"content":"    public static final String DEFAULT_NEXT_OF_KIN_NAME \u003d \"Adam Bee\";","lastModifiedDate":"2023-09-29"},{"lineNumber":30,"author":{"gitId":"sopa301"},"content":"    public static final String DEFAULT_NEXT_OF_KIN_PHONE \u003d \"85555255\";","lastModifiedDate":"2023-09-29"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Address address;","lastModifiedDate":"2017-12-20"},{"lineNumber":35,"author":{"gitId":"sopa301"},"content":"    private NextOfKinName nextOfKinName;","lastModifiedDate":"2023-09-29"},{"lineNumber":36,"author":{"gitId":"sopa301"},"content":"    private NextOfKinPhone nextOfKinPhone;","lastModifiedDate":"2023-09-29"},{"lineNumber":37,"author":{"gitId":"nikele2001"},"content":"    private Set\u003cFinancialPlan\u003e financialPlans;","lastModifiedDate":"2023-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-12-20"},{"lineNumber":39,"author":{"gitId":"Kb-Tay"},"content":"    private ScheduleItem appointment;","lastModifiedDate":"2023-10-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonBuilder} with the default details.","lastModifiedDate":"2020-05-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public PersonBuilder() {","lastModifiedDate":"2017-08-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2017-12-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2017-12-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        email \u003d new Email(DEFAULT_EMAIL);","lastModifiedDate":"2017-12-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        address \u003d new Address(DEFAULT_ADDRESS);","lastModifiedDate":"2017-12-20"},{"lineNumber":49,"author":{"gitId":"sopa301"},"content":"        nextOfKinName \u003d new NextOfKinName(DEFAULT_NEXT_OF_KIN_NAME);","lastModifiedDate":"2023-09-29"},{"lineNumber":50,"author":{"gitId":"sopa301"},"content":"        nextOfKinPhone \u003d new NextOfKinPhone(DEFAULT_NEXT_OF_KIN_PHONE);","lastModifiedDate":"2023-09-29"},{"lineNumber":51,"author":{"gitId":"nikele2001"},"content":"        financialPlans \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-10-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":53,"author":{"gitId":"Kb-Tay"},"content":"        appointment \u003d NullAppointment.getNullAppointment();","lastModifiedDate":"2023-10-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-11"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Initializes the PersonBuilder with the data of {@code personToCopy}.","lastModifiedDate":"2016-12-11"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-11"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public PersonBuilder(Person personToCopy) {","lastModifiedDate":"2018-01-10"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        name \u003d personToCopy.getName();","lastModifiedDate":"2017-12-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        phone \u003d personToCopy.getPhone();","lastModifiedDate":"2017-12-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        email \u003d personToCopy.getEmail();","lastModifiedDate":"2017-12-20"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        address \u003d personToCopy.getAddress();","lastModifiedDate":"2017-12-20"},{"lineNumber":64,"author":{"gitId":"sopa301"},"content":"        nextOfKinName \u003d personToCopy.getNextOfKinName();","lastModifiedDate":"2023-09-29"},{"lineNumber":65,"author":{"gitId":"sopa301"},"content":"        nextOfKinPhone \u003d personToCopy.getNextOfKinPhone();","lastModifiedDate":"2023-09-29"},{"lineNumber":66,"author":{"gitId":"nikele2001"},"content":"        financialPlans \u003d new HashSet\u003c\u003e(personToCopy.getFinancialPlans());","lastModifiedDate":"2023-10-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e(personToCopy.getTags());","lastModifiedDate":"2017-12-20"},{"lineNumber":68,"author":{"gitId":"Kb-Tay"},"content":"        appointment \u003d personToCopy.getAppointment();","lastModifiedDate":"2023-10-17"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-11"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-11"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public PersonBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2017-12-20"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public PersonBuilder withTags(String ... tags) {","lastModifiedDate":"2017-08-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2017-12-20"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":87,"author":{"gitId":"nikele2001"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":88,"author":{"gitId":"nikele2001"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Person} that we are building.","lastModifiedDate":"2023-10-16"},{"lineNumber":89,"author":{"gitId":"nikele2001"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":90,"author":{"gitId":"nikele2001"},"content":"    public PersonBuilder withFinancialPlans(String ... financialPlans) {","lastModifiedDate":"2023-10-16"},{"lineNumber":91,"author":{"gitId":"nikele2001"},"content":"        this.financialPlans \u003d SampleDataUtil.getFinancialPlanSet(financialPlans);","lastModifiedDate":"2023-10-16"},{"lineNumber":92,"author":{"gitId":"nikele2001"},"content":"        return this;","lastModifiedDate":"2023-10-16"},{"lineNumber":93,"author":{"gitId":"nikele2001"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":94,"author":{"gitId":"nikele2001"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * Sets the {@code Address} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public PersonBuilder withAddress(String address) {","lastModifiedDate":"2017-08-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        this.address \u003d new Address(address);","lastModifiedDate":"2017-12-20"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public PersonBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        this.phone \u003d new Phone(phone);","lastModifiedDate":"2017-12-20"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public PersonBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        this.email \u003d new Email(email);","lastModifiedDate":"2017-12-20"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":118,"author":{"gitId":"sopa301"},"content":"    /**","lastModifiedDate":"2023-09-28"},{"lineNumber":119,"author":{"gitId":"sopa301"},"content":"     * Sets the {@code NextOfKinName} of the {@code Person} that we are building.","lastModifiedDate":"2023-09-28"},{"lineNumber":120,"author":{"gitId":"sopa301"},"content":"     */","lastModifiedDate":"2023-09-28"},{"lineNumber":121,"author":{"gitId":"sopa301"},"content":"    public PersonBuilder withNextOfKinName(String nokName) {","lastModifiedDate":"2023-09-28"},{"lineNumber":122,"author":{"gitId":"sopa301"},"content":"        this.nextOfKinName \u003d new NextOfKinName(nokName);","lastModifiedDate":"2023-09-29"},{"lineNumber":123,"author":{"gitId":"sopa301"},"content":"        return this;","lastModifiedDate":"2023-09-28"},{"lineNumber":124,"author":{"gitId":"sopa301"},"content":"    }","lastModifiedDate":"2023-09-28"},{"lineNumber":125,"author":{"gitId":"sopa301"},"content":"    /**","lastModifiedDate":"2023-09-28"},{"lineNumber":126,"author":{"gitId":"sopa301"},"content":"     * Sets the {@code NextOfKinPhone} of the {@code Person} that we are building.","lastModifiedDate":"2023-09-28"},{"lineNumber":127,"author":{"gitId":"sopa301"},"content":"     */","lastModifiedDate":"2023-09-28"},{"lineNumber":128,"author":{"gitId":"sopa301"},"content":"    public PersonBuilder withNextOfKinPhone(String nokPhone) {","lastModifiedDate":"2023-09-28"},{"lineNumber":129,"author":{"gitId":"sopa301"},"content":"        this.nextOfKinPhone \u003d new NextOfKinPhone(nokPhone);","lastModifiedDate":"2023-09-29"},{"lineNumber":130,"author":{"gitId":"sopa301"},"content":"        return this;","lastModifiedDate":"2023-09-28"},{"lineNumber":131,"author":{"gitId":"sopa301"},"content":"    }","lastModifiedDate":"2023-09-28"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":133,"author":{"gitId":"Kb-Tay"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":134,"author":{"gitId":"Kb-Tay"},"content":"     * Sets the {@code Appointment} of the {@code Person} that we are building.","lastModifiedDate":"2023-10-17"},{"lineNumber":135,"author":{"gitId":"Kb-Tay"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":136,"author":{"gitId":"Kb-Tay"},"content":"    public PersonBuilder withAppointment(String appointment) {","lastModifiedDate":"2023-10-17"},{"lineNumber":137,"author":{"gitId":"Kb-Tay"},"content":"        this.appointment \u003d Appointment.parseAppointmentDescription(appointment);","lastModifiedDate":"2023-10-17"},{"lineNumber":138,"author":{"gitId":"Kb-Tay"},"content":"        return this;","lastModifiedDate":"2023-10-17"},{"lineNumber":139,"author":{"gitId":"Kb-Tay"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":140,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":141,"author":{"gitId":"Kb-Tay"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":142,"author":{"gitId":"Kb-Tay"},"content":"     * Sets the {@code NullAppointment} of the {@code Person} that we are building.","lastModifiedDate":"2023-10-17"},{"lineNumber":143,"author":{"gitId":"Kb-Tay"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":144,"author":{"gitId":"Kb-Tay"},"content":"    public PersonBuilder withNullAppointment() {","lastModifiedDate":"2023-10-17"},{"lineNumber":145,"author":{"gitId":"Kb-Tay"},"content":"        this.appointment \u003d NullAppointment.getNullAppointment();","lastModifiedDate":"2023-10-23"},{"lineNumber":146,"author":{"gitId":"Kb-Tay"},"content":"        return this;","lastModifiedDate":"2023-10-17"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":149,"author":{"gitId":"Kb-Tay"},"content":"    /**","lastModifiedDate":"2023-10-19"},{"lineNumber":150,"author":{"gitId":"Kb-Tay"},"content":"     * Builds a Person","lastModifiedDate":"2023-10-19"},{"lineNumber":151,"author":{"gitId":"Kb-Tay"},"content":"     *","lastModifiedDate":"2023-10-19"},{"lineNumber":152,"author":{"gitId":"Kb-Tay"},"content":"     * @return The Person built.","lastModifiedDate":"2023-10-19"},{"lineNumber":153,"author":{"gitId":"Kb-Tay"},"content":"     */","lastModifiedDate":"2023-10-19"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    public Person build() {","lastModifiedDate":"2017-04-05"},{"lineNumber":155,"author":{"gitId":"Kb-Tay"},"content":"        return new Person(name, phone, email, address, nextOfKinName, nextOfKinPhone,","lastModifiedDate":"2023-10-19"},{"lineNumber":156,"author":{"gitId":"Kb-Tay"},"content":"                financialPlans, tags, appointment);","lastModifiedDate":"2023-10-19"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":158,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-03"}],"authorContributionMap":{"Kb-Tay":27,"nikele2001":12,"sopa301":24,"-":95}},{"path":"src/test/java/seedu/address/testutil/PersonUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"nikele2001"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_FINANCIAL_PLAN;","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"nikele2001"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NEXT_OF_KIN_NAME;","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"nikele2001"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NEXT_OF_KIN_PHONE;","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-03-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-03-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2018-03-26"},{"lineNumber":16,"author":{"gitId":"nikele2001"},"content":"import seedu.address.model.financialplan.FinancialPlan;","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-03-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-04-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * A utility class for Person.","lastModifiedDate":"2017-04-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-04-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class PersonUtil {","lastModifiedDate":"2017-04-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Returns an add command string for adding the {@code person}.","lastModifiedDate":"2017-04-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static String getAddCommand(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        return AddCommand.COMMAND_WORD + \" \" + getPersonDetails(person);","lastModifiedDate":"2017-03-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code person}\u0027s details.","lastModifiedDate":"2017-04-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static String getPersonDetails(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-04-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_NAME + person.getName().fullName + \" \");","lastModifiedDate":"2017-06-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_PHONE + person.getPhone().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_EMAIL + person.getEmail().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_ADDRESS + person.getAddress().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":41,"author":{"gitId":"sopa301"},"content":"        sb.append(PREFIX_NEXT_OF_KIN_NAME + person.getNextOfKinName().fullName + \" \");","lastModifiedDate":"2023-09-29"},{"lineNumber":42,"author":{"gitId":"sopa301"},"content":"        sb.append(PREFIX_NEXT_OF_KIN_PHONE + person.getNextOfKinPhone().value + \" \");","lastModifiedDate":"2023-09-29"},{"lineNumber":43,"author":{"gitId":"nikele2001"},"content":"        person.getFinancialPlans().stream().forEach(","lastModifiedDate":"2023-10-16"},{"lineNumber":44,"author":{"gitId":"nikele2001"},"content":"                s -\u003e sb.append(PREFIX_FINANCIAL_PLAN + s.financialPlanName + \" \")","lastModifiedDate":"2023-10-16"},{"lineNumber":45,"author":{"gitId":"nikele2001"},"content":"        );","lastModifiedDate":"2023-10-16"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        person.getTags().stream().forEach(","lastModifiedDate":"2017-05-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            s -\u003e sb.append(PREFIX_TAG + s.tagName + \" \")","lastModifiedDate":"2017-05-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        );","lastModifiedDate":"2017-05-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-04-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code EditPersonDescriptor}\u0027s details.","lastModifiedDate":"2018-03-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static String getEditPersonDescriptorDetails(EditPersonDescriptor descriptor) {","lastModifiedDate":"2018-03-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2018-03-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        descriptor.getName().ifPresent(name -\u003e sb.append(PREFIX_NAME).append(name.fullName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        descriptor.getPhone().ifPresent(phone -\u003e sb.append(PREFIX_PHONE).append(phone.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        descriptor.getEmail().ifPresent(email -\u003e sb.append(PREFIX_EMAIL).append(email.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        descriptor.getAddress().ifPresent(address -\u003e sb.append(PREFIX_ADDRESS).append(address.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":61,"author":{"gitId":"sopa301"},"content":"        descriptor.getNextOfKinName()","lastModifiedDate":"2023-09-28"},{"lineNumber":62,"author":{"gitId":"sopa301"},"content":"                .ifPresent(nextOfKinName -\u003e sb.append(PREFIX_NEXT_OF_KIN_NAME)","lastModifiedDate":"2023-09-29"},{"lineNumber":63,"author":{"gitId":"sopa301"},"content":"                        .append(nextOfKinName.fullName)","lastModifiedDate":"2023-09-29"},{"lineNumber":64,"author":{"gitId":"sopa301"},"content":"                        .append(\" \"));","lastModifiedDate":"2023-09-29"},{"lineNumber":65,"author":{"gitId":"sopa301"},"content":"        descriptor.getNextOfKinPhone()","lastModifiedDate":"2023-09-28"},{"lineNumber":66,"author":{"gitId":"sopa301"},"content":"                .ifPresent(nextOfKinPhone -\u003e sb.append(PREFIX_NEXT_OF_KIN_PHONE)","lastModifiedDate":"2023-09-29"},{"lineNumber":67,"author":{"gitId":"sopa301"},"content":"                        .append(nextOfKinPhone.value)","lastModifiedDate":"2023-09-29"},{"lineNumber":68,"author":{"gitId":"sopa301"},"content":"                        .append(\" \"));","lastModifiedDate":"2023-09-29"},{"lineNumber":69,"author":{"gitId":"nikele2001"},"content":"        if (descriptor.getFinancialPlans().isPresent()) {","lastModifiedDate":"2023-10-16"},{"lineNumber":70,"author":{"gitId":"nikele2001"},"content":"            Set\u003cFinancialPlan\u003e financialPlans \u003d descriptor.getFinancialPlans().get();","lastModifiedDate":"2023-10-16"},{"lineNumber":71,"author":{"gitId":"nikele2001"},"content":"            if (financialPlans.isEmpty()) {","lastModifiedDate":"2023-10-16"},{"lineNumber":72,"author":{"gitId":"nikele2001"},"content":"                sb.append(PREFIX_FINANCIAL_PLAN).append(\" \");","lastModifiedDate":"2023-10-16"},{"lineNumber":73,"author":{"gitId":"nikele2001"},"content":"            } else {","lastModifiedDate":"2023-10-16"},{"lineNumber":74,"author":{"gitId":"nikele2001"},"content":"                financialPlans.forEach(s -\u003e sb.append(PREFIX_FINANCIAL_PLAN).append(s.financialPlanName).append(\" \"));","lastModifiedDate":"2023-10-16"},{"lineNumber":75,"author":{"gitId":"nikele2001"},"content":"            }","lastModifiedDate":"2023-10-16"},{"lineNumber":76,"author":{"gitId":"nikele2001"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        if (descriptor.getTags().isPresent()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            Set\u003cTag\u003e tags \u003d descriptor.getTags().get();","lastModifiedDate":"2018-03-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            if (tags.isEmpty()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":80,"author":{"gitId":"nikele2001"},"content":"                sb.append(PREFIX_TAG).append(\" \");","lastModifiedDate":"2023-10-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2018-03-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"                tags.forEach(s -\u003e sb.append(PREFIX_TAG).append(s.tagName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-03-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2018-03-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-26"},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-04-05"}],"authorContributionMap":{"nikele2001":16,"sopa301":10,"-":61}},{"path":"src/test/java/seedu/address/testutil/TypicalPersons.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":7,"author":{"gitId":"nikele2001"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_FINANCIAL_PLAN_1;","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"nikele2001"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_FINANCIAL_PLAN_2;","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":11,"author":{"gitId":"sopa301"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NEXT_OF_KIN_NAME_AMY;","lastModifiedDate":"2023-09-29"},{"lineNumber":12,"author":{"gitId":"sopa301"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NEXT_OF_KIN_NAME_BOB;","lastModifiedDate":"2023-09-29"},{"lineNumber":13,"author":{"gitId":"sopa301"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NEXT_OF_KIN_PHONE_AMY;","lastModifiedDate":"2023-09-29"},{"lineNumber":14,"author":{"gitId":"sopa301"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NEXT_OF_KIN_PHONE_BOB;","lastModifiedDate":"2023-09-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-08-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-08-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-08-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-08-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-08-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Person} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"public class TypicalPersons {","lastModifiedDate":"2017-04-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final Person ALICE \u003d new PersonBuilder().withName(\"Alice Pauline\")","lastModifiedDate":"2018-01-10"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            .withAddress(\"123, Jurong West Ave 6, #08-111\").withEmail(\"alice@example.com\")","lastModifiedDate":"2017-04-05"},{"lineNumber":34,"author":{"gitId":"sopa301"},"content":"            .withPhone(\"94351253\").withNextOfKinName(\"Alice Dad\").withNextOfKinPhone(\"94351111\")","lastModifiedDate":"2023-09-28"},{"lineNumber":35,"author":{"gitId":"nikele2001"},"content":"            .withFinancialPlans(\"Sample Financial Plan 1\", \"Sample Financial Plan 2\")","lastModifiedDate":"2023-10-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            .withTags(\"friends\").build();","lastModifiedDate":"2023-10-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final Person BENSON \u003d new PersonBuilder().withName(\"Benson Meier\")","lastModifiedDate":"2018-01-10"},{"lineNumber":38,"author":{"gitId":"sopa301"},"content":"            .withAddress(\"311, Clementi Ave 2, #02-25\").withEmail(\"johnd@example.com\")","lastModifiedDate":"2023-09-28"},{"lineNumber":39,"author":{"gitId":"sopa301"},"content":"            .withPhone(\"98765432\").withNextOfKinName(\"Benson Dad\").withNextOfKinPhone(\"98761111\")","lastModifiedDate":"2023-09-28"},{"lineNumber":40,"author":{"gitId":"nikele2001"},"content":"            .withFinancialPlans(\"Sample Financial Plan 1\", \"Sample Financial Plan 2\")","lastModifiedDate":"2023-10-16"},{"lineNumber":41,"author":{"gitId":"Kb-Tay"},"content":"            .withTags(\"owesMoney\", \"friends\").withAppointment(\"Review insurance, 01-05-2023 18:00\").build();","lastModifiedDate":"2023-10-17"},{"lineNumber":42,"author":{"gitId":"Kb-Tay"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static final Person CARL \u003d new PersonBuilder().withName(\"Carl Kurz\").withPhone(\"95352563\")","lastModifiedDate":"2018-01-10"},{"lineNumber":44,"author":{"gitId":"sopa301"},"content":"            .withEmail(\"heinz@example.com\").withNextOfKinName(\"Carl Dad\")","lastModifiedDate":"2023-09-28"},{"lineNumber":45,"author":{"gitId":"jylow"},"content":"            .withNextOfKinPhone(\"95351111\").withAddress(\"wall street\")","lastModifiedDate":"2023-10-20"},{"lineNumber":46,"author":{"gitId":"jylow"},"content":"            .withAppointment(\"Review insurance, 01-05-2023 07:00\").build();","lastModifiedDate":"2023-10-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static final Person DANIEL \u003d new PersonBuilder().withName(\"Daniel Meier\").withPhone(\"87652533\")","lastModifiedDate":"2018-01-10"},{"lineNumber":48,"author":{"gitId":"sopa301"},"content":"            .withEmail(\"cornelia@example.com\").withAddress(\"10th street\").withNextOfKinName(\"Daniel Dad\")","lastModifiedDate":"2023-09-28"},{"lineNumber":49,"author":{"gitId":"sopa301"},"content":"            .withNextOfKinPhone(\"87651111\").withTags(\"friends\").build();","lastModifiedDate":"2023-09-28"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static final Person ELLE \u003d new PersonBuilder().withName(\"Elle Meyer\").withPhone(\"9482224\")","lastModifiedDate":"2018-01-10"},{"lineNumber":51,"author":{"gitId":"sopa301"},"content":"            .withEmail(\"werner@example.com\").withAddress(\"michegan ave\").withNextOfKinName(\"Elle Dad\")","lastModifiedDate":"2023-09-28"},{"lineNumber":52,"author":{"gitId":"nikele2001"},"content":"            .withNextOfKinPhone(\"94821113\")","lastModifiedDate":"2023-10-16"},{"lineNumber":53,"author":{"gitId":"nikele2001"},"content":"            .withFinancialPlans(\"Sample Financial Plan 2\").build();","lastModifiedDate":"2023-10-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static final Person FIONA \u003d new PersonBuilder().withName(\"Fiona Kunz\").withPhone(\"9482427\")","lastModifiedDate":"2018-01-10"},{"lineNumber":55,"author":{"gitId":"sopa301"},"content":"            .withEmail(\"lydia@example.com\").withAddress(\"little tokyo\").withNextOfKinName(\"Fiona Dad\")","lastModifiedDate":"2023-09-28"},{"lineNumber":56,"author":{"gitId":"sopa301"},"content":"            .withNextOfKinPhone(\"94821111\").build();","lastModifiedDate":"2023-09-28"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static final Person GEORGE \u003d new PersonBuilder().withName(\"George Best\").withPhone(\"9482442\")","lastModifiedDate":"2018-01-10"},{"lineNumber":58,"author":{"gitId":"nikele2001"},"content":"            .withFinancialPlans(\"Sample Financial Plan 1\", \"Sample Financial Plan 2\")","lastModifiedDate":"2023-10-16"},{"lineNumber":59,"author":{"gitId":"sopa301"},"content":"            .withEmail(\"anna@example.com\").withAddress(\"4th street\").withNextOfKinName(\"George Dad\")","lastModifiedDate":"2023-09-28"},{"lineNumber":60,"author":{"gitId":"sopa301"},"content":"            .withNextOfKinPhone(\"94821112\").build();","lastModifiedDate":"2023-09-28"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    // Manually added","lastModifiedDate":"2016-09-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public static final Person HOON \u003d new PersonBuilder().withName(\"Hoon Meier\").withPhone(\"8482424\")","lastModifiedDate":"2018-01-10"},{"lineNumber":64,"author":{"gitId":"sopa301"},"content":"            .withEmail(\"stefan@example.com\").withAddress(\"little india\").withNextOfKinName(\"Hoon Dad\")","lastModifiedDate":"2023-09-28"},{"lineNumber":65,"author":{"gitId":"nikele2001"},"content":"            .withFinancialPlans(\"Sample Financial Plan 1\", \"Sample Financial Plan 2\")","lastModifiedDate":"2023-10-16"},{"lineNumber":66,"author":{"gitId":"sopa301"},"content":"            .withNextOfKinPhone(\"84822222\").build();","lastModifiedDate":"2023-09-28"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public static final Person IDA \u003d new PersonBuilder().withName(\"Ida Mueller\").withPhone(\"8482131\")","lastModifiedDate":"2018-01-10"},{"lineNumber":68,"author":{"gitId":"sopa301"},"content":"            .withEmail(\"hans@example.com\").withAddress(\"chicago ave\").withNextOfKinName(\"Ida Dad\")","lastModifiedDate":"2023-09-28"},{"lineNumber":69,"author":{"gitId":"sopa301"},"content":"            .withNextOfKinPhone(\"84822221\").build();","lastModifiedDate":"2023-09-28"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    // Manually added - Person\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2017-08-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public static final Person AMY \u003d new PersonBuilder().withName(VALID_NAME_AMY).withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2018-01-10"},{"lineNumber":73,"author":{"gitId":"sopa301"},"content":"            .withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY).withNextOfKinName(VALID_NEXT_OF_KIN_NAME_AMY)","lastModifiedDate":"2023-09-29"},{"lineNumber":74,"author":{"gitId":"nikele2001"},"content":"            .withNextOfKinPhone(VALID_NEXT_OF_KIN_PHONE_AMY).withFinancialPlans(VALID_FINANCIAL_PLAN_1)","lastModifiedDate":"2023-10-17"},{"lineNumber":75,"author":{"gitId":"nikele2001"},"content":"            .withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2023-10-17"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public static final Person BOB \u003d new PersonBuilder().withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2018-01-10"},{"lineNumber":77,"author":{"gitId":"sopa301"},"content":"            .withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB).withNextOfKinName(VALID_NEXT_OF_KIN_NAME_BOB)","lastModifiedDate":"2023-09-29"},{"lineNumber":78,"author":{"gitId":"nikele2001"},"content":"            .withNextOfKinPhone(VALID_NEXT_OF_KIN_PHONE_BOB)","lastModifiedDate":"2023-10-17"},{"lineNumber":79,"author":{"gitId":"nikele2001"},"content":"            .withFinancialPlans(VALID_FINANCIAL_PLAN_1, VALID_FINANCIAL_PLAN_2)","lastModifiedDate":"2023-10-17"},{"lineNumber":80,"author":{"gitId":"nikele2001"},"content":"            .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2023-10-17"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2017-09-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    private TypicalPersons() {} // prevents instantiation","lastModifiedDate":"2017-07-20"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * Returns an {@code AddressBook} with all the typical persons.","lastModifiedDate":"2017-08-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public static AddressBook getTypicalAddressBook() {","lastModifiedDate":"2017-08-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2017-08-05"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        for (Person person : getTypicalPersons()) {","lastModifiedDate":"2018-01-10"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            ab.addPerson(person);","lastModifiedDate":"2017-08-05"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        return ab;","lastModifiedDate":"2016-09-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-04"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public static List\u003cPerson\u003e getTypicalPersons() {","lastModifiedDate":"2018-01-10"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));","lastModifiedDate":"2017-08-07"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-08-04"},{"lineNumber":100,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-13"}],"authorContributionMap":{"Kb-Tay":2,"nikele2001":13,"sopa301":21,"jylow":2,"-":62}}]

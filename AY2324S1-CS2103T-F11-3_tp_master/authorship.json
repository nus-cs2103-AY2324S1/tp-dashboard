[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"andytoh1"},"content":"[![CI Status](https://github.com/AY2324S1-CS2103T-F11-3/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2324S1-CS2103T-F11-3/tp/actions)","lastModifiedDate":"2023-09-30"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"andytoh1"},"content":"Bonjour fellow realtors and open-source users.","lastModifiedDate":"2023-09-30"},{"lineNumber":4,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"andytoh1"},"content":"* It is named `RealtorTrackerPlusMax` (`RTPM` for short) because it is designed for realtors to track their contacts.","lastModifiedDate":"2023-09-30"},{"lineNumber":7,"author":{"gitId":"andytoh1"},"content":"* For the detailed documentation of this project, please see the [project website](https://ay2324s1-cs2103t-f11-3.github.io/tp/) which contains the user and developer guide.","lastModifiedDate":"2023-09-30"},{"lineNumber":8,"author":{"gitId":"andytoh1"},"content":"* This is a brownfield project, which was based off the initial AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2023-09-30"},{"lineNumber":9,"author":{"gitId":"andytoh1"},"content":"* Our project is open-source and in OOP design.","lastModifiedDate":"2023-09-30"},{"lineNumber":10,"author":{"gitId":"andytoh1"},"content":"\u003e “This revolutionary app has changed the way I use the toilet” - James Dareal Ter, realtor, 24 years old","lastModifiedDate":"2023-09-30"},{"lineNumber":11,"author":{"gitId":"andytoh1"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":12,"author":{"gitId":"andytoh1"},"content":"\u003e “This app gave me an A+ for 2040”","lastModifiedDate":"2023-09-30"},{"lineNumber":13,"author":{"gitId":"andytoh1"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":14,"author":{"gitId":"andytoh1"},"content":"\u003e ”If only i could get a job in cs, but this is good too i guess” - Jayden, unemployed CS grad","lastModifiedDate":"2023-09-30"},{"lineNumber":15,"author":{"gitId":"andytoh1"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":16,"author":{"gitId":"andytoh1"},"content":"\u003e “Fork RTPM”","lastModifiedDate":"2023-09-30"},{"lineNumber":17,"author":{"gitId":"andytoh1"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":18,"author":{"gitId":"andytoh1"},"content":"\u003e ”RTPM cured my cancer”","lastModifiedDate":"2023-09-30"}],"authorContributionMap":{"andytoh1":15,"-":3}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  layout: default.md","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  title: \"About Us\"","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"# About Us","lastModifiedDate":"2023-09-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"You can reach us at the email `seer[at]comp.nus.edu.sg`","lastModifiedDate":"2020-06-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"J-hta-n"},"content":"### Jia Hao","lastModifiedDate":"2023-10-02"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"J-hta-n"},"content":"\u003cimg src\u003d\"images/j-hta-n.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"J-hta-n"},"content":"[[github](https://github.com/j-hta-n)]","lastModifiedDate":"2023-10-02"},{"lineNumber":19,"author":{"gitId":"J-hta-n"},"content":"[[portfolio](team/j-hta-n.md)]","lastModifiedDate":"2023-10-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"J-hta-n"},"content":"* Role: Developer","lastModifiedDate":"2023-10-02"},{"lineNumber":22,"author":{"gitId":"J-hta-n"},"content":"* Responsibilities: Code Quality","lastModifiedDate":"2023-10-02"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"andytoh1"},"content":"### Andy Toh","lastModifiedDate":"2023-09-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"andytoh1"},"content":"\u003cimg src\u003d\"images/andytoh1.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-09-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"andytoh1"},"content":"[[github](http://github.com/andytoh1)]","lastModifiedDate":"2023-09-30"},{"lineNumber":29,"author":{"gitId":"andytoh1"},"content":"[[portfolio](team/andytoh1.md)]","lastModifiedDate":"2023-09-30"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"andytoh1"},"content":"* Role: Developer","lastModifiedDate":"2023-09-30"},{"lineNumber":32,"author":{"gitId":"andytoh1"},"content":"* Responsibilities: Documentation","lastModifiedDate":"2023-10-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"iantsaii"},"content":"### Tsai Ian Fourre","lastModifiedDate":"2023-10-02"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"iantsaii"},"content":"\u003cimg src\u003d\"images/iantsaii.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-10-02"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"iantsaii"},"content":"[[github](http://github.com/iantsaii)] [[portfolio](team/johndoe.md)]","lastModifiedDate":"2023-10-02"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"iantsaii"},"content":"* Responsibilities: Quality assurance: Simulated System and Acceptance Testing","lastModifiedDate":"2023-10-02"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"peasantbird"},"content":"### Wong Xing Hui Bertrand","lastModifiedDate":"2023-10-02"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"peasantbird"},"content":"\u003cimg src\u003d\"images/peasantbird.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-10-02"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"peasantbird"},"content":"[[github](http://github.com/peasantbird)]","lastModifiedDate":"2023-10-02"},{"lineNumber":48,"author":{"gitId":"peasantbird"},"content":"[[portfolio](team/peasantbird.md)]","lastModifiedDate":"2023-10-02"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"peasantbird"},"content":"* Responsibilities: Code Quality","lastModifiedDate":"2023-10-02"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"ruiyangzh"},"content":"### Ruiyang Zhao","lastModifiedDate":"2023-09-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"ruiyangzh"},"content":"\u003cimg src\u003d\"images/ruiyangzh.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"ruiyangzh"},"content":"[[github](http://github.com/ruiyangzh)]","lastModifiedDate":"2023-09-27"},{"lineNumber":58,"author":{"gitId":"ruiyangzh"},"content":"[[portfolio](team/ruiyangzh.md)]","lastModifiedDate":"2023-10-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"ruiyangzh"},"content":"* Responsibilities: Developer Testing","lastModifiedDate":"2023-09-27"}],"authorContributionMap":{"ruiyangzh":5,"andytoh1":6,"peasantbird":5,"iantsaii":4,"-":35,"J-hta-n":6}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  layout: default.md","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  title: \"Developer Guide\"","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"  pageNav: 3","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":7,"author":{"gitId":"J-hta-n"},"content":"# RTPM-3 Developer Guide","lastModifiedDate":"2023-10-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c!-- * Table of Contents --\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003cpage-nav-print /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"_{ list here sources of all reused/adapted ideas, code, documentation, and third-party libraries -- include links to the original source as well }_","lastModifiedDate":"2023-09-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ArchitectureDiagram.puml\" width\u003d\"280\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"**`Main`** (consisting of classes [`Main`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/MainApp.java)) is in charge of the app launch and shut down.","lastModifiedDate":"2023-09-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"* At app launch, it initializes the other components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2023-09-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"* At shut down, it shuts down the other components and invokes cleanup methods where necessary.","lastModifiedDate":"2023-09-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"The bulk of the app\u0027s work is done by the following four components:","lastModifiedDate":"2023-09-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2023-09-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ArchitectureSequenceDiagram.puml\" width\u003d\"574\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":59,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ComponentManagers.puml\" width\u003d\"300\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UiClassDiagram.puml\" alt\u003d\"Structure of the UI Component\"/\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2021-07-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2021-07-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":81,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":82,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":83,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component, as it displays `Person` object residing in the `Model`.","lastModifiedDate":"2021-07-31"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"**API** : [`Logic.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/LogicClassDiagram.puml\" width\u003d\"550\"/\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"The sequence diagram below illustrates the interactions within the `Logic` component, taking `execute(\"delete 1\")` API call as an example.","lastModifiedDate":"2023-09-03"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/DeleteSequenceDiagram.puml\" alt\u003d\"Interactions Inside the Logic Component for the `delete 1` Command\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":97,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"**Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2023-09-12"},{"lineNumber":100,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2023-09-03"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":104,"author":{"gitId":"-"},"content":"1. When `Logic` is called upon to execute a command, it is passed to an `AddressBookParser` object which in turn creates a parser that matches the command (e.g., `DeleteCommandParser`) and uses it to parse the command.","lastModifiedDate":"2023-09-03"},{"lineNumber":105,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `DeleteCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2023-09-03"},{"lineNumber":106,"author":{"gitId":"-"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to delete a person).","lastModifiedDate":"2023-09-03"},{"lineNumber":107,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2023-09-03"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":109,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ParserClasses.puml\" width\u003d\"600\"/\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"* When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `AddressBookParser` returns back as a `Command` object.","lastModifiedDate":"2021-07-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-07-31"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":118,"author":{"gitId":"-"},"content":"**API** : [`Model.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ModelClassDiagram.puml\" width\u003d\"450\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"* stores the address book data i.e., all `Person` objects (which are contained in a `UniquePersonList` object).","lastModifiedDate":"2021-07-31"},{"lineNumber":126,"author":{"gitId":"-"},"content":"* stores the currently \u0027selected\u0027 `Person` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2021-07-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":132,"author":{"gitId":"-"},"content":"**Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `AddressBook`, which `Person` references. This allows `AddressBook` to only require one `Tag` object per unique tag, instead of each `Person` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":134,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/BetterModelClassDiagram.puml\" width\u003d\"450\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"**API** : [`Storage.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/StorageClassDiagram.puml\" width\u003d\"550\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"* can save both address book data and user preference data in JSON format, and read them back into corresponding objects.","lastModifiedDate":"2023-09-03"},{"lineNumber":147,"author":{"gitId":"-"},"content":"* inherits from both `AddressBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2021-07-31"},{"lineNumber":148,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.addressbook.commons` package.","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2020-06-07"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedAddressBook`. It extends `AddressBook` with an undo/redo history, stored internally as an `addressBookStateList` and `currentStatePointer`. Additionally, it implements the following operations:","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#commit()` — Saves the current address book state in its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#undo()` — Restores the previous address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#redo()` — Restores a previously undone address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()` and `Model#redoAddressBook()` respectively.","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the initial address book state, and the `currentStatePointer` pointing to that single address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState0.puml\" alt\u003d\"UndoRedoState0\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"Step 2. The user executes `delete 5` command to delete the 5th person in the address book. The `delete` command calls `Model#commitAddressBook()`, causing the modified state of the address book after the `delete 5` command executes to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState1.puml\" alt\u003d\"UndoRedoState1\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"Step 3. The user executes `add n/David …​` to add a new person. The `add` command also calls `Model#commitAddressBook()`, causing another modified address book state to be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState2.puml\" alt\u003d\"UndoRedoState2\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"**Note:** If a command fails its execution, it will not call `Model#commitAddressBook()`, so the address book state will not be saved into the `addressBookStateList`.","lastModifiedDate":"2023-09-12"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":190,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"Step 4. The user now decides that adding the person was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous address book state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState3.puml\" alt\u003d\"UndoRedoState3\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":197,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"**Note:** If the `currentStatePointer` is at index 0, pointing to the initial AddressBook state, then there are no previous AddressBook states to restore. The `undo` command uses `Model#canUndoAddressBook()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2023-09-12"},{"lineNumber":200,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"The following sequence diagram shows how the undo operation works:","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoSequenceDiagram.puml\" alt\u003d\"UndoSequenceDiagram\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"**Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2023-09-12"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":212,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"The `redo` command does the opposite — it calls `Model#redoAddressBook()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":218,"author":{"gitId":"-"},"content":"**Note:** If the `currentStatePointer` is at index `addressBookStateList.size() - 1`, pointing to the latest address book state, then there are no undone AddressBook states to restore. The `redo` command uses `Model#canRedoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2023-09-12"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the address book, such as `list`, will usually not call `Model#commitAddressBook()`, `Model#undoAddressBook()` or `Model#redoAddressBook()`. Thus, the `addressBookStateList` remains unchanged.","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState4.puml\" alt\u003d\"UndoRedoState4\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"Step 6. The user executes `clear`, which calls `Model#commitAddressBook()`. Since the `currentStatePointer` is not pointing at the end of the `addressBookStateList`, all address book states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `add n/David …​` command. This is the behavior that most modern desktop applications follow.","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState5.puml\" alt\u003d\"UndoRedoState5\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/CommitActivityDiagram.puml\" width\u003d\"250\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2021-07-31"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2021-07-31"},{"lineNumber":237,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Saves the entire address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"  * Pros: Easy to implement.","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"  * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"  * Pros: Will use less memory (e.g. for `delete`, just save the person being deleted).","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"  * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Data archiving","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"_{Explain here how the data archiving feature will be implemented}_","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":259,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":260,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":261,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":262,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"andytoh1"},"content":"This product is for realtors in their 20s who have many clients and houses to keep track of. They are relatively tech savvy and prefer the keyboard over the mouse, prefer concise commands as opposed to full sentences, and would like to customise the software to suit their preferences.","lastModifiedDate":"2023-09-30"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":275,"author":{"gitId":"andytoh1"},"content":"**Value proposition**:","lastModifiedDate":"2023-09-30"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":277,"author":{"gitId":"andytoh1"},"content":"Our free and open-source app helps realtors to keep track of their clients’ preferences and house viewings in one place. Unlike apps like Google Sheets, our app is more optimized for large databases. In addition, we help auto-match appropriate houses to a client with matching budget, needs and location.","lastModifiedDate":"2023-09-30"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":280,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":282,"author":{"gitId":"andytoh1"},"content":"Format taken from the AB3 Developer Guide","lastModifiedDate":"2023-09-30"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":284,"author":{"gitId":"andytoh1"},"content":"Priorities: High (must have) - * * *, Medium (nice to have) - * *, Low (unlikely to have) - *","lastModifiedDate":"2023-09-30"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":286,"author":{"gitId":"andytoh1"},"content":"Priority level is based on current iteration","lastModifiedDate":"2023-09-30"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":288,"author":{"gitId":"-"},"content":"| Priority | As a …​                                            | I want to …​                                                                | So that I can…​                                                                        |","lastModifiedDate":"2020-05-23"},{"lineNumber":289,"author":{"gitId":"peasantbird"},"content":"|----------|----------------------------------------------------|-----------------------------------------------------------------------------|----------------------------------------------------------------------------------------|","lastModifiedDate":"2023-10-02"},{"lineNumber":290,"author":{"gitId":"peasantbird"},"content":"| `* * *`  | realtor                                            | add home-buyer clients into the app                                         | keep track of them and their requirements                                              |","lastModifiedDate":"2023-10-02"},{"lineNumber":291,"author":{"gitId":"peasantbird"},"content":"| `* * *`  | realtor                                            | add home owners and their houses into the app                               | keep track of them and relevant details (such as the price they are looking for, etc.) |","lastModifiedDate":"2023-10-02"},{"lineNumber":292,"author":{"gitId":"peasantbird"},"content":"| `* * *`  | realtor                                            | view my contacts                                                            | easily find contacts I want to talk to                                                 |","lastModifiedDate":"2023-10-02"},{"lineNumber":293,"author":{"gitId":"peasantbird"},"content":"| `* * *`  | user who has been using the app for a long time    | delete/archive old contacts                                                 | declutter my list from outdated information                                            |","lastModifiedDate":"2023-10-02"},{"lineNumber":294,"author":{"gitId":"peasantbird"},"content":"| `* * *`  | realtor                                            | save contact data to my computer                                            | refer to it when I reopen my app                                                       |","lastModifiedDate":"2023-10-02"},{"lineNumber":295,"author":{"gitId":"peasantbird"},"content":"| `* * *`  | realtor                                            | add houses into the app together with their price, furnishings, etc.        | quickly list the features to my clients                                                | ","lastModifiedDate":"2023-10-02"},{"lineNumber":296,"author":{"gitId":"peasantbird"},"content":"| `* * *`  | realtor who wants to pack light on the move        | solely use the keyboard and not need to carry a mouse around to use the app | quickly access and update information without the fuss of using a mouse                |","lastModifiedDate":"2023-10-02"},{"lineNumber":297,"author":{"gitId":"peasantbird"},"content":"| `* *`    | realtor with many contacts                         | view personal contacts separately from work contacts                        | I can focus on work when I need to                                                     |","lastModifiedDate":"2023-10-02"},{"lineNumber":298,"author":{"gitId":"peasantbird"},"content":"| `* *`    | realtor with many client contacts                  | sort my client contacts based on priority (time, importance, etc.)          | I can focus on the most important clients first                                        |","lastModifiedDate":"2023-10-02"},{"lineNumber":299,"author":{"gitId":"peasantbird"},"content":"| `* *`    | realtor                                            | add prospective rental clients into the app                                 | keep track of them and their requirements                                              |","lastModifiedDate":"2023-10-02"},{"lineNumber":300,"author":{"gitId":"peasantbird"},"content":"| `* *`    | realtor who spends a lot of time at house viewings | I want the app to start up and respond quickly                              | use the app to note down any of my client’s preferences while talking to them          |","lastModifiedDate":"2023-10-02"},{"lineNumber":301,"author":{"gitId":"peasantbird"},"content":"| `* *`    | realtor who is flexible with scheduling            | reschedule or postpone my meetings easily in the app                        | so I can avoid the hassle of constantly deleting and making new meetings               |","lastModifiedDate":"2023-10-02"},{"lineNumber":302,"author":{"gitId":"peasantbird"},"content":"| `* *`    | realtor                                            | add time to tasks related to each of my clients                             | remember to do them                                                                    |","lastModifiedDate":"2023-10-02"},{"lineNumber":303,"author":{"gitId":"peasantbird"},"content":"| `* *`    | busy realtor with other activities in my life      | enter my schedule                                                           | account for overlaps with any meetings                                                 |","lastModifiedDate":"2023-10-02"},{"lineNumber":304,"author":{"gitId":"peasantbird"},"content":"| `*`      | forgetful user                                     | be reminded if I have any upcoming or late meetings                         | follow up on my clients                                                                |","lastModifiedDate":"2023-10-02"},{"lineNumber":305,"author":{"gitId":"peasantbird"},"content":"| `*`      | realtor                                            | track tasks related to each of my clients                                   | remember what I need to do to follow up on each of them                                |","lastModifiedDate":"2023-10-02"},{"lineNumber":306,"author":{"gitId":"peasantbird"},"content":"| `*`      | realtor                                            | be reminded of upcoming tasks or late tasks                                 | do them before meeting clients                                                         |","lastModifiedDate":"2023-10-02"},{"lineNumber":307,"author":{"gitId":"peasantbird"},"content":"| `*`      | power user                                         | modify the syntax of (at least some) commands                               | enter them faster                                                                      |","lastModifiedDate":"2023-10-02"},{"lineNumber":308,"author":{"gitId":"peasantbird"},"content":"| `*`      | lazy user                                          | be able to automatically match appropriate houses to prospective buyers     | avoid doing it manually                                                                |","lastModifiedDate":"2023-10-02"},{"lineNumber":309,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":310,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":311,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":312,"author":{"gitId":"J-hta-n"},"content":"(For all use cases below, the **System** is the `RTPM (RealtorTrackerPlusMax)` and the **Actor** is the `user`, ","lastModifiedDate":"2023-10-02"},{"lineNumber":313,"author":{"gitId":"J-hta-n"},"content":"unless specified otherwise)","lastModifiedDate":"2023-10-02"},{"lineNumber":314,"author":{"gitId":"-"},"content":"  ","lastModifiedDate":"2020-05-23"},{"lineNumber":315,"author":{"gitId":"iantsaii"},"content":"**Use case: UC1 - Add homeowner and house**  ","lastModifiedDate":"2023-10-02"},{"lineNumber":316,"author":{"gitId":"iantsaii"},"content":"System: RTPM  ","lastModifiedDate":"2023-10-02"},{"lineNumber":317,"author":{"gitId":"iantsaii"},"content":"Actor: User  ","lastModifiedDate":"2023-10-02"},{"lineNumber":318,"author":{"gitId":"iantsaii"},"content":"  ","lastModifiedDate":"2023-10-02"},{"lineNumber":319,"author":{"gitId":"iantsaii"},"content":"**MSS**","lastModifiedDate":"2023-10-02"},{"lineNumber":320,"author":{"gitId":"iantsaii"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":321,"author":{"gitId":"iantsaii"},"content":"1. User enters command to add homeowner and house details.","lastModifiedDate":"2023-10-02"},{"lineNumber":322,"author":{"gitId":"iantsaii"},"content":"2. System adds the entry to the list.","lastModifiedDate":"2023-10-02"},{"lineNumber":323,"author":{"gitId":"iantsaii"},"content":"3. System saves file. ","lastModifiedDate":"2023-10-02"},{"lineNumber":324,"author":{"gitId":"iantsaii"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":325,"author":{"gitId":"iantsaii"},"content":"   Use case ends.","lastModifiedDate":"2023-10-02"},{"lineNumber":326,"author":{"gitId":"iantsaii"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":327,"author":{"gitId":"iantsaii"},"content":"Extensions:","lastModifiedDate":"2023-10-02"},{"lineNumber":328,"author":{"gitId":"iantsaii"},"content":"* 1a. User enters invalid parameters.","lastModifiedDate":"2023-10-02"},{"lineNumber":329,"author":{"gitId":"iantsaii"},"content":"  * 1a1. System indicates to user that the parameters are invalid.","lastModifiedDate":"2023-10-02"},{"lineNumber":330,"author":{"gitId":"iantsaii"},"content":"    Use case restarts from step 1.","lastModifiedDate":"2023-10-02"},{"lineNumber":331,"author":{"gitId":"iantsaii"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":332,"author":{"gitId":"iantsaii"},"content":"* 3a. Failure to update savefile.","lastModifiedDate":"2023-10-02"},{"lineNumber":333,"author":{"gitId":"iantsaii"},"content":"  * 3a1. System indicates failure to update.","lastModifiedDate":"2023-10-02"},{"lineNumber":334,"author":{"gitId":"iantsaii"},"content":"    Use case restarts from step 1.  ","lastModifiedDate":"2023-10-02"},{"lineNumber":335,"author":{"gitId":"iantsaii"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":336,"author":{"gitId":"iantsaii"},"content":" ","lastModifiedDate":"2023-10-02"},{"lineNumber":337,"author":{"gitId":"iantsaii"},"content":"**Use case: UC2 - Add homebuyer and preferences**  ","lastModifiedDate":"2023-10-02"},{"lineNumber":338,"author":{"gitId":"iantsaii"},"content":"System: RTPM   ","lastModifiedDate":"2023-10-02"},{"lineNumber":339,"author":{"gitId":"iantsaii"},"content":"Actor: User  ","lastModifiedDate":"2023-10-02"},{"lineNumber":340,"author":{"gitId":"iantsaii"},"content":"**MSS**","lastModifiedDate":"2023-10-02"},{"lineNumber":341,"author":{"gitId":"iantsaii"},"content":"1. User enters command to add homebuyer and preferences.","lastModifiedDate":"2023-10-02"},{"lineNumber":342,"author":{"gitId":"iantsaii"},"content":"2. System adds the entry to the list.","lastModifiedDate":"2023-10-02"},{"lineNumber":343,"author":{"gitId":"iantsaii"},"content":"3. System saves file. ","lastModifiedDate":"2023-10-02"},{"lineNumber":344,"author":{"gitId":"iantsaii"},"content":"   Use case ends.","lastModifiedDate":"2023-10-02"},{"lineNumber":345,"author":{"gitId":"iantsaii"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":346,"author":{"gitId":"iantsaii"},"content":"Extensions:","lastModifiedDate":"2023-10-02"},{"lineNumber":347,"author":{"gitId":"iantsaii"},"content":"* 1a. User enters invalid parameters.","lastModifiedDate":"2023-10-02"},{"lineNumber":348,"author":{"gitId":"iantsaii"},"content":"  * 1a1. System indicates to user that the parameters are invalid.","lastModifiedDate":"2023-10-02"},{"lineNumber":349,"author":{"gitId":"iantsaii"},"content":"  Use case restarts from step 1.","lastModifiedDate":"2023-10-02"},{"lineNumber":350,"author":{"gitId":"iantsaii"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":351,"author":{"gitId":"iantsaii"},"content":"* 3a. Failure to update savefile.","lastModifiedDate":"2023-10-02"},{"lineNumber":352,"author":{"gitId":"iantsaii"},"content":"  * 3a1. System indicates failure to update.","lastModifiedDate":"2023-10-02"},{"lineNumber":353,"author":{"gitId":"iantsaii"},"content":"  Use case restarts from step 1.","lastModifiedDate":"2023-10-02"},{"lineNumber":354,"author":{"gitId":"iantsaii"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":355,"author":{"gitId":"iantsaii"},"content":"**Use case: UC3 - View buyers**  ","lastModifiedDate":"2023-10-02"},{"lineNumber":356,"author":{"gitId":"iantsaii"},"content":"System: RTPM   ","lastModifiedDate":"2023-10-02"},{"lineNumber":357,"author":{"gitId":"iantsaii"},"content":"Actor: User  ","lastModifiedDate":"2023-10-02"},{"lineNumber":358,"author":{"gitId":"iantsaii"},"content":"**MSS**","lastModifiedDate":"2023-10-02"},{"lineNumber":359,"author":{"gitId":"iantsaii"},"content":"1. User enters the list-b command.","lastModifiedDate":"2023-10-02"},{"lineNumber":360,"author":{"gitId":"iantsaii"},"content":"2. System displays list of buyers.","lastModifiedDate":"2023-10-02"},{"lineNumber":361,"author":{"gitId":"iantsaii"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":362,"author":{"gitId":"iantsaii"},"content":"Use case ends.","lastModifiedDate":"2023-10-02"},{"lineNumber":363,"author":{"gitId":"iantsaii"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":364,"author":{"gitId":"iantsaii"},"content":"Extensions:","lastModifiedDate":"2023-10-02"},{"lineNumber":365,"author":{"gitId":"iantsaii"},"content":"* 1a. User makes a typo leading to an invalid command.","lastModifiedDate":"2023-10-02"},{"lineNumber":366,"author":{"gitId":"iantsaii"},"content":"  * 1a1. System indicates to user that command is invalid, prompting the user for a new input.","lastModifiedDate":"2023-10-02"},{"lineNumber":367,"author":{"gitId":"iantsaii"},"content":"  Use case restarts from step 1.","lastModifiedDate":"2023-10-02"},{"lineNumber":368,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":369,"author":{"gitId":"J-hta-n"},"content":"**Use case: UC4 - View sellers**","lastModifiedDate":"2023-10-02"},{"lineNumber":370,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":371,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":372,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":373,"author":{"gitId":"J-hta-n"},"content":"1. User enters the list-s command.","lastModifiedDate":"2023-10-02"},{"lineNumber":374,"author":{"gitId":"J-hta-n"},"content":"2. System displays list of sellers. ","lastModifiedDate":"2023-10-02"},{"lineNumber":375,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":376,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":377,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":378,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":379,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":380,"author":{"gitId":"J-hta-n"},"content":"* 1a. User makes a typo leading to an invalid command.","lastModifiedDate":"2023-10-02"},{"lineNumber":381,"author":{"gitId":"J-hta-n"},"content":"  * 1a1. System indicates to user that command is invalid, prompting the user for a new input.\u003cbr\u003e","lastModifiedDate":"2023-10-02"},{"lineNumber":382,"author":{"gitId":"J-hta-n"},"content":"    Use case resumes at step 1.","lastModifiedDate":"2023-10-02"},{"lineNumber":383,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":384,"author":{"gitId":"J-hta-n"},"content":"\u003cbr\u003e","lastModifiedDate":"2023-10-02"},{"lineNumber":385,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":386,"author":{"gitId":"J-hta-n"},"content":"**Use case: UC5 - Delete a buyer/seller**","lastModifiedDate":"2023-10-02"},{"lineNumber":387,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":388,"author":{"gitId":"J-hta-n"},"content":"**MSS**","lastModifiedDate":"2023-10-02"},{"lineNumber":389,"author":{"gitId":"J-hta-n"},"content":"1. User enters command to delete a buyer or a seller.","lastModifiedDate":"2023-10-02"},{"lineNumber":390,"author":{"gitId":"J-hta-n"},"content":"2. System deletes item.","lastModifiedDate":"2023-10-02"},{"lineNumber":391,"author":{"gitId":"J-hta-n"},"content":"3. System updates savefile.","lastModifiedDate":"2023-10-02"},{"lineNumber":392,"author":{"gitId":"J-hta-n"},"content":"4. System returns an indicator of execution success. ","lastModifiedDate":"2023-10-02"},{"lineNumber":393,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":394,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":395,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":396,"author":{"gitId":"J-hta-n"},"content":"**Extensions**","lastModifiedDate":"2023-10-02"},{"lineNumber":397,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":398,"author":{"gitId":"J-hta-n"},"content":"* 3a. Failure to update savefile. ","lastModifiedDate":"2023-10-02"},{"lineNumber":399,"author":{"gitId":"J-hta-n"},"content":"  * 3a1. System indicates failure to update. ","lastModifiedDate":"2023-10-02"},{"lineNumber":400,"author":{"gitId":"J-hta-n"},"content":"  * 3a2. System undoes deletion (to prevent desync of storage and application).\u003cbr\u003e","lastModifiedDate":"2023-10-02"},{"lineNumber":401,"author":{"gitId":"J-hta-n"},"content":"    Use case restarts from step 1.","lastModifiedDate":"2023-10-02"},{"lineNumber":402,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":403,"author":{"gitId":"J-hta-n"},"content":"\u003cbr\u003e","lastModifiedDate":"2023-10-02"},{"lineNumber":404,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":405,"author":{"gitId":"J-hta-n"},"content":"**Use case: UC6 - Enter an invalid command**","lastModifiedDate":"2023-10-02"},{"lineNumber":406,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":407,"author":{"gitId":"J-hta-n"},"content":"**MSS:**","lastModifiedDate":"2023-10-02"},{"lineNumber":408,"author":{"gitId":"J-hta-n"},"content":"1. User enters misspelled command.","lastModifiedDate":"2023-10-02"},{"lineNumber":409,"author":{"gitId":"J-hta-n"},"content":"2. System displays invalid command error and refers user to help page.","lastModifiedDate":"2023-10-02"},{"lineNumber":410,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":411,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":412,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":413,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":414,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":415,"author":{"gitId":"J-hta-n"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":416,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":417,"author":{"gitId":"ruiyangzh"},"content":"*NFRs taken from the given constraints found **[here](https://nus-cs2103-ay2324s1.github.io/website/schedule/week4/project.html)**:*","lastModifiedDate":"2023-09-30"},{"lineNumber":418,"author":{"gitId":"ruiyangzh"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":419,"author":{"gitId":"ruiyangzh"},"content":"1. The product should be optimized for keyboard users who can type fast and prefer typing over other means of input.","lastModifiedDate":"2023-09-30"},{"lineNumber":420,"author":{"gitId":"ruiyangzh"},"content":"2. The data should be stored locally in a human editable text file, instead of in a database.","lastModifiedDate":"2023-09-30"},{"lineNumber":421,"author":{"gitId":"ruiyangzh"},"content":"3. The software should primarily follow OOP.","lastModifiedDate":"2023-09-30"},{"lineNumber":422,"author":{"gitId":"ruiyangzh"},"content":"4. The software should work on the Windows, Linux, and OS-X platforms (hence shouldn’t depend on OS-specific libraries).","lastModifiedDate":"2023-09-30"},{"lineNumber":423,"author":{"gitId":"ruiyangzh"},"content":"5. The software should work on a computer that has version 11 of Java i.e., no other Java version installed.","lastModifiedDate":"2023-09-30"},{"lineNumber":424,"author":{"gitId":"ruiyangzh"},"content":"6. The software should work without requiring an installer.","lastModifiedDate":"2023-09-30"},{"lineNumber":425,"author":{"gitId":"ruiyangzh"},"content":"7. The use of third-party frameworks/libraries/services is allowed but only if they are free, open-source (this doesn\u0027t apply to services), and have permissive license terms.","lastModifiedDate":"2023-09-30"},{"lineNumber":426,"author":{"gitId":"ruiyangzh"},"content":"8. The GUI should work well (i.e., should not cause any resolution-related inconveniences to the user) for ","lastModifiedDate":"2023-09-30"},{"lineNumber":427,"author":{"gitId":"ruiyangzh"},"content":"* standard screen resolutions 1920x1080 and higher, and ","lastModifiedDate":"2023-09-30"},{"lineNumber":428,"author":{"gitId":"ruiyangzh"},"content":"* for screen scales 100% and 125%.","lastModifiedDate":"2023-09-30"},{"lineNumber":429,"author":{"gitId":"ruiyangzh"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":430,"author":{"gitId":"ruiyangzh"},"content":"In addition, the GUI should be usable (i.e., all functions can be used even if the user experience is not optimal) for ","lastModifiedDate":"2023-09-30"},{"lineNumber":431,"author":{"gitId":"ruiyangzh"},"content":"* resolutions 1280x720 and higher, and ","lastModifiedDate":"2023-09-30"},{"lineNumber":432,"author":{"gitId":"ruiyangzh"},"content":"* for screen scales 150%.","lastModifiedDate":"2023-09-30"},{"lineNumber":433,"author":{"gitId":"ruiyangzh"},"content":"9. The software should be able to be packaged into a single JAR file.","lastModifiedDate":"2023-09-30"},{"lineNumber":434,"author":{"gitId":"ruiyangzh"},"content":"10. The DG and UG should be PDF-friendly (Don\u0027t use expandable panels, embedded videos, animated GIFs etc.).","lastModifiedDate":"2023-09-30"},{"lineNumber":435,"author":{"gitId":"ruiyangzh"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":436,"author":{"gitId":"ruiyangzh"},"content":"Additional NFRs","lastModifiedDate":"2023-09-30"},{"lineNumber":437,"author":{"gitId":"ruiyangzh"},"content":"11. The internal implementation should be readable and adhere to the coding quality guidelines found here, for maintainability and for peer evaluation.","lastModifiedDate":"2023-09-30"},{"lineNumber":438,"author":{"gitId":"ruiyangzh"},"content":"12. The deliverable deadlines should be met with a fully functioning product (hence, most important features should be prioritized and tested to eliminate bugs) to allow for usage as promised.","lastModifiedDate":"2023-09-30"},{"lineNumber":439,"author":{"gitId":"ruiyangzh"},"content":"13. The software should be resistant to crashes while running to prevent losing important contact details that realtors need to do business with.","lastModifiedDate":"2023-09-30"},{"lineNumber":440,"author":{"gitId":"ruiyangzh"},"content":"14. The software should work fast even on old / low-end laptop so that realtors on the go with their busy days can use our app quickly and efficiently without getting frustrated with lag.","lastModifiedDate":"2023-09-30"},{"lineNumber":441,"author":{"gitId":"ruiyangzh"},"content":"15. The software should be free and easy to use as an open source product.","lastModifiedDate":"2023-09-30"},{"lineNumber":442,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":443,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":444,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":445,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":446,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, OS-X","lastModifiedDate":"2020-05-23"},{"lineNumber":447,"author":{"gitId":"-"},"content":"* **Private contact detail**: A contact detail that is not meant to be shared with others","lastModifiedDate":"2020-05-23"},{"lineNumber":448,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":449,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":450,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":451,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":452,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":453,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":454,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":455,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":456,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":457,"author":{"gitId":"-"},"content":"**Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2023-09-12"},{"lineNumber":458,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":459,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":460,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":461,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":462,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":463,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":464,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":465,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":466,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":467,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":468,"author":{"gitId":"-"},"content":"   1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2020-05-23"},{"lineNumber":469,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":470,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":471,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":472,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":473,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":474,"author":{"gitId":"-"},"content":"   1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":475,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":476,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":477,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":478,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":479,"author":{"gitId":"-"},"content":"### Deleting a person","lastModifiedDate":"2020-05-23"},{"lineNumber":480,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":481,"author":{"gitId":"-"},"content":"1. Deleting a person while all persons are being shown","lastModifiedDate":"2020-05-23"},{"lineNumber":482,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":483,"author":{"gitId":"-"},"content":"   1. Prerequisites: List all persons using the `list` command. Multiple persons in the list.","lastModifiedDate":"2020-05-23"},{"lineNumber":484,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":485,"author":{"gitId":"-"},"content":"   1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":486,"author":{"gitId":"-"},"content":"      Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2020-05-23"},{"lineNumber":487,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":488,"author":{"gitId":"-"},"content":"   1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":489,"author":{"gitId":"-"},"content":"      Expected: No person is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2020-05-23"},{"lineNumber":490,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":491,"author":{"gitId":"-"},"content":"   1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":492,"author":{"gitId":"-"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":493,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":494,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":495,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":496,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":497,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":498,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":499,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":500,"author":{"gitId":"-"},"content":"   1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23"},{"lineNumber":501,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":502,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"ruiyangzh":25,"andytoh1":6,"peasantbird":20,"iantsaii":53,"-":371,"J-hta-n":27}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  layout: default.md","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  title: \"User Guide\"","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"  pageNav: 3","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"andytoh1"},"content":"# RTPM User Guide","lastModifiedDate":"2023-09-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":9,"author":{"gitId":"andytoh1"},"content":"RealtorTrackerPlusMax (RTPM) is a desktop app for realtors who want to manage contacts, optimized for use via a Line Interface (CLI) while still having the benefits of a Graphical User Interface (GUI). If you can type fast, RTPM can get your contact management tasks done faster than traditional GUI apps.","lastModifiedDate":"2023-09-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c!-- * Table of Contents --\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003cpage-nav-print /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Quick start","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"1. Ensure you have Java `11` or above installed in your Computer.","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"J-hta-n"},"content":"1. Download the latest `rtpm.jar` {not available yet, coming soon}.","lastModifiedDate":"2023-10-04"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"J-hta-n"},"content":"1. Copy the file to the folder you want to use as the _home folder_ for your RTPM.","lastModifiedDate":"2023-10-04"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"J-hta-n"},"content":"1. Open a command terminal, `cd` into the folder you put the jar file in, and use the `java -jar rtpm.jar` command to run the application.\u003cbr\u003e","lastModifiedDate":"2023-10-04"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   A GUI similar to the below should appear in a few seconds. Note how the app contains some sample data.\u003cbr\u003e","lastModifiedDate":"2023-01-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"   ![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"1. Type the command in the command box and press Enter to execute it. e.g. typing **`help`** and pressing Enter will open the help window.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"   Some example commands you can try:","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"J-hta-n"},"content":"    * `buyer n/John Doe p/91234567 e/johndoe@gmail.com ah/1 College Ave East i/Central Area 5 Room Condominium` : Adds a buyer named John Doe to the RTPM. ","lastModifiedDate":"2023-10-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"J-hta-n"},"content":"    * `list-b` : Lists all buyers.","lastModifiedDate":"2023-10-04"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"andytoh1"},"content":"    * `delete-b 2` : Deletes the 2nd buyer shown in the current list.","lastModifiedDate":"2023-09-30"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    * `exit` : Exits the app.","lastModifiedDate":"2023-01-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"1. Refer to the [Features](#features) below for details of each command.","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"**Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* Words in `UPPER_CASE` are the parameters to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"  e.g. in `add n/NAME`, `NAME` is a parameter which can be used as `add n/John Doe`.","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"* Items in square brackets are optional.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"  e.g `n/NAME [t/TAG]` can be used as `n/John Doe t/friend` or as `n/John Doe`.","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"* Items with `…`​ after them can be used multiple times including zero times.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"  e.g. `[t/TAG]…​` can be used as ` ` (i.e. 0 times), `t/friend`, `t/friend t/family` etc.","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"* Parameters can be in any order.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `n/NAME p/PHONE_NUMBER`, `p/PHONE_NUMBER n/NAME` is also acceptable.","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"* Extraneous parameters for commands that do not take in parameters (such as `help`, `list`, `exit` and `clear`) will be ignored.\u003cbr\u003e","lastModifiedDate":"2021-02-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `help 123`, it will be interpreted as `help`.","lastModifiedDate":"2021-02-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"* If you are using a PDF version of this document, be careful when copying and pasting commands that span multiple lines as space characters surrounding line-breaks may be omitted when copied over to the application.","lastModifiedDate":"2023-06-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"peasantbird"},"content":"### Add a seller : `seller`","lastModifiedDate":"2023-10-02"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"peasantbird"},"content":"Adds a seller with their info to the list.","lastModifiedDate":"2023-10-02"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"peasantbird"},"content":"Format: `seller n/NAME p/PHONE_NUMBER e/EMAIL ah/HOME_ADDRESS as/SELLING_ADDRESS i/SELLING_HOUSE_INFO [t/TAG]`","lastModifiedDate":"2023-10-02"},{"lineNumber":71,"author":{"gitId":"peasantbird"},"content":"- `n/NAME`: String ","lastModifiedDate":"2023-10-02"},{"lineNumber":72,"author":{"gitId":"peasantbird"},"content":"- `p/PHONE_NUMBER`: int ","lastModifiedDate":"2023-10-02"},{"lineNumber":73,"author":{"gitId":"peasantbird"},"content":"- `e/EMAIL`: String contains ‘@’ ","lastModifiedDate":"2023-10-02"},{"lineNumber":74,"author":{"gitId":"peasantbird"},"content":"- `ah/HOME_ADDRESS`: String ","lastModifiedDate":"2023-10-02"},{"lineNumber":75,"author":{"gitId":"peasantbird"},"content":"- `as/SELLING_ADDRESS`: String ","lastModifiedDate":"2023-10-02"},{"lineNumber":76,"author":{"gitId":"peasantbird"},"content":"- `i/SELLING_HOUSE_INFO`: String","lastModifiedDate":"2023-10-02"},{"lineNumber":77,"author":{"gitId":"peasantbird"},"content":"- `[t/TAG]`: Alphanumeric String","lastModifiedDate":"2023-10-02"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"peasantbird"},"content":"Example: `seller n/Ryan p/91234567 e/ryan@gmail.com ah/My Secret Home as/47D Lor Sarhad, Singapore 119164 i/4 Room Flat in Sarhad Ville`","lastModifiedDate":"2023-10-02"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"peasantbird"},"content":"Precise outputs when the command succeeds:","lastModifiedDate":"2023-10-02"},{"lineNumber":82,"author":{"gitId":"peasantbird"},"content":"```","lastModifiedDate":"2023-10-02"},{"lineNumber":83,"author":{"gitId":"peasantbird"},"content":"Got it. I\u0027ve added a seller contact:","lastModifiedDate":"2023-10-02"},{"lineNumber":84,"author":{"gitId":"peasantbird"},"content":"Ryan 91234567 ryan@gmail.com My Secret Home 47D Lor Sarhad, Singapore 119164 4 Room Flat in Sarhad Ville","lastModifiedDate":"2023-10-02"},{"lineNumber":85,"author":{"gitId":"peasantbird"},"content":"```","lastModifiedDate":"2023-10-02"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"peasantbird"},"content":"Precise outputs when the command fails:","lastModifiedDate":"2023-10-02"},{"lineNumber":88,"author":{"gitId":"peasantbird"},"content":"```","lastModifiedDate":"2023-10-02"},{"lineNumber":89,"author":{"gitId":"peasantbird"},"content":"Ryan 91234567 ryan@gmail.com My Secret Home 4 Room Flat in Sarhad Ville","lastModifiedDate":"2023-10-02"},{"lineNumber":90,"author":{"gitId":"peasantbird"},"content":"Invalid command format! Missing selling address","lastModifiedDate":"2023-10-02"},{"lineNumber":91,"author":{"gitId":"peasantbird"},"content":"```","lastModifiedDate":"2023-10-02"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"iantsaii"},"content":"### Add a buyer: `buyer`","lastModifiedDate":"2023-10-02"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":99,"author":{"gitId":"iantsaii"},"content":"Adds a buyer with their info to the list.","lastModifiedDate":"2023-10-02"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":101,"author":{"gitId":"iantsaii"},"content":"Format: `buyer n/NAME p/PHONE\\_NUMBER e/EMAIL ah/HOME\\_ADDRESS i/BUY\\_HOUSE\\_INFO \\[t/TAG]`","lastModifiedDate":"2023-10-02"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":103,"author":{"gitId":"iantsaii"},"content":"- `n/NAME`: String","lastModifiedDate":"2023-10-02"},{"lineNumber":104,"author":{"gitId":"iantsaii"},"content":"- `p/PHONE\\_NUMBER`: int","lastModifiedDate":"2023-10-02"},{"lineNumber":105,"author":{"gitId":"iantsaii"},"content":"- `e/EMAIL`: String contains ‘@’","lastModifiedDate":"2023-10-02"},{"lineNumber":106,"author":{"gitId":"iantsaii"},"content":"- `ah/ADDRESS`: String","lastModifiedDate":"2023-10-02"},{"lineNumber":107,"author":{"gitId":"iantsaii"},"content":"- `i/BUY\\_HOUSE\\_INFO`: String","lastModifiedDate":"2023-10-02"},{"lineNumber":108,"author":{"gitId":"iantsaii"},"content":"- `\\[t/TAG]`: Alphanumeric string","lastModifiedDate":"2023-10-02"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":110,"author":{"gitId":"iantsaii"},"content":"Example: ","lastModifiedDate":"2023-10-02"},{"lineNumber":111,"author":{"gitId":"iantsaii"},"content":"`buyer n/Jane Doe p/91234567 e/janedoe@gmail.com ah/1 College Ave East i/Central Area 5 Room Condominium`","lastModifiedDate":"2023-10-19"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":113,"author":{"gitId":"iantsaii"},"content":"Precise outputs when the command succeeds:","lastModifiedDate":"2023-10-02"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":115,"author":{"gitId":"iantsaii"},"content":"```","lastModifiedDate":"2023-10-02"},{"lineNumber":116,"author":{"gitId":"iantsaii"},"content":"Got it. I\u0027ve added a buyer contact:","lastModifiedDate":"2023-10-02"},{"lineNumber":117,"author":{"gitId":"iantsaii"},"content":"Jane Doe 91234567 janedoe@gmail.com 1 College Ave East Central Area 5 Room Condominium","lastModifiedDate":"2023-10-19"},{"lineNumber":118,"author":{"gitId":"iantsaii"},"content":"```","lastModifiedDate":"2023-10-02"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":120,"author":{"gitId":"iantsaii"},"content":"Precise outputs when the command fails:","lastModifiedDate":"2023-10-02"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":122,"author":{"gitId":"iantsaii"},"content":"```","lastModifiedDate":"2023-10-02"},{"lineNumber":123,"author":{"gitId":"iantsaii"},"content":"Jane Doe 91234567 janedoe@gmail.com Central Area 5 Room Condominium","lastModifiedDate":"2023-10-19"},{"lineNumber":124,"author":{"gitId":"iantsaii"},"content":"Invalid command format! Missing buyer address","lastModifiedDate":"2023-10-02"},{"lineNumber":125,"author":{"gitId":"iantsaii"},"content":"```","lastModifiedDate":"2023-10-02"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":128,"author":{"gitId":"iantsaii"},"content":"### Listing all buyers: `list-b`","lastModifiedDate":"2023-10-02"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":130,"author":{"gitId":"iantsaii"},"content":"Lists only all buyers that the user has added. Buyers and sellers are stored in separate lists for easier differentiation and handling of contacts.","lastModifiedDate":"2023-10-02"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":132,"author":{"gitId":"iantsaii"},"content":"Format: `list-b`","lastModifiedDate":"2023-10-02"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":134,"author":{"gitId":"iantsaii"},"content":"Precise outputs when the command succeeds:","lastModifiedDate":"2023-10-02"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":136,"author":{"gitId":"iantsaii"},"content":"```Here are all your buyers:","lastModifiedDate":"2023-10-02"},{"lineNumber":137,"author":{"gitId":"iantsaii"},"content":"1. Ryan 91234567 \u003cryan@gmail.com\u003e 47D Lor Sarhad, Singapore 119164 4 Room Flat in Sarhad Ville","lastModifiedDate":"2023-10-02"},{"lineNumber":138,"author":{"gitId":"iantsaii"},"content":"2. Ian Tsai 91234567 \u003ciantsai@gmail.com\u003e 1 College Ave East Central Area 5 Room Condominium","lastModifiedDate":"2023-10-02"},{"lineNumber":139,"author":{"gitId":"iantsaii"},"content":"```","lastModifiedDate":"2023-10-02"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":142,"author":{"gitId":"iantsaii"},"content":"### Listing all sellers: `list-s`","lastModifiedDate":"2023-10-02"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":144,"author":{"gitId":"iantsaii"},"content":"Lists only all sellers that the user has added.","lastModifiedDate":"2023-10-02"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":146,"author":{"gitId":"iantsaii"},"content":"Format: `list-s`","lastModifiedDate":"2023-10-02"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":148,"author":{"gitId":"iantsaii"},"content":"Precise outputs when the command succeeds:","lastModifiedDate":"2023-10-02"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":150,"author":{"gitId":"iantsaii"},"content":"```","lastModifiedDate":"2023-10-02"},{"lineNumber":151,"author":{"gitId":"iantsaii"},"content":"Here are all your sellers:","lastModifiedDate":"2023-10-02"},{"lineNumber":152,"author":{"gitId":"iantsaii"},"content":"1. Albert 91234567 albert[@gmail.com](mailto:ryan@gmail.com) My Secret Home 47D Lor Sarhad, Singapore 119164 4 Room Flat in Sarhad Ville","lastModifiedDate":"2023-10-02"},{"lineNumber":153,"author":{"gitId":"iantsaii"},"content":"2. Bob 91234567 bob[@gmail.com](mailto:iantsai@gmail.com) Secret Home 2 1 College Ave East Central Area 5 Room Condominium","lastModifiedDate":"2023-10-02"},{"lineNumber":154,"author":{"gitId":"iantsaii"},"content":"```","lastModifiedDate":"2023-10-02"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"J-hta-n"},"content":"### Deleting a buyer: `delete-b`","lastModifiedDate":"2023-10-02"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"J-hta-n"},"content":"Deletes a buyer based on their index number in the buyers’ list.","lastModifiedDate":"2023-10-02"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"J-hta-n"},"content":"Format: `delete-b INDEX`","lastModifiedDate":"2023-10-02"},{"lineNumber":161,"author":{"gitId":"J-hta-n"},"content":"* `INDEX`: A positive integer (1,2,3 …) which must not exceed the last index in the buyers\u0027 list","lastModifiedDate":"2023-10-02"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"J-hta-n"},"content":"Example:","lastModifiedDate":"2023-10-02"},{"lineNumber":164,"author":{"gitId":"J-hta-n"},"content":"* `delete-b 3`","lastModifiedDate":"2023-10-02"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"J-hta-n"},"content":"Precise outputs when the command succeeds:","lastModifiedDate":"2023-10-02"},{"lineNumber":167,"author":{"gitId":"J-hta-n"},"content":"* `Got it. I’ve deleted a buyer contact:`\u003cbr\u003e","lastModifiedDate":"2023-10-02"},{"lineNumber":168,"author":{"gitId":"J-hta-n"},"content":"`Ian Tsai 91234567 iantsai@gmail.com 1 College Ave East Central Area 5 Room Condominium`","lastModifiedDate":"2023-10-02"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"J-hta-n"},"content":"Precise outputs when the command fails:","lastModifiedDate":"2023-10-02"},{"lineNumber":171,"author":{"gitId":"J-hta-n"},"content":"* `Invalid command format! INDEX is not greater than 0`, OR","lastModifiedDate":"2023-10-02"},{"lineNumber":172,"author":{"gitId":"J-hta-n"},"content":"* `Invalid command format! INDEX is higher than the last number in the list`","lastModifiedDate":"2023-10-02"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"J-hta-n"},"content":"\u003cbr\u003e","lastModifiedDate":"2023-10-02"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"J-hta-n"},"content":"### Deleting a buyer: `delete-s`","lastModifiedDate":"2023-10-02"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"J-hta-n"},"content":"Deletes a seller based on their index number in the sellers’ list.","lastModifiedDate":"2023-10-02"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"J-hta-n"},"content":"Format: `delete-s INDEX`","lastModifiedDate":"2023-10-02"},{"lineNumber":181,"author":{"gitId":"J-hta-n"},"content":"* `INDEX`: A positive integer (1,2,3 …), which must not exceed last index in the sellers’ list","lastModifiedDate":"2023-10-02"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"J-hta-n"},"content":"Example:","lastModifiedDate":"2023-10-02"},{"lineNumber":184,"author":{"gitId":"J-hta-n"},"content":"* `delete-s 3`","lastModifiedDate":"2023-10-02"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"J-hta-n"},"content":"Precise outputs when the command succeeds:","lastModifiedDate":"2023-10-02"},{"lineNumber":187,"author":{"gitId":"J-hta-n"},"content":"* `Got it. I’ve deleted a seller contact:`\u003cbr\u003e","lastModifiedDate":"2023-10-02"},{"lineNumber":188,"author":{"gitId":"J-hta-n"},"content":"`Ian Tsai 91234567 iantsai@gmail.com 1 College Ave East Central Area 5 Room Condominium`","lastModifiedDate":"2023-10-02"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"J-hta-n"},"content":"Precise outputs when the command fails:","lastModifiedDate":"2023-10-02"},{"lineNumber":191,"author":{"gitId":"J-hta-n"},"content":"* `Invalid command format! INDEX is not greater than 0`, OR","lastModifiedDate":"2023-10-02"},{"lineNumber":192,"author":{"gitId":"J-hta-n"},"content":"* `Invalid command format! INDEX is higher than the last number in the list`","lastModifiedDate":"2023-10-02"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"J-hta-n"},"content":"\u003cbr\u003e","lastModifiedDate":"2023-10-02"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"J-hta-n"},"content":"### Exiting the program: `exit`","lastModifiedDate":"2023-10-02"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"Exits the program.","lastModifiedDate":"2023-10-02"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"Format: `exit`","lastModifiedDate":"2023-10-02"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"### Clearing all entries : `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"Clears all entries from the address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"Format: `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"### Saving the data","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"J-hta-n"},"content":"RTPM data is saved in the hard disk automatically after any command that changes the data. There is no need to save manually.","lastModifiedDate":"2023-10-04"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"### Editing the data file","lastModifiedDate":"2021-02-04"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":217,"author":{"gitId":"J-hta-n"},"content":"RTPM data are saved automatically as a JSON file `[JAR file location]/data/rtpm.json`. Advanced users are welcome to update data directly by editing that data file.","lastModifiedDate":"2023-10-04"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":219,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"warning\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":221,"author":{"gitId":"-"},"content":"**Caution:**","lastModifiedDate":"2023-09-12"},{"lineNumber":222,"author":{"gitId":"J-hta-n"},"content":"If your changes to the data file are in an invalid format, RTPM will discard all data and start with an empty data file at the next run.","lastModifiedDate":"2023-10-04"},{"lineNumber":223,"author":{"gitId":"ruiyangzh"},"content":"Hence, it is recommended to take a backup of the file before editing it.","lastModifiedDate":"2023-09-30"},{"lineNumber":224,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":226,"author":{"gitId":"-"},"content":"### Archiving data files `[coming in v2.0]`","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"J-hta-n"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":229,"author":{"gitId":"J-hta-n"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":230,"author":{"gitId":"-"},"content":"_Details coming soon ..._","lastModifiedDate":"2021-02-04"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another Computer?\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"J-hta-n"},"content":"**A**: Install the app in the other computer and overwrite the empty data file it creates with the file that contains the data of your previous RTPM home folder.","lastModifiedDate":"2023-10-04"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"## Known issues","lastModifiedDate":"2023-09-08"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":243,"author":{"gitId":"-"},"content":"1. **When using multiple screens**, if you move the application to a secondary screen, and later switch to using only the primary screen, the GUI will open off-screen. The remedy is to delete the `preferences.json` file created by the application before running the application again.","lastModifiedDate":"2023-09-08"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":245,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-09-08"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":247,"author":{"gitId":"-"},"content":"## Command summary","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"Action     | Format, Examples","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"-----------|----------------------------------------------------------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-09-12"},{"lineNumber":251,"author":{"gitId":"ruiyangzh"},"content":"**Add Seller**    | `seller n/NAME p/PHONE_NUMBER e/EMAIL ah/HOME_ADDRESS as/SELLING_ADDRESS i/SELLING_HOUSE_INFO [t/TAG]​` \u003cbr\u003e e.g., `seller n/Ryan p/91234567 e/ryan@gmail.com ah/My Secret Home as/47D Lor Sarhad, Singapore 119164 i/4 Room Flat in Sarhad Ville`","lastModifiedDate":"2023-09-30"},{"lineNumber":252,"author":{"gitId":"ruiyangzh"},"content":"**Add Buyer**    | `sbuyer n/NAME p/PHONE_NUMBER e/EMAIL ah/HOME_ADDRESS i/BUY_HOUSE_INFO [t/TAG]` \u003cbr\u003e e.g., `buyer n/Jane Doe p/91234567 e/janedoe@gmail.com ah/1 College Ave East i/Central Area 5 Room Condominium`","lastModifiedDate":"2023-09-30"},{"lineNumber":253,"author":{"gitId":"-"},"content":"**Clear**  | `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"ruiyangzh"},"content":"**Delete Buyer** | `delete-b INDEX`\u003cbr\u003e e.g., `delete-b 3`","lastModifiedDate":"2023-09-30"},{"lineNumber":255,"author":{"gitId":"ruiyangzh"},"content":"**Delete Seller** | `delete-s INDEX`\u003cbr\u003e e.g., `delete-s 3`","lastModifiedDate":"2023-09-30"},{"lineNumber":256,"author":{"gitId":"-"},"content":"**Find**   | `find KEYWORD [MORE_KEYWORDS]`\u003cbr\u003e e.g., `find James Jake`","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"ruiyangzh"},"content":"**List Sellers**   | `list-s`","lastModifiedDate":"2023-10-02"},{"lineNumber":258,"author":{"gitId":"ruiyangzh"},"content":"**List Buyers**   | `list-b`","lastModifiedDate":"2023-10-02"},{"lineNumber":259,"author":{"gitId":"ruiyangzh"},"content":"**Exit**   | `exit`","lastModifiedDate":"2023-10-02"},{"lineNumber":260,"author":{"gitId":"-"},"content":"**Help**   | `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"ruiyangzh"},"content":"","lastModifiedDate":"2023-09-30"}],"authorContributionMap":{"ruiyangzh":9,"andytoh1":3,"peasantbird":21,"iantsaii":38,"-":152,"J-hta-n":38}},{"path":"docs/_markbind/layouts/default.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003chead-bottom\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \u003clink rel\u003d\"stylesheet\" href\u003d\"{{baseUrl}}/stylesheets/main.css\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c/head-bottom\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003cheader sticky\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"  \u003cnavbar type\u003d\"dark\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":7,"author":{"gitId":"J-hta-n"},"content":"    \u003ca slot\u003d\"brand\" href\u003d\"{{baseUrl}}/index.html\" title\u003d\"Home\" class\u003d\"navbar-brand\"\u003eRealtorTrackerPlusMax\u003c/a\u003e","lastModifiedDate":"2023-09-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    \u003cli\u003e\u003ca href\u003d\"{{baseUrl}}/UserGuide.html\" class\u003d\"nav-link\"\u003eUser Guide\u003c/a\u003e\u003c/li\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    \u003cli\u003e\u003ca href\u003d\"{{baseUrl}}/DeveloperGuide.html\" class\u003d\"nav-link\"\u003eDeveloper Guide\u003c/a\u003e\u003c/li\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    \u003cli\u003e\u003ca href\u003d\"{{baseUrl}}/AboutUs.html\" class\u003d\"nav-link\"\u003eAbout Us\u003c/a\u003e\u003c/li\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":11,"author":{"gitId":"J-hta-n"},"content":"    \u003cli\u003e\u003ca href\u003d\"https://github.com/AY2324S1-CS2103T-F11-3/tp\" target\u003d\"_blank\" class\u003d\"nav-link\"\u003e\u003cmd\u003e:fab-github:\u003c/md\u003e\u003c/a\u003e","lastModifiedDate":"2023-10-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    \u003c/li\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    \u003cli slot\u003d\"right\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"      \u003cform class\u003d\"navbar-form\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        \u003csearchbar :data\u003d\"searchData\" placeholder\u003d\"Search\" :on-hit\u003d\"searchCallback\" menu-align-right\u003e\u003c/searchbar\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"      \u003c/form\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003c/li\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  \u003c/navbar\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"\u003c/header\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"\u003cdiv id\u003d\"flex-body\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  \u003cnav id\u003d\"site-nav\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    \u003cdiv class\u003d\"site-nav-top\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"      \u003cdiv class\u003d\"fw-bold mb-2\" style\u003d\"font-size: 1.25rem;\"\u003eSite Map\u003c/div\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    \u003c/div\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    \u003cdiv class\u003d\"nav-component slim-scroll\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"      \u003csite-nav\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"* [Home]({{ baseUrl }}/index.html)","lastModifiedDate":"2023-09-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"* [User Guide]({{ baseUrl }}/UserGuide.html) :expanded:","lastModifiedDate":"2023-09-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  * [Quick Start]({{ baseUrl }}/UserGuide.html#quick-start)","lastModifiedDate":"2023-09-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  * [Features]({{ baseUrl }}/UserGuide.html#features)","lastModifiedDate":"2023-09-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  * [FAQ]({{ baseUrl }}/UserGuide.html#faq)","lastModifiedDate":"2023-09-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  * [Command Summary]({{ baseUrl }}/UserGuide.html#faq)","lastModifiedDate":"2023-09-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"* [Developer Guide]({{ baseUrl }}/DeveloperGuide.html) :expanded:","lastModifiedDate":"2023-09-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"  * [Acknowledgements]({{ baseUrl }}/DeveloperGuide.html#acknowledgements)","lastModifiedDate":"2023-09-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"  * [Setting Up]({{ baseUrl }}/DeveloperGuide.html#setting-up-getting-started)","lastModifiedDate":"2023-09-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"  * [Design]({{ baseUrl }}/DeveloperGuide.html#design)","lastModifiedDate":"2023-09-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"  * [Implementation]({{ baseUrl }}/DeveloperGuide.html#implementation)","lastModifiedDate":"2023-09-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"  * [Documentation, logging, testing, configuration, dev-ops]({{ baseUrl }}/DeveloperGuide.html#documentation-logging-testing-configuration-dev-ops)","lastModifiedDate":"2023-09-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"  * [Appendix: Requirements]({{ baseUrl }}/DeveloperGuide.html#appendix-requirements)","lastModifiedDate":"2023-09-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"  * [Appendix: Instructions for manual testing]({{ baseUrl }}/DeveloperGuide.html#appendix-instructions-for-manual-testing)","lastModifiedDate":"2023-09-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"* Tutorials","lastModifiedDate":"2023-09-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"  * [Tracing code]({{ baseUrl }}/tutorials/TracingCode.html)","lastModifiedDate":"2023-09-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"  * [Adding a command]({{ baseUrl }}/tutorials/AddRemark.html)","lastModifiedDate":"2023-09-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"  * [Removing Fields]({{ baseUrl }}/tutorials/RemovingFields.html)","lastModifiedDate":"2023-09-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"* [About Us]({{ baseUrl }}/AboutUs.html)","lastModifiedDate":"2023-09-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"      \u003c/site-nav\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    \u003c/div\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"  \u003c/nav\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  \u003cdiv id\u003d\"content-wrapper\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    {{ content }}","lastModifiedDate":"2023-09-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"  \u003c/div\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"  \u003cnav id\u003d\"page-nav\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    \u003cdiv class\u003d\"nav-component slim-scroll\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"      \u003cpage-nav /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    \u003c/div\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"  \u003c/nav\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  \u003cscroll-top-button\u003e\u003c/scroll-top-button\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"\u003cfooter\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"  \u003c!-- Support MarkBind by including a link to us on your landing page! --\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":63,"author":{"gitId":"-"},"content":"  \u003cdiv class\u003d\"text-center\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    \u003csmall\u003e[\u003cmd\u003e**Powered by**\u003c/md\u003e \u003cimg src\u003d\"https://markbind.org/favicon.ico\" width\u003d\"30\"\u003e {{MarkBind}}, generated on {{timestamp}}]\u003c/small\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"  \u003c/div\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"\u003c/footer\u003e","lastModifiedDate":"2023-09-12"}],"authorContributionMap":{"-":64,"J-hta-n":2}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  layout: default.md","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  title: \"\"","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"J-hta-n"},"content":"# RealtorTrackerPlusMax","lastModifiedDate":"2023-10-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":8,"author":{"gitId":"J-hta-n"},"content":"[![CI Status](https://github.com/se-edu/addressbook-level3/workflows/Java%20CI/badge.svg)](https://github.com/AY2324S1-CS2103T-F11-3/tp/actions)","lastModifiedDate":"2023-10-19"},{"lineNumber":9,"author":{"gitId":"J-hta-n"},"content":"[![codecov](https://codecov.io/gh/se-edu/addressbook-level3/branch/master/graph/badge.svg)](https://app.codecov.io/gh/AY2324S1-CS2103T-F11-3/tp)","lastModifiedDate":"2023-10-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":13,"author":{"gitId":"J-hta-n"},"content":"**The RealtorTrackerPlusMax (RTPM) allows tech-savvy realtors in their 20s to keep track of their many clients and houses ","lastModifiedDate":"2023-10-03"},{"lineNumber":14,"author":{"gitId":"J-hta-n"},"content":"all in one place. This product has an edge over conventional tracking methods like Google Sheets as it provides a ","lastModifiedDate":"2023-10-03"},{"lineNumber":15,"author":{"gitId":"J-hta-n"},"content":"cleaner UI, is easier and quicker to organise via keyboard-typed commands, and has proposed features such as ","lastModifiedDate":"2023-10-03"},{"lineNumber":16,"author":{"gitId":"J-hta-n"},"content":"auto-matching of clients and houses.**","lastModifiedDate":"2023-10-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"J-hta-n"},"content":"* If you are interested in using RTPM, head over to the [_Quick Start_ section of the **User Guide**](UserGuide.html#quick-start).","lastModifiedDate":"2023-10-03"},{"lineNumber":19,"author":{"gitId":"J-hta-n"},"content":"* If you are interested about developing RTPM, the [**Developer Guide**](DeveloperGuide.html) is a good place to start.","lastModifiedDate":"2023-10-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"**Acknowledgements**","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"J-hta-n"},"content":"* Formatting: [CS2103T AB-3 website](https://se-education.org/addressbook-level3/)","lastModifiedDate":"2023-10-03"}],"authorContributionMap":{"-":15,"J-hta-n":10}},{"path":"docs/team/andytoh1.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"andytoh1"},"content":"---","lastModifiedDate":"2023-09-30"},{"lineNumber":2,"author":{"gitId":"andytoh1"},"content":"layout: page","lastModifiedDate":"2023-09-30"},{"lineNumber":3,"author":{"gitId":"andytoh1"},"content":"title: Andy Toh\u0027s Project Portfolio Page","lastModifiedDate":"2023-09-30"},{"lineNumber":4,"author":{"gitId":"andytoh1"},"content":"---","lastModifiedDate":"2023-09-30"},{"lineNumber":5,"author":{"gitId":"andytoh1"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":6,"author":{"gitId":"andytoh1"},"content":"### Project: RealtorTrackerPlusMax","lastModifiedDate":"2023-09-30"},{"lineNumber":7,"author":{"gitId":"andytoh1"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":8,"author":{"gitId":"andytoh1"},"content":"`to be added soon`","lastModifiedDate":"2023-09-30"},{"lineNumber":9,"author":{"gitId":"andytoh1"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":10,"author":{"gitId":"andytoh1"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-09-30"},{"lineNumber":11,"author":{"gitId":"andytoh1"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":12,"author":{"gitId":"andytoh1"},"content":"* **New Feature**: `to be added soon`","lastModifiedDate":"2023-09-30"},{"lineNumber":13,"author":{"gitId":"andytoh1"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":14,"author":{"gitId":"andytoh1"},"content":"* **New Feature**: `to be added soon`","lastModifiedDate":"2023-09-30"},{"lineNumber":15,"author":{"gitId":"andytoh1"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":16,"author":{"gitId":"andytoh1"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2023-09-30"},{"lineNumber":17,"author":{"gitId":"andytoh1"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":18,"author":{"gitId":"andytoh1"},"content":"* **Project management**:","lastModifiedDate":"2023-09-30"},{"lineNumber":19,"author":{"gitId":"andytoh1"},"content":"  * `to be added soon`","lastModifiedDate":"2023-09-30"},{"lineNumber":20,"author":{"gitId":"andytoh1"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":21,"author":{"gitId":"andytoh1"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2023-09-30"},{"lineNumber":22,"author":{"gitId":"andytoh1"},"content":"  * `to be added soon`","lastModifiedDate":"2023-09-30"},{"lineNumber":23,"author":{"gitId":"andytoh1"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":24,"author":{"gitId":"andytoh1"},"content":"* **Documentation**:","lastModifiedDate":"2023-09-30"},{"lineNumber":25,"author":{"gitId":"andytoh1"},"content":"  * User Guide:","lastModifiedDate":"2023-09-30"},{"lineNumber":26,"author":{"gitId":"andytoh1"},"content":"    * `to be added soon`","lastModifiedDate":"2023-09-30"},{"lineNumber":27,"author":{"gitId":"andytoh1"},"content":"  * Developer Guide:","lastModifiedDate":"2023-09-30"},{"lineNumber":28,"author":{"gitId":"andytoh1"},"content":"    * `to be added soon`","lastModifiedDate":"2023-09-30"},{"lineNumber":29,"author":{"gitId":"andytoh1"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":30,"author":{"gitId":"andytoh1"},"content":"* **Community**:","lastModifiedDate":"2023-09-30"},{"lineNumber":31,"author":{"gitId":"andytoh1"},"content":"  * `to be added soon`","lastModifiedDate":"2023-09-30"},{"lineNumber":32,"author":{"gitId":"andytoh1"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":33,"author":{"gitId":"andytoh1"},"content":"* **Tools**:","lastModifiedDate":"2023-09-30"},{"lineNumber":34,"author":{"gitId":"andytoh1"},"content":"  * `to be added soon`","lastModifiedDate":"2023-09-30"},{"lineNumber":35,"author":{"gitId":"andytoh1"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":36,"author":{"gitId":"andytoh1"},"content":"","lastModifiedDate":"2023-09-30"}],"authorContributionMap":{"andytoh1":36}},{"path":"docs/team/iantsaii.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"iantsaii"},"content":"---","lastModifiedDate":"2023-10-02"},{"lineNumber":2,"author":{"gitId":"iantsaii"},"content":"  layout: default.md","lastModifiedDate":"2023-10-02"},{"lineNumber":3,"author":{"gitId":"iantsaii"},"content":"  title: \"Ian Tsai\u0027s Project Portfolio Page\"","lastModifiedDate":"2023-10-02"},{"lineNumber":4,"author":{"gitId":"iantsaii"},"content":"---","lastModifiedDate":"2023-10-02"},{"lineNumber":5,"author":{"gitId":"iantsaii"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":6,"author":{"gitId":"iantsaii"},"content":"### Project: RealtorTrackerPlusMax","lastModifiedDate":"2023-10-02"},{"lineNumber":7,"author":{"gitId":"iantsaii"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":8,"author":{"gitId":"iantsaii"},"content":"RealtorTrackerPlusMax is a desktop application made for usage by real estate agents to keep track of their","lastModifiedDate":"2023-10-02"},{"lineNumber":9,"author":{"gitId":"iantsaii"},"content":"contacts, such as buyers and sellers.","lastModifiedDate":"2023-10-02"},{"lineNumber":10,"author":{"gitId":"iantsaii"},"content":"The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java,","lastModifiedDate":"2023-10-02"},{"lineNumber":11,"author":{"gitId":"iantsaii"},"content":"and has about 10 kLoC.","lastModifiedDate":"2023-10-02"},{"lineNumber":12,"author":{"gitId":"iantsaii"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":13,"author":{"gitId":"iantsaii"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-10-02"},{"lineNumber":14,"author":{"gitId":"iantsaii"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":15,"author":{"gitId":"iantsaii"},"content":"* **New Feature**: Placeholder (not done yet!)","lastModifiedDate":"2023-10-02"},{"lineNumber":16,"author":{"gitId":"iantsaii"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2023-10-02"},{"lineNumber":17,"author":{"gitId":"iantsaii"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":18,"author":{"gitId":"iantsaii"},"content":"* **Project management**:","lastModifiedDate":"2023-10-02"},{"lineNumber":19,"author":{"gitId":"iantsaii"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2023-10-02"},{"lineNumber":20,"author":{"gitId":"iantsaii"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":21,"author":{"gitId":"iantsaii"},"content":"* **Documentation**:","lastModifiedDate":"2023-10-02"},{"lineNumber":22,"author":{"gitId":"iantsaii"},"content":"    * User Guide:","lastModifiedDate":"2023-10-02"},{"lineNumber":23,"author":{"gitId":"iantsaii"},"content":"    * Developer Guide:","lastModifiedDate":"2023-10-02"},{"lineNumber":24,"author":{"gitId":"iantsaii"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":25,"author":{"gitId":"iantsaii"},"content":"* **Contributions to team-based tasks**:","lastModifiedDate":"2023-10-02"},{"lineNumber":26,"author":{"gitId":"iantsaii"},"content":"* **Review/mentoring contributions**:","lastModifiedDate":"2023-10-02"},{"lineNumber":27,"author":{"gitId":"iantsaii"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":28,"author":{"gitId":"iantsaii"},"content":"* **Community**:","lastModifiedDate":"2023-10-02"},{"lineNumber":29,"author":{"gitId":"iantsaii"},"content":"* **Tools**:","lastModifiedDate":"2023-10-02"},{"lineNumber":30,"author":{"gitId":"iantsaii"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":31,"author":{"gitId":"iantsaii"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2023-10-02"}],"authorContributionMap":{"iantsaii":31}},{"path":"docs/team/j-hta-n.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"J-hta-n"},"content":"---","lastModifiedDate":"2023-10-02"},{"lineNumber":2,"author":{"gitId":"J-hta-n"},"content":"layout: default.md","lastModifiedDate":"2023-10-02"},{"lineNumber":3,"author":{"gitId":"J-hta-n"},"content":"title: \"Jia Hao\u0027s Project Portfolio Page\"","lastModifiedDate":"2023-10-02"},{"lineNumber":4,"author":{"gitId":"J-hta-n"},"content":"---","lastModifiedDate":"2023-10-02"},{"lineNumber":5,"author":{"gitId":"J-hta-n"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":6,"author":{"gitId":"J-hta-n"},"content":"### Project: RealtorTrackerPlusMax","lastModifiedDate":"2023-10-02"},{"lineNumber":7,"author":{"gitId":"J-hta-n"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":8,"author":{"gitId":"J-hta-n"},"content":"{work in progress, to be added}","lastModifiedDate":"2023-10-03"},{"lineNumber":9,"author":{"gitId":"J-hta-n"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":10,"author":{"gitId":"J-hta-n"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-10-02"},{"lineNumber":11,"author":{"gitId":"J-hta-n"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":12,"author":{"gitId":"J-hta-n"},"content":"* **New Feature**:","lastModifiedDate":"2023-10-02"},{"lineNumber":13,"author":{"gitId":"J-hta-n"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":14,"author":{"gitId":"J-hta-n"},"content":"* **Code contributed**:","lastModifiedDate":"2023-10-02"},{"lineNumber":15,"author":{"gitId":"J-hta-n"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":16,"author":{"gitId":"J-hta-n"},"content":"* **Project management**:","lastModifiedDate":"2023-10-02"},{"lineNumber":17,"author":{"gitId":"J-hta-n"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":18,"author":{"gitId":"J-hta-n"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2023-10-02"},{"lineNumber":19,"author":{"gitId":"J-hta-n"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":20,"author":{"gitId":"J-hta-n"},"content":"* **Documentation**:","lastModifiedDate":"2023-10-02"},{"lineNumber":21,"author":{"gitId":"J-hta-n"},"content":"    * User Guide:","lastModifiedDate":"2023-10-02"},{"lineNumber":22,"author":{"gitId":"J-hta-n"},"content":"    * Developer Guide:","lastModifiedDate":"2023-10-02"},{"lineNumber":23,"author":{"gitId":"J-hta-n"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":24,"author":{"gitId":"J-hta-n"},"content":"* **Community**:","lastModifiedDate":"2023-10-02"},{"lineNumber":25,"author":{"gitId":"J-hta-n"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":26,"author":{"gitId":"J-hta-n"},"content":"* **Tools**:","lastModifiedDate":"2023-10-02"},{"lineNumber":27,"author":{"gitId":"J-hta-n"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":28,"author":{"gitId":"J-hta-n"},"content":"{you can add/remove categories in the list above}","lastModifiedDate":"2023-10-02"}],"authorContributionMap":{"J-hta-n":28}},{"path":"docs/team/ruiyangzh.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"ruiyangzh"},"content":"---","lastModifiedDate":"2023-09-27"},{"lineNumber":2,"author":{"gitId":"ruiyangzh"},"content":"  layout: default.md","lastModifiedDate":"2023-09-27"},{"lineNumber":3,"author":{"gitId":"ruiyangzh"},"content":"  title: \"Zhao Ruiyang\u0027s Project Portfolio Page\"","lastModifiedDate":"2023-09-27"},{"lineNumber":4,"author":{"gitId":"ruiyangzh"},"content":"---","lastModifiedDate":"2023-09-27"},{"lineNumber":5,"author":{"gitId":"ruiyangzh"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":6,"author":{"gitId":"ruiyangzh"},"content":"### Project: RealtorTrackerPlusMax","lastModifiedDate":"2023-09-27"},{"lineNumber":7,"author":{"gitId":"ruiyangzh"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":8,"author":{"gitId":"ruiyangzh"},"content":"RealtorTrackerPlusMax is a desktop application made for usage by real estate agents to keep track of their","lastModifiedDate":"2023-09-27"},{"lineNumber":9,"author":{"gitId":"ruiyangzh"},"content":"contacts, such as buyers and sellers.","lastModifiedDate":"2023-09-27"},{"lineNumber":10,"author":{"gitId":"ruiyangzh"},"content":"The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java,","lastModifiedDate":"2023-09-27"},{"lineNumber":11,"author":{"gitId":"ruiyangzh"},"content":"and has about 10 kLoC.","lastModifiedDate":"2023-09-27"},{"lineNumber":12,"author":{"gitId":"ruiyangzh"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":13,"author":{"gitId":"ruiyangzh"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-09-27"},{"lineNumber":14,"author":{"gitId":"ruiyangzh"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":15,"author":{"gitId":"ruiyangzh"},"content":"* **New Feature**: Placeholder (not done yet!)","lastModifiedDate":"2023-09-27"},{"lineNumber":16,"author":{"gitId":"ruiyangzh"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2023-09-27"},{"lineNumber":17,"author":{"gitId":"ruiyangzh"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":18,"author":{"gitId":"ruiyangzh"},"content":"* **Project management**:","lastModifiedDate":"2023-09-27"},{"lineNumber":19,"author":{"gitId":"ruiyangzh"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2023-09-27"},{"lineNumber":20,"author":{"gitId":"ruiyangzh"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":21,"author":{"gitId":"ruiyangzh"},"content":"* **Documentation**:","lastModifiedDate":"2023-09-27"},{"lineNumber":22,"author":{"gitId":"ruiyangzh"},"content":"    * User Guide:","lastModifiedDate":"2023-09-27"},{"lineNumber":23,"author":{"gitId":"ruiyangzh"},"content":"    * Developer Guide:","lastModifiedDate":"2023-09-27"},{"lineNumber":24,"author":{"gitId":"ruiyangzh"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":25,"author":{"gitId":"ruiyangzh"},"content":"* **Community**:","lastModifiedDate":"2023-09-27"},{"lineNumber":26,"author":{"gitId":"ruiyangzh"},"content":"* **Tools**:","lastModifiedDate":"2023-09-27"},{"lineNumber":27,"author":{"gitId":"ruiyangzh"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":28,"author":{"gitId":"ruiyangzh"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2023-09-27"}],"authorContributionMap":{"ruiyangzh":28}},{"path":"src/main/java/seedu/address/MainApp.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Config;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Version;","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-06-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ConfigUtil;","lastModifiedDate":"2016-10-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.LogicManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-01-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-01-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-01-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-01-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-01-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2016-12-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.storage.AddressBookStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.storage.UserPrefsStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.ui.Ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.ui.UiManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":" * Runs the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"public class MainApp extends Application {","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final Version VERSION \u003d new Version(0, 2, 2, true);","lastModifiedDate":"2023-08-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(MainApp.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    protected Ui ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    protected Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    protected Storage storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    protected Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    protected Config config;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void init() throws Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d[ Initializing AddressBook ]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2016-09-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        super.init();","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d AppParameters.parse(getParameters());","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        config \u003d initConfig(appParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        initLogging(config);","lastModifiedDate":"2023-07-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        UserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(config.getUserPrefsFilePath());","lastModifiedDate":"2017-02-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d initPrefs(userPrefsStorage);","lastModifiedDate":"2018-12-06"},{"lineNumber":60,"author":{"gitId":"peasantbird"},"content":"        AddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2023-10-19"},{"lineNumber":61,"author":{"gitId":"ruiyangzh"},"content":"                new JsonAddressBookStorage(userPrefs.getFilePath());","lastModifiedDate":"2023-10-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2017-02-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        model \u003d initModelManager(storage, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        ui \u003d new UiManager(logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Returns a {@code ModelManager} with the data from {@code storage}\u0027s address book and {@code userPrefs}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * The data from the sample address book will be used instead if {@code storage}\u0027s address book is not found,","lastModifiedDate":"2017-08-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * or an empty address book will be used instead if errors occur when reading {@code storage}\u0027s address book.","lastModifiedDate":"2017-08-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    private Model initModelManager(Storage storage, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":77,"author":{"gitId":"ruiyangzh"},"content":"        logger.info(\"Using data file : \" + storage.getFilePath());","lastModifiedDate":"2023-10-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        Optional\u003cReadOnlyAddressBook\u003e addressBookOptional;","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook initialData;","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            addressBookOptional \u003d storage.readAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":83,"author":{"gitId":"ruiyangzh"},"content":"            if (addressBookOptional.isEmpty()) {","lastModifiedDate":"2023-10-19"},{"lineNumber":84,"author":{"gitId":"ruiyangzh"},"content":"                logger.info(\"Creating new data file \" + storage.getFilePath() +","lastModifiedDate":"2023-10-19"},{"lineNumber":85,"author":{"gitId":"ruiyangzh"},"content":"                        \" populated with a sample AddressBook.\");","lastModifiedDate":"2023-10-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            initialData \u003d addressBookOptional.orElseGet(SampleDataUtil::getSampleAddressBook);","lastModifiedDate":"2016-12-20"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        } catch (DataLoadingException e) {","lastModifiedDate":"2023-06-14"},{"lineNumber":89,"author":{"gitId":"ruiyangzh"},"content":"            logger.warning(\"Data file at \" + storage.getFilePath() +","lastModifiedDate":"2023-10-19"},{"lineNumber":90,"author":{"gitId":"ruiyangzh"},"content":"                    \" could not be loaded.\" + \" Will be starting with an empty AddressBook.\");","lastModifiedDate":"2023-10-19"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            initialData \u003d new AddressBook();","lastModifiedDate":"2016-09-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        return new ModelManager(initialData, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    private void initLogging(Config config) {","lastModifiedDate":"2016-09-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        LogsCenter.init(config);","lastModifiedDate":"2016-09-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * Returns a {@code Config} using the file at {@code configFilePath}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * The default file path {@code Config#DEFAULT_CONFIG_FILE} will be used instead","lastModifiedDate":"2017-08-16"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * if {@code configFilePath} is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    protected Config initConfig(Path configFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        Config initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        Path configFilePathUsed;","lastModifiedDate":"2018-04-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        configFilePathUsed \u003d Config.DEFAULT_CONFIG_FILE;","lastModifiedDate":"2016-09-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        if (configFilePath !\u003d null) {","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            logger.info(\"Custom Config file specified \" + configFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            configFilePathUsed \u003d configFilePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        logger.info(\"Using config file : \" + configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            Optional\u003cConfig\u003e configOptional \u003d ConfigUtil.readConfig(configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":121,"author":{"gitId":"ruiyangzh"},"content":"            if (configOptional.isEmpty()) {","lastModifiedDate":"2023-10-19"},{"lineNumber":122,"author":{"gitId":"-"},"content":"                logger.info(\"Creating new config file \" + configFilePathUsed);","lastModifiedDate":"2023-05-15"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2023-01-03"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            initializedConfig \u003d configOptional.orElse(new Config());","lastModifiedDate":"2016-09-24"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        } catch (DataLoadingException e) {","lastModifiedDate":"2023-06-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"            logger.warning(\"Config file at \" + configFilePathUsed + \" could not be loaded.\"","lastModifiedDate":"2023-06-15"},{"lineNumber":127,"author":{"gitId":"-"},"content":"                    + \" Using default config properties.\");","lastModifiedDate":"2023-05-15"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            initializedConfig \u003d new Config();","lastModifiedDate":"2016-09-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        //Update config file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            ConfigUtil.saveConfig(initializedConfig, configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        return initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * Returns a {@code UserPrefs} using the file at {@code storage}\u0027s user prefs file path,","lastModifiedDate":"2017-08-16"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     * or a new {@code UserPrefs} with default configuration if errors occur when","lastModifiedDate":"2017-08-16"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     * reading from the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    protected UserPrefs initPrefs(UserPrefsStorage storage) {","lastModifiedDate":"2017-02-25"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d storage.getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        logger.info(\"Using preference file : \" + prefsFilePath);","lastModifiedDate":"2023-05-15"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        UserPrefs initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            Optional\u003cUserPrefs\u003e prefsOptional \u003d storage.readUserPrefs();","lastModifiedDate":"2016-09-25"},{"lineNumber":152,"author":{"gitId":"ruiyangzh"},"content":"            if (prefsOptional.isEmpty()) {","lastModifiedDate":"2023-10-19"},{"lineNumber":153,"author":{"gitId":"-"},"content":"                logger.info(\"Creating new preference file \" + prefsFilePath);","lastModifiedDate":"2023-05-15"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2023-01-03"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d prefsOptional.orElse(new UserPrefs());","lastModifiedDate":"2016-09-24"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        } catch (DataLoadingException e) {","lastModifiedDate":"2023-06-14"},{"lineNumber":157,"author":{"gitId":"-"},"content":"            logger.warning(\"Preference file at \" + prefsFilePath + \" could not be loaded.\"","lastModifiedDate":"2023-06-15"},{"lineNumber":158,"author":{"gitId":"-"},"content":"                    + \" Using default preferences.\");","lastModifiedDate":"2023-05-15"},{"lineNumber":159,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        //Update prefs file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":164,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(initializedPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":166,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        return initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-08-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        logger.info(\"Starting AddressBook \" + MainApp.VERSION);","lastModifiedDate":"2016-09-29"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        ui.start(primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    public void stop() {","lastModifiedDate":"2016-08-08"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d [ Stopping Address Book ] \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2016-09-29"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":182,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(model.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":184,"author":{"gitId":"-"},"content":"            logger.severe(\"Failed to save preferences \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":187,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"ruiyangzh":9,"peasantbird":1,"-":177}},{"path":"src/main/java/seedu/address/logic/Logic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":11,"author":{"gitId":"ruiyangzh"},"content":"import seedu.address.model.person.buyer.Buyer;","lastModifiedDate":"2023-10-18"},{"lineNumber":12,"author":{"gitId":"ruiyangzh"},"content":"import seedu.address.model.person.seller.Seller;","lastModifiedDate":"2023-10-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * API of the Logic component","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Returns the AddressBook.","lastModifiedDate":"2018-12-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * @see seedu.address.model.Model#getAddressBook()","lastModifiedDate":"2018-12-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":34,"author":{"gitId":"J-hta-n"},"content":"    /** Returns an unmodifiable view of the filtered list of buyers */","lastModifiedDate":"2023-10-18"},{"lineNumber":35,"author":{"gitId":"ruiyangzh"},"content":"    ObservableList\u003cBuyer\u003e getFilteredBuyerList();","lastModifiedDate":"2023-10-18"},{"lineNumber":36,"author":{"gitId":"J-hta-n"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":37,"author":{"gitId":"J-hta-n"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":38,"author":{"gitId":"J-hta-n"},"content":"    /** Returns an unmodifiable view of the filtered list of sellers */","lastModifiedDate":"2023-10-18"},{"lineNumber":39,"author":{"gitId":"ruiyangzh"},"content":"    ObservableList\u003cSeller\u003e getFilteredSellerList();","lastModifiedDate":"2023-10-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"ruiyangzh"},"content":"     * Returns the user prefs\u0027  file path.","lastModifiedDate":"2023-10-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"ruiyangzh"},"content":"    Path getFilePath();","lastModifiedDate":"2023-10-19"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Set the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"ruiyangzh":6,"-":44,"J-hta-n":4}},{"path":"src/main/java/seedu/address/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.AccessDeniedException;","lastModifiedDate":"2023-06-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.AddressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":18,"author":{"gitId":"ruiyangzh"},"content":"import seedu.address.model.person.buyer.Buyer;","lastModifiedDate":"2023-10-18"},{"lineNumber":19,"author":{"gitId":"ruiyangzh"},"content":"import seedu.address.model.person.seller.Seller;","lastModifiedDate":"2023-10-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2016-09-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_FORMAT \u003d \"Could not save data due to the following error: %s\";","lastModifiedDate":"2023-06-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_PERMISSION_ERROR_FORMAT \u003d","lastModifiedDate":"2023-06-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            \"Could not save data to file %s due to insufficient permissions to write to the file or the folder.\";","lastModifiedDate":"2023-06-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2016-09-29"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private final Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private final Storage storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private final AddressBookParser addressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public LogicManager(Model model, Storage storage) {","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2016-09-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        addressBookParser \u003d new AddressBookParser();","lastModifiedDate":"2018-01-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2016-09-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        Command command \u003d addressBookParser.parseCommand(commandText);","lastModifiedDate":"2017-07-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2019-01-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        } catch (AccessDeniedException e) {","lastModifiedDate":"2023-06-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            throw new CommandException(String.format(FILE_OPS_PERMISSION_ERROR_FORMAT, e.getMessage()), e);","lastModifiedDate":"2023-06-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-12-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            throw new CommandException(String.format(FILE_OPS_ERROR_FORMAT, ioe.getMessage()), ioe);","lastModifiedDate":"2023-06-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2018-12-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return model.getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":71,"author":{"gitId":"ruiyangzh"},"content":"    public ObservableList\u003cBuyer\u003e getFilteredBuyerList() {","lastModifiedDate":"2023-10-18"},{"lineNumber":72,"author":{"gitId":"J-hta-n"},"content":"        return model.getFilteredBuyerList();","lastModifiedDate":"2023-10-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-10-18"},{"lineNumber":76,"author":{"gitId":"ruiyangzh"},"content":"    public ObservableList\u003cSeller\u003e getFilteredSellerList() {","lastModifiedDate":"2023-10-18"},{"lineNumber":77,"author":{"gitId":"J-hta-n"},"content":"        return model.getFilteredSellerList();","lastModifiedDate":"2023-10-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"ruiyangzh"},"content":"    public Path getFilePath() {","lastModifiedDate":"2023-10-19"},{"lineNumber":82,"author":{"gitId":"ruiyangzh"},"content":"        return model.getFilePath();","lastModifiedDate":"2023-10-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"ruiyangzh":6,"-":86,"J-hta-n":2}},{"path":"src/main/java/seedu/address/logic/commands/AddBuyerCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"peasantbird"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_INFO;","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-16"},{"lineNumber":15,"author":{"gitId":"peasantbird"},"content":"import seedu.address.model.person.buyer.Buyer;","lastModifiedDate":"2023-10-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2023-10-16"},{"lineNumber":18,"author":{"gitId":"peasantbird"},"content":" * Adds a buyer to the address book.","lastModifiedDate":"2023-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2023-10-16"},{"lineNumber":20,"author":{"gitId":"peasantbird"},"content":"public class AddBuyerCommand extends Command {","lastModifiedDate":"2023-10-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":22,"author":{"gitId":"peasantbird"},"content":"    public static final String COMMAND_WORD \u003d \"buyer\";","lastModifiedDate":"2023-10-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":24,"author":{"gitId":"peasantbird"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a buyer to the address book. \"","lastModifiedDate":"2023-10-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            + \"Parameters: \"","lastModifiedDate":"2023-10-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2023-10-16"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"PHONE \"","lastModifiedDate":"2023-10-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"EMAIL \"","lastModifiedDate":"2023-10-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"ADDRESS \"","lastModifiedDate":"2023-10-16"},{"lineNumber":30,"author":{"gitId":"peasantbird"},"content":"            + PREFIX_INFO + \"INFO \"","lastModifiedDate":"2023-10-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2023-10-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2023-10-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2023-10-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"98765432 \"","lastModifiedDate":"2023-10-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johnd@example.com \"","lastModifiedDate":"2023-10-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"311, Clementi Ave 2, #02-25 \"","lastModifiedDate":"2023-10-16"},{"lineNumber":37,"author":{"gitId":"peasantbird"},"content":"            + PREFIX_INFO + \"Central Area 5 Room Condominium \"","lastModifiedDate":"2023-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            + PREFIX_TAG + \"friends \"","lastModifiedDate":"2023-10-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            + PREFIX_TAG + \"owesMoney\";","lastModifiedDate":"2023-10-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":41,"author":{"gitId":"peasantbird"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New buyer added: %1$s\";","lastModifiedDate":"2023-10-16"},{"lineNumber":42,"author":{"gitId":"peasantbird"},"content":"    public static final String MESSAGE_DUPLICATE_BUYER \u003d \"This buyer already exists in the address book\";","lastModifiedDate":"2023-10-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":44,"author":{"gitId":"peasantbird"},"content":"    private final Buyer toAdd;","lastModifiedDate":"2023-10-16"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":47,"author":{"gitId":"peasantbird"},"content":"     * Creates an AddBuyerCommand to add the specified {@code Buyer}","lastModifiedDate":"2023-10-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":49,"author":{"gitId":"peasantbird"},"content":"    public AddBuyerCommand(Buyer buyer) {","lastModifiedDate":"2023-10-16"},{"lineNumber":50,"author":{"gitId":"peasantbird"},"content":"        requireNonNull(buyer);","lastModifiedDate":"2023-10-16"},{"lineNumber":51,"author":{"gitId":"peasantbird"},"content":"        toAdd \u003d buyer;","lastModifiedDate":"2023-10-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-10-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":58,"author":{"gitId":"ruiyangzh"},"content":"        if (model.hasBuyer(toAdd)) {","lastModifiedDate":"2023-10-18"},{"lineNumber":59,"author":{"gitId":"peasantbird"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_BUYER);","lastModifiedDate":"2023-10-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":62,"author":{"gitId":"ruiyangzh"},"content":"        model.addBuyer(toAdd);","lastModifiedDate":"2023-10-18"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, Messages.format(toAdd)));","lastModifiedDate":"2023-10-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-10-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-16"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-10-16"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-16"},{"lineNumber":73,"author":{"gitId":"peasantbird"},"content":"        if (!(other instanceof AddBuyerCommand)) {","lastModifiedDate":"2023-10-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-10-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":77,"author":{"gitId":"peasantbird"},"content":"        AddBuyerCommand otherAddCommand \u003d (AddBuyerCommand) other;","lastModifiedDate":"2023-10-16"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        return toAdd.equals(otherAddCommand.toAdd);","lastModifiedDate":"2023-10-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-10-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2023-10-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-10-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"                .add(\"toAdd\", toAdd)","lastModifiedDate":"2023-10-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2023-10-16"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-10-16"}],"authorContributionMap":{"ruiyangzh":2,"peasantbird":18,"-":67}},{"path":"src/main/java/seedu/address/logic/commands/AddSellerCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"andytoh1"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-16"},{"lineNumber":2,"author":{"gitId":"andytoh1"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":3,"author":{"gitId":"andytoh1"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-16"},{"lineNumber":4,"author":{"gitId":"andytoh1"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-10-16"},{"lineNumber":5,"author":{"gitId":"andytoh1"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-10-16"},{"lineNumber":6,"author":{"gitId":"andytoh1"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-10-16"},{"lineNumber":7,"author":{"gitId":"andytoh1"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-10-16"},{"lineNumber":8,"author":{"gitId":"andytoh1"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SELLING_ADDRESS;","lastModifiedDate":"2023-10-16"},{"lineNumber":9,"author":{"gitId":"andytoh1"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SELL_HOUSE_INFO;","lastModifiedDate":"2023-10-16"},{"lineNumber":10,"author":{"gitId":"andytoh1"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-10-16"},{"lineNumber":11,"author":{"gitId":"andytoh1"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":12,"author":{"gitId":"andytoh1"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-16"},{"lineNumber":13,"author":{"gitId":"andytoh1"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-16"},{"lineNumber":14,"author":{"gitId":"andytoh1"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-16"},{"lineNumber":15,"author":{"gitId":"andytoh1"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-16"},{"lineNumber":16,"author":{"gitId":"andytoh1"},"content":"import seedu.address.model.person.seller.Seller;","lastModifiedDate":"2023-10-16"},{"lineNumber":17,"author":{"gitId":"andytoh1"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":18,"author":{"gitId":"andytoh1"},"content":"/**","lastModifiedDate":"2023-10-16"},{"lineNumber":19,"author":{"gitId":"andytoh1"},"content":" * Adds a seller to the address book.","lastModifiedDate":"2023-10-16"},{"lineNumber":20,"author":{"gitId":"andytoh1"},"content":" */","lastModifiedDate":"2023-10-16"},{"lineNumber":21,"author":{"gitId":"andytoh1"},"content":"public class AddSellerCommand extends Command {","lastModifiedDate":"2023-10-16"},{"lineNumber":22,"author":{"gitId":"andytoh1"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":23,"author":{"gitId":"andytoh1"},"content":"    public static final String COMMAND_WORD \u003d \"seller\";","lastModifiedDate":"2023-10-16"},{"lineNumber":24,"author":{"gitId":"andytoh1"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":25,"author":{"gitId":"andytoh1"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a seller to the address book. \"","lastModifiedDate":"2023-10-16"},{"lineNumber":26,"author":{"gitId":"andytoh1"},"content":"            + \"Parameters: \"","lastModifiedDate":"2023-10-16"},{"lineNumber":27,"author":{"gitId":"andytoh1"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2023-10-16"},{"lineNumber":28,"author":{"gitId":"andytoh1"},"content":"            + PREFIX_PHONE + \"PHONE \"","lastModifiedDate":"2023-10-16"},{"lineNumber":29,"author":{"gitId":"andytoh1"},"content":"            + PREFIX_EMAIL + \"EMAIL \"","lastModifiedDate":"2023-10-16"},{"lineNumber":30,"author":{"gitId":"andytoh1"},"content":"            + PREFIX_ADDRESS + \"ADDRESS \"","lastModifiedDate":"2023-10-16"},{"lineNumber":31,"author":{"gitId":"andytoh1"},"content":"            + PREFIX_SELLING_ADDRESS + \"SELLING_ADDRESS \"","lastModifiedDate":"2023-10-16"},{"lineNumber":32,"author":{"gitId":"andytoh1"},"content":"            + PREFIX_SELL_HOUSE_INFO + \"HOUSE_INFO \"","lastModifiedDate":"2023-10-16"},{"lineNumber":33,"author":{"gitId":"andytoh1"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2023-10-16"},{"lineNumber":34,"author":{"gitId":"andytoh1"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2023-10-16"},{"lineNumber":35,"author":{"gitId":"andytoh1"},"content":"            + PREFIX_NAME + \"Ryan \"","lastModifiedDate":"2023-10-16"},{"lineNumber":36,"author":{"gitId":"andytoh1"},"content":"            + PREFIX_PHONE + \"91234567 \"","lastModifiedDate":"2023-10-16"},{"lineNumber":37,"author":{"gitId":"andytoh1"},"content":"            + PREFIX_EMAIL + \"ryan@gmail.com \"","lastModifiedDate":"2023-10-16"},{"lineNumber":38,"author":{"gitId":"andytoh1"},"content":"            + PREFIX_ADDRESS + \"My Secret Home \"","lastModifiedDate":"2023-10-16"},{"lineNumber":39,"author":{"gitId":"andytoh1"},"content":"            + PREFIX_SELLING_ADDRESS + \"47D Lor Sarhad, Singapore 119164 \"","lastModifiedDate":"2023-10-16"},{"lineNumber":40,"author":{"gitId":"andytoh1"},"content":"            + PREFIX_SELL_HOUSE_INFO + \"4 Room Flat in Sarhad Ville \"","lastModifiedDate":"2023-10-16"},{"lineNumber":41,"author":{"gitId":"andytoh1"},"content":"            + PREFIX_TAG + \"friends \"","lastModifiedDate":"2023-10-16"},{"lineNumber":42,"author":{"gitId":"andytoh1"},"content":"            + PREFIX_TAG + \"owesMoney\";","lastModifiedDate":"2023-10-16"},{"lineNumber":43,"author":{"gitId":"andytoh1"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":44,"author":{"gitId":"andytoh1"},"content":"    public static final String MESSAGE_SELLER_SUCCESS \u003d \"Got it. I\u0027ve added a seller contact:\\n%1$s\";","lastModifiedDate":"2023-10-16"},{"lineNumber":45,"author":{"gitId":"andytoh1"},"content":"    public static final String MESSAGE_DUPLICATE_SELLER \u003d \"This seller already exists in the address book\";","lastModifiedDate":"2023-10-16"},{"lineNumber":46,"author":{"gitId":"andytoh1"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":47,"author":{"gitId":"andytoh1"},"content":"    private final Seller toAdd;","lastModifiedDate":"2023-10-16"},{"lineNumber":48,"author":{"gitId":"andytoh1"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":49,"author":{"gitId":"andytoh1"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":50,"author":{"gitId":"andytoh1"},"content":"     * Creates an AddSellerCommand to add the specified {@code Person}","lastModifiedDate":"2023-10-16"},{"lineNumber":51,"author":{"gitId":"andytoh1"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":52,"author":{"gitId":"andytoh1"},"content":"    public AddSellerCommand(Seller seller) {","lastModifiedDate":"2023-10-16"},{"lineNumber":53,"author":{"gitId":"andytoh1"},"content":"        requireNonNull(seller);","lastModifiedDate":"2023-10-16"},{"lineNumber":54,"author":{"gitId":"andytoh1"},"content":"        toAdd \u003d seller;","lastModifiedDate":"2023-10-16"},{"lineNumber":55,"author":{"gitId":"andytoh1"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":56,"author":{"gitId":"andytoh1"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":57,"author":{"gitId":"andytoh1"},"content":"    @Override","lastModifiedDate":"2023-10-16"},{"lineNumber":58,"author":{"gitId":"andytoh1"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-16"},{"lineNumber":59,"author":{"gitId":"andytoh1"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-16"},{"lineNumber":60,"author":{"gitId":"andytoh1"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":61,"author":{"gitId":"ruiyangzh"},"content":"        if (model.hasSeller(toAdd)) {","lastModifiedDate":"2023-10-18"},{"lineNumber":62,"author":{"gitId":"andytoh1"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_SELLER);","lastModifiedDate":"2023-10-16"},{"lineNumber":63,"author":{"gitId":"andytoh1"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":64,"author":{"gitId":"andytoh1"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":65,"author":{"gitId":"ruiyangzh"},"content":"        model.addSeller(toAdd);","lastModifiedDate":"2023-10-18"},{"lineNumber":66,"author":{"gitId":"andytoh1"},"content":"        return new CommandResult(String.format(MESSAGE_SELLER_SUCCESS, Messages.format(toAdd)));","lastModifiedDate":"2023-10-16"},{"lineNumber":67,"author":{"gitId":"andytoh1"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":68,"author":{"gitId":"andytoh1"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":69,"author":{"gitId":"andytoh1"},"content":"    @Override","lastModifiedDate":"2023-10-16"},{"lineNumber":70,"author":{"gitId":"andytoh1"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-16"},{"lineNumber":71,"author":{"gitId":"andytoh1"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-16"},{"lineNumber":72,"author":{"gitId":"andytoh1"},"content":"            return true;","lastModifiedDate":"2023-10-16"},{"lineNumber":73,"author":{"gitId":"andytoh1"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":74,"author":{"gitId":"andytoh1"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":75,"author":{"gitId":"andytoh1"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-16"},{"lineNumber":76,"author":{"gitId":"andytoh1"},"content":"        if (!(other instanceof AddSellerCommand)) {","lastModifiedDate":"2023-10-16"},{"lineNumber":77,"author":{"gitId":"andytoh1"},"content":"            return false;","lastModifiedDate":"2023-10-16"},{"lineNumber":78,"author":{"gitId":"andytoh1"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":79,"author":{"gitId":"andytoh1"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":80,"author":{"gitId":"andytoh1"},"content":"        AddSellerCommand otherAddCommand \u003d (AddSellerCommand) other;","lastModifiedDate":"2023-10-16"},{"lineNumber":81,"author":{"gitId":"andytoh1"},"content":"        return toAdd.equals(otherAddCommand.toAdd);","lastModifiedDate":"2023-10-16"},{"lineNumber":82,"author":{"gitId":"andytoh1"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":83,"author":{"gitId":"andytoh1"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":84,"author":{"gitId":"andytoh1"},"content":"    @Override","lastModifiedDate":"2023-10-16"},{"lineNumber":85,"author":{"gitId":"andytoh1"},"content":"    public String toString() {","lastModifiedDate":"2023-10-16"},{"lineNumber":86,"author":{"gitId":"andytoh1"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-10-16"},{"lineNumber":87,"author":{"gitId":"andytoh1"},"content":"                .add(\"toAdd\", toAdd)","lastModifiedDate":"2023-10-16"},{"lineNumber":88,"author":{"gitId":"andytoh1"},"content":"                .toString();","lastModifiedDate":"2023-10-16"},{"lineNumber":89,"author":{"gitId":"andytoh1"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":90,"author":{"gitId":"andytoh1"},"content":"}","lastModifiedDate":"2023-10-16"}],"authorContributionMap":{"ruiyangzh":2,"andytoh1":88}},{"path":"src/main/java/seedu/address/logic/commands/DeleteBuyerCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ruiyangzh"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-18"},{"lineNumber":2,"author":{"gitId":"ruiyangzh"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":3,"author":{"gitId":"ruiyangzh"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":4,"author":{"gitId":"ruiyangzh"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-18"},{"lineNumber":5,"author":{"gitId":"ruiyangzh"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":6,"author":{"gitId":"ruiyangzh"},"content":"import java.util.List;","lastModifiedDate":"2023-10-18"},{"lineNumber":7,"author":{"gitId":"ruiyangzh"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":8,"author":{"gitId":"ruiyangzh"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-18"},{"lineNumber":9,"author":{"gitId":"ruiyangzh"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-18"},{"lineNumber":10,"author":{"gitId":"ruiyangzh"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-18"},{"lineNumber":11,"author":{"gitId":"ruiyangzh"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-18"},{"lineNumber":12,"author":{"gitId":"ruiyangzh"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-18"},{"lineNumber":13,"author":{"gitId":"ruiyangzh"},"content":"import seedu.address.model.person.buyer.Buyer;","lastModifiedDate":"2023-10-18"},{"lineNumber":14,"author":{"gitId":"ruiyangzh"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":15,"author":{"gitId":"ruiyangzh"},"content":"/**","lastModifiedDate":"2023-10-18"},{"lineNumber":16,"author":{"gitId":"ruiyangzh"},"content":" * Deletes a buyer identified using it\u0027s displayed index from the address book.","lastModifiedDate":"2023-10-18"},{"lineNumber":17,"author":{"gitId":"ruiyangzh"},"content":" */","lastModifiedDate":"2023-10-18"},{"lineNumber":18,"author":{"gitId":"ruiyangzh"},"content":"public class DeleteBuyerCommand extends Command {","lastModifiedDate":"2023-10-18"},{"lineNumber":19,"author":{"gitId":"ruiyangzh"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":20,"author":{"gitId":"ruiyangzh"},"content":"    public static final String COMMAND_WORD \u003d \"delete-b\";","lastModifiedDate":"2023-10-18"},{"lineNumber":21,"author":{"gitId":"ruiyangzh"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":22,"author":{"gitId":"ruiyangzh"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2023-10-18"},{"lineNumber":23,"author":{"gitId":"ruiyangzh"},"content":"            + \": Deletes the buyer identified by the index number used in the displayed buyer list.\\n\"","lastModifiedDate":"2023-10-18"},{"lineNumber":24,"author":{"gitId":"ruiyangzh"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2023-10-18"},{"lineNumber":25,"author":{"gitId":"ruiyangzh"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2023-10-18"},{"lineNumber":26,"author":{"gitId":"ruiyangzh"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":27,"author":{"gitId":"ruiyangzh"},"content":"    public static final String MESSAGE_DELETE_BUYER_SUCCESS \u003d \"Deleted Buyer: %1$s\";","lastModifiedDate":"2023-10-18"},{"lineNumber":28,"author":{"gitId":"ruiyangzh"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":29,"author":{"gitId":"ruiyangzh"},"content":"    private final Index targetIndex;","lastModifiedDate":"2023-10-18"},{"lineNumber":30,"author":{"gitId":"ruiyangzh"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":31,"author":{"gitId":"ruiyangzh"},"content":"    public DeleteBuyerCommand(Index targetIndex) {","lastModifiedDate":"2023-10-18"},{"lineNumber":32,"author":{"gitId":"ruiyangzh"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2023-10-18"},{"lineNumber":33,"author":{"gitId":"ruiyangzh"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":34,"author":{"gitId":"ruiyangzh"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":35,"author":{"gitId":"ruiyangzh"},"content":"    @Override","lastModifiedDate":"2023-10-18"},{"lineNumber":36,"author":{"gitId":"ruiyangzh"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-18"},{"lineNumber":37,"author":{"gitId":"ruiyangzh"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-18"},{"lineNumber":38,"author":{"gitId":"ruiyangzh"},"content":"        List\u003cBuyer\u003e lastShownList \u003d model.getFilteredBuyerList();","lastModifiedDate":"2023-10-18"},{"lineNumber":39,"author":{"gitId":"ruiyangzh"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":40,"author":{"gitId":"ruiyangzh"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-10-18"},{"lineNumber":41,"author":{"gitId":"ruiyangzh"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-18"},{"lineNumber":42,"author":{"gitId":"ruiyangzh"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":43,"author":{"gitId":"ruiyangzh"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":44,"author":{"gitId":"ruiyangzh"},"content":"        Buyer buyerToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2023-10-18"},{"lineNumber":45,"author":{"gitId":"ruiyangzh"},"content":"        model.deleteBuyer(buyerToDelete);","lastModifiedDate":"2023-10-18"},{"lineNumber":46,"author":{"gitId":"ruiyangzh"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_BUYER_SUCCESS, Messages.format(buyerToDelete)));","lastModifiedDate":"2023-10-18"},{"lineNumber":47,"author":{"gitId":"ruiyangzh"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":48,"author":{"gitId":"ruiyangzh"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":49,"author":{"gitId":"ruiyangzh"},"content":"    @Override","lastModifiedDate":"2023-10-18"},{"lineNumber":50,"author":{"gitId":"ruiyangzh"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-18"},{"lineNumber":51,"author":{"gitId":"ruiyangzh"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-18"},{"lineNumber":52,"author":{"gitId":"ruiyangzh"},"content":"            return true;","lastModifiedDate":"2023-10-18"},{"lineNumber":53,"author":{"gitId":"ruiyangzh"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":54,"author":{"gitId":"ruiyangzh"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":55,"author":{"gitId":"ruiyangzh"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-18"},{"lineNumber":56,"author":{"gitId":"ruiyangzh"},"content":"        if (!(other instanceof DeleteBuyerCommand)) {","lastModifiedDate":"2023-10-18"},{"lineNumber":57,"author":{"gitId":"ruiyangzh"},"content":"            return false;","lastModifiedDate":"2023-10-18"},{"lineNumber":58,"author":{"gitId":"ruiyangzh"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":59,"author":{"gitId":"ruiyangzh"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":60,"author":{"gitId":"ruiyangzh"},"content":"        DeleteBuyerCommand otherDeleteBuyerCommand \u003d (DeleteBuyerCommand) other;","lastModifiedDate":"2023-10-18"},{"lineNumber":61,"author":{"gitId":"ruiyangzh"},"content":"        return targetIndex.equals(otherDeleteBuyerCommand.targetIndex);","lastModifiedDate":"2023-10-18"},{"lineNumber":62,"author":{"gitId":"ruiyangzh"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":63,"author":{"gitId":"ruiyangzh"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":64,"author":{"gitId":"ruiyangzh"},"content":"    @Override","lastModifiedDate":"2023-10-18"},{"lineNumber":65,"author":{"gitId":"ruiyangzh"},"content":"    public String toString() {","lastModifiedDate":"2023-10-18"},{"lineNumber":66,"author":{"gitId":"ruiyangzh"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-10-18"},{"lineNumber":67,"author":{"gitId":"ruiyangzh"},"content":"                .add(\"targetIndex\", targetIndex)","lastModifiedDate":"2023-10-18"},{"lineNumber":68,"author":{"gitId":"ruiyangzh"},"content":"                .toString();","lastModifiedDate":"2023-10-18"},{"lineNumber":69,"author":{"gitId":"ruiyangzh"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":70,"author":{"gitId":"ruiyangzh"},"content":"}","lastModifiedDate":"2023-10-18"}],"authorContributionMap":{"ruiyangzh":70}},{"path":"src/main/java/seedu/address/logic/commands/DeleteSellerCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2023-10-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-18"},{"lineNumber":12,"author":{"gitId":"ruiyangzh"},"content":"import seedu.address.model.person.seller.Seller;","lastModifiedDate":"2023-10-18"},{"lineNumber":13,"author":{"gitId":"ruiyangzh"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":14,"author":{"gitId":"ruiyangzh"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2023-10-18"},{"lineNumber":17,"author":{"gitId":"ruiyangzh"},"content":" * Deletes a seller identified using it\u0027s displayed index from the address book.","lastModifiedDate":"2023-10-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2023-10-18"},{"lineNumber":19,"author":{"gitId":"ruiyangzh"},"content":"public class DeleteSellerCommand extends Command {","lastModifiedDate":"2023-10-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":21,"author":{"gitId":"ruiyangzh"},"content":"    public static final String COMMAND_WORD \u003d \"delete-s\";","lastModifiedDate":"2023-10-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2023-10-18"},{"lineNumber":24,"author":{"gitId":"ruiyangzh"},"content":"            + \": Deletes the seller identified by the index number used in the displayed seller list.\\n\"","lastModifiedDate":"2023-10-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2023-10-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2023-10-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":28,"author":{"gitId":"ruiyangzh"},"content":"    public static final String MESSAGE_DELETE_SELLER_SUCCESS \u003d \"Deleted Seller: %1$s\";","lastModifiedDate":"2023-10-18"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final Index targetIndex;","lastModifiedDate":"2023-10-18"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":32,"author":{"gitId":"ruiyangzh"},"content":"    public DeleteSellerCommand(Index targetIndex) {","lastModifiedDate":"2023-10-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2023-10-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-10-18"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-18"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-18"},{"lineNumber":39,"author":{"gitId":"ruiyangzh"},"content":"        List\u003cSeller\u003e lastShownList \u003d model.getFilteredSellerList();","lastModifiedDate":"2023-10-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-10-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":45,"author":{"gitId":"ruiyangzh"},"content":"        Seller sellerToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2023-10-18"},{"lineNumber":46,"author":{"gitId":"ruiyangzh"},"content":"        model.deleteSeller(sellerToDelete);","lastModifiedDate":"2023-10-18"},{"lineNumber":47,"author":{"gitId":"ruiyangzh"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_SELLER_SUCCESS, Messages.format(sellerToDelete)));","lastModifiedDate":"2023-10-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-10-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-10-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-18"},{"lineNumber":57,"author":{"gitId":"ruiyangzh"},"content":"        if (!(other instanceof DeleteSellerCommand)) {","lastModifiedDate":"2023-10-18"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-10-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":61,"author":{"gitId":"ruiyangzh"},"content":"        DeleteSellerCommand otherDeleteSellerCommand \u003d (DeleteSellerCommand) other;","lastModifiedDate":"2023-10-18"},{"lineNumber":62,"author":{"gitId":"ruiyangzh"},"content":"        return targetIndex.equals(otherDeleteSellerCommand.targetIndex);","lastModifiedDate":"2023-10-18"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-10-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2023-10-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-10-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"                .add(\"targetIndex\", targetIndex)","lastModifiedDate":"2023-10-18"},{"lineNumber":69,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2023-10-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-10-18"}],"authorContributionMap":{"ruiyangzh":16,"-":55}},{"path":"src/main/java/seedu/address/logic/commands/ListBuyersCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"iantsaii"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-16"},{"lineNumber":2,"author":{"gitId":"iantsaii"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":3,"author":{"gitId":"iantsaii"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-16"},{"lineNumber":4,"author":{"gitId":"iantsaii"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_BUYERS;","lastModifiedDate":"2023-10-16"},{"lineNumber":5,"author":{"gitId":"iantsaii"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":6,"author":{"gitId":"iantsaii"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-16"},{"lineNumber":7,"author":{"gitId":"iantsaii"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":8,"author":{"gitId":"iantsaii"},"content":"/**","lastModifiedDate":"2023-10-16"},{"lineNumber":9,"author":{"gitId":"iantsaii"},"content":" * List all Buyers in the address book to the user.","lastModifiedDate":"2023-10-16"},{"lineNumber":10,"author":{"gitId":"iantsaii"},"content":" */","lastModifiedDate":"2023-10-16"},{"lineNumber":11,"author":{"gitId":"iantsaii"},"content":"public class ListBuyersCommand extends Command {","lastModifiedDate":"2023-10-16"},{"lineNumber":12,"author":{"gitId":"iantsaii"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":13,"author":{"gitId":"iantsaii"},"content":"    public static final String COMMAND_WORD \u003d \"list-b\";","lastModifiedDate":"2023-10-16"},{"lineNumber":14,"author":{"gitId":"iantsaii"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all buyers\";","lastModifiedDate":"2023-10-16"},{"lineNumber":15,"author":{"gitId":"iantsaii"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":16,"author":{"gitId":"iantsaii"},"content":"    @Override","lastModifiedDate":"2023-10-16"},{"lineNumber":17,"author":{"gitId":"iantsaii"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2023-10-16"},{"lineNumber":18,"author":{"gitId":"iantsaii"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-16"},{"lineNumber":19,"author":{"gitId":"J-hta-n"},"content":"        model.updateFilteredBuyerList(PREDICATE_SHOW_BUYERS);","lastModifiedDate":"2023-10-18"},{"lineNumber":20,"author":{"gitId":"iantsaii"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2023-10-16"},{"lineNumber":21,"author":{"gitId":"iantsaii"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":22,"author":{"gitId":"iantsaii"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":23,"author":{"gitId":"iantsaii"},"content":"}","lastModifiedDate":"2023-10-16"}],"authorContributionMap":{"iantsaii":22,"J-hta-n":1}},{"path":"src/main/java/seedu/address/logic/commands/ListSellersCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"J-hta-n"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-16"},{"lineNumber":2,"author":{"gitId":"J-hta-n"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":3,"author":{"gitId":"J-hta-n"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-16"},{"lineNumber":4,"author":{"gitId":"J-hta-n"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_SELLERS;","lastModifiedDate":"2023-10-16"},{"lineNumber":5,"author":{"gitId":"J-hta-n"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":6,"author":{"gitId":"J-hta-n"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-16"},{"lineNumber":7,"author":{"gitId":"J-hta-n"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":8,"author":{"gitId":"J-hta-n"},"content":"/**","lastModifiedDate":"2023-10-16"},{"lineNumber":9,"author":{"gitId":"J-hta-n"},"content":" * Lists all sellers in the address book to the user.","lastModifiedDate":"2023-10-16"},{"lineNumber":10,"author":{"gitId":"J-hta-n"},"content":" */","lastModifiedDate":"2023-10-16"},{"lineNumber":11,"author":{"gitId":"J-hta-n"},"content":"public class ListSellersCommand extends Command {","lastModifiedDate":"2023-10-16"},{"lineNumber":12,"author":{"gitId":"J-hta-n"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":13,"author":{"gitId":"J-hta-n"},"content":"    public static final String COMMAND_WORD \u003d \"list-s\";","lastModifiedDate":"2023-10-16"},{"lineNumber":14,"author":{"gitId":"J-hta-n"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all sellers\";","lastModifiedDate":"2023-10-16"},{"lineNumber":15,"author":{"gitId":"J-hta-n"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":16,"author":{"gitId":"J-hta-n"},"content":"    @Override","lastModifiedDate":"2023-10-16"},{"lineNumber":17,"author":{"gitId":"J-hta-n"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2023-10-16"},{"lineNumber":18,"author":{"gitId":"J-hta-n"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-16"},{"lineNumber":19,"author":{"gitId":"J-hta-n"},"content":"        model.updateFilteredSellerList(PREDICATE_SHOW_SELLERS);","lastModifiedDate":"2023-10-18"},{"lineNumber":20,"author":{"gitId":"J-hta-n"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2023-10-16"},{"lineNumber":21,"author":{"gitId":"J-hta-n"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":22,"author":{"gitId":"J-hta-n"},"content":"}","lastModifiedDate":"2023-10-16"}],"authorContributionMap":{"J-hta-n":22}},{"path":"src/main/java/seedu/address/logic/parser/AddBuyerCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"peasantbird"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_INFO;","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-10-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":14,"author":{"gitId":"peasantbird"},"content":"import seedu.address.logic.commands.AddBuyerCommand;","lastModifiedDate":"2023-10-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2023-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2023-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2023-10-16"},{"lineNumber":20,"author":{"gitId":"peasantbird"},"content":"import seedu.address.model.person.buyer.BuyHouseInfo;","lastModifiedDate":"2023-10-16"},{"lineNumber":21,"author":{"gitId":"peasantbird"},"content":"import seedu.address.model.person.buyer.Buyer;","lastModifiedDate":"2023-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-10-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2023-10-16"},{"lineNumber":25,"author":{"gitId":"peasantbird"},"content":" * Parses input arguments and creates a new AddBuyerCommand object","lastModifiedDate":"2023-10-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2023-10-16"},{"lineNumber":27,"author":{"gitId":"peasantbird"},"content":"public class AddBuyerCommandParser implements Parser\u003cAddBuyerCommand\u003e {","lastModifiedDate":"2023-10-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":30,"author":{"gitId":"peasantbird"},"content":"     * Parses the given {@code String} of arguments in the context of the AddBuyerCommand","lastModifiedDate":"2023-10-16"},{"lineNumber":31,"author":{"gitId":"peasantbird"},"content":"     * and returns an AddBuyerCommand object for execution.","lastModifiedDate":"2023-10-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-10-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":34,"author":{"gitId":"peasantbird"},"content":"    public AddBuyerCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-16"},{"lineNumber":35,"author":{"gitId":"peasantbird"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL,","lastModifiedDate":"2023-10-17"},{"lineNumber":36,"author":{"gitId":"peasantbird"},"content":"                PREFIX_ADDRESS, PREFIX_INFO, PREFIX_TAG);","lastModifiedDate":"2023-10-17"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":38,"author":{"gitId":"peasantbird"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_ADDRESS, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_INFO)","lastModifiedDate":"2023-10-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2023-10-16"},{"lineNumber":40,"author":{"gitId":"peasantbird"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddBuyerCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":43,"author":{"gitId":"peasantbird"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_INFO);","lastModifiedDate":"2023-10-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2023-10-16"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2023-10-16"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Email email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get());","lastModifiedDate":"2023-10-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        Address address \u003d ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get());","lastModifiedDate":"2023-10-16"},{"lineNumber":48,"author":{"gitId":"peasantbird"},"content":"        BuyHouseInfo buyHouseInfo \u003d ParserUtil.parseBuyHouseInfo(argMultimap.getValue(PREFIX_INFO).get());","lastModifiedDate":"2023-10-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2023-10-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":51,"author":{"gitId":"peasantbird"},"content":"        Buyer buyer \u003d new Buyer(name, phone, email, address, buyHouseInfo, tagList);","lastModifiedDate":"2023-10-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":53,"author":{"gitId":"peasantbird"},"content":"        return new AddBuyerCommand(buyer);","lastModifiedDate":"2023-10-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2023-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2023-10-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2023-10-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2023-10-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-10-16"}],"authorContributionMap":{"peasantbird":17,"-":47}},{"path":"src/main/java/seedu/address/logic/parser/AddSellerCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"andytoh1"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-16"},{"lineNumber":2,"author":{"gitId":"andytoh1"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":3,"author":{"gitId":"andytoh1"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-16"},{"lineNumber":4,"author":{"gitId":"andytoh1"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-10-16"},{"lineNumber":5,"author":{"gitId":"andytoh1"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-10-16"},{"lineNumber":6,"author":{"gitId":"andytoh1"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-10-16"},{"lineNumber":7,"author":{"gitId":"andytoh1"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-10-16"},{"lineNumber":8,"author":{"gitId":"andytoh1"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SELLING_ADDRESS;","lastModifiedDate":"2023-10-16"},{"lineNumber":9,"author":{"gitId":"andytoh1"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SELL_HOUSE_INFO;","lastModifiedDate":"2023-10-16"},{"lineNumber":10,"author":{"gitId":"andytoh1"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-10-16"},{"lineNumber":11,"author":{"gitId":"andytoh1"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":12,"author":{"gitId":"andytoh1"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-16"},{"lineNumber":13,"author":{"gitId":"andytoh1"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-10-16"},{"lineNumber":14,"author":{"gitId":"andytoh1"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":15,"author":{"gitId":"andytoh1"},"content":"import seedu.address.logic.commands.AddSellerCommand;","lastModifiedDate":"2023-10-16"},{"lineNumber":16,"author":{"gitId":"andytoh1"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-16"},{"lineNumber":17,"author":{"gitId":"andytoh1"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2023-10-16"},{"lineNumber":18,"author":{"gitId":"andytoh1"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2023-10-16"},{"lineNumber":19,"author":{"gitId":"andytoh1"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-10-16"},{"lineNumber":20,"author":{"gitId":"andytoh1"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2023-10-16"},{"lineNumber":21,"author":{"gitId":"andytoh1"},"content":"import seedu.address.model.person.seller.SellHouseInfo;","lastModifiedDate":"2023-10-16"},{"lineNumber":22,"author":{"gitId":"andytoh1"},"content":"import seedu.address.model.person.seller.Seller;","lastModifiedDate":"2023-10-16"},{"lineNumber":23,"author":{"gitId":"andytoh1"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-10-16"},{"lineNumber":24,"author":{"gitId":"andytoh1"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":25,"author":{"gitId":"andytoh1"},"content":"/**","lastModifiedDate":"2023-10-16"},{"lineNumber":26,"author":{"gitId":"ruiyangzh"},"content":" * Parses input arguments and creates a new AddSellerCommand object","lastModifiedDate":"2023-10-18"},{"lineNumber":27,"author":{"gitId":"andytoh1"},"content":" */","lastModifiedDate":"2023-10-16"},{"lineNumber":28,"author":{"gitId":"andytoh1"},"content":"public class AddSellerCommandParser implements Parser\u003cAddSellerCommand\u003e {","lastModifiedDate":"2023-10-16"},{"lineNumber":29,"author":{"gitId":"andytoh1"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":30,"author":{"gitId":"andytoh1"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":31,"author":{"gitId":"andytoh1"},"content":"     * Parses the given {@code String} of arguments in the context of the AddSellerCommand","lastModifiedDate":"2023-10-16"},{"lineNumber":32,"author":{"gitId":"andytoh1"},"content":"     * and returns an AddSellerCommand object for execution.","lastModifiedDate":"2023-10-16"},{"lineNumber":33,"author":{"gitId":"andytoh1"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-10-16"},{"lineNumber":34,"author":{"gitId":"andytoh1"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":35,"author":{"gitId":"andytoh1"},"content":"    public AddSellerCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-16"},{"lineNumber":36,"author":{"gitId":"andytoh1"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-10-16"},{"lineNumber":37,"author":{"gitId":"andytoh1"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS,","lastModifiedDate":"2023-10-16"},{"lineNumber":38,"author":{"gitId":"andytoh1"},"content":"                        PREFIX_SELLING_ADDRESS, PREFIX_SELL_HOUSE_INFO, PREFIX_TAG);","lastModifiedDate":"2023-10-16"},{"lineNumber":39,"author":{"gitId":"andytoh1"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":40,"author":{"gitId":"andytoh1"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_ADDRESS, PREFIX_PHONE, PREFIX_EMAIL)","lastModifiedDate":"2023-10-16"},{"lineNumber":41,"author":{"gitId":"andytoh1"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2023-10-16"},{"lineNumber":42,"author":{"gitId":"andytoh1"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddSellerCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-16"},{"lineNumber":43,"author":{"gitId":"andytoh1"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":44,"author":{"gitId":"andytoh1"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":45,"author":{"gitId":"andytoh1"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL,","lastModifiedDate":"2023-10-16"},{"lineNumber":46,"author":{"gitId":"andytoh1"},"content":"                PREFIX_ADDRESS, PREFIX_SELLING_ADDRESS);","lastModifiedDate":"2023-10-16"},{"lineNumber":47,"author":{"gitId":"andytoh1"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2023-10-16"},{"lineNumber":48,"author":{"gitId":"andytoh1"},"content":"        Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2023-10-16"},{"lineNumber":49,"author":{"gitId":"andytoh1"},"content":"        Email email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get());","lastModifiedDate":"2023-10-16"},{"lineNumber":50,"author":{"gitId":"andytoh1"},"content":"        Address address \u003d ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get());","lastModifiedDate":"2023-10-16"},{"lineNumber":51,"author":{"gitId":"andytoh1"},"content":"        Address sellingAddress \u003d ParserUtil.parseAddress(argMultimap.getValue(PREFIX_SELLING_ADDRESS).get());","lastModifiedDate":"2023-10-16"},{"lineNumber":52,"author":{"gitId":"andytoh1"},"content":"        SellHouseInfo sellHouseInfo \u003d ParserUtil.parseSellHouseInfo(argMultimap.getValue(PREFIX_SELL_HOUSE_INFO).get());","lastModifiedDate":"2023-10-16"},{"lineNumber":53,"author":{"gitId":"andytoh1"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2023-10-16"},{"lineNumber":54,"author":{"gitId":"andytoh1"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":55,"author":{"gitId":"andytoh1"},"content":"        Seller seller \u003d new Seller(name, phone, email, address, sellingAddress, sellHouseInfo, tagList);","lastModifiedDate":"2023-10-16"},{"lineNumber":56,"author":{"gitId":"andytoh1"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":57,"author":{"gitId":"andytoh1"},"content":"        return new AddSellerCommand(seller);","lastModifiedDate":"2023-10-16"},{"lineNumber":58,"author":{"gitId":"andytoh1"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":59,"author":{"gitId":"andytoh1"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":60,"author":{"gitId":"andytoh1"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":61,"author":{"gitId":"andytoh1"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2023-10-16"},{"lineNumber":62,"author":{"gitId":"andytoh1"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2023-10-16"},{"lineNumber":63,"author":{"gitId":"andytoh1"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":64,"author":{"gitId":"andytoh1"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2023-10-16"},{"lineNumber":65,"author":{"gitId":"andytoh1"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2023-10-16"},{"lineNumber":66,"author":{"gitId":"andytoh1"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":67,"author":{"gitId":"andytoh1"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":68,"author":{"gitId":"andytoh1"},"content":"}","lastModifiedDate":"2023-10-16"}],"authorContributionMap":{"ruiyangzh":1,"andytoh1":67}},{"path":"src/main/java/seedu/address/logic/parser/AddressBookParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-07-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-07-29"},{"lineNumber":11,"author":{"gitId":"peasantbird"},"content":"import seedu.address.logic.commands.AddBuyerCommand;","lastModifiedDate":"2023-10-16"},{"lineNumber":12,"author":{"gitId":"andytoh1"},"content":"import seedu.address.logic.commands.AddSellerCommand;","lastModifiedDate":"2023-10-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2017-01-18"},{"lineNumber":15,"author":{"gitId":"ruiyangzh"},"content":"import seedu.address.logic.commands.DeleteBuyerCommand;","lastModifiedDate":"2023-10-18"},{"lineNumber":16,"author":{"gitId":"ruiyangzh"},"content":"import seedu.address.logic.commands.DeleteSellerCommand;","lastModifiedDate":"2023-10-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":19,"author":{"gitId":"iantsaii"},"content":"import seedu.address.logic.commands.ListBuyersCommand;","lastModifiedDate":"2023-10-16"},{"lineNumber":20,"author":{"gitId":"J-hta-n"},"content":"import seedu.address.logic.commands.ListSellersCommand;","lastModifiedDate":"2023-10-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class AddressBookParser {","lastModifiedDate":"2017-07-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(AddressBookParser.class);","lastModifiedDate":"2023-07-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // Note to developers: Change the log level in config.json to enable lower level (i.e., FINE, FINER and lower)","lastModifiedDate":"2023-07-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // log messages such as the one below.","lastModifiedDate":"2023-07-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // Lower level log messages are used sparingly to minimize noise in the code.","lastModifiedDate":"2023-07-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        logger.fine(\"Command word: \" + commandWord + \"; Arguments: \" + arguments);","lastModifiedDate":"2023-07-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"peasantbird"},"content":"        case AddBuyerCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-16"},{"lineNumber":58,"author":{"gitId":"peasantbird"},"content":"            return new AddBuyerCommandParser().parse(arguments);","lastModifiedDate":"2023-10-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":60,"author":{"gitId":"andytoh1"},"content":"        case AddSellerCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-16"},{"lineNumber":61,"author":{"gitId":"andytoh1"},"content":"            return new AddSellerCommandParser().parse(arguments);","lastModifiedDate":"2023-10-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            return new ClearCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":72,"author":{"gitId":"J-hta-n"},"content":"        case ListSellersCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-16"},{"lineNumber":73,"author":{"gitId":"J-hta-n"},"content":"            return new ListSellersCommand();","lastModifiedDate":"2023-10-16"},{"lineNumber":74,"author":{"gitId":"J-hta-n"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":75,"author":{"gitId":"iantsaii"},"content":"        case ListBuyersCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-16"},{"lineNumber":76,"author":{"gitId":"iantsaii"},"content":"            return new ListBuyersCommand();","lastModifiedDate":"2023-10-16"},{"lineNumber":77,"author":{"gitId":"iantsaii"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":78,"author":{"gitId":"ruiyangzh"},"content":"        case DeleteBuyerCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-18"},{"lineNumber":79,"author":{"gitId":"ruiyangzh"},"content":"            return new DeleteBuyerCommandParser().parse(arguments);","lastModifiedDate":"2023-10-18"},{"lineNumber":80,"author":{"gitId":"ruiyangzh"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":81,"author":{"gitId":"ruiyangzh"},"content":"        case DeleteSellerCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-18"},{"lineNumber":82,"author":{"gitId":"ruiyangzh"},"content":"            return new DeleteSellerCommandParser().parse(arguments);","lastModifiedDate":"2023-10-18"},{"lineNumber":83,"author":{"gitId":"ruiyangzh"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            logger.finer(\"This user input caused a ParseException: \" + userInput);","lastModifiedDate":"2023-07-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"ruiyangzh":8,"andytoh1":3,"peasantbird":3,"iantsaii":4,"-":68,"J-hta-n":4}},{"path":"src/main/java/seedu/address/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2017-06-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"e/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"andytoh1"},"content":"    public static final Prefix PREFIX_ADDRESS \u003d new Prefix(\"ah/\");","lastModifiedDate":"2023-10-16"},{"lineNumber":13,"author":{"gitId":"andytoh1"},"content":"    public static final Prefix PREFIX_SELLING_ADDRESS \u003d new Prefix(\"as/\");","lastModifiedDate":"2023-10-16"},{"lineNumber":14,"author":{"gitId":"andytoh1"},"content":"    public static final Prefix PREFIX_SELL_HOUSE_INFO \u003d new Prefix(\"i/\");","lastModifiedDate":"2023-10-16"},{"lineNumber":15,"author":{"gitId":"peasantbird"},"content":"    public static final Prefix PREFIX_INFO \u003d new Prefix(\"i/\");","lastModifiedDate":"2023-10-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"t/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"andytoh1":3,"peasantbird":1,"-":14}},{"path":"src/main/java/seedu/address/logic/parser/DeleteBuyerCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-18"},{"lineNumber":6,"author":{"gitId":"ruiyangzh"},"content":"import seedu.address.logic.commands.DeleteBuyerCommand;","lastModifiedDate":"2023-10-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2023-10-18"},{"lineNumber":10,"author":{"gitId":"ruiyangzh"},"content":" * Parses input arguments and creates a new DeleteBuyerCommand object","lastModifiedDate":"2023-10-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2023-10-18"},{"lineNumber":12,"author":{"gitId":"ruiyangzh"},"content":"public class DeleteBuyerCommandParser implements Parser\u003cDeleteBuyerCommand\u003e {","lastModifiedDate":"2023-10-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":15,"author":{"gitId":"ruiyangzh"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteBuyerCommand","lastModifiedDate":"2023-10-18"},{"lineNumber":16,"author":{"gitId":"ruiyangzh"},"content":"     * and returns a DeleteBuyerCommand object for execution.","lastModifiedDate":"2023-10-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-10-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":19,"author":{"gitId":"ruiyangzh"},"content":"    public DeleteBuyerCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2023-10-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2023-10-18"},{"lineNumber":22,"author":{"gitId":"ruiyangzh"},"content":"            return new DeleteBuyerCommand(index);","lastModifiedDate":"2023-10-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-10-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2023-10-18"},{"lineNumber":25,"author":{"gitId":"ruiyangzh"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteBuyerCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2023-10-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-10-18"}],"authorContributionMap":{"ruiyangzh":8,"-":20}},{"path":"src/main/java/seedu/address/logic/parser/DeleteSellerCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ruiyangzh"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-18"},{"lineNumber":2,"author":{"gitId":"ruiyangzh"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":3,"author":{"gitId":"ruiyangzh"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-18"},{"lineNumber":4,"author":{"gitId":"ruiyangzh"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":5,"author":{"gitId":"ruiyangzh"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-18"},{"lineNumber":6,"author":{"gitId":"ruiyangzh"},"content":"import seedu.address.logic.commands.DeleteSellerCommand;","lastModifiedDate":"2023-10-18"},{"lineNumber":7,"author":{"gitId":"ruiyangzh"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-18"},{"lineNumber":8,"author":{"gitId":"ruiyangzh"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":9,"author":{"gitId":"ruiyangzh"},"content":"/**","lastModifiedDate":"2023-10-18"},{"lineNumber":10,"author":{"gitId":"ruiyangzh"},"content":" * Parses input arguments and creates a new DeleteSellerCommand object","lastModifiedDate":"2023-10-18"},{"lineNumber":11,"author":{"gitId":"ruiyangzh"},"content":" */","lastModifiedDate":"2023-10-18"},{"lineNumber":12,"author":{"gitId":"ruiyangzh"},"content":"public class DeleteSellerCommandParser implements Parser\u003cDeleteSellerCommand\u003e {","lastModifiedDate":"2023-10-18"},{"lineNumber":13,"author":{"gitId":"ruiyangzh"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":14,"author":{"gitId":"ruiyangzh"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":15,"author":{"gitId":"ruiyangzh"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteSellerCommand","lastModifiedDate":"2023-10-18"},{"lineNumber":16,"author":{"gitId":"ruiyangzh"},"content":"     * and returns a DeleteSellerCommand object for execution.","lastModifiedDate":"2023-10-18"},{"lineNumber":17,"author":{"gitId":"ruiyangzh"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-10-18"},{"lineNumber":18,"author":{"gitId":"ruiyangzh"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":19,"author":{"gitId":"ruiyangzh"},"content":"    public DeleteSellerCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-18"},{"lineNumber":20,"author":{"gitId":"ruiyangzh"},"content":"        try {","lastModifiedDate":"2023-10-18"},{"lineNumber":21,"author":{"gitId":"ruiyangzh"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2023-10-18"},{"lineNumber":22,"author":{"gitId":"ruiyangzh"},"content":"            return new DeleteSellerCommand(index);","lastModifiedDate":"2023-10-18"},{"lineNumber":23,"author":{"gitId":"ruiyangzh"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-10-18"},{"lineNumber":24,"author":{"gitId":"ruiyangzh"},"content":"            throw new ParseException(","lastModifiedDate":"2023-10-18"},{"lineNumber":25,"author":{"gitId":"ruiyangzh"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteSellerCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2023-10-18"},{"lineNumber":26,"author":{"gitId":"ruiyangzh"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":27,"author":{"gitId":"ruiyangzh"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":28,"author":{"gitId":"ruiyangzh"},"content":"}","lastModifiedDate":"2023-10-18"}],"authorContributionMap":{"ruiyangzh":28}},{"path":"src/main/java/seedu/address/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-02-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-02-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-02-11"},{"lineNumber":16,"author":{"gitId":"peasantbird"},"content":"import seedu.address.model.person.buyer.BuyHouseInfo;","lastModifiedDate":"2023-10-16"},{"lineNumber":17,"author":{"gitId":"andytoh1"},"content":"import seedu.address.model.person.seller.SellHouseInfo;","lastModifiedDate":"2023-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-02-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * Parses a {@code String address} into an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code address} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public static Address parseAddress(String address) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-30"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        String trimmedAddress \u003d address.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(trimmedAddress)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            throw new ParseException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return new Address(trimmedAddress);","lastModifiedDate":"2017-05-30"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":85,"author":{"gitId":"andytoh1"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":86,"author":{"gitId":"andytoh1"},"content":"     * Parses a {@code String sellHouseInfo} into a {@code SellHouseInfo}.","lastModifiedDate":"2023-10-16"},{"lineNumber":87,"author":{"gitId":"andytoh1"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-10-16"},{"lineNumber":88,"author":{"gitId":"andytoh1"},"content":"     *","lastModifiedDate":"2023-10-16"},{"lineNumber":89,"author":{"gitId":"andytoh1"},"content":"     * @throws ParseException if the given {@code sellHouseInfo} is invalid.","lastModifiedDate":"2023-10-16"},{"lineNumber":90,"author":{"gitId":"andytoh1"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":91,"author":{"gitId":"andytoh1"},"content":"    public static SellHouseInfo parseSellHouseInfo(String sellHouseInfo) throws ParseException {","lastModifiedDate":"2023-10-16"},{"lineNumber":92,"author":{"gitId":"andytoh1"},"content":"        requireNonNull(sellHouseInfo);","lastModifiedDate":"2023-10-16"},{"lineNumber":93,"author":{"gitId":"ruiyangzh"},"content":"        String trimmedInfo \u003d sellHouseInfo.trim();","lastModifiedDate":"2023-10-17"},{"lineNumber":94,"author":{"gitId":"ruiyangzh"},"content":"        if (!SellHouseInfo.isValidSellHouseInfo(trimmedInfo)) {","lastModifiedDate":"2023-10-17"},{"lineNumber":95,"author":{"gitId":"andytoh1"},"content":"            throw new ParseException(SellHouseInfo.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-16"},{"lineNumber":96,"author":{"gitId":"andytoh1"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":97,"author":{"gitId":"ruiyangzh"},"content":"        return new SellHouseInfo(trimmedInfo);","lastModifiedDate":"2023-10-17"},{"lineNumber":98,"author":{"gitId":"andytoh1"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":99,"author":{"gitId":"andytoh1"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-30"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2017-05-30"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":115,"author":{"gitId":"peasantbird"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":116,"author":{"gitId":"peasantbird"},"content":"     * Parses a {@code String buyHouseInfo} into an {@code BuyHouseInfo}.","lastModifiedDate":"2023-10-16"},{"lineNumber":117,"author":{"gitId":"peasantbird"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-10-16"},{"lineNumber":118,"author":{"gitId":"peasantbird"},"content":"     *","lastModifiedDate":"2023-10-16"},{"lineNumber":119,"author":{"gitId":"peasantbird"},"content":"     * @throws ParseException if the given {@code buyHouseInfo} is invalid.","lastModifiedDate":"2023-10-16"},{"lineNumber":120,"author":{"gitId":"peasantbird"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":121,"author":{"gitId":"peasantbird"},"content":"    public static BuyHouseInfo parseBuyHouseInfo(String buyHouseInfo) throws ParseException {","lastModifiedDate":"2023-10-16"},{"lineNumber":122,"author":{"gitId":"peasantbird"},"content":"        requireNonNull(buyHouseInfo);","lastModifiedDate":"2023-10-16"},{"lineNumber":123,"author":{"gitId":"peasantbird"},"content":"        String trimmedInfo \u003d buyHouseInfo.trim();","lastModifiedDate":"2023-10-16"},{"lineNumber":124,"author":{"gitId":"ruiyangzh"},"content":"        if (!BuyHouseInfo.isValidBuyHouseInfo(trimmedInfo)) {","lastModifiedDate":"2023-10-17"},{"lineNumber":125,"author":{"gitId":"peasantbird"},"content":"            throw new ParseException(BuyHouseInfo.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-16"},{"lineNumber":126,"author":{"gitId":"peasantbird"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":127,"author":{"gitId":"peasantbird"},"content":"        return new BuyHouseInfo(trimmedInfo);","lastModifiedDate":"2023-10-16"},{"lineNumber":128,"author":{"gitId":"peasantbird"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":129,"author":{"gitId":"peasantbird"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    public static Tag parseTag(String tag) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2017-05-30"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        return new Tag(trimmedTag);","lastModifiedDate":"2017-05-30"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2017-03-07"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2017-05-15"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2017-02-11"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2017-02-11"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            tagSet.add(parseTag(tagName));","lastModifiedDate":"2017-05-30"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        return tagSet;","lastModifiedDate":"2017-03-07"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":156,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"ruiyangzh":4,"andytoh1":13,"peasantbird":15,"-":124}},{"path":"src/main/java/seedu/address/model/AddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":9,"author":{"gitId":"J-hta-n"},"content":"import seedu.address.model.person.UniqueDisplayableList;","lastModifiedDate":"2023-10-18"},{"lineNumber":10,"author":{"gitId":"ruiyangzh"},"content":"import seedu.address.model.person.buyer.Buyer;","lastModifiedDate":"2023-10-18"},{"lineNumber":11,"author":{"gitId":"ruiyangzh"},"content":"import seedu.address.model.person.seller.Seller;","lastModifiedDate":"2023-10-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Wraps all data at the address-book level","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Duplicates are not allowed (by .isSamePerson comparison)","lastModifiedDate":"2018-04-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class AddressBook implements ReadOnlyAddressBook {","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"ruiyangzh"},"content":"    private final UniqueDisplayableList\u003cBuyer\u003e buyers;","lastModifiedDate":"2023-10-18"},{"lineNumber":19,"author":{"gitId":"ruiyangzh"},"content":"    private final UniqueDisplayableList\u003cSeller\u003e sellers;","lastModifiedDate":"2023-10-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2019-05-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2016-10-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2016-10-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     *   among constructors.","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    {","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"ruiyangzh"},"content":"        buyers \u003d new UniqueDisplayableList\u003c\u003e();","lastModifiedDate":"2023-10-18"},{"lineNumber":30,"author":{"gitId":"ruiyangzh"},"content":"        sellers \u003d new UniqueDisplayableList\u003c\u003e();","lastModifiedDate":"2023-10-18"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public AddressBook() {}","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Creates an AddressBook using the Persons in the {@code toBeCopied}","lastModifiedDate":"2018-03-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public AddressBook(ReadOnlyAddressBook toBeCopied) {","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2016-12-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2016-12-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    //// list overwrite operations","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"J-hta-n"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":46,"author":{"gitId":"J-hta-n"},"content":"     * Replaces the contents of the buyer list with {@code buyers}.","lastModifiedDate":"2023-10-18"},{"lineNumber":47,"author":{"gitId":"J-hta-n"},"content":"     * {@code buyers} must not contain duplicate buyers.","lastModifiedDate":"2023-10-18"},{"lineNumber":48,"author":{"gitId":"J-hta-n"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":49,"author":{"gitId":"ruiyangzh"},"content":"    public void setBuyers(List\u003cBuyer\u003e buyers) {","lastModifiedDate":"2023-10-18"},{"lineNumber":50,"author":{"gitId":"J-hta-n"},"content":"        this.buyers.setDisplayables(buyers);","lastModifiedDate":"2023-10-18"},{"lineNumber":51,"author":{"gitId":"J-hta-n"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":52,"author":{"gitId":"J-hta-n"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Replaces the contents of the person list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":57,"author":{"gitId":"ruiyangzh"},"content":"    public void setSellers(List\u003cSeller\u003e sellers) {","lastModifiedDate":"2023-10-18"},{"lineNumber":58,"author":{"gitId":"J-hta-n"},"content":"        this.sellers.setDisplayables(sellers);","lastModifiedDate":"2023-10-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code AddressBook} with {@code newData}.","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyAddressBook newData) {","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        requireNonNull(newData);","lastModifiedDate":"2017-05-15"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-20"},{"lineNumber":67,"author":{"gitId":"J-hta-n"},"content":"        setBuyers(newData.getBuyerList());","lastModifiedDate":"2023-10-18"},{"lineNumber":68,"author":{"gitId":"J-hta-n"},"content":"        setSellers(newData.getSellerList());","lastModifiedDate":"2023-10-18"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    //// person-level operations","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":74,"author":{"gitId":"J-hta-n"},"content":"     * Returns true if a buyer with the same identity as {@code buyer} exists in the address book\u0027s buyer list.","lastModifiedDate":"2023-10-18"},{"lineNumber":75,"author":{"gitId":"J-hta-n"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":76,"author":{"gitId":"ruiyangzh"},"content":"    public boolean hasBuyer(Buyer buyer) {","lastModifiedDate":"2023-10-18"},{"lineNumber":77,"author":{"gitId":"J-hta-n"},"content":"        requireNonNull(buyer);","lastModifiedDate":"2023-10-18"},{"lineNumber":78,"author":{"gitId":"J-hta-n"},"content":"        return buyers.contains(buyer);","lastModifiedDate":"2023-10-18"},{"lineNumber":79,"author":{"gitId":"J-hta-n"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":80,"author":{"gitId":"J-hta-n"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":81,"author":{"gitId":"J-hta-n"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":82,"author":{"gitId":"J-hta-n"},"content":"     * Returns true if a seller with the same identity as {@code seller} exists in the address book\u0027s seller list.","lastModifiedDate":"2023-10-18"},{"lineNumber":83,"author":{"gitId":"J-hta-n"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":84,"author":{"gitId":"ruiyangzh"},"content":"    public boolean hasSeller(Seller seller) {","lastModifiedDate":"2023-10-18"},{"lineNumber":85,"author":{"gitId":"J-hta-n"},"content":"        requireNonNull(seller);","lastModifiedDate":"2023-10-18"},{"lineNumber":86,"author":{"gitId":"J-hta-n"},"content":"        return sellers.contains(seller);","lastModifiedDate":"2023-10-18"},{"lineNumber":87,"author":{"gitId":"J-hta-n"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":88,"author":{"gitId":"J-hta-n"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":89,"author":{"gitId":"J-hta-n"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":90,"author":{"gitId":"J-hta-n"},"content":"     * Adds a buyer to the address book\u0027s buyer list.","lastModifiedDate":"2023-10-18"},{"lineNumber":91,"author":{"gitId":"J-hta-n"},"content":"     * The buyer must not already exist in the buyer list.","lastModifiedDate":"2023-10-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":93,"author":{"gitId":"ruiyangzh"},"content":"    public void addBuyer(Buyer buyer) {","lastModifiedDate":"2023-10-18"},{"lineNumber":94,"author":{"gitId":"J-hta-n"},"content":"        buyers.add(buyer);","lastModifiedDate":"2023-10-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":98,"author":{"gitId":"J-hta-n"},"content":"     * Adds a seller to the address book\u0027s seller list.","lastModifiedDate":"2023-10-18"},{"lineNumber":99,"author":{"gitId":"J-hta-n"},"content":"     * The seller must not already exist in the seller list.","lastModifiedDate":"2023-10-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":101,"author":{"gitId":"ruiyangzh"},"content":"    public void addSeller(Seller seller) {","lastModifiedDate":"2023-10-18"},{"lineNumber":102,"author":{"gitId":"J-hta-n"},"content":"        sellers.add(seller);","lastModifiedDate":"2023-10-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"J-hta-n"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":107,"author":{"gitId":"J-hta-n"},"content":"     * Replaces the given buyer {@code targetBuyer} in the list with {@code editedBuyer}.","lastModifiedDate":"2023-10-18"},{"lineNumber":108,"author":{"gitId":"J-hta-n"},"content":"     * {@code targetBuyer} must exist in the address book\u0027s buyer list.","lastModifiedDate":"2023-10-18"},{"lineNumber":109,"author":{"gitId":"J-hta-n"},"content":"     * The buyer identity of {@code editedBuyer} must not be the same as another existing buyer in the buyer list.","lastModifiedDate":"2023-10-18"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":111,"author":{"gitId":"ruiyangzh"},"content":"    public void setBuyer(Buyer targetBuyer, Buyer editedBuyer) {","lastModifiedDate":"2023-10-18"},{"lineNumber":112,"author":{"gitId":"J-hta-n"},"content":"        requireNonNull(editedBuyer);","lastModifiedDate":"2023-10-18"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":114,"author":{"gitId":"J-hta-n"},"content":"        buyers.setDisplayable(targetBuyer, editedBuyer);","lastModifiedDate":"2023-10-18"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":118,"author":{"gitId":"J-hta-n"},"content":"     * Replaces the given seller {@code targetSeller} in the list with {@code editedSeller}.","lastModifiedDate":"2023-10-18"},{"lineNumber":119,"author":{"gitId":"J-hta-n"},"content":"     * {@code targetSeller} must exist in the address book\u0027s seller list.","lastModifiedDate":"2023-10-18"},{"lineNumber":120,"author":{"gitId":"J-hta-n"},"content":"     * The seller identity of {@code editedSeller} must not be the same as another existing seller in the seller list.","lastModifiedDate":"2023-10-18"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":122,"author":{"gitId":"ruiyangzh"},"content":"    public void setSeller(Seller targetSeller, Seller editedSeller) {","lastModifiedDate":"2023-10-18"},{"lineNumber":123,"author":{"gitId":"J-hta-n"},"content":"        requireNonNull(editedSeller);","lastModifiedDate":"2023-10-18"},{"lineNumber":124,"author":{"gitId":"J-hta-n"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":125,"author":{"gitId":"J-hta-n"},"content":"        sellers.setDisplayable(targetSeller, editedSeller);","lastModifiedDate":"2023-10-18"},{"lineNumber":126,"author":{"gitId":"J-hta-n"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":127,"author":{"gitId":"J-hta-n"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":128,"author":{"gitId":"J-hta-n"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":129,"author":{"gitId":"J-hta-n"},"content":"     * Removes {@code buyerKey} from this {@code AddressBook\u0027s buyer list}.","lastModifiedDate":"2023-10-18"},{"lineNumber":130,"author":{"gitId":"J-hta-n"},"content":"     * {@code buyerKey} must exist in the address book\u0027s buyer list.","lastModifiedDate":"2023-10-18"},{"lineNumber":131,"author":{"gitId":"J-hta-n"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":132,"author":{"gitId":"ruiyangzh"},"content":"    public void removeBuyer(Buyer buyerKey) {","lastModifiedDate":"2023-10-18"},{"lineNumber":133,"author":{"gitId":"J-hta-n"},"content":"        buyers.remove(buyerKey);","lastModifiedDate":"2023-10-18"},{"lineNumber":134,"author":{"gitId":"J-hta-n"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":135,"author":{"gitId":"J-hta-n"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":136,"author":{"gitId":"J-hta-n"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":137,"author":{"gitId":"J-hta-n"},"content":"     * Removes {@code sellerKey} from this {@code AddressBook\u0027s seller list}.","lastModifiedDate":"2023-10-18"},{"lineNumber":138,"author":{"gitId":"J-hta-n"},"content":"     * {@code sellerKey} must exist in the address book\u0027s seller list.","lastModifiedDate":"2023-10-18"},{"lineNumber":139,"author":{"gitId":"J-hta-n"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":140,"author":{"gitId":"ruiyangzh"},"content":"    public void removeSeller(Seller sellerKey) {","lastModifiedDate":"2023-10-18"},{"lineNumber":141,"author":{"gitId":"ruiyangzh"},"content":"        sellers.remove(sellerKey);","lastModifiedDate":"2023-10-18"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    //// util methods","lastModifiedDate":"2016-08-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":149,"author":{"gitId":"J-hta-n"},"content":"                .add(\"buyers\", buyers)","lastModifiedDate":"2023-10-18"},{"lineNumber":150,"author":{"gitId":"J-hta-n"},"content":"                .add(\"sellers\", sellers)","lastModifiedDate":"2023-10-18"},{"lineNumber":151,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":155,"author":{"gitId":"ruiyangzh"},"content":"    public ObservableList\u003cBuyer\u003e getBuyerList() {","lastModifiedDate":"2023-10-18"},{"lineNumber":156,"author":{"gitId":"J-hta-n"},"content":"        return buyers.asUnmodifiableObservableList();","lastModifiedDate":"2023-10-18"},{"lineNumber":157,"author":{"gitId":"J-hta-n"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":158,"author":{"gitId":"J-hta-n"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":159,"author":{"gitId":"J-hta-n"},"content":"    @Override","lastModifiedDate":"2023-10-18"},{"lineNumber":160,"author":{"gitId":"ruiyangzh"},"content":"    public ObservableList\u003cSeller\u003e getSellerList() {","lastModifiedDate":"2023-10-18"},{"lineNumber":161,"author":{"gitId":"J-hta-n"},"content":"        return sellers.asUnmodifiableObservableList();","lastModifiedDate":"2023-10-18"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-01"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-01"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":167,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        if (!(other instanceof AddressBook)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":172,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        AddressBook otherAddressBook \u003d (AddressBook) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":176,"author":{"gitId":"J-hta-n"},"content":"        return buyers.equals(otherAddressBook.buyers) \u0026\u0026 sellers.equals(otherAddressBook.sellers);","lastModifiedDate":"2023-10-18"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":181,"author":{"gitId":"J-hta-n"},"content":"        return buyers.hashCode() ^ sellers.hashCode();","lastModifiedDate":"2023-10-18"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"ruiyangzh":19,"-":99,"J-hta-n":65}},{"path":"src/main/java/seedu/address/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":9,"author":{"gitId":"iantsaii"},"content":"import seedu.address.model.person.buyer.Buyer;","lastModifiedDate":"2023-10-16"},{"lineNumber":10,"author":{"gitId":"J-hta-n"},"content":"import seedu.address.model.person.seller.Seller;","lastModifiedDate":"2023-10-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2017-08-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    Predicate\u003cPerson\u003e PREDICATE_SHOW_ALL_PERSONS \u003d unused -\u003e true;","lastModifiedDate":"2018-01-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":19,"author":{"gitId":"J-hta-n"},"content":"    /** {@code Predicate} that evaluates to true only for sellers */","lastModifiedDate":"2023-10-16"},{"lineNumber":20,"author":{"gitId":"ruiyangzh"},"content":"    Predicate\u003cSeller\u003e PREDICATE_SHOW_SELLERS \u003d unused -\u003e true;","lastModifiedDate":"2023-10-18"},{"lineNumber":21,"author":{"gitId":"J-hta-n"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":22,"author":{"gitId":"iantsaii"},"content":"    /** {@code Predicate} that evaluates to true only for buyers */","lastModifiedDate":"2023-10-16"},{"lineNumber":23,"author":{"gitId":"ruiyangzh"},"content":"    Predicate\u003cBuyer\u003e PREDICATE_SHOW_BUYERS \u003d unused -\u003e true;","lastModifiedDate":"2023-10-18"},{"lineNumber":24,"author":{"gitId":"iantsaii"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"ruiyangzh"},"content":"    Path getFilePath();","lastModifiedDate":"2023-10-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"ruiyangzh"},"content":"    void setAddressBookFilePath(Path filePath);","lastModifiedDate":"2023-10-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Replaces address book data with the data in {@code addressBook}.","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    void setAddressBook(ReadOnlyAddressBook addressBook);","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /** Returns the AddressBook */","lastModifiedDate":"2016-09-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"J-hta-n"},"content":"     * Returns true if a buyer with the same identity as {@code buyer} exists in the address book\u0027s buyer list.","lastModifiedDate":"2023-10-18"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"ruiyangzh"},"content":"    boolean hasBuyer(Buyer buyer);","lastModifiedDate":"2023-10-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":68,"author":{"gitId":"J-hta-n"},"content":"     * Returns true if a seller with the same identity as {@code seller} exists in the address book\u0027s seller list.","lastModifiedDate":"2023-10-18"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":70,"author":{"gitId":"ruiyangzh"},"content":"    boolean hasSeller(Seller seller);","lastModifiedDate":"2023-10-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":73,"author":{"gitId":"J-hta-n"},"content":"     * Deletes the given buyer.","lastModifiedDate":"2023-10-18"},{"lineNumber":74,"author":{"gitId":"J-hta-n"},"content":"     * The buyer must exist in the address book\u0027s buyer list.","lastModifiedDate":"2023-10-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":76,"author":{"gitId":"ruiyangzh"},"content":"    void deleteBuyer(Buyer targetBuyer);","lastModifiedDate":"2023-10-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":79,"author":{"gitId":"J-hta-n"},"content":"     * Deletes the given seller.","lastModifiedDate":"2023-10-18"},{"lineNumber":80,"author":{"gitId":"J-hta-n"},"content":"     * The seller must exist in the address book\u0027s seller list.","lastModifiedDate":"2023-10-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":82,"author":{"gitId":"ruiyangzh"},"content":"    void deleteSeller(Seller targetSeller);","lastModifiedDate":"2023-10-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":84,"author":{"gitId":"J-hta-n"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":85,"author":{"gitId":"J-hta-n"},"content":"     * Adds the given buyer.","lastModifiedDate":"2023-10-18"},{"lineNumber":86,"author":{"gitId":"J-hta-n"},"content":"     * {@code buyer} must not already exist in the address book\u0027s buyer list.","lastModifiedDate":"2023-10-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":88,"author":{"gitId":"ruiyangzh"},"content":"    void addBuyer(Buyer buyer);","lastModifiedDate":"2023-10-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":91,"author":{"gitId":"J-hta-n"},"content":"     * Adds the given seller.","lastModifiedDate":"2023-10-18"},{"lineNumber":92,"author":{"gitId":"J-hta-n"},"content":"     * {@code seller} must not already exist in the address book\u0027s seller list.","lastModifiedDate":"2023-10-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":94,"author":{"gitId":"ruiyangzh"},"content":"    void addSeller(Seller seller);","lastModifiedDate":"2023-10-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":97,"author":{"gitId":"J-hta-n"},"content":"     * Replaces the given buyer {@code targetBuyer} with {@code editedBuyer}.","lastModifiedDate":"2023-10-18"},{"lineNumber":98,"author":{"gitId":"J-hta-n"},"content":"     * {@code targetBuyer} must exist in the address book\u0027s buyer list.","lastModifiedDate":"2023-10-18"},{"lineNumber":99,"author":{"gitId":"J-hta-n"},"content":"     * The person identity of {@code editedBuyer} must not be the same as another existing buyer in the buyer list.","lastModifiedDate":"2023-10-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":101,"author":{"gitId":"ruiyangzh"},"content":"    void setBuyer(Buyer targetBuyer, Buyer editedBuyer);","lastModifiedDate":"2023-10-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":104,"author":{"gitId":"J-hta-n"},"content":"     * Replaces the given seller {@code targetSeller} with {@code editedSeller}.","lastModifiedDate":"2023-10-18"},{"lineNumber":105,"author":{"gitId":"J-hta-n"},"content":"     * {@code targetSeller} must exist in the address book\u0027s seller list.","lastModifiedDate":"2023-10-18"},{"lineNumber":106,"author":{"gitId":"J-hta-n"},"content":"     * The person identity of {@code editedSeller} must not be the same as another existing seller in the seller list.","lastModifiedDate":"2023-10-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":108,"author":{"gitId":"ruiyangzh"},"content":"    void setSeller(Seller targetSeller, Seller editedSeller);","lastModifiedDate":"2023-10-18"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":110,"author":{"gitId":"J-hta-n"},"content":"    /** Returns an unmodifiable view of the filtered buyer list */","lastModifiedDate":"2023-10-18"},{"lineNumber":111,"author":{"gitId":"ruiyangzh"},"content":"    ObservableList\u003cBuyer\u003e getFilteredBuyerList();","lastModifiedDate":"2023-10-18"},{"lineNumber":112,"author":{"gitId":"J-hta-n"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":113,"author":{"gitId":"J-hta-n"},"content":"    /** Returns an unmodifiable view of the filtered seller list */","lastModifiedDate":"2023-10-18"},{"lineNumber":114,"author":{"gitId":"ruiyangzh"},"content":"    ObservableList\u003cSeller\u003e getFilteredSellerList();","lastModifiedDate":"2023-10-18"},{"lineNumber":115,"author":{"gitId":"J-hta-n"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":116,"author":{"gitId":"J-hta-n"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":117,"author":{"gitId":"J-hta-n"},"content":"     * Updates the filter of the filtered buyer list to filter by the given {@code predicate}.","lastModifiedDate":"2023-10-18"},{"lineNumber":118,"author":{"gitId":"J-hta-n"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2023-10-18"},{"lineNumber":119,"author":{"gitId":"J-hta-n"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":120,"author":{"gitId":"ruiyangzh"},"content":"    void updateFilteredBuyerList(Predicate\u003cBuyer\u003e predicate);","lastModifiedDate":"2023-10-18"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":123,"author":{"gitId":"J-hta-n"},"content":"     * Updates the filter of the filtered seller list to filter by the given {@code predicate}.","lastModifiedDate":"2023-10-18"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":126,"author":{"gitId":"ruiyangzh"},"content":"    void updateFilteredSellerList(Predicate\u003cSeller\u003e predicate);","lastModifiedDate":"2023-10-18"},{"lineNumber":127,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"ruiyangzh":16,"iantsaii":3,"-":79,"J-hta-n":29}},{"path":"src/main/java/seedu/address/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":14,"author":{"gitId":"ruiyangzh"},"content":"import seedu.address.model.person.buyer.Buyer;","lastModifiedDate":"2023-10-18"},{"lineNumber":15,"author":{"gitId":"ruiyangzh"},"content":"import seedu.address.model.person.seller.Seller;","lastModifiedDate":"2023-10-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Represents the in-memory model of the address book data.","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"ruiyangzh"},"content":"    private final FilteredList\u003cBuyer\u003e filteredBuyers;","lastModifiedDate":"2023-10-18"},{"lineNumber":26,"author":{"gitId":"J-hta-n"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":27,"author":{"gitId":"ruiyangzh"},"content":"    private final FilteredList\u003cSeller\u003e filteredSellers;","lastModifiedDate":"2023-10-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Initializes a ModelManager with the given addressBook and userPrefs.","lastModifiedDate":"2016-12-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public ModelManager(ReadOnlyAddressBook addressBook, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        requireAllNonNull(addressBook, userPrefs);","lastModifiedDate":"2017-05-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        logger.fine(\"Initializing with address book: \" + addressBook + \" and user prefs \" + userPrefs);","lastModifiedDate":"2016-12-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.addressBook \u003d new AddressBook(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":39,"author":{"gitId":"J-hta-n"},"content":"        filteredBuyers \u003d new FilteredList\u003c\u003e(this.addressBook.getBuyerList());","lastModifiedDate":"2023-10-18"},{"lineNumber":40,"author":{"gitId":"J-hta-n"},"content":"        filteredSellers \u003d new FilteredList\u003c\u003e(this.addressBook.getSellerList());","lastModifiedDate":"2023-10-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this(new AddressBook(), new UserPrefs());","lastModifiedDate":"2016-09-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"ruiyangzh"},"content":"    public Path getFilePath() {","lastModifiedDate":"2023-10-19"},{"lineNumber":73,"author":{"gitId":"ruiyangzh"},"content":"        return userPrefs.getFilePath();","lastModifiedDate":"2023-10-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"ruiyangzh"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-10-18"},{"lineNumber":78,"author":{"gitId":"ruiyangzh"},"content":"    public void setAddressBookFilePath(Path filePath) {","lastModifiedDate":"2023-10-19"},{"lineNumber":79,"author":{"gitId":"ruiyangzh"},"content":"        requireAllNonNull(filePath);","lastModifiedDate":"2023-10-19"},{"lineNumber":80,"author":{"gitId":"ruiyangzh"},"content":"        userPrefs.setAddressBookFilePath(filePath);","lastModifiedDate":"2023-10-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void setAddressBook(ReadOnlyAddressBook addressBook) {","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        this.addressBook.resetData(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2016-09-21"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":96,"author":{"gitId":"ruiyangzh"},"content":"    public boolean hasBuyer(Buyer buyer) {","lastModifiedDate":"2023-10-18"},{"lineNumber":97,"author":{"gitId":"J-hta-n"},"content":"        requireNonNull(buyer);","lastModifiedDate":"2023-10-18"},{"lineNumber":98,"author":{"gitId":"J-hta-n"},"content":"        return addressBook.hasBuyer(buyer);","lastModifiedDate":"2023-10-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-10-18"},{"lineNumber":102,"author":{"gitId":"ruiyangzh"},"content":"    public boolean hasSeller(Seller seller) {","lastModifiedDate":"2023-10-18"},{"lineNumber":103,"author":{"gitId":"J-hta-n"},"content":"        requireNonNull(seller);","lastModifiedDate":"2023-10-18"},{"lineNumber":104,"author":{"gitId":"J-hta-n"},"content":"        return addressBook.hasSeller(seller);","lastModifiedDate":"2023-10-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-10-18"},{"lineNumber":108,"author":{"gitId":"ruiyangzh"},"content":"    public void deleteBuyer(Buyer targetBuyer) {","lastModifiedDate":"2023-10-18"},{"lineNumber":109,"author":{"gitId":"J-hta-n"},"content":"        addressBook.removeBuyer(targetBuyer);","lastModifiedDate":"2023-10-18"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-10-18"},{"lineNumber":113,"author":{"gitId":"ruiyangzh"},"content":"    public void deleteSeller(Seller targetSeller) {","lastModifiedDate":"2023-10-18"},{"lineNumber":114,"author":{"gitId":"J-hta-n"},"content":"        addressBook.removeSeller(targetSeller);","lastModifiedDate":"2023-10-18"},{"lineNumber":115,"author":{"gitId":"J-hta-n"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":117,"author":{"gitId":"J-hta-n"},"content":"    @Override","lastModifiedDate":"2023-10-18"},{"lineNumber":118,"author":{"gitId":"ruiyangzh"},"content":"    public void addBuyer(Buyer buyer) {","lastModifiedDate":"2023-10-18"},{"lineNumber":119,"author":{"gitId":"J-hta-n"},"content":"        addressBook.addBuyer(buyer);","lastModifiedDate":"2023-10-18"},{"lineNumber":120,"author":{"gitId":"J-hta-n"},"content":"        updateFilteredBuyerList(PREDICATE_SHOW_BUYERS);","lastModifiedDate":"2023-10-18"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":124,"author":{"gitId":"ruiyangzh"},"content":"    public void addSeller(Seller seller) {","lastModifiedDate":"2023-10-18"},{"lineNumber":125,"author":{"gitId":"J-hta-n"},"content":"        addressBook.addSeller(seller);","lastModifiedDate":"2023-10-18"},{"lineNumber":126,"author":{"gitId":"J-hta-n"},"content":"        updateFilteredSellerList(PREDICATE_SHOW_SELLERS);","lastModifiedDate":"2023-10-18"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":130,"author":{"gitId":"ruiyangzh"},"content":"    public void setBuyer(Buyer targetBuyer, Buyer editedBuyer) {","lastModifiedDate":"2023-10-18"},{"lineNumber":131,"author":{"gitId":"J-hta-n"},"content":"        requireAllNonNull(targetBuyer, editedBuyer);","lastModifiedDate":"2023-10-18"},{"lineNumber":132,"author":{"gitId":"J-hta-n"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":133,"author":{"gitId":"J-hta-n"},"content":"        addressBook.setBuyer(targetBuyer, editedBuyer);","lastModifiedDate":"2023-10-18"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":137,"author":{"gitId":"ruiyangzh"},"content":"    public void setSeller(Seller targetSeller, Seller editedSeller) {","lastModifiedDate":"2023-10-18"},{"lineNumber":138,"author":{"gitId":"J-hta-n"},"content":"        requireAllNonNull(targetSeller, editedSeller);","lastModifiedDate":"2023-10-18"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":140,"author":{"gitId":"J-hta-n"},"content":"        addressBook.setSeller(targetSeller, editedSeller);","lastModifiedDate":"2023-10-18"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Person List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-10-12"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":146,"author":{"gitId":"J-hta-n"},"content":"     * Returns an unmodifiable view of the list of {@code Buyer} backed by the internal list of","lastModifiedDate":"2023-10-18"},{"lineNumber":147,"author":{"gitId":"J-hta-n"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2023-10-18"},{"lineNumber":148,"author":{"gitId":"J-hta-n"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":149,"author":{"gitId":"J-hta-n"},"content":"    @Override","lastModifiedDate":"2023-10-18"},{"lineNumber":150,"author":{"gitId":"ruiyangzh"},"content":"    public ObservableList\u003cBuyer\u003e getFilteredBuyerList() {","lastModifiedDate":"2023-10-18"},{"lineNumber":151,"author":{"gitId":"J-hta-n"},"content":"        return filteredBuyers;","lastModifiedDate":"2023-10-18"},{"lineNumber":152,"author":{"gitId":"J-hta-n"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":153,"author":{"gitId":"J-hta-n"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":154,"author":{"gitId":"J-hta-n"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":155,"author":{"gitId":"J-hta-n"},"content":"     * Returns an unmodifiable view of the list of {@code Buyer} backed by the internal list of","lastModifiedDate":"2023-10-18"},{"lineNumber":156,"author":{"gitId":"-"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2018-06-11"},{"lineNumber":157,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":159,"author":{"gitId":"ruiyangzh"},"content":"    public ObservableList\u003cSeller\u003e getFilteredSellerList() {","lastModifiedDate":"2023-10-18"},{"lineNumber":160,"author":{"gitId":"J-hta-n"},"content":"        return filteredSellers;","lastModifiedDate":"2023-10-18"},{"lineNumber":161,"author":{"gitId":"J-hta-n"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":162,"author":{"gitId":"J-hta-n"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":163,"author":{"gitId":"J-hta-n"},"content":"    @Override","lastModifiedDate":"2023-10-18"},{"lineNumber":164,"author":{"gitId":"ruiyangzh"},"content":"    public void updateFilteredBuyerList(Predicate\u003cBuyer\u003e predicate) {","lastModifiedDate":"2023-10-18"},{"lineNumber":165,"author":{"gitId":"J-hta-n"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2023-10-18"},{"lineNumber":166,"author":{"gitId":"J-hta-n"},"content":"        filteredBuyers.setPredicate(predicate);","lastModifiedDate":"2023-10-18"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":170,"author":{"gitId":"ruiyangzh"},"content":"    public void updateFilteredSellerList(Predicate\u003cSeller\u003e predicate) {","lastModifiedDate":"2023-10-18"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":172,"author":{"gitId":"J-hta-n"},"content":"        filteredSellers.setPredicate(predicate);","lastModifiedDate":"2023-10-18"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-07-13"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":178,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        if (!(other instanceof ModelManager)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":183,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        ModelManager otherModelManager \u003d (ModelManager) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        return addressBook.equals(otherModelManager.addressBook)","lastModifiedDate":"2023-07-13"},{"lineNumber":188,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(otherModelManager.userPrefs)","lastModifiedDate":"2023-07-13"},{"lineNumber":189,"author":{"gitId":"J-hta-n"},"content":"                \u0026\u0026 filteredBuyers.equals(otherModelManager.filteredBuyers)","lastModifiedDate":"2023-10-18"},{"lineNumber":190,"author":{"gitId":"J-hta-n"},"content":"                \u0026\u0026 filteredSellers.equals(otherModelManager.filteredSellers);","lastModifiedDate":"2023-10-18"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"ruiyangzh":22,"-":133,"J-hta-n":38}},{"path":"src/main/java/seedu/address/model/ReadOnlyAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"ruiyangzh"},"content":"import seedu.address.model.person.buyer.Buyer;","lastModifiedDate":"2023-10-18"},{"lineNumber":5,"author":{"gitId":"ruiyangzh"},"content":"import seedu.address.model.person.seller.Seller;","lastModifiedDate":"2023-10-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Unmodifiable view of an address book","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public interface ReadOnlyAddressBook {","lastModifiedDate":"2019-01-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"J-hta-n"},"content":"     * Returns an unmodifiable view of the buyers list.","lastModifiedDate":"2023-10-18"},{"lineNumber":13,"author":{"gitId":"J-hta-n"},"content":"     * This list will not contain any duplicate buyers.","lastModifiedDate":"2023-10-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"ruiyangzh"},"content":"    ObservableList\u003cBuyer\u003e getBuyerList();","lastModifiedDate":"2023-10-18"},{"lineNumber":16,"author":{"gitId":"J-hta-n"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":17,"author":{"gitId":"J-hta-n"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":18,"author":{"gitId":"J-hta-n"},"content":"     * Returns an unmodifiable view of the sellers list.","lastModifiedDate":"2023-10-18"},{"lineNumber":19,"author":{"gitId":"J-hta-n"},"content":"     * This list will not contain any duplicate sellers.","lastModifiedDate":"2023-10-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":21,"author":{"gitId":"ruiyangzh"},"content":"    ObservableList\u003cSeller\u003e getSellerList();","lastModifiedDate":"2023-10-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"ruiyangzh":4,"-":13,"J-hta-n":6}},{"path":"src/main/java/seedu/address/model/ReadOnlyUserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2018-11-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Unmodifiable view of user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public interface ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"ruiyangzh"},"content":"    Path getFilePath();","lastModifiedDate":"2023-10-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-11-27"}],"authorContributionMap":{"ruiyangzh":1,"-":14}},{"path":"src/main/java/seedu/address/model/UserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"ruiyangzh"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents User\u0027s preferences.","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class UserPrefs implements ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private GuiSettings guiSettings \u003d new GuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"ruiyangzh"},"content":"    private Path filePath \u003d Paths.get(\"data\" , \"addressbook.json\");","lastModifiedDate":"2023-10-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with default values.","lastModifiedDate":"2018-12-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public UserPrefs() {}","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with the prefs in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public UserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2018-12-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code UserPrefs} with {@code newUserPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyUserPrefs newUserPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        requireNonNull(newUserPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        setGuiSettings(newUserPrefs.getGuiSettings());","lastModifiedDate":"2018-12-06"},{"lineNumber":38,"author":{"gitId":"ruiyangzh"},"content":"        setAddressBookFilePath(newUserPrefs.getFilePath());","lastModifiedDate":"2023-10-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return guiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        this.guiSettings \u003d guiSettings;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"ruiyangzh"},"content":"    public Path getFilePath() {","lastModifiedDate":"2023-10-19"},{"lineNumber":51,"author":{"gitId":"ruiyangzh"},"content":"        return filePath;","lastModifiedDate":"2023-10-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":55,"author":{"gitId":"ruiyangzh"},"content":"    public void setAddressBookFilePath(Path filePath) {","lastModifiedDate":"2023-10-19"},{"lineNumber":56,"author":{"gitId":"ruiyangzh"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2023-10-19"},{"lineNumber":57,"author":{"gitId":"ruiyangzh"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-10-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        if (!(other instanceof UserPrefs)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        UserPrefs otherUserPrefs \u003d (UserPrefs) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return guiSettings.equals(otherUserPrefs.guiSettings)","lastModifiedDate":"2023-07-13"},{"lineNumber":73,"author":{"gitId":"ruiyangzh"},"content":"                \u0026\u0026 filePath.equals(otherUserPrefs.filePath);","lastModifiedDate":"2023-10-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"ruiyangzh"},"content":"        return Objects.hash(guiSettings, filePath);","lastModifiedDate":"2023-10-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-02-25"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        sb.append(\"Gui Settings : \" + guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"ruiyangzh"},"content":"        sb.append(\"\\nLocal data file location : \" + filePath);","lastModifiedDate":"2023-10-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-02-25"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"ruiyangzh":11,"-":78}},{"path":"src/main/java/seedu/address/model/person/Person.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-03-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-03-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":11,"author":{"gitId":"J-hta-n"},"content":"import seedu.address.model.util.Displayable;","lastModifiedDate":"2023-10-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Represents a Person in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2017-12-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"ruiyangzh"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":17,"author":{"gitId":"ruiyangzh"},"content":"public abstract class Person implements Displayable {","lastModifiedDate":"2023-10-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    // Data fields","lastModifiedDate":"2018-04-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final Address address;","lastModifiedDate":"2018-04-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public Person(Name name, Phone phone, Email email, Address address, Set\u003cTag\u003e tags) {","lastModifiedDate":"2017-03-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        requireAllNonNull(name, phone, email, address, tags);","lastModifiedDate":"2017-05-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2017-12-20"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2017-12-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2017-12-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public Name getName() {","lastModifiedDate":"2017-07-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2017-12-20"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public Phone getPhone() {","lastModifiedDate":"2017-07-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public Email getEmail() {","lastModifiedDate":"2017-07-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return email;","lastModifiedDate":"2017-12-20"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public Address getAddress() {","lastModifiedDate":"2017-07-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return address;","lastModifiedDate":"2017-12-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2017-03-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * if modification is attempted.","lastModifiedDate":"2017-03-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same name.","lastModifiedDate":"2020-12-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * This defines a weaker notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public boolean isSamePerson(Person otherPerson) {","lastModifiedDate":"2018-04-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        if (otherPerson \u003d\u003d this) {","lastModifiedDate":"2018-04-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return otherPerson !\u003d null","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getName().equals(getName());","lastModifiedDate":"2020-12-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"ruiyangzh"},"content":"    public boolean isSameDisplayable(Displayable displayable) {","lastModifiedDate":"2023-10-18"},{"lineNumber":78,"author":{"gitId":"ruiyangzh"},"content":"        return ((displayable instanceof Person) \u0026\u0026 isSamePerson((Person) displayable));","lastModifiedDate":"2023-10-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-01-10"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":82,"author":{"gitId":"ruiyangzh"},"content":"     * A partial equalsHelper for subclasses.","lastModifiedDate":"2023-10-18"},{"lineNumber":83,"author":{"gitId":"ruiyangzh"},"content":"     * @param otherPerson the other person to compare against.","lastModifiedDate":"2023-10-18"},{"lineNumber":84,"author":{"gitId":"ruiyangzh"},"content":"     * @return whether these fields are equal.","lastModifiedDate":"2023-10-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":86,"author":{"gitId":"ruiyangzh"},"content":"    public boolean equalsHelper(Person otherPerson) {","lastModifiedDate":"2023-10-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        return name.equals(otherPerson.name)","lastModifiedDate":"2023-07-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"                \u0026\u0026 phone.equals(otherPerson.phone)","lastModifiedDate":"2023-07-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"                \u0026\u0026 email.equals(otherPerson.email)","lastModifiedDate":"2023-07-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"                \u0026\u0026 address.equals(otherPerson.address)","lastModifiedDate":"2023-07-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"                \u0026\u0026 tags.equals(otherPerson.tags);","lastModifiedDate":"2023-07-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":94,"author":{"gitId":"ruiyangzh"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":95,"author":{"gitId":"ruiyangzh"},"content":"     * A partial string builder for subclasses.","lastModifiedDate":"2023-10-18"},{"lineNumber":96,"author":{"gitId":"ruiyangzh"},"content":"     * @return a ToStringBuilder with loaded values, for subclasses to add onto.","lastModifiedDate":"2023-10-18"},{"lineNumber":97,"author":{"gitId":"ruiyangzh"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":98,"author":{"gitId":"ruiyangzh"},"content":"    public ToStringBuilder toStringBuild() {","lastModifiedDate":"2023-10-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"                .add(\"name\", name)","lastModifiedDate":"2019-02-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"                .add(\"phone\", phone)","lastModifiedDate":"2019-02-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"                .add(\"email\", email)","lastModifiedDate":"2019-02-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"                .add(\"address\", address)","lastModifiedDate":"2019-02-23"},{"lineNumber":104,"author":{"gitId":"ruiyangzh"},"content":"                .add(\"tags\", tags);","lastModifiedDate":"2023-10-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"ruiyangzh":14,"-":91,"J-hta-n":1}},{"path":"src/main/java/seedu/address/model/person/UniqueDisplayableList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ruiyangzh"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-10-18"},{"lineNumber":2,"author":{"gitId":"ruiyangzh"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":3,"author":{"gitId":"ruiyangzh"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-18"},{"lineNumber":4,"author":{"gitId":"ruiyangzh"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-10-18"},{"lineNumber":5,"author":{"gitId":"ruiyangzh"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":6,"author":{"gitId":"ruiyangzh"},"content":"import java.util.Iterator;","lastModifiedDate":"2023-10-18"},{"lineNumber":7,"author":{"gitId":"ruiyangzh"},"content":"import java.util.List;","lastModifiedDate":"2023-10-18"},{"lineNumber":8,"author":{"gitId":"ruiyangzh"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":9,"author":{"gitId":"ruiyangzh"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-10-18"},{"lineNumber":10,"author":{"gitId":"ruiyangzh"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-10-18"},{"lineNumber":11,"author":{"gitId":"ruiyangzh"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2023-10-18"},{"lineNumber":12,"author":{"gitId":"ruiyangzh"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2023-10-18"},{"lineNumber":13,"author":{"gitId":"ruiyangzh"},"content":"import seedu.address.model.util.Displayable;","lastModifiedDate":"2023-10-18"},{"lineNumber":14,"author":{"gitId":"ruiyangzh"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":15,"author":{"gitId":"ruiyangzh"},"content":"/**","lastModifiedDate":"2023-10-18"},{"lineNumber":16,"author":{"gitId":"ruiyangzh"},"content":" * A list of displayables that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2023-10-18"},{"lineNumber":17,"author":{"gitId":"ruiyangzh"},"content":" * A displayable is considered unique by comparing using {@code Displayable#isSameDisplayable(Displayable)}.","lastModifiedDate":"2023-10-18"},{"lineNumber":18,"author":{"gitId":"ruiyangzh"},"content":" * As such, adding and updating of displayables uses Displayable#isSameDisplayable(Displayable) for equality to","lastModifiedDate":"2023-10-18"},{"lineNumber":19,"author":{"gitId":"ruiyangzh"},"content":" * ensure that the displayable being added or updated is unique in terms of identity in the UniqueDisplayableList.","lastModifiedDate":"2023-10-18"},{"lineNumber":20,"author":{"gitId":"ruiyangzh"},"content":" * However, the removal of a displayable uses Displayable#equals(Object)","lastModifiedDate":"2023-10-18"},{"lineNumber":21,"author":{"gitId":"ruiyangzh"},"content":" * to ensure that the displayable with exactly the same fields will be removed.","lastModifiedDate":"2023-10-18"},{"lineNumber":22,"author":{"gitId":"ruiyangzh"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2023-10-18"},{"lineNumber":23,"author":{"gitId":"ruiyangzh"},"content":" *","lastModifiedDate":"2023-10-18"},{"lineNumber":24,"author":{"gitId":"ruiyangzh"},"content":" * @see Displayable#isSameDisplayable(Displayable)","lastModifiedDate":"2023-10-18"},{"lineNumber":25,"author":{"gitId":"ruiyangzh"},"content":" */","lastModifiedDate":"2023-10-18"},{"lineNumber":26,"author":{"gitId":"J-hta-n"},"content":"public class UniqueDisplayableList\u003cT extends Displayable\u003e implements Iterable\u003cT\u003e {","lastModifiedDate":"2023-10-18"},{"lineNumber":27,"author":{"gitId":"ruiyangzh"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":28,"author":{"gitId":"ruiyangzh"},"content":"    private final ObservableList\u003cT\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2023-10-18"},{"lineNumber":29,"author":{"gitId":"ruiyangzh"},"content":"    private final ObservableList\u003cT\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2023-10-18"},{"lineNumber":30,"author":{"gitId":"ruiyangzh"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2023-10-18"},{"lineNumber":31,"author":{"gitId":"ruiyangzh"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":32,"author":{"gitId":"ruiyangzh"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":33,"author":{"gitId":"ruiyangzh"},"content":"     * Returns true if the list contains an equivalent displayable as the given argument.","lastModifiedDate":"2023-10-18"},{"lineNumber":34,"author":{"gitId":"ruiyangzh"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":35,"author":{"gitId":"ruiyangzh"},"content":"    public boolean contains(T toCheck) {","lastModifiedDate":"2023-10-18"},{"lineNumber":36,"author":{"gitId":"ruiyangzh"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2023-10-18"},{"lineNumber":37,"author":{"gitId":"ruiyangzh"},"content":"        return internalList.stream().anyMatch(toCheck::isSameDisplayable);","lastModifiedDate":"2023-10-18"},{"lineNumber":38,"author":{"gitId":"ruiyangzh"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":39,"author":{"gitId":"ruiyangzh"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":40,"author":{"gitId":"ruiyangzh"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":41,"author":{"gitId":"ruiyangzh"},"content":"     * Adds a displayable to the list.","lastModifiedDate":"2023-10-18"},{"lineNumber":42,"author":{"gitId":"ruiyangzh"},"content":"     * The displayable must not already exist in the list.","lastModifiedDate":"2023-10-18"},{"lineNumber":43,"author":{"gitId":"ruiyangzh"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":44,"author":{"gitId":"ruiyangzh"},"content":"    public void add(T toAdd) {","lastModifiedDate":"2023-10-18"},{"lineNumber":45,"author":{"gitId":"ruiyangzh"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2023-10-18"},{"lineNumber":46,"author":{"gitId":"ruiyangzh"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2023-10-18"},{"lineNumber":47,"author":{"gitId":"ruiyangzh"},"content":"            //TODO change this when we add a more general exception.","lastModifiedDate":"2023-10-18"},{"lineNumber":48,"author":{"gitId":"ruiyangzh"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2023-10-18"},{"lineNumber":49,"author":{"gitId":"ruiyangzh"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":50,"author":{"gitId":"ruiyangzh"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2023-10-18"},{"lineNumber":51,"author":{"gitId":"ruiyangzh"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":52,"author":{"gitId":"ruiyangzh"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":53,"author":{"gitId":"ruiyangzh"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":54,"author":{"gitId":"ruiyangzh"},"content":"     * Replaces the displayable {@code target} in the list with {@code editedDisplayable}.","lastModifiedDate":"2023-10-18"},{"lineNumber":55,"author":{"gitId":"ruiyangzh"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2023-10-18"},{"lineNumber":56,"author":{"gitId":"ruiyangzh"},"content":"     * The person identity of {@code editedDisplayable} must not be the same as another existing person in the list.","lastModifiedDate":"2023-10-18"},{"lineNumber":57,"author":{"gitId":"ruiyangzh"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":58,"author":{"gitId":"ruiyangzh"},"content":"    public void setDisplayable(T target, T editedDisplayable) {","lastModifiedDate":"2023-10-18"},{"lineNumber":59,"author":{"gitId":"ruiyangzh"},"content":"        requireAllNonNull(target, editedDisplayable);","lastModifiedDate":"2023-10-18"},{"lineNumber":60,"author":{"gitId":"ruiyangzh"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":61,"author":{"gitId":"ruiyangzh"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2023-10-18"},{"lineNumber":62,"author":{"gitId":"ruiyangzh"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2023-10-18"},{"lineNumber":63,"author":{"gitId":"ruiyangzh"},"content":"            //TODO replace this exception","lastModifiedDate":"2023-10-18"},{"lineNumber":64,"author":{"gitId":"ruiyangzh"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2023-10-18"},{"lineNumber":65,"author":{"gitId":"ruiyangzh"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":66,"author":{"gitId":"ruiyangzh"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":67,"author":{"gitId":"ruiyangzh"},"content":"        if (!target.isSameDisplayable(editedDisplayable) \u0026\u0026 contains(editedDisplayable)) {","lastModifiedDate":"2023-10-18"},{"lineNumber":68,"author":{"gitId":"ruiyangzh"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2023-10-18"},{"lineNumber":69,"author":{"gitId":"ruiyangzh"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":70,"author":{"gitId":"ruiyangzh"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":71,"author":{"gitId":"ruiyangzh"},"content":"        internalList.set(index, editedDisplayable);","lastModifiedDate":"2023-10-18"},{"lineNumber":72,"author":{"gitId":"ruiyangzh"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":73,"author":{"gitId":"ruiyangzh"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":74,"author":{"gitId":"ruiyangzh"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":75,"author":{"gitId":"ruiyangzh"},"content":"     * Removes the equivalent displayable from the list.","lastModifiedDate":"2023-10-18"},{"lineNumber":76,"author":{"gitId":"ruiyangzh"},"content":"     * The displayable must exist in the list.","lastModifiedDate":"2023-10-18"},{"lineNumber":77,"author":{"gitId":"ruiyangzh"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":78,"author":{"gitId":"ruiyangzh"},"content":"    public void remove(T toRemove) {","lastModifiedDate":"2023-10-18"},{"lineNumber":79,"author":{"gitId":"ruiyangzh"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2023-10-18"},{"lineNumber":80,"author":{"gitId":"ruiyangzh"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2023-10-18"},{"lineNumber":81,"author":{"gitId":"ruiyangzh"},"content":"            //TODO replace exception","lastModifiedDate":"2023-10-18"},{"lineNumber":82,"author":{"gitId":"ruiyangzh"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2023-10-18"},{"lineNumber":83,"author":{"gitId":"ruiyangzh"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":84,"author":{"gitId":"ruiyangzh"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":85,"author":{"gitId":"ruiyangzh"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":86,"author":{"gitId":"J-hta-n"},"content":"    // TODO: Ascertain whether this is necessary, if not, remove this method and its JUnit tests","lastModifiedDate":"2023-10-18"},{"lineNumber":87,"author":{"gitId":"ruiyangzh"},"content":"    public void setDisplayables(UniqueDisplayableList\u003cT\u003e replacement) {","lastModifiedDate":"2023-10-18"},{"lineNumber":88,"author":{"gitId":"ruiyangzh"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2023-10-18"},{"lineNumber":89,"author":{"gitId":"ruiyangzh"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2023-10-18"},{"lineNumber":90,"author":{"gitId":"ruiyangzh"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":91,"author":{"gitId":"ruiyangzh"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":92,"author":{"gitId":"ruiyangzh"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":93,"author":{"gitId":"ruiyangzh"},"content":"     * Replaces the contents of this list with {@code displayables}.","lastModifiedDate":"2023-10-18"},{"lineNumber":94,"author":{"gitId":"ruiyangzh"},"content":"     * {@code displayables} must not contain duplicate displayables.","lastModifiedDate":"2023-10-18"},{"lineNumber":95,"author":{"gitId":"ruiyangzh"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":96,"author":{"gitId":"ruiyangzh"},"content":"    public void setDisplayables(List\u003c? extends T\u003e displayables) {","lastModifiedDate":"2023-10-18"},{"lineNumber":97,"author":{"gitId":"ruiyangzh"},"content":"        requireAllNonNull(displayables);","lastModifiedDate":"2023-10-18"},{"lineNumber":98,"author":{"gitId":"ruiyangzh"},"content":"        if (!displayablesAreUnique(displayables)) {","lastModifiedDate":"2023-10-18"},{"lineNumber":99,"author":{"gitId":"ruiyangzh"},"content":"            //TODO change exception","lastModifiedDate":"2023-10-18"},{"lineNumber":100,"author":{"gitId":"ruiyangzh"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2023-10-18"},{"lineNumber":101,"author":{"gitId":"ruiyangzh"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":102,"author":{"gitId":"ruiyangzh"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":103,"author":{"gitId":"ruiyangzh"},"content":"        internalList.setAll(displayables);","lastModifiedDate":"2023-10-18"},{"lineNumber":104,"author":{"gitId":"ruiyangzh"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":105,"author":{"gitId":"ruiyangzh"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":106,"author":{"gitId":"ruiyangzh"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":107,"author":{"gitId":"ruiyangzh"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2023-10-18"},{"lineNumber":108,"author":{"gitId":"ruiyangzh"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":109,"author":{"gitId":"ruiyangzh"},"content":"    public ObservableList\u003cT\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2023-10-18"},{"lineNumber":110,"author":{"gitId":"ruiyangzh"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2023-10-18"},{"lineNumber":111,"author":{"gitId":"ruiyangzh"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":112,"author":{"gitId":"ruiyangzh"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":113,"author":{"gitId":"ruiyangzh"},"content":"    @Override","lastModifiedDate":"2023-10-18"},{"lineNumber":114,"author":{"gitId":"ruiyangzh"},"content":"    public Iterator\u003cT\u003e iterator() {","lastModifiedDate":"2023-10-18"},{"lineNumber":115,"author":{"gitId":"ruiyangzh"},"content":"        return internalList.iterator();","lastModifiedDate":"2023-10-18"},{"lineNumber":116,"author":{"gitId":"ruiyangzh"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":117,"author":{"gitId":"ruiyangzh"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":118,"author":{"gitId":"ruiyangzh"},"content":"    @Override","lastModifiedDate":"2023-10-18"},{"lineNumber":119,"author":{"gitId":"ruiyangzh"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-18"},{"lineNumber":120,"author":{"gitId":"ruiyangzh"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-18"},{"lineNumber":121,"author":{"gitId":"ruiyangzh"},"content":"            return true;","lastModifiedDate":"2023-10-18"},{"lineNumber":122,"author":{"gitId":"ruiyangzh"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":123,"author":{"gitId":"ruiyangzh"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":124,"author":{"gitId":"ruiyangzh"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-18"},{"lineNumber":125,"author":{"gitId":"ruiyangzh"},"content":"        if (!(other instanceof UniqueDisplayableList)) {","lastModifiedDate":"2023-10-18"},{"lineNumber":126,"author":{"gitId":"ruiyangzh"},"content":"            return false;","lastModifiedDate":"2023-10-18"},{"lineNumber":127,"author":{"gitId":"ruiyangzh"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":128,"author":{"gitId":"ruiyangzh"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":129,"author":{"gitId":"ruiyangzh"},"content":"        UniqueDisplayableList\u003c?\u003e otherUniqueDisplayableList \u003d (UniqueDisplayableList\u003c?\u003e) other;","lastModifiedDate":"2023-10-18"},{"lineNumber":130,"author":{"gitId":"ruiyangzh"},"content":"        return internalList.equals(otherUniqueDisplayableList.internalList);","lastModifiedDate":"2023-10-18"},{"lineNumber":131,"author":{"gitId":"ruiyangzh"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":132,"author":{"gitId":"ruiyangzh"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":133,"author":{"gitId":"ruiyangzh"},"content":"    @Override","lastModifiedDate":"2023-10-18"},{"lineNumber":134,"author":{"gitId":"ruiyangzh"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-18"},{"lineNumber":135,"author":{"gitId":"ruiyangzh"},"content":"        return internalList.hashCode();","lastModifiedDate":"2023-10-18"},{"lineNumber":136,"author":{"gitId":"ruiyangzh"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":137,"author":{"gitId":"ruiyangzh"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":138,"author":{"gitId":"ruiyangzh"},"content":"    @Override","lastModifiedDate":"2023-10-18"},{"lineNumber":139,"author":{"gitId":"ruiyangzh"},"content":"    public String toString() {","lastModifiedDate":"2023-10-18"},{"lineNumber":140,"author":{"gitId":"ruiyangzh"},"content":"        return internalList.toString();","lastModifiedDate":"2023-10-18"},{"lineNumber":141,"author":{"gitId":"ruiyangzh"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":142,"author":{"gitId":"ruiyangzh"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":143,"author":{"gitId":"ruiyangzh"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":144,"author":{"gitId":"ruiyangzh"},"content":"     * Returns true if {@code displayables} contains only unique displayables.","lastModifiedDate":"2023-10-18"},{"lineNumber":145,"author":{"gitId":"ruiyangzh"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":146,"author":{"gitId":"ruiyangzh"},"content":"    private boolean displayablesAreUnique(List\u003c? extends Displayable\u003e displayables) {","lastModifiedDate":"2023-10-18"},{"lineNumber":147,"author":{"gitId":"ruiyangzh"},"content":"        for (int i \u003d 0; i \u003c displayables.size() - 1; i++) {","lastModifiedDate":"2023-10-18"},{"lineNumber":148,"author":{"gitId":"ruiyangzh"},"content":"            for (int j \u003d i + 1; j \u003c displayables.size(); j++) {","lastModifiedDate":"2023-10-18"},{"lineNumber":149,"author":{"gitId":"ruiyangzh"},"content":"                if (displayables.get(i).isSameDisplayable(displayables.get(j))) {","lastModifiedDate":"2023-10-18"},{"lineNumber":150,"author":{"gitId":"ruiyangzh"},"content":"                    return false;","lastModifiedDate":"2023-10-18"},{"lineNumber":151,"author":{"gitId":"ruiyangzh"},"content":"                }","lastModifiedDate":"2023-10-18"},{"lineNumber":152,"author":{"gitId":"ruiyangzh"},"content":"            }","lastModifiedDate":"2023-10-18"},{"lineNumber":153,"author":{"gitId":"ruiyangzh"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":154,"author":{"gitId":"ruiyangzh"},"content":"        return true;","lastModifiedDate":"2023-10-18"},{"lineNumber":155,"author":{"gitId":"ruiyangzh"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":156,"author":{"gitId":"ruiyangzh"},"content":"}","lastModifiedDate":"2023-10-18"}],"authorContributionMap":{"ruiyangzh":154,"J-hta-n":2}},{"path":"src/main/java/seedu/address/model/person/buyer/BuyHouseInfo.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"peasantbird"},"content":"package seedu.address.model.person.buyer;","lastModifiedDate":"2023-10-16"},{"lineNumber":2,"author":{"gitId":"peasantbird"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":3,"author":{"gitId":"peasantbird"},"content":"/**","lastModifiedDate":"2023-10-16"},{"lineNumber":4,"author":{"gitId":"peasantbird"},"content":" * Represents the information associated with a house.","lastModifiedDate":"2023-10-16"},{"lineNumber":5,"author":{"gitId":"peasantbird"},"content":" */","lastModifiedDate":"2023-10-16"},{"lineNumber":6,"author":{"gitId":"peasantbird"},"content":"public class BuyHouseInfo {","lastModifiedDate":"2023-10-16"},{"lineNumber":7,"author":{"gitId":"peasantbird"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":8,"author":{"gitId":"peasantbird"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"peasantbird"},"content":"            \"House information can take any values, and it should not be blank\";","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"ruiyangzh"},"content":"    /*","lastModifiedDate":"2023-10-16"},{"lineNumber":11,"author":{"gitId":"ruiyangzh"},"content":"    * The first character of the info must not be a whitespace,","lastModifiedDate":"2023-10-16"},{"lineNumber":12,"author":{"gitId":"ruiyangzh"},"content":"    * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2023-10-16"},{"lineNumber":13,"author":{"gitId":"ruiyangzh"},"content":"    */","lastModifiedDate":"2023-10-16"},{"lineNumber":14,"author":{"gitId":"ruiyangzh"},"content":"    public static final String VALIDATION_REGEX \u003d \"[^\\\\s].*\";","lastModifiedDate":"2023-10-16"},{"lineNumber":15,"author":{"gitId":"ruiyangzh"},"content":"    private final String buyHouseInfo;","lastModifiedDate":"2023-10-16"},{"lineNumber":16,"author":{"gitId":"ruiyangzh"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":17,"author":{"gitId":"ruiyangzh"},"content":"    public BuyHouseInfo(String buyHouseInfo) {","lastModifiedDate":"2023-10-16"},{"lineNumber":18,"author":{"gitId":"ruiyangzh"},"content":"        this.buyHouseInfo \u003d buyHouseInfo;","lastModifiedDate":"2023-10-16"},{"lineNumber":19,"author":{"gitId":"ruiyangzh"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":20,"author":{"gitId":"ruiyangzh"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":21,"author":{"gitId":"ruiyangzh"},"content":"    public String toString() {","lastModifiedDate":"2023-10-16"},{"lineNumber":22,"author":{"gitId":"ruiyangzh"},"content":"        return buyHouseInfo;","lastModifiedDate":"2023-10-16"},{"lineNumber":23,"author":{"gitId":"ruiyangzh"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":24,"author":{"gitId":"ruiyangzh"},"content":"    public static boolean isValidBuyHouseInfo(String test) {","lastModifiedDate":"2023-10-16"},{"lineNumber":25,"author":{"gitId":"ruiyangzh"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-10-16"},{"lineNumber":26,"author":{"gitId":"peasantbird"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":27,"author":{"gitId":"peasantbird"},"content":"}","lastModifiedDate":"2023-10-16"}],"authorContributionMap":{"ruiyangzh":16,"peasantbird":11}},{"path":"src/main/java/seedu/address/model/person/buyer/Buyer.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"peasantbird"},"content":"package seedu.address.model.person.buyer;","lastModifiedDate":"2023-10-16"},{"lineNumber":2,"author":{"gitId":"peasantbird"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":3,"author":{"gitId":"peasantbird"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-10-16"},{"lineNumber":4,"author":{"gitId":"peasantbird"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":5,"author":{"gitId":"peasantbird"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-16"},{"lineNumber":6,"author":{"gitId":"peasantbird"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":7,"author":{"gitId":"ruiyangzh"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-10-18"},{"lineNumber":8,"author":{"gitId":"peasantbird"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2023-10-16"},{"lineNumber":9,"author":{"gitId":"peasantbird"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2023-10-16"},{"lineNumber":10,"author":{"gitId":"peasantbird"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-10-16"},{"lineNumber":11,"author":{"gitId":"peasantbird"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-16"},{"lineNumber":12,"author":{"gitId":"peasantbird"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2023-10-16"},{"lineNumber":13,"author":{"gitId":"peasantbird"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-10-16"},{"lineNumber":14,"author":{"gitId":"ruiyangzh"},"content":"import seedu.address.ui.BuyerCard;","lastModifiedDate":"2023-10-18"},{"lineNumber":15,"author":{"gitId":"ruiyangzh"},"content":"import seedu.address.ui.UiPart;","lastModifiedDate":"2023-10-18"},{"lineNumber":16,"author":{"gitId":"peasantbird"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":17,"author":{"gitId":"peasantbird"},"content":"/**","lastModifiedDate":"2023-10-16"},{"lineNumber":18,"author":{"gitId":"peasantbird"},"content":" * Represents a client looking to buy a house in the address book.","lastModifiedDate":"2023-10-16"},{"lineNumber":19,"author":{"gitId":"peasantbird"},"content":" */","lastModifiedDate":"2023-10-16"},{"lineNumber":20,"author":{"gitId":"peasantbird"},"content":"public class Buyer extends Person {","lastModifiedDate":"2023-10-16"},{"lineNumber":21,"author":{"gitId":"peasantbird"},"content":"    private final BuyHouseInfo buyHouseInfo;","lastModifiedDate":"2023-10-16"},{"lineNumber":22,"author":{"gitId":"peasantbird"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":23,"author":{"gitId":"peasantbird"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":24,"author":{"gitId":"peasantbird"},"content":"     * Constructs a Buyer instance.","lastModifiedDate":"2023-10-16"},{"lineNumber":25,"author":{"gitId":"peasantbird"},"content":"     *","lastModifiedDate":"2023-10-16"},{"lineNumber":26,"author":{"gitId":"peasantbird"},"content":"     * @param name Name of the buyer.","lastModifiedDate":"2023-10-16"},{"lineNumber":27,"author":{"gitId":"peasantbird"},"content":"     * @param phone Phone number of the buyer.","lastModifiedDate":"2023-10-16"},{"lineNumber":28,"author":{"gitId":"peasantbird"},"content":"     * @param email Email of the buyer.","lastModifiedDate":"2023-10-16"},{"lineNumber":29,"author":{"gitId":"peasantbird"},"content":"     * @param address Home address of the buyer.","lastModifiedDate":"2023-10-16"},{"lineNumber":30,"author":{"gitId":"peasantbird"},"content":"     * @param buyHouseInfo Information on the house that the buyer is interested in.","lastModifiedDate":"2023-10-16"},{"lineNumber":31,"author":{"gitId":"peasantbird"},"content":"     * @param tags Optional tags.","lastModifiedDate":"2023-10-16"},{"lineNumber":32,"author":{"gitId":"peasantbird"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":33,"author":{"gitId":"peasantbird"},"content":"    public Buyer(Name name, Phone phone, Email email, Address address,","lastModifiedDate":"2023-10-16"},{"lineNumber":34,"author":{"gitId":"peasantbird"},"content":"                 BuyHouseInfo buyHouseInfo, Set\u003cTag\u003e tags) {","lastModifiedDate":"2023-10-16"},{"lineNumber":35,"author":{"gitId":"peasantbird"},"content":"        super(name, phone, email, address, tags);","lastModifiedDate":"2023-10-16"},{"lineNumber":36,"author":{"gitId":"peasantbird"},"content":"        requireAllNonNull(buyHouseInfo);","lastModifiedDate":"2023-10-16"},{"lineNumber":37,"author":{"gitId":"peasantbird"},"content":"        this.buyHouseInfo \u003d buyHouseInfo;","lastModifiedDate":"2023-10-16"},{"lineNumber":38,"author":{"gitId":"peasantbird"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":39,"author":{"gitId":"ruiyangzh"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":40,"author":{"gitId":"ruiyangzh"},"content":"    public BuyHouseInfo getBuyHouseInfo() {","lastModifiedDate":"2023-10-16"},{"lineNumber":41,"author":{"gitId":"ruiyangzh"},"content":"        return buyHouseInfo;","lastModifiedDate":"2023-10-16"},{"lineNumber":42,"author":{"gitId":"ruiyangzh"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":43,"author":{"gitId":"ruiyangzh"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":44,"author":{"gitId":"ruiyangzh"},"content":"    @Override","lastModifiedDate":"2023-10-18"},{"lineNumber":45,"author":{"gitId":"ruiyangzh"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-18"},{"lineNumber":46,"author":{"gitId":"ruiyangzh"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-18"},{"lineNumber":47,"author":{"gitId":"ruiyangzh"},"content":"            return true;","lastModifiedDate":"2023-10-18"},{"lineNumber":48,"author":{"gitId":"ruiyangzh"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":49,"author":{"gitId":"ruiyangzh"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":50,"author":{"gitId":"ruiyangzh"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-18"},{"lineNumber":51,"author":{"gitId":"ruiyangzh"},"content":"        if (!(other instanceof Buyer)) {","lastModifiedDate":"2023-10-18"},{"lineNumber":52,"author":{"gitId":"ruiyangzh"},"content":"            return false;","lastModifiedDate":"2023-10-18"},{"lineNumber":53,"author":{"gitId":"ruiyangzh"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":54,"author":{"gitId":"ruiyangzh"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":55,"author":{"gitId":"ruiyangzh"},"content":"        Buyer otherBuyer \u003d (Buyer) other;","lastModifiedDate":"2023-10-18"},{"lineNumber":56,"author":{"gitId":"ruiyangzh"},"content":"        return this.equalsHelper(otherBuyer)","lastModifiedDate":"2023-10-18"},{"lineNumber":57,"author":{"gitId":"ruiyangzh"},"content":"                \u0026\u0026 buyHouseInfo.equals(otherBuyer.buyHouseInfo);","lastModifiedDate":"2023-10-18"},{"lineNumber":58,"author":{"gitId":"ruiyangzh"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":59,"author":{"gitId":"ruiyangzh"},"content":"    @Override","lastModifiedDate":"2023-10-18"},{"lineNumber":60,"author":{"gitId":"ruiyangzh"},"content":"    public String toString() {","lastModifiedDate":"2023-10-18"},{"lineNumber":61,"author":{"gitId":"ruiyangzh"},"content":"        return toStringBuild()","lastModifiedDate":"2023-10-18"},{"lineNumber":62,"author":{"gitId":"ruiyangzh"},"content":"                .add(\"house info\", buyHouseInfo)","lastModifiedDate":"2023-10-18"},{"lineNumber":63,"author":{"gitId":"ruiyangzh"},"content":"                .toString();","lastModifiedDate":"2023-10-18"},{"lineNumber":64,"author":{"gitId":"ruiyangzh"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":65,"author":{"gitId":"ruiyangzh"},"content":"    @Override","lastModifiedDate":"2023-10-18"},{"lineNumber":66,"author":{"gitId":"ruiyangzh"},"content":"    public UiPart\u003cRegion\u003e display(int displayIndex) {","lastModifiedDate":"2023-10-18"},{"lineNumber":67,"author":{"gitId":"ruiyangzh"},"content":"        return new BuyerCard(this, displayIndex);","lastModifiedDate":"2023-10-18"},{"lineNumber":68,"author":{"gitId":"ruiyangzh"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":69,"author":{"gitId":"peasantbird"},"content":"}","lastModifiedDate":"2023-10-16"}],"authorContributionMap":{"ruiyangzh":33,"peasantbird":36}},{"path":"src/main/java/seedu/address/model/person/seller/SellHouseInfo.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"J-hta-n"},"content":"package seedu.address.model.person.seller;","lastModifiedDate":"2023-10-16"},{"lineNumber":2,"author":{"gitId":"J-hta-n"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":3,"author":{"gitId":"J-hta-n"},"content":"/**","lastModifiedDate":"2023-10-16"},{"lineNumber":4,"author":{"gitId":"J-hta-n"},"content":" * Represents the information associated with a house.","lastModifiedDate":"2023-10-16"},{"lineNumber":5,"author":{"gitId":"J-hta-n"},"content":" */","lastModifiedDate":"2023-10-16"},{"lineNumber":6,"author":{"gitId":"J-hta-n"},"content":"public class SellHouseInfo {","lastModifiedDate":"2023-10-16"},{"lineNumber":7,"author":{"gitId":"ruiyangzh"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":8,"author":{"gitId":"ruiyangzh"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"ruiyangzh"},"content":"            \"House information can take any values, and it should not be blank\";","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"ruiyangzh"},"content":"    /*","lastModifiedDate":"2023-10-16"},{"lineNumber":11,"author":{"gitId":"ruiyangzh"},"content":"     * The first character of the info must not be a whitespace,","lastModifiedDate":"2023-10-16"},{"lineNumber":12,"author":{"gitId":"ruiyangzh"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2023-10-16"},{"lineNumber":13,"author":{"gitId":"ruiyangzh"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":14,"author":{"gitId":"ruiyangzh"},"content":"    public static final String VALIDATION_REGEX \u003d \"[^\\\\s].*\";","lastModifiedDate":"2023-10-16"},{"lineNumber":15,"author":{"gitId":"J-hta-n"},"content":"    private final String sellHouseInfo;","lastModifiedDate":"2023-10-16"},{"lineNumber":16,"author":{"gitId":"J-hta-n"},"content":"    public SellHouseInfo(String houseInfo) {","lastModifiedDate":"2023-10-16"},{"lineNumber":17,"author":{"gitId":"J-hta-n"},"content":"        this.sellHouseInfo \u003d houseInfo;","lastModifiedDate":"2023-10-16"},{"lineNumber":18,"author":{"gitId":"J-hta-n"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":19,"author":{"gitId":"ruiyangzh"},"content":"    public String toString() {","lastModifiedDate":"2023-10-16"},{"lineNumber":20,"author":{"gitId":"ruiyangzh"},"content":"        return sellHouseInfo;","lastModifiedDate":"2023-10-16"},{"lineNumber":21,"author":{"gitId":"ruiyangzh"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":22,"author":{"gitId":"ruiyangzh"},"content":"    public static boolean isValidSellHouseInfo(String test) {","lastModifiedDate":"2023-10-16"},{"lineNumber":23,"author":{"gitId":"ruiyangzh"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-10-16"},{"lineNumber":24,"author":{"gitId":"ruiyangzh"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":25,"author":{"gitId":"J-hta-n"},"content":"}","lastModifiedDate":"2023-10-16"}],"authorContributionMap":{"ruiyangzh":14,"J-hta-n":11}},{"path":"src/main/java/seedu/address/model/person/seller/Seller.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"J-hta-n"},"content":"package seedu.address.model.person.seller;","lastModifiedDate":"2023-10-16"},{"lineNumber":2,"author":{"gitId":"J-hta-n"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":3,"author":{"gitId":"J-hta-n"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-10-16"},{"lineNumber":4,"author":{"gitId":"J-hta-n"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":5,"author":{"gitId":"J-hta-n"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-16"},{"lineNumber":6,"author":{"gitId":"J-hta-n"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":7,"author":{"gitId":"ruiyangzh"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-10-18"},{"lineNumber":8,"author":{"gitId":"J-hta-n"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2023-10-16"},{"lineNumber":9,"author":{"gitId":"J-hta-n"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2023-10-16"},{"lineNumber":10,"author":{"gitId":"J-hta-n"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-10-16"},{"lineNumber":11,"author":{"gitId":"J-hta-n"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-16"},{"lineNumber":12,"author":{"gitId":"J-hta-n"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2023-10-16"},{"lineNumber":13,"author":{"gitId":"J-hta-n"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-10-16"},{"lineNumber":14,"author":{"gitId":"ruiyangzh"},"content":"import seedu.address.ui.SellerCard;","lastModifiedDate":"2023-10-18"},{"lineNumber":15,"author":{"gitId":"ruiyangzh"},"content":"import seedu.address.ui.UiPart;","lastModifiedDate":"2023-10-18"},{"lineNumber":16,"author":{"gitId":"J-hta-n"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":17,"author":{"gitId":"J-hta-n"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":18,"author":{"gitId":"J-hta-n"},"content":"/**","lastModifiedDate":"2023-10-16"},{"lineNumber":19,"author":{"gitId":"J-hta-n"},"content":" * Represents a Seller in the address book.","lastModifiedDate":"2023-10-16"},{"lineNumber":20,"author":{"gitId":"J-hta-n"},"content":" */","lastModifiedDate":"2023-10-16"},{"lineNumber":21,"author":{"gitId":"J-hta-n"},"content":"public class Seller extends Person {","lastModifiedDate":"2023-10-16"},{"lineNumber":22,"author":{"gitId":"J-hta-n"},"content":"    private final Address sellingAddress;","lastModifiedDate":"2023-10-16"},{"lineNumber":23,"author":{"gitId":"ruiyangzh"},"content":"    private final SellHouseInfo sellHouseInfo;","lastModifiedDate":"2023-10-16"},{"lineNumber":24,"author":{"gitId":"ruiyangzh"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":25,"author":{"gitId":"J-hta-n"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":26,"author":{"gitId":"ruiyangzh"},"content":"     * Constructs a seller instance.","lastModifiedDate":"2023-10-17"},{"lineNumber":27,"author":{"gitId":"J-hta-n"},"content":"     * Every field must be present and not null (super class does these checks too)","lastModifiedDate":"2023-10-16"},{"lineNumber":28,"author":{"gitId":"ruiyangzh"},"content":"     *","lastModifiedDate":"2023-10-18"},{"lineNumber":29,"author":{"gitId":"ruiyangzh"},"content":"     * @param name           name of the seller.","lastModifiedDate":"2023-10-17"},{"lineNumber":30,"author":{"gitId":"ruiyangzh"},"content":"     * @param phone          phone number of the seller.","lastModifiedDate":"2023-10-17"},{"lineNumber":31,"author":{"gitId":"ruiyangzh"},"content":"     * @param email          email of the seller.","lastModifiedDate":"2023-10-17"},{"lineNumber":32,"author":{"gitId":"ruiyangzh"},"content":"     * @param address        the home address of the seller.","lastModifiedDate":"2023-10-17"},{"lineNumber":33,"author":{"gitId":"ruiyangzh"},"content":"     * @param sellingAddress the address that the seller is listing.","lastModifiedDate":"2023-10-17"},{"lineNumber":34,"author":{"gitId":"ruiyangzh"},"content":"     * @param sellHouseInfo  info about the listing.","lastModifiedDate":"2023-10-17"},{"lineNumber":35,"author":{"gitId":"ruiyangzh"},"content":"     * @param tags           tags of the seller.","lastModifiedDate":"2023-10-17"},{"lineNumber":36,"author":{"gitId":"J-hta-n"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":37,"author":{"gitId":"J-hta-n"},"content":"    public Seller(Name name, Phone phone, Email email, Address address, Address sellingAddress,","lastModifiedDate":"2023-10-16"},{"lineNumber":38,"author":{"gitId":"J-hta-n"},"content":"                  SellHouseInfo sellHouseInfo, Set\u003cTag\u003e tags) {","lastModifiedDate":"2023-10-16"},{"lineNumber":39,"author":{"gitId":"J-hta-n"},"content":"        super(name, phone, email, address, tags);","lastModifiedDate":"2023-10-16"},{"lineNumber":40,"author":{"gitId":"J-hta-n"},"content":"        requireAllNonNull(sellingAddress, sellHouseInfo);","lastModifiedDate":"2023-10-16"},{"lineNumber":41,"author":{"gitId":"J-hta-n"},"content":"        this.sellingAddress \u003d sellingAddress;","lastModifiedDate":"2023-10-16"},{"lineNumber":42,"author":{"gitId":"ruiyangzh"},"content":"        this.sellHouseInfo \u003d sellHouseInfo;","lastModifiedDate":"2023-10-16"},{"lineNumber":43,"author":{"gitId":"ruiyangzh"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":44,"author":{"gitId":"ruiyangzh"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":45,"author":{"gitId":"ruiyangzh"},"content":"    public Address getSellingAddress() {","lastModifiedDate":"2023-10-16"},{"lineNumber":46,"author":{"gitId":"ruiyangzh"},"content":"        return this.sellingAddress;","lastModifiedDate":"2023-10-16"},{"lineNumber":47,"author":{"gitId":"ruiyangzh"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":48,"author":{"gitId":"ruiyangzh"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":49,"author":{"gitId":"ruiyangzh"},"content":"    public SellHouseInfo getSellHouseInfo() {","lastModifiedDate":"2023-10-16"},{"lineNumber":50,"author":{"gitId":"ruiyangzh"},"content":"        return sellHouseInfo;","lastModifiedDate":"2023-10-16"},{"lineNumber":51,"author":{"gitId":"J-hta-n"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":52,"author":{"gitId":"ruiyangzh"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":53,"author":{"gitId":"ruiyangzh"},"content":"    @Override","lastModifiedDate":"2023-10-18"},{"lineNumber":54,"author":{"gitId":"ruiyangzh"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-18"},{"lineNumber":55,"author":{"gitId":"ruiyangzh"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-18"},{"lineNumber":56,"author":{"gitId":"ruiyangzh"},"content":"            return true;","lastModifiedDate":"2023-10-18"},{"lineNumber":57,"author":{"gitId":"ruiyangzh"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":58,"author":{"gitId":"ruiyangzh"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":59,"author":{"gitId":"ruiyangzh"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-18"},{"lineNumber":60,"author":{"gitId":"ruiyangzh"},"content":"        if (!(other instanceof Seller)) {","lastModifiedDate":"2023-10-18"},{"lineNumber":61,"author":{"gitId":"ruiyangzh"},"content":"            return false;","lastModifiedDate":"2023-10-18"},{"lineNumber":62,"author":{"gitId":"ruiyangzh"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":63,"author":{"gitId":"ruiyangzh"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":64,"author":{"gitId":"ruiyangzh"},"content":"        Seller otherSeller \u003d (Seller) other;","lastModifiedDate":"2023-10-18"},{"lineNumber":65,"author":{"gitId":"ruiyangzh"},"content":"        return this.equalsHelper(otherSeller)","lastModifiedDate":"2023-10-18"},{"lineNumber":66,"author":{"gitId":"ruiyangzh"},"content":"                \u0026\u0026 sellingAddress.equals(otherSeller.sellingAddress)","lastModifiedDate":"2023-10-18"},{"lineNumber":67,"author":{"gitId":"ruiyangzh"},"content":"                \u0026\u0026 sellHouseInfo.equals(otherSeller.sellHouseInfo);","lastModifiedDate":"2023-10-18"},{"lineNumber":68,"author":{"gitId":"ruiyangzh"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":69,"author":{"gitId":"ruiyangzh"},"content":"    @Override","lastModifiedDate":"2023-10-18"},{"lineNumber":70,"author":{"gitId":"ruiyangzh"},"content":"    public String toString() {","lastModifiedDate":"2023-10-18"},{"lineNumber":71,"author":{"gitId":"ruiyangzh"},"content":"        return toStringBuild()","lastModifiedDate":"2023-10-18"},{"lineNumber":72,"author":{"gitId":"ruiyangzh"},"content":"                .add(\"selling address\", sellingAddress)","lastModifiedDate":"2023-10-18"},{"lineNumber":73,"author":{"gitId":"ruiyangzh"},"content":"                .add(\"house info\", sellHouseInfo)","lastModifiedDate":"2023-10-18"},{"lineNumber":74,"author":{"gitId":"ruiyangzh"},"content":"                .toString();","lastModifiedDate":"2023-10-18"},{"lineNumber":75,"author":{"gitId":"ruiyangzh"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":76,"author":{"gitId":"ruiyangzh"},"content":"    @Override","lastModifiedDate":"2023-10-18"},{"lineNumber":77,"author":{"gitId":"ruiyangzh"},"content":"    public UiPart\u003cRegion\u003e display(int displayIndex) {","lastModifiedDate":"2023-10-18"},{"lineNumber":78,"author":{"gitId":"ruiyangzh"},"content":"        return new SellerCard(this, displayIndex);","lastModifiedDate":"2023-10-18"},{"lineNumber":79,"author":{"gitId":"ruiyangzh"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":80,"author":{"gitId":"J-hta-n"},"content":"}","lastModifiedDate":"2023-10-16"}],"authorContributionMap":{"ruiyangzh":51,"J-hta-n":29}},{"path":"src/main/java/seedu/address/model/util/Displayable.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ruiyangzh"},"content":"package seedu.address.model.util;","lastModifiedDate":"2023-10-18"},{"lineNumber":2,"author":{"gitId":"ruiyangzh"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":3,"author":{"gitId":"ruiyangzh"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-10-18"},{"lineNumber":4,"author":{"gitId":"ruiyangzh"},"content":"import seedu.address.ui.UiPart;","lastModifiedDate":"2023-10-18"},{"lineNumber":5,"author":{"gitId":"ruiyangzh"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":6,"author":{"gitId":"ruiyangzh"},"content":"/**","lastModifiedDate":"2023-10-18"},{"lineNumber":7,"author":{"gitId":"ruiyangzh"},"content":" * Represents a displayable that has an ability to display as a UIPart and can do a lesser equality check with a method","lastModifiedDate":"2023-10-18"},{"lineNumber":8,"author":{"gitId":"ruiyangzh"},"content":" * named isSameDisplayable.","lastModifiedDate":"2023-10-18"},{"lineNumber":9,"author":{"gitId":"ruiyangzh"},"content":" */","lastModifiedDate":"2023-10-18"},{"lineNumber":10,"author":{"gitId":"ruiyangzh"},"content":"public interface Displayable {","lastModifiedDate":"2023-10-18"},{"lineNumber":11,"author":{"gitId":"ruiyangzh"},"content":"    UiPart\u003cRegion\u003e display(int index);","lastModifiedDate":"2023-10-18"},{"lineNumber":12,"author":{"gitId":"ruiyangzh"},"content":"    boolean isSameDisplayable(Displayable displayable);","lastModifiedDate":"2023-10-18"},{"lineNumber":13,"author":{"gitId":"ruiyangzh"},"content":"}","lastModifiedDate":"2023-10-18"}],"authorContributionMap":{"ruiyangzh":13}},{"path":"src/main/java/seedu/address/storage/AddressBookStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-09-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-06-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Represents a storage for {@link seedu.address.model.AddressBook}.","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public interface AddressBookStorage {","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * Returns the file path of the data file.","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"ruiyangzh"},"content":"    Path getFilePath();","lastModifiedDate":"2023-10-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Returns AddressBook data as a {@link ReadOnlyAddressBook}.","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2023-06-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws DataLoadingException if loading the data from storage failed.","lastModifiedDate":"2023-06-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    Optional\u003cReadOnlyAddressBook\u003e readAddressBook() throws DataLoadingException;","lastModifiedDate":"2023-06-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":28,"author":{"gitId":"ruiyangzh"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    Optional\u003cReadOnlyAddressBook\u003e readAddressBook(Path filePath) throws DataLoadingException;","lastModifiedDate":"2023-10-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Saves the given {@link ReadOnlyAddressBook} to the storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @param addressBook cannot be null.","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    void saveAddressBook(ReadOnlyAddressBook addressBook) throws IOException;","lastModifiedDate":"2016-09-28"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-01"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @see #saveAddressBook(ReadOnlyAddressBook)","lastModifiedDate":"2016-10-01"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException;","lastModifiedDate":"2023-10-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"ruiyangzh":2,"-":41}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedBuyer.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ruiyangzh"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-10-16"},{"lineNumber":2,"author":{"gitId":"ruiyangzh"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":3,"author":{"gitId":"ruiyangzh"},"content":"import java.util.List;","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"ruiyangzh"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"ruiyangzh"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2023-10-16"},{"lineNumber":6,"author":{"gitId":"ruiyangzh"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2023-10-16"},{"lineNumber":7,"author":{"gitId":"ruiyangzh"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":8,"author":{"gitId":"ruiyangzh"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-10-16"},{"lineNumber":9,"author":{"gitId":"ruiyangzh"},"content":"import seedu.address.model.person.buyer.BuyHouseInfo;","lastModifiedDate":"2023-10-16"},{"lineNumber":10,"author":{"gitId":"ruiyangzh"},"content":"import seedu.address.model.person.buyer.Buyer;","lastModifiedDate":"2023-10-16"},{"lineNumber":11,"author":{"gitId":"ruiyangzh"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"ruiyangzh"},"content":"/**","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"ruiyangzh"},"content":" * Jackson-friendly version of {@link Buyer}.","lastModifiedDate":"2023-10-17"},{"lineNumber":14,"author":{"gitId":"ruiyangzh"},"content":" */","lastModifiedDate":"2023-10-17"},{"lineNumber":15,"author":{"gitId":"ruiyangzh"},"content":"public class JsonAdaptedBuyer extends JsonAdaptedPerson {","lastModifiedDate":"2023-10-16"},{"lineNumber":16,"author":{"gitId":"ruiyangzh"},"content":"    private final String buyerInfo;","lastModifiedDate":"2023-10-16"},{"lineNumber":17,"author":{"gitId":"ruiyangzh"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":18,"author":{"gitId":"ruiyangzh"},"content":"     * Constructs a {@code JsonAdaptedBuyer} with the given buyer details.","lastModifiedDate":"2023-10-16"},{"lineNumber":19,"author":{"gitId":"ruiyangzh"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":20,"author":{"gitId":"ruiyangzh"},"content":"    @JsonCreator","lastModifiedDate":"2023-10-16"},{"lineNumber":21,"author":{"gitId":"ruiyangzh"},"content":"    public JsonAdaptedBuyer(@JsonProperty(\"name\") String name, @JsonProperty(\"phone\") String phone,","lastModifiedDate":"2023-10-16"},{"lineNumber":22,"author":{"gitId":"ruiyangzh"},"content":"                             @JsonProperty(\"email\") String email, @JsonProperty(\"address\") String address,","lastModifiedDate":"2023-10-16"},{"lineNumber":23,"author":{"gitId":"ruiyangzh"},"content":"                             @JsonProperty(\"buyerInfo\") String buyerInfo,","lastModifiedDate":"2023-10-16"},{"lineNumber":24,"author":{"gitId":"ruiyangzh"},"content":"                             @JsonProperty(\"tags\") List\u003cJsonAdaptedTag\u003e tags) {","lastModifiedDate":"2023-10-16"},{"lineNumber":25,"author":{"gitId":"ruiyangzh"},"content":"        super(name, phone, email, address, tags);","lastModifiedDate":"2023-10-16"},{"lineNumber":26,"author":{"gitId":"ruiyangzh"},"content":"        this.buyerInfo \u003d buyerInfo;","lastModifiedDate":"2023-10-16"},{"lineNumber":27,"author":{"gitId":"ruiyangzh"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":28,"author":{"gitId":"ruiyangzh"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":29,"author":{"gitId":"ruiyangzh"},"content":"     * Converts a given {@code Buyer} into this class for Jackson use.","lastModifiedDate":"2023-10-16"},{"lineNumber":30,"author":{"gitId":"ruiyangzh"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":31,"author":{"gitId":"ruiyangzh"},"content":"    public JsonAdaptedBuyer(Buyer source) {","lastModifiedDate":"2023-10-16"},{"lineNumber":32,"author":{"gitId":"ruiyangzh"},"content":"        super(source);","lastModifiedDate":"2023-10-16"},{"lineNumber":33,"author":{"gitId":"ruiyangzh"},"content":"        this.buyerInfo \u003d source.getBuyHouseInfo().toString();","lastModifiedDate":"2023-10-16"},{"lineNumber":34,"author":{"gitId":"ruiyangzh"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":35,"author":{"gitId":"ruiyangzh"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":36,"author":{"gitId":"ruiyangzh"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":37,"author":{"gitId":"ruiyangzh"},"content":"     * Converts this Jackson-friendly adapted seller object into the model\u0027s {@code Buyer} object.","lastModifiedDate":"2023-10-16"},{"lineNumber":38,"author":{"gitId":"ruiyangzh"},"content":"     *","lastModifiedDate":"2023-10-16"},{"lineNumber":39,"author":{"gitId":"ruiyangzh"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted seller.","lastModifiedDate":"2023-10-16"},{"lineNumber":40,"author":{"gitId":"ruiyangzh"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":41,"author":{"gitId":"ruiyangzh"},"content":"    public Buyer toModelType() throws IllegalValueException {","lastModifiedDate":"2023-10-16"},{"lineNumber":42,"author":{"gitId":"ruiyangzh"},"content":"        if (buyerInfo \u003d\u003d null) {","lastModifiedDate":"2023-10-16"},{"lineNumber":43,"author":{"gitId":"ruiyangzh"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2023-10-16"},{"lineNumber":44,"author":{"gitId":"ruiyangzh"},"content":"                    BuyHouseInfo.class.getSimpleName()));","lastModifiedDate":"2023-10-16"},{"lineNumber":45,"author":{"gitId":"ruiyangzh"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":46,"author":{"gitId":"ruiyangzh"},"content":"        if (!BuyHouseInfo.isValidBuyHouseInfo(buyerInfo)) {","lastModifiedDate":"2023-10-16"},{"lineNumber":47,"author":{"gitId":"ruiyangzh"},"content":"            throw new IllegalValueException(BuyHouseInfo.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-16"},{"lineNumber":48,"author":{"gitId":"ruiyangzh"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":49,"author":{"gitId":"ruiyangzh"},"content":"        BuyHouseInfo buyerInfoModel \u003d new BuyHouseInfo(buyerInfo);","lastModifiedDate":"2023-10-16"},{"lineNumber":50,"author":{"gitId":"ruiyangzh"},"content":"        return new Buyer(getName(), getPhone(), getEmail(), getAddress(), buyerInfoModel, getTags());","lastModifiedDate":"2023-10-18"},{"lineNumber":51,"author":{"gitId":"ruiyangzh"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":52,"author":{"gitId":"ruiyangzh"},"content":"}","lastModifiedDate":"2023-10-16"}],"authorContributionMap":{"ruiyangzh":52}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedPerson.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Person}.","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"ruiyangzh"},"content":"abstract class JsonAdaptedPerson {","lastModifiedDate":"2023-10-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Person\u0027s %s field is missing!\";","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final String name;","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final String phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final String email;","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final String address;","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedTag\u003e tags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedPerson} with the given person details.","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(@JsonProperty(\"name\") String name, @JsonProperty(\"phone\") String phone,","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            @JsonProperty(\"email\") String email, @JsonProperty(\"address\") String address,","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            @JsonProperty(\"tags\") List\u003cJsonAdaptedTag\u003e tags) {","lastModifiedDate":"2023-05-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        if (tags !\u003d null) {","lastModifiedDate":"2023-01-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            this.tags.addAll(tags);","lastModifiedDate":"2023-01-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Converts a given {@code Person} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(Person source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        phone \u003d source.getPhone().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        email \u003d source.getEmail().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        address \u003d source.getAddress().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        tags.addAll(source.getTags().stream()","lastModifiedDate":"2023-01-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"                .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"ruiyangzh"},"content":"    public Set\u003cTag\u003e getTags() throws IllegalValueException {","lastModifiedDate":"2023-10-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        final List\u003cTag\u003e personTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        for (JsonAdaptedTag tag : tags) {","lastModifiedDate":"2023-01-09"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            personTags.add(tag.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"ruiyangzh"},"content":"        return new HashSet\u003c\u003e(personTags);","lastModifiedDate":"2023-10-18"},{"lineNumber":67,"author":{"gitId":"ruiyangzh"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"ruiyangzh"},"content":"    public Name getName() throws IllegalValueException {","lastModifiedDate":"2023-10-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"ruiyangzh"},"content":"        return new Name(name);","lastModifiedDate":"2023-10-18"},{"lineNumber":77,"author":{"gitId":"ruiyangzh"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":78,"author":{"gitId":"ruiyangzh"},"content":"    public Phone getPhone() throws IllegalValueException {","lastModifiedDate":"2023-10-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        if (phone \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(phone)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"ruiyangzh"},"content":"        return new Phone(phone);","lastModifiedDate":"2023-10-18"},{"lineNumber":86,"author":{"gitId":"ruiyangzh"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":87,"author":{"gitId":"ruiyangzh"},"content":"    public Email getEmail() throws IllegalValueException {","lastModifiedDate":"2023-10-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        if (email \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(email)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"ruiyangzh"},"content":"        return new Email(email);","lastModifiedDate":"2023-10-18"},{"lineNumber":95,"author":{"gitId":"ruiyangzh"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":96,"author":{"gitId":"ruiyangzh"},"content":"    public Address getAddress() throws IllegalValueException {","lastModifiedDate":"2023-10-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        if (address \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(address)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"ruiyangzh"},"content":"        return new Address(address);","lastModifiedDate":"2023-10-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"ruiyangzh":15,"-":90}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedSeller.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ruiyangzh"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-10-16"},{"lineNumber":2,"author":{"gitId":"ruiyangzh"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":3,"author":{"gitId":"ruiyangzh"},"content":"import java.util.List;","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"ruiyangzh"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"ruiyangzh"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2023-10-16"},{"lineNumber":6,"author":{"gitId":"ruiyangzh"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2023-10-16"},{"lineNumber":7,"author":{"gitId":"ruiyangzh"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":8,"author":{"gitId":"ruiyangzh"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-10-16"},{"lineNumber":9,"author":{"gitId":"ruiyangzh"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2023-10-16"},{"lineNumber":10,"author":{"gitId":"ruiyangzh"},"content":"import seedu.address.model.person.seller.SellHouseInfo;","lastModifiedDate":"2023-10-16"},{"lineNumber":11,"author":{"gitId":"ruiyangzh"},"content":"import seedu.address.model.person.seller.Seller;","lastModifiedDate":"2023-10-16"},{"lineNumber":12,"author":{"gitId":"ruiyangzh"},"content":"/**","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"ruiyangzh"},"content":" * Jackson-friendly version of {@link Seller}.","lastModifiedDate":"2023-10-17"},{"lineNumber":14,"author":{"gitId":"ruiyangzh"},"content":" */","lastModifiedDate":"2023-10-17"},{"lineNumber":15,"author":{"gitId":"ruiyangzh"},"content":"public class JsonAdaptedSeller extends JsonAdaptedPerson {","lastModifiedDate":"2023-10-16"},{"lineNumber":16,"author":{"gitId":"ruiyangzh"},"content":"    private final String sellerInfo;","lastModifiedDate":"2023-10-16"},{"lineNumber":17,"author":{"gitId":"ruiyangzh"},"content":"    private final String sellingAddress;","lastModifiedDate":"2023-10-16"},{"lineNumber":18,"author":{"gitId":"ruiyangzh"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":19,"author":{"gitId":"ruiyangzh"},"content":"     * Constructs a {@code JsonAdaptedSeller} with the given seller details.","lastModifiedDate":"2023-10-16"},{"lineNumber":20,"author":{"gitId":"ruiyangzh"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":21,"author":{"gitId":"ruiyangzh"},"content":"    @JsonCreator","lastModifiedDate":"2023-10-16"},{"lineNumber":22,"author":{"gitId":"ruiyangzh"},"content":"    public JsonAdaptedSeller(@JsonProperty(\"name\") String name, @JsonProperty(\"phone\") String phone,","lastModifiedDate":"2023-10-16"},{"lineNumber":23,"author":{"gitId":"ruiyangzh"},"content":"                            @JsonProperty(\"email\") String email, @JsonProperty(\"address\") String address,","lastModifiedDate":"2023-10-16"},{"lineNumber":24,"author":{"gitId":"ruiyangzh"},"content":"                            @JsonProperty(\"sellingAddress\") String sellingAddress,","lastModifiedDate":"2023-10-16"},{"lineNumber":25,"author":{"gitId":"ruiyangzh"},"content":"                            @JsonProperty(\"buyerInfo\") String sellerInfo,","lastModifiedDate":"2023-10-16"},{"lineNumber":26,"author":{"gitId":"ruiyangzh"},"content":"                            @JsonProperty(\"tags\") List\u003cJsonAdaptedTag\u003e tags) {","lastModifiedDate":"2023-10-16"},{"lineNumber":27,"author":{"gitId":"ruiyangzh"},"content":"        super(name, phone, email, address, tags);","lastModifiedDate":"2023-10-16"},{"lineNumber":28,"author":{"gitId":"ruiyangzh"},"content":"        this.sellerInfo \u003d sellerInfo;","lastModifiedDate":"2023-10-16"},{"lineNumber":29,"author":{"gitId":"ruiyangzh"},"content":"        this.sellingAddress \u003d sellingAddress;","lastModifiedDate":"2023-10-16"},{"lineNumber":30,"author":{"gitId":"ruiyangzh"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":31,"author":{"gitId":"ruiyangzh"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":32,"author":{"gitId":"ruiyangzh"},"content":"     * Converts a given {@code Seller} into this class for Jackson use.","lastModifiedDate":"2023-10-16"},{"lineNumber":33,"author":{"gitId":"ruiyangzh"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":34,"author":{"gitId":"ruiyangzh"},"content":"    public JsonAdaptedSeller(Seller source) {","lastModifiedDate":"2023-10-16"},{"lineNumber":35,"author":{"gitId":"ruiyangzh"},"content":"        super(source);","lastModifiedDate":"2023-10-16"},{"lineNumber":36,"author":{"gitId":"ruiyangzh"},"content":"        this.sellingAddress \u003d source.getSellingAddress().value;","lastModifiedDate":"2023-10-16"},{"lineNumber":37,"author":{"gitId":"ruiyangzh"},"content":"        this.sellerInfo \u003d source.getSellHouseInfo().toString();","lastModifiedDate":"2023-10-16"},{"lineNumber":38,"author":{"gitId":"ruiyangzh"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":39,"author":{"gitId":"ruiyangzh"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":40,"author":{"gitId":"ruiyangzh"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":41,"author":{"gitId":"ruiyangzh"},"content":"     * Converts this Jackson-friendly adapted seller object into the model\u0027s {@code Seller} object.","lastModifiedDate":"2023-10-16"},{"lineNumber":42,"author":{"gitId":"ruiyangzh"},"content":"     *","lastModifiedDate":"2023-10-16"},{"lineNumber":43,"author":{"gitId":"ruiyangzh"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted seller.","lastModifiedDate":"2023-10-16"},{"lineNumber":44,"author":{"gitId":"ruiyangzh"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":45,"author":{"gitId":"ruiyangzh"},"content":"    public Seller toModelType() throws IllegalValueException {","lastModifiedDate":"2023-10-16"},{"lineNumber":46,"author":{"gitId":"ruiyangzh"},"content":"        if (sellerInfo \u003d\u003d null) {","lastModifiedDate":"2023-10-16"},{"lineNumber":47,"author":{"gitId":"ruiyangzh"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2023-10-16"},{"lineNumber":48,"author":{"gitId":"ruiyangzh"},"content":"                    SellHouseInfo.class.getSimpleName()));","lastModifiedDate":"2023-10-16"},{"lineNumber":49,"author":{"gitId":"ruiyangzh"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":50,"author":{"gitId":"ruiyangzh"},"content":"        if (!SellHouseInfo.isValidSellHouseInfo(sellerInfo)) {","lastModifiedDate":"2023-10-16"},{"lineNumber":51,"author":{"gitId":"ruiyangzh"},"content":"            throw new IllegalValueException(SellHouseInfo.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-16"},{"lineNumber":52,"author":{"gitId":"ruiyangzh"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":53,"author":{"gitId":"ruiyangzh"},"content":"        SellHouseInfo sellerInfoModel \u003d new SellHouseInfo(sellerInfo);","lastModifiedDate":"2023-10-16"},{"lineNumber":54,"author":{"gitId":"ruiyangzh"},"content":"        if (sellingAddress \u003d\u003d null) {","lastModifiedDate":"2023-10-16"},{"lineNumber":55,"author":{"gitId":"ruiyangzh"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2023-10-16"},{"lineNumber":56,"author":{"gitId":"ruiyangzh"},"content":"                    Address.class.getSimpleName()));","lastModifiedDate":"2023-10-16"},{"lineNumber":57,"author":{"gitId":"ruiyangzh"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":58,"author":{"gitId":"ruiyangzh"},"content":"        if (!Address.isValidAddress(sellingAddress)) {","lastModifiedDate":"2023-10-16"},{"lineNumber":59,"author":{"gitId":"ruiyangzh"},"content":"            throw new IllegalValueException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-16"},{"lineNumber":60,"author":{"gitId":"ruiyangzh"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":61,"author":{"gitId":"ruiyangzh"},"content":"        Address sellerAddressModel \u003d new Address(sellingAddress);","lastModifiedDate":"2023-10-16"},{"lineNumber":62,"author":{"gitId":"ruiyangzh"},"content":"        return new Seller(getName(), getPhone(), getEmail(), getAddress(), sellerAddressModel,","lastModifiedDate":"2023-10-18"},{"lineNumber":63,"author":{"gitId":"ruiyangzh"},"content":"                sellerInfoModel, getTags());","lastModifiedDate":"2023-10-18"},{"lineNumber":64,"author":{"gitId":"ruiyangzh"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":65,"author":{"gitId":"ruiyangzh"},"content":"}","lastModifiedDate":"2023-10-16"}],"authorContributionMap":{"ruiyangzh":65}},{"path":"src/main/java/seedu/address/storage/JsonAddressBookStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":5,"author":{"gitId":"ruiyangzh"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-10-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-06-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.FileUtil;","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"andytoh1"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2023-10-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"ruiyangzh"},"content":" * A class to access AddressBook data stored as json files on the hard disk.","lastModifiedDate":"2023-10-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class JsonAddressBookStorage implements AddressBookStorage {","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonAddressBookStorage.class);","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private Path filePath;","lastModifiedDate":"2023-10-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"ruiyangzh"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":30,"author":{"gitId":"ruiyangzh"},"content":"     * Constructs a JsonAddressBookStorage.","lastModifiedDate":"2023-10-18"},{"lineNumber":31,"author":{"gitId":"ruiyangzh"},"content":"     * @param filePath the file path.","lastModifiedDate":"2023-10-19"},{"lineNumber":32,"author":{"gitId":"ruiyangzh"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public JsonAddressBookStorage(Path filePath) {","lastModifiedDate":"2023-10-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-10-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":36,"author":{"gitId":"ruiyangzh"},"content":"    public Path getFilePath() {","lastModifiedDate":"2023-10-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return filePath;","lastModifiedDate":"2023-10-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook() throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return readAddressBook(filePath);","lastModifiedDate":"2023-10-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Similar to {@link #readAddressBook()}.","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2023-10-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * @throws DataLoadingException if loading the data from storage failed.","lastModifiedDate":"2023-06-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"ruiyangzh"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook(Path filePath)","lastModifiedDate":"2023-10-19"},{"lineNumber":52,"author":{"gitId":"ruiyangzh"},"content":"            throws DataLoadingException {","lastModifiedDate":"2023-10-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2023-10-19"},{"lineNumber":54,"author":{"gitId":"ruiyangzh"},"content":"        Optional\u003cJsonSerializableAddressBook\u003e jsonBook \u003d JsonUtil.readJsonFile(","lastModifiedDate":"2023-10-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"                filePath, JsonSerializableAddressBook.class);","lastModifiedDate":"2023-10-19"},{"lineNumber":56,"author":{"gitId":"ruiyangzh"},"content":"        if (jsonBook.isEmpty()) {","lastModifiedDate":"2023-10-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"ruiyangzh"},"content":"        AddressBook addressBook;","lastModifiedDate":"2023-10-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"ruiyangzh"},"content":"            addressBook \u003d jsonBook.get().toModelType();","lastModifiedDate":"2023-10-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            logger.info(\"Illegal values found in \" + filePath + \": \" + ive.getMessage());","lastModifiedDate":"2023-10-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            throw new DataLoadingException(ive);","lastModifiedDate":"2023-06-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"ruiyangzh"},"content":"        return Optional.of(addressBook);","lastModifiedDate":"2023-10-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void saveAddressBook(ReadOnlyAddressBook addressBook) throws IOException {","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        saveAddressBook(addressBook, filePath);","lastModifiedDate":"2023-10-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * Similar to {@link #saveAddressBook(ReadOnlyAddressBook)}.","lastModifiedDate":"2023-10-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2023-10-18"},{"lineNumber":77,"author":{"gitId":"ruiyangzh"},"content":"     * @param filePath location of the file data. Cannot be null.","lastModifiedDate":"2023-10-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2023-10-19"},{"lineNumber":80,"author":{"gitId":"ruiyangzh"},"content":"        requireAllNonNull(addressBook, filePath);","lastModifiedDate":"2023-10-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        FileUtil.createIfMissing(filePath);","lastModifiedDate":"2023-10-19"},{"lineNumber":82,"author":{"gitId":"andytoh1"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        JsonUtil.saveJsonFile(new JsonSerializableAddressBook(addressBook), filePath);","lastModifiedDate":"2023-10-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"ruiyangzh":16,"andytoh1":2,"-":67}},{"path":"src/main/java/seedu/address/storage/JsonSerializableAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"ruiyangzh"},"content":"import seedu.address.model.person.buyer.Buyer;","lastModifiedDate":"2023-10-18"},{"lineNumber":15,"author":{"gitId":"ruiyangzh"},"content":"import seedu.address.model.person.seller.Seller;","lastModifiedDate":"2023-10-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * An Immutable AddressBook that is serializable to JSON format.","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"@JsonRootName(value \u003d \"addressbook\")","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"class JsonSerializableAddressBook {","lastModifiedDate":"2018-12-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"Persons list contains duplicate person(s).\";","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"ruiyangzh"},"content":"    private final List\u003cJsonAdaptedBuyer\u003e buyers \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-18"},{"lineNumber":26,"author":{"gitId":"ruiyangzh"},"content":"    private final List\u003cJsonAdaptedSeller\u003e sellers \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonSerializableAddressBook} with the given persons.","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"ruiyangzh"},"content":"    public JsonSerializableAddressBook(@JsonProperty(\"buyers\") List\u003c? extends JsonAdaptedBuyer\u003e buyers,","lastModifiedDate":"2023-10-18"},{"lineNumber":33,"author":{"gitId":"ruiyangzh"},"content":"                                       @JsonProperty(\"sellers\") List\u003c? extends JsonAdaptedSeller\u003e sellers) {","lastModifiedDate":"2023-10-18"},{"lineNumber":34,"author":{"gitId":"ruiyangzh"},"content":"        this.buyers.addAll(buyers);","lastModifiedDate":"2023-10-18"},{"lineNumber":35,"author":{"gitId":"ruiyangzh"},"content":"        this.sellers.addAll(sellers);","lastModifiedDate":"2023-10-18"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Converts a given {@code ReadOnlyAddressBook} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableAddressBook}.","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public JsonSerializableAddressBook(ReadOnlyAddressBook source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"ruiyangzh"},"content":"        sellers.addAll(source.getSellerList().stream().map(JsonAdaptedSeller::new).collect(Collectors.toList()));","lastModifiedDate":"2023-10-18"},{"lineNumber":45,"author":{"gitId":"ruiyangzh"},"content":"        buyers.addAll(source.getBuyerList().stream().map(JsonAdaptedBuyer::new).collect(Collectors.toList()));","lastModifiedDate":"2023-10-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Converts this address book into the model\u0027s {@code AddressBook} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public AddressBook toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"ruiyangzh"},"content":"        for (JsonAdaptedBuyer jsonAdaptedBuyer : buyers) {","lastModifiedDate":"2023-10-18"},{"lineNumber":56,"author":{"gitId":"ruiyangzh"},"content":"            Buyer buyer \u003d jsonAdaptedBuyer.toModelType();","lastModifiedDate":"2023-10-18"},{"lineNumber":57,"author":{"gitId":"ruiyangzh"},"content":"            if (addressBook.hasBuyer(buyer)) {","lastModifiedDate":"2023-10-18"},{"lineNumber":58,"author":{"gitId":"-"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"ruiyangzh"},"content":"            addressBook.addBuyer(buyer);","lastModifiedDate":"2023-10-18"},{"lineNumber":61,"author":{"gitId":"ruiyangzh"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":62,"author":{"gitId":"ruiyangzh"},"content":"        for (JsonAdaptedSeller jsonAdaptedSeller : sellers) {","lastModifiedDate":"2023-10-18"},{"lineNumber":63,"author":{"gitId":"ruiyangzh"},"content":"            Seller seller \u003d jsonAdaptedSeller.toModelType();","lastModifiedDate":"2023-10-18"},{"lineNumber":64,"author":{"gitId":"ruiyangzh"},"content":"            if (addressBook.hasSeller(seller)) {","lastModifiedDate":"2023-10-18"},{"lineNumber":65,"author":{"gitId":"ruiyangzh"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2023-10-18"},{"lineNumber":66,"author":{"gitId":"ruiyangzh"},"content":"            }","lastModifiedDate":"2023-10-18"},{"lineNumber":67,"author":{"gitId":"ruiyangzh"},"content":"            addressBook.addSeller(seller);","lastModifiedDate":"2023-10-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"ruiyangzh":21,"-":51}},{"path":"src/main/java/seedu/address/storage/Storage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-06-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-09-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * API of the Storage component","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public interface Storage extends AddressBookStorage, UserPrefsStorage {","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataLoadingException;","lastModifiedDate":"2023-06-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","lastModifiedDate":"2018-11-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"ruiyangzh"},"content":"    Path getFilePath();","lastModifiedDate":"2023-10-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    Optional\u003cReadOnlyAddressBook\u003e readAddressBook() throws DataLoadingException;","lastModifiedDate":"2023-06-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    void saveAddressBook(ReadOnlyAddressBook addressBook) throws IOException;","lastModifiedDate":"2016-09-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"ruiyangzh":1,"-":31}},{"path":"src/main/java/seedu/address/storage/StorageManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-06-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Manages storage of AddressBook data in local storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class StorageManager implements Storage {","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(StorageManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private AddressBookStorage addressBookStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private UserPrefsStorage userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Creates a {@code StorageManager} with the given {@code AddressBookStorage} and {@code UserPrefStorage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public StorageManager(AddressBookStorage addressBookStorage, UserPrefsStorage userPrefsStorage) {","lastModifiedDate":"2016-10-01"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.addressBookStorage \u003d addressBookStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this.userPrefsStorage \u003d userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-02-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        return userPrefsStorage.getUserPrefsFilePath();","lastModifiedDate":"2017-02-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataLoadingException {","lastModifiedDate":"2023-06-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return userPrefsStorage.readUserPrefs();","lastModifiedDate":"2016-10-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        userPrefsStorage.saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"ruiyangzh"},"content":"    public Path getFilePath() {","lastModifiedDate":"2023-10-19"},{"lineNumber":53,"author":{"gitId":"ruiyangzh"},"content":"        return addressBookStorage.getFilePath();","lastModifiedDate":"2023-10-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook() throws DataLoadingException {","lastModifiedDate":"2023-06-15"},{"lineNumber":58,"author":{"gitId":"ruiyangzh"},"content":"        return readAddressBook(addressBookStorage.getFilePath());","lastModifiedDate":"2023-10-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":62,"author":{"gitId":"ruiyangzh"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook(Path filePath)","lastModifiedDate":"2023-10-19"},{"lineNumber":63,"author":{"gitId":"ruiyangzh"},"content":"            throws DataLoadingException {","lastModifiedDate":"2023-10-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to read data from file: \" + filePath);","lastModifiedDate":"2023-10-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return addressBookStorage.readAddressBook(filePath);","lastModifiedDate":"2023-10-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void saveAddressBook(ReadOnlyAddressBook addressBook) throws IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"ruiyangzh"},"content":"        saveAddressBook(addressBook, addressBookStorage.getFilePath());","lastModifiedDate":"2023-10-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2023-10-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to write to data file: \" + filePath);","lastModifiedDate":"2023-10-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        addressBookStorage.saveAddressBook(addressBook, filePath);","lastModifiedDate":"2023-10-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"ruiyangzh":6,"-":73}},{"path":"src/main/java/seedu/address/ui/BuyerCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ruiyangzh"},"content":"package seedu.address.ui;","lastModifiedDate":"2023-10-18"},{"lineNumber":2,"author":{"gitId":"ruiyangzh"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":3,"author":{"gitId":"ruiyangzh"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":4,"author":{"gitId":"ruiyangzh"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-10-18"},{"lineNumber":5,"author":{"gitId":"ruiyangzh"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-10-18"},{"lineNumber":6,"author":{"gitId":"ruiyangzh"},"content":"import seedu.address.model.person.buyer.Buyer;","lastModifiedDate":"2023-10-18"},{"lineNumber":7,"author":{"gitId":"ruiyangzh"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":8,"author":{"gitId":"ruiyangzh"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":9,"author":{"gitId":"ruiyangzh"},"content":"/**","lastModifiedDate":"2023-10-18"},{"lineNumber":10,"author":{"gitId":"ruiyangzh"},"content":" * An UI component that displays information of a {@code Buyer}.","lastModifiedDate":"2023-10-18"},{"lineNumber":11,"author":{"gitId":"ruiyangzh"},"content":" */","lastModifiedDate":"2023-10-18"},{"lineNumber":12,"author":{"gitId":"ruiyangzh"},"content":"public class BuyerCard extends PersonCard {","lastModifiedDate":"2023-10-18"},{"lineNumber":13,"author":{"gitId":"ruiyangzh"},"content":"    private static final String FXML \u003d \"BuyerListCard.fxml\";","lastModifiedDate":"2023-10-18"},{"lineNumber":14,"author":{"gitId":"ruiyangzh"},"content":"    @FXML","lastModifiedDate":"2023-10-18"},{"lineNumber":15,"author":{"gitId":"ruiyangzh"},"content":"    private Label houseInfo;","lastModifiedDate":"2023-10-18"},{"lineNumber":16,"author":{"gitId":"ruiyangzh"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":17,"author":{"gitId":"ruiyangzh"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":18,"author":{"gitId":"ruiyangzh"},"content":"     * Creates a {@code Buyercard} with the given {@code Buyer} and index to display.","lastModifiedDate":"2023-10-18"},{"lineNumber":19,"author":{"gitId":"ruiyangzh"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":20,"author":{"gitId":"ruiyangzh"},"content":"    public BuyerCard(Buyer buyer, int displayedIndex) {","lastModifiedDate":"2023-10-18"},{"lineNumber":21,"author":{"gitId":"ruiyangzh"},"content":"        super(buyer, displayedIndex, FXML);","lastModifiedDate":"2023-10-18"},{"lineNumber":22,"author":{"gitId":"ruiyangzh"},"content":"        houseInfo.setText(buyer.getBuyHouseInfo().toString());","lastModifiedDate":"2023-10-18"},{"lineNumber":23,"author":{"gitId":"ruiyangzh"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":24,"author":{"gitId":"ruiyangzh"},"content":"}","lastModifiedDate":"2023-10-18"}],"authorContributionMap":{"ruiyangzh":24}},{"path":"src/main/java/seedu/address/ui/DisplayableListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ruiyangzh"},"content":"package seedu.address.ui;","lastModifiedDate":"2023-10-18"},{"lineNumber":2,"author":{"gitId":"ruiyangzh"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":3,"author":{"gitId":"ruiyangzh"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-10-18"},{"lineNumber":4,"author":{"gitId":"ruiyangzh"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":5,"author":{"gitId":"ruiyangzh"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-10-18"},{"lineNumber":6,"author":{"gitId":"ruiyangzh"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-10-18"},{"lineNumber":7,"author":{"gitId":"ruiyangzh"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2023-10-18"},{"lineNumber":8,"author":{"gitId":"ruiyangzh"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2023-10-18"},{"lineNumber":9,"author":{"gitId":"ruiyangzh"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-10-18"},{"lineNumber":10,"author":{"gitId":"ruiyangzh"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-10-18"},{"lineNumber":11,"author":{"gitId":"ruiyangzh"},"content":"import seedu.address.model.util.Displayable;","lastModifiedDate":"2023-10-18"},{"lineNumber":12,"author":{"gitId":"ruiyangzh"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":13,"author":{"gitId":"ruiyangzh"},"content":"/**","lastModifiedDate":"2023-10-18"},{"lineNumber":14,"author":{"gitId":"ruiyangzh"},"content":" * Panel containing the list of persons.","lastModifiedDate":"2023-10-18"},{"lineNumber":15,"author":{"gitId":"ruiyangzh"},"content":" */","lastModifiedDate":"2023-10-18"},{"lineNumber":16,"author":{"gitId":"ruiyangzh"},"content":"public class DisplayableListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-10-18"},{"lineNumber":17,"author":{"gitId":"ruiyangzh"},"content":"    private static final String FXML \u003d \"DisplayableListPanel.fxml\";","lastModifiedDate":"2023-10-18"},{"lineNumber":18,"author":{"gitId":"ruiyangzh"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(DisplayableListPanel.class);","lastModifiedDate":"2023-10-18"},{"lineNumber":19,"author":{"gitId":"ruiyangzh"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":20,"author":{"gitId":"ruiyangzh"},"content":"    @FXML","lastModifiedDate":"2023-10-18"},{"lineNumber":21,"author":{"gitId":"ruiyangzh"},"content":"    private ListView\u003cDisplayable\u003e displayableListView;","lastModifiedDate":"2023-10-18"},{"lineNumber":22,"author":{"gitId":"ruiyangzh"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":23,"author":{"gitId":"ruiyangzh"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":24,"author":{"gitId":"ruiyangzh"},"content":"     * Creates a {@code PersonListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2023-10-18"},{"lineNumber":25,"author":{"gitId":"ruiyangzh"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":26,"author":{"gitId":"peasantbird"},"content":"    public DisplayableListPanel(ObservableList\u003c? extends Displayable\u003e displayableList) {","lastModifiedDate":"2023-10-19"},{"lineNumber":27,"author":{"gitId":"ruiyangzh"},"content":"        super(FXML);","lastModifiedDate":"2023-10-18"},{"lineNumber":28,"author":{"gitId":"peasantbird"},"content":"        displayableListView.setItems((ObservableList\u003cDisplayable\u003e) displayableList);","lastModifiedDate":"2023-10-19"},{"lineNumber":29,"author":{"gitId":"ruiyangzh"},"content":"        displayableListView.setCellFactory(listView -\u003e new DisplayableListViewCell());","lastModifiedDate":"2023-10-18"},{"lineNumber":30,"author":{"gitId":"ruiyangzh"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":31,"author":{"gitId":"ruiyangzh"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":32,"author":{"gitId":"ruiyangzh"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":33,"author":{"gitId":"ruiyangzh"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Person} using a {@code PersonCard}.","lastModifiedDate":"2023-10-18"},{"lineNumber":34,"author":{"gitId":"ruiyangzh"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":35,"author":{"gitId":"ruiyangzh"},"content":"    class DisplayableListViewCell extends ListCell\u003cDisplayable\u003e {","lastModifiedDate":"2023-10-18"},{"lineNumber":36,"author":{"gitId":"ruiyangzh"},"content":"        @Override","lastModifiedDate":"2023-10-18"},{"lineNumber":37,"author":{"gitId":"ruiyangzh"},"content":"        protected void updateItem(Displayable displayable, boolean empty) {","lastModifiedDate":"2023-10-18"},{"lineNumber":38,"author":{"gitId":"ruiyangzh"},"content":"            super.updateItem(displayable, empty);","lastModifiedDate":"2023-10-18"},{"lineNumber":39,"author":{"gitId":"ruiyangzh"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":40,"author":{"gitId":"ruiyangzh"},"content":"            if (empty || displayable \u003d\u003d null) {","lastModifiedDate":"2023-10-18"},{"lineNumber":41,"author":{"gitId":"ruiyangzh"},"content":"                setGraphic(null);","lastModifiedDate":"2023-10-18"},{"lineNumber":42,"author":{"gitId":"ruiyangzh"},"content":"                setText(null);","lastModifiedDate":"2023-10-18"},{"lineNumber":43,"author":{"gitId":"ruiyangzh"},"content":"            } else {","lastModifiedDate":"2023-10-18"},{"lineNumber":44,"author":{"gitId":"ruiyangzh"},"content":"                setGraphic(displayable.display(getIndex() + 1).getRoot());","lastModifiedDate":"2023-10-18"},{"lineNumber":45,"author":{"gitId":"ruiyangzh"},"content":"            }","lastModifiedDate":"2023-10-18"},{"lineNumber":46,"author":{"gitId":"ruiyangzh"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":47,"author":{"gitId":"ruiyangzh"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":48,"author":{"gitId":"ruiyangzh"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":49,"author":{"gitId":"ruiyangzh"},"content":"}","lastModifiedDate":"2023-10-18"}],"authorContributionMap":{"ruiyangzh":47,"peasantbird":2}},{"path":"src/main/java/seedu/address/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-06-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2016-08-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2016-09-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2017-06-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-11-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2018-08-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private Stage primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"peasantbird"},"content":"    private DisplayableListPanel buyerListPanel;","lastModifiedDate":"2023-10-19"},{"lineNumber":35,"author":{"gitId":"peasantbird"},"content":"    private DisplayableListPanel sellerListPanel;","lastModifiedDate":"2023-10-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private HelpWindow helpWindow;","lastModifiedDate":"2018-03-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2016-08-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"peasantbird"},"content":"    private StackPane buyerListPanelPlaceholder;","lastModifiedDate":"2023-10-19"},{"lineNumber":47,"author":{"gitId":"peasantbird"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":48,"author":{"gitId":"peasantbird"},"content":"    @FXML","lastModifiedDate":"2023-10-19"},{"lineNumber":49,"author":{"gitId":"peasantbird"},"content":"    private StackPane sellerListPanelPlaceholder;","lastModifiedDate":"2023-10-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private StackPane resultDisplayPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    private StackPane statusbarPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public MainWindow(Stage primaryStage, Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":66,"author":{"gitId":"peasantbird"},"content":"        this.primaryStage.setResizable(true);","lastModifiedDate":"2023-10-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2016-09-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        setAccelerators();","lastModifiedDate":"2016-09-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2018-03-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2016-12-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2016-12-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    private void setAccelerators() {","lastModifiedDate":"2016-09-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2016-12-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2016-12-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","lastModifiedDate":"2016-12-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2016-12-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2016-12-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-12-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2016-12-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","lastModifiedDate":"2016-12-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"         * is fixed in later version of SDK.","lastModifiedDate":"2016-12-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2016-12-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2016-12-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will","lastModifiedDate":"2016-12-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"         * not work when the focus is in them because the key event is consumed by","lastModifiedDate":"2016-12-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"         * the TextInputControl(s).","lastModifiedDate":"2016-12-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2016-12-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"         * help window purposely so to support accelerators even when focus is","lastModifiedDate":"2016-12-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"         * in CommandBox or ResultDisplay.","lastModifiedDate":"2016-12-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2016-12-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2016-12-18"},{"lineNumber":109,"author":{"gitId":"-"},"content":"                event.consume();","lastModifiedDate":"2016-12-18"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-12-18"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2016-12-18"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2017-08-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","lastModifiedDate":"2016-09-21"},{"lineNumber":118,"author":{"gitId":"peasantbird"},"content":"        buyerListPanel \u003d new DisplayableListPanel(logic.getFilteredBuyerList());","lastModifiedDate":"2023-10-19"},{"lineNumber":119,"author":{"gitId":"peasantbird"},"content":"        buyerListPanelPlaceholder.getChildren().add(buyerListPanel.getRoot());","lastModifiedDate":"2023-10-19"},{"lineNumber":120,"author":{"gitId":"peasantbird"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":121,"author":{"gitId":"peasantbird"},"content":"        sellerListPanel \u003d new DisplayableListPanel(logic.getFilteredSellerList());","lastModifiedDate":"2023-10-19"},{"lineNumber":122,"author":{"gitId":"peasantbird"},"content":"        sellerListPanelPlaceholder.getChildren().add(sellerListPanel.getRoot());","lastModifiedDate":"2023-10-19"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2018-12-09"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":127,"author":{"gitId":"ruiyangzh"},"content":"        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(logic.getFilePath());","lastModifiedDate":"2023-10-19"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeCommand);","lastModifiedDate":"2019-01-25"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2018-11-27"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2018-11-27"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2018-11-27"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2018-11-27"},{"lineNumber":141,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2018-11-27"},{"lineNumber":142,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2018-11-27"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2018-03-15"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    public void handleHelp() {","lastModifiedDate":"2016-08-31"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2018-03-15"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            helpWindow.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2018-03-15"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            helpWindow.focus();","lastModifiedDate":"2018-03-15"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-15"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    void show() {","lastModifiedDate":"2016-10-15"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        primaryStage.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":163,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2016-08-18"},{"lineNumber":164,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    private void handleExit() {","lastModifiedDate":"2016-08-18"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2018-12-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"                (int) primaryStage.getX(), (int) primaryStage.getY());","lastModifiedDate":"2018-12-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2018-12-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        helpWindow.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        primaryStage.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":174,"author":{"gitId":"peasantbird"},"content":"    public DisplayableListPanel getBuyerListPanel() {","lastModifiedDate":"2023-10-19"},{"lineNumber":175,"author":{"gitId":"peasantbird"},"content":"        return buyerListPanel;","lastModifiedDate":"2023-10-19"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-25"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":179,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":180,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-09"},{"lineNumber":181,"author":{"gitId":"-"},"content":"     * @see seedu.address.logic.Logic#execute(String)","lastModifiedDate":"2018-12-09"},{"lineNumber":182,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    private CommandResult executeCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2018-12-09"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":185,"author":{"gitId":"-"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":186,"author":{"gitId":"-"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":187,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":189,"author":{"gitId":"-"},"content":"            if (commandResult.isShowHelp()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":190,"author":{"gitId":"-"},"content":"                handleHelp();","lastModifiedDate":"2018-12-09"},{"lineNumber":191,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":193,"author":{"gitId":"-"},"content":"            if (commandResult.isExit()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":194,"author":{"gitId":"-"},"content":"                handleExit();","lastModifiedDate":"2018-12-09"},{"lineNumber":195,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":197,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2018-12-09"},{"lineNumber":199,"author":{"gitId":"-"},"content":"            logger.info(\"An error occurred while executing command: \" + commandText);","lastModifiedDate":"2023-06-13"},{"lineNumber":200,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2018-12-09"},{"lineNumber":201,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2018-12-09"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":204,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"ruiyangzh":1,"peasantbird":14,"-":189}},{"path":"src/main/java/seedu/address/ui/PersonCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"ruiyangzh"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":4,"author":{"gitId":"ruiyangzh"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-10-18"},{"lineNumber":5,"author":{"gitId":"ruiyangzh"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Comparator;","lastModifiedDate":"2019-01-02"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-02"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":16,"author":{"gitId":"ruiyangzh"},"content":" * An abstract UI component that when implemented, displays information of a {@code Person} according to a provided","lastModifiedDate":"2023-10-18"},{"lineNumber":17,"author":{"gitId":"ruiyangzh"},"content":" * FXML scheme.","lastModifiedDate":"2023-10-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":19,"author":{"gitId":"ruiyangzh"},"content":"abstract class PersonCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-10-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2017-03-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2017-03-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2017-03-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public final Person person;","lastModifiedDate":"2018-01-10"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Label name;","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private Label id;","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private Label phone;","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private Label address;","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private Label email;","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private FlowPane tags;","lastModifiedDate":"2016-12-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonCode} with the given {@code Person} and index to display.","lastModifiedDate":"2020-05-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":49,"author":{"gitId":"ruiyangzh"},"content":"    public PersonCard(Person person, int displayedIndex, String fxml) {","lastModifiedDate":"2023-10-18"},{"lineNumber":50,"author":{"gitId":"ruiyangzh"},"content":"        super(fxml);","lastModifiedDate":"2023-10-18"},{"lineNumber":51,"author":{"gitId":"ruiyangzh"},"content":"        requireAllNonNull(displayedIndex, person);","lastModifiedDate":"2023-10-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        this.person \u003d person;","lastModifiedDate":"2017-07-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        name.setText(person.getName().fullName);","lastModifiedDate":"2017-12-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        phone.setText(person.getPhone().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        address.setText(person.getAddress().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        email.setText(person.getEmail().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        person.getTags().stream()","lastModifiedDate":"2019-01-02"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2019-01-02"},{"lineNumber":60,"author":{"gitId":"-"},"content":"                .forEach(tag -\u003e tags.getChildren().add(new Label(tag.tagName)));","lastModifiedDate":"2019-01-02"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"ruiyangzh":9,"-":53}},{"path":"src/main/java/seedu/address/ui/SellerCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ruiyangzh"},"content":"package seedu.address.ui;","lastModifiedDate":"2023-10-18"},{"lineNumber":2,"author":{"gitId":"ruiyangzh"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":3,"author":{"gitId":"ruiyangzh"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":4,"author":{"gitId":"ruiyangzh"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-10-18"},{"lineNumber":5,"author":{"gitId":"ruiyangzh"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-10-18"},{"lineNumber":6,"author":{"gitId":"ruiyangzh"},"content":"import seedu.address.model.person.seller.Seller;","lastModifiedDate":"2023-10-18"},{"lineNumber":7,"author":{"gitId":"ruiyangzh"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":8,"author":{"gitId":"ruiyangzh"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":9,"author":{"gitId":"ruiyangzh"},"content":"/**","lastModifiedDate":"2023-10-18"},{"lineNumber":10,"author":{"gitId":"ruiyangzh"},"content":" * An UI component that displays information of a {@code Seller}.","lastModifiedDate":"2023-10-18"},{"lineNumber":11,"author":{"gitId":"ruiyangzh"},"content":" */","lastModifiedDate":"2023-10-18"},{"lineNumber":12,"author":{"gitId":"ruiyangzh"},"content":"public class SellerCard extends PersonCard {","lastModifiedDate":"2023-10-18"},{"lineNumber":13,"author":{"gitId":"ruiyangzh"},"content":"    private static final String FXML \u003d \"SellerListCard.fxml\";","lastModifiedDate":"2023-10-18"},{"lineNumber":14,"author":{"gitId":"ruiyangzh"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":15,"author":{"gitId":"ruiyangzh"},"content":"    @FXML","lastModifiedDate":"2023-10-18"},{"lineNumber":16,"author":{"gitId":"ruiyangzh"},"content":"    private Label sellingAddress;","lastModifiedDate":"2023-10-18"},{"lineNumber":17,"author":{"gitId":"ruiyangzh"},"content":"    @FXML","lastModifiedDate":"2023-10-18"},{"lineNumber":18,"author":{"gitId":"ruiyangzh"},"content":"    private Label houseInfo;","lastModifiedDate":"2023-10-18"},{"lineNumber":19,"author":{"gitId":"ruiyangzh"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":20,"author":{"gitId":"ruiyangzh"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":21,"author":{"gitId":"ruiyangzh"},"content":"     * Creates a {@code Sellercard} with the given {@code Seller} and index to display.","lastModifiedDate":"2023-10-18"},{"lineNumber":22,"author":{"gitId":"ruiyangzh"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":23,"author":{"gitId":"ruiyangzh"},"content":"    public SellerCard(Seller seller, int displayedIndex) {","lastModifiedDate":"2023-10-18"},{"lineNumber":24,"author":{"gitId":"ruiyangzh"},"content":"        super(seller, displayedIndex, FXML);","lastModifiedDate":"2023-10-18"},{"lineNumber":25,"author":{"gitId":"ruiyangzh"},"content":"        houseInfo.setText(seller.getSellHouseInfo().toString());","lastModifiedDate":"2023-10-18"},{"lineNumber":26,"author":{"gitId":"ruiyangzh"},"content":"        sellingAddress.setText(seller.getSellingAddress().value);","lastModifiedDate":"2023-10-18"},{"lineNumber":27,"author":{"gitId":"ruiyangzh"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":28,"author":{"gitId":"ruiyangzh"},"content":"}","lastModifiedDate":"2023-10-18"}],"authorContributionMap":{"ruiyangzh":28}},{"path":"src/main/java/seedu/address/ui/UiManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.application.Platform;","lastModifiedDate":"2016-08-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert;","lastModifiedDate":"2016-08-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert.AlertType;","lastModifiedDate":"2016-08-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.MainApp;","lastModifiedDate":"2016-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The manager of the UI component.","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class UiManager implements Ui {","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String ALERT_DIALOG_PANE_FIELD_ID \u003d \"alertDialogPane\";","lastModifiedDate":"2017-04-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(UiManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":23,"author":{"gitId":"ruiyangzh"},"content":"    private static final String ICON_APPLICATION \u003d \"/images/RTPM_32.png\";","lastModifiedDate":"2023-10-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private MainWindow mainWindow;","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Creates a {@code UiManager} with the given {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public UiManager(Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-09-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        logger.info(\"Starting UI...\");","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        //Set the application icon.","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        primaryStage.getIcons().add(getImage(ICON_APPLICATION));","lastModifiedDate":"2016-08-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            mainWindow \u003d new MainWindow(primaryStage, logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            mainWindow.show(); //This should be called before creating other UI parts","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            mainWindow.fillInnerParts();","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        } catch (Throwable e) {","lastModifiedDate":"2016-08-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            logger.severe(StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            showFatalErrorDialogAndShutdown(\"Fatal error during initializing\", e);","lastModifiedDate":"2016-08-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2016-08-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    void showAlertDialogAndWait(Alert.AlertType type, String title, String headerText, String contentText) {","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(mainWindow.getPrimaryStage(), type, title, headerText, contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Shows an alert dialog on {@code owner} with the given parameters.","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * This method only returns after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    private static void showAlertDialogAndWait(Stage owner, AlertType type, String title, String headerText,","lastModifiedDate":"2016-09-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                                               String contentText) {","lastModifiedDate":"2016-08-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        final Alert alert \u003d new Alert(type);","lastModifiedDate":"2016-08-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        alert.getDialogPane().getStylesheets().add(\"view/DarkTheme.css\");","lastModifiedDate":"2016-08-20"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        alert.initOwner(owner);","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        alert.setTitle(title);","lastModifiedDate":"2016-08-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        alert.setHeaderText(headerText);","lastModifiedDate":"2016-08-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        alert.setContentText(contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        alert.getDialogPane().setId(ALERT_DIALOG_PANE_FIELD_ID);","lastModifiedDate":"2016-10-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        alert.showAndWait();","lastModifiedDate":"2016-08-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Shows an error alert dialog with {@code title} and error message, {@code e},","lastModifiedDate":"2017-08-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * and exits the application after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private void showFatalErrorDialogAndShutdown(String title, Throwable e) {","lastModifiedDate":"2016-09-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        logger.severe(title + \" \" + e.getMessage() + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(Alert.AlertType.ERROR, title, e.getMessage(), e.toString());","lastModifiedDate":"2016-08-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        Platform.exit();","lastModifiedDate":"2016-08-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        System.exit(1);","lastModifiedDate":"2016-08-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"ruiyangzh":1,"-":87}},{"path":"src/main/resources/view/BuyerListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"J-hta-n"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":2,"author":{"gitId":"J-hta-n"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":3,"author":{"gitId":"J-hta-n"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":4,"author":{"gitId":"J-hta-n"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":5,"author":{"gitId":"J-hta-n"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":6,"author":{"gitId":"J-hta-n"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":7,"author":{"gitId":"J-hta-n"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":8,"author":{"gitId":"J-hta-n"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":9,"author":{"gitId":"J-hta-n"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":10,"author":{"gitId":"J-hta-n"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":11,"author":{"gitId":"J-hta-n"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":12,"author":{"gitId":"J-hta-n"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":13,"author":{"gitId":"J-hta-n"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":14,"author":{"gitId":"J-hta-n"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":15,"author":{"gitId":"J-hta-n"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":16,"author":{"gitId":"J-hta-n"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":17,"author":{"gitId":"J-hta-n"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":18,"author":{"gitId":"J-hta-n"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":19,"author":{"gitId":"J-hta-n"},"content":"        \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":20,"author":{"gitId":"J-hta-n"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":21,"author":{"gitId":"J-hta-n"},"content":"      \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":22,"author":{"gitId":"J-hta-n"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":23,"author":{"gitId":"J-hta-n"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":24,"author":{"gitId":"J-hta-n"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":25,"author":{"gitId":"J-hta-n"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":26,"author":{"gitId":"J-hta-n"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":27,"author":{"gitId":"J-hta-n"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":28,"author":{"gitId":"J-hta-n"},"content":"        \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":29,"author":{"gitId":"J-hta-n"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":30,"author":{"gitId":"J-hta-n"},"content":"      \u003cFlowPane fx:id\u003d\"tags\" /\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":31,"author":{"gitId":"J-hta-n"},"content":"      \u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":32,"author":{"gitId":"J-hta-n"},"content":"      \u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" /\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":33,"author":{"gitId":"J-hta-n"},"content":"      \u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":34,"author":{"gitId":"J-hta-n"},"content":"      \u003cLabel fx:id\u003d\"houseInfo\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":35,"author":{"gitId":"J-hta-n"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":36,"author":{"gitId":"J-hta-n"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":37,"author":{"gitId":"J-hta-n"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2023-10-19"}],"authorContributionMap":{"J-hta-n":37}},{"path":"src/main/resources/view/DisplayableListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"J-hta-n"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":2,"author":{"gitId":"J-hta-n"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":3,"author":{"gitId":"J-hta-n"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":4,"author":{"gitId":"J-hta-n"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":5,"author":{"gitId":"J-hta-n"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":6,"author":{"gitId":"J-hta-n"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":7,"author":{"gitId":"J-hta-n"},"content":"  \u003cListView fx:id\u003d\"displayableListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":8,"author":{"gitId":"J-hta-n"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2023-10-19"}],"authorContributionMap":{"J-hta-n":8}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":12,"author":{"gitId":"J-hta-n"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":14,"author":{"gitId":"J-hta-n"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"\u003cfx:root type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2023-07-27"},{"lineNumber":16,"author":{"gitId":"ruiyangzh"},"content":"         title\u003d\"RealtorTrackerPlusMax\" minWidth\u003d\"450\" minHeight\u003d\"600\" onCloseRequest\u003d\"#handleExit\"\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":18,"author":{"gitId":"ruiyangzh"},"content":"    \u003cImage url\u003d\"@/images/RTPM_32.png\" /\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@DarkTheme.css\" /\u003e","lastModifiedDate":"2016-08-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Extensions.css\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"      \u003cVBox\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        \u003cMenuBar fx:id\u003d\"menuBar\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2017-06-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        \u003c/MenuBar\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"commandBoxPlaceholder\" styleClass\u003d\"pane-with-border\"\u003e","lastModifiedDate":"2017-05-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"resultDisplayPlaceholder\" styleClass\u003d\"pane-with-border\"","lastModifiedDate":"2017-05-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                   minHeight\u003d\"100\" prefHeight\u003d\"100\" maxHeight\u003d\"100\"\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":50,"author":{"gitId":"J-hta-n"},"content":"        \u003cHBox fx:id\u003d\"personList\" styleClass\u003d\"pane-with-border\" minWidth\u003d\"340\" prefWidth\u003d\"340\"\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":54,"author":{"gitId":"J-hta-n"},"content":"          \u003cVBox HBox.hgrow\u003d\"ALWAYS\" alignment\u003d\"CENTER\" style\u003d\"-fx-border-color: #8FFFA1;\"\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":55,"author":{"gitId":"ruiyangzh"},"content":"            \u003cLabel fx:id\u003d\"buyers\" text\u003d\"Buyers\" style\u003d\"-fx-text-fill: #8FFFA1; -fx-font-weight: bold; -fx-font-style: italic;\"/\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":56,"author":{"gitId":"J-hta-n"},"content":"            \u003cStackPane fx:id\u003d\"buyerListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":57,"author":{"gitId":"J-hta-n"},"content":"          \u003c/VBox\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":58,"author":{"gitId":"J-hta-n"},"content":"          \u003cVBox HBox.hgrow\u003d\"ALWAYS\" alignment\u003d\"CENTER\" style\u003d\"-fx-border-color: yellow;\"\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":59,"author":{"gitId":"ruiyangzh"},"content":"            \u003cLabel fx:id\u003d\"sellers\" text\u003d\"Sellers\" style\u003d\"-fx-text-fill: yellow; -fx-font-weight: bold; -fx-font-style: italic;\"/\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":60,"author":{"gitId":"J-hta-n"},"content":"            \u003cStackPane fx:id\u003d\"sellerListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"          \u003c/VBox\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":62,"author":{"gitId":"J-hta-n"},"content":"        \u003c/HBox\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" VBox.vgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"ruiyangzh":4,"-":55,"J-hta-n":9}},{"path":"src/main/resources/view/SellerListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"J-hta-n"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":2,"author":{"gitId":"J-hta-n"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":3,"author":{"gitId":"J-hta-n"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":4,"author":{"gitId":"J-hta-n"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":5,"author":{"gitId":"J-hta-n"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":6,"author":{"gitId":"J-hta-n"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":7,"author":{"gitId":"J-hta-n"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":8,"author":{"gitId":"J-hta-n"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":9,"author":{"gitId":"J-hta-n"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":10,"author":{"gitId":"J-hta-n"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":11,"author":{"gitId":"J-hta-n"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":12,"author":{"gitId":"J-hta-n"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":13,"author":{"gitId":"J-hta-n"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":14,"author":{"gitId":"J-hta-n"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":15,"author":{"gitId":"J-hta-n"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":16,"author":{"gitId":"J-hta-n"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":17,"author":{"gitId":"J-hta-n"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":18,"author":{"gitId":"J-hta-n"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":19,"author":{"gitId":"J-hta-n"},"content":"        \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":20,"author":{"gitId":"J-hta-n"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":21,"author":{"gitId":"J-hta-n"},"content":"      \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":22,"author":{"gitId":"J-hta-n"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":23,"author":{"gitId":"J-hta-n"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":24,"author":{"gitId":"J-hta-n"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":25,"author":{"gitId":"J-hta-n"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":26,"author":{"gitId":"J-hta-n"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":27,"author":{"gitId":"J-hta-n"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":28,"author":{"gitId":"J-hta-n"},"content":"        \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":29,"author":{"gitId":"J-hta-n"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":30,"author":{"gitId":"J-hta-n"},"content":"      \u003cFlowPane fx:id\u003d\"tags\" /\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":31,"author":{"gitId":"J-hta-n"},"content":"      \u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":32,"author":{"gitId":"J-hta-n"},"content":"      \u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" /\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":33,"author":{"gitId":"J-hta-n"},"content":"      \u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":34,"author":{"gitId":"J-hta-n"},"content":"      \u003cLabel fx:id\u003d\"sellingAddress\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":35,"author":{"gitId":"J-hta-n"},"content":"      \u003cLabel fx:id\u003d\"houseInfo\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":36,"author":{"gitId":"J-hta-n"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":37,"author":{"gitId":"J-hta-n"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":38,"author":{"gitId":"J-hta-n"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2023-10-19"}],"authorContributionMap":{"J-hta-n":38}},{"path":"src/test/java/seedu/address/commons/util/AppUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2016-09-30"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class AppUtilTest {","lastModifiedDate":"2016-09-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public void getImage_exitingImage() {","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"ruiyangzh"},"content":"        assertNotNull(AppUtil.getImage(\"/images/RTPM_32.png\"));","lastModifiedDate":"2023-10-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void getImage_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e AppUtil.getImage(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void checkArgument_true_nothingHappens() {","lastModifiedDate":"2017-05-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        AppUtil.checkArgument(true);","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        AppUtil.checkArgument(true, \"\");","lastModifiedDate":"2017-05-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void checkArgument_falseWithoutErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e AppUtil.checkArgument(false));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void checkArgument_falseWithErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        String errorMessage \u003d \"error message\";","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, errorMessage, () -\u003e AppUtil.checkArgument(false, errorMessage));","lastModifiedDate":"2019-03-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-30"}],"authorContributionMap":{"ruiyangzh":1,"-":35}},{"path":"src/test/java/seedu/address/logic/commands/DeleteBuyerCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"iantsaii"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-19"},{"lineNumber":2,"author":{"gitId":"iantsaii"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":3,"author":{"gitId":"iantsaii"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-19"},{"lineNumber":4,"author":{"gitId":"iantsaii"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-19"},{"lineNumber":5,"author":{"gitId":"iantsaii"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-19"},{"lineNumber":6,"author":{"gitId":"iantsaii"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-10-19"},{"lineNumber":7,"author":{"gitId":"iantsaii"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-10-19"},{"lineNumber":8,"author":{"gitId":"iantsaii"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2023-10-19"},{"lineNumber":9,"author":{"gitId":"iantsaii"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-10-19"},{"lineNumber":10,"author":{"gitId":"iantsaii"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2023-10-19"},{"lineNumber":11,"author":{"gitId":"iantsaii"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2023-10-19"},{"lineNumber":12,"author":{"gitId":"iantsaii"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":13,"author":{"gitId":"iantsaii"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-19"},{"lineNumber":14,"author":{"gitId":"iantsaii"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":15,"author":{"gitId":"iantsaii"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-19"},{"lineNumber":16,"author":{"gitId":"iantsaii"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-19"},{"lineNumber":17,"author":{"gitId":"iantsaii"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-19"},{"lineNumber":18,"author":{"gitId":"iantsaii"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-10-19"},{"lineNumber":19,"author":{"gitId":"iantsaii"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-10-19"},{"lineNumber":20,"author":{"gitId":"iantsaii"},"content":"import seedu.address.model.person.buyer.Buyer;","lastModifiedDate":"2023-10-19"},{"lineNumber":21,"author":{"gitId":"iantsaii"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":22,"author":{"gitId":"iantsaii"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":23,"author":{"gitId":"iantsaii"},"content":"/**","lastModifiedDate":"2023-10-19"},{"lineNumber":24,"author":{"gitId":"iantsaii"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2023-10-19"},{"lineNumber":25,"author":{"gitId":"iantsaii"},"content":" * {@code DeleteCommand}.","lastModifiedDate":"2023-10-19"},{"lineNumber":26,"author":{"gitId":"iantsaii"},"content":" */","lastModifiedDate":"2023-10-19"},{"lineNumber":27,"author":{"gitId":"iantsaii"},"content":"public class DeleteBuyerCommandTest {","lastModifiedDate":"2023-10-19"},{"lineNumber":28,"author":{"gitId":"iantsaii"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":29,"author":{"gitId":"iantsaii"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-19"},{"lineNumber":30,"author":{"gitId":"iantsaii"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":31,"author":{"gitId":"iantsaii"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":32,"author":{"gitId":"iantsaii"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2023-10-19"},{"lineNumber":33,"author":{"gitId":"iantsaii"},"content":"        Buyer buyerToDelete \u003d model.getFilteredBuyerList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2023-10-19"},{"lineNumber":34,"author":{"gitId":"iantsaii"},"content":"        DeleteBuyerCommand deleteBuyerCommand \u003d new DeleteBuyerCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2023-10-19"},{"lineNumber":35,"author":{"gitId":"iantsaii"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":36,"author":{"gitId":"iantsaii"},"content":"        String expectedMessage \u003d String.format(DeleteBuyerCommand.MESSAGE_DELETE_BUYER_SUCCESS,","lastModifiedDate":"2023-10-19"},{"lineNumber":37,"author":{"gitId":"iantsaii"},"content":"                Messages.format(buyerToDelete));","lastModifiedDate":"2023-10-19"},{"lineNumber":38,"author":{"gitId":"iantsaii"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":39,"author":{"gitId":"iantsaii"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-19"},{"lineNumber":40,"author":{"gitId":"iantsaii"},"content":"        expectedModel.deleteBuyer(buyerToDelete);","lastModifiedDate":"2023-10-19"},{"lineNumber":41,"author":{"gitId":"iantsaii"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":42,"author":{"gitId":"iantsaii"},"content":"        assertCommandSuccess(deleteBuyerCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-19"},{"lineNumber":43,"author":{"gitId":"iantsaii"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":44,"author":{"gitId":"iantsaii"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":45,"author":{"gitId":"iantsaii"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":46,"author":{"gitId":"iantsaii"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2023-10-19"},{"lineNumber":47,"author":{"gitId":"iantsaii"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredBuyerList().size() + 1);","lastModifiedDate":"2023-10-19"},{"lineNumber":48,"author":{"gitId":"iantsaii"},"content":"        DeleteBuyerCommand deleteCommand \u003d new DeleteBuyerCommand(outOfBoundIndex);","lastModifiedDate":"2023-10-19"},{"lineNumber":49,"author":{"gitId":"iantsaii"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":50,"author":{"gitId":"iantsaii"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-19"},{"lineNumber":51,"author":{"gitId":"iantsaii"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":52,"author":{"gitId":"iantsaii"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":53,"author":{"gitId":"iantsaii"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":54,"author":{"gitId":"iantsaii"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2023-10-19"},{"lineNumber":55,"author":{"gitId":"iantsaii"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2023-10-19"},{"lineNumber":56,"author":{"gitId":"iantsaii"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":57,"author":{"gitId":"iantsaii"},"content":"        Buyer buyerToDelete \u003d model.getFilteredBuyerList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2023-10-19"},{"lineNumber":58,"author":{"gitId":"iantsaii"},"content":"        DeleteBuyerCommand deleteCommand \u003d new DeleteBuyerCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2023-10-19"},{"lineNumber":59,"author":{"gitId":"iantsaii"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":60,"author":{"gitId":"iantsaii"},"content":"        String expectedMessage \u003d String.format(DeleteBuyerCommand.MESSAGE_DELETE_BUYER_SUCCESS,","lastModifiedDate":"2023-10-19"},{"lineNumber":61,"author":{"gitId":"iantsaii"},"content":"                Messages.format(buyerToDelete));","lastModifiedDate":"2023-10-19"},{"lineNumber":62,"author":{"gitId":"iantsaii"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":63,"author":{"gitId":"iantsaii"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-19"},{"lineNumber":64,"author":{"gitId":"iantsaii"},"content":"        expectedModel.deleteBuyer(buyerToDelete);","lastModifiedDate":"2023-10-19"},{"lineNumber":65,"author":{"gitId":"iantsaii"},"content":"        showNoPerson(expectedModel);","lastModifiedDate":"2023-10-19"},{"lineNumber":66,"author":{"gitId":"iantsaii"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":67,"author":{"gitId":"iantsaii"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-19"},{"lineNumber":68,"author":{"gitId":"iantsaii"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":69,"author":{"gitId":"iantsaii"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":70,"author":{"gitId":"iantsaii"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":71,"author":{"gitId":"iantsaii"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2023-10-19"},{"lineNumber":72,"author":{"gitId":"iantsaii"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2023-10-19"},{"lineNumber":73,"author":{"gitId":"iantsaii"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":74,"author":{"gitId":"iantsaii"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2023-10-19"},{"lineNumber":75,"author":{"gitId":"iantsaii"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2023-10-19"},{"lineNumber":76,"author":{"gitId":"iantsaii"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getBuyerList().size());","lastModifiedDate":"2023-10-19"},{"lineNumber":77,"author":{"gitId":"iantsaii"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":78,"author":{"gitId":"iantsaii"},"content":"        DeleteBuyerCommand deleteCommand \u003d new DeleteBuyerCommand(outOfBoundIndex);","lastModifiedDate":"2023-10-19"},{"lineNumber":79,"author":{"gitId":"iantsaii"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":80,"author":{"gitId":"iantsaii"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-19"},{"lineNumber":81,"author":{"gitId":"iantsaii"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":82,"author":{"gitId":"iantsaii"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":83,"author":{"gitId":"iantsaii"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":84,"author":{"gitId":"iantsaii"},"content":"    public void equals() {","lastModifiedDate":"2023-10-19"},{"lineNumber":85,"author":{"gitId":"iantsaii"},"content":"        DeleteBuyerCommand deleteFirstCommand \u003d new DeleteBuyerCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2023-10-19"},{"lineNumber":86,"author":{"gitId":"iantsaii"},"content":"        DeleteBuyerCommand deleteSecondCommand \u003d new DeleteBuyerCommand(INDEX_SECOND_PERSON);","lastModifiedDate":"2023-10-19"},{"lineNumber":87,"author":{"gitId":"iantsaii"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":88,"author":{"gitId":"iantsaii"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-19"},{"lineNumber":89,"author":{"gitId":"iantsaii"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2023-10-19"},{"lineNumber":90,"author":{"gitId":"iantsaii"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":91,"author":{"gitId":"iantsaii"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-19"},{"lineNumber":92,"author":{"gitId":"iantsaii"},"content":"        DeleteBuyerCommand deleteFirstCommandCopy \u003d new DeleteBuyerCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2023-10-19"},{"lineNumber":93,"author":{"gitId":"iantsaii"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2023-10-19"},{"lineNumber":94,"author":{"gitId":"iantsaii"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":95,"author":{"gitId":"iantsaii"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-19"},{"lineNumber":96,"author":{"gitId":"iantsaii"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2023-10-19"},{"lineNumber":97,"author":{"gitId":"iantsaii"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":98,"author":{"gitId":"iantsaii"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-19"},{"lineNumber":99,"author":{"gitId":"iantsaii"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2023-10-19"},{"lineNumber":100,"author":{"gitId":"iantsaii"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":101,"author":{"gitId":"iantsaii"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2023-10-19"},{"lineNumber":102,"author":{"gitId":"iantsaii"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2023-10-19"},{"lineNumber":103,"author":{"gitId":"iantsaii"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":104,"author":{"gitId":"iantsaii"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":105,"author":{"gitId":"iantsaii"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":106,"author":{"gitId":"iantsaii"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-19"},{"lineNumber":107,"author":{"gitId":"iantsaii"},"content":"        Index targetIndex \u003d Index.fromOneBased(1);","lastModifiedDate":"2023-10-19"},{"lineNumber":108,"author":{"gitId":"iantsaii"},"content":"        DeleteBuyerCommand deleteCommand \u003d new DeleteBuyerCommand(targetIndex);","lastModifiedDate":"2023-10-19"},{"lineNumber":109,"author":{"gitId":"iantsaii"},"content":"        String expected \u003d DeleteBuyerCommand.class.getCanonicalName() + \"{targetIndex\u003d\" + targetIndex + \"}\";","lastModifiedDate":"2023-10-19"},{"lineNumber":110,"author":{"gitId":"iantsaii"},"content":"        assertEquals(expected, deleteCommand.toString());","lastModifiedDate":"2023-10-19"},{"lineNumber":111,"author":{"gitId":"iantsaii"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":112,"author":{"gitId":"iantsaii"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":113,"author":{"gitId":"iantsaii"},"content":"    /**","lastModifiedDate":"2023-10-19"},{"lineNumber":114,"author":{"gitId":"iantsaii"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2023-10-19"},{"lineNumber":115,"author":{"gitId":"iantsaii"},"content":"     */","lastModifiedDate":"2023-10-19"},{"lineNumber":116,"author":{"gitId":"iantsaii"},"content":"    private void showNoPerson(Model model) {","lastModifiedDate":"2023-10-19"},{"lineNumber":117,"author":{"gitId":"iantsaii"},"content":"        model.updateFilteredBuyerList(p -\u003e false);","lastModifiedDate":"2023-10-19"},{"lineNumber":118,"author":{"gitId":"iantsaii"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":119,"author":{"gitId":"iantsaii"},"content":"        assertTrue(model.getFilteredBuyerList().isEmpty());","lastModifiedDate":"2023-10-19"},{"lineNumber":120,"author":{"gitId":"iantsaii"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":121,"author":{"gitId":"iantsaii"},"content":"}","lastModifiedDate":"2023-10-19"}],"authorContributionMap":{"iantsaii":121}},{"path":"src/test/java/seedu/address/logic/commands/DeleteSellerCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"iantsaii"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-19"},{"lineNumber":2,"author":{"gitId":"iantsaii"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":3,"author":{"gitId":"iantsaii"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-19"},{"lineNumber":4,"author":{"gitId":"iantsaii"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-19"},{"lineNumber":5,"author":{"gitId":"iantsaii"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-19"},{"lineNumber":6,"author":{"gitId":"iantsaii"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-10-19"},{"lineNumber":7,"author":{"gitId":"iantsaii"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-10-19"},{"lineNumber":8,"author":{"gitId":"iantsaii"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2023-10-19"},{"lineNumber":9,"author":{"gitId":"iantsaii"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-10-19"},{"lineNumber":10,"author":{"gitId":"iantsaii"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2023-10-19"},{"lineNumber":11,"author":{"gitId":"iantsaii"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2023-10-19"},{"lineNumber":12,"author":{"gitId":"iantsaii"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":13,"author":{"gitId":"iantsaii"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-19"},{"lineNumber":14,"author":{"gitId":"iantsaii"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":15,"author":{"gitId":"iantsaii"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-19"},{"lineNumber":16,"author":{"gitId":"iantsaii"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-19"},{"lineNumber":17,"author":{"gitId":"iantsaii"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-19"},{"lineNumber":18,"author":{"gitId":"iantsaii"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-10-19"},{"lineNumber":19,"author":{"gitId":"iantsaii"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-10-19"},{"lineNumber":20,"author":{"gitId":"iantsaii"},"content":"import seedu.address.model.person.seller.Seller;","lastModifiedDate":"2023-10-19"},{"lineNumber":21,"author":{"gitId":"iantsaii"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":22,"author":{"gitId":"iantsaii"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":23,"author":{"gitId":"iantsaii"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":24,"author":{"gitId":"iantsaii"},"content":"/**","lastModifiedDate":"2023-10-19"},{"lineNumber":25,"author":{"gitId":"iantsaii"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2023-10-19"},{"lineNumber":26,"author":{"gitId":"iantsaii"},"content":" * {@code DeleteCommand}.","lastModifiedDate":"2023-10-19"},{"lineNumber":27,"author":{"gitId":"iantsaii"},"content":" */","lastModifiedDate":"2023-10-19"},{"lineNumber":28,"author":{"gitId":"iantsaii"},"content":"public class DeleteSellerCommandTest {","lastModifiedDate":"2023-10-19"},{"lineNumber":29,"author":{"gitId":"iantsaii"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":30,"author":{"gitId":"iantsaii"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-19"},{"lineNumber":31,"author":{"gitId":"iantsaii"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":32,"author":{"gitId":"iantsaii"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":33,"author":{"gitId":"iantsaii"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2023-10-19"},{"lineNumber":34,"author":{"gitId":"iantsaii"},"content":"        Seller sellerToDelete \u003d model.getFilteredSellerList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2023-10-19"},{"lineNumber":35,"author":{"gitId":"iantsaii"},"content":"        DeleteSellerCommand deleteSellerCommand \u003d new DeleteSellerCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2023-10-19"},{"lineNumber":36,"author":{"gitId":"iantsaii"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":37,"author":{"gitId":"iantsaii"},"content":"        String expectedMessage \u003d String.format(DeleteSellerCommand.MESSAGE_DELETE_SELLER_SUCCESS,","lastModifiedDate":"2023-10-19"},{"lineNumber":38,"author":{"gitId":"iantsaii"},"content":"                Messages.format(sellerToDelete));","lastModifiedDate":"2023-10-19"},{"lineNumber":39,"author":{"gitId":"iantsaii"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":40,"author":{"gitId":"iantsaii"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-19"},{"lineNumber":41,"author":{"gitId":"iantsaii"},"content":"        expectedModel.deleteSeller(sellerToDelete);","lastModifiedDate":"2023-10-19"},{"lineNumber":42,"author":{"gitId":"iantsaii"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":43,"author":{"gitId":"iantsaii"},"content":"        assertCommandSuccess(deleteSellerCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-19"},{"lineNumber":44,"author":{"gitId":"iantsaii"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":45,"author":{"gitId":"iantsaii"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":46,"author":{"gitId":"iantsaii"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":47,"author":{"gitId":"iantsaii"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2023-10-19"},{"lineNumber":48,"author":{"gitId":"iantsaii"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredSellerList().size() + 1);","lastModifiedDate":"2023-10-19"},{"lineNumber":49,"author":{"gitId":"iantsaii"},"content":"        DeleteSellerCommand deleteCommand \u003d new DeleteSellerCommand(outOfBoundIndex);","lastModifiedDate":"2023-10-19"},{"lineNumber":50,"author":{"gitId":"iantsaii"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":51,"author":{"gitId":"iantsaii"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-19"},{"lineNumber":52,"author":{"gitId":"iantsaii"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":53,"author":{"gitId":"iantsaii"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":54,"author":{"gitId":"iantsaii"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":55,"author":{"gitId":"iantsaii"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2023-10-19"},{"lineNumber":56,"author":{"gitId":"iantsaii"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2023-10-19"},{"lineNumber":57,"author":{"gitId":"iantsaii"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":58,"author":{"gitId":"iantsaii"},"content":"        Seller sellerToDelete \u003d model.getFilteredSellerList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2023-10-19"},{"lineNumber":59,"author":{"gitId":"iantsaii"},"content":"        DeleteSellerCommand deleteCommand \u003d new DeleteSellerCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2023-10-19"},{"lineNumber":60,"author":{"gitId":"iantsaii"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":61,"author":{"gitId":"iantsaii"},"content":"        String expectedMessage \u003d String.format(DeleteSellerCommand.MESSAGE_DELETE_SELLER_SUCCESS,","lastModifiedDate":"2023-10-19"},{"lineNumber":62,"author":{"gitId":"iantsaii"},"content":"                Messages.format(sellerToDelete));","lastModifiedDate":"2023-10-19"},{"lineNumber":63,"author":{"gitId":"iantsaii"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":64,"author":{"gitId":"iantsaii"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-19"},{"lineNumber":65,"author":{"gitId":"iantsaii"},"content":"        expectedModel.deleteSeller(sellerToDelete);","lastModifiedDate":"2023-10-19"},{"lineNumber":66,"author":{"gitId":"iantsaii"},"content":"        showNoPerson(expectedModel);","lastModifiedDate":"2023-10-19"},{"lineNumber":67,"author":{"gitId":"iantsaii"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":68,"author":{"gitId":"iantsaii"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-19"},{"lineNumber":69,"author":{"gitId":"iantsaii"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":70,"author":{"gitId":"iantsaii"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":71,"author":{"gitId":"iantsaii"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":72,"author":{"gitId":"iantsaii"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2023-10-19"},{"lineNumber":73,"author":{"gitId":"iantsaii"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2023-10-19"},{"lineNumber":74,"author":{"gitId":"iantsaii"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":75,"author":{"gitId":"iantsaii"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2023-10-19"},{"lineNumber":76,"author":{"gitId":"iantsaii"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2023-10-19"},{"lineNumber":77,"author":{"gitId":"iantsaii"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getSellerList().size());","lastModifiedDate":"2023-10-19"},{"lineNumber":78,"author":{"gitId":"iantsaii"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":79,"author":{"gitId":"iantsaii"},"content":"        DeleteSellerCommand deleteCommand \u003d new DeleteSellerCommand(outOfBoundIndex);","lastModifiedDate":"2023-10-19"},{"lineNumber":80,"author":{"gitId":"iantsaii"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":81,"author":{"gitId":"iantsaii"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-19"},{"lineNumber":82,"author":{"gitId":"iantsaii"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":83,"author":{"gitId":"iantsaii"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":84,"author":{"gitId":"iantsaii"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":85,"author":{"gitId":"iantsaii"},"content":"    public void equals() {","lastModifiedDate":"2023-10-19"},{"lineNumber":86,"author":{"gitId":"iantsaii"},"content":"        DeleteSellerCommand deleteFirstCommand \u003d new DeleteSellerCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2023-10-19"},{"lineNumber":87,"author":{"gitId":"iantsaii"},"content":"        DeleteSellerCommand deleteSecondCommand \u003d new DeleteSellerCommand(INDEX_SECOND_PERSON);","lastModifiedDate":"2023-10-19"},{"lineNumber":88,"author":{"gitId":"iantsaii"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":89,"author":{"gitId":"iantsaii"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-19"},{"lineNumber":90,"author":{"gitId":"iantsaii"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2023-10-19"},{"lineNumber":91,"author":{"gitId":"iantsaii"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":92,"author":{"gitId":"iantsaii"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-19"},{"lineNumber":93,"author":{"gitId":"iantsaii"},"content":"        DeleteSellerCommand deleteFirstCommandCopy \u003d new DeleteSellerCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2023-10-19"},{"lineNumber":94,"author":{"gitId":"iantsaii"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2023-10-19"},{"lineNumber":95,"author":{"gitId":"iantsaii"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":96,"author":{"gitId":"iantsaii"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-19"},{"lineNumber":97,"author":{"gitId":"iantsaii"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2023-10-19"},{"lineNumber":98,"author":{"gitId":"iantsaii"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":99,"author":{"gitId":"iantsaii"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-19"},{"lineNumber":100,"author":{"gitId":"iantsaii"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2023-10-19"},{"lineNumber":101,"author":{"gitId":"iantsaii"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":102,"author":{"gitId":"iantsaii"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2023-10-19"},{"lineNumber":103,"author":{"gitId":"iantsaii"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2023-10-19"},{"lineNumber":104,"author":{"gitId":"iantsaii"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":105,"author":{"gitId":"iantsaii"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":106,"author":{"gitId":"iantsaii"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":107,"author":{"gitId":"iantsaii"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-19"},{"lineNumber":108,"author":{"gitId":"iantsaii"},"content":"        Index targetIndex \u003d Index.fromOneBased(1);","lastModifiedDate":"2023-10-19"},{"lineNumber":109,"author":{"gitId":"iantsaii"},"content":"        DeleteSellerCommand deleteCommand \u003d new DeleteSellerCommand(targetIndex);","lastModifiedDate":"2023-10-19"},{"lineNumber":110,"author":{"gitId":"iantsaii"},"content":"        String expected \u003d DeleteSellerCommand.class.getCanonicalName() + \"{targetIndex\u003d\" + targetIndex + \"}\";","lastModifiedDate":"2023-10-19"},{"lineNumber":111,"author":{"gitId":"iantsaii"},"content":"        assertEquals(expected, deleteCommand.toString());","lastModifiedDate":"2023-10-19"},{"lineNumber":112,"author":{"gitId":"iantsaii"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":113,"author":{"gitId":"iantsaii"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":114,"author":{"gitId":"iantsaii"},"content":"    /**","lastModifiedDate":"2023-10-19"},{"lineNumber":115,"author":{"gitId":"iantsaii"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2023-10-19"},{"lineNumber":116,"author":{"gitId":"iantsaii"},"content":"     */","lastModifiedDate":"2023-10-19"},{"lineNumber":117,"author":{"gitId":"iantsaii"},"content":"    private void showNoPerson(Model model) {","lastModifiedDate":"2023-10-19"},{"lineNumber":118,"author":{"gitId":"iantsaii"},"content":"        model.updateFilteredSellerList(p -\u003e false);","lastModifiedDate":"2023-10-19"},{"lineNumber":119,"author":{"gitId":"iantsaii"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":120,"author":{"gitId":"iantsaii"},"content":"        assertTrue(model.getFilteredSellerList().isEmpty());","lastModifiedDate":"2023-10-19"},{"lineNumber":121,"author":{"gitId":"iantsaii"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":122,"author":{"gitId":"iantsaii"},"content":"}","lastModifiedDate":"2023-10-19"}],"authorContributionMap":{"iantsaii":122}},{"path":"src/test/java/seedu/address/logic/parser/AddBuyerCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ruiyangzh"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-19"},{"lineNumber":2,"author":{"gitId":"ruiyangzh"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":3,"author":{"gitId":"ruiyangzh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-19"},{"lineNumber":4,"author":{"gitId":"ruiyangzh"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-19"},{"lineNumber":5,"author":{"gitId":"ruiyangzh"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":6,"author":{"gitId":"ruiyangzh"},"content":"import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;","lastModifiedDate":"2023-10-19"},{"lineNumber":7,"author":{"gitId":"ruiyangzh"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-19"},{"lineNumber":8,"author":{"gitId":"ruiyangzh"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":9,"author":{"gitId":"ruiyangzh"},"content":"public class AddBuyerCommandParserTest {","lastModifiedDate":"2023-10-19"},{"lineNumber":10,"author":{"gitId":"ruiyangzh"},"content":"    static final String BROKEN_INPUT \u003d \"ALASDKJDL\";","lastModifiedDate":"2023-10-19"},{"lineNumber":11,"author":{"gitId":"ruiyangzh"},"content":"    static final String PARTIAL_INPUT \u003d \"n/adam p/3094 e/email@com ah/homeaddress\";","lastModifiedDate":"2023-10-19"},{"lineNumber":12,"author":{"gitId":"ruiyangzh"},"content":"    static final String BAD_FIELDS_INPUT \u003d \"n/adam p/badnumber e/email@com ah/homeaddress i/info\";","lastModifiedDate":"2023-10-19"},{"lineNumber":13,"author":{"gitId":"ruiyangzh"},"content":"    static final String VALID_INPUT \u003d\"n/adam p/3094 e/email@com ah/homeaddress i/info\";","lastModifiedDate":"2023-10-19"},{"lineNumber":14,"author":{"gitId":"ruiyangzh"},"content":"    AddBuyerCommandParser parser \u003d new AddBuyerCommandParser();","lastModifiedDate":"2023-10-19"},{"lineNumber":15,"author":{"gitId":"ruiyangzh"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":16,"author":{"gitId":"ruiyangzh"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":17,"author":{"gitId":"ruiyangzh"},"content":"    public void assertFails_Parse_BrokenInput() {","lastModifiedDate":"2023-10-19"},{"lineNumber":18,"author":{"gitId":"ruiyangzh"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(BROKEN_INPUT));","lastModifiedDate":"2023-10-19"},{"lineNumber":19,"author":{"gitId":"ruiyangzh"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":20,"author":{"gitId":"ruiyangzh"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":21,"author":{"gitId":"ruiyangzh"},"content":"    public void assertFails_Parse_PartialInput() {","lastModifiedDate":"2023-10-19"},{"lineNumber":22,"author":{"gitId":"ruiyangzh"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(PARTIAL_INPUT));","lastModifiedDate":"2023-10-19"},{"lineNumber":23,"author":{"gitId":"ruiyangzh"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":24,"author":{"gitId":"ruiyangzh"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":25,"author":{"gitId":"ruiyangzh"},"content":"    public void assertFails_Parse_BadFieldsInput() {","lastModifiedDate":"2023-10-19"},{"lineNumber":26,"author":{"gitId":"ruiyangzh"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(BAD_FIELDS_INPUT));","lastModifiedDate":"2023-10-19"},{"lineNumber":27,"author":{"gitId":"ruiyangzh"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":28,"author":{"gitId":"ruiyangzh"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":29,"author":{"gitId":"ruiyangzh"},"content":"    public void assertPasses_Parse_BrokenInput() {","lastModifiedDate":"2023-10-19"},{"lineNumber":30,"author":{"gitId":"ruiyangzh"},"content":"        assertDoesNotThrow(() -\u003e parser.parse(VALID_INPUT));","lastModifiedDate":"2023-10-19"},{"lineNumber":31,"author":{"gitId":"ruiyangzh"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":32,"author":{"gitId":"ruiyangzh"},"content":"}","lastModifiedDate":"2023-10-19"}],"authorContributionMap":{"ruiyangzh":32}}]

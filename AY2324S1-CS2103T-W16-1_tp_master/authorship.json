[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Nixx162"},"content":"[![CI Status](https://github.com/AY2324S1-CS2103T-W16-1/tp/actions/workflows/gradle.yml/badge.svg)](https://github.com/AY2324S1-CS2103T-W16-1/tp/actions)","lastModifiedDate":"2023-10-06"},{"lineNumber":2,"author":{"gitId":"Nixx162"},"content":"[![codecov](https://codecov.io/gh/AY2324S1-CS2103T-W16-1/tp/graph/badge.svg?token\u003dKEJTLP53IM)](https://codecov.io/gh/AY2324S1-CS2103T-W16-1/tp)","lastModifiedDate":"2023-10-06"},{"lineNumber":3,"author":{"gitId":"Nixx162"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":4,"author":{"gitId":"Nixx162"},"content":"# KeepInTouch","lastModifiedDate":"2023-10-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"Nixx162"},"content":"KeepInTouch is a **Desktop** application developed for jobseekers. It is meant to help them track connections in their professional network, along with events related to their professional development.","lastModifiedDate":"2023-10-06"},{"lineNumber":9,"author":{"gitId":"Nixx162"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":10,"author":{"gitId":"Nixx162"},"content":"For a more detailed documentation of this project, please visit our **[product website](https://ay2324s1-cs2103t-w16-1.github.io/tp)**.","lastModifiedDate":"2023-10-06"},{"lineNumber":11,"author":{"gitId":"Nixx162"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":12,"author":{"gitId":"Nixx162"},"content":"## Acknowledgement","lastModifiedDate":"2023-10-06"},{"lineNumber":13,"author":{"gitId":"Nixx162"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":14,"author":{"gitId":"Nixx162"},"content":"This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2023-10-06"}],"authorContributionMap":{"-":3,"Nixx162":11}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  layout: default.md","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  title: \"About Us\"","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"# About Us","lastModifiedDate":"2023-09-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"Nixx162"},"content":"### Andrew Daniel Janong","lastModifiedDate":"2023-10-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"Nixx162"},"content":"\u003cimg src\u003d\"images/andrewjanong.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-10-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"Nixx162"},"content":"[[github](https://github.com/andrewjanong)]","lastModifiedDate":"2023-10-07"},{"lineNumber":17,"author":{"gitId":"Nixx162"},"content":"[[portfolio](team/andrewjanong.md)]","lastModifiedDate":"2023-10-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"Nixx162"},"content":"* Role: Developer","lastModifiedDate":"2023-10-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"Nixx162"},"content":"### Ho Khee Wei","lastModifiedDate":"2023-10-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"Nixx162"},"content":"\u003cimg src\u003d\"images/zekone.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-10-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"Nixx162"},"content":"[[github](http://github.com/zekone)]","lastModifiedDate":"2023-10-07"},{"lineNumber":26,"author":{"gitId":"Nixx162"},"content":"[[portfolio](team/zekone.md)]","lastModifiedDate":"2023-10-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"Nixx162"},"content":"* Role: Developer","lastModifiedDate":"2023-10-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"Nixx162"},"content":"### Joseph Oliver Lim","lastModifiedDate":"2023-10-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"Nixx162"},"content":"\u003cimg src\u003d\"images/josepholim.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-10-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"Nixx162"},"content":"[[github](http://github.com/johndoe)]","lastModifiedDate":"2023-10-07"},{"lineNumber":35,"author":{"gitId":"Nixx162"},"content":"[[portfolio](team/johndoe.md)]","lastModifiedDate":"2023-10-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"Nixx162"},"content":"### Nicholas Jimmy Alden","lastModifiedDate":"2023-10-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"Nixx162"},"content":"\u003cimg src\u003d\"images/nixx162.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-10-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"Nixx162"},"content":"[[github](http://github.com/nixx162)]","lastModifiedDate":"2023-10-07"},{"lineNumber":44,"author":{"gitId":"Nixx162"},"content":"[[portfolio](team/nixx162.md)]","lastModifiedDate":"2023-10-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"Nixx162"},"content":"### Wang Zihan","lastModifiedDate":"2023-10-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"Nixx162"},"content":"\u003cimg src\u003d\"images/larrywang0701.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-10-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"Nixx162"},"content":"[[github](http://github.com/larrywang0701)]","lastModifiedDate":"2023-10-07"},{"lineNumber":53,"author":{"gitId":"Nixx162"},"content":"[[portfolio](team/larrywang0701.md)]","lastModifiedDate":"2023-10-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"-":33,"Nixx162":22}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  layout: default.md","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  title: \"Developer Guide\"","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"  pageNav: 3","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"# AB-3 Developer Guide","lastModifiedDate":"2023-09-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c!-- * Table of Contents --\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003cpage-nav-print /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"_{ list here sources of all reused/adapted ideas, code, documentation, and third-party libraries -- include links to the original source as well }_","lastModifiedDate":"2023-09-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ArchitectureDiagram.puml\" width\u003d\"280\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"**`Main`** (consisting of classes [`Main`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/MainApp.java)) is in charge of the app launch and shut down.","lastModifiedDate":"2023-09-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"* At app launch, it initializes the other components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2023-09-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"* At shut down, it shuts down the other components and invokes cleanup methods where necessary.","lastModifiedDate":"2023-09-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"The bulk of the app\u0027s work is done by the following four components:","lastModifiedDate":"2023-09-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2023-09-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ArchitectureSequenceDiagram.puml\" width\u003d\"574\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":59,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ComponentManagers.puml\" width\u003d\"300\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UiClassDiagram.puml\" alt\u003d\"Structure of the UI Component\"/\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2021-07-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2021-07-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":81,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":82,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":83,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component, as it displays `Person` object residing in the `Model`.","lastModifiedDate":"2021-07-31"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"**API** : [`Logic.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/LogicClassDiagram.puml\" width\u003d\"550\"/\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"The sequence diagram below illustrates the interactions within the `Logic` component, taking `execute(\"delete 1\")` API call as an example.","lastModifiedDate":"2023-09-03"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/DeleteSequenceDiagram.puml\" alt\u003d\"Interactions Inside the Logic Component for the `delete 1` Command\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":97,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"**Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2023-09-12"},{"lineNumber":100,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2023-09-03"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":104,"author":{"gitId":"-"},"content":"1. When `Logic` is called upon to execute a command, it is passed to an `AddressBookParser` object which in turn creates a parser that matches the command (e.g., `DeleteCommandParser`) and uses it to parse the command.","lastModifiedDate":"2023-09-03"},{"lineNumber":105,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `DeleteCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2023-09-03"},{"lineNumber":106,"author":{"gitId":"-"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to delete a person).","lastModifiedDate":"2023-09-03"},{"lineNumber":107,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2023-09-03"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":109,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ParserClasses.puml\" width\u003d\"600\"/\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"* When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `AddressBookParser` returns back as a `Command` object.","lastModifiedDate":"2021-07-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-07-31"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":118,"author":{"gitId":"-"},"content":"**API** : [`Model.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ModelClassDiagram.puml\" width\u003d\"450\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"* stores the address book data i.e., all `Person` objects (which are contained in a `UniquePersonList` object).","lastModifiedDate":"2021-07-31"},{"lineNumber":126,"author":{"gitId":"-"},"content":"* stores the currently \u0027selected\u0027 `Person` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2021-07-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":132,"author":{"gitId":"-"},"content":"**Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `AddressBook`, which `Person` references. This allows `AddressBook` to only require one `Tag` object per unique tag, instead of each `Person` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":134,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/BetterModelClassDiagram.puml\" width\u003d\"450\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"**API** : [`Storage.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/StorageClassDiagram.puml\" width\u003d\"550\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"* can save both address book data and user preference data in JSON format, and read them back into corresponding objects.","lastModifiedDate":"2023-09-03"},{"lineNumber":147,"author":{"gitId":"-"},"content":"* inherits from both `AddressBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2021-07-31"},{"lineNumber":148,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.addressbook.commons` package.","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2020-06-07"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedAddressBook`. It extends `AddressBook` with an undo/redo history, stored internally as an `addressBookStateList` and `currentStatePointer`. Additionally, it implements the following operations:","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#commit()` — Saves the current address book state in its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#undo()` — Restores the previous address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#redo()` — Restores a previously undone address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()` and `Model#redoAddressBook()` respectively.","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the initial address book state, and the `currentStatePointer` pointing to that single address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState0.puml\" alt\u003d\"UndoRedoState0\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"Step 2. The user executes `delete 5` command to delete the 5th person in the address book. The `delete` command calls `Model#commitAddressBook()`, causing the modified state of the address book after the `delete 5` command executes to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState1.puml\" alt\u003d\"UndoRedoState1\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"Step 3. The user executes `add n/David …​` to add a new person. The `add` command also calls `Model#commitAddressBook()`, causing another modified address book state to be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState2.puml\" alt\u003d\"UndoRedoState2\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"**Note:** If a command fails its execution, it will not call `Model#commitAddressBook()`, so the address book state will not be saved into the `addressBookStateList`.","lastModifiedDate":"2023-09-12"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":190,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"Step 4. The user now decides that adding the person was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous address book state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState3.puml\" alt\u003d\"UndoRedoState3\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":197,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"**Note:** If the `currentStatePointer` is at index 0, pointing to the initial AddressBook state, then there are no previous AddressBook states to restore. The `undo` command uses `Model#canUndoAddressBook()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2023-09-12"},{"lineNumber":200,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"The following sequence diagram shows how the undo operation works:","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoSequenceDiagram.puml\" alt\u003d\"UndoSequenceDiagram\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"**Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2023-09-12"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":212,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"The `redo` command does the opposite — it calls `Model#redoAddressBook()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":218,"author":{"gitId":"-"},"content":"**Note:** If the `currentStatePointer` is at index `addressBookStateList.size() - 1`, pointing to the latest address book state, then there are no undone AddressBook states to restore. The `redo` command uses `Model#canRedoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2023-09-12"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the address book, such as `list`, will usually not call `Model#commitAddressBook()`, `Model#undoAddressBook()` or `Model#redoAddressBook()`. Thus, the `addressBookStateList` remains unchanged.","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState4.puml\" alt\u003d\"UndoRedoState4\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"Step 6. The user executes `clear`, which calls `Model#commitAddressBook()`. Since the `currentStatePointer` is not pointing at the end of the `addressBookStateList`, all address book states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `add n/David …​` command. This is the behavior that most modern desktop applications follow.","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState5.puml\" alt\u003d\"UndoRedoState5\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/CommitActivityDiagram.puml\" width\u003d\"250\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2021-07-31"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2021-07-31"},{"lineNumber":237,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Saves the entire address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"  * Pros: Easy to implement.","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"  * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"  * Pros: Will use less memory (e.g. for `delete`, just save the person being deleted).","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"  * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Data archiving","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"_{Explain here how the data archiving feature will be implemented}_","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":259,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":260,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":261,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":262,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"zekone"},"content":"* is seeking and applying to many jobs","lastModifiedDate":"2023-10-04"},{"lineNumber":273,"author":{"gitId":"zekone"},"content":"* has the habit of taking many notes","lastModifiedDate":"2023-10-04"},{"lineNumber":274,"author":{"gitId":"-"},"content":"* prefer desktop apps over other types","lastModifiedDate":"2020-05-23"},{"lineNumber":275,"author":{"gitId":"-"},"content":"* can type fast","lastModifiedDate":"2020-05-23"},{"lineNumber":276,"author":{"gitId":"-"},"content":"* prefers typing to mouse interactions","lastModifiedDate":"2020-05-26"},{"lineNumber":277,"author":{"gitId":"-"},"content":"* is reasonably comfortable using CLI apps","lastModifiedDate":"2020-05-23"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":279,"author":{"gitId":"zekone"},"content":"**Value proposition**: manage information regarding many job offers in a organised and uncluttered manner for users who is comfortable with CLI apps.","lastModifiedDate":"2023-10-04"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":282,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":284,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":286,"author":{"gitId":"-"},"content":"| Priority | As a …​                                    | I want to …​                 | So that I can…​                                                        |","lastModifiedDate":"2020-05-23"},{"lineNumber":287,"author":{"gitId":"-"},"content":"|----------|--------------------------------------------|------------------------------|------------------------------------------------------------------------|","lastModifiedDate":"2023-09-12"},{"lineNumber":288,"author":{"gitId":"larrywang0701"},"content":"| `* * *`  | new user                                               | get a list of the commands    | know how to use the commands and their parameters |","lastModifiedDate":"2023-10-04"},{"lineNumber":289,"author":{"gitId":"larrywang0701"},"content":"| `* * *`  | user                                                       | add a new contact                 | record one person\u0027s phone number and email address |","lastModifiedDate":"2023-10-04"},{"lineNumber":290,"author":{"gitId":"larrywang0701"},"content":"| `* * *`  | user                                                       | delete a contact                     | remove a contact (by name) that I do not need |","lastModifiedDate":"2023-10-04"},{"lineNumber":291,"author":{"gitId":"larrywang0701"},"content":"| `* * *`  | user                                                       | view all contact                      | easily see and know what contacts are currently stored in the application in one place  |","lastModifiedDate":"2023-10-04"},{"lineNumber":292,"author":{"gitId":"larrywang0701"},"content":"| `* *`    | user                                                        | view all notes                        | easily see and know what notes are currently stored in the application in one place |","lastModifiedDate":"2023-10-04"},{"lineNumber":293,"author":{"gitId":"larrywang0701"},"content":"| `* *`    | user                                                        | add notes to a contact          | record additional information about that contact in the notes |","lastModifiedDate":"2023-10-04"},{"lineNumber":294,"author":{"gitId":"larrywang0701"},"content":"| `* *`    | user                                                        | delete notes to a contact       | remove additional information that are no longer needed about that contact in the notes   |","lastModifiedDate":"2023-10-04"},{"lineNumber":295,"author":{"gitId":"larrywang0701"},"content":"| `* *`    | user who has some event to do             | add an event                         | record an event with start time and also end time, location and any additional information like what to do during the event   |","lastModifiedDate":"2023-10-04"},{"lineNumber":296,"author":{"gitId":"larrywang0701"},"content":"| `* *`    | user who has/had some event to do      | delete an event                     | remove an event after it is obsolete, cancelled or no longer needed to be recorded |","lastModifiedDate":"2023-10-04"},{"lineNumber":297,"author":{"gitId":"larrywang0701"},"content":"| `* * *` | user who finishes using the application  | exit the program                   | exit the program normally while ensuring all my data is currectly saved |","lastModifiedDate":"2023-10-04"},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":299,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":300,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":301,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":302,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":303,"author":{"gitId":"josepholim"},"content":"(For all use cases below, the **System** is the `KeepInTouch` and the **Actor** is the `user`, unless specified otherwise)","lastModifiedDate":"2023-10-05"},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":305,"author":{"gitId":"josepholim"},"content":"**Use case: UC01 - View command list**","lastModifiedDate":"2023-10-05"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":307,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":309,"author":{"gitId":"josepholim"},"content":"1.  User requests to view command list.","lastModifiedDate":"2023-10-05"},{"lineNumber":310,"author":{"gitId":"josepholim"},"content":"2.  KeepInTouch shows the command list.","lastModifiedDate":"2023-10-05"},{"lineNumber":311,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":312,"author":{"gitId":"josepholim"},"content":"    Use case ends.","lastModifiedDate":"2023-10-05"},{"lineNumber":313,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":314,"author":{"gitId":"josepholim"},"content":"**Use case: UC02 - Add a new contact**","lastModifiedDate":"2023-10-05"},{"lineNumber":315,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":316,"author":{"gitId":"josepholim"},"content":"**MSS**","lastModifiedDate":"2023-10-05"},{"lineNumber":317,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":318,"author":{"gitId":"josepholim"},"content":"1.  User requests to add a new contact.","lastModifiedDate":"2023-10-05"},{"lineNumber":319,"author":{"gitId":"josepholim"},"content":"2.  KeepInTouch adds the contact to the list.","lastModifiedDate":"2023-10-05"},{"lineNumber":320,"author":{"gitId":"josepholim"},"content":"3.  KeepInTouch shows the updated list of contacts.","lastModifiedDate":"2023-10-05"},{"lineNumber":321,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":322,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":323,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":324,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":325,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":326,"author":{"gitId":"josepholim"},"content":"* 1a. User inputs incomplete or invalid data.","lastModifiedDate":"2023-10-05"},{"lineNumber":327,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":328,"author":{"gitId":"josepholim"},"content":"    * 1a1. KeepInTouch shows a message indicating incomplete or invalid data.","lastModifiedDate":"2023-10-05"},{"lineNumber":329,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":330,"author":{"gitId":"josepholim"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2023-10-05"},{"lineNumber":331,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":332,"author":{"gitId":"josepholim"},"content":"**Use case: UC03 - Delete a contact**","lastModifiedDate":"2023-10-05"},{"lineNumber":333,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":334,"author":{"gitId":"josepholim"},"content":"**MSS**","lastModifiedDate":"2023-10-05"},{"lineNumber":335,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":336,"author":{"gitId":"josepholim"},"content":"1.  User requests to delete a contact.","lastModifiedDate":"2023-10-05"},{"lineNumber":337,"author":{"gitId":"josepholim"},"content":"2.  KeepInTouch deletes the contact.","lastModifiedDate":"2023-10-05"},{"lineNumber":338,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":339,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":340,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":341,"author":{"gitId":"josepholim"},"content":"**Extensions**","lastModifiedDate":"2023-10-05"},{"lineNumber":342,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":343,"author":{"gitId":"josepholim"},"content":"* 1a. User inputs a contact that does not exist.","lastModifiedDate":"2023-10-05"},{"lineNumber":344,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":345,"author":{"gitId":"josepholim"},"content":"    * 1a1. KeepInTouch shows a message indicating the non-existent contact.","lastModifiedDate":"2023-10-05"},{"lineNumber":346,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":347,"author":{"gitId":"josepholim"},"content":"      Use case ends.","lastModifiedDate":"2023-10-05"},{"lineNumber":348,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":349,"author":{"gitId":"josepholim"},"content":"* 2a. The contact list is empty.","lastModifiedDate":"2023-10-05"},{"lineNumber":350,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":351,"author":{"gitId":"josepholim"},"content":"    * 2a1. KeepInTouch shows a message indicating the empty contact list.","lastModifiedDate":"2023-10-05"},{"lineNumber":352,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":353,"author":{"gitId":"josepholim"},"content":"      Use case ends.","lastModifiedDate":"2023-10-05"},{"lineNumber":354,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":355,"author":{"gitId":"josepholim"},"content":"**Use case: UC04 - View all contacts**","lastModifiedDate":"2023-10-05"},{"lineNumber":356,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":357,"author":{"gitId":"josepholim"},"content":"**MSS**","lastModifiedDate":"2023-10-05"},{"lineNumber":358,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":359,"author":{"gitId":"josepholim"},"content":"1.  User requests to view all contacts.","lastModifiedDate":"2023-10-05"},{"lineNumber":360,"author":{"gitId":"josepholim"},"content":"2.  KeepInTouch shows all contacts.","lastModifiedDate":"2023-10-05"},{"lineNumber":361,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":362,"author":{"gitId":"josepholim"},"content":"    Use case ends.","lastModifiedDate":"2023-10-05"},{"lineNumber":363,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":364,"author":{"gitId":"josepholim"},"content":"**Extensions**","lastModifiedDate":"2023-10-05"},{"lineNumber":365,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":366,"author":{"gitId":"josepholim"},"content":"* 2a. The contact list is empty.","lastModifiedDate":"2023-10-05"},{"lineNumber":367,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":368,"author":{"gitId":"josepholim"},"content":"    * 2a1. KeepInTouch shows a message indicating the empty contact list.","lastModifiedDate":"2023-10-05"},{"lineNumber":369,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":370,"author":{"gitId":"josepholim"},"content":"      Use case ends.","lastModifiedDate":"2023-10-05"},{"lineNumber":371,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":372,"author":{"gitId":"josepholim"},"content":"**Use case: UC05 - View all notes**","lastModifiedDate":"2023-10-05"},{"lineNumber":373,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":374,"author":{"gitId":"josepholim"},"content":"**MSS**","lastModifiedDate":"2023-10-05"},{"lineNumber":375,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":376,"author":{"gitId":"josepholim"},"content":"1.  User requests to view all notes.","lastModifiedDate":"2023-10-05"},{"lineNumber":377,"author":{"gitId":"josepholim"},"content":"2.  KeepInTouch shows all notes.","lastModifiedDate":"2023-10-05"},{"lineNumber":378,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":379,"author":{"gitId":"josepholim"},"content":"    Use case ends.","lastModifiedDate":"2023-10-05"},{"lineNumber":380,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":381,"author":{"gitId":"josepholim"},"content":"**Extensions**","lastModifiedDate":"2023-10-05"},{"lineNumber":382,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":383,"author":{"gitId":"josepholim"},"content":"* 2a. There are no notes exists.","lastModifiedDate":"2023-10-05"},{"lineNumber":384,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":385,"author":{"gitId":"josepholim"},"content":"    * 2a1. KeepInTouch shows a message indicating the non-existent notes.","lastModifiedDate":"2023-10-05"},{"lineNumber":386,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":387,"author":{"gitId":"josepholim"},"content":"      Use case ends.","lastModifiedDate":"2023-10-05"},{"lineNumber":388,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":389,"author":{"gitId":"josepholim"},"content":"**Use case: UC06 - Add notes to a contact**","lastModifiedDate":"2023-10-05"},{"lineNumber":390,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":391,"author":{"gitId":"josepholim"},"content":"**MSS**","lastModifiedDate":"2023-10-05"},{"lineNumber":392,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":393,"author":{"gitId":"josepholim"},"content":"1.  User requests to add notes to a contact.","lastModifiedDate":"2023-10-05"},{"lineNumber":394,"author":{"gitId":"josepholim"},"content":"2.  KeepInTouch adds the notes to the contact.","lastModifiedDate":"2023-10-05"},{"lineNumber":395,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":396,"author":{"gitId":"josepholim"},"content":"    Use case ends.","lastModifiedDate":"2023-10-05"},{"lineNumber":397,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":398,"author":{"gitId":"josepholim"},"content":"**Extensions**","lastModifiedDate":"2023-10-05"},{"lineNumber":399,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":400,"author":{"gitId":"josepholim"},"content":"* 1a. User inputs incomplete data.","lastModifiedDate":"2023-10-05"},{"lineNumber":401,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":402,"author":{"gitId":"josepholim"},"content":"    * 1a1. KeepInTouch shows a message indicating incomplete data.","lastModifiedDate":"2023-10-05"},{"lineNumber":403,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":404,"author":{"gitId":"josepholim"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2023-10-05"},{"lineNumber":405,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":406,"author":{"gitId":"josepholim"},"content":"* 1b. User inputs a contact that does not exist.","lastModifiedDate":"2023-10-05"},{"lineNumber":407,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":408,"author":{"gitId":"josepholim"},"content":"    * 1b1. KeepInTouch shows a message indicating the non-existent contact.","lastModifiedDate":"2023-10-05"},{"lineNumber":409,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":410,"author":{"gitId":"josepholim"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2023-10-05"},{"lineNumber":411,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":412,"author":{"gitId":"josepholim"},"content":"**Use case: UC07 - Delete notes from a contact**","lastModifiedDate":"2023-10-05"},{"lineNumber":413,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":414,"author":{"gitId":"josepholim"},"content":"**MSS**","lastModifiedDate":"2023-10-05"},{"lineNumber":415,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":416,"author":{"gitId":"josepholim"},"content":"1.  User requests to delete notes from a contact.","lastModifiedDate":"2023-10-05"},{"lineNumber":417,"author":{"gitId":"josepholim"},"content":"2.  KeepInTouch deletes the notes from the contact.","lastModifiedDate":"2023-10-05"},{"lineNumber":418,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":419,"author":{"gitId":"josepholim"},"content":"    Use case ends.","lastModifiedDate":"2023-10-05"},{"lineNumber":420,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":421,"author":{"gitId":"josepholim"},"content":"**Extensions**","lastModifiedDate":"2023-10-05"},{"lineNumber":422,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":423,"author":{"gitId":"josepholim"},"content":"* 1a. User inputs incomplete data.","lastModifiedDate":"2023-10-05"},{"lineNumber":424,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":425,"author":{"gitId":"josepholim"},"content":"    * 1a1. KeepInTouch shows a message indicating incomplete data.","lastModifiedDate":"2023-10-05"},{"lineNumber":426,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":427,"author":{"gitId":"josepholim"},"content":"      Use case ends.","lastModifiedDate":"2023-10-05"},{"lineNumber":428,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":429,"author":{"gitId":"josepholim"},"content":"* 1b. User inputs a contact that does not exist.","lastModifiedDate":"2023-10-05"},{"lineNumber":430,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":431,"author":{"gitId":"josepholim"},"content":"    * 1b1. KeepInTouch shows a message indicating the non-existent contact.","lastModifiedDate":"2023-10-05"},{"lineNumber":432,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":433,"author":{"gitId":"josepholim"},"content":"      Use case ends.","lastModifiedDate":"2023-10-05"},{"lineNumber":434,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":435,"author":{"gitId":"josepholim"},"content":"* 1c. User inputs notes that does not exist.","lastModifiedDate":"2023-10-05"},{"lineNumber":436,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":437,"author":{"gitId":"josepholim"},"content":"    * 1c1. KeepInTouch shows a message indicating the non-existent notes.","lastModifiedDate":"2023-10-05"},{"lineNumber":438,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":439,"author":{"gitId":"josepholim"},"content":"      Use case ends.","lastModifiedDate":"2023-10-05"},{"lineNumber":440,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":441,"author":{"gitId":"josepholim"},"content":"**Use case: UC08 - Add an event**","lastModifiedDate":"2023-10-05"},{"lineNumber":442,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":443,"author":{"gitId":"josepholim"},"content":"**MSS**","lastModifiedDate":"2023-10-05"},{"lineNumber":444,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":445,"author":{"gitId":"josepholim"},"content":"1.  User requests to add an event.","lastModifiedDate":"2023-10-05"},{"lineNumber":446,"author":{"gitId":"josepholim"},"content":"2.  KeepInTouch adds the event.","lastModifiedDate":"2023-10-05"},{"lineNumber":447,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":448,"author":{"gitId":"josepholim"},"content":"    Use case ends.","lastModifiedDate":"2023-10-05"},{"lineNumber":449,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":450,"author":{"gitId":"josepholim"},"content":"**Extensions**","lastModifiedDate":"2023-10-05"},{"lineNumber":451,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":452,"author":{"gitId":"josepholim"},"content":"* 1a. User inputs incomplete data.","lastModifiedDate":"2023-10-05"},{"lineNumber":453,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":454,"author":{"gitId":"josepholim"},"content":"    * 1a1. KeepInTouch shows a message indicating incomplete data.","lastModifiedDate":"2023-10-05"},{"lineNumber":455,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":456,"author":{"gitId":"josepholim"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2023-10-05"},{"lineNumber":457,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":458,"author":{"gitId":"josepholim"},"content":"**Use case: UC09 - Delete an event**","lastModifiedDate":"2023-10-05"},{"lineNumber":459,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":460,"author":{"gitId":"josepholim"},"content":"**MSS**","lastModifiedDate":"2023-10-05"},{"lineNumber":461,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":462,"author":{"gitId":"josepholim"},"content":"1.  User requests to delete an event.","lastModifiedDate":"2023-10-05"},{"lineNumber":463,"author":{"gitId":"josepholim"},"content":"2.  KeepInTouch deletes the event.","lastModifiedDate":"2023-10-05"},{"lineNumber":464,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":465,"author":{"gitId":"josepholim"},"content":"    Use case ends.","lastModifiedDate":"2023-10-05"},{"lineNumber":466,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":467,"author":{"gitId":"josepholim"},"content":"**Extensions**","lastModifiedDate":"2023-10-05"},{"lineNumber":468,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":469,"author":{"gitId":"josepholim"},"content":"* 1a. User inputs incomplete data.","lastModifiedDate":"2023-10-05"},{"lineNumber":470,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":471,"author":{"gitId":"josepholim"},"content":"    * 1a1. KeepInTouch shows a message indicating incomplete data.","lastModifiedDate":"2023-10-05"},{"lineNumber":472,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":473,"author":{"gitId":"josepholim"},"content":"      Use case ends.","lastModifiedDate":"2023-10-05"},{"lineNumber":474,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":475,"author":{"gitId":"josepholim"},"content":"* 1b. User inputs an event that does not exist.","lastModifiedDate":"2023-10-05"},{"lineNumber":476,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":477,"author":{"gitId":"josepholim"},"content":"    * 1b1. KeepInTouch shows a message indicating the non-existent event.","lastModifiedDate":"2023-10-05"},{"lineNumber":478,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":479,"author":{"gitId":"josepholim"},"content":"      Use case ends.","lastModifiedDate":"2023-10-05"},{"lineNumber":480,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":481,"author":{"gitId":"josepholim"},"content":"**Use case: UC10 - Exit the program**","lastModifiedDate":"2023-10-05"},{"lineNumber":482,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":483,"author":{"gitId":"josepholim"},"content":"**MSS**","lastModifiedDate":"2023-10-05"},{"lineNumber":484,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":485,"author":{"gitId":"josepholim"},"content":"1.  User requests to exit the program.","lastModifiedDate":"2023-10-05"},{"lineNumber":486,"author":{"gitId":"josepholim"},"content":"2.  KeepInTouch exits the program.","lastModifiedDate":"2023-10-05"},{"lineNumber":487,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":488,"author":{"gitId":"josepholim"},"content":"    Use case ends.","lastModifiedDate":"2023-10-05"},{"lineNumber":489,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":490,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":491,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":492,"author":{"gitId":"-"},"content":"1.  Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2020-05-23"},{"lineNumber":493,"author":{"gitId":"josepholim"},"content":"2.  Should be able to hold up to 1000 users without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2023-10-04"},{"lineNumber":494,"author":{"gitId":"josepholim"},"content":"3.  Should be able to hold up to 10000 contacts without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2023-10-04"},{"lineNumber":495,"author":{"gitId":"josepholim"},"content":"4.  All commands should be executed within two seconds.","lastModifiedDate":"2023-10-04"},{"lineNumber":496,"author":{"gitId":"josepholim"},"content":"5.  Should work without requiring any installer.","lastModifiedDate":"2023-10-04"},{"lineNumber":497,"author":{"gitId":"josepholim"},"content":"6.  Should work without requiring any internet connection.","lastModifiedDate":"2023-10-04"},{"lineNumber":498,"author":{"gitId":"josepholim"},"content":"7.  A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2023-10-04"},{"lineNumber":499,"author":{"gitId":"josepholim"},"content":"8.  The GUI should work well for standard screen resolutions 1920x1080 and higher, and, for screen scales 100% and 125%.","lastModifiedDate":"2023-10-04"},{"lineNumber":500,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":501,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":502,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":503,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":504,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":505,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, OS-X","lastModifiedDate":"2020-05-23"},{"lineNumber":506,"author":{"gitId":"-"},"content":"* **Private contact detail**: A contact detail that is not meant to be shared with others","lastModifiedDate":"2020-05-23"},{"lineNumber":507,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":508,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":509,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":510,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":511,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":512,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":513,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":514,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":515,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":516,"author":{"gitId":"-"},"content":"**Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2023-09-12"},{"lineNumber":517,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":518,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":519,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":520,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":521,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":522,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":523,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":524,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":525,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":526,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":527,"author":{"gitId":"-"},"content":"   1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2020-05-23"},{"lineNumber":528,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":529,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":530,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":531,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":532,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":533,"author":{"gitId":"-"},"content":"   1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":534,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":535,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":536,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":537,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":538,"author":{"gitId":"-"},"content":"### Deleting a person","lastModifiedDate":"2020-05-23"},{"lineNumber":539,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":540,"author":{"gitId":"-"},"content":"1. Deleting a person while all persons are being shown","lastModifiedDate":"2020-05-23"},{"lineNumber":541,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":542,"author":{"gitId":"-"},"content":"   1. Prerequisites: List all persons using the `list` command. Multiple persons in the list.","lastModifiedDate":"2020-05-23"},{"lineNumber":543,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":544,"author":{"gitId":"-"},"content":"   1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":545,"author":{"gitId":"-"},"content":"      Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2020-05-23"},{"lineNumber":546,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":547,"author":{"gitId":"-"},"content":"   1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":548,"author":{"gitId":"-"},"content":"      Expected: No person is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2020-05-23"},{"lineNumber":549,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":550,"author":{"gitId":"-"},"content":"   1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":551,"author":{"gitId":"-"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":552,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":553,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":554,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":555,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":556,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":557,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":558,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":559,"author":{"gitId":"-"},"content":"   1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23"},{"lineNumber":560,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":561,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"larrywang0701":10,"zekone":3,"-":375,"josepholim":173}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"AndrewJanong"},"content":"# KeepInTouch User Guide","lastModifiedDate":"2023-10-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"AndrewJanong"},"content":"KeepInTouch is a **desktop app for managing contacts for people in the working industry (recruiters, engineers, etc.) as well as events for career purposes.","lastModifiedDate":"2023-10-04"},{"lineNumber":4,"author":{"gitId":"AndrewJanong"},"content":"KeepInTouch is optimized for use via a  Line Interface** (CLI) while still having the benefits of a Graphical User Interface (GUI).","lastModifiedDate":"2023-10-04"},{"lineNumber":5,"author":{"gitId":"AndrewJanong"},"content":"If you can type fast, KeepInTouch can get your contact management tasks done faster than traditional GUI apps.","lastModifiedDate":"2023-10-04"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c!-- * Table of Contents --\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003cpage-nav-print /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"AndrewJanong"},"content":"## Table of Contents","lastModifiedDate":"2023-10-04"},{"lineNumber":13,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":14,"author":{"gitId":"AndrewJanong"},"content":"* [Quick Start](#quick-start)","lastModifiedDate":"2023-10-04"},{"lineNumber":15,"author":{"gitId":"AndrewJanong"},"content":"* [Features](#features)","lastModifiedDate":"2023-10-04"},{"lineNumber":16,"author":{"gitId":"AndrewJanong"},"content":"  * [Viewing help : `help`](#viewing-help--help)","lastModifiedDate":"2023-10-04"},{"lineNumber":17,"author":{"gitId":"AndrewJanong"},"content":"  * [Adding a person: `add contact`](#adding-a-person--add-contact)","lastModifiedDate":"2023-10-04"},{"lineNumber":18,"author":{"gitId":"AndrewJanong"},"content":"  * [Listing all persons: `list contact`](#listing-all-persons--list-contact)","lastModifiedDate":"2023-10-04"},{"lineNumber":19,"author":{"gitId":"AndrewJanong"},"content":"  * [Deleting a person: `delete contact`](#deleting-a-person--delete-contact)","lastModifiedDate":"2023-10-04"},{"lineNumber":20,"author":{"gitId":"AndrewJanong"},"content":"  * [Adding a note: `add note`](#adding-notes-to-a-contact--add-note)","lastModifiedDate":"2023-10-04"},{"lineNumber":21,"author":{"gitId":"AndrewJanong"},"content":"  * [Listing all notes: `list notes`](#listing-all-notes--list-notes)","lastModifiedDate":"2023-10-04"},{"lineNumber":22,"author":{"gitId":"AndrewJanong"},"content":"  * [Deleting a note: `delete note`](#deleting-a-note--delete-note)","lastModifiedDate":"2023-10-04"},{"lineNumber":23,"author":{"gitId":"AndrewJanong"},"content":"  * [Adding an event: `add event`](#adding-events--add-event)","lastModifiedDate":"2023-10-04"},{"lineNumber":24,"author":{"gitId":"AndrewJanong"},"content":"  * [Listing all events: `list events`](#listing-all-events--list-events)","lastModifiedDate":"2023-10-04"},{"lineNumber":25,"author":{"gitId":"AndrewJanong"},"content":"  * [Deleting an event: `delete event`](#deleting-an-event--delete-event)","lastModifiedDate":"2023-10-04"},{"lineNumber":26,"author":{"gitId":"AndrewJanong"},"content":"  * [Exit: `exit`](#exiting-the-program--exit)","lastModifiedDate":"2023-10-04"},{"lineNumber":27,"author":{"gitId":"AndrewJanong"},"content":"  * [Other Features: _coming soon..._](#other-features)","lastModifiedDate":"2023-10-04"},{"lineNumber":28,"author":{"gitId":"AndrewJanong"},"content":"* [FAQ](#faq)","lastModifiedDate":"2023-10-04"},{"lineNumber":29,"author":{"gitId":"AndrewJanong"},"content":"* [Known Issues](#known-issues)","lastModifiedDate":"2023-10-04"},{"lineNumber":30,"author":{"gitId":"AndrewJanong"},"content":"* [Command Summary](#command-summary)","lastModifiedDate":"2023-10-04"},{"lineNumber":31,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":32,"author":{"gitId":"AndrewJanong"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-10-04"},{"lineNumber":33,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":34,"author":{"gitId":"-"},"content":"## Quick start","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"1. Ensure you have Java `11` or above installed in your Computer.","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"AndrewJanong"},"content":"2. Download the latest `keepintouch.jar` from [here](https://github.com/AY2324S1-CS2103T-W16-1/tp/releases).","lastModifiedDate":"2023-10-04"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"AndrewJanong"},"content":"3. Copy the file to the folder you want to use as the _home folder_ for your KeepInTouch app.","lastModifiedDate":"2023-10-04"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"AndrewJanong"},"content":"4. Open a command terminal, `cd` into the folder you put the jar file in, and use the `java -jar keepintouch.jar` command to run the application.","lastModifiedDate":"2023-10-04"},{"lineNumber":43,"author":{"gitId":"AndrewJanong"},"content":"[//]: # (   A GUI similar to the below should appear in a few seconds. Note how the app contains some sample data.)","lastModifiedDate":"2023-10-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"AndrewJanong"},"content":"5. Type the command in the command box and press Enter to execute it. e.g. typing **`help`** and pressing Enter will open the help window.\u003cbr\u003e","lastModifiedDate":"2023-10-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"   Some example commands you can try:","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"AndrewJanong"},"content":"   * `list contact` : Lists all contacts.","lastModifiedDate":"2023-10-04"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"AndrewJanong"},"content":"   * `add contact -n Aaron -p 12345678 -a Baker Street 12 -e aaron123@gmail.com` : Adds a contact named `Aaron` along with some contact details.","lastModifiedDate":"2023-10-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"AndrewJanong"},"content":"   * `delete contact Aaron` : Deletes a contact with the name Aaron.","lastModifiedDate":"2023-10-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"   * `exit` : Exits the app.","lastModifiedDate":"2023-01-01"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"AndrewJanong"},"content":"6. Refer to the [Features](#features) below for details of each command.","lastModifiedDate":"2023-10-04"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"**Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"* Words in `UPPER_CASE` are the parameters to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"AndrewJanong"},"content":"  e.g. in `delete contact NAME`, `NAME` is a parameter which can be used as `delete contact Aaron`.","lastModifiedDate":"2023-10-04"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"* Items in square brackets are optional.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"AndrewJanong"},"content":"  e.g `add contact -n NAME [-p PHONE_NUMBER] [-a ADDRESS] [-e EMAIL]` can be used as `add contact -n Aaron -p 12345678 -a Baker Street 12 -e aaron123@gmail.com` or as `add contact -n Aaron -e aaron123@gmail.com`.","lastModifiedDate":"2023-10-04"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"larrywang0701"},"content":"* `CONTACT_ID` is the number that is on the left of the person\u0027s name in each person card.","lastModifiedDate":"2023-10-12"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"* Parameters can be in any order.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"AndrewJanong"},"content":"  e.g. if the command specifies `-n NAME -t NOTE_TITLE`, `-t NOTE_TITLE -n NAME` is also acceptable.","lastModifiedDate":"2023-10-04"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"AndrewJanong"},"content":"* Extraneous parameters for commands that do not take in parameters (such as `help`, `list contact`, and `exit`) will be ignored.\u003cbr\u003e","lastModifiedDate":"2023-10-04"},{"lineNumber":78,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `help 123`, it will be interpreted as `help`.","lastModifiedDate":"2021-02-03"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03"},{"lineNumber":80,"author":{"gitId":"-"},"content":"* If you are using a PDF version of this document, be careful when copying and pasting commands that span multiple lines as space characters surrounding line-breaks may be omitted when copied over to the application.","lastModifiedDate":"2023-06-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"### Viewing help : `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"AndrewJanong"},"content":"Shows a list of commands with the functionalities.","lastModifiedDate":"2023-10-04"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"Format: `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"AndrewJanong"},"content":"### Adding a person: `add contact`","lastModifiedDate":"2023-10-04"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"AndrewJanong"},"content":"Adds a person to the contact list.","lastModifiedDate":"2023-10-04"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"AndrewJanong"},"content":"Format: `add contact -n NAME [-p PHONE_NUMBER] [-a ADDRESS] [-e EMAIL]`","lastModifiedDate":"2023-10-04"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"tip\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":98,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"AndrewJanong"},"content":"* `add contact -n Aaron -p 12345678 -a Baker Street 12 -e aaron123@gmail.com`","lastModifiedDate":"2023-10-04"},{"lineNumber":102,"author":{"gitId":"AndrewJanong"},"content":"* `add contact -n Daniel -p 87654321 -e daniel0109@gmail.com`","lastModifiedDate":"2023-10-04"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"AndrewJanong"},"content":"### Listing all persons : `list contact`","lastModifiedDate":"2023-10-04"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"AndrewJanong"},"content":"Shows a list of all persons in the contact list.","lastModifiedDate":"2023-10-04"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"AndrewJanong"},"content":"Format: `list contact`","lastModifiedDate":"2023-10-04"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"AndrewJanong"},"content":"### Deleting a person : `delete contact`","lastModifiedDate":"2023-10-04"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"AndrewJanong"},"content":"Deletes the specified person from the contact list.","lastModifiedDate":"2023-10-04"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"AndrewJanong"},"content":"Format: `delete contact NAME`","lastModifiedDate":"2023-10-04"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"AndrewJanong"},"content":"* Deletes the person with the name `NAME`.","lastModifiedDate":"2023-10-04"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"AndrewJanong"},"content":"* `list contact` followed by `delete contact Aaron` deletes the contact with the name Aaron.","lastModifiedDate":"2023-10-04"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"AndrewJanong"},"content":"### Adding notes to a contact: `add note`","lastModifiedDate":"2023-10-04"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"AndrewJanong"},"content":"Adds a note to a contact from the contact list.","lastModifiedDate":"2023-10-04"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"AndrewJanong"},"content":"Format: `add note -n NAME -t NOTE_TITLE -c NOTE_CONTENT`","lastModifiedDate":"2023-10-04"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"AndrewJanong"},"content":"* `add note -n Aaron -t Meeting Topics -c The topic is about the framework design of the project`","lastModifiedDate":"2023-10-04"},{"lineNumber":129,"author":{"gitId":"AndrewJanong"},"content":"* `add note -n Daniel -t Open Position -e Applications for SWE full-time positions will open soon`","lastModifiedDate":"2023-10-04"},{"lineNumber":130,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":131,"author":{"gitId":"AndrewJanong"},"content":"### Listing all notes : `list notes`","lastModifiedDate":"2023-10-04"},{"lineNumber":132,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":133,"author":{"gitId":"AndrewJanong"},"content":"Shows a list of all notes from all contacts in the contact list.","lastModifiedDate":"2023-10-04"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":135,"author":{"gitId":"AndrewJanong"},"content":"Format: `list notes`","lastModifiedDate":"2023-10-04"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"AndrewJanong"},"content":"### Deleting a note : `delete note`","lastModifiedDate":"2023-10-04"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"AndrewJanong"},"content":"Deletes the specified note from the contact list.","lastModifiedDate":"2023-10-04"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"AndrewJanong"},"content":"Format: `delete note -n NAME -t NOTE_TITLE`","lastModifiedDate":"2023-10-04"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"AndrewJanong"},"content":"* Deletes the note with title `NOTE_TITLE` from the contact with name `NAME`.","lastModifiedDate":"2023-10-04"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"AndrewJanong"},"content":"* `list note` followed by `delete note -n Aaron -t Meeting Topics` deletes the note with title Meeting Topics from the contact with name Aaron.","lastModifiedDate":"2023-10-04"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"AndrewJanong"},"content":"### Adding events: `add event`","lastModifiedDate":"2023-10-04"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"larrywang0701"},"content":"Adds an event to a contact.","lastModifiedDate":"2023-10-12"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":152,"author":{"gitId":"larrywang0701"},"content":"Format: `add event -id CONTACT_ID -en EVENT_NAME -st START_TIME [-et END_TIME] [-loc LOCATION] [-info INFORMATION]`","lastModifiedDate":"2023-10-12"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":154,"author":{"gitId":"larrywang0701"},"content":"Date-Time Format:","lastModifiedDate":"2023-10-12"},{"lineNumber":155,"author":{"gitId":"larrywang0701"},"content":" - You can use one of the following formats for start time and end time:","lastModifiedDate":"2023-10-12"},{"lineNumber":156,"author":{"gitId":"larrywang0701"},"content":"    - Date and time: `yyyy-MM-dd HH:mm[:ss]`","lastModifiedDate":"2023-10-12"},{"lineNumber":157,"author":{"gitId":"larrywang0701"},"content":"      - Example: `2023-10-12 20:05`, `2023-10-12 20:05:30`","lastModifiedDate":"2023-10-12"},{"lineNumber":158,"author":{"gitId":"larrywang0701"},"content":"   - Only date (Time will then refers to 00:00): `yyyy-MM-dd`","lastModifiedDate":"2023-10-13"},{"lineNumber":159,"author":{"gitId":"larrywang0701"},"content":"       - Example: `2023-10-12`","lastModifiedDate":"2023-10-13"},{"lineNumber":160,"author":{"gitId":"larrywang0701"},"content":"    - Only time (Date will then refers to the current date): `HH:mm[:ss]`","lastModifiedDate":"2023-10-12"},{"lineNumber":161,"author":{"gitId":"larrywang0701"},"content":"      - Example: `00:10`, `05:01:45`","lastModifiedDate":"2023-10-12"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":163,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2023-10-04"},{"lineNumber":164,"author":{"gitId":"larrywang0701"},"content":"* `add event -id 1 -en Meeting with professor -st 12:00 -et 01:00 -loc COM 1 Basement -info Discuss the project implementation with the professor`","lastModifiedDate":"2023-10-12"},{"lineNumber":165,"author":{"gitId":"larrywang0701"},"content":"* `add event -id 2 -en Chat with TikTok recruiter -st 17:00`","lastModifiedDate":"2023-10-12"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"AndrewJanong"},"content":"### Listing all events : `list events`","lastModifiedDate":"2023-10-04"},{"lineNumber":168,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":169,"author":{"gitId":"AndrewJanong"},"content":"Shows a list of all events.","lastModifiedDate":"2023-10-04"},{"lineNumber":170,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":171,"author":{"gitId":"AndrewJanong"},"content":"Format: `list events`","lastModifiedDate":"2023-10-04"},{"lineNumber":172,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":173,"author":{"gitId":"AndrewJanong"},"content":"### Deleting an event : `delete event`","lastModifiedDate":"2023-10-04"},{"lineNumber":174,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":175,"author":{"gitId":"larrywang0701"},"content":"Deletes the specified event from a contact.","lastModifiedDate":"2023-10-12"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":177,"author":{"gitId":"larrywang0701"},"content":"Format: `delete event -id CONTACT_ID -eid EVENT_ID`","lastModifiedDate":"2023-10-12"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":179,"author":{"gitId":"larrywang0701"},"content":"* Deletes the event with the id `EVENT_ID` from the contact `CONTACT_ID`.","lastModifiedDate":"2023-10-12"},{"lineNumber":180,"author":{"gitId":"larrywang0701"},"content":"* Note that `EVENT_ID` is the number that are in the left of the event line under each person card.","lastModifiedDate":"2023-10-12"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":182,"author":{"gitId":"AndrewJanong"},"content":"Examples:","lastModifiedDate":"2023-10-04"},{"lineNumber":183,"author":{"gitId":"larrywang0701"},"content":"* `list events` followed by `delete event -id 1 -eid 2` deletes the second event under contact that has id `1`.","lastModifiedDate":"2023-10-12"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"### Exiting the program : `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"Exits the program.","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"Format: `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"### Saving the data","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"AndrewJanong"},"content":"KeepInTouch data are saved in the hard disk automatically after any command that changes the data. There is no need to save manually.","lastModifiedDate":"2023-10-04"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":196,"author":{"gitId":"AndrewJanong"},"content":"### Other Features","lastModifiedDate":"2023-10-04"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"AndrewJanong"},"content":"_More features coming coming soon ..._","lastModifiedDate":"2023-10-04"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"AndrewJanong"},"content":"**Q**: Why can\u0027t I run the app?\u003cbr\u003e","lastModifiedDate":"2023-10-04"},{"lineNumber":205,"author":{"gitId":"AndrewJanong"},"content":"**A**: Make sure you have Java `11` or above installed before running the app.","lastModifiedDate":"2023-10-04"},{"lineNumber":206,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":207,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another Computer?\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"AndrewJanong"},"content":"**A**: Install the app in the other computer and overwrite the empty data file it creates with the file that contains the data of your previous KeepInTouch home folder.","lastModifiedDate":"2023-10-04"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"## Known issues","lastModifiedDate":"2023-09-08"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":214,"author":{"gitId":"AndrewJanong"},"content":"_No known issues at the moment_","lastModifiedDate":"2023-10-04"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":216,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-09-08"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":218,"author":{"gitId":"-"},"content":"## Command summary","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"Action             | Format, Examples","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"AndrewJanong"},"content":"-------------------|----------------------------------------------------------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-10-04"},{"lineNumber":222,"author":{"gitId":"AndrewJanong"},"content":"**Add Contact**    | `add contact -n NAME [-p PHONE_NUMBER] [-a ADDRESS] [-e EMAIL]` \u003cbr\u003e e.g., `add contact -n Aaron -p 12345678 -a Baker Street 12 -e aaron123@gmail.com`","lastModifiedDate":"2023-10-04"},{"lineNumber":223,"author":{"gitId":"AndrewJanong"},"content":"**Delete Contact** | `delete contact NAME`\u003cbr\u003e e.g., `delete contact Aaron`","lastModifiedDate":"2023-10-04"},{"lineNumber":224,"author":{"gitId":"AndrewJanong"},"content":"**List Contact**   | `list contact`","lastModifiedDate":"2023-10-04"},{"lineNumber":225,"author":{"gitId":"AndrewJanong"},"content":"**Add Note**       | `add note -n NAME -t NOTE_TITLE -c NOTE_CONTENT` \u003cbr\u003e e.g., `add note -n Daniel -t Open Position -e Applications for SWE full-time positions will open soon`","lastModifiedDate":"2023-10-04"},{"lineNumber":226,"author":{"gitId":"AndrewJanong"},"content":"**Delete Note**    | `delete note -n NAME -t NOTE_TITLE`\u003cbr\u003e e.g., `delete note -n Aaron -t Meeting Topics`","lastModifiedDate":"2023-10-04"},{"lineNumber":227,"author":{"gitId":"AndrewJanong"},"content":"**List Notes**     | `list notes`","lastModifiedDate":"2023-10-04"},{"lineNumber":228,"author":{"gitId":"larrywang0701"},"content":"**Add Event**      | `add event -id CONTACT_ID -en EVENT_NAME -st START_TIME [-et END_TIME] [-loc LOCATION] [-info INFORMATION]` \u003cbr\u003e e.g., `add event -id 1 -en Meeting with professor -st 12:00 -et 01:00 -loc COM 1 Basement -info Discuss the project implementation with the professor`","lastModifiedDate":"2023-10-12"},{"lineNumber":229,"author":{"gitId":"larrywang0701"},"content":"**Delete Event**   | `delete event -id CONTACT_ID -eid EVENT_ID`\u003cbr\u003e e.g., `delete event -id 1 -eid 1`","lastModifiedDate":"2023-10-12"},{"lineNumber":230,"author":{"gitId":"AndrewJanong"},"content":"**List Events**    | `list events`","lastModifiedDate":"2023-10-04"},{"lineNumber":231,"author":{"gitId":"-"},"content":"**Help**           | `help`","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"larrywang0701":20,"AndrewJanong":94,"-":117}},{"path":"docs/_markbind/layouts/default.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003chead-bottom\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \u003clink rel\u003d\"stylesheet\" href\u003d\"{{baseUrl}}/stylesheets/main.css\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c/head-bottom\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003cheader sticky\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"  \u003cnavbar type\u003d\"dark\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":7,"author":{"gitId":"Nixx162"},"content":"    \u003ca slot\u003d\"brand\" href\u003d\"{{baseUrl}}/index.html\" title\u003d\"Home\" class\u003d\"navbar-brand\"\u003eKeepInTouch\u003c/a\u003e","lastModifiedDate":"2023-10-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    \u003cli\u003e\u003ca href\u003d\"{{baseUrl}}/UserGuide.html\" class\u003d\"nav-link\"\u003eUser Guide\u003c/a\u003e\u003c/li\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    \u003cli\u003e\u003ca href\u003d\"{{baseUrl}}/DeveloperGuide.html\" class\u003d\"nav-link\"\u003eDeveloper Guide\u003c/a\u003e\u003c/li\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    \u003cli\u003e\u003ca href\u003d\"{{baseUrl}}/AboutUs.html\" class\u003d\"nav-link\"\u003eAbout Us\u003c/a\u003e\u003c/li\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":11,"author":{"gitId":"Nixx162"},"content":"    \u003cli\u003e\u003ca href\u003d\"https://github.com/AY2324S1-CS2103T-W16-1/tp\" target\u003d\"_blank\" class\u003d\"nav-link\"\u003e\u003cmd\u003e:fab-github:\u003c/md\u003e\u003c/a\u003e","lastModifiedDate":"2023-10-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    \u003c/li\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    \u003cli slot\u003d\"right\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"      \u003cform class\u003d\"navbar-form\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        \u003csearchbar :data\u003d\"searchData\" placeholder\u003d\"Search\" :on-hit\u003d\"searchCallback\" menu-align-right\u003e\u003c/searchbar\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"      \u003c/form\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003c/li\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  \u003c/navbar\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"\u003c/header\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"\u003cdiv id\u003d\"flex-body\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  \u003cnav id\u003d\"site-nav\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    \u003cdiv class\u003d\"site-nav-top\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"      \u003cdiv class\u003d\"fw-bold mb-2\" style\u003d\"font-size: 1.25rem;\"\u003eSite Map\u003c/div\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    \u003c/div\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    \u003cdiv class\u003d\"nav-component slim-scroll\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"      \u003csite-nav\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"* [Home]({{ baseUrl }}/index.html)","lastModifiedDate":"2023-09-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"* [User Guide]({{ baseUrl }}/UserGuide.html) :expanded:","lastModifiedDate":"2023-09-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  * [Quick Start]({{ baseUrl }}/UserGuide.html#quick-start)","lastModifiedDate":"2023-09-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  * [Features]({{ baseUrl }}/UserGuide.html#features)","lastModifiedDate":"2023-09-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  * [FAQ]({{ baseUrl }}/UserGuide.html#faq)","lastModifiedDate":"2023-09-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  * [Command Summary]({{ baseUrl }}/UserGuide.html#faq)","lastModifiedDate":"2023-09-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"* [Developer Guide]({{ baseUrl }}/DeveloperGuide.html) :expanded:","lastModifiedDate":"2023-09-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"  * [Acknowledgements]({{ baseUrl }}/DeveloperGuide.html#acknowledgements)","lastModifiedDate":"2023-09-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"  * [Setting Up]({{ baseUrl }}/DeveloperGuide.html#setting-up-getting-started)","lastModifiedDate":"2023-09-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"  * [Design]({{ baseUrl }}/DeveloperGuide.html#design)","lastModifiedDate":"2023-09-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"  * [Implementation]({{ baseUrl }}/DeveloperGuide.html#implementation)","lastModifiedDate":"2023-09-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"  * [Documentation, logging, testing, configuration, dev-ops]({{ baseUrl }}/DeveloperGuide.html#documentation-logging-testing-configuration-dev-ops)","lastModifiedDate":"2023-09-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"  * [Appendix: Requirements]({{ baseUrl }}/DeveloperGuide.html#appendix-requirements)","lastModifiedDate":"2023-09-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"  * [Appendix: Instructions for manual testing]({{ baseUrl }}/DeveloperGuide.html#appendix-instructions-for-manual-testing)","lastModifiedDate":"2023-09-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"* Tutorials","lastModifiedDate":"2023-09-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"  * [Tracing code]({{ baseUrl }}/tutorials/TracingCode.html)","lastModifiedDate":"2023-09-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"  * [Adding a command]({{ baseUrl }}/tutorials/AddRemark.html)","lastModifiedDate":"2023-09-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"  * [Removing Fields]({{ baseUrl }}/tutorials/RemovingFields.html)","lastModifiedDate":"2023-09-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"* [About Us]({{ baseUrl }}/AboutUs.html)","lastModifiedDate":"2023-09-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"      \u003c/site-nav\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    \u003c/div\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"  \u003c/nav\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  \u003cdiv id\u003d\"content-wrapper\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    {{ content }}","lastModifiedDate":"2023-09-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"  \u003c/div\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"  \u003cnav id\u003d\"page-nav\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    \u003cdiv class\u003d\"nav-component slim-scroll\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"      \u003cpage-nav /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    \u003c/div\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"  \u003c/nav\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  \u003cscroll-top-button\u003e\u003c/scroll-top-button\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"\u003cfooter\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"  \u003c!-- Support MarkBind by including a link to us on your landing page! --\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":63,"author":{"gitId":"-"},"content":"  \u003cdiv class\u003d\"text-center\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    \u003csmall\u003e[\u003cmd\u003e**Powered by**\u003c/md\u003e \u003cimg src\u003d\"https://markbind.org/favicon.ico\" width\u003d\"30\"\u003e {{MarkBind}}, generated on {{timestamp}}]\u003c/small\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"  \u003c/div\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"\u003c/footer\u003e","lastModifiedDate":"2023-09-12"}],"authorContributionMap":{"-":64,"Nixx162":2}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  layout: default.md","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  title: \"\"","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"Nixx162"},"content":"# KeepInTouch","lastModifiedDate":"2023-10-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":8,"author":{"gitId":"Nixx162"},"content":"[![CI Status](https://github.com/AY2324S1-CS2103T-W16-1/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2324S1-CS2103T-W16-1/tp/actions)","lastModifiedDate":"2023-10-06"},{"lineNumber":9,"author":{"gitId":"Nixx162"},"content":"[![codecov](https://codecov.io/gh/AY2324S1-CS2103T-W16-1/tp/graph/badge.svg?token\u003dKEJTLP53IM)](https://codecov.io/gh/AY2324S1-CS2103T-W16-1/tp)","lastModifiedDate":"2023-10-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"Nixx162"},"content":"**KeepInTouch is a Desktop application developed for jobseekers.** It is meant to help them track connections in their professional network, along with events related to their professional development. While it has a GUI, most of the user interactions happen using a CLI (Command Line Interface).","lastModifiedDate":"2023-10-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"Nixx162"},"content":"* If you are interested in using KeepInTouch, head over to the [_Quick Start_ section of the **User Guide**](UserGuide.html#quick-start).","lastModifiedDate":"2023-10-06"},{"lineNumber":16,"author":{"gitId":"Nixx162"},"content":"* If you are interested about developing KeepInTouch, the [**Developer Guide**](DeveloperGuide.html) is a good place to start.","lastModifiedDate":"2023-10-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"**Acknowledgements**","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"-":15,"Nixx162":6}},{"path":"docs/team/andrewjanong.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"AndrewJanong"},"content":"---","lastModifiedDate":"2023-10-05"},{"lineNumber":2,"author":{"gitId":"AndrewJanong"},"content":"layout: andrewjanong.md","lastModifiedDate":"2023-10-05"},{"lineNumber":3,"author":{"gitId":"AndrewJanong"},"content":"title: \"Andrew Daniel Janong\u0027s Project Portfolio Page\"","lastModifiedDate":"2023-10-05"},{"lineNumber":4,"author":{"gitId":"AndrewJanong"},"content":"---","lastModifiedDate":"2023-10-05"},{"lineNumber":5,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":6,"author":{"gitId":"AndrewJanong"},"content":"### Project: KeepInTouch","lastModifiedDate":"2023-10-05"},{"lineNumber":7,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":8,"author":{"gitId":"AndrewJanong"},"content":"to be added soon","lastModifiedDate":"2023-10-05"},{"lineNumber":9,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":10,"author":{"gitId":"AndrewJanong"},"content":"* **New Feature**: to be added soon","lastModifiedDate":"2023-10-05"},{"lineNumber":11,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":12,"author":{"gitId":"AndrewJanong"},"content":"* **Code contributed**: to be added soon","lastModifiedDate":"2023-10-05"},{"lineNumber":13,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":14,"author":{"gitId":"AndrewJanong"},"content":"* **Project management**:","lastModifiedDate":"2023-10-05"},{"lineNumber":15,"author":{"gitId":"AndrewJanong"},"content":"    * to be added soon","lastModifiedDate":"2023-10-05"},{"lineNumber":16,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":17,"author":{"gitId":"AndrewJanong"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2023-10-05"},{"lineNumber":18,"author":{"gitId":"AndrewJanong"},"content":"    * to be added soon","lastModifiedDate":"2023-10-05"},{"lineNumber":19,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":20,"author":{"gitId":"AndrewJanong"},"content":"* **Documentation**:","lastModifiedDate":"2023-10-05"},{"lineNumber":21,"author":{"gitId":"AndrewJanong"},"content":"    * User Guide:","lastModifiedDate":"2023-10-05"},{"lineNumber":22,"author":{"gitId":"AndrewJanong"},"content":"        * Adapted User Guide to docs/UserGuide.md","lastModifiedDate":"2023-10-05"},{"lineNumber":23,"author":{"gitId":"AndrewJanong"},"content":"    * Developer Guide:","lastModifiedDate":"2023-10-05"},{"lineNumber":24,"author":{"gitId":"AndrewJanong"},"content":"        * to be added soon","lastModifiedDate":"2023-10-05"},{"lineNumber":25,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":26,"author":{"gitId":"AndrewJanong"},"content":"* **Community**:","lastModifiedDate":"2023-10-05"},{"lineNumber":27,"author":{"gitId":"AndrewJanong"},"content":"    * to be added soon","lastModifiedDate":"2023-10-05"},{"lineNumber":28,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":29,"author":{"gitId":"AndrewJanong"},"content":"* **Tools**:","lastModifiedDate":"2023-10-05"},{"lineNumber":30,"author":{"gitId":"AndrewJanong"},"content":"    * to be added soon","lastModifiedDate":"2023-10-05"}],"authorContributionMap":{"AndrewJanong":30}},{"path":"docs/team/josepholim.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"josepholim"},"content":"---","lastModifiedDate":"2023-10-05"},{"lineNumber":2,"author":{"gitId":"josepholim"},"content":"  layout: josepholim.md","lastModifiedDate":"2023-10-05"},{"lineNumber":3,"author":{"gitId":"josepholim"},"content":"  title: \"Joseph Oliver Lim\u0027s Project Portfolio Page\"","lastModifiedDate":"2023-10-05"},{"lineNumber":4,"author":{"gitId":"josepholim"},"content":"---","lastModifiedDate":"2023-10-05"},{"lineNumber":5,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":6,"author":{"gitId":"josepholim"},"content":"### Project: KeepInTouch","lastModifiedDate":"2023-10-05"},{"lineNumber":7,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":8,"author":{"gitId":"josepholim"},"content":"to be added soon","lastModifiedDate":"2023-10-05"},{"lineNumber":9,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":10,"author":{"gitId":"josepholim"},"content":"* **New Feature**: to be added soon","lastModifiedDate":"2023-10-05"},{"lineNumber":11,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":12,"author":{"gitId":"josepholim"},"content":"* **New Feature**: to be added soon","lastModifiedDate":"2023-10-05"},{"lineNumber":13,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":14,"author":{"gitId":"josepholim"},"content":"* **Code contributed**: to be added soon","lastModifiedDate":"2023-10-05"},{"lineNumber":15,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":16,"author":{"gitId":"josepholim"},"content":"* **Project management**:","lastModifiedDate":"2023-10-05"},{"lineNumber":17,"author":{"gitId":"josepholim"},"content":"    * to be added soon","lastModifiedDate":"2023-10-05"},{"lineNumber":18,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":19,"author":{"gitId":"josepholim"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2023-10-05"},{"lineNumber":20,"author":{"gitId":"josepholim"},"content":"    * to be added soon","lastModifiedDate":"2023-10-05"},{"lineNumber":21,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":22,"author":{"gitId":"josepholim"},"content":"* **Documentation**:","lastModifiedDate":"2023-10-05"},{"lineNumber":23,"author":{"gitId":"josepholim"},"content":"    * User Guide:","lastModifiedDate":"2023-10-05"},{"lineNumber":24,"author":{"gitId":"josepholim"},"content":"        * to be added soon","lastModifiedDate":"2023-10-05"},{"lineNumber":25,"author":{"gitId":"josepholim"},"content":"    * Developer Guide:","lastModifiedDate":"2023-10-05"},{"lineNumber":26,"author":{"gitId":"josepholim"},"content":"        * to be added soon","lastModifiedDate":"2023-10-05"},{"lineNumber":27,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":28,"author":{"gitId":"josepholim"},"content":"* **Community**:","lastModifiedDate":"2023-10-05"},{"lineNumber":29,"author":{"gitId":"josepholim"},"content":"    * to be added soon","lastModifiedDate":"2023-10-05"},{"lineNumber":30,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":31,"author":{"gitId":"josepholim"},"content":"* **Tools**:","lastModifiedDate":"2023-10-05"},{"lineNumber":32,"author":{"gitId":"josepholim"},"content":"    * to be added soon","lastModifiedDate":"2023-10-05"}],"authorContributionMap":{"josepholim":32}},{"path":"docs/team/larrywang0701.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"larrywang0701"},"content":"---","lastModifiedDate":"2023-10-05"},{"lineNumber":2,"author":{"gitId":"larrywang0701"},"content":"  layout: default.md","lastModifiedDate":"2023-10-05"},{"lineNumber":3,"author":{"gitId":"larrywang0701"},"content":"  title: \"Wang Zihan\u0027s Project Portfolio Page\"","lastModifiedDate":"2023-10-05"},{"lineNumber":4,"author":{"gitId":"larrywang0701"},"content":"---","lastModifiedDate":"2023-10-05"},{"lineNumber":5,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":6,"author":{"gitId":"larrywang0701"},"content":"### Project  Overview:","lastModifiedDate":"2023-10-05"},{"lineNumber":7,"author":{"gitId":"larrywang0701"},"content":"to be added soon","lastModifiedDate":"2023-10-05"},{"lineNumber":8,"author":{"gitId":"larrywang0701"},"content":"### Summary of Contributions","lastModifiedDate":"2023-10-05"},{"lineNumber":9,"author":{"gitId":"larrywang0701"},"content":"  - #### Code Contributed:","lastModifiedDate":"2023-10-05"},{"lineNumber":10,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":11,"author":{"gitId":"larrywang0701"},"content":"    to be added soon","lastModifiedDate":"2023-10-05"},{"lineNumber":12,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":13,"author":{"gitId":"larrywang0701"},"content":"  - #### Enhancements implemented","lastModifiedDate":"2023-10-05"},{"lineNumber":14,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":15,"author":{"gitId":"larrywang0701"},"content":"    to be added soon","lastModifiedDate":"2023-10-05"},{"lineNumber":16,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":17,"author":{"gitId":"larrywang0701"},"content":"  - #### Contributions to the UG","lastModifiedDate":"2023-10-05"},{"lineNumber":18,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":19,"author":{"gitId":"larrywang0701"},"content":"    Wrote the command formats for most of the commands in the user guide.","lastModifiedDate":"2023-10-05"},{"lineNumber":20,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":21,"author":{"gitId":"larrywang0701"},"content":"    For example: `add contact -n NAME [-p PHONE_NUMBER] [-a ADDRESS] [-e EMAIL]`","lastModifiedDate":"2023-10-05"},{"lineNumber":22,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":23,"author":{"gitId":"larrywang0701"},"content":"    more to be added soon","lastModifiedDate":"2023-10-05"},{"lineNumber":24,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":25,"author":{"gitId":"larrywang0701"},"content":"  - #### Contributions to the DG","lastModifiedDate":"2023-10-05"},{"lineNumber":26,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":27,"author":{"gitId":"larrywang0701"},"content":"    Wrote the User Stories part in the DG","lastModifiedDate":"2023-10-05"},{"lineNumber":28,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":29,"author":{"gitId":"larrywang0701"},"content":"    more to be added soon","lastModifiedDate":"2023-10-05"},{"lineNumber":30,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":31,"author":{"gitId":"larrywang0701"},"content":"  - #### Contributions to team-based tasks","lastModifiedDate":"2023-10-05"},{"lineNumber":32,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":33,"author":{"gitId":"larrywang0701"},"content":"    to be added soon","lastModifiedDate":"2023-10-05"},{"lineNumber":34,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":35,"author":{"gitId":"larrywang0701"},"content":"  - #### Review/mentoring contributions","lastModifiedDate":"2023-10-05"},{"lineNumber":36,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":37,"author":{"gitId":"larrywang0701"},"content":"    to be added soon","lastModifiedDate":"2023-10-05"},{"lineNumber":38,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":39,"author":{"gitId":"larrywang0701"},"content":"  - #### Contributions beyond the project team","lastModifiedDate":"2023-10-05"},{"lineNumber":40,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":41,"author":{"gitId":"larrywang0701"},"content":"    to be added soon","lastModifiedDate":"2023-10-05"}],"authorContributionMap":{"larrywang0701":41}},{"path":"docs/team/nixx162.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Nixx162"},"content":"---","lastModifiedDate":"2023-10-07"},{"lineNumber":2,"author":{"gitId":"Nixx162"},"content":"  layout: nixx162.md","lastModifiedDate":"2023-10-07"},{"lineNumber":3,"author":{"gitId":"Nixx162"},"content":"  title: \"Nicholas Jimmy Alden\u0027s Project Portfolio Page\"","lastModifiedDate":"2023-10-07"},{"lineNumber":4,"author":{"gitId":"Nixx162"},"content":"---","lastModifiedDate":"2023-10-07"},{"lineNumber":5,"author":{"gitId":"Nixx162"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":6,"author":{"gitId":"Nixx162"},"content":"### Project: KeepInTouch","lastModifiedDate":"2023-10-07"},{"lineNumber":7,"author":{"gitId":"Nixx162"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":8,"author":{"gitId":"Nixx162"},"content":"to be added soon","lastModifiedDate":"2023-10-07"},{"lineNumber":9,"author":{"gitId":"Nixx162"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":10,"author":{"gitId":"Nixx162"},"content":"* **New Feature**: to be added soon","lastModifiedDate":"2023-10-07"},{"lineNumber":11,"author":{"gitId":"Nixx162"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":12,"author":{"gitId":"Nixx162"},"content":"* **New Feature**: to be added soon","lastModifiedDate":"2023-10-07"},{"lineNumber":13,"author":{"gitId":"Nixx162"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":14,"author":{"gitId":"Nixx162"},"content":"* **Code contributed**: to be added soon","lastModifiedDate":"2023-10-07"},{"lineNumber":15,"author":{"gitId":"Nixx162"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":16,"author":{"gitId":"Nixx162"},"content":"* **Project management**:","lastModifiedDate":"2023-10-07"},{"lineNumber":17,"author":{"gitId":"Nixx162"},"content":"    * to be added soon","lastModifiedDate":"2023-10-07"},{"lineNumber":18,"author":{"gitId":"Nixx162"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":19,"author":{"gitId":"Nixx162"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2023-10-07"},{"lineNumber":20,"author":{"gitId":"Nixx162"},"content":"    * to be added soon","lastModifiedDate":"2023-10-07"},{"lineNumber":21,"author":{"gitId":"Nixx162"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":22,"author":{"gitId":"Nixx162"},"content":"* **Documentation**:","lastModifiedDate":"2023-10-07"},{"lineNumber":23,"author":{"gitId":"Nixx162"},"content":"    * User Guide:","lastModifiedDate":"2023-10-07"},{"lineNumber":24,"author":{"gitId":"Nixx162"},"content":"        * to be added soon","lastModifiedDate":"2023-10-07"},{"lineNumber":25,"author":{"gitId":"Nixx162"},"content":"    * Developer Guide:","lastModifiedDate":"2023-10-07"},{"lineNumber":26,"author":{"gitId":"Nixx162"},"content":"        * to be added soon","lastModifiedDate":"2023-10-07"},{"lineNumber":27,"author":{"gitId":"Nixx162"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":28,"author":{"gitId":"Nixx162"},"content":"* **Community**:","lastModifiedDate":"2023-10-07"},{"lineNumber":29,"author":{"gitId":"Nixx162"},"content":"    * to be added soon","lastModifiedDate":"2023-10-07"},{"lineNumber":30,"author":{"gitId":"Nixx162"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":31,"author":{"gitId":"Nixx162"},"content":"* **Tools**:","lastModifiedDate":"2023-10-07"},{"lineNumber":32,"author":{"gitId":"Nixx162"},"content":"    * to be added soon","lastModifiedDate":"2023-10-07"}],"authorContributionMap":{"Nixx162":32}},{"path":"docs/team/zekone.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"zekone"},"content":"---","lastModifiedDate":"2023-10-05"},{"lineNumber":2,"author":{"gitId":"zekone"},"content":"  layout: zekone.md","lastModifiedDate":"2023-10-05"},{"lineNumber":3,"author":{"gitId":"zekone"},"content":"  title: \"Khee Wei\u0027s Project Portfolio Page\"","lastModifiedDate":"2023-10-05"},{"lineNumber":4,"author":{"gitId":"zekone"},"content":"---","lastModifiedDate":"2023-10-05"},{"lineNumber":5,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":6,"author":{"gitId":"zekone"},"content":"### Project: KeepInTouch","lastModifiedDate":"2023-10-05"},{"lineNumber":7,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":8,"author":{"gitId":"zekone"},"content":"to be added soon","lastModifiedDate":"2023-10-05"},{"lineNumber":9,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":10,"author":{"gitId":"zekone"},"content":"* **New Feature**: to be added soon","lastModifiedDate":"2023-10-05"},{"lineNumber":11,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":12,"author":{"gitId":"zekone"},"content":"* **New Feature**: to be added soon","lastModifiedDate":"2023-10-05"},{"lineNumber":13,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":14,"author":{"gitId":"zekone"},"content":"* **Code contributed**: to be added soon","lastModifiedDate":"2023-10-05"},{"lineNumber":15,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":16,"author":{"gitId":"zekone"},"content":"* **Project management**:","lastModifiedDate":"2023-10-05"},{"lineNumber":17,"author":{"gitId":"zekone"},"content":"  * to be added soon","lastModifiedDate":"2023-10-05"},{"lineNumber":18,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":19,"author":{"gitId":"zekone"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2023-10-05"},{"lineNumber":20,"author":{"gitId":"zekone"},"content":"  * to be added soon","lastModifiedDate":"2023-10-05"},{"lineNumber":21,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":22,"author":{"gitId":"zekone"},"content":"* **Documentation**:","lastModifiedDate":"2023-10-05"},{"lineNumber":23,"author":{"gitId":"zekone"},"content":"  * User Guide:","lastModifiedDate":"2023-10-05"},{"lineNumber":24,"author":{"gitId":"zekone"},"content":"    * to be added soon","lastModifiedDate":"2023-10-05"},{"lineNumber":25,"author":{"gitId":"zekone"},"content":"  * Developer Guide:","lastModifiedDate":"2023-10-05"},{"lineNumber":26,"author":{"gitId":"zekone"},"content":"    * to be added soon","lastModifiedDate":"2023-10-05"},{"lineNumber":27,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":28,"author":{"gitId":"zekone"},"content":"* **Community**:","lastModifiedDate":"2023-10-05"},{"lineNumber":29,"author":{"gitId":"zekone"},"content":"  * to be added soon","lastModifiedDate":"2023-10-05"},{"lineNumber":30,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":31,"author":{"gitId":"zekone"},"content":"* **Tools**:","lastModifiedDate":"2023-10-05"},{"lineNumber":32,"author":{"gitId":"zekone"},"content":"  * to be added soon","lastModifiedDate":"2023-10-05"},{"lineNumber":33,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-10-05"}],"authorContributionMap":{"zekone":33}},{"path":"src/main/java/seedu/address/commons/util/DateTimeUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"larrywang0701"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"larrywang0701"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"larrywang0701"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"larrywang0701"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"larrywang0701"},"content":"/**","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"larrywang0701"},"content":" * Utilities about date and time","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"larrywang0701"},"content":" */","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"larrywang0701"},"content":"public class DateTimeUtil {","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"larrywang0701"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"larrywang0701"},"content":"     * Parse string into LocalDateTime","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"larrywang0701"},"content":"     * @param str the string to be parsed","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"larrywang0701"},"content":"     * @return The parsed LocalDateTime","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"larrywang0701"},"content":"     * @throws DateTimeParseException If the string cannot be parsed into LocalDateTime","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"larrywang0701"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"larrywang0701"},"content":"    public static LocalDateTime parseString(String str) throws DateTimeParseException {","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"larrywang0701"},"content":"        DateTimeFormatter formatter1 \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm[:ss]\");","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"larrywang0701"},"content":"        LocalDateTime result \u003d null;","lastModifiedDate":"2023-10-12"},{"lineNumber":20,"author":{"gitId":"larrywang0701"},"content":"        try {","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"larrywang0701"},"content":"            result \u003d LocalDateTime.parse(str, formatter1);","lastModifiedDate":"2023-10-12"},{"lineNumber":22,"author":{"gitId":"larrywang0701"},"content":"        } catch (DateTimeParseException e2) {","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"larrywang0701"},"content":"            LocalDateTime now \u003d LocalDateTime.now();","lastModifiedDate":"2023-10-12"},{"lineNumber":24,"author":{"gitId":"larrywang0701"},"content":"            if (str.contains(\"-\")) {","lastModifiedDate":"2023-10-13"},{"lineNumber":25,"author":{"gitId":"larrywang0701"},"content":"                String appendTime \u003d \" 00:00:00\";","lastModifiedDate":"2023-10-13"},{"lineNumber":26,"author":{"gitId":"larrywang0701"},"content":"                result \u003d LocalDateTime.parse(str + appendTime, formatter1);","lastModifiedDate":"2023-10-13"},{"lineNumber":27,"author":{"gitId":"larrywang0701"},"content":"            } else {","lastModifiedDate":"2023-10-13"},{"lineNumber":28,"author":{"gitId":"larrywang0701"},"content":"                String appendDate \u003d now.getYear() + \"-\" + now.getMonthValue() + \"-\" + now.getDayOfMonth() + \" \";","lastModifiedDate":"2023-10-12"},{"lineNumber":29,"author":{"gitId":"larrywang0701"},"content":"                result \u003d LocalDateTime.parse(appendDate + str, formatter1);","lastModifiedDate":"2023-10-12"},{"lineNumber":30,"author":{"gitId":"larrywang0701"},"content":"            }","lastModifiedDate":"2023-10-12"},{"lineNumber":31,"author":{"gitId":"larrywang0701"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":32,"author":{"gitId":"larrywang0701"},"content":"        return result;","lastModifiedDate":"2023-10-12"},{"lineNumber":33,"author":{"gitId":"larrywang0701"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":34,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":35,"author":{"gitId":"larrywang0701"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":36,"author":{"gitId":"larrywang0701"},"content":"     * Get the formatted String representation of the {@code LocalDateTime} object","lastModifiedDate":"2023-10-12"},{"lineNumber":37,"author":{"gitId":"larrywang0701"},"content":"     *","lastModifiedDate":"2023-10-12"},{"lineNumber":38,"author":{"gitId":"larrywang0701"},"content":"     * @param time The {@code LocalDateTime} object to be parsed","lastModifiedDate":"2023-10-12"},{"lineNumber":39,"author":{"gitId":"larrywang0701"},"content":"     * @return The String representation of this {@code LocalDateTime} object, in the format {@code yyyy-MM-dd HH:mm:ss}","lastModifiedDate":"2023-10-12"},{"lineNumber":40,"author":{"gitId":"larrywang0701"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":41,"author":{"gitId":"larrywang0701"},"content":"    public static String toFormattedString(LocalDateTime time) {","lastModifiedDate":"2023-10-12"},{"lineNumber":42,"author":{"gitId":"larrywang0701"},"content":"        return time.format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm:ss\"));","lastModifiedDate":"2023-10-12"},{"lineNumber":43,"author":{"gitId":"larrywang0701"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":44,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":45,"author":{"gitId":"larrywang0701"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"larrywang0701":45}},{"path":"src/main/java/seedu/address/logic/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2023-07-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2023-07-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-07-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-07-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.Prefix;","lastModifiedDate":"2023-07-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2019-02-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2016-09-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"larrywang0701"},"content":"    public static final String MESSAGE_INVALID_DATETIME_FORMAT \u003d \"Invalid date time format! \\n%1$s\";","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"larrywang0701"},"content":"    public static final String MESSAGE_INVALID_INTEGER_ARGUMENT \u003d","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"larrywang0701"},"content":"            \"The provided argument is not a valid integer! \\n%1$s\";","lastModifiedDate":"2023-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_PERSON_DISPLAYED_INDEX \u003d \"The person index provided is invalid\";","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_PERSONS_LISTED_OVERVIEW \u003d \"%1$d persons listed!\";","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_FIELDS \u003d","lastModifiedDate":"2023-07-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"                \"Multiple values specified for the following single-valued field(s): \";","lastModifiedDate":"2023-07-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-07-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Returns an error message indicating the duplicate prefixes.","lastModifiedDate":"2023-07-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-07-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static String getErrorMessageForDuplicatePrefixes(Prefix... duplicatePrefixes) {","lastModifiedDate":"2023-07-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assert duplicatePrefixes.length \u003e 0;","lastModifiedDate":"2023-07-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        Set\u003cString\u003e duplicateFields \u003d","lastModifiedDate":"2023-07-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"                Stream.of(duplicatePrefixes).map(Prefix::toString).collect(Collectors.toSet());","lastModifiedDate":"2023-07-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        return MESSAGE_DUPLICATE_FIELDS + String.join(\" \", duplicateFields);","lastModifiedDate":"2023-07-14"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-07-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-02-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Formats the {@code person} for display to the user.","lastModifiedDate":"2019-02-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-02-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static String format(Person person) {","lastModifiedDate":"2019-02-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2019-02-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        builder.append(person.getName())","lastModifiedDate":"2019-02-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                .append(\"; Phone: \")","lastModifiedDate":"2019-02-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                .append(person.getPhone())","lastModifiedDate":"2019-02-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                .append(\"; Email: \")","lastModifiedDate":"2019-02-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                .append(person.getEmail())","lastModifiedDate":"2019-02-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                .append(\"; Address: \")","lastModifiedDate":"2019-02-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                .append(person.getAddress())","lastModifiedDate":"2019-02-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                .append(\"; Tags: \");","lastModifiedDate":"2019-02-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        person.getTags().forEach(builder::append);","lastModifiedDate":"2019-02-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"larrywang0701":3,"-":51}},{"path":"src/main/java/seedu/address/logic/commands/AddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"larrywang0701"},"content":" * The base class for all secondary {@code add} commands","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"larrywang0701"},"content":"public abstract class AddCommand extends Command {","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"larrywang0701":2,"-":7}},{"path":"src/main/java/seedu/address/logic/commands/AddEventCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"larrywang0701"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"larrywang0701"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"larrywang0701"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"larrywang0701"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"larrywang0701"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"larrywang0701"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"larrywang0701"},"content":"/**","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"larrywang0701"},"content":" * The command handler for {@code add event} command","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"larrywang0701"},"content":" */","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"larrywang0701"},"content":"public class AddEventCommand extends AddCommand {","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"larrywang0701"},"content":"    public static final String SECONDARY_COMMAND_WORD \u003d \"event\";","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"larrywang0701"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New event added: \";","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"larrywang0701"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \" \" + SECONDARY_COMMAND_WORD","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"larrywang0701"},"content":"            + \": Adds an event to a contact.\\n\"","lastModifiedDate":"2023-10-12"},{"lineNumber":20,"author":{"gitId":"larrywang0701"},"content":"            + \"Usage:  add event -n CONTACT_NAME -en EVENT_NAME -st \"","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"larrywang0701"},"content":"            + \"START_TIME [-et END_TIME] [-loc LOCATION] [-i INFORMATION]\";","lastModifiedDate":"2023-10-12"},{"lineNumber":22,"author":{"gitId":"larrywang0701"},"content":"    public static final String MESSAGE_PERSON_NOT_FOUND \u003d \"Can not find the target contact with ID: \";","lastModifiedDate":"2023-10-13"},{"lineNumber":23,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":24,"author":{"gitId":"larrywang0701"},"content":"    private final Event toAdd;","lastModifiedDate":"2023-10-12"},{"lineNumber":25,"author":{"gitId":"larrywang0701"},"content":"    private final int contactId;","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":27,"author":{"gitId":"larrywang0701"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":28,"author":{"gitId":"larrywang0701"},"content":"     * Creates an AddEventCommand to add the specified {@code Event}","lastModifiedDate":"2023-10-12"},{"lineNumber":29,"author":{"gitId":"larrywang0701"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":30,"author":{"gitId":"larrywang0701"},"content":"    public AddEventCommand(int contactId, Event event) {","lastModifiedDate":"2023-10-12"},{"lineNumber":31,"author":{"gitId":"larrywang0701"},"content":"        requireNonNull(event);","lastModifiedDate":"2023-10-12"},{"lineNumber":32,"author":{"gitId":"larrywang0701"},"content":"        this.contactId \u003d contactId;","lastModifiedDate":"2023-10-12"},{"lineNumber":33,"author":{"gitId":"larrywang0701"},"content":"        this.toAdd \u003d event;","lastModifiedDate":"2023-10-12"},{"lineNumber":34,"author":{"gitId":"larrywang0701"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":35,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":36,"author":{"gitId":"larrywang0701"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":37,"author":{"gitId":"larrywang0701"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-12"},{"lineNumber":38,"author":{"gitId":"larrywang0701"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-12"},{"lineNumber":39,"author":{"gitId":"larrywang0701"},"content":"        Person person \u003d model.findPersonByUserFriendlyId(this.contactId);","lastModifiedDate":"2023-10-12"},{"lineNumber":40,"author":{"gitId":"larrywang0701"},"content":"        if (person \u003d\u003d null) {","lastModifiedDate":"2023-10-12"},{"lineNumber":41,"author":{"gitId":"larrywang0701"},"content":"            throw new CommandException(MESSAGE_PERSON_NOT_FOUND + this.contactId);","lastModifiedDate":"2023-10-13"},{"lineNumber":42,"author":{"gitId":"larrywang0701"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":43,"author":{"gitId":"larrywang0701"},"content":"        person.addEvent(this.toAdd);","lastModifiedDate":"2023-10-12"},{"lineNumber":44,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":45,"author":{"gitId":"larrywang0701"},"content":"        return new CommandResult(MESSAGE_SUCCESS + toAdd.getName());","lastModifiedDate":"2023-10-12"},{"lineNumber":46,"author":{"gitId":"larrywang0701"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":47,"author":{"gitId":"larrywang0701"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"larrywang0701":47}},{"path":"src/main/java/seedu/address/logic/commands/AddPersonCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"larrywang0701"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"larrywang0701"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"larrywang0701"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"larrywang0701"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"larrywang0701"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"larrywang0701"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"larrywang0701"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"larrywang0701"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"larrywang0701"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"larrywang0701"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"larrywang0701"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"larrywang0701"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"larrywang0701"},"content":"/**","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"larrywang0701"},"content":" * Adds a person to the address book.","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"larrywang0701"},"content":" */","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"larrywang0701"},"content":"public class AddPersonCommand extends AddCommand {","lastModifiedDate":"2023-10-12"},{"lineNumber":20,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"larrywang0701"},"content":"    public static final String SECONDARY_COMMAND_WORD \u003d \"contact\";","lastModifiedDate":"2023-10-12"},{"lineNumber":22,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"larrywang0701"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \" \"","lastModifiedDate":"2023-10-12"},{"lineNumber":24,"author":{"gitId":"larrywang0701"},"content":"            + SECONDARY_COMMAND_WORD","lastModifiedDate":"2023-10-12"},{"lineNumber":25,"author":{"gitId":"larrywang0701"},"content":"            + \": Adds a person to the address book. \"","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"larrywang0701"},"content":"            + \"Parameters: \"","lastModifiedDate":"2023-10-12"},{"lineNumber":27,"author":{"gitId":"larrywang0701"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2023-10-12"},{"lineNumber":28,"author":{"gitId":"larrywang0701"},"content":"            + PREFIX_PHONE + \"PHONE \"","lastModifiedDate":"2023-10-12"},{"lineNumber":29,"author":{"gitId":"larrywang0701"},"content":"            + PREFIX_EMAIL + \"EMAIL \"","lastModifiedDate":"2023-10-12"},{"lineNumber":30,"author":{"gitId":"larrywang0701"},"content":"            + PREFIX_ADDRESS + \"ADDRESS \"","lastModifiedDate":"2023-10-12"},{"lineNumber":31,"author":{"gitId":"larrywang0701"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2023-10-12"},{"lineNumber":32,"author":{"gitId":"larrywang0701"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2023-10-12"},{"lineNumber":33,"author":{"gitId":"larrywang0701"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2023-10-12"},{"lineNumber":34,"author":{"gitId":"larrywang0701"},"content":"            + PREFIX_PHONE + \"98765432 \"","lastModifiedDate":"2023-10-12"},{"lineNumber":35,"author":{"gitId":"larrywang0701"},"content":"            + PREFIX_EMAIL + \"johnd@example.com \"","lastModifiedDate":"2023-10-12"},{"lineNumber":36,"author":{"gitId":"larrywang0701"},"content":"            + PREFIX_ADDRESS + \"311, Clementi Ave 2, #02-25 \"","lastModifiedDate":"2023-10-12"},{"lineNumber":37,"author":{"gitId":"larrywang0701"},"content":"            + PREFIX_TAG + \"friends \"","lastModifiedDate":"2023-10-12"},{"lineNumber":38,"author":{"gitId":"larrywang0701"},"content":"            + PREFIX_TAG + \"owesMoney\";","lastModifiedDate":"2023-10-12"},{"lineNumber":39,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":40,"author":{"gitId":"larrywang0701"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New person added: %1$s\";","lastModifiedDate":"2023-10-12"},{"lineNumber":41,"author":{"gitId":"larrywang0701"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book\";","lastModifiedDate":"2023-10-12"},{"lineNumber":42,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":43,"author":{"gitId":"larrywang0701"},"content":"    private final Person toAdd;","lastModifiedDate":"2023-10-12"},{"lineNumber":44,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":45,"author":{"gitId":"larrywang0701"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":46,"author":{"gitId":"larrywang0701"},"content":"     * Creates an AddPersonCommand to add the specified {@code Person}","lastModifiedDate":"2023-10-12"},{"lineNumber":47,"author":{"gitId":"larrywang0701"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":48,"author":{"gitId":"larrywang0701"},"content":"    public AddPersonCommand(Person person) {","lastModifiedDate":"2023-10-12"},{"lineNumber":49,"author":{"gitId":"larrywang0701"},"content":"        requireNonNull(person);","lastModifiedDate":"2023-10-12"},{"lineNumber":50,"author":{"gitId":"larrywang0701"},"content":"        toAdd \u003d person;","lastModifiedDate":"2023-10-12"},{"lineNumber":51,"author":{"gitId":"larrywang0701"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":52,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":53,"author":{"gitId":"larrywang0701"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":54,"author":{"gitId":"larrywang0701"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-12"},{"lineNumber":55,"author":{"gitId":"larrywang0701"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-12"},{"lineNumber":56,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":57,"author":{"gitId":"larrywang0701"},"content":"        if (model.hasPerson(toAdd)) {","lastModifiedDate":"2023-10-12"},{"lineNumber":58,"author":{"gitId":"larrywang0701"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2023-10-12"},{"lineNumber":59,"author":{"gitId":"larrywang0701"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":60,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":61,"author":{"gitId":"larrywang0701"},"content":"        model.addPerson(toAdd);","lastModifiedDate":"2023-10-12"},{"lineNumber":62,"author":{"gitId":"larrywang0701"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, Messages.format(toAdd)));","lastModifiedDate":"2023-10-12"},{"lineNumber":63,"author":{"gitId":"larrywang0701"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":64,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":65,"author":{"gitId":"larrywang0701"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":66,"author":{"gitId":"larrywang0701"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-12"},{"lineNumber":67,"author":{"gitId":"larrywang0701"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-12"},{"lineNumber":68,"author":{"gitId":"larrywang0701"},"content":"            return true;","lastModifiedDate":"2023-10-12"},{"lineNumber":69,"author":{"gitId":"larrywang0701"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":70,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":71,"author":{"gitId":"larrywang0701"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-12"},{"lineNumber":72,"author":{"gitId":"larrywang0701"},"content":"        if (!(other instanceof AddPersonCommand)) {","lastModifiedDate":"2023-10-12"},{"lineNumber":73,"author":{"gitId":"larrywang0701"},"content":"            return false;","lastModifiedDate":"2023-10-12"},{"lineNumber":74,"author":{"gitId":"larrywang0701"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":75,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":76,"author":{"gitId":"larrywang0701"},"content":"        AddPersonCommand otherAddPersonCommand \u003d (AddPersonCommand) other;","lastModifiedDate":"2023-10-12"},{"lineNumber":77,"author":{"gitId":"larrywang0701"},"content":"        return toAdd.equals(otherAddPersonCommand.toAdd);","lastModifiedDate":"2023-10-12"},{"lineNumber":78,"author":{"gitId":"larrywang0701"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":79,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":80,"author":{"gitId":"larrywang0701"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":81,"author":{"gitId":"larrywang0701"},"content":"    public String toString() {","lastModifiedDate":"2023-10-12"},{"lineNumber":82,"author":{"gitId":"larrywang0701"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-10-12"},{"lineNumber":83,"author":{"gitId":"larrywang0701"},"content":"                .add(\"toAdd\", toAdd)","lastModifiedDate":"2023-10-12"},{"lineNumber":84,"author":{"gitId":"larrywang0701"},"content":"                .toString();","lastModifiedDate":"2023-10-12"},{"lineNumber":85,"author":{"gitId":"larrywang0701"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":86,"author":{"gitId":"larrywang0701"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"larrywang0701":86}},{"path":"src/main/java/seedu/address/logic/commands/DeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"larrywang0701"},"content":" * The base class for all secondary {@code delete} commands","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"larrywang0701"},"content":"public abstract class DeleteCommand extends Command {","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"larrywang0701":2,"-":6}},{"path":"src/main/java/seedu/address/logic/commands/DeleteEventCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"larrywang0701"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"larrywang0701"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"larrywang0701"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"larrywang0701"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"larrywang0701"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"larrywang0701"},"content":"/**","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"larrywang0701"},"content":" * The command handler for {@code delete event} command","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"larrywang0701"},"content":" */","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"larrywang0701"},"content":"public class DeleteEventCommand extends DeleteCommand {","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"larrywang0701"},"content":"    public static final String SECONDARY_COMMAND_WORD \u003d \"event\";","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"larrywang0701"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \" \"","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"larrywang0701"},"content":"            + SECONDARY_COMMAND_WORD + \": Deletes an event from a contact.\\n\"","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"larrywang0701"},"content":"            + \"Usage:  delete event -n CONTACT_NAME -en EVENT_NAME\";","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"larrywang0701"},"content":"    public static final String MESSAGE_PERSON_NOT_FOUNT \u003d \"Can not find the target contact with ID: \";","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"larrywang0701"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Successfully deleted event: \";","lastModifiedDate":"2023-10-12"},{"lineNumber":20,"author":{"gitId":"larrywang0701"},"content":"    public static final String MESSAGE_EVENT_NOT_FOUND \u003d \"Event not found: ID \u003d \";","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":22,"author":{"gitId":"larrywang0701"},"content":"    private final int eventIdToDelete;","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"larrywang0701"},"content":"    private final int contactId;","lastModifiedDate":"2023-10-12"},{"lineNumber":24,"author":{"gitId":"larrywang0701"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":25,"author":{"gitId":"larrywang0701"},"content":"     * Creates an DeleteEventCommand to delete the specified {@code Event}","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"larrywang0701"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":27,"author":{"gitId":"larrywang0701"},"content":"    public DeleteEventCommand(int contactId, int eventIdToDelete) {","lastModifiedDate":"2023-10-12"},{"lineNumber":28,"author":{"gitId":"larrywang0701"},"content":"        this.contactId \u003d contactId;","lastModifiedDate":"2023-10-12"},{"lineNumber":29,"author":{"gitId":"larrywang0701"},"content":"        this.eventIdToDelete \u003d eventIdToDelete;","lastModifiedDate":"2023-10-12"},{"lineNumber":30,"author":{"gitId":"larrywang0701"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":31,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":32,"author":{"gitId":"larrywang0701"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":33,"author":{"gitId":"larrywang0701"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-12"},{"lineNumber":34,"author":{"gitId":"larrywang0701"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-12"},{"lineNumber":35,"author":{"gitId":"larrywang0701"},"content":"        Person person \u003d model.findPersonByUserFriendlyId(this.contactId);","lastModifiedDate":"2023-10-12"},{"lineNumber":36,"author":{"gitId":"larrywang0701"},"content":"        if (person \u003d\u003d null) {","lastModifiedDate":"2023-10-12"},{"lineNumber":37,"author":{"gitId":"larrywang0701"},"content":"            throw new CommandException(MESSAGE_PERSON_NOT_FOUNT + this.contactId);","lastModifiedDate":"2023-10-12"},{"lineNumber":38,"author":{"gitId":"larrywang0701"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":39,"author":{"gitId":"larrywang0701"},"content":"        boolean success \u003d person.removeEventByUserFriendlyId(this.eventIdToDelete);","lastModifiedDate":"2023-10-12"},{"lineNumber":40,"author":{"gitId":"larrywang0701"},"content":"        if (!success) {","lastModifiedDate":"2023-10-12"},{"lineNumber":41,"author":{"gitId":"larrywang0701"},"content":"            throw new CommandException(MESSAGE_EVENT_NOT_FOUND + this.eventIdToDelete);","lastModifiedDate":"2023-10-12"},{"lineNumber":42,"author":{"gitId":"larrywang0701"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":43,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":44,"author":{"gitId":"larrywang0701"},"content":"        return new CommandResult(MESSAGE_SUCCESS + this.eventIdToDelete);","lastModifiedDate":"2023-10-12"},{"lineNumber":45,"author":{"gitId":"larrywang0701"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":46,"author":{"gitId":"larrywang0701"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"larrywang0701":46}},{"path":"src/main/java/seedu/address/logic/commands/DeletePersonCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"larrywang0701"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"larrywang0701"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"larrywang0701"},"content":"import java.util.List;","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"larrywang0701"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"larrywang0701"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"larrywang0701"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"larrywang0701"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"larrywang0701"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"larrywang0701"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"larrywang0701"},"content":"/**","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"larrywang0701"},"content":" * Deletes a person identified using it\u0027s displayed index from the address book.","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"larrywang0701"},"content":" */","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"larrywang0701"},"content":"public class DeletePersonCommand extends DeleteCommand {","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"larrywang0701"},"content":"    public static final String SECONDARY_COMMAND_WORD \u003d \"contact\";","lastModifiedDate":"2023-10-12"},{"lineNumber":20,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"larrywang0701"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2023-10-12"},{"lineNumber":22,"author":{"gitId":"larrywang0701"},"content":"            + \": Deletes the person identified by the index number used in the displayed person list.\\n\"","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"larrywang0701"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2023-10-12"},{"lineNumber":24,"author":{"gitId":"larrywang0701"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2023-10-12"},{"lineNumber":25,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"larrywang0701"},"content":"    public static final String MESSAGE_DELETE_PERSON_SUCCESS \u003d \"Deleted Person: %1$s\";","lastModifiedDate":"2023-10-12"},{"lineNumber":27,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":28,"author":{"gitId":"larrywang0701"},"content":"    private final Index targetIndex;","lastModifiedDate":"2023-10-12"},{"lineNumber":29,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":30,"author":{"gitId":"larrywang0701"},"content":"    public DeletePersonCommand(Index targetIndex) {","lastModifiedDate":"2023-10-12"},{"lineNumber":31,"author":{"gitId":"larrywang0701"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2023-10-12"},{"lineNumber":32,"author":{"gitId":"larrywang0701"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":33,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":34,"author":{"gitId":"larrywang0701"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":35,"author":{"gitId":"larrywang0701"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-12"},{"lineNumber":36,"author":{"gitId":"larrywang0701"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-12"},{"lineNumber":37,"author":{"gitId":"larrywang0701"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2023-10-12"},{"lineNumber":38,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":39,"author":{"gitId":"larrywang0701"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-10-12"},{"lineNumber":40,"author":{"gitId":"larrywang0701"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-12"},{"lineNumber":41,"author":{"gitId":"larrywang0701"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":42,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":43,"author":{"gitId":"larrywang0701"},"content":"        Person personToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2023-10-12"},{"lineNumber":44,"author":{"gitId":"larrywang0701"},"content":"        model.deletePerson(personToDelete);","lastModifiedDate":"2023-10-12"},{"lineNumber":45,"author":{"gitId":"larrywang0701"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_PERSON_SUCCESS, Messages.format(personToDelete)));","lastModifiedDate":"2023-10-12"},{"lineNumber":46,"author":{"gitId":"larrywang0701"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":47,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":48,"author":{"gitId":"larrywang0701"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":49,"author":{"gitId":"larrywang0701"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-12"},{"lineNumber":50,"author":{"gitId":"larrywang0701"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-12"},{"lineNumber":51,"author":{"gitId":"larrywang0701"},"content":"            return true;","lastModifiedDate":"2023-10-12"},{"lineNumber":52,"author":{"gitId":"larrywang0701"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":53,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":54,"author":{"gitId":"larrywang0701"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-12"},{"lineNumber":55,"author":{"gitId":"larrywang0701"},"content":"        if (!(other instanceof DeletePersonCommand)) {","lastModifiedDate":"2023-10-12"},{"lineNumber":56,"author":{"gitId":"larrywang0701"},"content":"            return false;","lastModifiedDate":"2023-10-12"},{"lineNumber":57,"author":{"gitId":"larrywang0701"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":58,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":59,"author":{"gitId":"larrywang0701"},"content":"        DeletePersonCommand otherDeletePersonCommand \u003d (DeletePersonCommand) other;","lastModifiedDate":"2023-10-12"},{"lineNumber":60,"author":{"gitId":"larrywang0701"},"content":"        return targetIndex.equals(otherDeletePersonCommand.targetIndex);","lastModifiedDate":"2023-10-12"},{"lineNumber":61,"author":{"gitId":"larrywang0701"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":62,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":63,"author":{"gitId":"larrywang0701"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":64,"author":{"gitId":"larrywang0701"},"content":"    public String toString() {","lastModifiedDate":"2023-10-12"},{"lineNumber":65,"author":{"gitId":"larrywang0701"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-10-12"},{"lineNumber":66,"author":{"gitId":"larrywang0701"},"content":"                .add(\"targetIndex\", targetIndex)","lastModifiedDate":"2023-10-12"},{"lineNumber":67,"author":{"gitId":"larrywang0701"},"content":"                .toString();","lastModifiedDate":"2023-10-12"},{"lineNumber":68,"author":{"gitId":"larrywang0701"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":69,"author":{"gitId":"larrywang0701"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"larrywang0701":69}},{"path":"src/main/java/seedu/address/logic/commands/EditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-12-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-01-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-01-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2023-07-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-12-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2016-12-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":24,"author":{"gitId":"zekone"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2023-10-10"},{"lineNumber":25,"author":{"gitId":"zekone"},"content":"import seedu.address.model.note.Note;","lastModifiedDate":"2023-10-10"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2016-12-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2016-12-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2016-12-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2016-12-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":" * Edits the details of an existing person in the address book.","lastModifiedDate":"2016-12-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"public class EditCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2016-12-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the person identified \"","lastModifiedDate":"2016-12-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            + \"by the index number used in the displayed person list. \"","lastModifiedDate":"2018-04-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2016-12-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2017-06-06"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2017-06-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_ADDRESS + \"ADDRESS] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"91234567 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johndoe@example.com\";","lastModifiedDate":"2017-05-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_EDIT_PERSON_SUCCESS \u003d \"Edited Person: %1$s\";","lastModifiedDate":"2016-12-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    private final EditPersonDescriptor editPersonDescriptor;","lastModifiedDate":"2016-12-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * @param index                of the person in the filtered person list to edit","lastModifiedDate":"2017-05-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * @param editPersonDescriptor details to edit the person with","lastModifiedDate":"2016-12-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public EditCommand(Index index, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2017-05-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        requireNonNull(index);","lastModifiedDate":"2017-05-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        requireNonNull(editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2017-05-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        this.editPersonDescriptor \u003d new EditPersonDescriptor(editPersonDescriptor);","lastModifiedDate":"2016-12-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2018-04-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d createEditedPerson(personToEdit, editPersonDescriptor);","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        if (!personToEdit.isSamePerson(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson)));","lastModifiedDate":"2019-02-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToEdit}","lastModifiedDate":"2016-12-26"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * edited with {@code editPersonDescriptor}.","lastModifiedDate":"2016-12-26"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    private static Person createEditedPerson(Person personToEdit, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2018-01-10"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assert personToEdit !\u003d null;","lastModifiedDate":"2016-12-26"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        Name updatedName \u003d editPersonDescriptor.getName().orElse(personToEdit.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        Phone updatedPhone \u003d editPersonDescriptor.getPhone().orElse(personToEdit.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        Email updatedEmail \u003d editPersonDescriptor.getEmail().orElse(personToEdit.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        Address updatedAddress \u003d editPersonDescriptor.getAddress().orElse(personToEdit.getAddress());","lastModifiedDate":"2017-06-21"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e updatedTags \u003d editPersonDescriptor.getTags().orElse(personToEdit.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":105,"author":{"gitId":"zekone"},"content":"        List\u003cNote\u003e updatedNotes \u003d editPersonDescriptor.getNotes().orElse(personToEdit.getNotes());","lastModifiedDate":"2023-10-10"},{"lineNumber":106,"author":{"gitId":"zekone"},"content":"        List\u003cEvent\u003e updatedEvents \u003d editPersonDescriptor.getEvents().orElse(personToEdit.getEvents());","lastModifiedDate":"2023-10-10"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":108,"author":{"gitId":"zekone"},"content":"        return new Person(updatedName, updatedPhone, updatedEmail, updatedAddress, updatedTags, updatedNotes,","lastModifiedDate":"2023-10-10"},{"lineNumber":109,"author":{"gitId":"zekone"},"content":"                updatedEvents);","lastModifiedDate":"2023-10-10"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        if (!(other instanceof EditCommand)) {","lastModifiedDate":"2017-05-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        EditCommand otherEditCommand \u003d (EditCommand) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        return index.equals(otherEditCommand.index)","lastModifiedDate":"2023-07-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"                \u0026\u0026 editPersonDescriptor.equals(otherEditCommand.editPersonDescriptor);","lastModifiedDate":"2023-07-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"                .add(\"index\", index)","lastModifiedDate":"2019-02-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"                .add(\"editPersonDescriptor\", editPersonDescriptor)","lastModifiedDate":"2019-02-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":137,"author":{"gitId":"zekone"},"content":"     * Stores the details to edit the person with. Each non-empty field value will","lastModifiedDate":"2023-10-10"},{"lineNumber":138,"author":{"gitId":"zekone"},"content":"     * replace the","lastModifiedDate":"2023-10-10"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * corresponding field value of the person.","lastModifiedDate":"2016-12-26"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    public static class EditPersonDescriptor {","lastModifiedDate":"2016-12-26"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        private Name name;","lastModifiedDate":"2017-06-21"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        private Phone phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        private Email email;","lastModifiedDate":"2017-06-21"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        private Address address;","lastModifiedDate":"2017-06-21"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-06-21"},{"lineNumber":147,"author":{"gitId":"zekone"},"content":"        private List\u003cNote\u003e notes;","lastModifiedDate":"2023-10-10"},{"lineNumber":148,"author":{"gitId":"zekone"},"content":"        private List\u003cEvent\u003e events;","lastModifiedDate":"2023-10-10"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":150,"author":{"gitId":"zekone"},"content":"        public EditPersonDescriptor() {","lastModifiedDate":"2023-10-10"},{"lineNumber":151,"author":{"gitId":"zekone"},"content":"        }","lastModifiedDate":"2023-10-10"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":154,"author":{"gitId":"-"},"content":"         * Copy constructor.","lastModifiedDate":"2018-01-11"},{"lineNumber":155,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":156,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor(EditPersonDescriptor toCopy) {","lastModifiedDate":"2016-12-26"},{"lineNumber":158,"author":{"gitId":"-"},"content":"            setName(toCopy.name);","lastModifiedDate":"2018-01-15"},{"lineNumber":159,"author":{"gitId":"-"},"content":"            setPhone(toCopy.phone);","lastModifiedDate":"2018-01-15"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            setEmail(toCopy.email);","lastModifiedDate":"2018-01-15"},{"lineNumber":161,"author":{"gitId":"-"},"content":"            setAddress(toCopy.address);","lastModifiedDate":"2018-01-15"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            setTags(toCopy.tags);","lastModifiedDate":"2018-01-11"},{"lineNumber":163,"author":{"gitId":"zekone"},"content":"            setNotes(toCopy.notes);","lastModifiedDate":"2023-10-10"},{"lineNumber":164,"author":{"gitId":"zekone"},"content":"            setNotes(toCopy.notes);","lastModifiedDate":"2023-10-10"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-12-26"},{"lineNumber":168,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2016-12-26"},{"lineNumber":169,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-26"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2016-12-26"},{"lineNumber":171,"author":{"gitId":"-"},"content":"            return CollectionUtil.isAnyNonNull(name, phone, email, address, tags);","lastModifiedDate":"2018-08-14"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        public void setName(Name name) {","lastModifiedDate":"2017-06-21"},{"lineNumber":175,"author":{"gitId":"-"},"content":"            this.name \u003d name;","lastModifiedDate":"2017-06-21"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2016-12-26"},{"lineNumber":179,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2017-06-21"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        public void setPhone(Phone phone) {","lastModifiedDate":"2017-06-21"},{"lineNumber":183,"author":{"gitId":"-"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2016-12-26"},{"lineNumber":187,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(phone);","lastModifiedDate":"2017-06-21"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        public void setEmail(Email email) {","lastModifiedDate":"2017-06-21"},{"lineNumber":191,"author":{"gitId":"-"},"content":"            this.email \u003d email;","lastModifiedDate":"2017-06-21"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        public Optional\u003cEmail\u003e getEmail() {","lastModifiedDate":"2016-12-26"},{"lineNumber":195,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(email);","lastModifiedDate":"2017-06-21"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        public void setAddress(Address address) {","lastModifiedDate":"2017-06-21"},{"lineNumber":199,"author":{"gitId":"-"},"content":"            this.address \u003d address;","lastModifiedDate":"2017-06-21"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        public Optional\u003cAddress\u003e getAddress() {","lastModifiedDate":"2016-12-26"},{"lineNumber":203,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(address);","lastModifiedDate":"2017-06-21"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":207,"author":{"gitId":"-"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2018-01-11"},{"lineNumber":208,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":209,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2017-06-21"},{"lineNumber":211,"author":{"gitId":"-"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2018-01-11"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":215,"author":{"gitId":"zekone"},"content":"         * Returns an unmodifiable tag set, which throws","lastModifiedDate":"2023-10-10"},{"lineNumber":216,"author":{"gitId":"zekone"},"content":"         * {@code UnsupportedOperationException}","lastModifiedDate":"2023-10-10"},{"lineNumber":217,"author":{"gitId":"-"},"content":"         * if modification is attempted.","lastModifiedDate":"2018-01-11"},{"lineNumber":218,"author":{"gitId":"-"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2018-01-11"},{"lineNumber":219,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":220,"author":{"gitId":"-"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":221,"author":{"gitId":"-"},"content":"            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2018-01-11"},{"lineNumber":222,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":224,"author":{"gitId":"zekone"},"content":"        /**","lastModifiedDate":"2023-10-10"},{"lineNumber":225,"author":{"gitId":"zekone"},"content":"         * Sets {@code notes} to this object\u0027s {@code notes}.","lastModifiedDate":"2023-10-10"},{"lineNumber":226,"author":{"gitId":"zekone"},"content":"         * A defensive copy of {@code notes} is used internally.","lastModifiedDate":"2023-10-10"},{"lineNumber":227,"author":{"gitId":"zekone"},"content":"         */","lastModifiedDate":"2023-10-10"},{"lineNumber":228,"author":{"gitId":"zekone"},"content":"        public void setNotes(List\u003cNote\u003e notes) {","lastModifiedDate":"2023-10-10"},{"lineNumber":229,"author":{"gitId":"zekone"},"content":"            this.notes \u003d (notes !\u003d null) ? notes : null;","lastModifiedDate":"2023-10-10"},{"lineNumber":230,"author":{"gitId":"zekone"},"content":"        }","lastModifiedDate":"2023-10-10"},{"lineNumber":231,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":232,"author":{"gitId":"zekone"},"content":"        /**","lastModifiedDate":"2023-10-10"},{"lineNumber":233,"author":{"gitId":"zekone"},"content":"         * Returns an unmodifiable note list, which throws","lastModifiedDate":"2023-10-10"},{"lineNumber":234,"author":{"gitId":"zekone"},"content":"         * {@code UnsupportedOperationException}","lastModifiedDate":"2023-10-10"},{"lineNumber":235,"author":{"gitId":"zekone"},"content":"         * if modification is attempted.","lastModifiedDate":"2023-10-10"},{"lineNumber":236,"author":{"gitId":"zekone"},"content":"         * Returns {@code Optional#empty()} if {@code notes} is null.","lastModifiedDate":"2023-10-10"},{"lineNumber":237,"author":{"gitId":"zekone"},"content":"         */","lastModifiedDate":"2023-10-10"},{"lineNumber":238,"author":{"gitId":"zekone"},"content":"        public Optional\u003cList\u003cNote\u003e\u003e getNotes() {","lastModifiedDate":"2023-10-10"},{"lineNumber":239,"author":{"gitId":"zekone"},"content":"            return (notes !\u003d null) ? Optional.of(Collections.unmodifiableList(notes)) : Optional.empty();","lastModifiedDate":"2023-10-10"},{"lineNumber":240,"author":{"gitId":"zekone"},"content":"        }","lastModifiedDate":"2023-10-10"},{"lineNumber":241,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":242,"author":{"gitId":"zekone"},"content":"        /**","lastModifiedDate":"2023-10-10"},{"lineNumber":243,"author":{"gitId":"zekone"},"content":"         * Sets {@code events} to this object\u0027s {@code events}.","lastModifiedDate":"2023-10-10"},{"lineNumber":244,"author":{"gitId":"zekone"},"content":"         * A defensive copy of {@code events} is used internally.","lastModifiedDate":"2023-10-10"},{"lineNumber":245,"author":{"gitId":"zekone"},"content":"         */","lastModifiedDate":"2023-10-10"},{"lineNumber":246,"author":{"gitId":"zekone"},"content":"        public void setEvents(List\u003cEvent\u003e events) {","lastModifiedDate":"2023-10-10"},{"lineNumber":247,"author":{"gitId":"zekone"},"content":"            this.events \u003d (events !\u003d null) ? events : null;","lastModifiedDate":"2023-10-10"},{"lineNumber":248,"author":{"gitId":"zekone"},"content":"        }","lastModifiedDate":"2023-10-10"},{"lineNumber":249,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":250,"author":{"gitId":"zekone"},"content":"        /**","lastModifiedDate":"2023-10-10"},{"lineNumber":251,"author":{"gitId":"zekone"},"content":"         * Returns an unmodifiable event list, which throws","lastModifiedDate":"2023-10-10"},{"lineNumber":252,"author":{"gitId":"zekone"},"content":"         * {@code UnsupportedOperationException}","lastModifiedDate":"2023-10-10"},{"lineNumber":253,"author":{"gitId":"zekone"},"content":"         * if modification is attempted.","lastModifiedDate":"2023-10-10"},{"lineNumber":254,"author":{"gitId":"zekone"},"content":"         * Returns {@code Optional#empty()} if {@code notes} is null.","lastModifiedDate":"2023-10-10"},{"lineNumber":255,"author":{"gitId":"zekone"},"content":"         */","lastModifiedDate":"2023-10-10"},{"lineNumber":256,"author":{"gitId":"zekone"},"content":"        public Optional\u003cList\u003cEvent\u003e\u003e getEvents() {","lastModifiedDate":"2023-10-10"},{"lineNumber":257,"author":{"gitId":"zekone"},"content":"            return (events !\u003d null) ? Optional.of(Collections.unmodifiableList(events)) : Optional.empty();","lastModifiedDate":"2023-10-10"},{"lineNumber":258,"author":{"gitId":"zekone"},"content":"        }","lastModifiedDate":"2023-10-10"},{"lineNumber":259,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":260,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-05"},{"lineNumber":261,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2017-05-05"},{"lineNumber":262,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-05"},{"lineNumber":263,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2017-05-05"},{"lineNumber":264,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":266,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2017-05-05"},{"lineNumber":267,"author":{"gitId":"-"},"content":"            if (!(other instanceof EditPersonDescriptor)) {","lastModifiedDate":"2017-05-05"},{"lineNumber":268,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2017-05-05"},{"lineNumber":269,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":271,"author":{"gitId":"-"},"content":"            EditPersonDescriptor otherEditPersonDescriptor \u003d (EditPersonDescriptor) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":272,"author":{"gitId":"-"},"content":"            return Objects.equals(name, otherEditPersonDescriptor.name)","lastModifiedDate":"2023-07-13"},{"lineNumber":273,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(phone, otherEditPersonDescriptor.phone)","lastModifiedDate":"2023-07-13"},{"lineNumber":274,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(email, otherEditPersonDescriptor.email)","lastModifiedDate":"2023-07-13"},{"lineNumber":275,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(address, otherEditPersonDescriptor.address)","lastModifiedDate":"2023-07-13"},{"lineNumber":276,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(tags, otherEditPersonDescriptor.tags);","lastModifiedDate":"2023-07-13"},{"lineNumber":277,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-05"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":279,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":280,"author":{"gitId":"-"},"content":"        public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":281,"author":{"gitId":"-"},"content":"            return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":282,"author":{"gitId":"-"},"content":"                    .add(\"name\", name)","lastModifiedDate":"2019-02-23"},{"lineNumber":283,"author":{"gitId":"-"},"content":"                    .add(\"phone\", phone)","lastModifiedDate":"2019-02-23"},{"lineNumber":284,"author":{"gitId":"-"},"content":"                    .add(\"email\", email)","lastModifiedDate":"2019-02-23"},{"lineNumber":285,"author":{"gitId":"-"},"content":"                    .add(\"address\", address)","lastModifiedDate":"2019-02-23"},{"lineNumber":286,"author":{"gitId":"-"},"content":"                    .add(\"tags\", tags)","lastModifiedDate":"2019-02-23"},{"lineNumber":287,"author":{"gitId":"-"},"content":"                    .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":288,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2019-02-23"},{"lineNumber":289,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":290,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26"}],"authorContributionMap":{"zekone":52,"-":238}},{"path":"src/main/java/seedu/address/logic/commands/ListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Lists all persons in the address book to the user.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"larrywang0701"},"content":"public abstract class ListCommand extends Command {","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"larrywang0701":1,"-":9}},{"path":"src/main/java/seedu/address/logic/commands/ListEventCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"larrywang0701"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"larrywang0701"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"larrywang0701"},"content":"import java.util.List;","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"larrywang0701"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"larrywang0701"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"larrywang0701"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"larrywang0701"},"content":"/**","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"larrywang0701"},"content":" * The command handler for {@code list events} command","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"larrywang0701"},"content":" */","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"larrywang0701"},"content":"public class ListEventCommand extends ListCommand {","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"larrywang0701"},"content":"    public static final String SECONDARY_COMMAND_WORD \u003d \"events\";","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"larrywang0701"},"content":"    public static final String MESSAGE \u003d \"Here are all the events in this address book:\\n\";","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"larrywang0701"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"larrywang0701"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-12"},{"lineNumber":20,"author":{"gitId":"larrywang0701"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"larrywang0701"},"content":"        List\u003cPerson\u003e persons \u003d model.getAddressBook().getPersonList();","lastModifiedDate":"2023-10-12"},{"lineNumber":22,"author":{"gitId":"larrywang0701"},"content":"        String result \u003d MESSAGE + model.getAddressBook().eventListToString();","lastModifiedDate":"2023-10-13"},{"lineNumber":23,"author":{"gitId":"larrywang0701"},"content":"        return new CommandResult(result);","lastModifiedDate":"2023-10-13"},{"lineNumber":24,"author":{"gitId":"larrywang0701"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":25,"author":{"gitId":"larrywang0701"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"larrywang0701":25}},{"path":"src/main/java/seedu/address/logic/commands/ListPersonCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"larrywang0701"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"larrywang0701"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"larrywang0701"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"larrywang0701"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"larrywang0701"},"content":"/**","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"larrywang0701"},"content":" * The command handler for {@code list contact} command","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"larrywang0701"},"content":" */","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"larrywang0701"},"content":"public class ListPersonCommand extends ListCommand {","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"larrywang0701"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all persons\";","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"larrywang0701"},"content":"    public static final String SECONDARY_COMMAND_WORD \u003d \"contact\";","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"larrywang0701"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"larrywang0701"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"larrywang0701"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"larrywang0701"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2023-10-12"},{"lineNumber":20,"author":{"gitId":"larrywang0701"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"larrywang0701"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":22,"author":{"gitId":"larrywang0701"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"larrywang0701":22}},{"path":"src/main/java/seedu/address/logic/parser/AddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"larrywang0701"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"larrywang0701"},"content":"import seedu.address.logic.commands.AddEventCommand;","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"larrywang0701"},"content":"import seedu.address.logic.commands.AddPersonCommand;","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"larrywang0701"},"content":" * The parser for all secondary {@code add} commands","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class AddCommandParser implements Parser\u003cAddCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":15,"author":{"gitId":"larrywang0701"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"larrywang0701"},"content":"    public AddCommand parse(String userInput) throws ParseException {","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"larrywang0701"},"content":"        String secondaryCommandWord \u003d SecondaryCommandSelector.getSecondaryCommandWord(userInput);","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"larrywang0701"},"content":"        String args \u003d SecondaryCommandSelector.getArguments(secondaryCommandWord, userInput);","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"larrywang0701"},"content":"        switch (secondaryCommandWord) {","lastModifiedDate":"2023-10-12"},{"lineNumber":20,"author":{"gitId":"larrywang0701"},"content":"        case AddPersonCommand.SECONDARY_COMMAND_WORD:","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"larrywang0701"},"content":"            return new AddPersonCommandParser().parse(args);","lastModifiedDate":"2023-10-12"},{"lineNumber":22,"author":{"gitId":"larrywang0701"},"content":"        case AddEventCommand.SECONDARY_COMMAND_WORD:","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"larrywang0701"},"content":"            return new AddEventCommandParser().parse(args);","lastModifiedDate":"2023-10-12"},{"lineNumber":24,"author":{"gitId":"larrywang0701"},"content":"        default:","lastModifiedDate":"2023-10-12"},{"lineNumber":25,"author":{"gitId":"larrywang0701"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-17"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"larrywang0701":15,"-":15}},{"path":"src/main/java/seedu/address/logic/parser/AddEventCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"larrywang0701"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"larrywang0701"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"larrywang0701"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_DATETIME_FORMAT;","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"larrywang0701"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_INTEGER_ARGUMENT;","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"larrywang0701"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EVENT_END_TIME;","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"larrywang0701"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EVENT_INFORMATION;","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"larrywang0701"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EVENT_LOCATION;","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"larrywang0701"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EVENT_NAME;","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"larrywang0701"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EVENT_START_TIME;","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"larrywang0701"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PERSON_ID;","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"larrywang0701"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"larrywang0701"},"content":"import seedu.address.logic.commands.AddEventCommand;","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"larrywang0701"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"larrywang0701"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"larrywang0701"},"content":"/**","lastModifiedDate":"2023-10-12"},{"lineNumber":20,"author":{"gitId":"larrywang0701"},"content":" * Parses input arguments and creates a new AddEventCommand object","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"larrywang0701"},"content":" */","lastModifiedDate":"2023-10-12"},{"lineNumber":22,"author":{"gitId":"larrywang0701"},"content":"public class AddEventCommandParser implements Parser\u003cAddEventCommand\u003e {","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":24,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":25,"author":{"gitId":"larrywang0701"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"larrywang0701"},"content":"    public AddEventCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-12"},{"lineNumber":27,"author":{"gitId":"larrywang0701"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_PERSON_ID,","lastModifiedDate":"2023-10-12"},{"lineNumber":28,"author":{"gitId":"larrywang0701"},"content":"                PREFIX_EVENT_NAME, PREFIX_EVENT_START_TIME, PREFIX_EVENT_END_TIME,","lastModifiedDate":"2023-10-12"},{"lineNumber":29,"author":{"gitId":"larrywang0701"},"content":"                PREFIX_EVENT_LOCATION, PREFIX_EVENT_INFORMATION);","lastModifiedDate":"2023-10-12"},{"lineNumber":30,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":31,"author":{"gitId":"larrywang0701"},"content":"        if (!ParserUtil.arePrefixesPresent(argMultimap, PREFIX_PERSON_ID, PREFIX_EVENT_NAME,","lastModifiedDate":"2023-10-12"},{"lineNumber":32,"author":{"gitId":"larrywang0701"},"content":"                PREFIX_EVENT_START_TIME) || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2023-10-12"},{"lineNumber":33,"author":{"gitId":"larrywang0701"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddEventCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-12"},{"lineNumber":34,"author":{"gitId":"larrywang0701"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":35,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":36,"author":{"gitId":"larrywang0701"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_PERSON_ID,","lastModifiedDate":"2023-10-12"},{"lineNumber":37,"author":{"gitId":"larrywang0701"},"content":"                PREFIX_EVENT_NAME, PREFIX_EVENT_START_TIME, PREFIX_EVENT_END_TIME, PREFIX_EVENT_LOCATION,","lastModifiedDate":"2023-10-12"},{"lineNumber":38,"author":{"gitId":"larrywang0701"},"content":"                PREFIX_EVENT_INFORMATION);","lastModifiedDate":"2023-10-12"},{"lineNumber":39,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":40,"author":{"gitId":"larrywang0701"},"content":"        int contactId \u003d -1;","lastModifiedDate":"2023-10-12"},{"lineNumber":41,"author":{"gitId":"larrywang0701"},"content":"        String eventName \u003d argMultimap.getValue(PREFIX_EVENT_NAME).get();","lastModifiedDate":"2023-10-12"},{"lineNumber":42,"author":{"gitId":"larrywang0701"},"content":"        String startTime \u003d argMultimap.getValue(PREFIX_EVENT_START_TIME).get();","lastModifiedDate":"2023-10-12"},{"lineNumber":43,"author":{"gitId":"larrywang0701"},"content":"        String endTime \u003d argMultimap.getValue(PREFIX_EVENT_END_TIME).orElseGet(()-\u003e\"\");","lastModifiedDate":"2023-10-12"},{"lineNumber":44,"author":{"gitId":"larrywang0701"},"content":"        String location \u003d argMultimap.getValue(PREFIX_EVENT_LOCATION).orElseGet(()-\u003e\"\");","lastModifiedDate":"2023-10-12"},{"lineNumber":45,"author":{"gitId":"larrywang0701"},"content":"        String information \u003d argMultimap.getValue(PREFIX_EVENT_INFORMATION).orElseGet(()-\u003e\"\");","lastModifiedDate":"2023-10-12"},{"lineNumber":46,"author":{"gitId":"larrywang0701"},"content":"        Event newEvent \u003d null;","lastModifiedDate":"2023-10-12"},{"lineNumber":47,"author":{"gitId":"larrywang0701"},"content":"        try {","lastModifiedDate":"2023-10-12"},{"lineNumber":48,"author":{"gitId":"larrywang0701"},"content":"            newEvent \u003d new Event(eventName, startTime, endTime, location, information);","lastModifiedDate":"2023-10-12"},{"lineNumber":49,"author":{"gitId":"larrywang0701"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-10-12"},{"lineNumber":50,"author":{"gitId":"larrywang0701"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_DATETIME_FORMAT, e.getMessage()));","lastModifiedDate":"2023-10-12"},{"lineNumber":51,"author":{"gitId":"larrywang0701"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":52,"author":{"gitId":"larrywang0701"},"content":"        try {","lastModifiedDate":"2023-10-12"},{"lineNumber":53,"author":{"gitId":"larrywang0701"},"content":"            contactId \u003d Integer.parseInt(argMultimap.getValue(PREFIX_PERSON_ID).get());","lastModifiedDate":"2023-10-12"},{"lineNumber":54,"author":{"gitId":"larrywang0701"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-10-12"},{"lineNumber":55,"author":{"gitId":"larrywang0701"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_INTEGER_ARGUMENT, e.getMessage()));","lastModifiedDate":"2023-10-12"},{"lineNumber":56,"author":{"gitId":"larrywang0701"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":57,"author":{"gitId":"larrywang0701"},"content":"        return new AddEventCommand(contactId, newEvent);","lastModifiedDate":"2023-10-12"},{"lineNumber":58,"author":{"gitId":"larrywang0701"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":59,"author":{"gitId":"larrywang0701"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"larrywang0701":59}},{"path":"src/main/java/seedu/address/logic/parser/AddPersonCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"larrywang0701"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"larrywang0701"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"larrywang0701"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"larrywang0701"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"larrywang0701"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"larrywang0701"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"larrywang0701"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"larrywang0701"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"larrywang0701"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"larrywang0701"},"content":"import seedu.address.logic.commands.AddPersonCommand;","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"larrywang0701"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"larrywang0701"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"larrywang0701"},"content":"import seedu.address.model.note.Note;","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"larrywang0701"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"larrywang0701"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"larrywang0701"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-10-12"},{"lineNumber":20,"author":{"gitId":"larrywang0701"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"larrywang0701"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2023-10-12"},{"lineNumber":22,"author":{"gitId":"larrywang0701"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":24,"author":{"gitId":"larrywang0701"},"content":"/**","lastModifiedDate":"2023-10-12"},{"lineNumber":25,"author":{"gitId":"larrywang0701"},"content":" * Parses input arguments and creates a new AddPersonCommand object","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"larrywang0701"},"content":" */","lastModifiedDate":"2023-10-12"},{"lineNumber":27,"author":{"gitId":"larrywang0701"},"content":"public class AddPersonCommandParser implements Parser\u003cAddPersonCommand\u003e {","lastModifiedDate":"2023-10-12"},{"lineNumber":28,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":29,"author":{"gitId":"larrywang0701"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":30,"author":{"gitId":"larrywang0701"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2023-10-12"},{"lineNumber":31,"author":{"gitId":"larrywang0701"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2023-10-12"},{"lineNumber":32,"author":{"gitId":"larrywang0701"},"content":"     *","lastModifiedDate":"2023-10-12"},{"lineNumber":33,"author":{"gitId":"larrywang0701"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-10-12"},{"lineNumber":34,"author":{"gitId":"larrywang0701"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":35,"author":{"gitId":"larrywang0701"},"content":"    public AddPersonCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-12"},{"lineNumber":36,"author":{"gitId":"larrywang0701"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL,","lastModifiedDate":"2023-10-12"},{"lineNumber":37,"author":{"gitId":"larrywang0701"},"content":"                PREFIX_ADDRESS, PREFIX_TAG);","lastModifiedDate":"2023-10-12"},{"lineNumber":38,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":39,"author":{"gitId":"larrywang0701"},"content":"        if (!ParserUtil.arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_ADDRESS, PREFIX_PHONE, PREFIX_EMAIL)","lastModifiedDate":"2023-10-12"},{"lineNumber":40,"author":{"gitId":"larrywang0701"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2023-10-12"},{"lineNumber":41,"author":{"gitId":"larrywang0701"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddPersonCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-12"},{"lineNumber":42,"author":{"gitId":"larrywang0701"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":43,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":44,"author":{"gitId":"larrywang0701"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS);","lastModifiedDate":"2023-10-12"},{"lineNumber":45,"author":{"gitId":"larrywang0701"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2023-10-12"},{"lineNumber":46,"author":{"gitId":"larrywang0701"},"content":"        Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2023-10-12"},{"lineNumber":47,"author":{"gitId":"larrywang0701"},"content":"        Email email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get());","lastModifiedDate":"2023-10-12"},{"lineNumber":48,"author":{"gitId":"larrywang0701"},"content":"        Address address \u003d ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get());","lastModifiedDate":"2023-10-12"},{"lineNumber":49,"author":{"gitId":"larrywang0701"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2023-10-12"},{"lineNumber":50,"author":{"gitId":"larrywang0701"},"content":"        ArrayList\u003cNote\u003e noteList \u003d new ArrayList\u003cNote\u003e();","lastModifiedDate":"2023-10-12"},{"lineNumber":51,"author":{"gitId":"larrywang0701"},"content":"        ArrayList\u003cEvent\u003e eventList \u003d new ArrayList\u003cEvent\u003e();","lastModifiedDate":"2023-10-12"},{"lineNumber":52,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":53,"author":{"gitId":"larrywang0701"},"content":"        Person person \u003d new Person(name, phone, email, address, tagList, noteList, eventList);","lastModifiedDate":"2023-10-12"},{"lineNumber":54,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":55,"author":{"gitId":"larrywang0701"},"content":"        return new AddPersonCommand(person);","lastModifiedDate":"2023-10-12"},{"lineNumber":56,"author":{"gitId":"larrywang0701"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":57,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":58,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":59,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":60,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":61,"author":{"gitId":"larrywang0701"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"larrywang0701":61}},{"path":"src/main/java/seedu/address/logic/parser/AddressBookParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-07-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-07-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2023-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class AddressBookParser {","lastModifiedDate":"2017-07-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(AddressBookParser.class);","lastModifiedDate":"2023-07-29"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // Note to developers: Change the log level in config.json to enable lower level (i.e., FINE, FINER and lower)","lastModifiedDate":"2023-07-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // log messages such as the one below.","lastModifiedDate":"2023-07-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // Lower level log messages are used sparingly to minimize noise in the code.","lastModifiedDate":"2023-07-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        logger.fine(\"Command word: \" + commandWord + \"; Arguments: \" + arguments);","lastModifiedDate":"2023-07-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        case AddCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            return new AddCommandParser().parse(arguments);","lastModifiedDate":"2017-02-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        case EditCommand.COMMAND_WORD:","lastModifiedDate":"2016-12-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            return new EditCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-12"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            return new DeleteCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            return new ClearCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            return new FindCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":72,"author":{"gitId":"larrywang0701"},"content":"            return new ListCommandParser().parse(arguments);","lastModifiedDate":"2023-10-12"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            logger.finer(\"This user input caused a ParseException: \" + userInput);","lastModifiedDate":"2023-07-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"larrywang0701":1,"-":84}},{"path":"src/main/java/seedu/address/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"larrywang0701"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"-n\");","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"larrywang0701"},"content":"    public static final Prefix PREFIX_PERSON_ID \u003d new Prefix(\"-id\");","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"larrywang0701"},"content":"    public static final Prefix PREFIX_EVENT_ID \u003d new Prefix(\"-eid\");","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"e/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_ADDRESS \u003d new Prefix(\"a/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"t/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":16,"author":{"gitId":"larrywang0701"},"content":"    public static final Prefix PREFIX_EVENT_NAME \u003d new Prefix(\"-en\");","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"larrywang0701"},"content":"    public static final Prefix PREFIX_EVENT_START_TIME \u003d new Prefix(\"-st\");","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"larrywang0701"},"content":"    public static final Prefix PREFIX_EVENT_END_TIME \u003d new Prefix(\"-et\");","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"larrywang0701"},"content":"    public static final Prefix PREFIX_EVENT_LOCATION \u003d new Prefix(\"-loc\");","lastModifiedDate":"2023-10-12"},{"lineNumber":20,"author":{"gitId":"larrywang0701"},"content":"    public static final Prefix PREFIX_EVENT_INFORMATION \u003d new Prefix(\"-info\");","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"larrywang0701":8,"-":14}},{"path":"src/main/java/seedu/address/logic/parser/DeleteCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"larrywang0701"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"larrywang0701"},"content":"import seedu.address.logic.commands.DeleteEventCommand;","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"larrywang0701"},"content":"import seedu.address.logic.commands.DeletePersonCommand;","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"larrywang0701"},"content":" * The parser for all secondary {@code delete} commands","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class DeleteCommandParser implements Parser\u003cDeleteCommand\u003e {","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"larrywang0701"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"larrywang0701"},"content":"    public DeleteCommand parse(String userInput) throws ParseException {","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"larrywang0701"},"content":"        String secondaryCommandWord \u003d SecondaryCommandSelector.getSecondaryCommandWord(userInput);","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"larrywang0701"},"content":"        String args \u003d SecondaryCommandSelector.getArguments(secondaryCommandWord, userInput);","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"larrywang0701"},"content":"        switch (secondaryCommandWord) {","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"larrywang0701"},"content":"        case DeletePersonCommand.SECONDARY_COMMAND_WORD:","lastModifiedDate":"2023-10-12"},{"lineNumber":20,"author":{"gitId":"larrywang0701"},"content":"            return new DeletePersonCommandParser().parse(args);","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"larrywang0701"},"content":"        case DeleteEventCommand.SECONDARY_COMMAND_WORD:","lastModifiedDate":"2023-10-12"},{"lineNumber":22,"author":{"gitId":"larrywang0701"},"content":"            return new DeleteEventCommandParser().parse(args);","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"larrywang0701"},"content":"        default:","lastModifiedDate":"2023-10-12"},{"lineNumber":24,"author":{"gitId":"larrywang0701"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2023-10-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"larrywang0701":15,"-":12}},{"path":"src/main/java/seedu/address/logic/parser/DeleteEventCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"larrywang0701"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"larrywang0701"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"larrywang0701"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_INTEGER_ARGUMENT;","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"larrywang0701"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EVENT_ID;","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"larrywang0701"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PERSON_ID;","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"larrywang0701"},"content":"import seedu.address.logic.commands.DeleteEventCommand;","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"larrywang0701"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"larrywang0701"},"content":"/**","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"larrywang0701"},"content":" * Parses input arguments and creates a new DeleteEventCommand object","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"larrywang0701"},"content":" */","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"larrywang0701"},"content":"public class DeleteEventCommandParser implements Parser\u003cDeleteEventCommand\u003e {","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"larrywang0701"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"larrywang0701"},"content":"    public DeleteEventCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"larrywang0701"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_PERSON_ID, PREFIX_EVENT_ID);","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"larrywang0701"},"content":"        if (!ParserUtil.arePrefixesPresent(argMultimap, PREFIX_PERSON_ID, PREFIX_EVENT_ID)","lastModifiedDate":"2023-10-12"},{"lineNumber":20,"author":{"gitId":"larrywang0701"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"larrywang0701"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteEventCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-12"},{"lineNumber":22,"author":{"gitId":"larrywang0701"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":24,"author":{"gitId":"larrywang0701"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_PERSON_ID, PREFIX_EVENT_ID);","lastModifiedDate":"2023-10-12"},{"lineNumber":25,"author":{"gitId":"larrywang0701"},"content":"        int contactId \u003d -1;","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"larrywang0701"},"content":"        int eventId \u003d -1;","lastModifiedDate":"2023-10-12"},{"lineNumber":27,"author":{"gitId":"larrywang0701"},"content":"        try {","lastModifiedDate":"2023-10-12"},{"lineNumber":28,"author":{"gitId":"larrywang0701"},"content":"            contactId \u003d Integer.parseInt(argMultimap.getValue(PREFIX_PERSON_ID).get());","lastModifiedDate":"2023-10-12"},{"lineNumber":29,"author":{"gitId":"larrywang0701"},"content":"            eventId \u003d Integer.parseInt(argMultimap.getValue(PREFIX_EVENT_ID).get());","lastModifiedDate":"2023-10-12"},{"lineNumber":30,"author":{"gitId":"larrywang0701"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-10-12"},{"lineNumber":31,"author":{"gitId":"larrywang0701"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_INTEGER_ARGUMENT, e.getMessage()));","lastModifiedDate":"2023-10-12"},{"lineNumber":32,"author":{"gitId":"larrywang0701"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":33,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":34,"author":{"gitId":"larrywang0701"},"content":"        return new DeleteEventCommand(contactId, eventId);","lastModifiedDate":"2023-10-12"},{"lineNumber":35,"author":{"gitId":"larrywang0701"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":36,"author":{"gitId":"larrywang0701"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"larrywang0701":36}},{"path":"src/main/java/seedu/address/logic/parser/DeletePersonCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"larrywang0701"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"larrywang0701"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"larrywang0701"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"larrywang0701"},"content":"import seedu.address.logic.commands.DeletePersonCommand;","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"larrywang0701"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"larrywang0701"},"content":"/**","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"larrywang0701"},"content":" * Parses input arguments and creates a new DeletePersonCommand object","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"larrywang0701"},"content":" */","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"larrywang0701"},"content":"public class DeletePersonCommandParser implements Parser\u003cDeletePersonCommand\u003e {","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"larrywang0701"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"larrywang0701"},"content":"     * Parses the given {@code String} of arguments in the context of the DeletePersonCommand","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"larrywang0701"},"content":"     * and returns a DeletePersonCommand object for execution.","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"larrywang0701"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"larrywang0701"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"larrywang0701"},"content":"    public DeletePersonCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-12"},{"lineNumber":20,"author":{"gitId":"larrywang0701"},"content":"        try {","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"larrywang0701"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2023-10-12"},{"lineNumber":22,"author":{"gitId":"larrywang0701"},"content":"            return new DeletePersonCommand(index);","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"larrywang0701"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-10-12"},{"lineNumber":24,"author":{"gitId":"larrywang0701"},"content":"            throw new ParseException(","lastModifiedDate":"2023-10-12"},{"lineNumber":25,"author":{"gitId":"larrywang0701"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeletePersonCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"larrywang0701"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":27,"author":{"gitId":"larrywang0701"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":28,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":29,"author":{"gitId":"larrywang0701"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"larrywang0701":29}},{"path":"src/main/java/seedu/address/logic/parser/ListCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"larrywang0701"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"larrywang0701"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"larrywang0701"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"larrywang0701"},"content":"import seedu.address.logic.commands.ListEventCommand;","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"larrywang0701"},"content":"import seedu.address.logic.commands.ListPersonCommand;","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"larrywang0701"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"larrywang0701"},"content":"/**","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"larrywang0701"},"content":" * The parser for all secondary {@code list} commands","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"larrywang0701"},"content":" */","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"larrywang0701"},"content":"public class ListCommandParser implements Parser\u003cListCommand\u003e {","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"larrywang0701"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"larrywang0701"},"content":"    public ListCommand parse(String userInput) throws ParseException {","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"larrywang0701"},"content":"        String secondaryCommandWord \u003d SecondaryCommandSelector.getSecondaryCommandWord(userInput);","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"larrywang0701"},"content":"        String args \u003d SecondaryCommandSelector.getArguments(secondaryCommandWord, userInput);","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"larrywang0701"},"content":"        switch (secondaryCommandWord) {","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"larrywang0701"},"content":"        case ListPersonCommand.SECONDARY_COMMAND_WORD:","lastModifiedDate":"2023-10-12"},{"lineNumber":20,"author":{"gitId":"larrywang0701"},"content":"            return new ListPersonCommand();","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"larrywang0701"},"content":"        case ListEventCommand.SECONDARY_COMMAND_WORD:","lastModifiedDate":"2023-10-12"},{"lineNumber":22,"author":{"gitId":"larrywang0701"},"content":"            return new ListEventCommand();","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"larrywang0701"},"content":"        default:","lastModifiedDate":"2023-10-12"},{"lineNumber":24,"author":{"gitId":"larrywang0701"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2023-10-12"},{"lineNumber":25,"author":{"gitId":"larrywang0701"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"larrywang0701"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":27,"author":{"gitId":"larrywang0701"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"larrywang0701":27}},{"path":"src/main/java/seedu/address/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"larrywang0701"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-02-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-02-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-02-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-02-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-02-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * Parses a {@code String address} into an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code address} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public static Address parseAddress(String address) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-30"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        String trimmedAddress \u003d address.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(trimmedAddress)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            throw new ParseException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return new Address(trimmedAddress);","lastModifiedDate":"2017-05-30"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-30"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2017-05-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public static Tag parseTag(String tag) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2017-05-30"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        return new Tag(trimmedTag);","lastModifiedDate":"2017-05-30"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2017-03-07"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2017-05-15"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2017-02-11"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2017-02-11"},{"lineNumber":121,"author":{"gitId":"-"},"content":"            tagSet.add(parseTag(tagName));","lastModifiedDate":"2017-05-30"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        return tagSet;","lastModifiedDate":"2017-03-07"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":125,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":126,"author":{"gitId":"larrywang0701"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":127,"author":{"gitId":"larrywang0701"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values","lastModifiedDate":"2023-10-12"},{"lineNumber":128,"author":{"gitId":"larrywang0701"},"content":"     * in the given","lastModifiedDate":"2023-10-12"},{"lineNumber":129,"author":{"gitId":"larrywang0701"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2023-10-12"},{"lineNumber":130,"author":{"gitId":"larrywang0701"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":131,"author":{"gitId":"larrywang0701"},"content":"    public static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2023-10-12"},{"lineNumber":132,"author":{"gitId":"larrywang0701"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2023-10-12"},{"lineNumber":133,"author":{"gitId":"larrywang0701"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":134,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":135,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"larrywang0701":11,"-":124}},{"path":"src/main/java/seedu/address/logic/parser/SecondaryCommandSelector.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"larrywang0701"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"larrywang0701"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"larrywang0701"},"content":"/**","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"larrywang0701"},"content":" * Helper methods for parsing secondary commands","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"larrywang0701"},"content":" */","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"larrywang0701"},"content":"public abstract class SecondaryCommandSelector {","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"larrywang0701"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"larrywang0701"},"content":"     * Get the secondary command word. For example, the command word {@code event} in the comman {@code add event ...}","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"larrywang0701"},"content":"     * @param str The command arguments after the primary command word","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"larrywang0701"},"content":"     * @return The secondary command word","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"larrywang0701"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"larrywang0701"},"content":"    public static String getSecondaryCommandWord(String str) throws ParseException {","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"larrywang0701"},"content":"        try {","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"larrywang0701"},"content":"            return str.split(\" \")[1];","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"larrywang0701"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"larrywang0701"},"content":"            throw new ParseException(\"Can not get secondary command\");","lastModifiedDate":"2023-10-12"},{"lineNumber":20,"author":{"gitId":"larrywang0701"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":22,"author":{"gitId":"larrywang0701"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":24,"author":{"gitId":"larrywang0701"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":25,"author":{"gitId":"larrywang0701"},"content":"     * Get the arguments after secondary command word","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"larrywang0701"},"content":"     * param str The command arguments after the primary command word","lastModifiedDate":"2023-10-12"},{"lineNumber":27,"author":{"gitId":"larrywang0701"},"content":"     * @return The arguments after secondary command word","lastModifiedDate":"2023-10-12"},{"lineNumber":28,"author":{"gitId":"larrywang0701"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":29,"author":{"gitId":"larrywang0701"},"content":"    public static String getArguments(String secondaryCommandWord, String str) {","lastModifiedDate":"2023-10-12"},{"lineNumber":30,"author":{"gitId":"larrywang0701"},"content":"        return str.replaceFirst(secondaryCommandWord, \"\");","lastModifiedDate":"2023-10-12"},{"lineNumber":31,"author":{"gitId":"larrywang0701"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":32,"author":{"gitId":"larrywang0701"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"larrywang0701":32}},{"path":"src/main/java/seedu/address/model/AddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.UniquePersonList;","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Wraps all data at the address-book level","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Duplicates are not allowed (by .isSamePerson comparison)","lastModifiedDate":"2018-04-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class AddressBook implements ReadOnlyAddressBook {","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final UniquePersonList persons;","lastModifiedDate":"2016-08-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2019-05-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2016-10-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2016-10-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *   among constructors.","lastModifiedDate":"2016-10-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    {","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        persons \u003d new UniquePersonList();","lastModifiedDate":"2016-08-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public AddressBook() {}","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Creates an AddressBook using the Persons in the {@code toBeCopied}","lastModifiedDate":"2018-03-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public AddressBook(ReadOnlyAddressBook toBeCopied) {","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2016-12-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2016-12-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    //// list overwrite operations","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Replaces the contents of the person list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        this.persons.setPersons(persons);","lastModifiedDate":"2016-10-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code AddressBook} with {@code newData}.","lastModifiedDate":"2017-08-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyAddressBook newData) {","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        requireNonNull(newData);","lastModifiedDate":"2017-05-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        setPersons(newData.getPersonList());","lastModifiedDate":"2018-03-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    //// person-level operations","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return persons.contains(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * Adds a person to the address book.","lastModifiedDate":"2016-09-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * The person must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void addPerson(Person p) {","lastModifiedDate":"2018-08-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        persons.add(p);","lastModifiedDate":"2018-03-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2018-01-10"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        requireNonNull(editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        persons.setPerson(target, editedPerson);","lastModifiedDate":"2018-03-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * Removes {@code key} from this {@code AddressBook}.","lastModifiedDate":"2017-08-16"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void removePerson(Person key) {","lastModifiedDate":"2018-08-07"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        persons.remove(key);","lastModifiedDate":"2018-02-28"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"larrywang0701"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":98,"author":{"gitId":"larrywang0701"},"content":"    public String eventListToString() {","lastModifiedDate":"2023-10-13"},{"lineNumber":99,"author":{"gitId":"larrywang0701"},"content":"        StringBuilder str \u003d new StringBuilder();","lastModifiedDate":"2023-10-13"},{"lineNumber":100,"author":{"gitId":"larrywang0701"},"content":"        persons.forEach(","lastModifiedDate":"2023-10-13"},{"lineNumber":101,"author":{"gitId":"larrywang0701"},"content":"                person -\u003e person.getEvents().forEach(","lastModifiedDate":"2023-10-13"},{"lineNumber":102,"author":{"gitId":"larrywang0701"},"content":"                        event -\u003e str.append(\"[\").append(","lastModifiedDate":"2023-10-13"},{"lineNumber":103,"author":{"gitId":"larrywang0701"},"content":"                                        person.getName().toString()).append(\"] \")","lastModifiedDate":"2023-10-13"},{"lineNumber":104,"author":{"gitId":"larrywang0701"},"content":"                                .append(event.getUiText()).append(\"\\n\")","lastModifiedDate":"2023-10-13"},{"lineNumber":105,"author":{"gitId":"larrywang0701"},"content":"                )","lastModifiedDate":"2023-10-13"},{"lineNumber":106,"author":{"gitId":"larrywang0701"},"content":"        );","lastModifiedDate":"2023-10-13"},{"lineNumber":107,"author":{"gitId":"larrywang0701"},"content":"        return str.toString();","lastModifiedDate":"2023-10-13"},{"lineNumber":108,"author":{"gitId":"larrywang0701"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":109,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    //// util methods","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"                .add(\"persons\", persons)","lastModifiedDate":"2019-02-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        return persons.asUnmodifiableObservableList();","lastModifiedDate":"2018-04-05"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-01"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-01"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        if (!(other instanceof AddressBook)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        AddressBook otherAddressBook \u003d (AddressBook) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        return persons.equals(otherAddressBook.persons);","lastModifiedDate":"2023-07-13"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        return persons.hashCode();","lastModifiedDate":"2018-03-29"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":143,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"larrywang0701":13,"-":130}},{"path":"src/main/java/seedu/address/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2017-08-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    Predicate\u003cPerson\u003e PREDICATE_SHOW_ALL_PERSONS \u003d unused -\u003e true;","lastModifiedDate":"2018-01-10"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    void setAddressBookFilePath(Path addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Replaces address book data with the data in {@code addressBook}.","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    void setAddressBook(ReadOnlyAddressBook addressBook);","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /** Returns the AddressBook */","lastModifiedDate":"2016-09-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    boolean hasPerson(Person person);","lastModifiedDate":"2018-08-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Deletes the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * The person must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    void deletePerson(Person target);","lastModifiedDate":"2018-08-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * Adds the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * {@code person} must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    void addPerson(Person person);","lastModifiedDate":"2018-08-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    void setPerson(Person target, Person editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered person list */","lastModifiedDate":"2017-09-01"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * Updates the filter of the filtered person list to filter by the given {@code predicate}.","lastModifiedDate":"2017-08-05"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate);","lastModifiedDate":"2018-01-10"},{"lineNumber":87,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":88,"author":{"gitId":"larrywang0701"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":89,"author":{"gitId":"larrywang0701"},"content":"     * Find a person by index.","lastModifiedDate":"2023-10-12"},{"lineNumber":90,"author":{"gitId":"larrywang0701"},"content":"     * If the index is invalid, returns null.","lastModifiedDate":"2023-10-12"},{"lineNumber":91,"author":{"gitId":"larrywang0701"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":92,"author":{"gitId":"larrywang0701"},"content":"    Person findPersonByIndex(int index);","lastModifiedDate":"2023-10-12"},{"lineNumber":93,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":94,"author":{"gitId":"larrywang0701"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":95,"author":{"gitId":"larrywang0701"},"content":"     * Find a person by the user-friendly ID displayed in the person card on the UI.","lastModifiedDate":"2023-10-12"},{"lineNumber":96,"author":{"gitId":"larrywang0701"},"content":"     * If the ID is invalid, returns null.","lastModifiedDate":"2023-10-12"},{"lineNumber":97,"author":{"gitId":"larrywang0701"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":98,"author":{"gitId":"larrywang0701"},"content":"    Person findPersonByUserFriendlyId(int id);","lastModifiedDate":"2023-10-12"},{"lineNumber":99,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"larrywang0701":12,"-":87}},{"path":"src/main/java/seedu/address/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"larrywang0701"},"content":"import java.util.List;","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Represents the in-memory model of the address book data.","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final FilteredList\u003cPerson\u003e filteredPersons;","lastModifiedDate":"2018-01-10"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Initializes a ModelManager with the given addressBook and userPrefs.","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public ModelManager(ReadOnlyAddressBook addressBook, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        requireAllNonNull(addressBook, userPrefs);","lastModifiedDate":"2017-05-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        logger.fine(\"Initializing with address book: \" + addressBook + \" and user prefs \" + userPrefs);","lastModifiedDate":"2016-12-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this.addressBook \u003d new AddressBook(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        filteredPersons \u003d new FilteredList\u003c\u003e(this.addressBook.getPersonList());","lastModifiedDate":"2019-01-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        this(new AddressBook(), new UserPrefs());","lastModifiedDate":"2016-09-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return userPrefs.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void setAddressBook(ReadOnlyAddressBook addressBook) {","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        this.addressBook.resetData(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2016-09-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        return addressBook.hasPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public void deletePerson(Person target) {","lastModifiedDate":"2018-08-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        addressBook.removePerson(target);","lastModifiedDate":"2019-01-25"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void addPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        addressBook.addPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2017-06-07"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        addressBook.setPerson(target, editedPerson);","lastModifiedDate":"2019-01-25"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Person List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-10-12"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the list of {@code Person} backed by the internal list of","lastModifiedDate":"2018-01-10"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2018-06-11"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        return filteredPersons;","lastModifiedDate":"2018-12-09"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        filteredPersons.setPredicate(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":132,"author":{"gitId":"larrywang0701"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":133,"author":{"gitId":"larrywang0701"},"content":"    public Person findPersonByIndex(int index) {","lastModifiedDate":"2023-10-12"},{"lineNumber":134,"author":{"gitId":"larrywang0701"},"content":"        List\u003cPerson\u003e personList \u003d this.addressBook.getPersonList();","lastModifiedDate":"2023-10-12"},{"lineNumber":135,"author":{"gitId":"larrywang0701"},"content":"        if (index \u003c 0 || index \u003e\u003d personList.size()) {","lastModifiedDate":"2023-10-12"},{"lineNumber":136,"author":{"gitId":"larrywang0701"},"content":"            return null;","lastModifiedDate":"2023-10-12"},{"lineNumber":137,"author":{"gitId":"larrywang0701"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":138,"author":{"gitId":"larrywang0701"},"content":"        return personList.get(index);","lastModifiedDate":"2023-10-12"},{"lineNumber":139,"author":{"gitId":"larrywang0701"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":140,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":141,"author":{"gitId":"larrywang0701"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":142,"author":{"gitId":"larrywang0701"},"content":"    public Person findPersonByUserFriendlyId(int id) {","lastModifiedDate":"2023-10-12"},{"lineNumber":143,"author":{"gitId":"larrywang0701"},"content":"        return this.findPersonByIndex(id - 1);","lastModifiedDate":"2023-10-12"},{"lineNumber":144,"author":{"gitId":"larrywang0701"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":145,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-07-13"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":149,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        if (!(other instanceof ModelManager)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        ModelManager otherModelManager \u003d (ModelManager) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        return addressBook.equals(otherModelManager.addressBook)","lastModifiedDate":"2023-07-13"},{"lineNumber":159,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(otherModelManager.userPrefs)","lastModifiedDate":"2023-07-13"},{"lineNumber":160,"author":{"gitId":"-"},"content":"                \u0026\u0026 filteredPersons.equals(otherModelManager.filteredPersons);","lastModifiedDate":"2023-07-13"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":163,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"larrywang0701":15,"-":148}},{"path":"src/main/java/seedu/address/model/ReadOnlyAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Unmodifiable view of an address book","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public interface ReadOnlyAddressBook {","lastModifiedDate":"2019-01-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the persons list.","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * This list will not contain any duplicate persons.","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"larrywang0701"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"larrywang0701"},"content":"     * Convert the event list to a human-readable string","lastModifiedDate":"2023-10-13"},{"lineNumber":19,"author":{"gitId":"larrywang0701"},"content":"     * @return The event list as string","lastModifiedDate":"2023-10-13"},{"lineNumber":20,"author":{"gitId":"larrywang0701"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":21,"author":{"gitId":"larrywang0701"},"content":"    String eventListToString();","lastModifiedDate":"2023-10-13"},{"lineNumber":22,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"larrywang0701":6,"-":17}},{"path":"src/main/java/seedu/address/model/event/Event.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zekone"},"content":"package seedu.address.model.event;","lastModifiedDate":"2023-10-10"},{"lineNumber":2,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":3,"author":{"gitId":"larrywang0701"},"content":"/**","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"larrywang0701"},"content":" * The class for holding an Event","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"larrywang0701"},"content":" */","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"zekone"},"content":"public class Event {","lastModifiedDate":"2023-10-10"},{"lineNumber":7,"author":{"gitId":"larrywang0701"},"content":"    private final EventTime start;","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"larrywang0701"},"content":"    private final EventTime end;","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"larrywang0701"},"content":"    private final String name;","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":11,"author":{"gitId":"larrywang0701"},"content":"    private final EventLocation location;","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"larrywang0701"},"content":"    private final EventInformation information;","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"larrywang0701"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"larrywang0701"},"content":"     * Constructor for the `Event` class","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"larrywang0701"},"content":"     * @param name The event name","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"larrywang0701"},"content":"     * @param start The start time of the event","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"larrywang0701"},"content":"     * @param end The end time of the event","lastModifiedDate":"2023-10-12"},{"lineNumber":20,"author":{"gitId":"larrywang0701"},"content":"     * @param locationStr The location of the event","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"larrywang0701"},"content":"     * @param informationStr The information of the event","lastModifiedDate":"2023-10-12"},{"lineNumber":22,"author":{"gitId":"larrywang0701"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"larrywang0701"},"content":"    public Event(String name, String start, String end, String locationStr, String informationStr) {","lastModifiedDate":"2023-10-12"},{"lineNumber":24,"author":{"gitId":"zekone"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-10-10"},{"lineNumber":25,"author":{"gitId":"larrywang0701"},"content":"        this.start \u003d EventTime.fromString(start);","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"larrywang0701"},"content":"        this.end \u003d EventTime.fromString(end);","lastModifiedDate":"2023-10-12"},{"lineNumber":27,"author":{"gitId":"larrywang0701"},"content":"        this.location \u003d EventLocation.fromString(locationStr);","lastModifiedDate":"2023-10-12"},{"lineNumber":28,"author":{"gitId":"larrywang0701"},"content":"        this.information \u003d EventInformation.fromString(informationStr);","lastModifiedDate":"2023-10-12"},{"lineNumber":29,"author":{"gitId":"zekone"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":30,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":31,"author":{"gitId":"larrywang0701"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":32,"author":{"gitId":"larrywang0701"},"content":"     * Get the name of the event","lastModifiedDate":"2023-10-12"},{"lineNumber":33,"author":{"gitId":"larrywang0701"},"content":"     * @return The name of the event","lastModifiedDate":"2023-10-12"},{"lineNumber":34,"author":{"gitId":"larrywang0701"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":35,"author":{"gitId":"zekone"},"content":"    public String getName() {","lastModifiedDate":"2023-10-10"},{"lineNumber":36,"author":{"gitId":"zekone"},"content":"        return name;","lastModifiedDate":"2023-10-10"},{"lineNumber":37,"author":{"gitId":"zekone"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":38,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":39,"author":{"gitId":"larrywang0701"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":40,"author":{"gitId":"larrywang0701"},"content":"     * Get the start time of the event, represented in string","lastModifiedDate":"2023-10-12"},{"lineNumber":41,"author":{"gitId":"larrywang0701"},"content":"     * @return The start time in string","lastModifiedDate":"2023-10-12"},{"lineNumber":42,"author":{"gitId":"larrywang0701"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":43,"author":{"gitId":"zekone"},"content":"    public String getStartString() {","lastModifiedDate":"2023-10-10"},{"lineNumber":44,"author":{"gitId":"zekone"},"content":"        // Temporary, can use Util class instead","lastModifiedDate":"2023-10-10"},{"lineNumber":45,"author":{"gitId":"larrywang0701"},"content":"        return this.start.toString();","lastModifiedDate":"2023-10-12"},{"lineNumber":46,"author":{"gitId":"zekone"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":47,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":48,"author":{"gitId":"larrywang0701"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":49,"author":{"gitId":"larrywang0701"},"content":"     * Get the end time of the event, represented in string","lastModifiedDate":"2023-10-12"},{"lineNumber":50,"author":{"gitId":"larrywang0701"},"content":"     * @return The end time in string","lastModifiedDate":"2023-10-12"},{"lineNumber":51,"author":{"gitId":"larrywang0701"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":52,"author":{"gitId":"zekone"},"content":"    public String getEndString() {","lastModifiedDate":"2023-10-10"},{"lineNumber":53,"author":{"gitId":"larrywang0701"},"content":"        return this.end.toString();","lastModifiedDate":"2023-10-12"},{"lineNumber":54,"author":{"gitId":"larrywang0701"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":55,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":56,"author":{"gitId":"larrywang0701"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":57,"author":{"gitId":"larrywang0701"},"content":"     * Get the location of the event, represented in string","lastModifiedDate":"2023-10-12"},{"lineNumber":58,"author":{"gitId":"larrywang0701"},"content":"     * @return The location in string","lastModifiedDate":"2023-10-12"},{"lineNumber":59,"author":{"gitId":"larrywang0701"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":60,"author":{"gitId":"larrywang0701"},"content":"    public String getLocationStr() {","lastModifiedDate":"2023-10-12"},{"lineNumber":61,"author":{"gitId":"larrywang0701"},"content":"        return this.location.toString();","lastModifiedDate":"2023-10-12"},{"lineNumber":62,"author":{"gitId":"larrywang0701"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":63,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":64,"author":{"gitId":"larrywang0701"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":65,"author":{"gitId":"larrywang0701"},"content":"     * Get the information of the event, represented in string","lastModifiedDate":"2023-10-12"},{"lineNumber":66,"author":{"gitId":"larrywang0701"},"content":"     * @return The information in string","lastModifiedDate":"2023-10-12"},{"lineNumber":67,"author":{"gitId":"larrywang0701"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":68,"author":{"gitId":"larrywang0701"},"content":"    public String getInformationStr() {","lastModifiedDate":"2023-10-12"},{"lineNumber":69,"author":{"gitId":"larrywang0701"},"content":"        return this.information.toString();","lastModifiedDate":"2023-10-12"},{"lineNumber":70,"author":{"gitId":"larrywang0701"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":71,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":72,"author":{"gitId":"larrywang0701"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":73,"author":{"gitId":"larrywang0701"},"content":"     * Get a string that can be used to represent this event on GUI","lastModifiedDate":"2023-10-12"},{"lineNumber":74,"author":{"gitId":"larrywang0701"},"content":"     * @return The information in string","lastModifiedDate":"2023-10-12"},{"lineNumber":75,"author":{"gitId":"larrywang0701"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":76,"author":{"gitId":"larrywang0701"},"content":"    public String getUiText() {","lastModifiedDate":"2023-10-12"},{"lineNumber":77,"author":{"gitId":"larrywang0701"},"content":"        String result \u003d this.getName() + \" ( Starts at: \" + this.start;","lastModifiedDate":"2023-10-12"},{"lineNumber":78,"author":{"gitId":"larrywang0701"},"content":"        if (!this.end.toString().isEmpty()) {","lastModifiedDate":"2023-10-12"},{"lineNumber":79,"author":{"gitId":"larrywang0701"},"content":"            result +\u003d \", Ends at: \" + this.end;","lastModifiedDate":"2023-10-12"},{"lineNumber":80,"author":{"gitId":"larrywang0701"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":81,"author":{"gitId":"larrywang0701"},"content":"        if (!this.location.toString().isEmpty()) {","lastModifiedDate":"2023-10-12"},{"lineNumber":82,"author":{"gitId":"larrywang0701"},"content":"            result +\u003d \", Location: \" + this.location;","lastModifiedDate":"2023-10-12"},{"lineNumber":83,"author":{"gitId":"larrywang0701"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":84,"author":{"gitId":"larrywang0701"},"content":"        if (!this.information.toString().isEmpty()) {","lastModifiedDate":"2023-10-12"},{"lineNumber":85,"author":{"gitId":"larrywang0701"},"content":"            result +\u003d \", Information: \" + this.information;","lastModifiedDate":"2023-10-12"},{"lineNumber":86,"author":{"gitId":"larrywang0701"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":87,"author":{"gitId":"larrywang0701"},"content":"        result +\u003d \" )\";","lastModifiedDate":"2023-10-12"},{"lineNumber":88,"author":{"gitId":"larrywang0701"},"content":"        return result;","lastModifiedDate":"2023-10-12"},{"lineNumber":89,"author":{"gitId":"zekone"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":90,"author":{"gitId":"zekone"},"content":"}","lastModifiedDate":"2023-10-10"}],"authorContributionMap":{"larrywang0701":72,"zekone":18}},{"path":"src/main/java/seedu/address/model/event/EventInformation.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"larrywang0701"},"content":"package seedu.address.model.event;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"larrywang0701"},"content":"/**","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"larrywang0701"},"content":" * The class for holding the \"information\" part for an Event","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"larrywang0701"},"content":" */","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"larrywang0701"},"content":"public class EventInformation {","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"larrywang0701"},"content":"    private final String information;","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"larrywang0701"},"content":"    private EventInformation() {","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"larrywang0701"},"content":"        this.information \u003d \"\";","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"larrywang0701"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"larrywang0701"},"content":"    private EventInformation(String information) {","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"larrywang0701"},"content":"        this.information \u003d information;","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"larrywang0701"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"larrywang0701"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"larrywang0701"},"content":"     * Construct an {@code EventInformation} object from {@code String}","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"larrywang0701"},"content":"     * @param information The information in {@code String}","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"larrywang0701"},"content":"     * @return The {@code EventInformation} object","lastModifiedDate":"2023-10-12"},{"lineNumber":20,"author":{"gitId":"larrywang0701"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"larrywang0701"},"content":"    public static EventInformation fromString(String information) {","lastModifiedDate":"2023-10-12"},{"lineNumber":22,"author":{"gitId":"larrywang0701"},"content":"        return new EventInformation(information);","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"larrywang0701"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":24,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":25,"author":{"gitId":"larrywang0701"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"larrywang0701"},"content":"     * Get the String representation of this {@code EventInformation} object","lastModifiedDate":"2023-10-12"},{"lineNumber":27,"author":{"gitId":"larrywang0701"},"content":"     * @return The String representation of this {@code EventInformation} object","lastModifiedDate":"2023-10-12"},{"lineNumber":28,"author":{"gitId":"larrywang0701"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":29,"author":{"gitId":"larrywang0701"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":30,"author":{"gitId":"larrywang0701"},"content":"    public String toString() {","lastModifiedDate":"2023-10-12"},{"lineNumber":31,"author":{"gitId":"larrywang0701"},"content":"        return this.information;","lastModifiedDate":"2023-10-12"},{"lineNumber":32,"author":{"gitId":"larrywang0701"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":33,"author":{"gitId":"larrywang0701"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"larrywang0701":33}},{"path":"src/main/java/seedu/address/model/event/EventLocation.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"larrywang0701"},"content":"package seedu.address.model.event;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"larrywang0701"},"content":"/**","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"larrywang0701"},"content":" * The class for holding the \"location\" part for an Event","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"larrywang0701"},"content":" */","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"larrywang0701"},"content":"public class EventLocation {","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"larrywang0701"},"content":"    private final String location;","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"larrywang0701"},"content":"    private EventLocation() {","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"larrywang0701"},"content":"        this.location \u003d \"unknown\";","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"larrywang0701"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"larrywang0701"},"content":"    private EventLocation(String location) {","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"larrywang0701"},"content":"        this.location \u003d location;","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"larrywang0701"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"larrywang0701"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"larrywang0701"},"content":"     * Construct an {@code EventLocation} object from {@code String}","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"larrywang0701"},"content":"     * @param location The location in String","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"larrywang0701"},"content":"     * @return The {@code EventLocation} object","lastModifiedDate":"2023-10-12"},{"lineNumber":20,"author":{"gitId":"larrywang0701"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"larrywang0701"},"content":"    public static EventLocation fromString(String location) {","lastModifiedDate":"2023-10-12"},{"lineNumber":22,"author":{"gitId":"larrywang0701"},"content":"        return new EventLocation(location);","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"larrywang0701"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":24,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":25,"author":{"gitId":"larrywang0701"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"larrywang0701"},"content":"     * Get the String representation of this {@code EventLocation} object","lastModifiedDate":"2023-10-12"},{"lineNumber":27,"author":{"gitId":"larrywang0701"},"content":"     * @return The String representation of this {@code EventLocation} object","lastModifiedDate":"2023-10-12"},{"lineNumber":28,"author":{"gitId":"larrywang0701"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":29,"author":{"gitId":"larrywang0701"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":30,"author":{"gitId":"larrywang0701"},"content":"    public String toString() {","lastModifiedDate":"2023-10-12"},{"lineNumber":31,"author":{"gitId":"larrywang0701"},"content":"        return this.location;","lastModifiedDate":"2023-10-12"},{"lineNumber":32,"author":{"gitId":"larrywang0701"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":33,"author":{"gitId":"larrywang0701"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"larrywang0701":33}},{"path":"src/main/java/seedu/address/model/event/EventTime.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"larrywang0701"},"content":"package seedu.address.model.event;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"larrywang0701"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"larrywang0701"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"larrywang0701"},"content":"import seedu.address.commons.util.DateTimeUtil;","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"larrywang0701"},"content":"/**","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"larrywang0701"},"content":" * The class for holding the \"start\" and \"end\" part for an Event","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"larrywang0701"},"content":" */","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"larrywang0701"},"content":"public class EventTime {","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"larrywang0701"},"content":"    private final LocalDateTime time;","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"larrywang0701"},"content":"    private EventTime() {","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"larrywang0701"},"content":"        this.time \u003d null;","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"larrywang0701"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"larrywang0701"},"content":"    private EventTime(String time) throws DateTimeParseException {","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"larrywang0701"},"content":"        this.time \u003d DateTimeUtil.parseString(time);","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"larrywang0701"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":20,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"larrywang0701"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":22,"author":{"gitId":"larrywang0701"},"content":"     * Construct an {@code EventTime} object from {@code String}","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"larrywang0701"},"content":"     * @param timeStr The time in {@code String}","lastModifiedDate":"2023-10-12"},{"lineNumber":24,"author":{"gitId":"larrywang0701"},"content":"     * @return The {@code EventTime} object","lastModifiedDate":"2023-10-12"},{"lineNumber":25,"author":{"gitId":"larrywang0701"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"larrywang0701"},"content":"    public static EventTime fromString(String timeStr) throws DateTimeParseException {","lastModifiedDate":"2023-10-12"},{"lineNumber":27,"author":{"gitId":"larrywang0701"},"content":"        return timeStr.isEmpty() ? new EventTime() : new EventTime(timeStr);","lastModifiedDate":"2023-10-12"},{"lineNumber":28,"author":{"gitId":"larrywang0701"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":29,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":30,"author":{"gitId":"larrywang0701"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":31,"author":{"gitId":"larrywang0701"},"content":"     * Get the String representation of this {@code EventTime} object","lastModifiedDate":"2023-10-12"},{"lineNumber":32,"author":{"gitId":"larrywang0701"},"content":"     * @return The String representation of this {@code EventTime} object, in the format {@code yyyy-MM-dd HH:mm:ss}","lastModifiedDate":"2023-10-12"},{"lineNumber":33,"author":{"gitId":"larrywang0701"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":34,"author":{"gitId":"larrywang0701"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":35,"author":{"gitId":"larrywang0701"},"content":"    public String toString() {","lastModifiedDate":"2023-10-12"},{"lineNumber":36,"author":{"gitId":"larrywang0701"},"content":"        return this.time !\u003d null ? DateTimeUtil.toFormattedString(this.time) : \"\";","lastModifiedDate":"2023-10-12"},{"lineNumber":37,"author":{"gitId":"larrywang0701"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":38,"author":{"gitId":"larrywang0701"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"larrywang0701":38}},{"path":"src/main/java/seedu/address/model/note/Note.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zekone"},"content":"package seedu.address.model.note;","lastModifiedDate":"2023-10-10"},{"lineNumber":2,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":3,"author":{"gitId":"larrywang0701"},"content":"/**","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"larrywang0701"},"content":" * The class for holding a Note","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"larrywang0701"},"content":" */","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"zekone"},"content":"public class Note {","lastModifiedDate":"2023-10-10"},{"lineNumber":7,"author":{"gitId":"zekone"},"content":"    private final String title;","lastModifiedDate":"2023-10-10"},{"lineNumber":8,"author":{"gitId":"zekone"},"content":"    private final String body;","lastModifiedDate":"2023-10-10"},{"lineNumber":9,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":10,"author":{"gitId":"larrywang0701"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"larrywang0701"},"content":"     * The constructor for the Note class","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"larrywang0701"},"content":"     * @param title The title of the note","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"larrywang0701"},"content":"     * @param body The body of the note","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"larrywang0701"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"zekone"},"content":"    public Note(String title, String body) {","lastModifiedDate":"2023-10-10"},{"lineNumber":16,"author":{"gitId":"zekone"},"content":"        this.title \u003d title;","lastModifiedDate":"2023-10-10"},{"lineNumber":17,"author":{"gitId":"zekone"},"content":"        this.body \u003d body;","lastModifiedDate":"2023-10-10"},{"lineNumber":18,"author":{"gitId":"zekone"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":19,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":20,"author":{"gitId":"zekone"},"content":"    public String getTitle() {","lastModifiedDate":"2023-10-10"},{"lineNumber":21,"author":{"gitId":"zekone"},"content":"        return title;","lastModifiedDate":"2023-10-10"},{"lineNumber":22,"author":{"gitId":"zekone"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":23,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":24,"author":{"gitId":"zekone"},"content":"    public String getBody() {","lastModifiedDate":"2023-10-10"},{"lineNumber":25,"author":{"gitId":"zekone"},"content":"        return body;","lastModifiedDate":"2023-10-10"},{"lineNumber":26,"author":{"gitId":"zekone"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":27,"author":{"gitId":"zekone"},"content":"}","lastModifiedDate":"2023-10-10"}],"authorContributionMap":{"larrywang0701":8,"zekone":19}},{"path":"src/main/java/seedu/address/model/person/Person.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"zekone"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-10"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-03-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-03-26"},{"lineNumber":8,"author":{"gitId":"zekone"},"content":"import java.util.List;","lastModifiedDate":"2023-10-10"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"larrywang0701"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"larrywang0701"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":15,"author":{"gitId":"zekone"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2023-10-10"},{"lineNumber":16,"author":{"gitId":"zekone"},"content":"import seedu.address.model.note.Note;","lastModifiedDate":"2023-10-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * Represents a Person in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"zekone"},"content":" * Guarantees: details are present and not null, field values are validated,","lastModifiedDate":"2023-10-10"},{"lineNumber":22,"author":{"gitId":"zekone"},"content":" * immutable.","lastModifiedDate":"2023-10-10"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class Person {","lastModifiedDate":"2018-01-10"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    // Data fields","lastModifiedDate":"2018-04-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private final Address address;","lastModifiedDate":"2018-04-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":34,"author":{"gitId":"zekone"},"content":"    private final List\u003cNote\u003e notes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-10"},{"lineNumber":35,"author":{"gitId":"larrywang0701"},"content":"    private final ObservableList\u003cEvent\u003e events \u003d FXCollections.observableArrayList();","lastModifiedDate":"2023-10-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"zekone"},"content":"    public Person(Name name, Phone phone, Email email, Address address, Set\u003cTag\u003e tags, List\u003cNote\u003e notes,","lastModifiedDate":"2023-10-10"},{"lineNumber":41,"author":{"gitId":"zekone"},"content":"            List\u003cEvent\u003e events) {","lastModifiedDate":"2023-10-10"},{"lineNumber":42,"author":{"gitId":"zekone"},"content":"        requireAllNonNull(name, phone, email, address, tags, notes, events);","lastModifiedDate":"2023-10-10"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2017-12-20"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2017-12-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2017-12-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":48,"author":{"gitId":"zekone"},"content":"        this.notes.addAll(notes);","lastModifiedDate":"2023-10-10"},{"lineNumber":49,"author":{"gitId":"zekone"},"content":"        this.events.addAll(events);","lastModifiedDate":"2023-10-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public Name getName() {","lastModifiedDate":"2017-07-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2017-12-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public Phone getPhone() {","lastModifiedDate":"2017-07-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public Email getEmail() {","lastModifiedDate":"2017-07-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return email;","lastModifiedDate":"2017-12-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public Address getAddress() {","lastModifiedDate":"2017-07-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return address;","lastModifiedDate":"2017-12-20"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-07"},{"lineNumber":69,"author":{"gitId":"zekone"},"content":"     * Returns an immutable tag set, which throws","lastModifiedDate":"2023-10-10"},{"lineNumber":70,"author":{"gitId":"zekone"},"content":"     * {@code UnsupportedOperationException}","lastModifiedDate":"2023-10-10"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * if modification is attempted.","lastModifiedDate":"2017-03-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":77,"author":{"gitId":"zekone"},"content":"    /**","lastModifiedDate":"2023-10-10"},{"lineNumber":78,"author":{"gitId":"zekone"},"content":"     * Returns an immutable notes, which throws","lastModifiedDate":"2023-10-10"},{"lineNumber":79,"author":{"gitId":"zekone"},"content":"     * {@code UnsupportedOperationException}","lastModifiedDate":"2023-10-10"},{"lineNumber":80,"author":{"gitId":"zekone"},"content":"     * if modification is attempted.","lastModifiedDate":"2023-10-10"},{"lineNumber":81,"author":{"gitId":"zekone"},"content":"     */","lastModifiedDate":"2023-10-10"},{"lineNumber":82,"author":{"gitId":"zekone"},"content":"    public List\u003cNote\u003e getNotes() {","lastModifiedDate":"2023-10-10"},{"lineNumber":83,"author":{"gitId":"zekone"},"content":"        return Collections.unmodifiableList(notes);","lastModifiedDate":"2023-10-10"},{"lineNumber":84,"author":{"gitId":"zekone"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":85,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":86,"author":{"gitId":"zekone"},"content":"    /**","lastModifiedDate":"2023-10-10"},{"lineNumber":87,"author":{"gitId":"zekone"},"content":"     * Returns an immutable events, which throws","lastModifiedDate":"2023-10-10"},{"lineNumber":88,"author":{"gitId":"zekone"},"content":"     * {@code UnsupportedOperationException}","lastModifiedDate":"2023-10-10"},{"lineNumber":89,"author":{"gitId":"zekone"},"content":"     * if modification is attempted.","lastModifiedDate":"2023-10-10"},{"lineNumber":90,"author":{"gitId":"zekone"},"content":"     */","lastModifiedDate":"2023-10-10"},{"lineNumber":91,"author":{"gitId":"larrywang0701"},"content":"    public ObservableList\u003cEvent\u003e getEvents() {","lastModifiedDate":"2023-10-13"},{"lineNumber":92,"author":{"gitId":"larrywang0701"},"content":"        return FXCollections.unmodifiableObservableList(events);","lastModifiedDate":"2023-10-13"},{"lineNumber":93,"author":{"gitId":"zekone"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":94,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":95,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":96,"author":{"gitId":"larrywang0701"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":97,"author":{"gitId":"larrywang0701"},"content":"     * Remove an event by its user-friendly id","lastModifiedDate":"2023-10-12"},{"lineNumber":98,"author":{"gitId":"larrywang0701"},"content":"     * @param id The id of the event you want to remove","lastModifiedDate":"2023-10-12"},{"lineNumber":99,"author":{"gitId":"larrywang0701"},"content":"     * @return {@code true} if the operation is successful and {@code false} if the event with this name does not exist","lastModifiedDate":"2023-10-12"},{"lineNumber":100,"author":{"gitId":"larrywang0701"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":101,"author":{"gitId":"larrywang0701"},"content":"    public boolean removeEventByUserFriendlyId(int id) {","lastModifiedDate":"2023-10-12"},{"lineNumber":102,"author":{"gitId":"larrywang0701"},"content":"        return this.removeEventByIndex(id - 1);","lastModifiedDate":"2023-10-12"},{"lineNumber":103,"author":{"gitId":"larrywang0701"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":104,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":105,"author":{"gitId":"larrywang0701"},"content":"    private boolean removeEventByIndex(int index) {","lastModifiedDate":"2023-10-12"},{"lineNumber":106,"author":{"gitId":"larrywang0701"},"content":"        if (index \u003c 0 || index \u003e\u003d this.events.size()) {","lastModifiedDate":"2023-10-12"},{"lineNumber":107,"author":{"gitId":"larrywang0701"},"content":"            return false;","lastModifiedDate":"2023-10-12"},{"lineNumber":108,"author":{"gitId":"larrywang0701"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":109,"author":{"gitId":"larrywang0701"},"content":"        this.events.remove(index);","lastModifiedDate":"2023-10-12"},{"lineNumber":110,"author":{"gitId":"larrywang0701"},"content":"        return true;","lastModifiedDate":"2023-10-12"},{"lineNumber":111,"author":{"gitId":"larrywang0701"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":112,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same name.","lastModifiedDate":"2020-12-18"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * This defines a weaker notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public boolean isSamePerson(Person otherPerson) {","lastModifiedDate":"2018-04-19"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        if (otherPerson \u003d\u003d this) {","lastModifiedDate":"2018-04-19"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        return otherPerson !\u003d null","lastModifiedDate":"2018-04-19"},{"lineNumber":123,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getName().equals(getName());","lastModifiedDate":"2020-12-18"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same identity and data fields.","lastModifiedDate":"2018-04-19"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * This defines a stronger notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        if (!(other instanceof Person)) {","lastModifiedDate":"2018-01-10"},{"lineNumber":138,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        Person otherPerson \u003d (Person) other;","lastModifiedDate":"2018-01-10"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        return name.equals(otherPerson.name)","lastModifiedDate":"2023-07-13"},{"lineNumber":143,"author":{"gitId":"-"},"content":"                \u0026\u0026 phone.equals(otherPerson.phone)","lastModifiedDate":"2023-07-13"},{"lineNumber":144,"author":{"gitId":"-"},"content":"                \u0026\u0026 email.equals(otherPerson.email)","lastModifiedDate":"2023-07-13"},{"lineNumber":145,"author":{"gitId":"-"},"content":"                \u0026\u0026 address.equals(otherPerson.address)","lastModifiedDate":"2023-07-13"},{"lineNumber":146,"author":{"gitId":"-"},"content":"                \u0026\u0026 tags.equals(otherPerson.tags);","lastModifiedDate":"2023-07-13"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2016-08-24"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        return Objects.hash(name, phone, email, address, tags);","lastModifiedDate":"2016-08-24"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"                .add(\"name\", name)","lastModifiedDate":"2019-02-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"                .add(\"phone\", phone)","lastModifiedDate":"2019-02-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"                .add(\"email\", email)","lastModifiedDate":"2019-02-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"                .add(\"address\", address)","lastModifiedDate":"2019-02-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"                .add(\"tags\", tags)","lastModifiedDate":"2019-02-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":166,"author":{"gitId":"larrywang0701"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":167,"author":{"gitId":"larrywang0701"},"content":"     * Add an event to this person","lastModifiedDate":"2023-10-12"},{"lineNumber":168,"author":{"gitId":"larrywang0701"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":169,"author":{"gitId":"larrywang0701"},"content":"    public void addEvent(Event event) {","lastModifiedDate":"2023-10-12"},{"lineNumber":170,"author":{"gitId":"larrywang0701"},"content":"        this.events.add(event);","lastModifiedDate":"2023-10-12"},{"lineNumber":171,"author":{"gitId":"larrywang0701"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":172,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":173,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"larrywang0701":30,"zekone":30,"-":113}},{"path":"src/main/java/seedu/address/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.util;","lastModifiedDate":"2016-12-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"larrywang0701"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"larrywang0701"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"zekone"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-10"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":12,"author":{"gitId":"zekone"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2023-10-10"},{"lineNumber":13,"author":{"gitId":"zekone"},"content":"import seedu.address.model.note.Note;","lastModifiedDate":"2023-10-10"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2016-12-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2016-12-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2016-12-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2016-12-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Contains utility methods for populating {@code AddressBook} with sample data.","lastModifiedDate":"2017-08-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static Person[] getSamplePersons() {","lastModifiedDate":"2016-12-20"},{"lineNumber":26,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":27,"author":{"gitId":"zekone"},"content":"        ArrayList\u003cNote\u003e sampleNotes \u003d new ArrayList\u003cNote\u003e();","lastModifiedDate":"2023-10-10"},{"lineNumber":28,"author":{"gitId":"zekone"},"content":"        sampleNotes.add(new Note(\"Hello\", \"Sample body\"));","lastModifiedDate":"2023-10-10"},{"lineNumber":29,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":30,"author":{"gitId":"zekone"},"content":"        ArrayList\u003cEvent\u003e sampleEvents \u003d new ArrayList\u003cEvent\u003e();","lastModifiedDate":"2023-10-10"},{"lineNumber":31,"author":{"gitId":"larrywang0701"},"content":"        sampleEvents.add(new Event(\"Sample event\", LocalDateTime.now()","lastModifiedDate":"2023-10-12"},{"lineNumber":32,"author":{"gitId":"larrywang0701"},"content":"                .format(DateTimeFormatter.ofPattern(\"HH:mm:ss\")),","lastModifiedDate":"2023-10-12"},{"lineNumber":33,"author":{"gitId":"larrywang0701"},"content":"                LocalDateTime.now().plusHours(1)","lastModifiedDate":"2023-10-12"},{"lineNumber":34,"author":{"gitId":"larrywang0701"},"content":"                        .format(DateTimeFormatter.ofPattern(\"HH:mm:ss\")), \"Some Location\",","lastModifiedDate":"2023-10-12"},{"lineNumber":35,"author":{"gitId":"larrywang0701"},"content":"                \"Some Information\"));","lastModifiedDate":"2023-10-12"},{"lineNumber":36,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return new Person[] {","lastModifiedDate":"2016-12-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Alex Yeoh\"), new Phone(\"87438807\"), new Email(\"alexyeoh@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                    new Address(\"Blk 30 Geylang Street 29, #06-40\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":40,"author":{"gitId":"zekone"},"content":"                    getTagSet(\"friends\"), sampleNotes, sampleEvents),","lastModifiedDate":"2023-10-10"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Bernice Yu\"), new Phone(\"99272758\"), new Email(\"berniceyu@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                    new Address(\"Blk 30 Lorong 3 Serangoon Gardens, #07-18\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":43,"author":{"gitId":"zekone"},"content":"                    getTagSet(\"colleagues\", \"friends\"), sampleNotes, sampleEvents),","lastModifiedDate":"2023-10-10"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Charlotte Oliveiro\"), new Phone(\"93210283\"), new Email(\"charlotte@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                    new Address(\"Blk 11 Ang Mo Kio Street 74, #11-04\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":46,"author":{"gitId":"zekone"},"content":"                    getTagSet(\"neighbours\"), sampleNotes, sampleEvents),","lastModifiedDate":"2023-10-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            new Person(new Name(\"David Li\"), new Phone(\"91031282\"), new Email(\"lidavid@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                    new Address(\"Blk 436 Serangoon Gardens Street 26, #16-43\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":49,"author":{"gitId":"zekone"},"content":"                    getTagSet(\"family\"), sampleNotes, sampleEvents),","lastModifiedDate":"2023-10-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Irfan Ibrahim\"), new Phone(\"92492021\"), new Email(\"irfan@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                    new Address(\"Blk 47 Tampines Street 20, #17-35\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":52,"author":{"gitId":"zekone"},"content":"                    getTagSet(\"classmates\"), sampleNotes, sampleEvents),","lastModifiedDate":"2023-10-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Roy Balakrishnan\"), new Phone(\"92624417\"), new Email(\"royb@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"                    new Address(\"Blk 45 Aljunied Street 85, #11-31\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":55,"author":{"gitId":"larrywang0701"},"content":"                    getTagSet(\"colleagues\"), sampleNotes, sampleEvents),","lastModifiedDate":"2023-10-12"},{"lineNumber":56,"author":{"gitId":"larrywang0701"},"content":"            new Person(new Name(\"Professor XXX\"), new Phone(\"11111111\"), new Email(\"123@example.com\"),","lastModifiedDate":"2023-10-12"},{"lineNumber":57,"author":{"gitId":"larrywang0701"},"content":"                    new Address(\"Example Addres\"),","lastModifiedDate":"2023-10-12"},{"lineNumber":58,"author":{"gitId":"zekone"},"content":"                    getTagSet(\"colleagues\"), sampleNotes, sampleEvents)","lastModifiedDate":"2023-10-10"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public static ReadOnlyAddressBook getSampleAddressBook() {","lastModifiedDate":"2016-12-20"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        AddressBook sampleAb \u003d new AddressBook();","lastModifiedDate":"2017-04-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        for (Person samplePerson : getSamplePersons()) {","lastModifiedDate":"2016-12-20"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            sampleAb.addPerson(samplePerson);","lastModifiedDate":"2017-04-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return sampleAb;","lastModifiedDate":"2017-04-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * Returns a tag set containing the list of strings given.","lastModifiedDate":"2017-03-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e getTagSet(String... strings) {","lastModifiedDate":"2017-05-30"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2018-01-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                .map(Tag::new)","lastModifiedDate":"2018-01-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2018-01-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"larrywang0701":10,"zekone":15,"-":54}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedEvent.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zekone"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-10-10"},{"lineNumber":2,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":3,"author":{"gitId":"zekone"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2023-10-10"},{"lineNumber":4,"author":{"gitId":"zekone"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2023-10-10"},{"lineNumber":5,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":6,"author":{"gitId":"zekone"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-10-10"},{"lineNumber":7,"author":{"gitId":"zekone"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2023-10-10"},{"lineNumber":8,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":9,"author":{"gitId":"zekone"},"content":"/**","lastModifiedDate":"2023-10-10"},{"lineNumber":10,"author":{"gitId":"zekone"},"content":" * Jackson-friendly version of {@link Event}.","lastModifiedDate":"2023-10-10"},{"lineNumber":11,"author":{"gitId":"zekone"},"content":" */","lastModifiedDate":"2023-10-10"},{"lineNumber":12,"author":{"gitId":"zekone"},"content":"public class JsonAdaptedEvent {","lastModifiedDate":"2023-10-10"},{"lineNumber":13,"author":{"gitId":"zekone"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Event\u0027s %s field is missing!\";","lastModifiedDate":"2023-10-10"},{"lineNumber":14,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":15,"author":{"gitId":"zekone"},"content":"    private final String name;","lastModifiedDate":"2023-10-10"},{"lineNumber":16,"author":{"gitId":"zekone"},"content":"    private final String start;","lastModifiedDate":"2023-10-10"},{"lineNumber":17,"author":{"gitId":"zekone"},"content":"    private final String end;","lastModifiedDate":"2023-10-10"},{"lineNumber":18,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":19,"author":{"gitId":"larrywang0701"},"content":"    private final String location;","lastModifiedDate":"2023-10-12"},{"lineNumber":20,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"larrywang0701"},"content":"    private final String information;","lastModifiedDate":"2023-10-12"},{"lineNumber":22,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"zekone"},"content":"    /**","lastModifiedDate":"2023-10-10"},{"lineNumber":24,"author":{"gitId":"zekone"},"content":"     * Constructs a {@code JsonAdaptedEvent} with the given person details.","lastModifiedDate":"2023-10-10"},{"lineNumber":25,"author":{"gitId":"zekone"},"content":"     */","lastModifiedDate":"2023-10-10"},{"lineNumber":26,"author":{"gitId":"zekone"},"content":"    @JsonCreator","lastModifiedDate":"2023-10-10"},{"lineNumber":27,"author":{"gitId":"zekone"},"content":"    public JsonAdaptedEvent(@JsonProperty(\"name\") String name,","lastModifiedDate":"2023-10-10"},{"lineNumber":28,"author":{"gitId":"larrywang0701"},"content":"            @JsonProperty(\"start\") String start, @JsonProperty(\"end\") String end,","lastModifiedDate":"2023-10-12"},{"lineNumber":29,"author":{"gitId":"larrywang0701"},"content":"            @JsonProperty(\"location\") String location,","lastModifiedDate":"2023-10-12"},{"lineNumber":30,"author":{"gitId":"larrywang0701"},"content":"            @JsonProperty(\"information\") String information) {","lastModifiedDate":"2023-10-12"},{"lineNumber":31,"author":{"gitId":"zekone"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-10-10"},{"lineNumber":32,"author":{"gitId":"zekone"},"content":"        this.start \u003d start;","lastModifiedDate":"2023-10-10"},{"lineNumber":33,"author":{"gitId":"zekone"},"content":"        this.end \u003d end;","lastModifiedDate":"2023-10-10"},{"lineNumber":34,"author":{"gitId":"larrywang0701"},"content":"        this.location \u003d location;","lastModifiedDate":"2023-10-12"},{"lineNumber":35,"author":{"gitId":"larrywang0701"},"content":"        this.information \u003d information;","lastModifiedDate":"2023-10-12"},{"lineNumber":36,"author":{"gitId":"zekone"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":37,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":38,"author":{"gitId":"zekone"},"content":"    /**","lastModifiedDate":"2023-10-10"},{"lineNumber":39,"author":{"gitId":"zekone"},"content":"     * Converts a given {@code Event} into this class for Jackson use.","lastModifiedDate":"2023-10-10"},{"lineNumber":40,"author":{"gitId":"zekone"},"content":"     */","lastModifiedDate":"2023-10-10"},{"lineNumber":41,"author":{"gitId":"zekone"},"content":"    public JsonAdaptedEvent(Event source) {","lastModifiedDate":"2023-10-10"},{"lineNumber":42,"author":{"gitId":"zekone"},"content":"        name \u003d source.getName();","lastModifiedDate":"2023-10-10"},{"lineNumber":43,"author":{"gitId":"zekone"},"content":"        start \u003d source.getStartString();","lastModifiedDate":"2023-10-10"},{"lineNumber":44,"author":{"gitId":"zekone"},"content":"        end \u003d source.getEndString();","lastModifiedDate":"2023-10-10"},{"lineNumber":45,"author":{"gitId":"larrywang0701"},"content":"        location \u003d source.getLocationStr();","lastModifiedDate":"2023-10-12"},{"lineNumber":46,"author":{"gitId":"larrywang0701"},"content":"        information \u003d source.getInformationStr();","lastModifiedDate":"2023-10-12"},{"lineNumber":47,"author":{"gitId":"zekone"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":48,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":49,"author":{"gitId":"zekone"},"content":"    /**","lastModifiedDate":"2023-10-10"},{"lineNumber":50,"author":{"gitId":"zekone"},"content":"     * Converts this Jackson-friendly adapted event object into the model\u0027s","lastModifiedDate":"2023-10-10"},{"lineNumber":51,"author":{"gitId":"zekone"},"content":"     * {@code Event} object.","lastModifiedDate":"2023-10-10"},{"lineNumber":52,"author":{"gitId":"zekone"},"content":"     *","lastModifiedDate":"2023-10-10"},{"lineNumber":53,"author":{"gitId":"zekone"},"content":"     * @throws IllegalValueException if there were any data constraints violated in","lastModifiedDate":"2023-10-10"},{"lineNumber":54,"author":{"gitId":"zekone"},"content":"     *                               the adapted event.","lastModifiedDate":"2023-10-10"},{"lineNumber":55,"author":{"gitId":"zekone"},"content":"     */","lastModifiedDate":"2023-10-10"},{"lineNumber":56,"author":{"gitId":"zekone"},"content":"    public Event toModelType() throws IllegalValueException {","lastModifiedDate":"2023-10-10"},{"lineNumber":57,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":58,"author":{"gitId":"zekone"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2023-10-10"},{"lineNumber":59,"author":{"gitId":"zekone"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, \"name\"));","lastModifiedDate":"2023-10-10"},{"lineNumber":60,"author":{"gitId":"zekone"},"content":"        }","lastModifiedDate":"2023-10-10"},{"lineNumber":61,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":62,"author":{"gitId":"zekone"},"content":"        if (start \u003d\u003d null) {","lastModifiedDate":"2023-10-10"},{"lineNumber":63,"author":{"gitId":"zekone"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, \"start\"));","lastModifiedDate":"2023-10-10"},{"lineNumber":64,"author":{"gitId":"zekone"},"content":"        }","lastModifiedDate":"2023-10-10"},{"lineNumber":65,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":66,"author":{"gitId":"zekone"},"content":"        if (end \u003d\u003d null) {","lastModifiedDate":"2023-10-10"},{"lineNumber":67,"author":{"gitId":"zekone"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, \"end\"));","lastModifiedDate":"2023-10-10"},{"lineNumber":68,"author":{"gitId":"zekone"},"content":"        }","lastModifiedDate":"2023-10-10"},{"lineNumber":69,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":70,"author":{"gitId":"larrywang0701"},"content":"        if (location \u003d\u003d null) {","lastModifiedDate":"2023-10-12"},{"lineNumber":71,"author":{"gitId":"larrywang0701"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, \"location\"));","lastModifiedDate":"2023-10-12"},{"lineNumber":72,"author":{"gitId":"larrywang0701"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":73,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":74,"author":{"gitId":"larrywang0701"},"content":"        if (information \u003d\u003d null) {","lastModifiedDate":"2023-10-12"},{"lineNumber":75,"author":{"gitId":"larrywang0701"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, \"information\"));","lastModifiedDate":"2023-10-12"},{"lineNumber":76,"author":{"gitId":"larrywang0701"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":77,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":78,"author":{"gitId":"larrywang0701"},"content":"        return new Event(name, start, end, location, information);","lastModifiedDate":"2023-10-12"},{"lineNumber":79,"author":{"gitId":"zekone"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":80,"author":{"gitId":"zekone"},"content":"}","lastModifiedDate":"2023-10-10"}],"authorContributionMap":{"larrywang0701":20,"zekone":60}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedNote.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zekone"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-10-10"},{"lineNumber":2,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":3,"author":{"gitId":"zekone"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2023-10-10"},{"lineNumber":4,"author":{"gitId":"zekone"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2023-10-10"},{"lineNumber":5,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":6,"author":{"gitId":"zekone"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-10-10"},{"lineNumber":7,"author":{"gitId":"zekone"},"content":"import seedu.address.model.note.Note;","lastModifiedDate":"2023-10-10"},{"lineNumber":8,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":9,"author":{"gitId":"zekone"},"content":"/**","lastModifiedDate":"2023-10-10"},{"lineNumber":10,"author":{"gitId":"zekone"},"content":" * Jackson-friendly version of {@link Note}.","lastModifiedDate":"2023-10-10"},{"lineNumber":11,"author":{"gitId":"zekone"},"content":" */","lastModifiedDate":"2023-10-10"},{"lineNumber":12,"author":{"gitId":"zekone"},"content":"public class JsonAdaptedNote {","lastModifiedDate":"2023-10-10"},{"lineNumber":13,"author":{"gitId":"zekone"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Notes\u0027s %s field is missing!\";","lastModifiedDate":"2023-10-10"},{"lineNumber":14,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":15,"author":{"gitId":"zekone"},"content":"    private final String title;","lastModifiedDate":"2023-10-10"},{"lineNumber":16,"author":{"gitId":"zekone"},"content":"    private final String body;","lastModifiedDate":"2023-10-10"},{"lineNumber":17,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":18,"author":{"gitId":"zekone"},"content":"    /**","lastModifiedDate":"2023-10-10"},{"lineNumber":19,"author":{"gitId":"zekone"},"content":"     * Constructs a {@code JsonAdaptedNote} with the given person details.","lastModifiedDate":"2023-10-10"},{"lineNumber":20,"author":{"gitId":"zekone"},"content":"     */","lastModifiedDate":"2023-10-10"},{"lineNumber":21,"author":{"gitId":"zekone"},"content":"    @JsonCreator","lastModifiedDate":"2023-10-10"},{"lineNumber":22,"author":{"gitId":"zekone"},"content":"    public JsonAdaptedNote(@JsonProperty(\"title\") String title, @JsonProperty(\"body\") String body) {","lastModifiedDate":"2023-10-10"},{"lineNumber":23,"author":{"gitId":"zekone"},"content":"        this.title \u003d title;","lastModifiedDate":"2023-10-10"},{"lineNumber":24,"author":{"gitId":"zekone"},"content":"        this.body \u003d body;","lastModifiedDate":"2023-10-10"},{"lineNumber":25,"author":{"gitId":"zekone"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":26,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":27,"author":{"gitId":"zekone"},"content":"    /**","lastModifiedDate":"2023-10-10"},{"lineNumber":28,"author":{"gitId":"zekone"},"content":"     * Converts a given {@code Note} into this class for Jackson use.","lastModifiedDate":"2023-10-10"},{"lineNumber":29,"author":{"gitId":"zekone"},"content":"     */","lastModifiedDate":"2023-10-10"},{"lineNumber":30,"author":{"gitId":"zekone"},"content":"    public JsonAdaptedNote(Note source) {","lastModifiedDate":"2023-10-10"},{"lineNumber":31,"author":{"gitId":"zekone"},"content":"        title \u003d source.getTitle();","lastModifiedDate":"2023-10-10"},{"lineNumber":32,"author":{"gitId":"zekone"},"content":"        body \u003d source.getBody();","lastModifiedDate":"2023-10-10"},{"lineNumber":33,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":34,"author":{"gitId":"zekone"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":35,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":36,"author":{"gitId":"zekone"},"content":"    /**","lastModifiedDate":"2023-10-10"},{"lineNumber":37,"author":{"gitId":"zekone"},"content":"     * Converts this Jackson-friendly adapted note object into the model\u0027s","lastModifiedDate":"2023-10-10"},{"lineNumber":38,"author":{"gitId":"zekone"},"content":"     * {@code Note} object.","lastModifiedDate":"2023-10-10"},{"lineNumber":39,"author":{"gitId":"zekone"},"content":"     *","lastModifiedDate":"2023-10-10"},{"lineNumber":40,"author":{"gitId":"zekone"},"content":"     * @throws IllegalValueException if there were any data constraints violated in","lastModifiedDate":"2023-10-10"},{"lineNumber":41,"author":{"gitId":"zekone"},"content":"     *                               the adapted Note.","lastModifiedDate":"2023-10-10"},{"lineNumber":42,"author":{"gitId":"zekone"},"content":"     */","lastModifiedDate":"2023-10-10"},{"lineNumber":43,"author":{"gitId":"zekone"},"content":"    public Note toModelType() throws IllegalValueException {","lastModifiedDate":"2023-10-10"},{"lineNumber":44,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":45,"author":{"gitId":"zekone"},"content":"        if (title \u003d\u003d null) {","lastModifiedDate":"2023-10-10"},{"lineNumber":46,"author":{"gitId":"zekone"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, \"title\"));","lastModifiedDate":"2023-10-10"},{"lineNumber":47,"author":{"gitId":"zekone"},"content":"        }","lastModifiedDate":"2023-10-10"},{"lineNumber":48,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":49,"author":{"gitId":"zekone"},"content":"        if (body \u003d\u003d null) {","lastModifiedDate":"2023-10-10"},{"lineNumber":50,"author":{"gitId":"zekone"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, \"body\"));","lastModifiedDate":"2023-10-10"},{"lineNumber":51,"author":{"gitId":"zekone"},"content":"        }","lastModifiedDate":"2023-10-10"},{"lineNumber":52,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":53,"author":{"gitId":"zekone"},"content":"        return new Note(title, body);","lastModifiedDate":"2023-10-10"},{"lineNumber":54,"author":{"gitId":"zekone"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":55,"author":{"gitId":"zekone"},"content":"}","lastModifiedDate":"2023-10-10"}],"authorContributionMap":{"zekone":55}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedPerson.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"zekone"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2023-10-10"},{"lineNumber":14,"author":{"gitId":"zekone"},"content":"import seedu.address.model.note.Note;","lastModifiedDate":"2023-10-10"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Person}.","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"class JsonAdaptedPerson {","lastModifiedDate":"2018-12-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Person\u0027s %s field is missing!\";","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final String name;","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final String phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final String email;","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private final String address;","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedTag\u003e tags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-09"},{"lineNumber":34,"author":{"gitId":"zekone"},"content":"    private final List\u003cJsonAdaptedNote\u003e notes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-10"},{"lineNumber":35,"author":{"gitId":"zekone"},"content":"    private final List\u003cJsonAdaptedEvent\u003e events \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedPerson} with the given person details.","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(@JsonProperty(\"name\") String name, @JsonProperty(\"phone\") String phone,","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            @JsonProperty(\"email\") String email, @JsonProperty(\"address\") String address,","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"zekone"},"content":"            @JsonProperty(\"tags\") List\u003cJsonAdaptedTag\u003e tags, @JsonProperty(\"notes\") List\u003cJsonAdaptedNote\u003e notes,","lastModifiedDate":"2023-10-10"},{"lineNumber":44,"author":{"gitId":"zekone"},"content":"            @JsonProperty(\"events\") List\u003cJsonAdaptedEvent\u003e events) {","lastModifiedDate":"2023-10-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        if (tags !\u003d null) {","lastModifiedDate":"2023-01-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            this.tags.addAll(tags);","lastModifiedDate":"2023-01-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"zekone"},"content":"        if (notes !\u003d null) {","lastModifiedDate":"2023-10-10"},{"lineNumber":53,"author":{"gitId":"zekone"},"content":"            this.notes.addAll(notes);","lastModifiedDate":"2023-10-10"},{"lineNumber":54,"author":{"gitId":"zekone"},"content":"        }","lastModifiedDate":"2023-10-10"},{"lineNumber":55,"author":{"gitId":"zekone"},"content":"        if (events !\u003d null) {","lastModifiedDate":"2023-10-10"},{"lineNumber":56,"author":{"gitId":"zekone"},"content":"            this.events.addAll(events);","lastModifiedDate":"2023-10-10"},{"lineNumber":57,"author":{"gitId":"zekone"},"content":"        }","lastModifiedDate":"2023-10-10"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Converts a given {@code Person} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(Person source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        phone \u003d source.getPhone().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        email \u003d source.getEmail().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        address \u003d source.getAddress().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        tags.addAll(source.getTags().stream()","lastModifiedDate":"2023-01-09"},{"lineNumber":69,"author":{"gitId":"-"},"content":"                .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"zekone"},"content":"        notes.addAll(source.getNotes().stream()","lastModifiedDate":"2023-10-10"},{"lineNumber":72,"author":{"gitId":"zekone"},"content":"                .map(JsonAdaptedNote::new)","lastModifiedDate":"2023-10-10"},{"lineNumber":73,"author":{"gitId":"zekone"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2023-10-10"},{"lineNumber":74,"author":{"gitId":"zekone"},"content":"        events.addAll(source.getEvents().stream()","lastModifiedDate":"2023-10-10"},{"lineNumber":75,"author":{"gitId":"zekone"},"content":"                .map(JsonAdaptedEvent::new)","lastModifiedDate":"2023-10-10"},{"lineNumber":76,"author":{"gitId":"zekone"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2023-10-10"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"zekone"},"content":"     * Converts this Jackson-friendly adapted person object into the model\u0027s","lastModifiedDate":"2023-10-10"},{"lineNumber":81,"author":{"gitId":"zekone"},"content":"     * {@code Person} object.","lastModifiedDate":"2023-10-10"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"zekone"},"content":"     * @throws IllegalValueException if there were any data constraints violated in","lastModifiedDate":"2023-10-10"},{"lineNumber":84,"author":{"gitId":"zekone"},"content":"     *                               the adapted person.","lastModifiedDate":"2023-10-10"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public Person toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        final List\u003cTag\u003e personTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        for (JsonAdaptedTag tag : tags) {","lastModifiedDate":"2023-01-09"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            personTags.add(tag.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"zekone"},"content":"        final List\u003cNote\u003e modelNotes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-10"},{"lineNumber":93,"author":{"gitId":"zekone"},"content":"        for (JsonAdaptedNote note : notes) {","lastModifiedDate":"2023-10-10"},{"lineNumber":94,"author":{"gitId":"zekone"},"content":"            modelNotes.add(note.toModelType());","lastModifiedDate":"2023-10-10"},{"lineNumber":95,"author":{"gitId":"zekone"},"content":"        }","lastModifiedDate":"2023-10-10"},{"lineNumber":96,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":97,"author":{"gitId":"zekone"},"content":"        final List\u003cEvent\u003e modelEvents \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-10"},{"lineNumber":98,"author":{"gitId":"zekone"},"content":"        for (JsonAdaptedEvent event : events) {","lastModifiedDate":"2023-10-10"},{"lineNumber":99,"author":{"gitId":"zekone"},"content":"            modelEvents.add(event.toModelType());","lastModifiedDate":"2023-10-10"},{"lineNumber":100,"author":{"gitId":"zekone"},"content":"        }","lastModifiedDate":"2023-10-10"},{"lineNumber":101,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        if (phone \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(phone)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        final Phone modelPhone \u003d new Phone(phone);","lastModifiedDate":"2018-08-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        if (email \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(email)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        final Email modelEmail \u003d new Email(email);","lastModifiedDate":"2018-08-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        if (address \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(address)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        final Address modelAddress \u003d new Address(address);","lastModifiedDate":"2018-08-13"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(personTags);","lastModifiedDate":"2018-08-13"},{"lineNumber":135,"author":{"gitId":"zekone"},"content":"        return new Person(modelName, modelPhone, modelEmail, modelAddress, modelTags, modelNotes, modelEvents);","lastModifiedDate":"2023-10-10"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":138,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"zekone":33,"-":105}},{"path":"src/main/java/seedu/address/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-06-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2016-08-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2016-09-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2017-06-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-11-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":26,"author":{"gitId":"larrywang0701"},"content":"    private static MainWindow iNSTANCE;","lastModifiedDate":"2023-10-12"},{"lineNumber":27,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2016-08-18"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2018-08-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Stage primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2016-08-18"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private PersonListPanel personListPanel;","lastModifiedDate":"2016-08-18"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private HelpWindow helpWindow;","lastModifiedDate":"2018-03-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private StackPane personListPanelPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    private StackPane resultDisplayPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private StackPane statusbarPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public MainWindow(Stage primaryStage, Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2016-09-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        setAccelerators();","lastModifiedDate":"2016-09-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2018-03-15"},{"lineNumber":72,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":73,"author":{"gitId":"larrywang0701"},"content":"        iNSTANCE \u003d this;","lastModifiedDate":"2023-10-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2016-12-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2016-12-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    private void setAccelerators() {","lastModifiedDate":"2016-09-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2016-12-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2016-12-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","lastModifiedDate":"2016-12-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2016-12-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2016-12-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-12-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2016-12-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","lastModifiedDate":"2016-12-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"         * is fixed in later version of SDK.","lastModifiedDate":"2016-12-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2016-12-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2016-12-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will","lastModifiedDate":"2016-12-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"         * not work when the focus is in them because the key event is consumed by","lastModifiedDate":"2016-12-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"         * the TextInputControl(s).","lastModifiedDate":"2016-12-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2016-12-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"         * help window purposely so to support accelerators even when focus is","lastModifiedDate":"2016-12-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"         * in CommandBox or ResultDisplay.","lastModifiedDate":"2016-12-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2016-12-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2016-12-18"},{"lineNumber":109,"author":{"gitId":"-"},"content":"                event.consume();","lastModifiedDate":"2016-12-18"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-12-18"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2016-12-18"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2017-08-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","lastModifiedDate":"2016-09-21"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        personListPanel \u003d new PersonListPanel(logic.getFilteredPersonList());","lastModifiedDate":"2019-01-25"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        personListPanelPlaceholder.getChildren().add(personListPanel.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2018-12-09"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(logic.getAddressBookFilePath());","lastModifiedDate":"2019-01-25"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeCommand);","lastModifiedDate":"2019-01-25"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2018-11-27"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2018-11-27"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2018-11-27"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2018-11-27"},{"lineNumber":138,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2018-11-27"},{"lineNumber":139,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2018-11-27"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2018-03-15"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    public void handleHelp() {","lastModifiedDate":"2016-08-31"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2018-03-15"},{"lineNumber":149,"author":{"gitId":"-"},"content":"            helpWindow.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2018-03-15"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            helpWindow.focus();","lastModifiedDate":"2018-03-15"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-15"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    void show() {","lastModifiedDate":"2016-10-15"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        primaryStage.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":160,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2016-08-18"},{"lineNumber":161,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    private void handleExit() {","lastModifiedDate":"2016-08-18"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2018-12-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"                (int) primaryStage.getX(), (int) primaryStage.getY());","lastModifiedDate":"2018-12-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2018-12-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        helpWindow.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        primaryStage.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    public PersonListPanel getPersonListPanel() {","lastModifiedDate":"2016-08-25"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        return personListPanel;","lastModifiedDate":"2018-08-14"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-25"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":176,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":177,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-09"},{"lineNumber":178,"author":{"gitId":"-"},"content":"     * @see seedu.address.logic.Logic#execute(String)","lastModifiedDate":"2018-12-09"},{"lineNumber":179,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    private CommandResult executeCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2018-12-09"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":182,"author":{"gitId":"-"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":183,"author":{"gitId":"-"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":184,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":186,"author":{"gitId":"-"},"content":"            if (commandResult.isShowHelp()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":187,"author":{"gitId":"-"},"content":"                handleHelp();","lastModifiedDate":"2018-12-09"},{"lineNumber":188,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":190,"author":{"gitId":"-"},"content":"            if (commandResult.isExit()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":191,"author":{"gitId":"-"},"content":"                handleExit();","lastModifiedDate":"2018-12-09"},{"lineNumber":192,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":194,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2018-12-09"},{"lineNumber":196,"author":{"gitId":"-"},"content":"            logger.info(\"An error occurred while executing command: \" + commandText);","lastModifiedDate":"2023-06-13"},{"lineNumber":197,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2018-12-09"},{"lineNumber":198,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2018-12-09"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":201,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"larrywang0701":5,"-":196}},{"path":"src/main/java/seedu/address/ui/PersonCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Comparator;","lastModifiedDate":"2019-01-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"larrywang0701"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"larrywang0701"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2016-12-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":12,"author":{"gitId":"larrywang0701"},"content":"import javafx.scene.paint.Color;","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"larrywang0701"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * An UI component that displays information of a {@code Person}.","lastModifiedDate":"2017-08-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class PersonCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"PersonListCard.fxml\";","lastModifiedDate":"2016-09-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2017-03-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public final Person person;","lastModifiedDate":"2018-01-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private Label name;","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private Label id;","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private Label phone;","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private Label address;","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private Label email;","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private FlowPane tags;","lastModifiedDate":"2016-12-18"},{"lineNumber":47,"author":{"gitId":"larrywang0701"},"content":"    @FXML","lastModifiedDate":"2023-10-12"},{"lineNumber":48,"author":{"gitId":"larrywang0701"},"content":"    private ListView\u003cEvent\u003e events;","lastModifiedDate":"2023-10-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":51,"author":{"gitId":"larrywang0701"},"content":"     * Creates a {@code PersonCard} with the given {@code Person} and index to display.","lastModifiedDate":"2023-10-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public PersonCard(Person person, int displayedIndex) {","lastModifiedDate":"2018-01-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        this.person \u003d person;","lastModifiedDate":"2017-07-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        name.setText(person.getName().fullName);","lastModifiedDate":"2017-12-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        phone.setText(person.getPhone().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        address.setText(person.getAddress().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        email.setText(person.getEmail().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        person.getTags().stream()","lastModifiedDate":"2019-01-02"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2019-01-02"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                .forEach(tag -\u003e tags.getChildren().add(new Label(tag.tagName)));","lastModifiedDate":"2019-01-02"},{"lineNumber":64,"author":{"gitId":"larrywang0701"},"content":"        events.setItems(person.getEvents());","lastModifiedDate":"2023-10-13"},{"lineNumber":65,"author":{"gitId":"larrywang0701"},"content":"        events.setCellFactory(cell -\u003e new EventCell());","lastModifiedDate":"2023-10-13"},{"lineNumber":66,"author":{"gitId":"larrywang0701"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":67,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":68,"author":{"gitId":"larrywang0701"},"content":"    private class EventCell extends ListCell\u003cEvent\u003e {","lastModifiedDate":"2023-10-13"},{"lineNumber":69,"author":{"gitId":"larrywang0701"},"content":"        @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":70,"author":{"gitId":"larrywang0701"},"content":"        protected void updateItem(Event event, boolean empty) {","lastModifiedDate":"2023-10-13"},{"lineNumber":71,"author":{"gitId":"larrywang0701"},"content":"            super.updateItem(event, empty);","lastModifiedDate":"2023-10-13"},{"lineNumber":72,"author":{"gitId":"larrywang0701"},"content":"            if (empty || event \u003d\u003d null) {","lastModifiedDate":"2023-10-13"},{"lineNumber":73,"author":{"gitId":"larrywang0701"},"content":"                setGraphic(null);","lastModifiedDate":"2023-10-13"},{"lineNumber":74,"author":{"gitId":"larrywang0701"},"content":"                setText(null);","lastModifiedDate":"2023-10-13"},{"lineNumber":75,"author":{"gitId":"larrywang0701"},"content":"            } else {","lastModifiedDate":"2023-10-13"},{"lineNumber":76,"author":{"gitId":"larrywang0701"},"content":"                setText((getIndex() + 1) + \". \" + event.getUiText());","lastModifiedDate":"2023-10-13"},{"lineNumber":77,"author":{"gitId":"larrywang0701"},"content":"                setTextFill(Color.WHITE);","lastModifiedDate":"2023-10-13"},{"lineNumber":78,"author":{"gitId":"larrywang0701"},"content":"            }","lastModifiedDate":"2023-10-13"},{"lineNumber":79,"author":{"gitId":"larrywang0701"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"larrywang0701":23,"-":58}},{"path":"src/main/resources/view/PersonListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":12,"author":{"gitId":"larrywang0701"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-07-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":19,"author":{"gitId":"-"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"      \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2016-09-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"      \u003cFlowPane fx:id\u003d\"tags\" /\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":32,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"larrywang0701"},"content":"      \u003cListView fx:id\u003d\"events\" VBox.vgrow\u003d\"ALWAYS\" prefHeight\u003d\"70\"/\u003e","lastModifiedDate":"2023-10-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"larrywang0701":2,"-":36}},{"path":"src/test/java/seedu/address/commons/util/DateTimeUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"larrywang0701"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"larrywang0701"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"larrywang0701"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"larrywang0701"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"larrywang0701"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"larrywang0701"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"larrywang0701"},"content":"public class DateTimeUtilTest {","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"larrywang0701"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"larrywang0701"},"content":"    public void test_correctFormat_pass() {","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"larrywang0701"},"content":"        assertEquals(DateTimeUtil.parseString(\"12:00\"), LocalDateTime.now()","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"larrywang0701"},"content":"                .withHour(12).withMinute(0).withSecond(0).withNano(0));","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"larrywang0701"},"content":"        assertEquals(DateTimeUtil.parseString(\"02:00\"), LocalDateTime.now()","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"larrywang0701"},"content":"                .withHour(2).withMinute(0).withSecond(0).withNano(0));","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"larrywang0701"},"content":"        assertEquals(DateTimeUtil.parseString(\"02:01\"), LocalDateTime.now()","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"larrywang0701"},"content":"                .withHour(2).withMinute(1).withSecond(0).withNano(0));","lastModifiedDate":"2023-10-12"},{"lineNumber":20,"author":{"gitId":"larrywang0701"},"content":"        assertEquals(DateTimeUtil.parseString(\"02:10\"), LocalDateTime.now()","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"larrywang0701"},"content":"                .withHour(2).withMinute(10).withSecond(0).withNano(0));","lastModifiedDate":"2023-10-12"},{"lineNumber":22,"author":{"gitId":"larrywang0701"},"content":"        assertEquals(DateTimeUtil.parseString(\"00:10\"), LocalDateTime.now()","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"larrywang0701"},"content":"                .withHour(0).withMinute(10).withSecond(0).withNano(0));","lastModifiedDate":"2023-10-12"},{"lineNumber":24,"author":{"gitId":"larrywang0701"},"content":"        assertEquals(DateTimeUtil.parseString(\"05:01:45\"), LocalDateTime.now()","lastModifiedDate":"2023-10-12"},{"lineNumber":25,"author":{"gitId":"larrywang0701"},"content":"                .withHour(5).withMinute(1).withSecond(45).withNano(0));","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"larrywang0701"},"content":"        assertEquals(DateTimeUtil.parseString(\"2023-10-12 02:10\"),","lastModifiedDate":"2023-10-12"},{"lineNumber":27,"author":{"gitId":"larrywang0701"},"content":"                LocalDateTime.parse(\"2023-10-12T02:10:00\"));","lastModifiedDate":"2023-10-12"},{"lineNumber":28,"author":{"gitId":"larrywang0701"},"content":"        assertEquals(DateTimeUtil.parseString(\"2023-10-12 20:05\"),","lastModifiedDate":"2023-10-12"},{"lineNumber":29,"author":{"gitId":"larrywang0701"},"content":"                LocalDateTime.parse(\"2023-10-12T20:05:00\"));","lastModifiedDate":"2023-10-12"},{"lineNumber":30,"author":{"gitId":"larrywang0701"},"content":"        assertEquals(DateTimeUtil.parseString(\"2023-10-12 20:05:30\"),","lastModifiedDate":"2023-10-12"},{"lineNumber":31,"author":{"gitId":"larrywang0701"},"content":"                LocalDateTime.parse(\"2023-10-12T20:05:30\"));","lastModifiedDate":"2023-10-12"},{"lineNumber":32,"author":{"gitId":"larrywang0701"},"content":"        assertEquals(DateTimeUtil.parseString(\"2023-10-12\"),","lastModifiedDate":"2023-10-13"},{"lineNumber":33,"author":{"gitId":"larrywang0701"},"content":"                LocalDateTime.parse(\"2023-10-12T00:00:00\"));","lastModifiedDate":"2023-10-13"},{"lineNumber":34,"author":{"gitId":"larrywang0701"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":35,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":36,"author":{"gitId":"larrywang0701"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":37,"author":{"gitId":"larrywang0701"},"content":"    public void test_wrongFormat_fails() {","lastModifiedDate":"2023-10-12"},{"lineNumber":38,"author":{"gitId":"larrywang0701"},"content":"        assertThrows(DateTimeParseException.class, () -\u003e DateTimeUtil.parseString(\"002:00\"));","lastModifiedDate":"2023-10-12"},{"lineNumber":39,"author":{"gitId":"larrywang0701"},"content":"        assertThrows(DateTimeParseException.class, () -\u003e DateTimeUtil.parseString(\"02:0\"));","lastModifiedDate":"2023-10-12"},{"lineNumber":40,"author":{"gitId":"larrywang0701"},"content":"        assertThrows(DateTimeParseException.class, () -\u003e DateTimeUtil.parseString(\"12:1\"));","lastModifiedDate":"2023-10-12"},{"lineNumber":41,"author":{"gitId":"larrywang0701"},"content":"        assertThrows(DateTimeParseException.class, () -\u003e DateTimeUtil.parseString(\"2023-10-12 0:0:0\"));","lastModifiedDate":"2023-10-12"},{"lineNumber":42,"author":{"gitId":"larrywang0701"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":43,"author":{"gitId":"larrywang0701"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"larrywang0701":43}},{"path":"src/test/java/seedu/address/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX;","lastModifiedDate":"2023-07-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-07-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.nio.file.AccessDeniedException;","lastModifiedDate":"2023-06-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2023-10-12"},{"lineNumber":22,"author":{"gitId":"larrywang0701"},"content":"import seedu.address.logic.commands.AddPersonCommand;","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2023-10-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2023-10-12"},{"lineNumber":25,"author":{"gitId":"larrywang0701"},"content":"import seedu.address.logic.commands.ListPersonCommand;","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2016-09-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy IO exception\");","lastModifiedDate":"2023-06-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_AD_EXCEPTION \u003d new AccessDeniedException(\"dummy access denied exception\");","lastModifiedDate":"2023-06-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                new JsonAddressBookStorage(temporaryFolder.resolve(\"addressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-06-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":65,"author":{"gitId":"larrywang0701"},"content":"        String deleteCommand \u003d \"delete contact 9\";","lastModifiedDate":"2023-10-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertCommandException(deleteCommand, MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2017-06-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2019-03-14"},{"lineNumber":71,"author":{"gitId":"larrywang0701"},"content":"        String listCommand \u003d ListCommand.COMMAND_WORD + \" \" + ListPersonCommand.SECONDARY_COMMAND_WORD;","lastModifiedDate":"2023-10-12"},{"lineNumber":72,"author":{"gitId":"larrywang0701"},"content":"        assertCommandSuccess(listCommand, ListPersonCommand.MESSAGE_SUCCESS, model);","lastModifiedDate":"2023-10-12"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2019-04-25"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertCommandFailureForExceptionFromStorage(DUMMY_IO_EXCEPTION, String.format(","lastModifiedDate":"2023-06-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                LogicManager.FILE_OPS_ERROR_FORMAT, DUMMY_IO_EXCEPTION.getMessage()));","lastModifiedDate":"2023-06-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-06-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-06-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsAdException_throwsCommandException() {","lastModifiedDate":"2023-06-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertCommandFailureForExceptionFromStorage(DUMMY_AD_EXCEPTION, String.format(","lastModifiedDate":"2023-06-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"                LogicManager.FILE_OPS_PERMISSION_ERROR_FORMAT, DUMMY_AD_EXCEPTION.getMessage()));","lastModifiedDate":"2023-06-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"            String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-05-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2019-03-14"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     * Tests the Logic component\u0027s handling of an {@code IOException} thrown by the Storage component.","lastModifiedDate":"2023-06-13"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2023-06-13"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     * @param e the exception to be thrown by the Storage component","lastModifiedDate":"2023-06-13"},{"lineNumber":149,"author":{"gitId":"-"},"content":"     * @param expectedMessage the message expected inside exception thrown by the Logic component","lastModifiedDate":"2023-06-13"},{"lineNumber":150,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    private void assertCommandFailureForExceptionFromStorage(IOException e, String expectedMessage) {","lastModifiedDate":"2023-06-13"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        Path prefPath \u003d temporaryFolder.resolve(\"ExceptionUserPrefs.json\");","lastModifiedDate":"2023-06-13"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        // Inject LogicManager with an AddressBookStorage that throws the IOException e when saving","lastModifiedDate":"2023-06-13"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(prefPath) {","lastModifiedDate":"2023-06-13"},{"lineNumber":156,"author":{"gitId":"-"},"content":"            @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":157,"author":{"gitId":"-"},"content":"            public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath)","lastModifiedDate":"2023-06-13"},{"lineNumber":158,"author":{"gitId":"-"},"content":"                    throws IOException {","lastModifiedDate":"2023-06-13"},{"lineNumber":159,"author":{"gitId":"-"},"content":"                throw e;","lastModifiedDate":"2023-06-13"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2023-06-13"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2023-06-13"},{"lineNumber":164,"author":{"gitId":"-"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ExceptionUserPrefs.json\"));","lastModifiedDate":"2023-06-13"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2023-06-13"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2023-06-13"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        // Triggers the saveAddressBook method by executing an add command","lastModifiedDate":"2023-06-13"},{"lineNumber":170,"author":{"gitId":"larrywang0701"},"content":"        String addCommand \u003d AddCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2023-10-12"},{"lineNumber":171,"author":{"gitId":"larrywang0701"},"content":"                + AddPersonCommand.SECONDARY_COMMAND_WORD","lastModifiedDate":"2023-10-12"},{"lineNumber":172,"author":{"gitId":"larrywang0701"},"content":"                + NAME_DESC_AMY + PHONE_DESC_AMY","lastModifiedDate":"2023-10-12"},{"lineNumber":173,"author":{"gitId":"-"},"content":"                + EMAIL_DESC_AMY + ADDRESS_DESC_AMY;","lastModifiedDate":"2023-06-13"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withTags().build();","lastModifiedDate":"2023-06-13"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2023-06-13"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(expectedPerson);","lastModifiedDate":"2023-06-13"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        assertCommandFailure(addCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2023-06-13"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":179,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"larrywang0701":8,"-":171}},{"path":"src/test/java/seedu/address/logic/commands/AddEventCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"larrywang0701"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"larrywang0701"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"larrywang0701"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"larrywang0701"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"larrywang0701"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"larrywang0701"},"content":"import org.junit.jupiter.api.function.ThrowingSupplier;","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"larrywang0701"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"larrywang0701"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"larrywang0701"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"larrywang0701"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"larrywang0701"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"larrywang0701"},"content":"public class AddEventCommandTest {","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"larrywang0701"},"content":"    private static final Event VALID_EVENT_0 \u003d new Event(\"Have a meeting\", \"02:00\", \"04:00\",","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"larrywang0701"},"content":"            \"COM1\", \"Discuss project\");","lastModifiedDate":"2023-10-12"},{"lineNumber":20,"author":{"gitId":"larrywang0701"},"content":"    private static final Event VALID_EVENT_SAME_NAME_0 \u003d new Event(\"Have a meeting\", \"05:00\", \"07:00\",","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"larrywang0701"},"content":"            \"COM1\", \"Discuss project again\");","lastModifiedDate":"2023-10-12"},{"lineNumber":22,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"larrywang0701"},"content":"    private Model model;","lastModifiedDate":"2023-10-12"},{"lineNumber":24,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":25,"author":{"gitId":"larrywang0701"},"content":"    @BeforeEach","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"larrywang0701"},"content":"    public void setUp() {","lastModifiedDate":"2023-10-12"},{"lineNumber":27,"author":{"gitId":"larrywang0701"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-12"},{"lineNumber":28,"author":{"gitId":"larrywang0701"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":29,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":30,"author":{"gitId":"larrywang0701"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":31,"author":{"gitId":"larrywang0701"},"content":"    public void execute_correctCommand_success() throws CommandException {","lastModifiedDate":"2023-10-12"},{"lineNumber":32,"author":{"gitId":"larrywang0701"},"content":"        int personId \u003d 1;","lastModifiedDate":"2023-10-12"},{"lineNumber":33,"author":{"gitId":"larrywang0701"},"content":"        assertCommandSuccessWithFeedback(() -\u003e new AddEventCommand(personId, VALID_EVENT_0)","lastModifiedDate":"2023-10-12"},{"lineNumber":34,"author":{"gitId":"larrywang0701"},"content":"                .execute(model), AddEventCommand.MESSAGE_SUCCESS + VALID_EVENT_0.getName());","lastModifiedDate":"2023-10-12"},{"lineNumber":35,"author":{"gitId":"larrywang0701"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":36,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":37,"author":{"gitId":"larrywang0701"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":38,"author":{"gitId":"larrywang0701"},"content":"    public void execute_personNotExist_fails() throws CommandException {","lastModifiedDate":"2023-10-12"},{"lineNumber":39,"author":{"gitId":"larrywang0701"},"content":"        int personId \u003d 99999;","lastModifiedDate":"2023-10-12"},{"lineNumber":40,"author":{"gitId":"larrywang0701"},"content":"        assertCommandFailWithFeedback(() -\u003e new AddEventCommand(personId, VALID_EVENT_SAME_NAME_0)","lastModifiedDate":"2023-10-12"},{"lineNumber":41,"author":{"gitId":"larrywang0701"},"content":"                .execute(model), AddEventCommand.MESSAGE_PERSON_NOT_FOUND + personId);","lastModifiedDate":"2023-10-13"},{"lineNumber":42,"author":{"gitId":"larrywang0701"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":43,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":44,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":45,"author":{"gitId":"larrywang0701"},"content":"    private void assertCommandSuccessWithFeedback(ThrowingSupplier\u003cCommandResult\u003e function, String result) {","lastModifiedDate":"2023-10-12"},{"lineNumber":46,"author":{"gitId":"larrywang0701"},"content":"        try {","lastModifiedDate":"2023-10-12"},{"lineNumber":47,"author":{"gitId":"larrywang0701"},"content":"            assertEquals(function.get(), new CommandResult(result));","lastModifiedDate":"2023-10-12"},{"lineNumber":48,"author":{"gitId":"larrywang0701"},"content":"        } catch (Throwable e) {","lastModifiedDate":"2023-10-12"},{"lineNumber":49,"author":{"gitId":"larrywang0701"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", e);","lastModifiedDate":"2023-10-12"},{"lineNumber":50,"author":{"gitId":"larrywang0701"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":51,"author":{"gitId":"larrywang0701"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":52,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":53,"author":{"gitId":"larrywang0701"},"content":"    private void assertCommandFailWithFeedback(ThrowingSupplier\u003cCommandResult\u003e function, String errResult) {","lastModifiedDate":"2023-10-12"},{"lineNumber":54,"author":{"gitId":"larrywang0701"},"content":"        try {","lastModifiedDate":"2023-10-12"},{"lineNumber":55,"author":{"gitId":"larrywang0701"},"content":"            function.get();","lastModifiedDate":"2023-10-12"},{"lineNumber":56,"author":{"gitId":"larrywang0701"},"content":"        } catch (Throwable e) {","lastModifiedDate":"2023-10-12"},{"lineNumber":57,"author":{"gitId":"larrywang0701"},"content":"            if (!(e instanceof CommandException)) {","lastModifiedDate":"2023-10-12"},{"lineNumber":58,"author":{"gitId":"larrywang0701"},"content":"                throw new AssertionError(\"Execution of command failed but not due to CommandException.\");","lastModifiedDate":"2023-10-12"},{"lineNumber":59,"author":{"gitId":"larrywang0701"},"content":"            }","lastModifiedDate":"2023-10-12"},{"lineNumber":60,"author":{"gitId":"larrywang0701"},"content":"            assertEquals(e.getMessage(), errResult);","lastModifiedDate":"2023-10-12"},{"lineNumber":61,"author":{"gitId":"larrywang0701"},"content":"            return;","lastModifiedDate":"2023-10-12"},{"lineNumber":62,"author":{"gitId":"larrywang0701"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":63,"author":{"gitId":"larrywang0701"},"content":"        throw new AssertionError(\"Execution of command should fail.\");","lastModifiedDate":"2023-10-12"},{"lineNumber":64,"author":{"gitId":"larrywang0701"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":65,"author":{"gitId":"larrywang0701"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"larrywang0701":65}},{"path":"src/test/java/seedu/address/logic/commands/AddPersonCommandIntegrationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-15"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-15"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-15"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code AddCommand}.","lastModifiedDate":"2017-06-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-15"},{"lineNumber":20,"author":{"gitId":"larrywang0701"},"content":"public class AddPersonCommandIntegrationTest {","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void execute_newPerson_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(validPerson);","lastModifiedDate":"2017-06-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":36,"author":{"gitId":"larrywang0701"},"content":"        assertCommandSuccess(new AddPersonCommand(validPerson), model,","lastModifiedDate":"2023-10-12"},{"lineNumber":37,"author":{"gitId":"larrywang0701"},"content":"                String.format(AddPersonCommand.MESSAGE_SUCCESS, Messages.format(validPerson)),","lastModifiedDate":"2023-10-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                expectedModel);","lastModifiedDate":"2019-02-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        Person personInList \u003d model.getAddressBook().getPersonList().get(0);","lastModifiedDate":"2018-01-10"},{"lineNumber":44,"author":{"gitId":"larrywang0701"},"content":"        assertCommandFailure(new AddPersonCommand(personInList), model,","lastModifiedDate":"2023-10-12"},{"lineNumber":45,"author":{"gitId":"larrywang0701"},"content":"                AddPersonCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2023-10-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"larrywang0701":5,"-":43}},{"path":"src/test/java/seedu/address/logic/commands/AddPersonCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2019-02-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-05-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-05-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":28,"author":{"gitId":"larrywang0701"},"content":"public class AddPersonCommandTest {","lastModifiedDate":"2023-10-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void constructor_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":32,"author":{"gitId":"larrywang0701"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddPersonCommand(null));","lastModifiedDate":"2023-10-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void execute_personAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2017-05-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        ModelStubAcceptingPersonAdded modelStub \u003d new ModelStubAcceptingPersonAdded();","lastModifiedDate":"2017-05-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":40,"author":{"gitId":"larrywang0701"},"content":"        CommandResult commandResult \u003d new AddPersonCommand(validPerson).execute(modelStub);","lastModifiedDate":"2023-10-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":42,"author":{"gitId":"larrywang0701"},"content":"        assertEquals(String.format(AddPersonCommand.MESSAGE_SUCCESS, Messages.format(validPerson)),","lastModifiedDate":"2023-10-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                commandResult.getFeedbackToUser());","lastModifiedDate":"2019-02-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(validPerson), modelStub.personsAdded);","lastModifiedDate":"2017-05-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":50,"author":{"gitId":"larrywang0701"},"content":"        AddPersonCommand addPersonCommand \u003d new AddPersonCommand(validPerson);","lastModifiedDate":"2023-10-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        ModelStub modelStub \u003d new ModelStubWithPerson(validPerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":53,"author":{"gitId":"larrywang0701"},"content":"        assertThrows(CommandException.class,","lastModifiedDate":"2023-10-12"},{"lineNumber":54,"author":{"gitId":"larrywang0701"},"content":"                AddPersonCommand.MESSAGE_DUPLICATE_PERSON, () -\u003e addPersonCommand.execute(modelStub));","lastModifiedDate":"2023-10-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Person alice \u003d new PersonBuilder().withName(\"Alice\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        Person bob \u003d new PersonBuilder().withName(\"Bob\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":61,"author":{"gitId":"larrywang0701"},"content":"        AddPersonCommand addAliceCommand \u003d new AddPersonCommand(alice);","lastModifiedDate":"2023-10-12"},{"lineNumber":62,"author":{"gitId":"larrywang0701"},"content":"        AddPersonCommand addBobCommand \u003d new AddPersonCommand(bob);","lastModifiedDate":"2023-10-12"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"larrywang0701"},"content":"        AddPersonCommand addAliceCommandCopy \u003d new AddPersonCommand(alice);","lastModifiedDate":"2023-10-12"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2017-06-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":83,"author":{"gitId":"larrywang0701"},"content":"        AddPersonCommand addPersonCommand \u003d new AddPersonCommand(ALICE);","lastModifiedDate":"2023-10-12"},{"lineNumber":84,"author":{"gitId":"larrywang0701"},"content":"        String expected \u003d AddPersonCommand.class.getCanonicalName() + \"{toAdd\u003d\" + ALICE + \"}\";","lastModifiedDate":"2023-10-12"},{"lineNumber":85,"author":{"gitId":"larrywang0701"},"content":"        assertEquals(expected, addPersonCommand.toString());","lastModifiedDate":"2023-10-12"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2017-05-12"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2017-05-12"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2018-11-27"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-12"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":139,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-06"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        public void deletePerson(Person target) {","lastModifiedDate":"2018-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":149,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":159,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":161,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":162,"author":{"gitId":"larrywang0701"},"content":"        @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":163,"author":{"gitId":"larrywang0701"},"content":"        public Person findPersonByIndex(int index) {","lastModifiedDate":"2023-10-12"},{"lineNumber":164,"author":{"gitId":"larrywang0701"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-12"},{"lineNumber":165,"author":{"gitId":"larrywang0701"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":166,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":167,"author":{"gitId":"larrywang0701"},"content":"        @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":168,"author":{"gitId":"larrywang0701"},"content":"        public Person findPersonByUserFriendlyId(int id) {","lastModifiedDate":"2023-10-12"},{"lineNumber":169,"author":{"gitId":"larrywang0701"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-12"},{"lineNumber":170,"author":{"gitId":"larrywang0701"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":174,"author":{"gitId":"-"},"content":"     * A Model stub that contains a single person.","lastModifiedDate":"2018-08-07"},{"lineNumber":175,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    private class ModelStubWithPerson extends ModelStub {","lastModifiedDate":"2018-08-07"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        private final Person person;","lastModifiedDate":"2018-08-07"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        ModelStubWithPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":180,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":181,"author":{"gitId":"-"},"content":"            this.person \u003d person;","lastModifiedDate":"2018-08-07"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":186,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":187,"author":{"gitId":"-"},"content":"            return this.person.isSamePerson(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":192,"author":{"gitId":"-"},"content":"     * A Model stub that always accept the person being added.","lastModifiedDate":"2017-05-12"},{"lineNumber":193,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    private class ModelStubAcceptingPersonAdded extends ModelStub {","lastModifiedDate":"2017-05-12"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        final ArrayList\u003cPerson\u003e personsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2017-05-12"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":199,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":200,"author":{"gitId":"-"},"content":"            return personsAdded.stream().anyMatch(person::isSamePerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-08"},{"lineNumber":205,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":206,"author":{"gitId":"-"},"content":"            personsAdded.add(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-04"},{"lineNumber":211,"author":{"gitId":"-"},"content":"            return new AddressBook();","lastModifiedDate":"2017-05-04"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":215,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"larrywang0701":23,"-":192}},{"path":"src/test/java/seedu/address/logic/commands/DeleteEventCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"larrywang0701"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"larrywang0701"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"larrywang0701"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"larrywang0701"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"larrywang0701"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"larrywang0701"},"content":"import org.junit.jupiter.api.function.ThrowingSupplier;","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"larrywang0701"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"larrywang0701"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"larrywang0701"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"larrywang0701"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"larrywang0701"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"larrywang0701"},"content":"public class DeleteEventCommandTest {","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"larrywang0701"},"content":"    private static final Event VALID_EVENT_0 \u003d new Event(\"Have a meeting\", \"02:00\", \"04:00\",","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"larrywang0701"},"content":"            \"COM1\", \"Discuss project\");","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"larrywang0701"},"content":"    private static final Event VALID_EVENT_1 \u003d new Event(\"Have a meeting again\", \"05:00\", \"07:00\",","lastModifiedDate":"2023-10-12"},{"lineNumber":20,"author":{"gitId":"larrywang0701"},"content":"            \"COM1\", \"Discuss project again\");","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":22,"author":{"gitId":"larrywang0701"},"content":"    private Model model;","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":24,"author":{"gitId":"larrywang0701"},"content":"    @BeforeEach","lastModifiedDate":"2023-10-12"},{"lineNumber":25,"author":{"gitId":"larrywang0701"},"content":"    public void setUp() {","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"larrywang0701"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-12"},{"lineNumber":27,"author":{"gitId":"larrywang0701"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":28,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":29,"author":{"gitId":"larrywang0701"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":30,"author":{"gitId":"larrywang0701"},"content":"    public void execute_correctCommand_success() throws CommandException {","lastModifiedDate":"2023-10-12"},{"lineNumber":31,"author":{"gitId":"larrywang0701"},"content":"        int personId \u003d 1;","lastModifiedDate":"2023-10-12"},{"lineNumber":32,"author":{"gitId":"larrywang0701"},"content":"        model.findPersonByUserFriendlyId(personId).addEvent(VALID_EVENT_0);","lastModifiedDate":"2023-10-12"},{"lineNumber":33,"author":{"gitId":"larrywang0701"},"content":"        assertCommandSuccessWithFeedback(() -\u003e new DeleteEventCommand(personId, 1)","lastModifiedDate":"2023-10-12"},{"lineNumber":34,"author":{"gitId":"larrywang0701"},"content":"                .execute(model), DeleteEventCommand.MESSAGE_SUCCESS + \"1\");","lastModifiedDate":"2023-10-12"},{"lineNumber":35,"author":{"gitId":"larrywang0701"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":36,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":37,"author":{"gitId":"larrywang0701"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":38,"author":{"gitId":"larrywang0701"},"content":"    public void execute_personNotFound_fails() throws CommandException {","lastModifiedDate":"2023-10-12"},{"lineNumber":39,"author":{"gitId":"larrywang0701"},"content":"        int personId \u003d 999;","lastModifiedDate":"2023-10-12"},{"lineNumber":40,"author":{"gitId":"larrywang0701"},"content":"        assertCommandFailWithFeedback(() -\u003e new DeleteEventCommand(personId, 1)","lastModifiedDate":"2023-10-12"},{"lineNumber":41,"author":{"gitId":"larrywang0701"},"content":"                .execute(model), DeleteEventCommand.MESSAGE_PERSON_NOT_FOUNT + personId);","lastModifiedDate":"2023-10-12"},{"lineNumber":42,"author":{"gitId":"larrywang0701"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":43,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":44,"author":{"gitId":"larrywang0701"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":45,"author":{"gitId":"larrywang0701"},"content":"    public void execute_eventNotFound_fails() throws CommandException {","lastModifiedDate":"2023-10-12"},{"lineNumber":46,"author":{"gitId":"larrywang0701"},"content":"        int personId \u003d 1;","lastModifiedDate":"2023-10-12"},{"lineNumber":47,"author":{"gitId":"larrywang0701"},"content":"        int invalidEventId \u003d 99999;","lastModifiedDate":"2023-10-12"},{"lineNumber":48,"author":{"gitId":"larrywang0701"},"content":"        model.findPersonByUserFriendlyId(personId).addEvent(VALID_EVENT_0);","lastModifiedDate":"2023-10-12"},{"lineNumber":49,"author":{"gitId":"larrywang0701"},"content":"        assertCommandFailWithFeedback(() -\u003e new DeleteEventCommand(personId, invalidEventId)","lastModifiedDate":"2023-10-12"},{"lineNumber":50,"author":{"gitId":"larrywang0701"},"content":"                .execute(model), DeleteEventCommand.MESSAGE_EVENT_NOT_FOUND + invalidEventId);","lastModifiedDate":"2023-10-12"},{"lineNumber":51,"author":{"gitId":"larrywang0701"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":52,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":53,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":54,"author":{"gitId":"larrywang0701"},"content":"    private void assertCommandSuccessWithFeedback(ThrowingSupplier\u003cCommandResult\u003e function, String result) {","lastModifiedDate":"2023-10-12"},{"lineNumber":55,"author":{"gitId":"larrywang0701"},"content":"        try {","lastModifiedDate":"2023-10-12"},{"lineNumber":56,"author":{"gitId":"larrywang0701"},"content":"            assertEquals(function.get(), new CommandResult(result));","lastModifiedDate":"2023-10-12"},{"lineNumber":57,"author":{"gitId":"larrywang0701"},"content":"        } catch (Throwable e) {","lastModifiedDate":"2023-10-12"},{"lineNumber":58,"author":{"gitId":"larrywang0701"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", e);","lastModifiedDate":"2023-10-12"},{"lineNumber":59,"author":{"gitId":"larrywang0701"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":60,"author":{"gitId":"larrywang0701"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":61,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":62,"author":{"gitId":"larrywang0701"},"content":"    private void assertCommandFailWithFeedback(ThrowingSupplier\u003cCommandResult\u003e function, String errResult) {","lastModifiedDate":"2023-10-12"},{"lineNumber":63,"author":{"gitId":"larrywang0701"},"content":"        try {","lastModifiedDate":"2023-10-12"},{"lineNumber":64,"author":{"gitId":"larrywang0701"},"content":"            function.get();","lastModifiedDate":"2023-10-12"},{"lineNumber":65,"author":{"gitId":"larrywang0701"},"content":"        } catch (Throwable e) {","lastModifiedDate":"2023-10-12"},{"lineNumber":66,"author":{"gitId":"larrywang0701"},"content":"            if (!(e instanceof CommandException)) {","lastModifiedDate":"2023-10-12"},{"lineNumber":67,"author":{"gitId":"larrywang0701"},"content":"                throw new AssertionError(\"Execution of command failed but not due to CommandException.\");","lastModifiedDate":"2023-10-12"},{"lineNumber":68,"author":{"gitId":"larrywang0701"},"content":"            }","lastModifiedDate":"2023-10-12"},{"lineNumber":69,"author":{"gitId":"larrywang0701"},"content":"            assertEquals(e.getMessage(), errResult);","lastModifiedDate":"2023-10-12"},{"lineNumber":70,"author":{"gitId":"larrywang0701"},"content":"            return;","lastModifiedDate":"2023-10-12"},{"lineNumber":71,"author":{"gitId":"larrywang0701"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":72,"author":{"gitId":"larrywang0701"},"content":"        throw new AssertionError(\"Execution of command should fail.\");","lastModifiedDate":"2023-10-12"},{"lineNumber":73,"author":{"gitId":"larrywang0701"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":74,"author":{"gitId":"larrywang0701"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"larrywang0701":74}},{"path":"src/test/java/seedu/address/logic/commands/DeletePersonCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2020-12-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * {@code DeleteCommand}.","lastModifiedDate":"2018-01-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"larrywang0701"},"content":"public class DeletePersonCommandTest {","lastModifiedDate":"2023-10-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":33,"author":{"gitId":"larrywang0701"},"content":"        DeletePersonCommand deletePersonCommand \u003d new DeletePersonCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2023-10-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":35,"author":{"gitId":"larrywang0701"},"content":"        String expectedMessage \u003d String.format(DeletePersonCommand.MESSAGE_DELETE_PERSON_SUCCESS,","lastModifiedDate":"2023-10-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                Messages.format(personToDelete));","lastModifiedDate":"2019-02-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":41,"author":{"gitId":"larrywang0701"},"content":"        assertCommandSuccess(deletePersonCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2017-06-05"},{"lineNumber":47,"author":{"gitId":"larrywang0701"},"content":"        DeletePersonCommand deletePersonCommand \u003d new DeletePersonCommand(outOfBoundIndex);","lastModifiedDate":"2023-10-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":49,"author":{"gitId":"larrywang0701"},"content":"        assertCommandFailure(deletePersonCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":57,"author":{"gitId":"larrywang0701"},"content":"        DeletePersonCommand deletePersonCommand \u003d new DeletePersonCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2023-10-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":59,"author":{"gitId":"larrywang0701"},"content":"        String expectedMessage \u003d String.format(DeletePersonCommand.MESSAGE_DELETE_PERSON_SUCCESS,","lastModifiedDate":"2023-10-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"                Messages.format(personToDelete));","lastModifiedDate":"2019-02-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        showNoPerson(expectedModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":66,"author":{"gitId":"larrywang0701"},"content":"        assertCommandSuccess(deletePersonCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-06-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-06-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2017-06-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":77,"author":{"gitId":"larrywang0701"},"content":"        DeletePersonCommand deletePersonCommand \u003d new DeletePersonCommand(outOfBoundIndex);","lastModifiedDate":"2023-10-12"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":79,"author":{"gitId":"larrywang0701"},"content":"        assertCommandFailure(deletePersonCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-12"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":84,"author":{"gitId":"larrywang0701"},"content":"        DeletePersonCommand deleteFirstCommand \u003d new DeletePersonCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2023-10-12"},{"lineNumber":85,"author":{"gitId":"larrywang0701"},"content":"        DeletePersonCommand deleteSecondCommand \u003d new DeletePersonCommand(INDEX_SECOND_PERSON);","lastModifiedDate":"2023-10-12"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"larrywang0701"},"content":"        DeletePersonCommand deleteFirstCommandCopy \u003d new DeletePersonCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2023-10-12"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d Index.fromOneBased(1);","lastModifiedDate":"2019-02-23"},{"lineNumber":107,"author":{"gitId":"larrywang0701"},"content":"        DeletePersonCommand deletePersonCommand \u003d new DeletePersonCommand(targetIndex);","lastModifiedDate":"2023-10-12"},{"lineNumber":108,"author":{"gitId":"larrywang0701"},"content":"        String expected \u003d DeletePersonCommand.class.getCanonicalName() + \"{targetIndex\u003d\" + targetIndex + \"}\";","lastModifiedDate":"2023-10-12"},{"lineNumber":109,"author":{"gitId":"larrywang0701"},"content":"        assertEquals(expected, deletePersonCommand.toString());","lastModifiedDate":"2023-10-12"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2017-06-05"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    private void showNoPerson(Model model) {","lastModifiedDate":"2017-06-05"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(p -\u003e false);","lastModifiedDate":"2017-06-12"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertTrue(model.getFilteredPersonList().isEmpty());","lastModifiedDate":"2018-02-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":120,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"larrywang0701":17,"-":103}},{"path":"src/test/java/seedu/address/logic/commands/ListCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2018-01-31"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ListCommand.","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class ListCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private Model expectedModel;","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void execute_listIsNotFiltered_showsSameList() {","lastModifiedDate":"2017-08-15"},{"lineNumber":31,"author":{"gitId":"larrywang0701"},"content":"        assertCommandSuccess(new ListPersonCommand(), model, ListPersonCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2023-10-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void execute_listIsFiltered_showsEverything() {","lastModifiedDate":"2017-08-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":37,"author":{"gitId":"larrywang0701"},"content":"        assertCommandSuccess(new ListPersonCommand(), model, ListPersonCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2023-10-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"larrywang0701":2,"-":37}},{"path":"src/test/java/seedu/address/logic/commands/ListEventCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"larrywang0701"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"larrywang0701"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"larrywang0701"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"larrywang0701"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"larrywang0701"},"content":"import org.junit.jupiter.api.function.ThrowingSupplier;","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"larrywang0701"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"larrywang0701"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"larrywang0701"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"larrywang0701"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"larrywang0701"},"content":"public class ListEventCommandTest {","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"larrywang0701"},"content":"    private static final Event VALID_EVENT_0 \u003d new Event(\"Have a meeting\", \"02:00\", \"04:00\",","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"larrywang0701"},"content":"            \"COM1\", \"Discuss project\");","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"larrywang0701"},"content":"    private static final Event VALID_EVENT_1 \u003d new Event(\"Midterm Exam\", \"02:00\", \"04:00\",","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"larrywang0701"},"content":"            \"MPSH1\", \"Seat number is xxx.\");","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"larrywang0701"},"content":"    private static final Event VALID_EVENT_2 \u003d new Event(\"Another Midterm Exam\", \"04:00\", \"06:00\",","lastModifiedDate":"2023-10-12"},{"lineNumber":20,"author":{"gitId":"larrywang0701"},"content":"            \"MPSH2\", \"Seat number is xxx.\");","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":22,"author":{"gitId":"larrywang0701"},"content":"    private Model model;","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":24,"author":{"gitId":"larrywang0701"},"content":"    @BeforeEach","lastModifiedDate":"2023-10-12"},{"lineNumber":25,"author":{"gitId":"larrywang0701"},"content":"    public void setUp() {","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"larrywang0701"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-12"},{"lineNumber":27,"author":{"gitId":"larrywang0701"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":28,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":29,"author":{"gitId":"larrywang0701"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":30,"author":{"gitId":"larrywang0701"},"content":"    public void execute_correctCommand_success() {","lastModifiedDate":"2023-10-12"},{"lineNumber":31,"author":{"gitId":"larrywang0701"},"content":"        model.findPersonByUserFriendlyId(1).addEvent(VALID_EVENT_0);","lastModifiedDate":"2023-10-12"},{"lineNumber":32,"author":{"gitId":"larrywang0701"},"content":"        model.findPersonByUserFriendlyId(2).addEvent(VALID_EVENT_1);","lastModifiedDate":"2023-10-12"},{"lineNumber":33,"author":{"gitId":"larrywang0701"},"content":"        model.findPersonByUserFriendlyId(2).addEvent(VALID_EVENT_2);","lastModifiedDate":"2023-10-12"},{"lineNumber":34,"author":{"gitId":"larrywang0701"},"content":"        assertCommandSuccess(() -\u003e new ListEventCommand().execute(model));","lastModifiedDate":"2023-10-12"},{"lineNumber":35,"author":{"gitId":"larrywang0701"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":36,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":37,"author":{"gitId":"larrywang0701"},"content":"    private void assertCommandSuccess(ThrowingSupplier\u003cCommandResult\u003e function) {","lastModifiedDate":"2023-10-12"},{"lineNumber":38,"author":{"gitId":"larrywang0701"},"content":"        try {","lastModifiedDate":"2023-10-12"},{"lineNumber":39,"author":{"gitId":"larrywang0701"},"content":"            function.get();","lastModifiedDate":"2023-10-12"},{"lineNumber":40,"author":{"gitId":"larrywang0701"},"content":"        } catch (Throwable e) {","lastModifiedDate":"2023-10-12"},{"lineNumber":41,"author":{"gitId":"larrywang0701"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", e);","lastModifiedDate":"2023-10-12"},{"lineNumber":42,"author":{"gitId":"larrywang0701"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":43,"author":{"gitId":"larrywang0701"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":44,"author":{"gitId":"larrywang0701"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"larrywang0701":44}},{"path":"src/test/java/seedu/address/logic/parser/AddCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"larrywang0701"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"larrywang0701"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"larrywang0701"},"content":"import org.junit.jupiter.api.function.ThrowingSupplier;","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"larrywang0701"},"content":"import seedu.address.logic.commands.AddEventCommand;","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"larrywang0701"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"larrywang0701"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"larrywang0701"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class AddCommandParserTest {","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"larrywang0701"},"content":"    private AddCommandParser parser \u003d new AddCommandParser();","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"larrywang0701"},"content":"    public void execute_correctCommand_success() throws CommandException {","lastModifiedDate":"2023-10-12"},{"lineNumber":22,"author":{"gitId":"larrywang0701"},"content":"        assertParseSuccessWithCommand(() -\u003e parser.parse(\" \"","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"larrywang0701"},"content":"                + AddEventCommand.SECONDARY_COMMAND_WORD + \" -id 1 -en aa -st 00:01\"), AddEventCommand.class.getName());","lastModifiedDate":"2023-10-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":27,"author":{"gitId":"larrywang0701"},"content":"    public void execute_commandNotFound_fails() throws CommandException {","lastModifiedDate":"2023-10-12"},{"lineNumber":28,"author":{"gitId":"larrywang0701"},"content":"        assertParseFailedWithError(() -\u003e parser.parse(\" \"","lastModifiedDate":"2023-10-12"},{"lineNumber":29,"author":{"gitId":"larrywang0701"},"content":"                + \" unknown_command 1 2 3\"), MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2023-10-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":33,"author":{"gitId":"larrywang0701"},"content":"    public void execute_commandFormatError_fails() throws CommandException {","lastModifiedDate":"2023-10-12"},{"lineNumber":34,"author":{"gitId":"larrywang0701"},"content":"        assertParseFailedWithError(() -\u003e parser.parse(\" \"","lastModifiedDate":"2023-10-12"},{"lineNumber":35,"author":{"gitId":"larrywang0701"},"content":"                + AddEventCommand.SECONDARY_COMMAND_WORD + \" -....\"),","lastModifiedDate":"2023-10-12"},{"lineNumber":36,"author":{"gitId":"larrywang0701"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddEventCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":39,"author":{"gitId":"larrywang0701"},"content":"    private void assertParseSuccessWithCommand(ThrowingSupplier\u003cCommand\u003e function, String commandClassName) {","lastModifiedDate":"2023-10-12"},{"lineNumber":40,"author":{"gitId":"larrywang0701"},"content":"        try {","lastModifiedDate":"2023-10-12"},{"lineNumber":41,"author":{"gitId":"larrywang0701"},"content":"            Command command \u003d function.get();","lastModifiedDate":"2023-10-12"},{"lineNumber":42,"author":{"gitId":"larrywang0701"},"content":"            assertEquals(command.getClass().getName(), commandClassName);","lastModifiedDate":"2023-10-12"},{"lineNumber":43,"author":{"gitId":"larrywang0701"},"content":"        } catch (Throwable e) {","lastModifiedDate":"2023-10-12"},{"lineNumber":44,"author":{"gitId":"larrywang0701"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", e);","lastModifiedDate":"2023-10-12"},{"lineNumber":45,"author":{"gitId":"larrywang0701"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":46,"author":{"gitId":"larrywang0701"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":48,"author":{"gitId":"larrywang0701"},"content":"    private void assertParseFailedWithError(ThrowingSupplier\u003cCommand\u003e function, String errResult) {","lastModifiedDate":"2023-10-12"},{"lineNumber":49,"author":{"gitId":"larrywang0701"},"content":"        try {","lastModifiedDate":"2023-10-12"},{"lineNumber":50,"author":{"gitId":"larrywang0701"},"content":"            function.get();","lastModifiedDate":"2023-10-12"},{"lineNumber":51,"author":{"gitId":"larrywang0701"},"content":"        } catch (Throwable e) {","lastModifiedDate":"2023-10-12"},{"lineNumber":52,"author":{"gitId":"larrywang0701"},"content":"            if (!(e instanceof ParseException)) {","lastModifiedDate":"2023-10-12"},{"lineNumber":53,"author":{"gitId":"larrywang0701"},"content":"                throw new AssertionError(\"Execution of parser failed but not due to ParseException.\");","lastModifiedDate":"2023-10-12"},{"lineNumber":54,"author":{"gitId":"larrywang0701"},"content":"            }","lastModifiedDate":"2023-10-12"},{"lineNumber":55,"author":{"gitId":"larrywang0701"},"content":"            assertEquals(e.getMessage(), errResult);","lastModifiedDate":"2023-10-12"},{"lineNumber":56,"author":{"gitId":"larrywang0701"},"content":"            return;","lastModifiedDate":"2023-10-12"},{"lineNumber":57,"author":{"gitId":"larrywang0701"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":58,"author":{"gitId":"larrywang0701"},"content":"        throw new AssertionError(\"Execution of command should fail.\");","lastModifiedDate":"2023-10-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"larrywang0701":37,"-":23}},{"path":"src/test/java/seedu/address/logic/parser/AddPersonCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2017-12-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2017-12-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-07-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-07-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-07-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-07-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2018-07-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-07-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-14"},{"lineNumber":39,"author":{"gitId":"larrywang0701"},"content":"import seedu.address.logic.commands.AddPersonCommand;","lastModifiedDate":"2023-10-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-06-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-06-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-06-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-06-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-06-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":48,"author":{"gitId":"larrywang0701"},"content":"public class AddPersonCommandParserTest {","lastModifiedDate":"2023-10-12"},{"lineNumber":49,"author":{"gitId":"larrywang0701"},"content":"    private AddPersonCommandParser parser \u003d new AddPersonCommandParser();","lastModifiedDate":"2023-10-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(BOB).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2018-07-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // whitespace only preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":57,"author":{"gitId":"larrywang0701"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND, new AddPersonCommand(expectedPerson));","lastModifiedDate":"2023-10-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // multiple tags - all accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        Person expectedPersonMultipleTags \u003d new PersonBuilder(BOB).withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND)","lastModifiedDate":"2018-07-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-07-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser,","lastModifiedDate":"2023-07-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2023-07-14"},{"lineNumber":65,"author":{"gitId":"larrywang0701"},"content":"                new AddPersonCommand(expectedPersonMultipleTags));","lastModifiedDate":"2023-10-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-07-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-07-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void parse_repeatedNonTagValue_failure() {","lastModifiedDate":"2023-07-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        String validExpectedPersonString \u003d NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2023-07-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND;","lastModifiedDate":"2023-07-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // multiple names","lastModifiedDate":"2023-07-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME));","lastModifiedDate":"2023-07-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // multiple phones","lastModifiedDate":"2023-07-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, PHONE_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        // multiple emails","lastModifiedDate":"2023-07-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, EMAIL_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":83,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_EMAIL));","lastModifiedDate":"2023-07-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        // multiple addresses","lastModifiedDate":"2023-07-14"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, ADDRESS_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_ADDRESS));","lastModifiedDate":"2023-07-14"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // multiple fields repeated","lastModifiedDate":"2023-07-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2023-07-14"},{"lineNumber":91,"author":{"gitId":"-"},"content":"                validExpectedPersonString + PHONE_DESC_AMY + EMAIL_DESC_AMY + NAME_DESC_AMY + ADDRESS_DESC_AMY","lastModifiedDate":"2023-07-14"},{"lineNumber":92,"author":{"gitId":"-"},"content":"                        + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":93,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME, PREFIX_ADDRESS, PREFIX_EMAIL, PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        // invalid value followed by valid value","lastModifiedDate":"2023-07-14"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2023-07-14"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME));","lastModifiedDate":"2023-07-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2023-07-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_EMAIL_DESC + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_EMAIL));","lastModifiedDate":"2023-07-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2023-07-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_PHONE_DESC + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        // invalid address","lastModifiedDate":"2023-07-14"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_ADDRESS_DESC + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":111,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_ADDRESS));","lastModifiedDate":"2023-07-14"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        // valid value followed by invalid value","lastModifiedDate":"2023-07-14"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2023-07-14"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_NAME_DESC,","lastModifiedDate":"2023-07-14"},{"lineNumber":117,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME));","lastModifiedDate":"2023-07-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2023-07-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_EMAIL_DESC,","lastModifiedDate":"2023-07-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_EMAIL));","lastModifiedDate":"2023-07-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2023-07-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_PHONE_DESC,","lastModifiedDate":"2023-07-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        // invalid address","lastModifiedDate":"2023-07-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_ADDRESS_DESC,","lastModifiedDate":"2023-07-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_ADDRESS));","lastModifiedDate":"2023-07-14"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public void parse_optionalFieldsMissing_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        // zero tags","lastModifiedDate":"2017-06-15"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withTags().build();","lastModifiedDate":"2018-07-25"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY + ADDRESS_DESC_AMY,","lastModifiedDate":"2017-12-23"},{"lineNumber":137,"author":{"gitId":"larrywang0701"},"content":"                new AddPersonCommand(expectedPerson));","lastModifiedDate":"2023-10-12"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":142,"author":{"gitId":"larrywang0701"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddPersonCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-10-12"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        // missing name prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        // missing phone prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + VALID_PHONE_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        // missing email prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + VALID_EMAIL_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        // missing address prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + VALID_ADDRESS_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        // all prefixes missing","lastModifiedDate":"2017-06-15"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + VALID_PHONE_BOB + VALID_EMAIL_BOB + VALID_ADDRESS_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-06-15"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2017-06-15"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + INVALID_PHONE_DESC + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2017-06-15"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + INVALID_EMAIL_DESC + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        // invalid address","lastModifiedDate":"2017-06-15"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_ADDRESS_DESC","lastModifiedDate":"2017-12-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        // invalid tag","lastModifiedDate":"2017-06-15"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"                + INVALID_TAG_DESC + VALID_TAG_FRIEND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2017-06-15"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_ADDRESS_DESC,","lastModifiedDate":"2017-12-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        // non-empty preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2017-12-23"},{"lineNumber":194,"author":{"gitId":"larrywang0701"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddPersonCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-12"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":196,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"larrywang0701":8,"-":188}},{"path":"src/test/java/seedu/address/logic/parser/AddressBookParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-07-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-06-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":16,"author":{"gitId":"larrywang0701"},"content":"import seedu.address.logic.commands.AddPersonCommand;","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"larrywang0701"},"content":"import seedu.address.logic.commands.DeletePersonCommand;","lastModifiedDate":"2023-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-06-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2023-10-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2023-10-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"larrywang0701"},"content":"import seedu.address.logic.commands.ListPersonCommand;","lastModifiedDate":"2023-10-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonUtil;","lastModifiedDate":"2017-06-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"public class AddressBookParserTest {","lastModifiedDate":"2017-07-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private final AddressBookParser parser \u003d new AddressBookParser();","lastModifiedDate":"2017-07-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void parseCommand_add() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"larrywang0701"},"content":"        AddPersonCommand command \u003d (AddPersonCommand) parser.parseCommand(PersonUtil.getAddCommand(person));","lastModifiedDate":"2023-10-12"},{"lineNumber":42,"author":{"gitId":"larrywang0701"},"content":"        assertEquals(new AddPersonCommand(person), command);","lastModifiedDate":"2023-10-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD) instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD + \" 3\") instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void parseCommand_delete() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"larrywang0701"},"content":"        DeletePersonCommand command \u003d (DeletePersonCommand) parser.parseCommand(","lastModifiedDate":"2023-10-12"},{"lineNumber":54,"author":{"gitId":"larrywang0701"},"content":"                DeleteCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2023-10-12"},{"lineNumber":55,"author":{"gitId":"larrywang0701"},"content":"                        + DeletePersonCommand.SECONDARY_COMMAND_WORD","lastModifiedDate":"2023-10-12"},{"lineNumber":56,"author":{"gitId":"larrywang0701"},"content":"                        + \" \" + INDEX_FIRST_PERSON.getOneBased());","lastModifiedDate":"2023-10-12"},{"lineNumber":57,"author":{"gitId":"larrywang0701"},"content":"        assertEquals(new DeletePersonCommand(INDEX_FIRST_PERSON), command);","lastModifiedDate":"2023-10-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void parseCommand_edit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(person).build();","lastModifiedDate":"2017-06-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        EditCommand command \u003d (EditCommand) parser.parseCommand(EditCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                + INDEX_FIRST_PERSON.getOneBased() + \" \" + PersonUtil.getEditPersonDescriptorDetails(descriptor));","lastModifiedDate":"2018-03-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertEquals(new EditCommand(INDEX_FIRST_PERSON, descriptor), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void parseCommand_find() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2017-06-12"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        FindCommand command \u003d (FindCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"                FindCommand.COMMAND_WORD + \" \" + keywords.stream().collect(Collectors.joining(\" \")));","lastModifiedDate":"2017-06-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertEquals(new FindCommand(new NameContainsKeywordsPredicate(keywords)), command);","lastModifiedDate":"2017-06-12"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void parseCommand_list() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"larrywang0701"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD","lastModifiedDate":"2023-10-12"},{"lineNumber":92,"author":{"gitId":"larrywang0701"},"content":"                + \" \" + ListPersonCommand.SECONDARY_COMMAND_WORD) instanceof ListCommand);","lastModifiedDate":"2023-10-12"},{"lineNumber":93,"author":{"gitId":"larrywang0701"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD","lastModifiedDate":"2023-10-12"},{"lineNumber":94,"author":{"gitId":"larrywang0701"},"content":"                + \" \" + ListPersonCommand.SECONDARY_COMMAND_WORD + \" 3\") instanceof ListCommand);","lastModifiedDate":"2023-10-12"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2019-03-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"larrywang0701":14,"-":93}},{"path":"src/test/java/seedu/address/logic/parser/DeleteCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"larrywang0701"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"larrywang0701"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"larrywang0701"},"content":"import org.junit.jupiter.api.function.ThrowingSupplier;","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"larrywang0701"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"larrywang0701"},"content":"import seedu.address.logic.commands.DeleteEventCommand;","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"larrywang0701"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"larrywang0701"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class DeleteCommandParserTest {","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private DeleteCommandParser parser \u003d new DeleteCommandParser();","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":20,"author":{"gitId":"larrywang0701"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"larrywang0701"},"content":"    public void execute_correctCommand_success() throws CommandException {","lastModifiedDate":"2023-10-12"},{"lineNumber":22,"author":{"gitId":"larrywang0701"},"content":"        assertParseSuccessWithCommand(() -\u003e parser.parse(\" \"","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"larrywang0701"},"content":"                + DeleteEventCommand.SECONDARY_COMMAND_WORD + \" -id 1 -eid 1\"), DeleteEventCommand.class.getName());","lastModifiedDate":"2023-10-12"},{"lineNumber":24,"author":{"gitId":"larrywang0701"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":25,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":27,"author":{"gitId":"larrywang0701"},"content":"    public void execute_commandNotFound_fails() throws CommandException {","lastModifiedDate":"2023-10-12"},{"lineNumber":28,"author":{"gitId":"larrywang0701"},"content":"        assertParseFailedWithError(() -\u003e parser.parse(\" \"","lastModifiedDate":"2023-10-12"},{"lineNumber":29,"author":{"gitId":"larrywang0701"},"content":"                + \" unknown_command 1 2 3\"), MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2023-10-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":33,"author":{"gitId":"larrywang0701"},"content":"    public void execute_commandFormatError_fails() throws CommandException {","lastModifiedDate":"2023-10-12"},{"lineNumber":34,"author":{"gitId":"larrywang0701"},"content":"        assertParseFailedWithError(() -\u003e parser.parse(\" \"","lastModifiedDate":"2023-10-12"},{"lineNumber":35,"author":{"gitId":"larrywang0701"},"content":"                + DeleteEventCommand.SECONDARY_COMMAND_WORD + \" -....\"),","lastModifiedDate":"2023-10-12"},{"lineNumber":36,"author":{"gitId":"larrywang0701"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteEventCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-12"},{"lineNumber":37,"author":{"gitId":"larrywang0701"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":38,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":39,"author":{"gitId":"larrywang0701"},"content":"    private void assertParseSuccessWithCommand(ThrowingSupplier\u003cCommand\u003e function, String commandClassName) {","lastModifiedDate":"2023-10-12"},{"lineNumber":40,"author":{"gitId":"larrywang0701"},"content":"        try {","lastModifiedDate":"2023-10-12"},{"lineNumber":41,"author":{"gitId":"larrywang0701"},"content":"            Command command \u003d function.get();","lastModifiedDate":"2023-10-12"},{"lineNumber":42,"author":{"gitId":"larrywang0701"},"content":"            assertEquals(command.getClass().getName(), commandClassName);","lastModifiedDate":"2023-10-12"},{"lineNumber":43,"author":{"gitId":"larrywang0701"},"content":"        } catch (Throwable e) {","lastModifiedDate":"2023-10-12"},{"lineNumber":44,"author":{"gitId":"larrywang0701"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", e);","lastModifiedDate":"2023-10-12"},{"lineNumber":45,"author":{"gitId":"larrywang0701"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":46,"author":{"gitId":"larrywang0701"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":47,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":48,"author":{"gitId":"larrywang0701"},"content":"    private void assertParseFailedWithError(ThrowingSupplier\u003cCommand\u003e function, String errResult) {","lastModifiedDate":"2023-10-12"},{"lineNumber":49,"author":{"gitId":"larrywang0701"},"content":"        try {","lastModifiedDate":"2023-10-12"},{"lineNumber":50,"author":{"gitId":"larrywang0701"},"content":"            function.get();","lastModifiedDate":"2023-10-12"},{"lineNumber":51,"author":{"gitId":"larrywang0701"},"content":"        } catch (Throwable e) {","lastModifiedDate":"2023-10-12"},{"lineNumber":52,"author":{"gitId":"larrywang0701"},"content":"            if (!(e instanceof ParseException)) {","lastModifiedDate":"2023-10-12"},{"lineNumber":53,"author":{"gitId":"larrywang0701"},"content":"                throw new AssertionError(\"Execution of parser failed but not due to ParseException.\");","lastModifiedDate":"2023-10-12"},{"lineNumber":54,"author":{"gitId":"larrywang0701"},"content":"            }","lastModifiedDate":"2023-10-12"},{"lineNumber":55,"author":{"gitId":"larrywang0701"},"content":"            assertEquals(e.getMessage(), errResult);","lastModifiedDate":"2023-10-12"},{"lineNumber":56,"author":{"gitId":"larrywang0701"},"content":"            return;","lastModifiedDate":"2023-10-12"},{"lineNumber":57,"author":{"gitId":"larrywang0701"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":58,"author":{"gitId":"larrywang0701"},"content":"        throw new AssertionError(\"Execution of command should fail.\");","lastModifiedDate":"2023-10-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"larrywang0701":43,"-":17}},{"path":"src/test/java/seedu/address/logic/parser/DeletePersonCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":10,"author":{"gitId":"larrywang0701"},"content":"import seedu.address.logic.commands.DeletePersonCommand;","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2017-06-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * outside of the DeleteCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2017-06-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * same path through the DeleteCommand, and therefore we test only one of them.","lastModifiedDate":"2017-06-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2017-06-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2017-06-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":19,"author":{"gitId":"larrywang0701"},"content":"public class DeletePersonCommandParserTest {","lastModifiedDate":"2023-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private DeleteCommandParser parser \u003d new DeleteCommandParser();","lastModifiedDate":"2017-06-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsDeleteCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"larrywang0701"},"content":"        assertParseSuccess(parser, \" contact 1\", new DeletePersonCommand(INDEX_FIRST_PERSON));","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":30,"author":{"gitId":"larrywang0701"},"content":"        assertParseFailure(parser, \" contact a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-10-12"},{"lineNumber":31,"author":{"gitId":"larrywang0701"},"content":"                DeletePersonCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-09"}],"authorContributionMap":{"larrywang0701":5,"-":28}},{"path":"src/test/java/seedu/address/logic/parser/ListCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"larrywang0701"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"larrywang0701"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"larrywang0701"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"larrywang0701"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"larrywang0701"},"content":"import org.junit.jupiter.api.function.ThrowingSupplier;","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"larrywang0701"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"larrywang0701"},"content":"import seedu.address.logic.commands.ListEventCommand;","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"larrywang0701"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"larrywang0701"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"larrywang0701"},"content":"public class ListCommandParserTest {","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"larrywang0701"},"content":"    private ListCommandParser parser \u003d new ListCommandParser();","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"larrywang0701"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":20,"author":{"gitId":"larrywang0701"},"content":"    public void execute_correctCommand_success() throws CommandException {","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"larrywang0701"},"content":"        assertParseSuccessWithCommand(() -\u003e parser.parse(\" \"","lastModifiedDate":"2023-10-12"},{"lineNumber":22,"author":{"gitId":"larrywang0701"},"content":"                + ListEventCommand.SECONDARY_COMMAND_WORD), ListEventCommand.class.getName());","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"larrywang0701"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":24,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":25,"author":{"gitId":"larrywang0701"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"larrywang0701"},"content":"    public void execute_commandNotFound_fails() throws CommandException {","lastModifiedDate":"2023-10-12"},{"lineNumber":27,"author":{"gitId":"larrywang0701"},"content":"        assertParseFailedWithError(() -\u003e parser.parse(\" \"","lastModifiedDate":"2023-10-12"},{"lineNumber":28,"author":{"gitId":"larrywang0701"},"content":"                + \" unknown_command 1 2 3\"), MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2023-10-12"},{"lineNumber":29,"author":{"gitId":"larrywang0701"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":30,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":31,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":32,"author":{"gitId":"larrywang0701"},"content":"    private void assertParseSuccessWithCommand(ThrowingSupplier\u003cCommand\u003e function, String commandClassName) {","lastModifiedDate":"2023-10-12"},{"lineNumber":33,"author":{"gitId":"larrywang0701"},"content":"        try {","lastModifiedDate":"2023-10-12"},{"lineNumber":34,"author":{"gitId":"larrywang0701"},"content":"            Command command \u003d function.get();","lastModifiedDate":"2023-10-12"},{"lineNumber":35,"author":{"gitId":"larrywang0701"},"content":"            assertEquals(command.getClass().getName(), commandClassName);","lastModifiedDate":"2023-10-12"},{"lineNumber":36,"author":{"gitId":"larrywang0701"},"content":"        } catch (Throwable e) {","lastModifiedDate":"2023-10-12"},{"lineNumber":37,"author":{"gitId":"larrywang0701"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", e);","lastModifiedDate":"2023-10-12"},{"lineNumber":38,"author":{"gitId":"larrywang0701"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":39,"author":{"gitId":"larrywang0701"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":40,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":41,"author":{"gitId":"larrywang0701"},"content":"    private void assertParseFailedWithError(ThrowingSupplier\u003cCommand\u003e function, String errResult) {","lastModifiedDate":"2023-10-12"},{"lineNumber":42,"author":{"gitId":"larrywang0701"},"content":"        try {","lastModifiedDate":"2023-10-12"},{"lineNumber":43,"author":{"gitId":"larrywang0701"},"content":"            function.get();","lastModifiedDate":"2023-10-12"},{"lineNumber":44,"author":{"gitId":"larrywang0701"},"content":"        } catch (Throwable e) {","lastModifiedDate":"2023-10-12"},{"lineNumber":45,"author":{"gitId":"larrywang0701"},"content":"            if (!(e instanceof ParseException)) {","lastModifiedDate":"2023-10-12"},{"lineNumber":46,"author":{"gitId":"larrywang0701"},"content":"                throw new AssertionError(\"Execution of parser failed but not due to ParseException.\");","lastModifiedDate":"2023-10-12"},{"lineNumber":47,"author":{"gitId":"larrywang0701"},"content":"            }","lastModifiedDate":"2023-10-12"},{"lineNumber":48,"author":{"gitId":"larrywang0701"},"content":"            assertEquals(e.getMessage(), errResult);","lastModifiedDate":"2023-10-12"},{"lineNumber":49,"author":{"gitId":"larrywang0701"},"content":"            return;","lastModifiedDate":"2023-10-12"},{"lineNumber":50,"author":{"gitId":"larrywang0701"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":51,"author":{"gitId":"larrywang0701"},"content":"        throw new AssertionError(\"Execution of command should fail.\");","lastModifiedDate":"2023-10-12"},{"lineNumber":52,"author":{"gitId":"larrywang0701"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":53,"author":{"gitId":"larrywang0701"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"larrywang0701":53}},{"path":"src/test/java/seedu/address/model/AddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-12-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2018-04-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-12-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2018-08-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-04-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class AddressBookTest {","lastModifiedDate":"2016-12-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2016-12-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2016-12-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), addressBook.getPersonList());","lastModifiedDate":"2016-12-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.resetData(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void resetData_withValidReadOnlyAddressBook_replacesData() {","lastModifiedDate":"2016-12-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        AddressBook newData \u003d getTypicalAddressBook();","lastModifiedDate":"2017-07-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        addressBook.resetData(newData);","lastModifiedDate":"2016-12-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(newData, addressBook);","lastModifiedDate":"2016-12-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void resetData_withDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // Two persons with the same identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2018-04-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-04-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e newPersons \u003d Arrays.asList(ALICE, editedAlice);","lastModifiedDate":"2018-04-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        AddressBookStub newData \u003d new AddressBookStub(newPersons);","lastModifiedDate":"2018-03-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e addressBook.resetData(newData));","lastModifiedDate":"2019-03-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.hasPerson(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertFalse(addressBook.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void hasPerson_personWithSameIdentityFieldsInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2018-08-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasPerson(editedAlice));","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void getPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e addressBook.getPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        String expected \u003d AddressBook.class.getCanonicalName() + \"{persons\u003d\" + addressBook.getPersonList() + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertEquals(expected, addressBook.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * A stub ReadOnlyAddressBook whose persons list can violate interface constraints.","lastModifiedDate":"2018-03-29"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    private static class AddressBookStub implements ReadOnlyAddressBook {","lastModifiedDate":"2016-12-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        private final ObservableList\u003cPerson\u003e persons \u003d FXCollections.observableArrayList();","lastModifiedDate":"2018-01-10"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        AddressBookStub(Collection\u003cPerson\u003e persons) {","lastModifiedDate":"2018-03-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            this.persons.setAll(persons);","lastModifiedDate":"2016-12-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-12-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            return persons;","lastModifiedDate":"2016-12-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":106,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":107,"author":{"gitId":"larrywang0701"},"content":"        @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":108,"author":{"gitId":"larrywang0701"},"content":"        public String eventListToString() {","lastModifiedDate":"2023-10-13"},{"lineNumber":109,"author":{"gitId":"larrywang0701"},"content":"            return \"\";","lastModifiedDate":"2023-10-13"},{"lineNumber":110,"author":{"gitId":"larrywang0701"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-24"}],"authorContributionMap":{"larrywang0701":5,"-":108}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedPersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.storage.JsonAdaptedPerson.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class JsonAdaptedPersonTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d BENSON.getName().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d BENSON.getPhone().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d BENSON.getEmail().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d BENSON.getAddress().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final List\u003cJsonAdaptedTag\u003e VALID_TAGS \u003d BENSON.getTags().stream()","lastModifiedDate":"2023-10-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            .map(JsonAdaptedTag::new)","lastModifiedDate":"2023-10-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2023-10-12"},{"lineNumber":34,"author":{"gitId":"larrywang0701"},"content":"    private static final List\u003cJsonAdaptedNote\u003e VALID_NOTES \u003d BENSON.getNotes().stream()","lastModifiedDate":"2023-10-12"},{"lineNumber":35,"author":{"gitId":"larrywang0701"},"content":"            .map(JsonAdaptedNote::new)","lastModifiedDate":"2023-10-12"},{"lineNumber":36,"author":{"gitId":"larrywang0701"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2023-10-12"},{"lineNumber":37,"author":{"gitId":"larrywang0701"},"content":"    private static final List\u003cJsonAdaptedEvent\u003e VALID_EVENTS \u003d BENSON.getEvents().stream()","lastModifiedDate":"2023-10-12"},{"lineNumber":38,"author":{"gitId":"larrywang0701"},"content":"            .map(JsonAdaptedEvent::new)","lastModifiedDate":"2023-10-12"},{"lineNumber":39,"author":{"gitId":"larrywang0701"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2023-10-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void toModelType_validPersonDetails_returnsPerson() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(BENSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertEquals(BENSON, person.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"larrywang0701"},"content":"                new JsonAdaptedPerson(INVALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_TAGS,","lastModifiedDate":"2023-10-12"},{"lineNumber":51,"author":{"gitId":"larrywang0701"},"content":"                        VALID_NOTES, VALID_EVENTS);","lastModifiedDate":"2023-10-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"larrywang0701"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(null, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_TAGS,","lastModifiedDate":"2023-10-12"},{"lineNumber":59,"author":{"gitId":"larrywang0701"},"content":"                VALID_NOTES, VALID_EVENTS);","lastModifiedDate":"2023-10-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"larrywang0701"},"content":"                new JsonAdaptedPerson(VALID_NAME, INVALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_TAGS,","lastModifiedDate":"2023-10-12"},{"lineNumber":68,"author":{"gitId":"larrywang0701"},"content":"                        VALID_NOTES, VALID_EVENTS);","lastModifiedDate":"2023-10-12"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Phone.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void toModelType_nullPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"larrywang0701"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, null, VALID_EMAIL, VALID_ADDRESS, VALID_TAGS,","lastModifiedDate":"2023-10-12"},{"lineNumber":76,"author":{"gitId":"larrywang0701"},"content":"                VALID_NOTES, VALID_EVENTS);","lastModifiedDate":"2023-10-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void toModelType_invalidEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"larrywang0701"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, INVALID_EMAIL, VALID_ADDRESS, VALID_TAGS,","lastModifiedDate":"2023-10-12"},{"lineNumber":85,"author":{"gitId":"larrywang0701"},"content":"                        VALID_NOTES, VALID_EVENTS);","lastModifiedDate":"2023-10-12"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Email.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public void toModelType_nullEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"larrywang0701"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, null, VALID_ADDRESS, VALID_TAGS,","lastModifiedDate":"2023-10-12"},{"lineNumber":93,"author":{"gitId":"larrywang0701"},"content":"                VALID_NOTES, VALID_EVENTS);","lastModifiedDate":"2023-10-12"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public void toModelType_invalidAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"larrywang0701"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, INVALID_ADDRESS, VALID_TAGS,","lastModifiedDate":"2023-10-12"},{"lineNumber":102,"author":{"gitId":"larrywang0701"},"content":"                        VALID_NOTES, VALID_EVENTS);","lastModifiedDate":"2023-10-12"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Address.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public void toModelType_nullAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"larrywang0701"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, null, VALID_TAGS,","lastModifiedDate":"2023-10-12"},{"lineNumber":110,"author":{"gitId":"larrywang0701"},"content":"                VALID_NOTES, VALID_EVENTS);","lastModifiedDate":"2023-10-12"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public void toModelType_invalidTags_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        List\u003cJsonAdaptedTag\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        invalidTags.add(new JsonAdaptedTag(INVALID_TAG));","lastModifiedDate":"2018-08-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":120,"author":{"gitId":"larrywang0701"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, invalidTags,","lastModifiedDate":"2023-10-12"},{"lineNumber":121,"author":{"gitId":"larrywang0701"},"content":"                        VALID_NOTES, VALID_EVENTS);","lastModifiedDate":"2023-10-12"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"larrywang0701":24,"-":101}},{"path":"src/test/java/seedu/address/testutil/PersonBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":3,"author":{"gitId":"larrywang0701"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-12-20"},{"lineNumber":5,"author":{"gitId":"larrywang0701"},"content":"import java.util.List;","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-04-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":8,"author":{"gitId":"larrywang0701"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"larrywang0701"},"content":"import seedu.address.model.note.Note;","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-01-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-01-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-01-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-04-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-01-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-04-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2017-04-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * A utility class to help with building Person objects.","lastModifiedDate":"2017-04-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class PersonBuilder {","lastModifiedDate":"2016-09-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2020-12-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_PHONE \u003d \"85355255\";","lastModifiedDate":"2017-04-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_EMAIL \u003d \"amy@gmail.com\";","lastModifiedDate":"2020-12-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_ADDRESS \u003d \"123, Jurong West Ave 6, #08-111\";","lastModifiedDate":"2017-04-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Address address;","lastModifiedDate":"2017-12-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-12-20"},{"lineNumber":33,"author":{"gitId":"larrywang0701"},"content":"    private List\u003cNote\u003e notes;","lastModifiedDate":"2023-10-12"},{"lineNumber":34,"author":{"gitId":"larrywang0701"},"content":"    private List\u003cEvent\u003e events;","lastModifiedDate":"2023-10-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonBuilder} with the default details.","lastModifiedDate":"2020-05-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public PersonBuilder() {","lastModifiedDate":"2017-08-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2017-12-20"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2017-12-20"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        email \u003d new Email(DEFAULT_EMAIL);","lastModifiedDate":"2017-12-20"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        address \u003d new Address(DEFAULT_ADDRESS);","lastModifiedDate":"2017-12-20"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":45,"author":{"gitId":"larrywang0701"},"content":"        notes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-12"},{"lineNumber":46,"author":{"gitId":"larrywang0701"},"content":"        events \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-11"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Initializes the PersonBuilder with the data of {@code personToCopy}.","lastModifiedDate":"2016-12-11"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-11"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public PersonBuilder(Person personToCopy) {","lastModifiedDate":"2018-01-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        name \u003d personToCopy.getName();","lastModifiedDate":"2017-12-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        phone \u003d personToCopy.getPhone();","lastModifiedDate":"2017-12-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        email \u003d personToCopy.getEmail();","lastModifiedDate":"2017-12-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        address \u003d personToCopy.getAddress();","lastModifiedDate":"2017-12-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e(personToCopy.getTags());","lastModifiedDate":"2017-12-20"},{"lineNumber":58,"author":{"gitId":"larrywang0701"},"content":"        notes \u003d new ArrayList\u003c\u003e(personToCopy.getNotes());","lastModifiedDate":"2023-10-12"},{"lineNumber":59,"author":{"gitId":"larrywang0701"},"content":"        events \u003d new ArrayList\u003c\u003e(personToCopy.getEvents());","lastModifiedDate":"2023-10-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-11"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-11"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public PersonBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2017-12-20"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public PersonBuilder withTags(String ... tags) {","lastModifiedDate":"2017-08-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2017-12-20"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Sets the {@code Address} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public PersonBuilder withAddress(String address) {","lastModifiedDate":"2017-08-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        this.address \u003d new Address(address);","lastModifiedDate":"2017-12-20"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public PersonBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        this.phone \u003d new Phone(phone);","lastModifiedDate":"2017-12-20"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public PersonBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        this.email \u003d new Email(email);","lastModifiedDate":"2017-12-20"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public Person build() {","lastModifiedDate":"2017-04-05"},{"lineNumber":103,"author":{"gitId":"larrywang0701"},"content":"        return new Person(name, phone, email, address, tags, notes, events);","lastModifiedDate":"2023-10-12"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":106,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-03"}],"authorContributionMap":{"larrywang0701":11,"-":95}},{"path":"src/test/java/seedu/address/testutil/PersonUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-03-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"larrywang0701"},"content":"import seedu.address.logic.commands.AddPersonCommand;","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2018-03-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-03-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-04-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * A utility class for Person.","lastModifiedDate":"2017-04-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-04-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class PersonUtil {","lastModifiedDate":"2017-04-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Returns an add command string for adding the {@code person}.","lastModifiedDate":"2017-04-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static String getAddCommand(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":26,"author":{"gitId":"larrywang0701"},"content":"        return AddCommand.COMMAND_WORD + \" \" + AddPersonCommand.SECONDARY_COMMAND_WORD + \" \" + getPersonDetails(person);","lastModifiedDate":"2023-10-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code person}\u0027s details.","lastModifiedDate":"2017-04-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static String getPersonDetails(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-04-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_NAME + person.getName().fullName + \" \");","lastModifiedDate":"2017-06-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_PHONE + person.getPhone().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_EMAIL + person.getEmail().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_ADDRESS + person.getAddress().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        person.getTags().stream().forEach(","lastModifiedDate":"2017-05-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            s -\u003e sb.append(PREFIX_TAG + s.tagName + \" \")","lastModifiedDate":"2017-05-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        );","lastModifiedDate":"2017-05-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-04-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code EditPersonDescriptor}\u0027s details.","lastModifiedDate":"2018-03-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static String getEditPersonDescriptorDetails(EditPersonDescriptor descriptor) {","lastModifiedDate":"2018-03-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2018-03-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        descriptor.getName().ifPresent(name -\u003e sb.append(PREFIX_NAME).append(name.fullName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        descriptor.getPhone().ifPresent(phone -\u003e sb.append(PREFIX_PHONE).append(phone.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        descriptor.getEmail().ifPresent(email -\u003e sb.append(PREFIX_EMAIL).append(email.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        descriptor.getAddress().ifPresent(address -\u003e sb.append(PREFIX_ADDRESS).append(address.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        if (descriptor.getTags().isPresent()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            Set\u003cTag\u003e tags \u003d descriptor.getTags().get();","lastModifiedDate":"2018-03-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            if (tags.isEmpty()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"                sb.append(PREFIX_TAG);","lastModifiedDate":"2018-03-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2018-03-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"                tags.forEach(s -\u003e sb.append(PREFIX_TAG).append(s.tagName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-03-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2018-03-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-04-05"}],"authorContributionMap":{"larrywang0701":2,"-":61}}]

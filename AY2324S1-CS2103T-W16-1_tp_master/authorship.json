[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Nixx162"},"content":"[![CI Status](https://github.com/AY2324S1-CS2103T-W16-1/tp/actions/workflows/gradle.yml/badge.svg)](https://github.com/AY2324S1-CS2103T-W16-1/tp/actions)","lastModifiedDate":"2023-10-06"},{"lineNumber":2,"author":{"gitId":"larrywang0701"},"content":"[![codecov](https://codecov.io/gh/AY2324S1-CS2103T-W16-1/tp/branch/master/graph/badge.svg?token\u003dKEJTLP53IM)](https://codecov.io/gh/AY2324S1-CS2103T-W16-1/tp)","lastModifiedDate":"2023-11-10"},{"lineNumber":3,"author":{"gitId":"Nixx162"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":4,"author":{"gitId":"Nixx162"},"content":"# KeepInTouch","lastModifiedDate":"2023-10-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"Nixx162"},"content":"KeepInTouch is a **Desktop** application developed for jobseekers. It is meant to help them track connections in their professional network, along with events related to their professional development.","lastModifiedDate":"2023-10-06"},{"lineNumber":9,"author":{"gitId":"Nixx162"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":10,"author":{"gitId":"Nixx162"},"content":"For a more detailed documentation of this project, please visit our **[product website](https://ay2324s1-cs2103t-w16-1.github.io/tp)**.","lastModifiedDate":"2023-10-06"},{"lineNumber":11,"author":{"gitId":"Nixx162"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":12,"author":{"gitId":"Nixx162"},"content":"## Acknowledgement","lastModifiedDate":"2023-10-06"},{"lineNumber":13,"author":{"gitId":"Nixx162"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":14,"author":{"gitId":"Nixx162"},"content":"This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2023-10-06"}],"authorContributionMap":{"larrywang0701":1,"-":3,"Nixx162":10}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2016-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2022-06-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2016-12-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027jacoco\u0027","lastModifiedDate":"2020-08-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"mainClassName \u003d \u0027seedu.address.Main\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"sourceCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"targetCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2018-04-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-04-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2018-03-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2018-03-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    finalizedBy jacocoTestReport","lastModifiedDate":"2020-08-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-08-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"task coverage(type: JacocoReport) {","lastModifiedDate":"2020-08-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)","lastModifiedDate":"2020-08-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    classDirectories.from files(sourceSets.main.output)","lastModifiedDate":"2020-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    executionData.from files(jacocoTestReport.executionData)","lastModifiedDate":"2020-08-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    afterEvaluate {","lastModifiedDate":"2020-08-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        classDirectories.from files(classDirectories.files.collect {","lastModifiedDate":"2020-08-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])","lastModifiedDate":"2020-08-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        })","lastModifiedDate":"2020-08-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    reports {","lastModifiedDate":"2020-08-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        html.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        xml.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    String jUnitVersion \u003d \u00275.4.0\u0027","lastModifiedDate":"2019-02-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2023-07-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.7.0\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.7.4\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2016-08-29"},{"lineNumber":69,"author":{"gitId":"zekone"},"content":"    archiveFileName \u003d \u0027keepintouch.jar\u0027","lastModifiedDate":"2023-11-10"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"Nixx162"},"content":"run {","lastModifiedDate":"2023-10-30"},{"lineNumber":73,"author":{"gitId":"Nixx162"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2023-10-30"},{"lineNumber":74,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-10-30"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":76,"author":{"gitId":"-"},"content":"defaultTasks \u0027clean\u0027, \u0027test\u0027","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"zekone":1,"-":73,"Nixx162":2}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  layout: default.md","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  title: \"About Us\"","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"# About Us","lastModifiedDate":"2023-09-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"Nixx162"},"content":"### Andrew Daniel Janong","lastModifiedDate":"2023-10-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"Nixx162"},"content":"\u003cimg src\u003d\"images/andrewjanong.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-10-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"Nixx162"},"content":"[[github](https://github.com/andrewjanong)]","lastModifiedDate":"2023-10-07"},{"lineNumber":17,"author":{"gitId":"Nixx162"},"content":"[[portfolio](team/andrewjanong.md)]","lastModifiedDate":"2023-10-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"Nixx162"},"content":"* Role: Developer","lastModifiedDate":"2023-10-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"Nixx162"},"content":"### Ho Khee Wei","lastModifiedDate":"2023-10-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"Nixx162"},"content":"\u003cimg src\u003d\"images/zekone.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-10-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"Nixx162"},"content":"[[github](http://github.com/zekone)]","lastModifiedDate":"2023-10-07"},{"lineNumber":26,"author":{"gitId":"Nixx162"},"content":"[[portfolio](team/zekone.md)]","lastModifiedDate":"2023-10-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"Nixx162"},"content":"* Role: Developer","lastModifiedDate":"2023-10-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"Nixx162"},"content":"### Joseph Oliver Lim","lastModifiedDate":"2023-10-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"Nixx162"},"content":"\u003cimg src\u003d\"images/josepholim.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-10-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"josepholim"},"content":"[[github](http://github.com/josepholim)]","lastModifiedDate":"2023-11-13"},{"lineNumber":35,"author":{"gitId":"josepholim"},"content":"[[portfolio](team/josepholim.md)]","lastModifiedDate":"2023-11-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"Nixx162"},"content":"### Nicholas Jimmy Alden","lastModifiedDate":"2023-10-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"Nixx162"},"content":"\u003cimg src\u003d\"images/nixx162.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-10-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"Nixx162"},"content":"[[github](http://github.com/nixx162)]","lastModifiedDate":"2023-10-07"},{"lineNumber":44,"author":{"gitId":"Nixx162"},"content":"[[portfolio](team/nixx162.md)]","lastModifiedDate":"2023-10-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"Nixx162"},"content":"### Wang Zihan","lastModifiedDate":"2023-10-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"Nixx162"},"content":"\u003cimg src\u003d\"images/larrywang0701.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-10-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"Nixx162"},"content":"[[github](http://github.com/larrywang0701)]","lastModifiedDate":"2023-10-07"},{"lineNumber":53,"author":{"gitId":"Nixx162"},"content":"[[portfolio](team/larrywang0701.md)]","lastModifiedDate":"2023-10-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"-":33,"josepholim":2,"Nixx162":20}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  layout: default.md","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  title: \"Developer Guide\"","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"  pageNav: 3","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":7,"author":{"gitId":"zekone"},"content":"# KeepInTouch Developer Guide","lastModifiedDate":"2023-10-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":9,"author":{"gitId":"josepholim"},"content":"**_KeepInTouch_** is a desktop app for **managing contacts** for **job-seekers**. It can also help job-seekers to manage **events for career purposes.**","lastModifiedDate":"2023-11-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c!-- * Table of Contents --\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003cpage-nav-print /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":16,"author":{"gitId":"josepholim"},"content":"## Table of Contents","lastModifiedDate":"2023-11-13"},{"lineNumber":17,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":18,"author":{"gitId":"josepholim"},"content":"* [Table of Contents](#table-of-contents)","lastModifiedDate":"2023-11-13"},{"lineNumber":19,"author":{"gitId":"josepholim"},"content":"* [Acknowledgements](#acknowledgements)","lastModifiedDate":"2023-11-13"},{"lineNumber":20,"author":{"gitId":"josepholim"},"content":"* [Setting up and getting started](#setting-up-and-getting-started)","lastModifiedDate":"2023-11-13"},{"lineNumber":21,"author":{"gitId":"josepholim"},"content":"* [Design](#design)","lastModifiedDate":"2023-11-13"},{"lineNumber":22,"author":{"gitId":"josepholim"},"content":"    * [Architecture](#architecture)","lastModifiedDate":"2023-11-13"},{"lineNumber":23,"author":{"gitId":"josepholim"},"content":"    * [UI Component](#ui-component)","lastModifiedDate":"2023-11-13"},{"lineNumber":24,"author":{"gitId":"josepholim"},"content":"    * [Logic Component](#logic-component)","lastModifiedDate":"2023-11-13"},{"lineNumber":25,"author":{"gitId":"josepholim"},"content":"    * [Model Component](#model-component)","lastModifiedDate":"2023-11-13"},{"lineNumber":26,"author":{"gitId":"josepholim"},"content":"    * [Storage Component](#storage-component)","lastModifiedDate":"2023-11-13"},{"lineNumber":27,"author":{"gitId":"josepholim"},"content":"    * [Common Classes](#common-classes)","lastModifiedDate":"2023-11-13"},{"lineNumber":28,"author":{"gitId":"josepholim"},"content":"* [Implementation](#implementation)","lastModifiedDate":"2023-11-13"},{"lineNumber":29,"author":{"gitId":"josepholim"},"content":"    * [List Contact with Tags feature](#list-contact-with-tags-feature)","lastModifiedDate":"2023-11-13"},{"lineNumber":30,"author":{"gitId":"josepholim"},"content":"        * [Implementing `ListPersonCommandParser`](#implementing-listpersoncommandparser)","lastModifiedDate":"2023-11-13"},{"lineNumber":31,"author":{"gitId":"josepholim"},"content":"        * [Implementing `ListPersonCommand`](#implementing-listpersoncommand)","lastModifiedDate":"2023-11-13"},{"lineNumber":32,"author":{"gitId":"josepholim"},"content":"    * [Tag feature](#tag-feature)","lastModifiedDate":"2023-11-13"},{"lineNumber":33,"author":{"gitId":"josepholim"},"content":"        * [Overview: Tag](#overview-tag)","lastModifiedDate":"2023-11-13"},{"lineNumber":34,"author":{"gitId":"josepholim"},"content":"        * [Implementing `AddTagCommandParser` and `DeleteTagCommandParser`](#implementing-addtagcommandparser-and-deletetagcommandparser)","lastModifiedDate":"2023-11-13"},{"lineNumber":35,"author":{"gitId":"josepholim"},"content":"        * [Implementing `AddTagCommand`](#implementing-addtagcommand)","lastModifiedDate":"2023-11-13"},{"lineNumber":36,"author":{"gitId":"josepholim"},"content":"        * [Implementing `DeleteTagCommand`](#implementing-deletetagcommand)","lastModifiedDate":"2023-11-13"},{"lineNumber":37,"author":{"gitId":"josepholim"},"content":"        * [Design Considerations: Tag](#design-considerations-tag)","lastModifiedDate":"2023-11-13"},{"lineNumber":38,"author":{"gitId":"josepholim"},"content":"    * [Notes feature](#notes-feature)","lastModifiedDate":"2023-11-13"},{"lineNumber":39,"author":{"gitId":"josepholim"},"content":"        * [Overview: Note](#overview-note)","lastModifiedDate":"2023-11-13"},{"lineNumber":40,"author":{"gitId":"josepholim"},"content":"        * [Implementing `AddNoteCommandParser`](#implementing-addnotecommandparser)","lastModifiedDate":"2023-11-13"},{"lineNumber":41,"author":{"gitId":"josepholim"},"content":"        * [Implementing `DeleteNoteCommandParser`](#implementing-deletenotecommandparser)","lastModifiedDate":"2023-11-13"},{"lineNumber":42,"author":{"gitId":"josepholim"},"content":"        * [Implementing `AddNoteCommand`](#implementing-addnotecommand)","lastModifiedDate":"2023-11-13"},{"lineNumber":43,"author":{"gitId":"josepholim"},"content":"        * [Implementing `DeleteNoteCommand`](#implementing-deletenotecommand)","lastModifiedDate":"2023-11-13"},{"lineNumber":44,"author":{"gitId":"AndrewJanong"},"content":"    * [Events feature](#events-feature)","lastModifiedDate":"2023-11-13"},{"lineNumber":45,"author":{"gitId":"zekone"},"content":"      * [Overview: Event](#overview-event)","lastModifiedDate":"2023-11-14"},{"lineNumber":46,"author":{"gitId":"AndrewJanong"},"content":"      * [Implementing `AddEventCommandParser`](#implementing-addeventcommandparser)","lastModifiedDate":"2023-11-13"},{"lineNumber":47,"author":{"gitId":"larrywang0701"},"content":"      * [Implementing `ListEventCommandParser`](#implementing-listeventcommandparser)","lastModifiedDate":"2023-11-14"},{"lineNumber":48,"author":{"gitId":"AndrewJanong"},"content":"      * [Implementing `DeleteEventCommandParser`](#implementing-deleteeventcommandparser)","lastModifiedDate":"2023-11-13"},{"lineNumber":49,"author":{"gitId":"AndrewJanong"},"content":"      * [Implementing `AddEventCommand`](#implementing-addeventcommand)","lastModifiedDate":"2023-11-13"},{"lineNumber":50,"author":{"gitId":"larrywang0701"},"content":"      * [Implementing `ListEventCommand`](#implementing-listeventcommand)","lastModifiedDate":"2023-11-14"},{"lineNumber":51,"author":{"gitId":"AndrewJanong"},"content":"      * [Implementing `DeleteEventCommand`](#implementing-deleteeventcommand)","lastModifiedDate":"2023-11-13"},{"lineNumber":52,"author":{"gitId":"josepholim"},"content":"    * [Enhanced help feature](#enhanced-help-feature)","lastModifiedDate":"2023-11-13"},{"lineNumber":53,"author":{"gitId":"josepholim"},"content":"    * [[Proposed] Undo/redo feature](#proposed-undo-redo-feature)","lastModifiedDate":"2023-11-13"},{"lineNumber":54,"author":{"gitId":"josepholim"},"content":"        * [Proposed Implementation](#proposed-implementation)","lastModifiedDate":"2023-11-13"},{"lineNumber":55,"author":{"gitId":"josepholim"},"content":"        * [Design Considerations: Undo/redo](#design-considerations-undo-redo)","lastModifiedDate":"2023-11-13"},{"lineNumber":56,"author":{"gitId":"josepholim"},"content":"* [Documentation, logging, testing, configuration, dev-ops](#documentation-logging-testing-configuration-dev-ops)","lastModifiedDate":"2023-11-13"},{"lineNumber":57,"author":{"gitId":"josepholim"},"content":"* [Appendix A: Requirements](#appendix-a-requirements)","lastModifiedDate":"2023-11-13"},{"lineNumber":58,"author":{"gitId":"josepholim"},"content":"    * [Product Scope](#product-scope)","lastModifiedDate":"2023-11-13"},{"lineNumber":59,"author":{"gitId":"josepholim"},"content":"    * [User Stories](#user-stories)","lastModifiedDate":"2023-11-13"},{"lineNumber":60,"author":{"gitId":"josepholim"},"content":"    * [Use Cases](#use-cases)","lastModifiedDate":"2023-11-13"},{"lineNumber":61,"author":{"gitId":"josepholim"},"content":"    * [Non-Functional Requirements](#non-functional-requirements)","lastModifiedDate":"2023-11-13"},{"lineNumber":62,"author":{"gitId":"josepholim"},"content":"    * [Glossary](#glossary)","lastModifiedDate":"2023-11-13"},{"lineNumber":63,"author":{"gitId":"josepholim"},"content":"* [Appendix B: Instructions for manual testing](#appendix-b-instructions-for-manual-testing)","lastModifiedDate":"2023-11-13"},{"lineNumber":64,"author":{"gitId":"josepholim"},"content":"    * [Launch and shutdown](#launch-and-shutdown)","lastModifiedDate":"2023-11-13"},{"lineNumber":65,"author":{"gitId":"josepholim"},"content":"    * [Deleting a person](#deleting-a-person)","lastModifiedDate":"2023-11-13"},{"lineNumber":66,"author":{"gitId":"josepholim"},"content":"    * [Adding tag](#adding-tag)","lastModifiedDate":"2023-11-13"},{"lineNumber":67,"author":{"gitId":"josepholim"},"content":"    * [Deleting tag](#deleting-tag)","lastModifiedDate":"2023-11-13"},{"lineNumber":68,"author":{"gitId":"josepholim"},"content":"    * [Adding note](#adding-note)","lastModifiedDate":"2023-11-13"},{"lineNumber":69,"author":{"gitId":"josepholim"},"content":"    * [Deleting note](#deleting-note)","lastModifiedDate":"2023-11-13"},{"lineNumber":70,"author":{"gitId":"AndrewJanong"},"content":"    * [Adding event](#adding-event)","lastModifiedDate":"2023-11-13"},{"lineNumber":71,"author":{"gitId":"larrywang0701"},"content":"    * [Listing events](#listing-events)","lastModifiedDate":"2023-11-14"},{"lineNumber":72,"author":{"gitId":"AndrewJanong"},"content":"    * [Deleting event](#deleting-event)","lastModifiedDate":"2023-11-13"},{"lineNumber":73,"author":{"gitId":"josepholim"},"content":"* [Appendix C: Planned enhancements](#appendix-c-planned-enhancements)","lastModifiedDate":"2023-11-13"},{"lineNumber":74,"author":{"gitId":"josepholim"},"content":"    * [User Interface](#user-interface)","lastModifiedDate":"2023-11-13"},{"lineNumber":75,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":76,"author":{"gitId":"josepholim"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-11-13"},{"lineNumber":77,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":80,"author":{"gitId":"zekone"},"content":"This project is based on the [AddressBook Level-3](https://se-education.org/addressbook-level3/) project.","lastModifiedDate":"2023-11-13"},{"lineNumber":81,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":82,"author":{"gitId":"zekone"},"content":"Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2023-11-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":84,"author":{"gitId":"Nixx162"},"content":"https://github.com/rrice/java-string-similarity. Reused the sourcecode of this library to measure string similarity for the `help` command.","lastModifiedDate":"2023-11-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":86,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"josepholim"},"content":"## **Setting up and getting started**","lastModifiedDate":"2023-11-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ArchitectureDiagram.puml\" width\u003d\"280\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":104,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"zekone"},"content":"**`Main`** (consisting of classes [`Main`](https://github.com/AY2324S1-CS2103T-W16-1/tp/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/ay2324s1-cs2103t-w16-1/tp/blob/master/src/main/java/seedu/address/MainApp.java)) is in charge of the app launch and shut down.","lastModifiedDate":"2023-11-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"* At app launch, it initializes the other components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2023-09-03"},{"lineNumber":108,"author":{"gitId":"-"},"content":"* At shut down, it shuts down the other components and invokes cleanup methods where necessary.","lastModifiedDate":"2023-09-03"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"The bulk of the app\u0027s work is done by the following four components:","lastModifiedDate":"2023-09-03"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2023-09-03"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"Nixx162"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete contact 1`.","lastModifiedDate":"2023-11-12"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ArchitectureSequenceDiagram.puml\" width\u003d\"574\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":128,"author":{"gitId":"zekone"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point).","lastModifiedDate":"2023-11-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ComponentManagers.puml\" width\u003d\"300\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":134,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"josepholim"},"content":"### UI Component","lastModifiedDate":"2023-11-13"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"zekone"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/AY2324S1-CS2103T-W16-1/tp/blob/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2023-11-13"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UiClassDiagram.puml\" alt\u003d\"Structure of the UI Component\"/\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"Nixx162"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter`, etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2023-11-14"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"zekone"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/AY2324S1-CS2103T-W16-1/tp/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/AY2324S1-CS2103T-W16-1/tp/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2023-11-13"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":149,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":150,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":151,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component, as it displays `Person` object residing in the `Model`.","lastModifiedDate":"2021-07-31"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"josepholim"},"content":"### Logic Component","lastModifiedDate":"2023-11-13"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"zekone"},"content":"**API** : [`Logic.java`](https://github.com/AY2324S1-CS2103T-W16-1/tp/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2023-11-13"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/LogicClassDiagram.puml\" width\u003d\"550\"/\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"Nixx162"},"content":"The sequence diagram below illustrates the interactions within the `Logic` component, taking `execute(\"find John\")` API call as an example.","lastModifiedDate":"2023-11-14"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"Nixx162"},"content":"\u003cpuml src\u003d\"diagrams/FindSequenceDiagram.puml\" alt\u003d\"Interactions Inside the Logic Component for the `find John` Command\" /\u003e","lastModifiedDate":"2023-11-14"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":165,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"Nixx162"},"content":"**Note:** The lifeline for `FindCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2023-11-14"},{"lineNumber":168,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2023-09-03"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":172,"author":{"gitId":"Nixx162"},"content":"1. When `Logic` is called upon to execute a command, it is passed to an `AddressBookParser` object which in turn creates a parser that matches the command (e.g., `FindCommandParser`) and uses it to parse the command.","lastModifiedDate":"2023-11-14"},{"lineNumber":173,"author":{"gitId":"Nixx162"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `FindCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2023-11-14"},{"lineNumber":174,"author":{"gitId":"-"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to delete a person).","lastModifiedDate":"2023-09-03"},{"lineNumber":175,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2023-09-03"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":177,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":179,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ParserClasses.puml\" width\u003d\"600\"/\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":182,"author":{"gitId":"Nixx162"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":183,"author":{"gitId":"-"},"content":"* When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `AddressBookParser` returns back as a `Command` object.","lastModifiedDate":"2021-07-31"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":185,"author":{"gitId":"-"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-07-31"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":187,"author":{"gitId":"josepholim"},"content":"* Some commands contain secondary command, like `add contact`, `add note` and `add event`.","lastModifiedDate":"2023-11-14"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":189,"author":{"gitId":"josepholim"},"content":"    - In this case, the primary command parser (in the example it is `AddCommand`) will check the secondary command word and use the correspond secondary command parser (like `AddPersonCommandParser`, `AddEventCommandParser` and `AddNoteCommandParser`) to continue parsing the command.","lastModifiedDate":"2023-11-14"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":191,"author":{"gitId":"larrywang0701"},"content":"* The parser will turn the arguments in the command from raw `String` into corresponding Object. During this process, the parser also needs to check whether the arguments are valid or not.","lastModifiedDate":"2023-10-25"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":193,"author":{"gitId":"josepholim"},"content":"    - The parsing method for each types of arguments are mainly in `ParserUtil.java`","lastModifiedDate":"2023-11-14"},{"lineNumber":194,"author":{"gitId":"Nixx162"},"content":"    ","lastModifiedDate":"2023-11-14"},{"lineNumber":195,"author":{"gitId":"larrywang0701"},"content":"* If the command is correct in format, the parser will then return a Command Object for the execution of the command.","lastModifiedDate":"2023-10-25"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"josepholim"},"content":"### Model Component","lastModifiedDate":"2023-11-13"},{"lineNumber":198,"author":{"gitId":"zekone"},"content":"**API** : [`Model.java`](https://github.com/AY2324S1-CS2103T-W16-1/tp/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2023-11-13"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"Nixx162"},"content":"\u003cpuml src\u003d\"diagrams/ModelClassDiagram.puml\" width\u003d\"600\" /\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"Nixx162"},"content":"* stores the address book data i.e., all `Person` objects (which are contained in a `UniquePersonList` object) and all `Event` objects (which are contained in a `UniquePersonList` object).","lastModifiedDate":"2023-11-14"},{"lineNumber":206,"author":{"gitId":"Nixx162"},"content":"* stores the currently \u0027selected\u0027 `Person` and `Event` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e` and `ObservableList\u003cEvent\u003e`, respectively, that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2023-11-14"},{"lineNumber":207,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":208,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":210,"author":{"gitId":"josepholim"},"content":"### Storage Component","lastModifiedDate":"2023-11-13"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"zekone"},"content":"**API** : [`Storage.java`](https://github.com/AY2324S1-CS2103T-W16-1/tp/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2023-11-13"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/StorageClassDiagram.puml\" width\u003d\"550\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":216,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"* can save both address book data and user preference data in JSON format, and read them back into corresponding objects.","lastModifiedDate":"2023-09-03"},{"lineNumber":218,"author":{"gitId":"-"},"content":"* inherits from both `AddressBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2021-07-31"},{"lineNumber":219,"author":{"gitId":"zekone"},"content":"* depends on some classes in the `Model` component such as `Person`, `Note`, and `Event` because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`.","lastModifiedDate":"2023-10-27"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"josepholim"},"content":"### Common Classes","lastModifiedDate":"2023-11-13"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.addressbook.commons` package.","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"AndrewJanong"},"content":"### List Contact with Tags feature","lastModifiedDate":"2023-11-13"},{"lineNumber":232,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":233,"author":{"gitId":"AndrewJanong"},"content":"This feature allows users to filter the contact list by tags. It serves as an effective way to search through a long list of contacts.","lastModifiedDate":"2023-11-13"},{"lineNumber":234,"author":{"gitId":"AndrewJanong"},"content":"The filtered contact list will then be reflected in the UI, which is facilitated by the `Model` interface through this following operation:","lastModifiedDate":"2023-11-13"},{"lineNumber":235,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":236,"author":{"gitId":"AndrewJanong"},"content":"* `Model#updateFilteredPlanList(Predicate)` - Filters the contact list based on the predicate input.","lastModifiedDate":"2023-11-13"},{"lineNumber":237,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":238,"author":{"gitId":"AndrewJanong"},"content":"The execution of the list command starts with parsing the arguments using `ListCommandParser` and `ListPersonCommandParser`","lastModifiedDate":"2023-11-13"},{"lineNumber":239,"author":{"gitId":"AndrewJanong"},"content":", which then the `ListContactCommand` result will be executed and reflected in the UI.","lastModifiedDate":"2023-11-13"},{"lineNumber":240,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":241,"author":{"gitId":"AndrewJanong"},"content":"#### Implementing `ListPersonCommandParser`","lastModifiedDate":"2023-11-13"},{"lineNumber":242,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":243,"author":{"gitId":"AndrewJanong"},"content":"Using the `Parser` interface, it first checks for tags in the command.","lastModifiedDate":"2023-11-13"},{"lineNumber":244,"author":{"gitId":"AndrewJanong"},"content":"These tags will then be parsed into a `Set` and passed on to create `ListPersonCommand` object.","lastModifiedDate":"2023-11-13"},{"lineNumber":245,"author":{"gitId":"AndrewJanong"},"content":"An empty set will be passed in the case where no tags are given.","lastModifiedDate":"2023-11-13"},{"lineNumber":246,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":247,"author":{"gitId":"AndrewJanong"},"content":"#### Implementing `ListPersonCommand`","lastModifiedDate":"2023-11-13"},{"lineNumber":248,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":249,"author":{"gitId":"AndrewJanong"},"content":"From the `Set\u003ctag\u003e` passed to construct the `ListPersonCommand` object, the `Set` can be empty or non-empty.","lastModifiedDate":"2023-11-13"},{"lineNumber":250,"author":{"gitId":"AndrewJanong"},"content":"This is how the `execute` method is implemented:","lastModifiedDate":"2023-11-13"},{"lineNumber":251,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":252,"author":{"gitId":"AndrewJanong"},"content":"* In the case where the `Set` is empty, it will simply use `Model#updateFilteredPlanList(Predicate)`","lastModifiedDate":"2023-11-13"},{"lineNumber":253,"author":{"gitId":"AndrewJanong"},"content":"  where the predicate will be `PREDICATE_SHOW_ALL_PERSONS` which will show the entire contact list.","lastModifiedDate":"2023-11-13"},{"lineNumber":254,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":255,"author":{"gitId":"AndrewJanong"},"content":"* In the case where the `Set` is not empty (there are tag inputs),","lastModifiedDate":"2023-11-13"},{"lineNumber":256,"author":{"gitId":"AndrewJanong"},"content":"  the `Predicate` used in `Model#updateFilteredPlanList(Predicate)` will be","lastModifiedDate":"2023-11-13"},{"lineNumber":257,"author":{"gitId":"AndrewJanong"},"content":"  checking whether one of the tags in the contact is in the `Set`.","lastModifiedDate":"2023-11-13"},{"lineNumber":258,"author":{"gitId":"AndrewJanong"},"content":"  This will result in showing only the contacts with at least one of the tags from the `Set`.","lastModifiedDate":"2023-11-13"},{"lineNumber":259,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":260,"author":{"gitId":"AndrewJanong"},"content":"Given below is an example usage scenario and how the `list contact` command mechanism behaves at each step.","lastModifiedDate":"2023-11-13"},{"lineNumber":261,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":262,"author":{"gitId":"AndrewJanong"},"content":"Step 1. The user launches the application, it will show the list of all contacts.","lastModifiedDate":"2023-11-13"},{"lineNumber":263,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":264,"author":{"gitId":"AndrewJanong"},"content":"Step 2. The user executes `list contact -t friends` command","lastModifiedDate":"2023-11-13"},{"lineNumber":265,"author":{"gitId":"AndrewJanong"},"content":"to list only the contacts containing the tag friends.","lastModifiedDate":"2023-11-13"},{"lineNumber":266,"author":{"gitId":"AndrewJanong"},"content":"As described by the above implementations, a `ListPersonCommand` object will be created.","lastModifiedDate":"2023-11-13"},{"lineNumber":267,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":268,"author":{"gitId":"AndrewJanong"},"content":"Step 3. The `LogicManager` will call `ListPersonCommand#execute`","lastModifiedDate":"2023-11-13"},{"lineNumber":269,"author":{"gitId":"AndrewJanong"},"content":"where it will then call `Model#updateFilteredPlanList(Predicate)` and return the `CommandResult`.","lastModifiedDate":"2023-11-13"},{"lineNumber":270,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":271,"author":{"gitId":"AndrewJanong"},"content":"Step 4. The filtered list and success message will be reflected in the UI.","lastModifiedDate":"2023-11-13"},{"lineNumber":272,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":273,"author":{"gitId":"AndrewJanong"},"content":"The following sequence diagram shows how the `list contact` command works:","lastModifiedDate":"2023-11-13"},{"lineNumber":274,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":275,"author":{"gitId":"AndrewJanong"},"content":"\u003cpuml src\u003d\"diagrams/tag/ListContactSequenceDiagram.puml\"/\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":276,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":277,"author":{"gitId":"AndrewJanong"},"content":"The following activity diagram shows how the `list contact` command works:","lastModifiedDate":"2023-11-13"},{"lineNumber":278,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":279,"author":{"gitId":"AndrewJanong"},"content":"\u003cpuml src\u003d\"diagrams/tag/ListContactActivityDiagram.puml\"/\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":280,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":281,"author":{"gitId":"zekone"},"content":"### Tag feature","lastModifiedDate":"2023-11-13"},{"lineNumber":282,"author":{"gitId":"zekone"},"content":"This feature allows users to add and remove `Tag` to any `Person` in the contact list. It provides an easy way for users to catrgorize their contacts.","lastModifiedDate":"2023-11-13"},{"lineNumber":283,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":284,"author":{"gitId":"josepholim"},"content":"#### Overview: Tag","lastModifiedDate":"2023-11-13"},{"lineNumber":285,"author":{"gitId":"zekone"},"content":"The adding and removing of `Tag` begins with the parsing of the `AddTagCommand` and `DeleteTagCommand` using the `AddTagCommandParser` and `DeleteTagCommandparser` respectively. The `AddTagCommand` and `DeleteTagCommand` will then be executed by the `Model`.","lastModifiedDate":"2023-11-13"},{"lineNumber":286,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":287,"author":{"gitId":"zekone"},"content":"The activity diagram below shows the action sequence of adding one or more `Tag` to a contact.","lastModifiedDate":"2023-11-13"},{"lineNumber":288,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":289,"author":{"gitId":"zekone"},"content":"\u003cpuml src\u003d\"diagrams/tag/TagSequenceDiagram.puml\"/\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":290,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":291,"author":{"gitId":"zekone"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":292,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":293,"author":{"gitId":"zekone"},"content":"**Note:** The sequence diagram for removing `Tag` is similar to adding `Tag`. Simply replace `AddCommandParser` with `DeleteCommandParser`, `AddTagCommandParser` with `DeleteTagCommandParser`, and `AddTagCommand` with `DeleteTagCommand`, etc.","lastModifiedDate":"2023-11-14"},{"lineNumber":294,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":295,"author":{"gitId":"zekone"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":296,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":297,"author":{"gitId":"zekone"},"content":"##### Implementing `AddTagCommandParser` and `DeleteTagCommandParser`","lastModifiedDate":"2023-11-13"},{"lineNumber":298,"author":{"gitId":"zekone"},"content":"Both implements the `Parser` interface, parsing two main arguments:","lastModifiedDate":"2023-11-13"},{"lineNumber":299,"author":{"gitId":"Nixx162"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":300,"author":{"gitId":"zekone"},"content":"1. `contactId`: the one-based index of the contact shown in the GUI.","lastModifiedDate":"2023-11-13"},{"lineNumber":301,"author":{"gitId":"Nixx162"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":302,"author":{"gitId":"zekone"},"content":"1. `taglist`: the unique set of `Tag` to add/delete.","lastModifiedDate":"2023-11-13"},{"lineNumber":303,"author":{"gitId":"Nixx162"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":304,"author":{"gitId":"zekone"},"content":"   * The set of tags is parsed using the `parseTags` method in the `ParseUtil` utility class, which puts the collection of tag names given by the user into a `HashSet`.","lastModifiedDate":"2023-11-13"},{"lineNumber":305,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":306,"author":{"gitId":"zekone"},"content":"`contactId` and `taglist` is then use to create the `AddTagCommand`/`DeleteTagCommand` object.","lastModifiedDate":"2023-11-13"},{"lineNumber":307,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":308,"author":{"gitId":"zekone"},"content":"For the details of how parsing works, see the section on [Logic Component](#logic-component).","lastModifiedDate":"2023-11-13"},{"lineNumber":309,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":310,"author":{"gitId":"zekone"},"content":"##### Implementing `AddTagCommand`","lastModifiedDate":"2023-11-13"},{"lineNumber":311,"author":{"gitId":"zekone"},"content":"`AddTagCommand` extends from the abstract class `AddCommand`, inheriting `add` as the primary command word and having `tag` as its secondary command word. It internally stores `contactId` (the index of the contact) and `toAdd` (the set `Tag` to add) which is given by the [parser](#implementing-addtagcommandparser-and-deletetagcommandparser).","lastModifiedDate":"2023-11-13"},{"lineNumber":312,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":313,"author":{"gitId":"zekone"},"content":"When the command is execute, it carries out the following operations:","lastModifiedDate":"2023-11-13"},{"lineNumber":314,"author":{"gitId":"zekone"},"content":"1. Using the `contactId`, it will first check if the `person` exist in the address book by calling `Model`\u0027s `findPersonByUserFriendlyId` method.","lastModifiedDate":"2023-11-13"},{"lineNumber":315,"author":{"gitId":"Nixx162"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":316,"author":{"gitId":"zekone"},"content":"    * A `CommandException` is thrown if the person does not exist.","lastModifiedDate":"2023-11-13"},{"lineNumber":317,"author":{"gitId":"Nixx162"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":318,"author":{"gitId":"zekone"},"content":"1. The set of tags is then added to the person\u0027s tag list by calling the `addTags` method in `Person`.","lastModifiedDate":"2023-11-13"},{"lineNumber":319,"author":{"gitId":"Nixx162"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":320,"author":{"gitId":"zekone"},"content":"1. The `Model`\u0027s `setPerson` method is used to update the person.","lastModifiedDate":"2023-11-13"},{"lineNumber":321,"author":{"gitId":"Nixx162"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":322,"author":{"gitId":"zekone"},"content":"1. Lastly a `CommandResult` with the success message is returned.","lastModifiedDate":"2023-11-13"},{"lineNumber":323,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":324,"author":{"gitId":"zekone"},"content":"The following activity diagram summarizes what happens when `AddTagCommand` is executed:","lastModifiedDate":"2023-11-13"},{"lineNumber":325,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":326,"author":{"gitId":"zekone"},"content":"\u003cpuml src\u003d\"diagrams/tag/AddTagActivityDiagram.puml\"/\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":327,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":328,"author":{"gitId":"zekone"},"content":"##### Implementing `DeleteTagCommand`","lastModifiedDate":"2023-11-13"},{"lineNumber":329,"author":{"gitId":"zekone"},"content":"`DeleteTagCommand` extends from the abstract class `DeleteCommand`, inheriting `delete` as the primary command word and having `tag` as its secondary command word. It internally stores `contactId` (the index of the contact) and `toDelete` (the set `Tag` to delete) which is given by the [parser](#implementing-addtagcommandparser-and-deletetagcommandparser).","lastModifiedDate":"2023-11-13"},{"lineNumber":330,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":331,"author":{"gitId":"zekone"},"content":"When the command is execute, it carries out the following operations:","lastModifiedDate":"2023-11-13"},{"lineNumber":332,"author":{"gitId":"zekone"},"content":"1. Using the `contactId`, it will first check if the `person` exist in the address book by calling `Model`\u0027s `findPersonByUserFriendlyId` method.","lastModifiedDate":"2023-11-13"},{"lineNumber":333,"author":{"gitId":"Nixx162"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":334,"author":{"gitId":"zekone"},"content":"    * A `CommandException` is thrown if the person does not exist.","lastModifiedDate":"2023-11-13"},{"lineNumber":335,"author":{"gitId":"Nixx162"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":336,"author":{"gitId":"zekone"},"content":"1. Loop through every `Tag` that the person has, separating those that be found in `toDelete` and those not found.","lastModifiedDate":"2023-11-13"},{"lineNumber":337,"author":{"gitId":"Nixx162"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":338,"author":{"gitId":"zekone"},"content":"1. The set of tags found in `toDelete` is then deleted from the person\u0027s tag list by calling the `removeTags` method in `Person`.","lastModifiedDate":"2023-11-13"},{"lineNumber":339,"author":{"gitId":"Nixx162"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":340,"author":{"gitId":"zekone"},"content":"1. The `Model`\u0027s `setPerson` method is used to update the person.","lastModifiedDate":"2023-11-13"},{"lineNumber":341,"author":{"gitId":"Nixx162"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":342,"author":{"gitId":"zekone"},"content":"1. Lastly a `CommandResult` with the success message is returned.","lastModifiedDate":"2023-11-13"},{"lineNumber":343,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":344,"author":{"gitId":"zekone"},"content":"The following activity diagram summarizes what happens when the `DeleteTagCommand` is executed:","lastModifiedDate":"2023-11-13"},{"lineNumber":345,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":346,"author":{"gitId":"zekone"},"content":"\u003cpuml src\u003d\"diagrams/tag/DeleteTagActivityDiagram.puml\"/\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":347,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":348,"author":{"gitId":"josepholim"},"content":"#### Design Considerations: Tag","lastModifiedDate":"2023-11-13"},{"lineNumber":349,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":350,"author":{"gitId":"zekone"},"content":"**Aspect: Deletion of non-existing tag:**","lastModifiedDate":"2023-11-13"},{"lineNumber":351,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":352,"author":{"gitId":"zekone"},"content":"* **Alternative 1:** Ignore and proceed as normal.","lastModifiedDate":"2023-11-13"},{"lineNumber":353,"author":{"gitId":"zekone"},"content":"  * Pros: Easy to implement. Furthermore, since outcome of proceeding and not proceeding is the same, there will not be a severe consequence of proceeding.","lastModifiedDate":"2023-11-13"},{"lineNumber":354,"author":{"gitId":"zekone"},"content":"  * Cons: Does not reflect true behavior, and users may be confused by success message.","lastModifiedDate":"2023-11-13"},{"lineNumber":355,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":356,"author":{"gitId":"zekone"},"content":"* **Alternative 2:** Does not proceed.","lastModifiedDate":"2023-11-13"},{"lineNumber":357,"author":{"gitId":"zekone"},"content":"  * Pros: Users will be made aware of their mistake and prevents executing potentially wrong commands.","lastModifiedDate":"2023-11-13"},{"lineNumber":358,"author":{"gitId":"zekone"},"content":"  * Cons: If the command was intentional, time is wasted for user to correct their command.","lastModifiedDate":"2023-11-13"},{"lineNumber":359,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":360,"author":{"gitId":"zekone"},"content":"* **Alternative 3 (current choice):** Proceed but inform user that some tags are non-existing.","lastModifiedDate":"2023-11-13"},{"lineNumber":361,"author":{"gitId":"zekone"},"content":"  * Pros: Users will be made aware of their mistake. Does not waste time on correcting the command if the command was intentional.","lastModifiedDate":"2023-11-13"},{"lineNumber":362,"author":{"gitId":"zekone"},"content":"  * Cons: Harder to implement.","lastModifiedDate":"2023-11-13"},{"lineNumber":363,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":364,"author":{"gitId":"josepholim"},"content":"### Notes feature","lastModifiedDate":"2023-11-13"},{"lineNumber":365,"author":{"gitId":"josepholim"},"content":"This feature allows users to add and remove `Note` to any `Person` in the contact list. It provides an easy way for users to record additional information about the contacts.","lastModifiedDate":"2023-11-13"},{"lineNumber":366,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":367,"author":{"gitId":"josepholim"},"content":"#### Overview: Note","lastModifiedDate":"2023-11-13"},{"lineNumber":368,"author":{"gitId":"josepholim"},"content":"The adding and removing of `Note` begins with the parsing of the `AddNoteCommand` and `DeleteNoteCommand` using the `AddNoteCommandParser` and `DeleteNoteCommandParser` respectively. The `AddNoteCommand` and `DeleteNoteCommand` will then be executed by the `Model`.","lastModifiedDate":"2023-11-13"},{"lineNumber":369,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":370,"author":{"gitId":"josepholim"},"content":"The activity diagram below shows the action sequence of adding a `Note` to a contact.","lastModifiedDate":"2023-11-13"},{"lineNumber":371,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":372,"author":{"gitId":"josepholim"},"content":"\u003cpuml src\u003d\"diagrams/note/NoteSequenceDiagram.puml\"/\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":373,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":374,"author":{"gitId":"josepholim"},"content":"##### Implementing `AddNoteCommandParser`","lastModifiedDate":"2023-11-13"},{"lineNumber":375,"author":{"gitId":"josepholim"},"content":"Implements the `Parser` interface, parsing three main arguments:","lastModifiedDate":"2023-11-13"},{"lineNumber":376,"author":{"gitId":"josepholim"},"content":"1. `contactId`: the one-based index of the contact shown in the GUI.","lastModifiedDate":"2023-11-13"},{"lineNumber":377,"author":{"gitId":"josepholim"},"content":"2. `noteTitle`: the title of the note to add.","lastModifiedDate":"2023-11-13"},{"lineNumber":378,"author":{"gitId":"josepholim"},"content":"3. `noteContent`: the content of the note to add.","lastModifiedDate":"2023-11-13"},{"lineNumber":379,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":380,"author":{"gitId":"josepholim"},"content":"`noteTitle` and `noteContent` are then used to create the `Note` object. After that, `contactId` and the `Note` object created are then used to create the `AddNoteCommand` object.","lastModifiedDate":"2023-11-13"},{"lineNumber":381,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":382,"author":{"gitId":"josepholim"},"content":"For the details of how parsing works, see the section on [Logic Component](#logic-component).","lastModifiedDate":"2023-11-13"},{"lineNumber":383,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":384,"author":{"gitId":"josepholim"},"content":"##### Implementing `DeleteNoteCommandParser`","lastModifiedDate":"2023-11-13"},{"lineNumber":385,"author":{"gitId":"josepholim"},"content":"Implements the `Parser` interface, parsing two main arguments:","lastModifiedDate":"2023-11-13"},{"lineNumber":386,"author":{"gitId":"josepholim"},"content":"1. `contactId`: the one-based index of the contact shown in the GUI.","lastModifiedDate":"2023-11-13"},{"lineNumber":387,"author":{"gitId":"josepholim"},"content":"2. `noteId`: the one-based index of the note shown in the GUI.","lastModifiedDate":"2023-11-13"},{"lineNumber":388,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":389,"author":{"gitId":"josepholim"},"content":"`contactId` and `noteId` are then used to create the `DeleteNoteCommand` object.","lastModifiedDate":"2023-11-13"},{"lineNumber":390,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":391,"author":{"gitId":"josepholim"},"content":"For the details of how parsing works, see the section on [Logic Component](#logic-component).","lastModifiedDate":"2023-11-13"},{"lineNumber":392,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":393,"author":{"gitId":"josepholim"},"content":"##### Implementing `AddNoteCommand`","lastModifiedDate":"2023-11-13"},{"lineNumber":394,"author":{"gitId":"josepholim"},"content":"`AddNoteCommand` extends from the abstract class `AddCommand`, inheriting `add` as the primary command word and having `note` as its secondary command word. It internally stores `contactId` (the index of the contact) and `toAdd` (the `Note` to add) which is given by the [parser](#implementing-addnotecommandparser).","lastModifiedDate":"2023-11-13"},{"lineNumber":395,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":396,"author":{"gitId":"josepholim"},"content":"When the command is executed, it carries out the following operations:","lastModifiedDate":"2023-11-13"},{"lineNumber":397,"author":{"gitId":"josepholim"},"content":"1. Using the `contactId`, it will first check if the `person` exist in the address book by calling `Model`\u0027s `findPersonByUserFriendlyId` method.","lastModifiedDate":"2023-11-13"},{"lineNumber":398,"author":{"gitId":"Nixx162"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":399,"author":{"gitId":"josepholim"},"content":"    * A `CommandException` is thrown if the person does not exist.","lastModifiedDate":"2023-11-13"},{"lineNumber":400,"author":{"gitId":"Nixx162"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":401,"author":{"gitId":"josepholim"},"content":"2. The note is then added to the person\u0027s note list by calling the `addNote` method in `Person`.","lastModifiedDate":"2023-11-13"},{"lineNumber":402,"author":{"gitId":"Nixx162"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":403,"author":{"gitId":"josepholim"},"content":"3. Lastly a `CommandResult` with the success message is returned.","lastModifiedDate":"2023-11-13"},{"lineNumber":404,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":405,"author":{"gitId":"josepholim"},"content":"The following activity diagram summarizes what happens when `AddNoteCommand` is executed:","lastModifiedDate":"2023-11-13"},{"lineNumber":406,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":407,"author":{"gitId":"josepholim"},"content":"\u003cpuml src\u003d\"diagrams/note/AddNoteActivityDiagram.puml\"/\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":408,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":409,"author":{"gitId":"josepholim"},"content":"##### Implementing `DeleteNoteCommand`","lastModifiedDate":"2023-11-13"},{"lineNumber":410,"author":{"gitId":"josepholim"},"content":"`DeleteNoteCommand` extends from the abstract class `DeleteCommand`, inheriting `delete` as the primary command word and having `note` as its secondary command word. It internally stores `contactId` (the index of the contact) and `noteIdToDelete` (the `Note` to delete) which is given by the [parser](#implementing-deletenotecommandparser).","lastModifiedDate":"2023-11-13"},{"lineNumber":411,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":412,"author":{"gitId":"josepholim"},"content":"When the command is executed, it carries out the following operations:","lastModifiedDate":"2023-11-13"},{"lineNumber":413,"author":{"gitId":"josepholim"},"content":"1. Using the `contactId`, it will first check if the `person` exist in the address book by calling `Model`\u0027s `findPersonByUserFriendlyId` method.","lastModifiedDate":"2023-11-13"},{"lineNumber":414,"author":{"gitId":"Nixx162"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":415,"author":{"gitId":"josepholim"},"content":"    * A `CommandException` is thrown if the person does not exist.","lastModifiedDate":"2023-11-13"},{"lineNumber":416,"author":{"gitId":"Nixx162"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":417,"author":{"gitId":"josepholim"},"content":"2. Using the `noteIdToDelete`, it will delete the note from the person in the address book by calling `Person`\u0027s `removeNoteByUserFriendlyId` method.","lastModifiedDate":"2023-11-13"},{"lineNumber":418,"author":{"gitId":"Nixx162"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":419,"author":{"gitId":"josepholim"},"content":"    * A `CommandException` is thrown if the note does not exist.","lastModifiedDate":"2023-11-13"},{"lineNumber":420,"author":{"gitId":"Nixx162"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":421,"author":{"gitId":"josepholim"},"content":"3. Lastly a `CommandResult` with the success message is returned.","lastModifiedDate":"2023-11-13"},{"lineNumber":422,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":423,"author":{"gitId":"josepholim"},"content":"The following activity diagram summarizes what happens when the `DeleteNoteCommand` is executed:","lastModifiedDate":"2023-11-13"},{"lineNumber":424,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":425,"author":{"gitId":"josepholim"},"content":"\u003cpuml src\u003d\"diagrams/note/DeleteNoteActivityDiagram.puml\"/\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":426,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":427,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":428,"author":{"gitId":"AndrewJanong"},"content":"### Events feature","lastModifiedDate":"2023-11-13"},{"lineNumber":429,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":430,"author":{"gitId":"AndrewJanong"},"content":"This feature allows users to add and remove `Event` to any `Person` in the contact list. It provides an easy way for users to keep track of events with the contacts.","lastModifiedDate":"2023-11-13"},{"lineNumber":431,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":432,"author":{"gitId":"AndrewJanong"},"content":"#### Overview: Event:","lastModifiedDate":"2023-11-13"},{"lineNumber":433,"author":{"gitId":"larrywang0701"},"content":"The adding, listing and removing of `Event` begins with the parsing of the `AddEventCommand`, `ListEventCommand` and `DeleteEventCommand` using the `AddEventCommandParser`, `ListEventCommandParser` and `DeleteEventCommandParser` respectively.","lastModifiedDate":"2023-11-14"},{"lineNumber":434,"author":{"gitId":"larrywang0701"},"content":"The `AddEventCommand`, `ListEventCommand` and `DeleteEventCommand` will then be constructed and executed by the `Model`.","lastModifiedDate":"2023-11-14"},{"lineNumber":435,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":436,"author":{"gitId":"AndrewJanong"},"content":"The activity diagram below shows the action sequence of adding an `Event` to a contact.","lastModifiedDate":"2023-11-13"},{"lineNumber":437,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":438,"author":{"gitId":"larrywang0701"},"content":"\u003cpuml src\u003d\"diagrams/event/AddEventSequenceDiagram.puml\"/\u003e","lastModifiedDate":"2023-11-14"},{"lineNumber":439,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":440,"author":{"gitId":"larrywang0701"},"content":"The activity diagram below shows the action sequence of listing events by executing `list events` command.","lastModifiedDate":"2023-11-14"},{"lineNumber":441,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":442,"author":{"gitId":"larrywang0701"},"content":"\u003cpuml src\u003d\"diagrams/event/ListEventsSequenceDiagram.puml\"/\u003e","lastModifiedDate":"2023-11-14"},{"lineNumber":443,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":444,"author":{"gitId":"larrywang0701"},"content":"The activity diagram below shows the action sequence of deleting an event by contact ID and event ID.","lastModifiedDate":"2023-11-14"},{"lineNumber":445,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":446,"author":{"gitId":"larrywang0701"},"content":"\u003cpuml src\u003d\"diagrams/event/DeleteEventSequenceDiagram.puml\"/\u003e","lastModifiedDate":"2023-11-14"},{"lineNumber":447,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":448,"author":{"gitId":"AndrewJanong"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":449,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":450,"author":{"gitId":"AndrewJanong"},"content":"**Note:**","lastModifiedDate":"2023-11-13"},{"lineNumber":451,"author":{"gitId":"AndrewJanong"},"content":"The sequence diagram for deleting `Event` is similar to adding `Event`.","lastModifiedDate":"2023-11-13"},{"lineNumber":452,"author":{"gitId":"AndrewJanong"},"content":"Simply replace `AddCommandParser` with `DeleteCommandParser`, `AddEventCommandParser` with `DeleteEventCommandParser`, and `AddEventCommand` with `DeleteEventCommand`.","lastModifiedDate":"2023-11-13"},{"lineNumber":453,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":454,"author":{"gitId":"AndrewJanong"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":455,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":456,"author":{"gitId":"AndrewJanong"},"content":"##### Implementing `AddEventCommandParser`","lastModifiedDate":"2023-11-13"},{"lineNumber":457,"author":{"gitId":"larrywang0701"},"content":"Implements the `Parser` interface, parsing six main arguments:","lastModifiedDate":"2023-11-14"},{"lineNumber":458,"author":{"gitId":"AndrewJanong"},"content":"1. `contactId`: the one-based index of the contact shown in the GUI.","lastModifiedDate":"2023-11-13"},{"lineNumber":459,"author":{"gitId":"zekone"},"content":"1. `eventName`: the name of the event.","lastModifiedDate":"2023-11-14"},{"lineNumber":460,"author":{"gitId":"zekone"},"content":"1. `eventStartTime`: the start time of the event.","lastModifiedDate":"2023-11-14"},{"lineNumber":461,"author":{"gitId":"zekone"},"content":"1. `eventEndTime`: the end time of the event.","lastModifiedDate":"2023-11-14"},{"lineNumber":462,"author":{"gitId":"zekone"},"content":"1. `eventLocation`: the location of where the event will be held.","lastModifiedDate":"2023-11-14"},{"lineNumber":463,"author":{"gitId":"zekone"},"content":"1. `eventInformation`: the description of the event.","lastModifiedDate":"2023-11-14"},{"lineNumber":464,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":465,"author":{"gitId":"AndrewJanong"},"content":"`eventName`, `eventStartTime`, `eventEndTime`, `eventLocation`, and `eventInformation`are then used to create the `Event` object.","lastModifiedDate":"2023-11-13"},{"lineNumber":466,"author":{"gitId":"AndrewJanong"},"content":"After that, `contactId` and the `Event` object created are then used to create the `AddEventCommand` object.","lastModifiedDate":"2023-11-13"},{"lineNumber":467,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":468,"author":{"gitId":"AndrewJanong"},"content":"For the details of how parsing works, see the section on [Logic Component](#logic-component).","lastModifiedDate":"2023-11-13"},{"lineNumber":469,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":470,"author":{"gitId":"larrywang0701"},"content":"##### Implementing `ListEventCommandParser`","lastModifiedDate":"2023-11-14"},{"lineNumber":471,"author":{"gitId":"larrywang0701"},"content":"Implements the `Parser` interface, parsing three main arguments:","lastModifiedDate":"2023-11-14"},{"lineNumber":472,"author":{"gitId":"larrywang0701"},"content":"1. `filterStartTime`: the start time for filtering the events","lastModifiedDate":"2023-11-14"},{"lineNumber":473,"author":{"gitId":"zekone"},"content":"1. `filterEndTime`: the end time for filtering the events","lastModifiedDate":"2023-11-14"},{"lineNumber":474,"author":{"gitId":"zekone"},"content":"1. `useAscendingOrder`: should use ascending order when sorting the events?","lastModifiedDate":"2023-11-14"},{"lineNumber":475,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":476,"author":{"gitId":"larrywang0701"},"content":"`filterStartTime`, `filterEndTime` and `useAscendingOrder` are then used to create the `ListEventCommand` object.","lastModifiedDate":"2023-11-14"},{"lineNumber":477,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":478,"author":{"gitId":"larrywang0701"},"content":"`filterStartTime` and `filterEndTime` can both be `null` (to disable filtering) or neither be `null`, but can NOT only one of them be `null`.","lastModifiedDate":"2023-11-14"},{"lineNumber":479,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":480,"author":{"gitId":"larrywang0701"},"content":"For the details of how parsing works, see the section on [Logic Component](#logic-component).","lastModifiedDate":"2023-11-14"},{"lineNumber":481,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":482,"author":{"gitId":"AndrewJanong"},"content":"##### Implementing `DeleteEventCommandParser`","lastModifiedDate":"2023-11-13"},{"lineNumber":483,"author":{"gitId":"AndrewJanong"},"content":"Implements the `Parser` interface, parsing two main arguments:","lastModifiedDate":"2023-11-13"},{"lineNumber":484,"author":{"gitId":"AndrewJanong"},"content":"1. `contactId`: the one-based index of the contact shown in the GUI.","lastModifiedDate":"2023-11-13"},{"lineNumber":485,"author":{"gitId":"zekone"},"content":"1. `eventId`: the one-based index of the event shown in the GUI.","lastModifiedDate":"2023-11-14"},{"lineNumber":486,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":487,"author":{"gitId":"AndrewJanong"},"content":"`contactId` and `eventId` are then used to create the `DeleteEventCommand` object.","lastModifiedDate":"2023-11-13"},{"lineNumber":488,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":489,"author":{"gitId":"AndrewJanong"},"content":"For the details of how parsing works, see the section on [Logic Component](#logic-component).","lastModifiedDate":"2023-11-13"},{"lineNumber":490,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":491,"author":{"gitId":"AndrewJanong"},"content":"##### Implementing `AddEventCommand`","lastModifiedDate":"2023-11-13"},{"lineNumber":492,"author":{"gitId":"AndrewJanong"},"content":"`AddEventCommand` extends from the abstract class `AddCommand`,","lastModifiedDate":"2023-11-13"},{"lineNumber":493,"author":{"gitId":"AndrewJanong"},"content":"inheriting `add` as the primary command word and having `event` as its secondary command word.","lastModifiedDate":"2023-11-13"},{"lineNumber":494,"author":{"gitId":"AndrewJanong"},"content":"It internally stores `contactId` (the index of the contact) and `toAdd` (the `Event` to add) which is given by the [parser](#implementing-addeventcommandparser).","lastModifiedDate":"2023-11-13"},{"lineNumber":495,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":496,"author":{"gitId":"AndrewJanong"},"content":"When the command is executed, it carries out the following operations:","lastModifiedDate":"2023-11-13"},{"lineNumber":497,"author":{"gitId":"AndrewJanong"},"content":"1. Using the `contactId`, it will first check if the `Person` exist in the address book by calling `Model`\u0027s `findPersonByUserFriendlyId` method.","lastModifiedDate":"2023-11-13"},{"lineNumber":498,"author":{"gitId":"Nixx162"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":499,"author":{"gitId":"AndrewJanong"},"content":"    * A `CommandException` is thrown if the person does not exist.","lastModifiedDate":"2023-11-13"},{"lineNumber":500,"author":{"gitId":"Nixx162"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":501,"author":{"gitId":"AndrewJanong"},"content":"2. The `Event` is then added to the person\u0027s note list by calling the `addEvent` method in `Person`.","lastModifiedDate":"2023-11-13"},{"lineNumber":502,"author":{"gitId":"Nixx162"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":503,"author":{"gitId":"AndrewJanong"},"content":"3. Lastly a `CommandResult` with the success message is returned.","lastModifiedDate":"2023-11-13"},{"lineNumber":504,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":505,"author":{"gitId":"AndrewJanong"},"content":"The following activity diagram summarizes what happens when `AddEventCommand` is executed:","lastModifiedDate":"2023-11-13"},{"lineNumber":506,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":507,"author":{"gitId":"AndrewJanong"},"content":"\u003cpuml src\u003d\"diagrams/event/AddEventActivityDiagram.puml\"/\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":508,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":509,"author":{"gitId":"larrywang0701"},"content":"##### Implementing `ListEventCommand`","lastModifiedDate":"2023-11-14"},{"lineNumber":510,"author":{"gitId":"larrywang0701"},"content":"`ListEventCommand` extends from the abstract class `ListCommand`,","lastModifiedDate":"2023-11-14"},{"lineNumber":511,"author":{"gitId":"larrywang0701"},"content":"inheriting `list` as the primary command word and having `events` as its secondary command word.","lastModifiedDate":"2023-11-14"},{"lineNumber":512,"author":{"gitId":"larrywang0701"},"content":"It internally stores `filterStartTime`, `filterEndTime` (both can be null if filtering is not used) and `sortAscending` which are given by the [parser](#implementing-addeventcommandparser).","lastModifiedDate":"2023-11-14"},{"lineNumber":513,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":514,"author":{"gitId":"larrywang0701"},"content":"When the command is executed, it carries out the following operations:","lastModifiedDate":"2023-11-14"},{"lineNumber":515,"author":{"gitId":"larrywang0701"},"content":"1. Using the `filterStartTime` and `filterEndTime` to filter all events in the global event list, or set the filter to always returns `true` if both `filterStartTime` and `filterEndTime` is null (in order to show the full event list to the user)","lastModifiedDate":"2023-11-14"},{"lineNumber":516,"author":{"gitId":"zekone"},"content":"1. Sort the filtered event list in ascending or descending order based on `sortAscending`","lastModifiedDate":"2023-11-14"},{"lineNumber":517,"author":{"gitId":"zekone"},"content":"1. Lastly a `CommandResult` with the filtered-sorted event list in String and with `listEvent \u003d true` to tell `MainWindow` to show the event list window.","lastModifiedDate":"2023-11-14"},{"lineNumber":518,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":519,"author":{"gitId":"larrywang0701"},"content":"The following activity diagram summarizes what happens when user executes `list events` from UI.","lastModifiedDate":"2023-11-14"},{"lineNumber":520,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":521,"author":{"gitId":"larrywang0701"},"content":"\u003cpuml src\u003d\"diagrams/event/ListEventsActivityDiagram.puml\"/\u003e","lastModifiedDate":"2023-11-14"},{"lineNumber":522,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":523,"author":{"gitId":"AndrewJanong"},"content":"##### Implementing `DeleteEventCommand`","lastModifiedDate":"2023-11-13"},{"lineNumber":524,"author":{"gitId":"AndrewJanong"},"content":"`DeleteEventCommand` extends from the abstract class `DeleteCommand`,","lastModifiedDate":"2023-11-13"},{"lineNumber":525,"author":{"gitId":"AndrewJanong"},"content":"inheriting `delete` as the primary command word and having `event` as its secondary command word.","lastModifiedDate":"2023-11-13"},{"lineNumber":526,"author":{"gitId":"AndrewJanong"},"content":"It internally stores `contactId` (the index of the contact) and `eventIdToDelete` (the `Event` to delete) which is given by the [parser](#implementing-deleteeventcommandparser).","lastModifiedDate":"2023-11-13"},{"lineNumber":527,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":528,"author":{"gitId":"AndrewJanong"},"content":"When the command is executed, it carries out the following operations:","lastModifiedDate":"2023-11-13"},{"lineNumber":529,"author":{"gitId":"AndrewJanong"},"content":"1. Using the `contactId`, it will first check if the `Person` exist in the address book by calling `Model`\u0027s `findPersonByUserFriendlyId` method.","lastModifiedDate":"2023-11-13"},{"lineNumber":530,"author":{"gitId":"Nixx162"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":531,"author":{"gitId":"AndrewJanong"},"content":"    * A `CommandException` is thrown if the person does not exist.","lastModifiedDate":"2023-11-13"},{"lineNumber":532,"author":{"gitId":"Nixx162"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":533,"author":{"gitId":"AndrewJanong"},"content":"2. Using the `eventIdToDelete`, it will delete the event from the person in the address book by calling `Person`\u0027s `removeEventByUserFriendlyId` method.","lastModifiedDate":"2023-11-13"},{"lineNumber":534,"author":{"gitId":"Nixx162"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":535,"author":{"gitId":"AndrewJanong"},"content":"    * A `CommandException` is thrown if the event does not exist.","lastModifiedDate":"2023-11-13"},{"lineNumber":536,"author":{"gitId":"Nixx162"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":537,"author":{"gitId":"AndrewJanong"},"content":"3. Lastly a `CommandResult` with the success message is returned.","lastModifiedDate":"2023-11-13"},{"lineNumber":538,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":539,"author":{"gitId":"AndrewJanong"},"content":"The following activity diagram summarizes what happens when the `DeleteEventCommand` is executed:","lastModifiedDate":"2023-11-13"},{"lineNumber":540,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":541,"author":{"gitId":"AndrewJanong"},"content":"\u003cpuml src\u003d\"diagrams/event/DeleteEventActivityDiagram.puml\"/\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":542,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":543,"author":{"gitId":"Nixx162"},"content":"### Enhanced help feature","lastModifiedDate":"2023-10-27"},{"lineNumber":544,"author":{"gitId":"Nixx162"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":545,"author":{"gitId":"Nixx162"},"content":"**Rationale**","lastModifiedDate":"2023-10-27"},{"lineNumber":546,"author":{"gitId":"Nixx162"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":547,"author":{"gitId":"Nixx162"},"content":"  Previous help feature simply opens a page with a link to the website, this is bad because:","lastModifiedDate":"2023-11-13"},{"lineNumber":548,"author":{"gitId":"Nixx162"},"content":"  * The flow is lengthy","lastModifiedDate":"2023-10-27"},{"lineNumber":549,"author":{"gitId":"Nixx162"},"content":"  * User may not be able to access website when operating without the internet","lastModifiedDate":"2023-10-27"},{"lineNumber":550,"author":{"gitId":"Nixx162"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":551,"author":{"gitId":"Nixx162"},"content":"  Therefore, we want to make this better by simplifying the flow. We do this by adding:","lastModifiedDate":"2023-10-27"},{"lineNumber":552,"author":{"gitId":"Nixx162"},"content":"  * Making the help command return things in the application console","lastModifiedDate":"2023-10-27"},{"lineNumber":553,"author":{"gitId":"Nixx162"},"content":"  * Letting users enter an extra argument to specify what command they need guiding","lastModifiedDate":"2023-11-13"},{"lineNumber":554,"author":{"gitId":"Nixx162"},"content":"  * Give suggestions to users in case of a mistake in the extra argument, i.e. typo","lastModifiedDate":"2023-11-13"},{"lineNumber":555,"author":{"gitId":"Nixx162"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":556,"author":{"gitId":"Nixx162"},"content":"**Implementation details**","lastModifiedDate":"2023-11-13"},{"lineNumber":557,"author":{"gitId":"Nixx162"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":558,"author":{"gitId":"Nixx162"},"content":"  Since the previous help feature needs to let the UI know that it wants to open the help window, this requires the `CommandResult` to have a special boolean attribute for capturing this event. We don\u0027t need this anymore, and thus we can perform a refactor to get rid of this attribute.","lastModifiedDate":"2023-11-13"},{"lineNumber":559,"author":{"gitId":"Nixx162"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":560,"author":{"gitId":"Nixx162"},"content":"  Since we want to directly display the help message to the user, we can use the `DisplayResult` UI component to show the message. It is convenient that every `Command` subclasses already has the `MESSAGE_USAGE` string attribute to indicate how the command should be used. Therefore, we can just directly fetch this from the `Command` subclasses if the extra argument the user inputs is valid.","lastModifiedDate":"2023-11-13"},{"lineNumber":561,"author":{"gitId":"Nixx162"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":562,"author":{"gitId":"Nixx162"},"content":"  Finally, we want to give suggestions if the user makes a typo. To do this, we must first be able to recognize if a user-made input is similar to a valid command word. To do this, we can utilise one of the many coefficients out there that can measure the degree of similarity between two strings, For this particular implementation, we will go with the [Sorensen-Dice coefficient](https://en.wikipedia.org/wiki/S%c3%b8rensen%e2%80%93Dice_coefficient). The idea is to check if the maximum degree of similarity between the input and each one of the command words exceeds a certain threshold and, if so, suggest to the user what inputs they need to make. Otherwise, the `ResultDisplay` will just give out an error that the input is unrecognizable.","lastModifiedDate":"2023-11-13"},{"lineNumber":563,"author":{"gitId":"Nixx162"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":564,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2020-06-07"},{"lineNumber":565,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":566,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2020-05-23"},{"lineNumber":567,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":568,"author":{"gitId":"-"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedAddressBook`. It extends `AddressBook` with an undo/redo history, stored internally as an `addressBookStateList` and `currentStatePointer`. Additionally, it implements the following operations:","lastModifiedDate":"2020-05-23"},{"lineNumber":569,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":570,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#commit()` — Saves the current address book state in its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":571,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#undo()` — Restores the previous address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":572,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#redo()` — Restores a previously undone address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":573,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":574,"author":{"gitId":"-"},"content":"These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()` and `Model#redoAddressBook()` respectively.","lastModifiedDate":"2020-05-23"},{"lineNumber":575,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":576,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23"},{"lineNumber":577,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":578,"author":{"gitId":"-"},"content":"Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the initial address book state, and the `currentStatePointer` pointing to that single address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":579,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":580,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState0.puml\" alt\u003d\"UndoRedoState0\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":581,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":582,"author":{"gitId":"-"},"content":"Step 2. The user executes `delete 5` command to delete the 5th person in the address book. The `delete` command calls `Model#commitAddressBook()`, causing the modified state of the address book after the `delete 5` command executes to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":583,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":584,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState1.puml\" alt\u003d\"UndoRedoState1\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":585,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":586,"author":{"gitId":"-"},"content":"Step 3. The user executes `add n/David …​` to add a new person. The `add` command also calls `Model#commitAddressBook()`, causing another modified address book state to be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":587,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":588,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState2.puml\" alt\u003d\"UndoRedoState2\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":589,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":590,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":591,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":592,"author":{"gitId":"-"},"content":"**Note:** If a command fails its execution, it will not call `Model#commitAddressBook()`, so the address book state will not be saved into the `addressBookStateList`.","lastModifiedDate":"2023-09-12"},{"lineNumber":593,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":594,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":595,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":596,"author":{"gitId":"-"},"content":"Step 4. The user now decides that adding the person was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous address book state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":597,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":598,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState3.puml\" alt\u003d\"UndoRedoState3\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":599,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":600,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":601,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":602,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":603,"author":{"gitId":"-"},"content":"**Note:** If the `currentStatePointer` is at index 0, pointing to the initial AddressBook state, then there are no previous AddressBook states to restore. The `undo` command uses `Model#canUndoAddressBook()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2023-09-12"},{"lineNumber":604,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23"},{"lineNumber":605,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":606,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":607,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":608,"author":{"gitId":"-"},"content":"The following sequence diagram shows how the undo operation works:","lastModifiedDate":"2020-05-23"},{"lineNumber":609,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":610,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoSequenceDiagram.puml\" alt\u003d\"UndoSequenceDiagram\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":611,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":612,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":613,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":614,"author":{"gitId":"-"},"content":"**Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2023-09-12"},{"lineNumber":615,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":616,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":617,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":618,"author":{"gitId":"-"},"content":"The `redo` command does the opposite — it calls `Model#redoAddressBook()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":619,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":620,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":621,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":622,"author":{"gitId":"-"},"content":"**Note:** If the `currentStatePointer` is at index `addressBookStateList.size() - 1`, pointing to the latest address book state, then there are no undone AddressBook states to restore. The `redo` command uses `Model#canRedoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2023-09-12"},{"lineNumber":623,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":624,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":625,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":626,"author":{"gitId":"-"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the address book, such as `list`, will usually not call `Model#commitAddressBook()`, `Model#undoAddressBook()` or `Model#redoAddressBook()`. Thus, the `addressBookStateList` remains unchanged.","lastModifiedDate":"2020-05-23"},{"lineNumber":627,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":628,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState4.puml\" alt\u003d\"UndoRedoState4\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":629,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":630,"author":{"gitId":"-"},"content":"Step 6. The user executes `clear`, which calls `Model#commitAddressBook()`. Since the `currentStatePointer` is not pointing at the end of the `addressBookStateList`, all address book states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `add n/David …​` command. This is the behavior that most modern desktop applications follow.","lastModifiedDate":"2020-05-23"},{"lineNumber":631,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":632,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState5.puml\" alt\u003d\"UndoRedoState5\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":633,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":634,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23"},{"lineNumber":635,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":636,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/CommitActivityDiagram.puml\" width\u003d\"250\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":637,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":638,"author":{"gitId":"josepholim"},"content":"#### Design considerations: Undo/redo","lastModifiedDate":"2023-11-13"},{"lineNumber":639,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":640,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2021-07-31"},{"lineNumber":641,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":642,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Saves the entire address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":643,"author":{"gitId":"-"},"content":"  * Pros: Easy to implement.","lastModifiedDate":"2020-05-23"},{"lineNumber":644,"author":{"gitId":"-"},"content":"  * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":645,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":646,"author":{"gitId":"-"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2020-05-23"},{"lineNumber":647,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2020-05-23"},{"lineNumber":648,"author":{"gitId":"-"},"content":"  * Pros: Will use less memory (e.g. for `delete`, just save the person being deleted).","lastModifiedDate":"2020-05-23"},{"lineNumber":649,"author":{"gitId":"-"},"content":"  * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2020-05-23"},{"lineNumber":650,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":651,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-11-10"},{"lineNumber":652,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":653,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":654,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":655,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":656,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":657,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":658,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":659,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":660,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":661,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":662,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":663,"author":{"gitId":"josepholim"},"content":"## **Appendix A: Requirements**","lastModifiedDate":"2023-11-13"},{"lineNumber":664,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":665,"author":{"gitId":"josepholim"},"content":"### Product Scope","lastModifiedDate":"2023-11-13"},{"lineNumber":666,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":667,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":668,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":669,"author":{"gitId":"zekone"},"content":"* is seeking and applying to many jobs","lastModifiedDate":"2023-10-04"},{"lineNumber":670,"author":{"gitId":"zekone"},"content":"* has the habit of taking many notes","lastModifiedDate":"2023-10-04"},{"lineNumber":671,"author":{"gitId":"-"},"content":"* prefer desktop apps over other types","lastModifiedDate":"2020-05-23"},{"lineNumber":672,"author":{"gitId":"-"},"content":"* can type fast","lastModifiedDate":"2020-05-23"},{"lineNumber":673,"author":{"gitId":"-"},"content":"* prefers typing to mouse interactions","lastModifiedDate":"2020-05-26"},{"lineNumber":674,"author":{"gitId":"-"},"content":"* is reasonably comfortable using CLI apps","lastModifiedDate":"2020-05-23"},{"lineNumber":675,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":676,"author":{"gitId":"zekone"},"content":"**Value proposition**: manage information regarding many job offers in a organised and uncluttered manner for users who is comfortable with CLI apps.","lastModifiedDate":"2023-10-04"},{"lineNumber":677,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":678,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":679,"author":{"gitId":"josepholim"},"content":"### User Stories","lastModifiedDate":"2023-11-13"},{"lineNumber":680,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":681,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":682,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":683,"author":{"gitId":"-"},"content":"| Priority | As a …​                            | I want to …​                  | So that I can…​                                                                                                             |","lastModifiedDate":"2020-05-23"},{"lineNumber":684,"author":{"gitId":"josepholim"},"content":"|----------|------------------------------------|-------------------------------|-----------------------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2023-11-13"},{"lineNumber":685,"author":{"gitId":"josepholim"},"content":"| `* * *`  | new user                           | get help on commands          | know how to use the commands and their parameters                                                                           |","lastModifiedDate":"2023-11-13"},{"lineNumber":686,"author":{"gitId":"larrywang0701"},"content":"| `* * *`  | user                               | add a new contact             | record one person\u0027s phone number and email address                                                                          |","lastModifiedDate":"2023-10-04"},{"lineNumber":687,"author":{"gitId":"larrywang0701"},"content":"| `* * *`  | user                               | delete a contact              | remove a contact (by name) that I do not need                                                                               |","lastModifiedDate":"2023-10-04"},{"lineNumber":688,"author":{"gitId":"josepholim"},"content":"| `* * *`  | user                               | view all contacts             | easily see and know what contacts are currently stored in the application in one place                                      |","lastModifiedDate":"2023-11-13"},{"lineNumber":689,"author":{"gitId":"josepholim"},"content":"| `* *`    | user                               | find a contact                | easily find contacts which names match one of the specified keywords.                                                       |","lastModifiedDate":"2023-11-13"},{"lineNumber":690,"author":{"gitId":"josepholim"},"content":"| `* *`    | user                               | add a note to a contact       | record additional information about that contact as a note                                                                  |","lastModifiedDate":"2023-11-13"},{"lineNumber":691,"author":{"gitId":"josepholim"},"content":"| `* *`    | user                               | delete a note from a contact  | remove additional information about that contact that are no longer relevant                                                |","lastModifiedDate":"2023-11-13"},{"lineNumber":692,"author":{"gitId":"larrywang0701"},"content":"| `* *`    | user who has some event to do      | add an event                  | record an event with start time and also end time, location and any additional information like what to do during the event |","lastModifiedDate":"2023-10-04"},{"lineNumber":693,"author":{"gitId":"larrywang0701"},"content":"| `* *`    | user who has/had some event to do  | delete an event               | remove an event after it is obsolete, cancelled or no longer needed to be recorded                                          |","lastModifiedDate":"2023-10-04"},{"lineNumber":694,"author":{"gitId":"josepholim"},"content":"| `* *`    | user who has some event to do      | filter events                 | easily see and know which events are within a specified time interval                                                       |","lastModifiedDate":"2023-11-13"},{"lineNumber":695,"author":{"gitId":"zekone"},"content":"| `* *`    | tidy user                          | tag a contact with a label    | keep my contacts oraganised and categorised                                                                                 |","lastModifiedDate":"2023-10-26"},{"lineNumber":696,"author":{"gitId":"josepholim"},"content":"| `* *`    | tidy user                          | delete tags from a contact    | remove tags that are no longer relevant                                                                                     |","lastModifiedDate":"2023-11-13"},{"lineNumber":697,"author":{"gitId":"josepholim"},"content":"| `* *`    | tidy user                          | filter contacts based on tags | easily see and know which contacts contain one of the specified tags                                                        |","lastModifiedDate":"2023-11-13"},{"lineNumber":698,"author":{"gitId":"josepholim"},"content":"| `* *`    | user                               | clear all data                | remove all unused data and start managing a new contact list                                                                |","lastModifiedDate":"2023-11-13"},{"lineNumber":699,"author":{"gitId":"larrywang0701"},"content":"| `* * *`  | user who finishes using the application | exit the program              | exit the program normally while ensuring all my data is currectly saved                                                     |","lastModifiedDate":"2023-10-04"},{"lineNumber":700,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":701,"author":{"gitId":"josepholim"},"content":"### Use Cases","lastModifiedDate":"2023-11-13"},{"lineNumber":702,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":703,"author":{"gitId":"josepholim"},"content":"(For all use cases below, the **System** is the `KeepInTouch` and the **Actor** is the `user`, unless specified otherwise)","lastModifiedDate":"2023-10-05"},{"lineNumber":704,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":705,"author":{"gitId":"josepholim"},"content":"**Use case: UC01 - Get help on commands**","lastModifiedDate":"2023-11-13"},{"lineNumber":706,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":707,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":708,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":709,"author":{"gitId":"josepholim"},"content":"1.  User requests for help.","lastModifiedDate":"2023-11-13"},{"lineNumber":710,"author":{"gitId":"josepholim"},"content":"2.  KeepInTouch returns relevant documentation.","lastModifiedDate":"2023-11-13"},{"lineNumber":711,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":712,"author":{"gitId":"josepholim"},"content":"    Use case ends.","lastModifiedDate":"2023-11-13"},{"lineNumber":713,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":714,"author":{"gitId":"josepholim"},"content":"**Extensions**","lastModifiedDate":"2023-11-13"},{"lineNumber":715,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":716,"author":{"gitId":"josepholim"},"content":"* 1a. User inputs with no extra argument.","lastModifiedDate":"2023-11-13"},{"lineNumber":717,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":718,"author":{"gitId":"josepholim"},"content":"    * 1a1. KeepInTouch shows a list of all command words.","lastModifiedDate":"2023-11-13"},{"lineNumber":719,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":720,"author":{"gitId":"josepholim"},"content":"      Use case ends.","lastModifiedDate":"2023-11-13"},{"lineNumber":721,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":722,"author":{"gitId":"josepholim"},"content":"* 1b. User inputs with an extra argument corresponding to a command.","lastModifiedDate":"2023-11-13"},{"lineNumber":723,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":724,"author":{"gitId":"josepholim"},"content":"    * 1b1. Extra argument is a command word.","lastModifiedDate":"2023-11-13"},{"lineNumber":725,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":726,"author":{"gitId":"josepholim"},"content":"        * KeepInTouch returns documentation on that command word.","lastModifiedDate":"2023-11-13"},{"lineNumber":727,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":728,"author":{"gitId":"Nixx162"},"content":"          Use case ends.","lastModifiedDate":"2023-11-13"},{"lineNumber":729,"author":{"gitId":"Nixx162"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":730,"author":{"gitId":"josepholim"},"content":"    * 1b2. Extra argument is not a command word, but is quite similar to a command.","lastModifiedDate":"2023-11-13"},{"lineNumber":731,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":732,"author":{"gitId":"josepholim"},"content":"        * KeepInTouch suggests the command word with the highest degree of similarity to the command input.","lastModifiedDate":"2023-11-13"},{"lineNumber":733,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":734,"author":{"gitId":"Nixx162"},"content":"          Use case resumes at step 1.","lastModifiedDate":"2023-11-13"},{"lineNumber":735,"author":{"gitId":"Nixx162"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":736,"author":{"gitId":"josepholim"},"content":"    * 1b3. Extra argument is not a command word, and isn\u0027t recognizably close to a command word.","lastModifiedDate":"2023-11-13"},{"lineNumber":737,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":738,"author":{"gitId":"josepholim"},"content":"        * KeepInTouch lets the user know that the command is unrecognizable.","lastModifiedDate":"2023-11-13"},{"lineNumber":739,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":740,"author":{"gitId":"Nixx162"},"content":"          Use case resumes at step 1.","lastModifiedDate":"2023-11-13"},{"lineNumber":741,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":742,"author":{"gitId":"josepholim"},"content":"**Use case: UC02 - Add a new contact**","lastModifiedDate":"2023-10-05"},{"lineNumber":743,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":744,"author":{"gitId":"josepholim"},"content":"**MSS**","lastModifiedDate":"2023-10-05"},{"lineNumber":745,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":746,"author":{"gitId":"josepholim"},"content":"1.  User requests to add a new contact.","lastModifiedDate":"2023-10-05"},{"lineNumber":747,"author":{"gitId":"josepholim"},"content":"2.  KeepInTouch adds the contact to the list.","lastModifiedDate":"2023-10-05"},{"lineNumber":748,"author":{"gitId":"josepholim"},"content":"3.  KeepInTouch shows the updated list of contacts.","lastModifiedDate":"2023-10-05"},{"lineNumber":749,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":750,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":751,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":752,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":753,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":754,"author":{"gitId":"josepholim"},"content":"* 1a. User inputs incomplete or invalid data.","lastModifiedDate":"2023-10-05"},{"lineNumber":755,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":756,"author":{"gitId":"josepholim"},"content":"    * 1a1. KeepInTouch shows a message indicating incomplete or invalid data.","lastModifiedDate":"2023-10-05"},{"lineNumber":757,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":758,"author":{"gitId":"josepholim"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2023-10-05"},{"lineNumber":759,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":760,"author":{"gitId":"josepholim"},"content":"**Use case: UC03 - Delete a contact**","lastModifiedDate":"2023-10-05"},{"lineNumber":761,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":762,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2023-10-05"},{"lineNumber":763,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":764,"author":{"gitId":"josepholim"},"content":"1.  User requests to delete a contact.","lastModifiedDate":"2023-10-05"},{"lineNumber":765,"author":{"gitId":"josepholim"},"content":"2.  KeepInTouch deletes the contact.","lastModifiedDate":"2023-10-05"},{"lineNumber":766,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":767,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":768,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":769,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2023-10-05"},{"lineNumber":770,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":771,"author":{"gitId":"josepholim"},"content":"* 1a. User inputs a contact that does not exist.","lastModifiedDate":"2023-10-05"},{"lineNumber":772,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":773,"author":{"gitId":"zekone"},"content":"    * 1a1. KeepInTouch shows a message indicating that the contact cannot be found.","lastModifiedDate":"2023-10-26"},{"lineNumber":774,"author":{"gitId":"Nixx162"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":775,"author":{"gitId":"Nixx162"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2023-11-13"},{"lineNumber":776,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":777,"author":{"gitId":"josepholim"},"content":"**Use case: UC04 - View all contacts**","lastModifiedDate":"2023-10-05"},{"lineNumber":778,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":779,"author":{"gitId":"josepholim"},"content":"**MSS**","lastModifiedDate":"2023-10-05"},{"lineNumber":780,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":781,"author":{"gitId":"josepholim"},"content":"1.  User requests to view all contacts.","lastModifiedDate":"2023-10-05"},{"lineNumber":782,"author":{"gitId":"josepholim"},"content":"2.  KeepInTouch shows all contacts.","lastModifiedDate":"2023-10-05"},{"lineNumber":783,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":784,"author":{"gitId":"josepholim"},"content":"    Use case ends.","lastModifiedDate":"2023-10-05"},{"lineNumber":785,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":786,"author":{"gitId":"josepholim"},"content":"**Use case: UC05 - Find a contact**","lastModifiedDate":"2023-11-13"},{"lineNumber":787,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":788,"author":{"gitId":"josepholim"},"content":"**MSS**","lastModifiedDate":"2023-11-13"},{"lineNumber":789,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":790,"author":{"gitId":"josepholim"},"content":"1.  User requests to find contacts which name matches one of the specified keywords.","lastModifiedDate":"2023-11-13"},{"lineNumber":791,"author":{"gitId":"josepholim"},"content":"2.  KeepInTouch shows contacts with matching names.","lastModifiedDate":"2023-11-13"},{"lineNumber":792,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":793,"author":{"gitId":"josepholim"},"content":"    Use case ends.","lastModifiedDate":"2023-10-05"},{"lineNumber":794,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":795,"author":{"gitId":"josepholim"},"content":"**Use case: UC06 - Add a note to a contact**","lastModifiedDate":"2023-11-13"},{"lineNumber":796,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":797,"author":{"gitId":"josepholim"},"content":"**MSS**","lastModifiedDate":"2023-10-05"},{"lineNumber":798,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":799,"author":{"gitId":"zekone"},"content":"1.  User requests to add a note to a contact.","lastModifiedDate":"2023-10-26"},{"lineNumber":800,"author":{"gitId":"josepholim"},"content":"2.  KeepInTouch adds a note to the contact.","lastModifiedDate":"2023-10-30"},{"lineNumber":801,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":802,"author":{"gitId":"josepholim"},"content":"    Use case ends.","lastModifiedDate":"2023-10-05"},{"lineNumber":803,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":804,"author":{"gitId":"josepholim"},"content":"**Extensions**","lastModifiedDate":"2023-10-05"},{"lineNumber":805,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":806,"author":{"gitId":"josepholim"},"content":"* 1a. User inputs incomplete data.","lastModifiedDate":"2023-10-05"},{"lineNumber":807,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":808,"author":{"gitId":"josepholim"},"content":"    * 1a1. KeepInTouch shows a message indicating incomplete data.","lastModifiedDate":"2023-10-05"},{"lineNumber":809,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":810,"author":{"gitId":"josepholim"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2023-10-05"},{"lineNumber":811,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":812,"author":{"gitId":"josepholim"},"content":"* 1b. User inputs a contact that does not exist.","lastModifiedDate":"2023-10-05"},{"lineNumber":813,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":814,"author":{"gitId":"zekone"},"content":"    * 1b1. KeepInTouch shows a message indicating that the contact cannot be found.","lastModifiedDate":"2023-10-26"},{"lineNumber":815,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":816,"author":{"gitId":"josepholim"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2023-10-05"},{"lineNumber":817,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":818,"author":{"gitId":"josepholim"},"content":"**Use case: UC07 - Delete a note from a contact**","lastModifiedDate":"2023-11-13"},{"lineNumber":819,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":820,"author":{"gitId":"josepholim"},"content":"**MSS**","lastModifiedDate":"2023-10-05"},{"lineNumber":821,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":822,"author":{"gitId":"josepholim"},"content":"1.  User requests to delete an existing note from a contact.","lastModifiedDate":"2023-10-30"},{"lineNumber":823,"author":{"gitId":"josepholim"},"content":"2.  KeepInTouch deletes the specified note from the contact.","lastModifiedDate":"2023-10-30"},{"lineNumber":824,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":825,"author":{"gitId":"josepholim"},"content":"    Use case ends.","lastModifiedDate":"2023-10-05"},{"lineNumber":826,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":827,"author":{"gitId":"josepholim"},"content":"**Extensions**","lastModifiedDate":"2023-10-05"},{"lineNumber":828,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":829,"author":{"gitId":"josepholim"},"content":"* 1a. User inputs incomplete data.","lastModifiedDate":"2023-10-05"},{"lineNumber":830,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":831,"author":{"gitId":"josepholim"},"content":"    * 1a1. KeepInTouch shows a message indicating incomplete data.","lastModifiedDate":"2023-10-05"},{"lineNumber":832,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":833,"author":{"gitId":"Nixx162"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2023-11-13"},{"lineNumber":834,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":835,"author":{"gitId":"josepholim"},"content":"* 1b. User inputs a contact that does not exist.","lastModifiedDate":"2023-10-05"},{"lineNumber":836,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":837,"author":{"gitId":"zekone"},"content":"    * 1b1. KeepInTouch shows a message indicating that the contact cannot be found.","lastModifiedDate":"2023-10-26"},{"lineNumber":838,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":839,"author":{"gitId":"Nixx162"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2023-11-13"},{"lineNumber":840,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":841,"author":{"gitId":"zekone"},"content":"* 1c. User inputs a note that does not exist.","lastModifiedDate":"2023-10-26"},{"lineNumber":842,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":843,"author":{"gitId":"josepholim"},"content":"    * 1c1. KeepInTouch shows a message indicating that the note cannot be found.","lastModifiedDate":"2023-10-26"},{"lineNumber":844,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":845,"author":{"gitId":"Nixx162"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2023-11-13"},{"lineNumber":846,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":847,"author":{"gitId":"josepholim"},"content":"**Use case: UC08 - Add an event**","lastModifiedDate":"2023-11-13"},{"lineNumber":848,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":849,"author":{"gitId":"josepholim"},"content":"**MSS**","lastModifiedDate":"2023-10-05"},{"lineNumber":850,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":851,"author":{"gitId":"josepholim"},"content":"1.  User requests to add an event.","lastModifiedDate":"2023-10-05"},{"lineNumber":852,"author":{"gitId":"josepholim"},"content":"2.  KeepInTouch adds the event.","lastModifiedDate":"2023-10-05"},{"lineNumber":853,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":854,"author":{"gitId":"josepholim"},"content":"    Use case ends.","lastModifiedDate":"2023-10-05"},{"lineNumber":855,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":856,"author":{"gitId":"josepholim"},"content":"**Extensions**","lastModifiedDate":"2023-10-05"},{"lineNumber":857,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":858,"author":{"gitId":"josepholim"},"content":"* 1a. User inputs incomplete data.","lastModifiedDate":"2023-10-05"},{"lineNumber":859,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":860,"author":{"gitId":"josepholim"},"content":"    * 1a1. KeepInTouch shows a message indicating incomplete data.","lastModifiedDate":"2023-10-05"},{"lineNumber":861,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":862,"author":{"gitId":"josepholim"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2023-10-05"},{"lineNumber":863,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":864,"author":{"gitId":"josepholim"},"content":"**Use case: UC09 - Delete an event**","lastModifiedDate":"2023-11-13"},{"lineNumber":865,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":866,"author":{"gitId":"josepholim"},"content":"**MSS**","lastModifiedDate":"2023-10-05"},{"lineNumber":867,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":868,"author":{"gitId":"josepholim"},"content":"1.  User requests to delete an event.","lastModifiedDate":"2023-10-05"},{"lineNumber":869,"author":{"gitId":"josepholim"},"content":"2.  KeepInTouch deletes the event.","lastModifiedDate":"2023-10-05"},{"lineNumber":870,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":871,"author":{"gitId":"josepholim"},"content":"    Use case ends.","lastModifiedDate":"2023-10-05"},{"lineNumber":872,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":873,"author":{"gitId":"josepholim"},"content":"**Extensions**","lastModifiedDate":"2023-10-05"},{"lineNumber":874,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":875,"author":{"gitId":"josepholim"},"content":"* 1a. User inputs incomplete data.","lastModifiedDate":"2023-10-05"},{"lineNumber":876,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":877,"author":{"gitId":"josepholim"},"content":"    * 1a1. KeepInTouch shows a message indicating incomplete data.","lastModifiedDate":"2023-10-05"},{"lineNumber":878,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":879,"author":{"gitId":"Nixx162"},"content":"      Use case reusmes at step 1.","lastModifiedDate":"2023-11-13"},{"lineNumber":880,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":881,"author":{"gitId":"josepholim"},"content":"* 1b. User inputs an event that does not exist.","lastModifiedDate":"2023-10-05"},{"lineNumber":882,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":883,"author":{"gitId":"zekone"},"content":"    * 1b1. KeepInTouch shows a message indicating that the event cannot be found.","lastModifiedDate":"2023-10-26"},{"lineNumber":884,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":885,"author":{"gitId":"Nixx162"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2023-11-13"},{"lineNumber":886,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":887,"author":{"gitId":"josepholim"},"content":"**Use case: UC10 - Filter events**","lastModifiedDate":"2023-11-13"},{"lineNumber":888,"author":{"gitId":"Nixx162"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":889,"author":{"gitId":"Nixx162"},"content":"**MSS**","lastModifiedDate":"2023-10-27"},{"lineNumber":890,"author":{"gitId":"Nixx162"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":891,"author":{"gitId":"josepholim"},"content":"1.  User requests to find events within a specified time interval.","lastModifiedDate":"2023-11-13"},{"lineNumber":892,"author":{"gitId":"josepholim"},"content":"2.  KeepInTouch shows the events within the specified time interval.","lastModifiedDate":"2023-11-13"},{"lineNumber":893,"author":{"gitId":"Nixx162"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":894,"author":{"gitId":"Nixx162"},"content":"    Use case ends.","lastModifiedDate":"2023-10-27"},{"lineNumber":895,"author":{"gitId":"Nixx162"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":896,"author":{"gitId":"Nixx162"},"content":"**Extensions**","lastModifiedDate":"2023-10-27"},{"lineNumber":897,"author":{"gitId":"Nixx162"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":898,"author":{"gitId":"josepholim"},"content":"* 1a. User inputs incomplete or invalid data.","lastModifiedDate":"2023-11-13"},{"lineNumber":899,"author":{"gitId":"Nixx162"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":900,"author":{"gitId":"josepholim"},"content":"    * 1a1. KeepInTouch shows a message indicating incomplete or invalid data.","lastModifiedDate":"2023-11-13"},{"lineNumber":901,"author":{"gitId":"Nixx162"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":902,"author":{"gitId":"Nixx162"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2023-11-13"},{"lineNumber":903,"author":{"gitId":"Nixx162"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":904,"author":{"gitId":"zekone"},"content":"**Use case: UC10 - Adding tags to a contact**","lastModifiedDate":"2023-11-03"},{"lineNumber":905,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":906,"author":{"gitId":"zekone"},"content":"**MSS**","lastModifiedDate":"2023-10-26"},{"lineNumber":907,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":908,"author":{"gitId":"josepholim"},"content":"1.  User requests to add tags to a contact.","lastModifiedDate":"2023-10-26"},{"lineNumber":909,"author":{"gitId":"zekone"},"content":"2.  KeepInTouch appends that tags to the specified contact.","lastModifiedDate":"2023-10-26"},{"lineNumber":910,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":911,"author":{"gitId":"zekone"},"content":"    Use case ends.","lastModifiedDate":"2023-10-26"},{"lineNumber":912,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":913,"author":{"gitId":"zekone"},"content":"**Extensions**","lastModifiedDate":"2023-10-26"},{"lineNumber":914,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":915,"author":{"gitId":"zekone"},"content":"* 1a. User inputs incomplete data.","lastModifiedDate":"2023-10-28"},{"lineNumber":916,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":917,"author":{"gitId":"zekone"},"content":"    * 1a1. KeepInTouch shows a message indicating incomplete data.","lastModifiedDate":"2023-10-28"},{"lineNumber":918,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":919,"author":{"gitId":"Nixx162"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2023-11-13"},{"lineNumber":920,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":921,"author":{"gitId":"zekone"},"content":"* 1b. User inputs a non-alphanumeric tag.","lastModifiedDate":"2023-10-28"},{"lineNumber":922,"author":{"gitId":"zekone"},"content":"    * 1b1. KeepInTouch shows a message indicating that tags should be alphanumeric.","lastModifiedDate":"2023-10-28"},{"lineNumber":923,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":924,"author":{"gitId":"Nixx162"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2023-11-13"},{"lineNumber":925,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":926,"author":{"gitId":"zekone"},"content":"* 1c. User inputs a contact that does not exist.","lastModifiedDate":"2023-10-28"},{"lineNumber":927,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":928,"author":{"gitId":"zekone"},"content":"    * 1c1. KeepInTouch shows a message indicating that the contact cannot be found.","lastModifiedDate":"2023-10-28"},{"lineNumber":929,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":930,"author":{"gitId":"Nixx162"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2023-11-13"},{"lineNumber":931,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":932,"author":{"gitId":"josepholim"},"content":"**Use case: UC12 - Delete tags from a contact**","lastModifiedDate":"2023-11-13"},{"lineNumber":933,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":934,"author":{"gitId":"josepholim"},"content":"**MSS**","lastModifiedDate":"2023-10-26"},{"lineNumber":935,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":936,"author":{"gitId":"josepholim"},"content":"1.  User requests to delete tags from a contact.","lastModifiedDate":"2023-10-26"},{"lineNumber":937,"author":{"gitId":"josepholim"},"content":"2.  KeepInTouch deletes the tags from the specified contact.","lastModifiedDate":"2023-10-26"},{"lineNumber":938,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":939,"author":{"gitId":"josepholim"},"content":"    Use case ends.","lastModifiedDate":"2023-10-26"},{"lineNumber":940,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":941,"author":{"gitId":"josepholim"},"content":"**Extensions**","lastModifiedDate":"2023-10-26"},{"lineNumber":942,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":943,"author":{"gitId":"josepholim"},"content":"* 1a. User inputs incomplete data.","lastModifiedDate":"2023-10-26"},{"lineNumber":944,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":945,"author":{"gitId":"josepholim"},"content":"    * 1a1. KeepInTouch shows a message indicating incomplete data.","lastModifiedDate":"2023-10-26"},{"lineNumber":946,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":947,"author":{"gitId":"Nixx162"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2023-11-13"},{"lineNumber":948,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":949,"author":{"gitId":"zekone"},"content":"* 1b. User inputs a non-alphanumeric tag.","lastModifiedDate":"2023-10-28"},{"lineNumber":950,"author":{"gitId":"zekone"},"content":"    * 1b1. KeepInTouch shows a message indicating that tags should be alphanumeric.","lastModifiedDate":"2023-10-28"},{"lineNumber":951,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":952,"author":{"gitId":"Nixx162"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2023-11-13"},{"lineNumber":953,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":954,"author":{"gitId":"zekone"},"content":"* 1c. User inputs a contact that does not exist.","lastModifiedDate":"2023-10-28"},{"lineNumber":955,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":956,"author":{"gitId":"zekone"},"content":"    * 1c1. KeepInTouch shows a message indicating that the contact cannot be found.","lastModifiedDate":"2023-10-28"},{"lineNumber":957,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":958,"author":{"gitId":"Nixx162"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2023-11-13"},{"lineNumber":959,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":960,"author":{"gitId":"josepholim"},"content":"**Use case: UC13 - Filter contacts based on tags**","lastModifiedDate":"2023-11-13"},{"lineNumber":961,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":962,"author":{"gitId":"josepholim"},"content":"**MSS**","lastModifiedDate":"2023-11-13"},{"lineNumber":963,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":964,"author":{"gitId":"josepholim"},"content":"1.  User requests to find contacts with one of the specified tags.","lastModifiedDate":"2023-11-13"},{"lineNumber":965,"author":{"gitId":"josepholim"},"content":"2.  KeepInTouch shows the filtered contacts.","lastModifiedDate":"2023-11-13"},{"lineNumber":966,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":967,"author":{"gitId":"josepholim"},"content":"    Use case ends.","lastModifiedDate":"2023-11-13"},{"lineNumber":968,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":969,"author":{"gitId":"josepholim"},"content":"**Use case: UC14 - Clear all data**","lastModifiedDate":"2023-11-13"},{"lineNumber":970,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":971,"author":{"gitId":"josepholim"},"content":"**MSS**","lastModifiedDate":"2023-11-13"},{"lineNumber":972,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":973,"author":{"gitId":"josepholim"},"content":"1.  User requests to remove all unused data.","lastModifiedDate":"2023-11-13"},{"lineNumber":974,"author":{"gitId":"josepholim"},"content":"2.  KeepInTouch clears all the data.","lastModifiedDate":"2023-11-13"},{"lineNumber":975,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":976,"author":{"gitId":"josepholim"},"content":"    Use case ends.","lastModifiedDate":"2023-11-13"},{"lineNumber":977,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":978,"author":{"gitId":"josepholim"},"content":"**Use case: UC15 - Exit the program**","lastModifiedDate":"2023-11-13"},{"lineNumber":979,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":980,"author":{"gitId":"josepholim"},"content":"**MSS**","lastModifiedDate":"2023-10-05"},{"lineNumber":981,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":982,"author":{"gitId":"josepholim"},"content":"1.  User requests to exit the program.","lastModifiedDate":"2023-10-05"},{"lineNumber":983,"author":{"gitId":"josepholim"},"content":"2.  KeepInTouch exits the program.","lastModifiedDate":"2023-10-05"},{"lineNumber":984,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":985,"author":{"gitId":"josepholim"},"content":"    Use case ends.","lastModifiedDate":"2023-10-05"},{"lineNumber":986,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":987,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":988,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":989,"author":{"gitId":"-"},"content":"1.  Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2020-05-23"},{"lineNumber":990,"author":{"gitId":"josepholim"},"content":"2.  Should be able to hold up to 10000 contacts without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2023-11-13"},{"lineNumber":991,"author":{"gitId":"josepholim"},"content":"3.  All commands should be executed within two seconds.","lastModifiedDate":"2023-11-13"},{"lineNumber":992,"author":{"gitId":"josepholim"},"content":"4.  Should be offered as a free application.","lastModifiedDate":"2023-11-13"},{"lineNumber":993,"author":{"gitId":"josepholim"},"content":"5.  Should work without requiring any installer.","lastModifiedDate":"2023-10-04"},{"lineNumber":994,"author":{"gitId":"josepholim"},"content":"6.  Should work without requiring any internet connection.","lastModifiedDate":"2023-10-04"},{"lineNumber":995,"author":{"gitId":"josepholim"},"content":"7.  A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2023-10-04"},{"lineNumber":996,"author":{"gitId":"josepholim"},"content":"8.  The GUI should work well for standard screen resolutions 1920x1080 and higher, and, for screen scales 100% and 125%.","lastModifiedDate":"2023-10-04"},{"lineNumber":997,"author":{"gitId":"josepholim"},"content":"9.  The GUI should be intuitive and user-friendly.","lastModifiedDate":"2023-11-13"},{"lineNumber":998,"author":{"gitId":"josepholim"},"content":"10. Should not require user to have prior technical knowledge.","lastModifiedDate":"2023-11-13"},{"lineNumber":999,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1000,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1001,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":1002,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1003,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, OS-X","lastModifiedDate":"2020-05-23"},{"lineNumber":1004,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1005,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":1006,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1007,"author":{"gitId":"josepholim"},"content":"## **Appendix B: Instructions for manual testing**","lastModifiedDate":"2023-11-13"},{"lineNumber":1008,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1009,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":1010,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1011,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":1012,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":1013,"author":{"gitId":"-"},"content":"**Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2023-09-12"},{"lineNumber":1014,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":1015,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1016,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":1017,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1018,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":1019,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1020,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":1021,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1022,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":1023,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1024,"author":{"gitId":"larrywang0701"},"content":"   2. Double-click the jar file","lastModifiedDate":"2023-11-14"},{"lineNumber":1025,"author":{"gitId":"zekone"},"content":"   Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2023-11-13"},{"lineNumber":1026,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1027,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":1028,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2023-11-14"},{"lineNumber":1029,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1030,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":1031,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1032,"author":{"gitId":"larrywang0701"},"content":"   2. Re-launch the app by double-clicking the jar file.","lastModifiedDate":"2023-11-14"},{"lineNumber":1033,"author":{"gitId":"-"},"content":"    Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":1034,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1035,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":1036,"author":{"gitId":"zekone"},"content":"1. Exiting","lastModifiedDate":"2023-11-13"},{"lineNumber":1037,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":1038,"author":{"gitId":"zekone"},"content":"    1.  Use the `exit` command to close the app.","lastModifiedDate":"2023-11-13"},{"lineNumber":1039,"author":{"gitId":"zekone"},"content":"    Expected: app closes without error.","lastModifiedDate":"2023-11-13"},{"lineNumber":1040,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1041,"author":{"gitId":"-"},"content":"### Deleting a person","lastModifiedDate":"2020-05-23"},{"lineNumber":1042,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1043,"author":{"gitId":"AndrewJanong"},"content":"1. Deleting a contact while all contacts are being shown","lastModifiedDate":"2023-11-13"},{"lineNumber":1044,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1045,"author":{"gitId":"AndrewJanong"},"content":"   1. Prerequisites: List all contacts using the `list contact` command. Multiple contacts will be shown in the list.","lastModifiedDate":"2023-11-13"},{"lineNumber":1046,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1047,"author":{"gitId":"AndrewJanong"},"content":"   1. Test case: `delete contact 1`\u003cbr\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":1048,"author":{"gitId":"AndrewJanong"},"content":"      Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message.","lastModifiedDate":"2023-11-13"},{"lineNumber":1049,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1050,"author":{"gitId":"AndrewJanong"},"content":"   1. Test case: `delete contact 0`\u003cbr\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":1051,"author":{"gitId":"AndrewJanong"},"content":"      Expected: No contact is deleted. Error details shown in the status message.","lastModifiedDate":"2023-11-13"},{"lineNumber":1052,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1053,"author":{"gitId":"AndrewJanong"},"content":"   1. Other incorrect delete contact commands to try: `delete contact`, `delete contact x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":1054,"author":{"gitId":"-"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":1055,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1056,"author":{"gitId":"zekone"},"content":"1. Deleting a contact while event list is showing","lastModifiedDate":"2023-11-14"},{"lineNumber":1057,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1058,"author":{"gitId":"AndrewJanong"},"content":"    1. Prerequisites: List all contacts using the `list` command. Multiple contacts in the list. Add events to the first contact in the index and remove all event from the second contact in the index.","lastModifiedDate":"2023-11-13"},{"lineNumber":1059,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1060,"author":{"gitId":"zekone"},"content":"    1. Test case: `delete contact 1`\u003cbr\u003e","lastModifiedDate":"2023-11-14"},{"lineNumber":1061,"author":{"gitId":"Nixx162"},"content":"        Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. All events related to the first contact should be deleted from the event list as well","lastModifiedDate":"2023-11-13"},{"lineNumber":1062,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1063,"author":{"gitId":"zekone"},"content":"### Adding tag","lastModifiedDate":"2023-11-13"},{"lineNumber":1064,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":1065,"author":{"gitId":"zekone"},"content":"1. Adding tag while all contacts is shown.","lastModifiedDate":"2023-11-13"},{"lineNumber":1066,"author":{"gitId":"larrywang0701"},"content":"    1. Prerequisites: List all contacts using the `list contact` command. At least one contact shown in the list.\u003cbr\u003e","lastModifiedDate":"2023-11-14"},{"lineNumber":1067,"author":{"gitId":"Nixx162"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":1068,"author":{"gitId":"Nixx162"},"content":"    1. Test case: `add tag -id 1 -t Frontend -t Java`\u003cbr\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":1069,"author":{"gitId":"Nixx162"},"content":"    Expected: The new tags appear below the name of the first contact in the list. The list of tags added is shown in the status message.","lastModifiedDate":"2023-11-13"},{"lineNumber":1070,"author":{"gitId":"Nixx162"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":1071,"author":{"gitId":"Nixx162"},"content":"    1. Test case: `add tag -id 0 -t Frontend`\u003cbr\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":1072,"author":{"gitId":"AndrewJanong"},"content":"    Expected: No tag is added. Error details shown in the status message.","lastModifiedDate":"2023-11-13"},{"lineNumber":1073,"author":{"gitId":"Nixx162"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":1074,"author":{"gitId":"Nixx162"},"content":"    1. Test case: `add tag -id 1 -t HR representative`\u003cbr\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":1075,"author":{"gitId":"zekone"},"content":"    Expected: No tag is added as tag name should not contain spaces. Error details shown in the status message.\u003cbr\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":1076,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":1077,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":1078,"author":{"gitId":"zekone"},"content":"1. Adding duplicate tag to a contact","lastModifiedDate":"2023-11-13"},{"lineNumber":1079,"author":{"gitId":"larrywang0701"},"content":"    1. Prerequisites: List all contacts using the `list contact` command. At least one contact shown in the list has at least one tag.","lastModifiedDate":"2023-11-14"},{"lineNumber":1080,"author":{"gitId":"Nixx162"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":1081,"author":{"gitId":"Nixx162"},"content":"    1. Test case: `add tag -id 1 -t x`, where x is an already existing tag in the first contact.\u003cbr\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":1082,"author":{"gitId":"Nixx162"},"content":"    Expected: The new tag appear below the name of the first contact in the list. The list of tags added is shown in the status message.","lastModifiedDate":"2023-11-13"},{"lineNumber":1083,"author":{"gitId":"Nixx162"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":1084,"author":{"gitId":"Nixx162"},"content":"    1. Test case: `add tag -id -t Frontend -t Frontend`\u003cbr\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":1085,"author":{"gitId":"Nixx162"},"content":"    Expected: Only one `Frontend` tag is added below the name of the first contact. Only one `Frontend` tag is shown in the list of tags added in the status message.","lastModifiedDate":"2023-11-13"},{"lineNumber":1086,"author":{"gitId":"Nixx162"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":1087,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":1088,"author":{"gitId":"Nixx162"},"content":"1. Adding tag while contact list is being filtered","lastModifiedDate":"2023-11-13"},{"lineNumber":1089,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":1090,"author":{"gitId":"Nixx162"},"content":"    1. Prerequisites: Filter the list of contacts either by calling `list contact -t [SOME_TAG]` or `find [SOME KEYWORD]`.","lastModifiedDate":"2023-11-13"},{"lineNumber":1091,"author":{"gitId":"Nixx162"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":1092,"author":{"gitId":"Nixx162"},"content":"    1. Test case: `add tag -id 1 -t Frontend`, when no contact is shown\u003cbr\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":1093,"author":{"gitId":"AndrewJanong"},"content":"    Expected: No tag is added. Error details shown in the status message.","lastModifiedDate":"2023-11-13"},{"lineNumber":1094,"author":{"gitId":"Nixx162"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":1095,"author":{"gitId":"Nixx162"},"content":"    1. Test case: `add tag -id 1 -t Frontend`, when at least 1 contact is shown\u003cbr\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":1096,"author":{"gitId":"Nixx162"},"content":"    Expected: The new tags appear below the name of the first contact in the filtered list. The list of tags added is shown in the status message. List will go back to showing all contacts.","lastModifiedDate":"2023-11-13"},{"lineNumber":1097,"author":{"gitId":"Nixx162"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":1098,"author":{"gitId":"zekone"},"content":"### Deleting tag","lastModifiedDate":"2023-11-13"},{"lineNumber":1099,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":1100,"author":{"gitId":"zekone"},"content":"1. Deleting tag while all contacts is shown and tag exists.","lastModifiedDate":"2023-11-13"},{"lineNumber":1101,"author":{"gitId":"larrywang0701"},"content":"    1. Prerequisites: List all contacts using the `list contact` command. At least one contact shown in the list has at least one tag.","lastModifiedDate":"2023-11-14"},{"lineNumber":1102,"author":{"gitId":"Nixx162"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":1103,"author":{"gitId":"Nixx162"},"content":"    1. Test case: `delete tag -id 1 -t x`, where x is an existing tag in the first contact.\u003cbr\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":1104,"author":{"gitId":"Nixx162"},"content":"    Expected: The tag x is no longer below the name of the first contact in the list. The list of tags deleted is shown in the status message.","lastModifiedDate":"2023-11-13"},{"lineNumber":1105,"author":{"gitId":"Nixx162"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":1106,"author":{"gitId":"Nixx162"},"content":"    1. Test case: `delete tag -id 0 -t Frontend`\u003cbr\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":1107,"author":{"gitId":"AndrewJanong"},"content":"    Expected: No tag is deleted. Error details shown in the status message.","lastModifiedDate":"2023-11-13"},{"lineNumber":1108,"author":{"gitId":"Nixx162"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":1109,"author":{"gitId":"Nixx162"},"content":"    1. Test case: `delete tag -id 1 -t HR representative`\u003cbr\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":1110,"author":{"gitId":"zekone"},"content":"    Expected: No tag deleted as tag name should not contain spaces. Error details shown in the status message.\u003cbr\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":1111,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":1112,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":1113,"author":{"gitId":"zekone"},"content":"1. Deleting tag while all contacts is shown but tag does not exist.","lastModifiedDate":"2023-11-13"},{"lineNumber":1114,"author":{"gitId":"larrywang0701"},"content":"    1. Prerequisites: List all contacts using the `list contact` command. At least one contact is shown in the list.\u003cbr\u003e","lastModifiedDate":"2023-11-14"},{"lineNumber":1115,"author":{"gitId":"Nixx162"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":1116,"author":{"gitId":"Nixx162"},"content":"    1. Test case: `delete tag -id 1 -t x`, where `x` is a non-existing tag in the first contact.\u003cbr\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":1117,"author":{"gitId":"Nixx162"},"content":"    Expected: No tags is deleted. The list of tags deleted shown in the status message is empty while the list of tags not found contains `x`.","lastModifiedDate":"2023-11-13"},{"lineNumber":1118,"author":{"gitId":"Nixx162"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":1119,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":1120,"author":{"gitId":"Nixx162"},"content":"1. Deleting tag while contact list is being filtered","lastModifiedDate":"2023-11-13"},{"lineNumber":1121,"author":{"gitId":"Nixx162"},"content":"    1. Prerequisites: Filter the list of contacts either by calling `list contact -t [SOME_TAG]` or `find [SOME KEYWORD]`.","lastModifiedDate":"2023-11-13"},{"lineNumber":1122,"author":{"gitId":"Nixx162"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":1123,"author":{"gitId":"Nixx162"},"content":"    1. Test case: `delete tag -id 1 -t Frontend`, when no contact is shown\u003cbr\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":1124,"author":{"gitId":"AndrewJanong"},"content":"    Expected: No tag is deleted. Error details shown in the status message.","lastModifiedDate":"2023-11-13"},{"lineNumber":1125,"author":{"gitId":"Nixx162"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":1126,"author":{"gitId":"AndrewJanong"},"content":"    1. Test case: `delete tag -id 1 -t x`, when at least 1 contact is shown and `x` is an existing tag in the first contact. \u003cbr\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":1127,"author":{"gitId":"Nixx162"},"content":"    Expected: The tag `x` is no longer below the name of the first contact in the list. The list of tags deleted shown in the status message is empty while the list of tags not found contains `x`. List will go back to showing all contacts.","lastModifiedDate":"2023-11-13"},{"lineNumber":1128,"author":{"gitId":"Nixx162"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":1129,"author":{"gitId":"AndrewJanong"},"content":"    1. Test case: `delete tag -id 1 -t x`, when at least 1 contact is shown and `x` is a non-existing tag in the first contact. \u003cbr\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":1130,"author":{"gitId":"Nixx162"},"content":"    Expected: The tag `x` is no longer below the name of the first contact in the list. The list of tags deleted is shown in the status message. List will go back to showing all contacts.","lastModifiedDate":"2023-11-13"},{"lineNumber":1131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1132,"author":{"gitId":"josepholim"},"content":"### Adding note","lastModifiedDate":"2023-11-13"},{"lineNumber":1133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1134,"author":{"gitId":"josepholim"},"content":"1. Adding note while all contacts is shown.","lastModifiedDate":"2023-11-13"},{"lineNumber":1135,"author":{"gitId":"AndrewJanong"},"content":"    1. Prerequisites: List all contacts using the `list contact` command. At least one contact shown in the list.\u003cbr\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":1136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1137,"author":{"gitId":"zekone"},"content":"    1. Test case: `add note -id 1 -tit Meeting Topics -con The topic is about the framework design of the project`\u003cbr\u003e","lastModifiedDate":"2023-11-14"},{"lineNumber":1138,"author":{"gitId":"josepholim"},"content":"       Expected: The new note appears in the Notes column of the contact. The note added is shown in the status message.","lastModifiedDate":"2023-11-13"},{"lineNumber":1139,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":1140,"author":{"gitId":"zekone"},"content":"    1. Test case: `add note -id 0 -tit Meeting Topics -con The topic is about the framework design of the project`\u003cbr\u003e","lastModifiedDate":"2023-11-14"},{"lineNumber":1141,"author":{"gitId":"josepholim"},"content":"       Expected: No note is added. Error details shown in the status message.","lastModifiedDate":"2023-11-13"},{"lineNumber":1142,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":1143,"author":{"gitId":"zekone"},"content":"    1. Test case: `add note -id 1 -tit Meeting Topics`\u003cbr\u003e","lastModifiedDate":"2023-11-14"},{"lineNumber":1144,"author":{"gitId":"josepholim"},"content":"       Expected: No note is added as a note should have a note content. Error details shown in the status message.\u003cbr\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":1145,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":1146,"author":{"gitId":"zekone"},"content":"1. Adding another note to a contact","lastModifiedDate":"2023-11-14"},{"lineNumber":1147,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":1148,"author":{"gitId":"AndrewJanong"},"content":"    1. Prerequisites: List all contacts using the `list contact` command. At least one contact shown in the list has at least one note.","lastModifiedDate":"2023-11-13"},{"lineNumber":1149,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":1150,"author":{"gitId":"zekone"},"content":"    1. Test case: `add note -id 1 -tit Open Position -con Applications for SWE full-time positions will open soon`, where x is an already existing tag in the first contact.\u003cbr\u003e","lastModifiedDate":"2023-11-14"},{"lineNumber":1151,"author":{"gitId":"josepholim"},"content":"       Expected: The new note appears in the Notes column of the contact. The note added is shown in the status message.","lastModifiedDate":"2023-11-13"},{"lineNumber":1152,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":1153,"author":{"gitId":"zekone"},"content":"1. Adding note while contact list is being filtered","lastModifiedDate":"2023-11-14"},{"lineNumber":1154,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":1155,"author":{"gitId":"josepholim"},"content":"    1. Prerequisites: Filter the list of contacts by calling `find KEYWORD [OTHER_KEYWORDS...]`.","lastModifiedDate":"2023-11-13"},{"lineNumber":1156,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":1157,"author":{"gitId":"zekone"},"content":"    1. Test case: `add note -id 1 -tit Meeting Topics -con The topic is about the framework design of the project`, when no contact is shown\u003cbr\u003e","lastModifiedDate":"2023-11-14"},{"lineNumber":1158,"author":{"gitId":"josepholim"},"content":"       Expected: No note is added. Error details shown in the status message.","lastModifiedDate":"2023-11-13"},{"lineNumber":1159,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":1160,"author":{"gitId":"zekone"},"content":"    1. Test case: `add note -id 1 -tit Meeting Topics -con The topic is about the framework design of the project`, when at least 1 contact is shown\u003cbr\u003e","lastModifiedDate":"2023-11-14"},{"lineNumber":1161,"author":{"gitId":"josepholim"},"content":"       Expected: The new note appears in the Notes column of the contact. The note added is shown in the status message.","lastModifiedDate":"2023-11-13"},{"lineNumber":1162,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":1163,"author":{"gitId":"josepholim"},"content":"### Deleting note","lastModifiedDate":"2023-11-13"},{"lineNumber":1164,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":1165,"author":{"gitId":"josepholim"},"content":"1. Deleting note while all contacts is shown and note exists.","lastModifiedDate":"2023-11-13"},{"lineNumber":1166,"author":{"gitId":"AndrewJanong"},"content":"    1. Prerequisites: List all contacts using the `list contact` command. At least one contact shown in the list has at least one note.","lastModifiedDate":"2023-11-13"},{"lineNumber":1167,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":1168,"author":{"gitId":"zekone"},"content":"    1. Test case: `delete note -id 1 -nid 0`\u003cbr\u003e","lastModifiedDate":"2023-11-14"},{"lineNumber":1169,"author":{"gitId":"josepholim"},"content":"       Expected: No note is deleted as note id is invalid. Error details shown in the status message.","lastModifiedDate":"2023-11-13"},{"lineNumber":1170,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":1171,"author":{"gitId":"zekone"},"content":"    1. Test case: `delete note -id 1 -nid 1`\u003cbr\u003e","lastModifiedDate":"2023-11-14"},{"lineNumber":1172,"author":{"gitId":"josepholim"},"content":"       Expected: The note deleted is no longer shown in the first contact in the list. The note deleted is shown in the status message.","lastModifiedDate":"2023-11-13"},{"lineNumber":1173,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":1174,"author":{"gitId":"zekone"},"content":"1. Deleting note while all contacts is shown but note does not exist.","lastModifiedDate":"2023-11-14"},{"lineNumber":1175,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":1176,"author":{"gitId":"AndrewJanong"},"content":"    1. Prerequisites: List all contacts using the `list contact` command. At least one contact is shown in the list.\u003cbr\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":1177,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":1178,"author":{"gitId":"zekone"},"content":"    1. Test case: `delete note -id 1 -nid 100`, where the number of notes in the first contact is less than 100.\u003cbr\u003e","lastModifiedDate":"2023-11-14"},{"lineNumber":1179,"author":{"gitId":"josepholim"},"content":"       Expected: No note is deleted. Error details shown in the status message.","lastModifiedDate":"2023-11-13"},{"lineNumber":1180,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":1181,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":1182,"author":{"gitId":"zekone"},"content":"1. Deleting note while contact list is being filtered","lastModifiedDate":"2023-11-14"},{"lineNumber":1183,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":1184,"author":{"gitId":"josepholim"},"content":"    1. Prerequisites: Filter the list of contacts by calling `find KEYWORD [OTHER_KEYWORDS...]`.","lastModifiedDate":"2023-11-13"},{"lineNumber":1185,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":1186,"author":{"gitId":"zekone"},"content":"    1. Test case: `delete note -id 1 -nid 1`, when no contact is shown.\u003cbr\u003e","lastModifiedDate":"2023-11-14"},{"lineNumber":1187,"author":{"gitId":"josepholim"},"content":"       Expected: No note is deleted. Error details shown in the status message.","lastModifiedDate":"2023-11-13"},{"lineNumber":1188,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":1189,"author":{"gitId":"zekone"},"content":"    1. Test case: `delete note -id 1 -nid 1`, when at least 1 contact is shown but has no notes.\u003cbr\u003e","lastModifiedDate":"2023-11-14"},{"lineNumber":1190,"author":{"gitId":"josepholim"},"content":"       Expected: No note is deleted. Error details shown in the status message.","lastModifiedDate":"2023-11-13"},{"lineNumber":1191,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":1192,"author":{"gitId":"zekone"},"content":"    1. Test case: `delete note -id 1 -nid 1`, when at least 1 contact is shown has at least 1 note.\u003cbr\u003e","lastModifiedDate":"2023-11-14"},{"lineNumber":1193,"author":{"gitId":"josepholim"},"content":"       Expected: The note deleted is no longer shown in the first contact in the list. The note deleted is shown in the status message.","lastModifiedDate":"2023-11-13"},{"lineNumber":1194,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":1195,"author":{"gitId":"AndrewJanong"},"content":"### Adding event","lastModifiedDate":"2023-11-13"},{"lineNumber":1196,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":1197,"author":{"gitId":"AndrewJanong"},"content":"1. Adding event while all contacts are shown.","lastModifiedDate":"2023-11-13"},{"lineNumber":1198,"author":{"gitId":"larrywang0701"},"content":"    1. Prerequisites: List all contacts using the `list contact` command. At least one contact shown in the list and there will be an events column for each contact.","lastModifiedDate":"2023-11-14"},{"lineNumber":1199,"author":{"gitId":"AndrewJanong"},"content":"       Use the `list events` command to open a new window with a list of all events without the respective contacts.\u003cbr\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":1200,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":1201,"author":{"gitId":"AndrewJanong"},"content":"    1. Test case: `add event -id 1 -en Meeting with professor -st 2024-11-17 12:00:00 -et 2024-11-17 13:00:00 -loc COM 1 Basement -info Discuss the project`\u003cbr\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":1202,"author":{"gitId":"AndrewJanong"},"content":"       Expected: The new event will appear in the first contact\u0027s event column. It will also be added in the event list window. The title of the event added is shown in the status message.","lastModifiedDate":"2023-11-13"},{"lineNumber":1203,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":1204,"author":{"gitId":"AndrewJanong"},"content":"    1. Test case: `add event -id 1 -en Meeting with professor -st 12:00:00 -et 13:00:00 -loc COM 1 Basement -info Discuss the project`\u003cbr\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":1205,"author":{"gitId":"AndrewJanong"},"content":"       Expected: Similar to previous test, but date will automatically be current date.\u003cbr\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":1206,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":1207,"author":{"gitId":"AndrewJanong"},"content":"    1. Test case: `add event -id 1 -en Meeting with professor -st 2024-11-17 -et 2024-11-18 -loc COM 1 Basement -info Discuss the project`\u003cbr\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":1208,"author":{"gitId":"AndrewJanong"},"content":"       Expected: Similar to previous test, but time will automatically be `00:00:00`.\u003cbr\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":1209,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":1210,"author":{"gitId":"AndrewJanong"},"content":"    1. Test case: `add event -id 0 -en Chat with recruiter -st 2024-11-24 17:00:00 -et 2024-11-24 18:00:00 -loc Star Vista -info Discuss job opportunities`\u003cbr\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":1211,"author":{"gitId":"AndrewJanong"},"content":"       Expected: No event is added. Error details shown in the status message.","lastModifiedDate":"2023-11-13"},{"lineNumber":1212,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":1213,"author":{"gitId":"AndrewJanong"},"content":"    1. Test case: `add event -id 1 -en Chat with recruiter -st 2024/11/24 17:00:00 -et 2024/11/24 18:00:00 -loc Star Vista -info Discuss job opportunities`\u003cbr\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":1214,"author":{"gitId":"AndrewJanong"},"content":"       Expected: No event is added as date and time is not in the correct format. Error details shown in the status message.\u003cbr\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":1215,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":1216,"author":{"gitId":"AndrewJanong"},"content":"1. Adding duplicate or clashing events","lastModifiedDate":"2023-11-13"},{"lineNumber":1217,"author":{"gitId":"larrywang0701"},"content":"    1. Prerequisites: Use the `list events` command to open a new window with a list of all events without the respective contacts.","lastModifiedDate":"2023-11-14"},{"lineNumber":1218,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":1219,"author":{"gitId":"AndrewJanong"},"content":"    1. Test case: `add event -id 1 ...`, where `...` is an already existing event in the event list.\u003cbr\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":1220,"author":{"gitId":"AndrewJanong"},"content":"       Expected: No event is added. Error details shown in the status message.","lastModifiedDate":"2023-11-13"},{"lineNumber":1221,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":1222,"author":{"gitId":"AndrewJanong"},"content":"    1. Test case: `add event -id 1 ... -st x` where `x` is in between the start and end time of an event currently on the list.\u003cbr\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":1223,"author":{"gitId":"AndrewJanong"},"content":"       Expected: No event is added. Error details shown in the status message.","lastModifiedDate":"2023-11-13"},{"lineNumber":1224,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":1225,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":1226,"author":{"gitId":"AndrewJanong"},"content":"1. Adding event while contact list is being filtered","lastModifiedDate":"2023-11-13"},{"lineNumber":1227,"author":{"gitId":"AndrewJanong"},"content":"    1. Prerequisites: Filter the list of contacts either by calling `list contact -t [SOME_TAG]` or `find [SOME KEYWORD]`.","lastModifiedDate":"2023-11-13"},{"lineNumber":1228,"author":{"gitId":"AndrewJanong"},"content":"       Use the `list events` command to open a new window with a list of all events without the respective contacts.","lastModifiedDate":"2023-11-13"},{"lineNumber":1229,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":1230,"author":{"gitId":"AndrewJanong"},"content":"    1. Test case: `add event -id 1 ...`, when no contact is shown\u003cbr\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":1231,"author":{"gitId":"AndrewJanong"},"content":"       Expected: No event is added. Error details shown in the status message.","lastModifiedDate":"2023-11-13"},{"lineNumber":1232,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":1233,"author":{"gitId":"AndrewJanong"},"content":"    1. Test case: `add event -id 1 ...`, when at least 1 contact is shown\u003cbr\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":1234,"author":{"gitId":"AndrewJanong"},"content":"       Expected: The new event will appear in the first contact\u0027s (in the filtered list) event column. It will also be added in the event list window. The title of the event added is shown in the status message.","lastModifiedDate":"2023-11-13"},{"lineNumber":1235,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":1236,"author":{"gitId":"larrywang0701"},"content":"### Listing events","lastModifiedDate":"2023-11-14"},{"lineNumber":1237,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":1238,"author":{"gitId":"larrywang0701"},"content":"1. Listing events without using filters","lastModifiedDate":"2023-11-14"},{"lineNumber":1239,"author":{"gitId":"larrywang0701"},"content":"    1. Prerequisites: There are at least 2 events in the address book","lastModifiedDate":"2023-11-14"},{"lineNumber":1240,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":1241,"author":{"gitId":"zekone"},"content":"    1. Test case: `list events`\u003cbr\u003e","lastModifiedDate":"2023-11-14"},{"lineNumber":1242,"author":{"gitId":"larrywang0701"},"content":"       Expected: All events in the address book are shown in the status message and a new \"Event List\" window, sorted by start time in **ascending** order.","lastModifiedDate":"2023-11-14"},{"lineNumber":1243,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":1244,"author":{"gitId":"zekone"},"content":"    1. Test case: `list events -descending`\u003cbr\u003e","lastModifiedDate":"2023-11-14"},{"lineNumber":1245,"author":{"gitId":"larrywang0701"},"content":"       Expected: All events in the address book are shown in the status message and a new \"Event List\" window, sorted by start time in **descending** order.","lastModifiedDate":"2023-11-14"},{"lineNumber":1246,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":1247,"author":{"gitId":"zekone"},"content":"    1. Test case: `list events -descending xxx`\u003cbr\u003e","lastModifiedDate":"2023-11-14"},{"lineNumber":1248,"author":{"gitId":"larrywang0701"},"content":"       Expected: Error message about the wrong command format is shown in the status message.","lastModifiedDate":"2023-11-14"},{"lineNumber":1249,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":1250,"author":{"gitId":"zekone"},"content":"1. Listing events with filters:","lastModifiedDate":"2023-11-14"},{"lineNumber":1251,"author":{"gitId":"larrywang0701"},"content":"    1. Prerequisites: There are at least 2 events in the address book","lastModifiedDate":"2023-11-14"},{"lineNumber":1252,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":1253,"author":{"gitId":"zekone"},"content":"    1. Test case: `list events -st 2023-11-14 00:00 -et 2023-11-20 00:00`\u003cbr\u003e","lastModifiedDate":"2023-11-14"},{"lineNumber":1254,"author":{"gitId":"larrywang0701"},"content":"       Expected: Only the events that the start time is within `2023-11-14 00:00:00` and `2023-11-20 00:00:00` are shown in the status message and a new \"Event List\" window, sorted by start time in **ascending** order.","lastModifiedDate":"2023-11-14"},{"lineNumber":1255,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":1256,"author":{"gitId":"zekone"},"content":"    1. Test case: `list events -st 2023-11-14 00:00 -et 2023-11-20 00:00 -descending`\u003cbr\u003e","lastModifiedDate":"2023-11-14"},{"lineNumber":1257,"author":{"gitId":"larrywang0701"},"content":"       Expected: Only the events that the start time is within `2023-11-14 00:00:00` and `2023-11-20 00:00:00` are shown in the status message and a new \"Event List\" window, sorted by start time in **descending** order.","lastModifiedDate":"2023-11-14"},{"lineNumber":1258,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":1259,"author":{"gitId":"zekone"},"content":"    1. Test case: `list events -st 2023-11-14 00:00`\u003cbr\u003e","lastModifiedDate":"2023-11-14"},{"lineNumber":1260,"author":{"gitId":"larrywang0701"},"content":"       Expected: Error message about the wrong command format is shown in the status message.","lastModifiedDate":"2023-11-14"},{"lineNumber":1261,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":1262,"author":{"gitId":"zekone"},"content":"    1. Test case: `list events -et 2023-11-14 00:00`\u003cbr\u003e","lastModifiedDate":"2023-11-14"},{"lineNumber":1263,"author":{"gitId":"larrywang0701"},"content":"       Expected: Error message about the wrong command format is shown in the status message.","lastModifiedDate":"2023-11-14"},{"lineNumber":1264,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":1265,"author":{"gitId":"AndrewJanong"},"content":"### Deleting event","lastModifiedDate":"2023-11-13"},{"lineNumber":1266,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":1267,"author":{"gitId":"AndrewJanong"},"content":"1. Deleting an event while all events are being shown","lastModifiedDate":"2023-11-13"},{"lineNumber":1268,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":1269,"author":{"gitId":"AndrewJanong"},"content":"    1. Prerequisites: List all contacts and events using the `list contact` command. This will show every contact and its respective events.","lastModifiedDate":"2023-11-13"},{"lineNumber":1270,"author":{"gitId":"AndrewJanong"},"content":"       Use the `list events` command to open a new events window showing all events (without the contacts).","lastModifiedDate":"2023-11-13"},{"lineNumber":1271,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":1272,"author":{"gitId":"AndrewJanong"},"content":"    1. Test case: `delete event -id 2 -eid 1`\u003cbr\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":1273,"author":{"gitId":"AndrewJanong"},"content":"       Expected: First event of the second contact is deleted. Title of the deleted event shown in the status message.","lastModifiedDate":"2023-11-13"},{"lineNumber":1274,"author":{"gitId":"AndrewJanong"},"content":"       Event deleted from the list in the events window.","lastModifiedDate":"2023-11-13"},{"lineNumber":1275,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":1276,"author":{"gitId":"AndrewJanong"},"content":"    1. Test case: `delete event -id 0 -eid 1`\u003cbr\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":1277,"author":{"gitId":"AndrewJanong"},"content":"       Expected: No event is deleted. Error details (contact not found) shown in the status message.","lastModifiedDate":"2023-11-13"},{"lineNumber":1278,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":1279,"author":{"gitId":"AndrewJanong"},"content":"    1. Test case: `delete event -id 1 -eid 0`\u003cbr\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":1280,"author":{"gitId":"AndrewJanong"},"content":"       Expected: No event is deleted. Error details (event not found) shown in the status message.","lastModifiedDate":"2023-11-13"},{"lineNumber":1281,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":1282,"author":{"gitId":"AndrewJanong"},"content":"    1. Other incorrect delete commands to try: `delete event`, `delete event -id x -eid 1`, `delete event -id 1 -eid x`, `...` (where x is larger than the size of contacts/events)\u003cbr\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":1283,"author":{"gitId":"Nixx162"},"content":"       Expected: Similar to previous test cases. \u003cbr\u003e","lastModifiedDate":"2023-11-14"},{"lineNumber":1284,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":1285,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":1286,"author":{"gitId":"AndrewJanong"},"content":"1. Deleting event while contact list is being filtered","lastModifiedDate":"2023-11-13"},{"lineNumber":1287,"author":{"gitId":"AndrewJanong"},"content":"    1. Prerequisites: Filter the list of contacts either by calling `list contact -t [SOME_TAG]` or `find [SOME KEYWORD]`.","lastModifiedDate":"2023-11-13"},{"lineNumber":1288,"author":{"gitId":"AndrewJanong"},"content":"       Use the `list events` command to open a new events window showing all events (without the contacts).","lastModifiedDate":"2023-11-13"},{"lineNumber":1289,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":1290,"author":{"gitId":"AndrewJanong"},"content":"    1. Test case: `delete event -id 1 -eid 1`, when no contact is shown\u003cbr\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":1291,"author":{"gitId":"AndrewJanong"},"content":"       Expected: No event is deleted. Error details shown in the status message.","lastModifiedDate":"2023-11-13"},{"lineNumber":1292,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":1293,"author":{"gitId":"AndrewJanong"},"content":"    1. Test case: `delete event -id 1 -eid 1`, when at least 1 contact is shown and there is at least 1 event in the first contact. \u003cbr\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":1294,"author":{"gitId":"AndrewJanong"},"content":"       Expected: The event will no longer be shown in the first contact of the filtered list. It will also be removed from the events list window. List will go back to showing all contacts.","lastModifiedDate":"2023-11-13"},{"lineNumber":1295,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":1296,"author":{"gitId":"AndrewJanong"},"content":"    1. Test case: `delete event -id 1 -eid 1`, when at least 1 contact is shown and there are no events in the first contact. \u003cbr\u003e","lastModifiedDate":"2023-11-13"},{"lineNumber":1297,"author":{"gitId":"AndrewJanong"},"content":"       Expected: No event is deleted. Error details shown in the status message.","lastModifiedDate":"2023-11-13"},{"lineNumber":1298,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":1299,"author":{"gitId":"josepholim"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-11-13"},{"lineNumber":1300,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":1301,"author":{"gitId":"josepholim"},"content":"## **Appendix C: Planned Enhancements**","lastModifiedDate":"2023-11-13"},{"lineNumber":1302,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":1303,"author":{"gitId":"josepholim"},"content":"This section describes some enhancement that can be made to the existing app.","lastModifiedDate":"2023-11-13"},{"lineNumber":1304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":1305,"author":{"gitId":"josepholim"},"content":"### User Interface","lastModifiedDate":"2023-11-13"},{"lineNumber":1306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":1307,"author":{"gitId":"josepholim"},"content":"* In the current version, long names (usually longer than 40 characters) are truncated in the interface. Wrapping of names can be implemented so that long names are displayed in a more readable and user-friendly manner.","lastModifiedDate":"2023-11-13"},{"lineNumber":1308,"author":{"gitId":"josepholim"},"content":"* The highlight of the contact entries is gray in color and the color of the text is white. The low contrast of the two colors decreases the readability of the texts. The color of the highlight can be changed to a darker color.","lastModifiedDate":"2023-11-13"},{"lineNumber":1309,"author":{"gitId":"josepholim"},"content":"* The viewing the list of events using the `list events` command, the details of the contact which the event belongs to, is not present. This is incovenient for users as they will have to look through the contact list manually to find the contact. Future updates can append the contact details together with the event details when listing events.","lastModifiedDate":"2023-11-13"}],"authorContributionMap":{"larrywang0701":72,"zekone":176,"AndrewJanong":211,"-":327,"josepholim":390,"Nixx162":133}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"AndrewJanong"},"content":"# KeepInTouch User Guide","lastModifiedDate":"2023-10-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"larrywang0701"},"content":"**_KeepInTouch_** is a desktop app for **managing contacts** for **job-seekers**. It can also help job-seekers to manage **events for career purposes.**","lastModifiedDate":"2023-11-10"},{"lineNumber":4,"author":{"gitId":"larrywang0701"},"content":"KeepInTouch is optimized for use via a _Line Interface (CLI)_ while still having the benefits of a Graphical User Interface (GUI).","lastModifiedDate":"2023-11-10"},{"lineNumber":5,"author":{"gitId":"AndrewJanong"},"content":"If you can type fast, KeepInTouch can get your contact management tasks done faster than traditional GUI apps.","lastModifiedDate":"2023-10-04"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c!-- * Table of Contents --\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003cpage-nav-print /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"AndrewJanong"},"content":"## Table of Contents","lastModifiedDate":"2023-10-04"},{"lineNumber":13,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":14,"author":{"gitId":"josepholim"},"content":"* [Table of Contents](#table-of-contents)","lastModifiedDate":"2023-11-13"},{"lineNumber":15,"author":{"gitId":"AndrewJanong"},"content":"* [Quick Start](#quick-start)","lastModifiedDate":"2023-10-04"},{"lineNumber":16,"author":{"gitId":"AndrewJanong"},"content":"* [Features](#features)","lastModifiedDate":"2023-10-04"},{"lineNumber":17,"author":{"gitId":"josepholim"},"content":"  * [Viewing help: `help`](#viewing-help-help)","lastModifiedDate":"2023-11-09"},{"lineNumber":18,"author":{"gitId":"josepholim"},"content":"  * [Listing contacts: `list contact`](#listing-contacts-list-contact)","lastModifiedDate":"2023-11-09"},{"lineNumber":19,"author":{"gitId":"josepholim"},"content":"  * [Adding a contact: `add contact`](#adding-a-contact-add-contact)","lastModifiedDate":"2023-11-09"},{"lineNumber":20,"author":{"gitId":"josepholim"},"content":"  * [Deleting a contact: `delete contact`](#deleting-a-contact-delete-contact)","lastModifiedDate":"2023-11-09"},{"lineNumber":21,"author":{"gitId":"josepholim"},"content":"  * [Finding a contact: `find`](#finding-a-contact-find)","lastModifiedDate":"2023-11-09"},{"lineNumber":22,"author":{"gitId":"zekone"},"content":"  * [Adding tags: `add tag`](#adding-tags-add-tag)","lastModifiedDate":"2023-11-14"},{"lineNumber":23,"author":{"gitId":"josepholim"},"content":"  * [Deleting tags: `delete tag`](#deleting-tags-delete-tag)","lastModifiedDate":"2023-11-09"},{"lineNumber":24,"author":{"gitId":"josepholim"},"content":"  * [Adding a note to a contact: `add note`](#adding-a-note-to-a-contact-add-note)","lastModifiedDate":"2023-11-13"},{"lineNumber":25,"author":{"gitId":"josepholim"},"content":"  * [Deleting a note: `delete note`](#deleting-a-note-delete-note)","lastModifiedDate":"2023-11-09"},{"lineNumber":26,"author":{"gitId":"josepholim"},"content":"  * [Listing events: `list events`](#listing-events-list-events)","lastModifiedDate":"2023-11-09"},{"lineNumber":27,"author":{"gitId":"larrywang0701"},"content":"  * [Adding an event: `add event`](#adding-an-event-add-event)","lastModifiedDate":"2023-11-10"},{"lineNumber":28,"author":{"gitId":"josepholim"},"content":"  * [Deleting an event: `delete event`](#deleting-an-event-delete-event)","lastModifiedDate":"2023-11-09"},{"lineNumber":29,"author":{"gitId":"josepholim"},"content":"  * [Clearing data: `clear`](#clearing-data-clear)","lastModifiedDate":"2023-11-09"},{"lineNumber":30,"author":{"gitId":"josepholim"},"content":"  * [Exiting the program: `exit`](#exiting-the-program-exit)","lastModifiedDate":"2023-11-09"},{"lineNumber":31,"author":{"gitId":"josepholim"},"content":"  * [Saving the data](#saving-the-data)","lastModifiedDate":"2023-11-09"},{"lineNumber":32,"author":{"gitId":"AndrewJanong"},"content":"  * [Other Features: _coming soon..._](#other-features)","lastModifiedDate":"2023-10-04"},{"lineNumber":33,"author":{"gitId":"larrywang0701"},"content":"* [Glossary](#glossary)","lastModifiedDate":"2023-11-10"},{"lineNumber":34,"author":{"gitId":"AndrewJanong"},"content":"* [FAQ](#faq)","lastModifiedDate":"2023-10-04"},{"lineNumber":35,"author":{"gitId":"AndrewJanong"},"content":"* [Known Issues](#known-issues)","lastModifiedDate":"2023-10-04"},{"lineNumber":36,"author":{"gitId":"AndrewJanong"},"content":"* [Command Summary](#command-summary)","lastModifiedDate":"2023-10-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":38,"author":{"gitId":"AndrewJanong"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-10-04"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":40,"author":{"gitId":"-"},"content":"## Quick start","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"larrywang0701"},"content":"1. Ensure you have [Java 11](https://www.oracle.com/sg/java/technologies/javase/jdk11-archive-downloads.html) installed in your Computer.","lastModifiedDate":"2023-11-10"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"AndrewJanong"},"content":"2. Download the latest `keepintouch.jar` from [here](https://github.com/AY2324S1-CS2103T-W16-1/tp/releases).","lastModifiedDate":"2023-10-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"larrywang0701"},"content":"3. Copy the file to the folder you want to use as the [home directory](#home-directory) for your KeepInTouch app.","lastModifiedDate":"2023-11-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"zekone"},"content":"4. Open a command terminal, `cd` into the [home directory](#home-directory), and use the `java -jar keepintouch.jar` command to run the application. (A GUI similar to the below should appear in a few seconds. Note how the app contains some sample data.)","lastModifiedDate":"2023-11-14"},{"lineNumber":49,"author":{"gitId":"zekone"},"content":"![GUI example](images/Ui.png)","lastModifiedDate":"2023-11-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"Nixx162"},"content":"5. Type the command in the command box and press Enter to execute it. e.g. typing **`help`** and pressing Enter will show the list of all available commands.\u003cbr\u003e","lastModifiedDate":"2023-11-11"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"AndrewJanong"},"content":"6. Refer to the [Features](#features) below for details of each command.","lastModifiedDate":"2023-10-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"**Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"* Words in `UPPER_CASE` are the parameters to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"zekone"},"content":"  e.g. in `delete contact CONTACT_ID`, `CONTACT_ID` is a parameter which can be used as `delete contact 1`.","lastModifiedDate":"2023-11-02"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"* Items in square brackets are optional.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"zekone"},"content":"  e.g `add contact -n NAME [-p PHONE_NUMBER] [-a ADDRESS] [-e EMAIL] [-t TAGNAME...]` can be used as `add contact -n Aaron -p 12345678 -a Baker Street 12 -e aaron123@gmail.com -t Frontend` or as `add contact -n Aaron -e aaron123@gmail.com`.","lastModifiedDate":"2023-11-02"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"zekone"},"content":"* Items with `…`​ after them can be used multiple times.\u003cbr\u003e","lastModifiedDate":"2023-10-28"},{"lineNumber":70,"author":{"gitId":"zekone"},"content":"  e.g. `[-t TAGNAME...]` can be used as `-t Frontend`, `-t Frontend -t Java` etc.","lastModifiedDate":"2023-11-02"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":72,"author":{"gitId":"-"},"content":"* Parameters can be in any order.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"josepholim"},"content":"  e.g. if the command specifies `-tit NOTE_TITLE -con NOTE_CONTENT`, `-con NOTE_CONTENT -tit NOTE_TITLE` is also acceptable.","lastModifiedDate":"2023-11-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"zekone"},"content":"* Extraneous parameters for commands that do not take in parameters (such as `list contact` and `exit`, etc.) will be ignored.\u003cbr\u003e","lastModifiedDate":"2023-11-08"},{"lineNumber":76,"author":{"gitId":"zekone"},"content":"  e.g. if the command specifies `exit 123`, it will be interpreted as `exit`.","lastModifiedDate":"2023-11-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03"},{"lineNumber":78,"author":{"gitId":"-"},"content":"* If you are using a PDF version of this document, be careful when copying and pasting commands that span multiple lines as space characters surrounding line-breaks may be omitted when copied over to the application.","lastModifiedDate":"2023-06-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":80,"author":{"gitId":"zekone"},"content":"**Requirements and details on user supplied parameters:** \u003cbr\u003e","lastModifiedDate":"2023-11-09"},{"lineNumber":81,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":82,"author":{"gitId":"zekone"},"content":"* `CONTACT_ID` is the number that is on the left of the contact\u0027s name in each contact card.","lastModifiedDate":"2023-11-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":84,"author":{"gitId":"zekone"},"content":"* `CONTACT_ID` should be a positive integer less than 2,147,483,648.","lastModifiedDate":"2023-11-10"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":86,"author":{"gitId":"zekone"},"content":"* `NAME` should be alphanumeric, spaces are allowed.","lastModifiedDate":"2023-11-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":88,"author":{"gitId":"zekone"},"content":"* `PHONE_NUMBER` should be numbers at least 3 digits long.","lastModifiedDate":"2023-11-09"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":90,"author":{"gitId":"zekone"},"content":"* `EMAIL` should be of the format local-part@domain:","lastModifiedDate":"2023-11-09"},{"lineNumber":91,"author":{"gitId":"Nixx162"},"content":"  * The local-part should only contain alphanumeric characters and the special characters `+`, `_`, `.`, `-`. The local-part should not start or end with any special characters.","lastModifiedDate":"2023-11-11"},{"lineNumber":92,"author":{"gitId":"zekone"},"content":"  * The domain name should:","lastModifiedDate":"2023-11-09"},{"lineNumber":93,"author":{"gitId":"zekone"},"content":"    * end with a domain label at least 2 characters long","lastModifiedDate":"2023-11-09"},{"lineNumber":94,"author":{"gitId":"zekone"},"content":"    * have each domain label start and end with alphanumeric characters","lastModifiedDate":"2023-11-09"},{"lineNumber":95,"author":{"gitId":"zekone"},"content":"    * have each domain label consist of alphanumeric characters, separated only by hyphens, if any.","lastModifiedDate":"2023-11-09"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":98,"author":{"gitId":"zekone"},"content":"* `TAGNAME` should be alphanumeric, with no spaces.","lastModifiedDate":"2023-11-09"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":100,"author":{"gitId":"Nixx162"},"content":"* `TAGNAME` is case-sensitive. For example, a [contact](#contact) can have [tags](#tag) `Frontend` and `frontend` at the same time.","lastModifiedDate":"2023-11-13"},{"lineNumber":101,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":102,"author":{"gitId":"josepholim"},"content":"* `START_TIME` and `END_TIME` can be in one of the following formats:","lastModifiedDate":"2023-11-10"},{"lineNumber":103,"author":{"gitId":"josepholim"},"content":"  * Both date and time: `yyyy-MM-dd HH:mm[:ss]`","lastModifiedDate":"2023-11-10"},{"lineNumber":104,"author":{"gitId":"josepholim"},"content":"    - Example: `2023-10-12 20:05`, `2023-10-12 20:05:30`","lastModifiedDate":"2023-11-10"},{"lineNumber":105,"author":{"gitId":"josepholim"},"content":"  * Only date (Time will be defaulted to 00:00): `yyyy-MM-dd`","lastModifiedDate":"2023-11-10"},{"lineNumber":106,"author":{"gitId":"josepholim"},"content":"    - Example: `2023-10-12`","lastModifiedDate":"2023-11-10"},{"lineNumber":107,"author":{"gitId":"josepholim"},"content":"  * Only time (Date will be defaulted to the current date): `HH:mm[:ss]`","lastModifiedDate":"2023-11-10"},{"lineNumber":108,"author":{"gitId":"josepholim"},"content":"    - Example: `00:10`, `05:01:45`","lastModifiedDate":"2023-11-10"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":111,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"### Viewing help: `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"zekone"},"content":"Shows a list of commands and functionalities.","lastModifiedDate":"2023-11-08"},{"lineNumber":116,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":117,"author":{"gitId":"zekone"},"content":"Format: `help [COMMAND_WORD]`","lastModifiedDate":"2023-11-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"zekone"},"content":"* Add `COMMAND_WORD` after `help` to view the specific functionalities of the command.","lastModifiedDate":"2023-11-08"},{"lineNumber":120,"author":{"gitId":"zekone"},"content":"* `COMMAND_WORD` includes: `add`, `delete`, `clear`, `find`, `list`.","lastModifiedDate":"2023-11-08"},{"lineNumber":121,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":122,"author":{"gitId":"zekone"},"content":"Examples:","lastModifiedDate":"2023-11-08"},{"lineNumber":123,"author":{"gitId":"AndrewJanong"},"content":"* `help`","lastModifiedDate":"2023-11-10"},{"lineNumber":124,"author":{"gitId":"zekone"},"content":"* `help add`","lastModifiedDate":"2023-11-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"AndrewJanong"},"content":"Successful output:","lastModifiedDate":"2023-11-10"},{"lineNumber":127,"author":{"gitId":"AndrewJanong"},"content":"![help success output](images/success-outputs/help-output.png)","lastModifiedDate":"2023-11-10"},{"lineNumber":128,"author":{"gitId":"AndrewJanong"},"content":"![help add success output](images/success-outputs/help-add-output.png)","lastModifiedDate":"2023-11-10"},{"lineNumber":129,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":130,"author":{"gitId":"larrywang0701"},"content":"### Listing [contacts](#contact): `list contact`","lastModifiedDate":"2023-11-10"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"zekone"},"content":"Shows a list of all contacts in the contact list if tags not specified.","lastModifiedDate":"2023-11-02"},{"lineNumber":133,"author":{"gitId":"zekone"},"content":"Otherwise, shows a list of contacts which contains any one of the specified tags.","lastModifiedDate":"2023-11-08"},{"lineNumber":134,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":135,"author":{"gitId":"zekone"},"content":"Format: `list contact [-t TAGNAME...]`","lastModifiedDate":"2023-11-02"},{"lineNumber":136,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":137,"author":{"gitId":"zekone"},"content":"* Lists all contacts if no tags passed.","lastModifiedDate":"2023-11-02"},{"lineNumber":138,"author":{"gitId":"zekone"},"content":"* If tags argument passed, lists only contacts that contain one of the tags.","lastModifiedDate":"2023-11-02"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"zekone"},"content":"Examples:","lastModifiedDate":"2023-11-02"},{"lineNumber":141,"author":{"gitId":"zekone"},"content":"* `list contact` to show all contacts.","lastModifiedDate":"2023-11-02"},{"lineNumber":142,"author":{"gitId":"zekone"},"content":"* `list contact -t Recruiter` to show all contacts which have a recruiter tag.","lastModifiedDate":"2023-11-02"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"AndrewJanong"},"content":"Successful output:","lastModifiedDate":"2023-11-10"},{"lineNumber":145,"author":{"gitId":"AndrewJanong"},"content":"![list contact success output](images/success-outputs/list-contact-output.png)","lastModifiedDate":"2023-11-10"},{"lineNumber":146,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":147,"author":{"gitId":"larrywang0701"},"content":"### Adding a [contact](#contact): `add contact`","lastModifiedDate":"2023-11-10"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"zekone"},"content":"Adds a contact to the contact list.","lastModifiedDate":"2023-11-02"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":151,"author":{"gitId":"zekone"},"content":"Format: `add contact -n NAME -p PHONE_NUMBER -a ADDRESS -e EMAIL [-t TAGNAME...]`","lastModifiedDate":"2023-11-02"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"AndrewJanong"},"content":"* `add contact -n Aaron -p 12345678 -a Baker Street 12 -e aaron123@gmail.com`","lastModifiedDate":"2023-10-04"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"AndrewJanong"},"content":"Successful output:","lastModifiedDate":"2023-11-10"},{"lineNumber":157,"author":{"gitId":"AndrewJanong"},"content":"![add contact success output](images/success-outputs/add-contact-output.png)","lastModifiedDate":"2023-11-10"},{"lineNumber":158,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":159,"author":{"gitId":"AndrewJanong"},"content":"Unsuccessful output:","lastModifiedDate":"2023-11-10"},{"lineNumber":160,"author":{"gitId":"AndrewJanong"},"content":"* Contact already exists: `This contact already exists in the contact list`","lastModifiedDate":"2023-11-10"},{"lineNumber":161,"author":{"gitId":"AndrewJanong"},"content":"* Invalid phone number: `Phone numbers should only contain numbers, and it should be at least 3 digits long`","lastModifiedDate":"2023-11-10"},{"lineNumber":162,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":163,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":164,"author":{"gitId":"larrywang0701"},"content":"### Deleting a [contact](#contact): `delete contact`","lastModifiedDate":"2023-11-10"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"zekone"},"content":"Deletes the specified contact from the contact list.","lastModifiedDate":"2023-11-02"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"zekone"},"content":"Format: `delete contact CONTACT_ID`","lastModifiedDate":"2023-11-02"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"zekone"},"content":"* `delete contact 1` deletes the first contact in the contact list.","lastModifiedDate":"2023-11-02"},{"lineNumber":172,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":173,"author":{"gitId":"AndrewJanong"},"content":"Successful output:","lastModifiedDate":"2023-11-10"},{"lineNumber":174,"author":{"gitId":"AndrewJanong"},"content":"![delete contact success output](images/success-outputs/delete-contact-output.png)","lastModifiedDate":"2023-11-10"},{"lineNumber":175,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":176,"author":{"gitId":"AndrewJanong"},"content":"Unsuccessful output:","lastModifiedDate":"2023-11-10"},{"lineNumber":177,"author":{"gitId":"AndrewJanong"},"content":"* Invalid index (out of range): `The person index provided is invalid`","lastModifiedDate":"2023-11-10"},{"lineNumber":178,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":179,"author":{"gitId":"larrywang0701"},"content":"### Finding a [contact](#contact): `find`","lastModifiedDate":"2023-11-10"},{"lineNumber":180,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":181,"author":{"gitId":"zekone"},"content":"Finds a contact by their name by matching keywords with the contact\u0027s name. Only word-word matches will be detected, and partial words match will not be detected. For example, `Ale` will not match `Alex`, but `Alex` will match `Alex Wong`. Keywords are **case insensitive**.","lastModifiedDate":"2023-11-14"},{"lineNumber":182,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":183,"author":{"gitId":"zekone"},"content":"Format: `find KEYWORD [OTHER_KEYWORDS...]`","lastModifiedDate":"2023-11-03"},{"lineNumber":184,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":185,"author":{"gitId":"zekone"},"content":"Examples:","lastModifiedDate":"2023-11-03"},{"lineNumber":186,"author":{"gitId":"AndrewJanong"},"content":"* `find David`","lastModifiedDate":"2023-11-10"},{"lineNumber":187,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":188,"author":{"gitId":"AndrewJanong"},"content":"Successful output:","lastModifiedDate":"2023-11-10"},{"lineNumber":189,"author":{"gitId":"AndrewJanong"},"content":"![find success output](images/success-outputs/find-output.png)","lastModifiedDate":"2023-11-10"},{"lineNumber":190,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":191,"author":{"gitId":"zekone"},"content":"### Adding [tags](#tag): `add tag`","lastModifiedDate":"2023-11-14"},{"lineNumber":192,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":193,"author":{"gitId":"Nixx162"},"content":"Adds one or more tags to a contact. Contact list will go back to showing all contacts upon successful addition.","lastModifiedDate":"2023-11-09"},{"lineNumber":194,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":195,"author":{"gitId":"zekone"},"content":"Format: `add tag -id CONTACT_ID -t TAGNAME...`","lastModifiedDate":"2023-10-28"},{"lineNumber":196,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":197,"author":{"gitId":"zekone"},"content":"* Adds one or more tags to a contact.","lastModifiedDate":"2023-10-28"},{"lineNumber":198,"author":{"gitId":"zekone"},"content":"* Duplicates are accepted but only unique tags will be added.","lastModifiedDate":"2023-10-28"},{"lineNumber":199,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":200,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2023-10-28"},{"lineNumber":201,"author":{"gitId":"zekone"},"content":"* `add tag -id 1 -t Frontend` adds a tag with tag name \"Frontend\" to the first contact in the contact list.","lastModifiedDate":"2023-11-02"},{"lineNumber":202,"author":{"gitId":"zekone"},"content":"* `add tag -id 1 -t Frontend -t Java` adds two tags with tag name \"Frontend\" and \"Java\" to the first contact in the contact list.","lastModifiedDate":"2023-11-02"},{"lineNumber":203,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":204,"author":{"gitId":"AndrewJanong"},"content":"Successful output:","lastModifiedDate":"2023-11-10"},{"lineNumber":205,"author":{"gitId":"AndrewJanong"},"content":"![add tag success output](images/success-outputs/add-tag-output.png)","lastModifiedDate":"2023-11-10"},{"lineNumber":206,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":207,"author":{"gitId":"AndrewJanong"},"content":"Unsuccessful output:","lastModifiedDate":"2023-11-10"},{"lineNumber":208,"author":{"gitId":"AndrewJanong"},"content":"* Invalid index (out of range): `Can not find the target contact with ID: 100`","lastModifiedDate":"2023-11-10"},{"lineNumber":209,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":210,"author":{"gitId":"larrywang0701"},"content":"### Deleting [tags](#tag): `delete tag`","lastModifiedDate":"2023-11-10"},{"lineNumber":211,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":212,"author":{"gitId":"Nixx162"},"content":"Deletes one or more tags to a contact. Contact list will go back to showing all contacts upon successful deletion.","lastModifiedDate":"2023-11-09"},{"lineNumber":213,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":214,"author":{"gitId":"zekone"},"content":"Format: `delete tag -id CONTACT_ID -t TAGNAME...`","lastModifiedDate":"2023-10-28"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":216,"author":{"gitId":"zekone"},"content":"* Duplicate `TAGNAME` are accepted, but they will be treated as one.","lastModifiedDate":"2023-11-09"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":218,"author":{"gitId":"zekone"},"content":"Examples:","lastModifiedDate":"2023-10-28"},{"lineNumber":219,"author":{"gitId":"zekone"},"content":"* `delete tag -id 1 -t Frontend` deletes a tag with tag name \"Frontend\" from the first contact in the contact list.","lastModifiedDate":"2023-11-02"},{"lineNumber":220,"author":{"gitId":"AndrewJanong"},"content":"* `delete tag -id 1 -t Frontend -t Java` deletes two tags with tag name \"Frontend\" and \"Java\" from the first contact in the contact list.","lastModifiedDate":"2023-11-10"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":222,"author":{"gitId":"AndrewJanong"},"content":"Successful output:","lastModifiedDate":"2023-11-10"},{"lineNumber":223,"author":{"gitId":"AndrewJanong"},"content":"![delete tag success output](images/success-outputs/delete-tag-output.png)","lastModifiedDate":"2023-11-10"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":225,"author":{"gitId":"AndrewJanong"},"content":"Unsuccessful output:","lastModifiedDate":"2023-11-10"},{"lineNumber":226,"author":{"gitId":"AndrewJanong"},"content":"* Invalid index (out of range): `Can not find the target contact with ID: 100`","lastModifiedDate":"2023-11-10"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":228,"author":{"gitId":"larrywang0701"},"content":"### Adding a [note](#note) to a [contact](#contact): `add note`","lastModifiedDate":"2023-11-10"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"AndrewJanong"},"content":"Adds a note to a contact from the contact list.","lastModifiedDate":"2023-10-04"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"josepholim"},"content":"Format: `add note -id CONTACT_ID -tit NOTE_TITLE -con NOTE_CONTENT`","lastModifiedDate":"2023-10-15"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"josepholim"},"content":"* `add note -id 1 -tit Meeting Topics -con The topic is about the framework design of the project`","lastModifiedDate":"2023-10-15"},{"lineNumber":236,"author":{"gitId":"josepholim"},"content":"* `add note -id 2 -tit Open Position -con Applications for SWE full-time positions will open soon`","lastModifiedDate":"2023-10-15"},{"lineNumber":237,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":238,"author":{"gitId":"AndrewJanong"},"content":"Successful output:","lastModifiedDate":"2023-11-10"},{"lineNumber":239,"author":{"gitId":"AndrewJanong"},"content":"![add note success output](images/success-outputs/add-note-output.png)","lastModifiedDate":"2023-11-10"},{"lineNumber":240,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":241,"author":{"gitId":"AndrewJanong"},"content":"Unsuccessful output:","lastModifiedDate":"2023-11-10"},{"lineNumber":242,"author":{"gitId":"AndrewJanong"},"content":"* Invalid index (out of range): `Can not find the target contact with ID: 100`","lastModifiedDate":"2023-11-10"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":244,"author":{"gitId":"larrywang0701"},"content":"### Deleting a [note](#note): `delete note`","lastModifiedDate":"2023-11-10"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"AndrewJanong"},"content":"Deletes the specified note from the contact list.","lastModifiedDate":"2023-10-04"},{"lineNumber":247,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"josepholim"},"content":"Format: `delete note -id CONTACT_ID -nid NOTE_ID`","lastModifiedDate":"2023-10-15"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"josepholim"},"content":"* Deletes the note with the id `NOTE_ID` from the contact with id `CONTACT_ID`.","lastModifiedDate":"2023-10-15"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"zekone"},"content":"* `delete note -id 1 -nid 1` deletes the first note from the first contact in the contact list.","lastModifiedDate":"2023-11-02"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"AndrewJanong"},"content":"Successful output:","lastModifiedDate":"2023-11-10"},{"lineNumber":256,"author":{"gitId":"AndrewJanong"},"content":"![delete note success output](images/success-outputs/delete-note-output.png)","lastModifiedDate":"2023-11-10"},{"lineNumber":257,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":258,"author":{"gitId":"AndrewJanong"},"content":"Unsuccessful output:","lastModifiedDate":"2023-11-10"},{"lineNumber":259,"author":{"gitId":"AndrewJanong"},"content":"* Invalid contact index (out of range): `Can not find the target contact with ID: 100`","lastModifiedDate":"2023-11-10"},{"lineNumber":260,"author":{"gitId":"AndrewJanong"},"content":"* Invalid note index: `Note not found: ID \u003d 5`","lastModifiedDate":"2023-11-10"},{"lineNumber":261,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":262,"author":{"gitId":"larrywang0701"},"content":"### Listing [events](#event): `list events`","lastModifiedDate":"2023-11-10"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":264,"author":{"gitId":"larrywang0701"},"content":"Shows a list of all events or events within a specified time interval.","lastModifiedDate":"2023-11-01"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":266,"author":{"gitId":"josepholim"},"content":"Format: `list events [-descending] [-st START_TIME] [-et END_TIME]` (start time and end time are inclusive)","lastModifiedDate":"2023-11-10"},{"lineNumber":267,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":268,"author":{"gitId":"larrywang0701"},"content":"Arguments `-st` and `-et` must both present or both not present.","lastModifiedDate":"2023-11-01"},{"lineNumber":269,"author":{"gitId":"zekone"},"content":"  - If both are not present, all events will be listed.","lastModifiedDate":"2023-11-02"},{"lineNumber":270,"author":{"gitId":"josepholim"},"content":"  - If both are present, events within the time interval will be listed.","lastModifiedDate":"2023-11-13"},{"lineNumber":271,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":272,"author":{"gitId":"josepholim"},"content":"By default, the list of events are sorted by the start time in ascending order (i.e. from earliest to latest). If you want to use descending order, add `-descending` to the command.","lastModifiedDate":"2023-11-13"},{"lineNumber":273,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":274,"author":{"gitId":"josepholim"},"content":"Executing this command will create a popup window, which shows a table representing the events within the specified time interval. The columns inside the table are resizeable.","lastModifiedDate":"2023-11-10"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":276,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2023-11-10"},{"lineNumber":277,"author":{"gitId":"larrywang0701"},"content":"* `list events`","lastModifiedDate":"2023-11-01"},{"lineNumber":278,"author":{"gitId":"larrywang0701"},"content":"* `list events -st 2023-11-01 -et 2023-11-02`","lastModifiedDate":"2023-11-01"},{"lineNumber":279,"author":{"gitId":"larrywang0701"},"content":"* `list events -descending -st 2023-11-01 -et 2023-11-02`","lastModifiedDate":"2023-11-01"},{"lineNumber":280,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":281,"author":{"gitId":"AndrewJanong"},"content":"Successful output:","lastModifiedDate":"2023-11-10"},{"lineNumber":282,"author":{"gitId":"AndrewJanong"},"content":"![list events success output](images/success-outputs/list-event-output-1.png)","lastModifiedDate":"2023-11-10"},{"lineNumber":283,"author":{"gitId":"AndrewJanong"},"content":"![list events success output](images/success-outputs/list-event-output-2.png)","lastModifiedDate":"2023-11-10"},{"lineNumber":284,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":285,"author":{"gitId":"larrywang0701"},"content":"### Adding an [event](#event): `add event`","lastModifiedDate":"2023-11-10"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":287,"author":{"gitId":"zekone"},"content":"Adds an event to a contact. The event should not have clashes in timing with other existing events in the contact list. Events with start time earlier than the current time are allowed for keeping track of past events.","lastModifiedDate":"2023-11-09"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":289,"author":{"gitId":"zekone"},"content":"Format: `add event -id CONTACT_ID -en EVENT_NAME -st START_TIME [-et END_TIME] [-loc LOCATION] [-info INFORMATION]`","lastModifiedDate":"2023-11-02"},{"lineNumber":290,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":291,"author":{"gitId":"zekone"},"content":"* If `END_TIME` is not given, it will be defaulted to the `START_TIME`.","lastModifiedDate":"2023-11-09"},{"lineNumber":292,"author":{"gitId":"zekone"},"content":"* If `START_TIME` is exactly equals to `END_TIME`, the `END_TIME` for the event will not be displayed in text-based UI.","lastModifiedDate":"2023-11-09"},{"lineNumber":293,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":294,"author":{"gitId":"zekone"},"content":"Examples:","lastModifiedDate":"2023-11-02"},{"lineNumber":295,"author":{"gitId":"zekone"},"content":"* `add event -id 1 -en Meeting with professor -st 12:00 -et 13:00 -loc COM 1 Basement -info Discuss the project implementation with the professor`","lastModifiedDate":"2023-11-02"},{"lineNumber":296,"author":{"gitId":"zekone"},"content":"* `add event -id 2 -en Chat with TikTok recruiter -st 17:00`","lastModifiedDate":"2023-11-02"},{"lineNumber":297,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":298,"author":{"gitId":"AndrewJanong"},"content":"Successful output:","lastModifiedDate":"2023-11-10"},{"lineNumber":299,"author":{"gitId":"AndrewJanong"},"content":"![add event success output](images/success-outputs/add-event-output.png)","lastModifiedDate":"2023-11-10"},{"lineNumber":300,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":301,"author":{"gitId":"AndrewJanong"},"content":"Unsuccessful output:","lastModifiedDate":"2023-11-10"},{"lineNumber":302,"author":{"gitId":"AndrewJanong"},"content":"* Event already exists: `Error: Operation would result in duplicate events`","lastModifiedDate":"2023-11-10"},{"lineNumber":303,"author":{"gitId":"AndrewJanong"},"content":"* Invalid contact index (out of range): `Can not find the target contact with ID: 100`","lastModifiedDate":"2023-11-10"},{"lineNumber":304,"author":{"gitId":"AndrewJanong"},"content":"* Invalid time format: `Invalid date-time format! Text \u002729/05/2024\u0027 could not be parsed at index 2`","lastModifiedDate":"2023-11-10"},{"lineNumber":305,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":306,"author":{"gitId":"larrywang0701"},"content":"### Deleting an [event](#event): `delete event`","lastModifiedDate":"2023-11-10"},{"lineNumber":307,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":308,"author":{"gitId":"larrywang0701"},"content":"Deletes the specified event from a contact.","lastModifiedDate":"2023-10-12"},{"lineNumber":309,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":310,"author":{"gitId":"larrywang0701"},"content":"Format: `delete event -id CONTACT_ID -eid EVENT_ID`","lastModifiedDate":"2023-10-12"},{"lineNumber":311,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":312,"author":{"gitId":"larrywang0701"},"content":"* Deletes the event with the id `EVENT_ID` from the contact `CONTACT_ID`.","lastModifiedDate":"2023-10-12"},{"lineNumber":313,"author":{"gitId":"zekone"},"content":"* Note that `EVENT_ID` is the number that are in the left of the event line under each contact card.","lastModifiedDate":"2023-11-02"},{"lineNumber":314,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":315,"author":{"gitId":"AndrewJanong"},"content":"Examples:","lastModifiedDate":"2023-10-04"},{"lineNumber":316,"author":{"gitId":"zekone"},"content":"* `delete event -id 1 -eid 2` deletes the second event from the first contact in the contact list.","lastModifiedDate":"2023-11-02"},{"lineNumber":317,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":318,"author":{"gitId":"AndrewJanong"},"content":"Successful output:","lastModifiedDate":"2023-11-10"},{"lineNumber":319,"author":{"gitId":"AndrewJanong"},"content":"![delete event success output](images/success-outputs/delete-event-output.png)","lastModifiedDate":"2023-11-10"},{"lineNumber":320,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":321,"author":{"gitId":"AndrewJanong"},"content":"Unsuccessful output:","lastModifiedDate":"2023-11-10"},{"lineNumber":322,"author":{"gitId":"AndrewJanong"},"content":"* Invalid contact index (out of range): `Can not find the target contact with ID: 100`","lastModifiedDate":"2023-11-10"},{"lineNumber":323,"author":{"gitId":"AndrewJanong"},"content":"* Invalid note index: `Event not found: ID \u003d 5`","lastModifiedDate":"2023-11-10"},{"lineNumber":324,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":325,"author":{"gitId":"josepholim"},"content":"### Clearing data: `clear`","lastModifiedDate":"2023-11-09"},{"lineNumber":326,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":327,"author":{"gitId":"zekone"},"content":"Clears all KeepInTouch entries.","lastModifiedDate":"2023-11-08"},{"lineNumber":328,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":329,"author":{"gitId":"-"},"content":"Format: `clear`","lastModifiedDate":"2023-11-08"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":331,"author":{"gitId":"-"},"content":"### Exiting the program: `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":332,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":333,"author":{"gitId":"-"},"content":"Exits the program.","lastModifiedDate":"2020-05-23"},{"lineNumber":334,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":335,"author":{"gitId":"-"},"content":"Format: `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":336,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":337,"author":{"gitId":"-"},"content":"### Saving the data","lastModifiedDate":"2020-05-23"},{"lineNumber":338,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":339,"author":{"gitId":"AndrewJanong"},"content":"KeepInTouch data are saved in the hard disk automatically after any command that changes the data. There is no need to save manually.","lastModifiedDate":"2023-10-04"},{"lineNumber":340,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":341,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":342,"author":{"gitId":"AndrewJanong"},"content":"### Other Features","lastModifiedDate":"2023-10-04"},{"lineNumber":343,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":344,"author":{"gitId":"larrywang0701"},"content":"_More features coming soon ..._","lastModifiedDate":"2023-11-10"},{"lineNumber":345,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":346,"author":{"gitId":"larrywang0701"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-11-10"},{"lineNumber":347,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":348,"author":{"gitId":"larrywang0701"},"content":"## Glossary","lastModifiedDate":"2023-11-10"},{"lineNumber":349,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":350,"author":{"gitId":"larrywang0701"},"content":" - ##### _home directory_:","lastModifiedDate":"2023-11-10"},{"lineNumber":351,"author":{"gitId":"larrywang0701"},"content":"   The directory where the jar file for the application and the `data` folder presents.","lastModifiedDate":"2023-11-10"},{"lineNumber":352,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":353,"author":{"gitId":"larrywang0701"},"content":" - ##### _contact_:","lastModifiedDate":"2023-11-10"},{"lineNumber":354,"author":{"gitId":"larrywang0701"},"content":"   The unit for storing the contact information for a person/entity in the address book. You can add [tags](#tag), [notes](#note) and [events](#event) to a _contact_.","lastModifiedDate":"2023-11-10"},{"lineNumber":355,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":356,"author":{"gitId":"larrywang0701"},"content":" - ##### _tag_:","lastModifiedDate":"2023-11-10"},{"lineNumber":357,"author":{"gitId":"larrywang0701"},"content":"   Short tags to be added to the contact for you to reference. It can be the type of the contact, for example, `company`, `HR`, etc.","lastModifiedDate":"2023-11-10"},{"lineNumber":358,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":359,"author":{"gitId":"josepholim"},"content":" - ##### _note_:","lastModifiedDate":"2023-11-13"},{"lineNumber":360,"author":{"gitId":"larrywang0701"},"content":"   A piece of additional information for a contact that you want to store and reference in the future. It can be any additional information you\u0027d like to keep with the contact.","lastModifiedDate":"2023-11-10"},{"lineNumber":361,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":362,"author":{"gitId":"josepholim"},"content":" - ##### _event_:","lastModifiedDate":"2023-11-13"},{"lineNumber":363,"author":{"gitId":"larrywang0701"},"content":"   A representative of an event that you will happen with a person/entity in a contact in the future. It can be job interviews, career fairs or HR meeting appointments.","lastModifiedDate":"2023-11-10"},{"lineNumber":364,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":365,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":366,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":367,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-23"},{"lineNumber":368,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":369,"author":{"gitId":"AndrewJanong"},"content":"**Q**: Why can\u0027t I run the app?\u003cbr\u003e","lastModifiedDate":"2023-10-04"},{"lineNumber":370,"author":{"gitId":"larrywang0701"},"content":"**A**: Make sure you have [Java 11](https://www.oracle.com/sg/java/technologies/javase/jdk11-archive-downloads.html) installed before running the app, and make sure you have followed the way mentioned in [Quick Start](#quick-start).","lastModifiedDate":"2023-11-10"},{"lineNumber":371,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":372,"author":{"gitId":"larrywang0701"},"content":"**Q**: How do I transfer my data to another device?\u003cbr\u003e","lastModifiedDate":"2023-11-10"},{"lineNumber":373,"author":{"gitId":"larrywang0701"},"content":"**A**: Please follow these steps:","lastModifiedDate":"2023-11-10"},{"lineNumber":374,"author":{"gitId":"larrywang0701"},"content":"  - Download the jar file for the app on the new device.","lastModifiedDate":"2023-11-10"},{"lineNumber":375,"author":{"gitId":"larrywang0701"},"content":"  - Copy the data folder from the old device to the new device, and put it in the [home directory](#home-directory) on the new device.","lastModifiedDate":"2023-11-10"},{"lineNumber":376,"author":{"gitId":"larrywang0701"},"content":"    - The data folder from the old device is located at [home directory](#home-directory)/data`. You need to copy the folder along with all files inside to the new device to complete data transfer.","lastModifiedDate":"2023-11-10"},{"lineNumber":377,"author":{"gitId":"larrywang0701"},"content":"  - Run the application on the new device. Now you should see the data from old device on your new device.","lastModifiedDate":"2023-11-10"},{"lineNumber":378,"author":{"gitId":"larrywang0701"},"content":"  - Similarly, if you want to move the jar file to another directory (change the [home directory](#home-directory)) within the same device, you also need to make sure that the `data` folder is always in the new [home directory](#home-directory) together with the jar file.","lastModifiedDate":"2023-11-10"},{"lineNumber":379,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":380,"author":{"gitId":"larrywang0701"},"content":"**Q**: Can I modify the data file outside the application itself?\u003cbr\u003e","lastModifiedDate":"2023-11-10"},{"lineNumber":381,"author":{"gitId":"larrywang0701"},"content":"**A**: No, you **should _NOT_ directly modify the data file** outside the application at anytime, otherwise it may lead to unpredictable consequences and errors to the application.","lastModifiedDate":"2023-11-10"},{"lineNumber":382,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":383,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":384,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":385,"author":{"gitId":"-"},"content":"## Known issues","lastModifiedDate":"2023-09-08"},{"lineNumber":386,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":387,"author":{"gitId":"AndrewJanong"},"content":"_No known issues at the moment_","lastModifiedDate":"2023-10-04"},{"lineNumber":388,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":389,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-09-08"},{"lineNumber":390,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":391,"author":{"gitId":"-"},"content":"## Command summary","lastModifiedDate":"2020-05-23"},{"lineNumber":392,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":393,"author":{"gitId":"larrywang0701"},"content":"| Action             | Format, Examples                                                                                                                                                                                                                                                        |","lastModifiedDate":"2023-11-10"},{"lineNumber":394,"author":{"gitId":"larrywang0701"},"content":"|--------------------|-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2023-11-10"},{"lineNumber":395,"author":{"gitId":"larrywang0701"},"content":"| **List Contact**   | `list contact [-t TAGNAME...]` \u003cbr\u003e e.g., `list contact -t Recruiter`                                                                                                                                                                                                   |","lastModifiedDate":"2023-11-10"},{"lineNumber":396,"author":{"gitId":"larrywang0701"},"content":"| **Add Contact**    | `add contact -n NAME -p PHONE_NUMBER -a ADDRESS -e EMAIL [-t TAGNAME...]` \u003cbr\u003e e.g., `add contact -n Aaron -p 12345678 -a Baker Street 12 -e aaron123@gmail.com -t Frontend`                                                                                            |","lastModifiedDate":"2023-11-10"},{"lineNumber":397,"author":{"gitId":"larrywang0701"},"content":"| **Delete Contact** | `delete contact CONTACT_ID`\u003cbr\u003e e.g., `delete contact 1`                                                                                                                                                                                                                |","lastModifiedDate":"2023-11-10"},{"lineNumber":398,"author":{"gitId":"larrywang0701"},"content":"| **Find Contact**   | `find KEYWORD [OTHER_KEYWORDS...]`\u003cbr\u003e e.g., `find Alex`                                                                                                                                                                                                                |","lastModifiedDate":"2023-11-10"},{"lineNumber":399,"author":{"gitId":"larrywang0701"},"content":"| **Add Tag**        | `add tag -id CONTACT_ID -t TAGNAME...` \u003cbr\u003e eg., `add tag -id 1 -t Frontend`                                                                                                                                                                                            |","lastModifiedDate":"2023-11-10"},{"lineNumber":400,"author":{"gitId":"larrywang0701"},"content":"| **Delete Tag**     | `delete tag -id CONTACT_ID -t TAGNAME...` \u003cbr\u003e eg., `delete tag -id 1 -t Frontend`                                                                                                                                                                                      |","lastModifiedDate":"2023-11-10"},{"lineNumber":401,"author":{"gitId":"josepholim"},"content":"| **Add Note**       | `add note -id CONTACT_ID -tit NOTE_TITLE -con NOTE_CONTENT` \u003cbr\u003e e.g., `add note -id 2 -tit Open Position -con Applications for SWE full-time positions will open soon`                                                                                                 |","lastModifiedDate":"2023-11-13"},{"lineNumber":402,"author":{"gitId":"josepholim"},"content":"| **Delete Note**    | `delete note -id CONTACT_ID -nid NOTE_ID`\u003cbr\u003e e.g., `delete note -id 1 -nid 1`                                                                                                                                                                                          |","lastModifiedDate":"2023-11-13"},{"lineNumber":403,"author":{"gitId":"josepholim"},"content":"| **List Events**    | `list events [-descending] [-st START_TIME] [-et END_TIME]`\u003cbr\u003e e.g., `list events -descending -st 2023-11-01 -et 2023-11-02`                                                                                                                                           |","lastModifiedDate":"2023-11-13"},{"lineNumber":404,"author":{"gitId":"larrywang0701"},"content":"| **Add Event**      | `add event -id CONTACT_ID -en EVENT_NAME -st START_TIME [-et END_TIME] [-loc LOCATION] [-info INFORMATION]` \u003cbr\u003e e.g., `add event -id 1 -en Meeting with professor -st 12:00 -et 13:00 -loc COM 1 Basement -info Discuss the project implementation with the professor` |","lastModifiedDate":"2023-11-10"},{"lineNumber":405,"author":{"gitId":"larrywang0701"},"content":"| **Delete Event**   | `delete event -id CONTACT_ID -eid EVENT_ID`\u003cbr\u003e e.g., `delete event -id 1 -eid 1`                                                                                                                                                                                       |","lastModifiedDate":"2023-11-10"},{"lineNumber":406,"author":{"gitId":"larrywang0701"},"content":"| **Clear Data**     | `clear`                                                                                                                                                                                                                                                                 |","lastModifiedDate":"2023-11-10"},{"lineNumber":407,"author":{"gitId":"larrywang0701"},"content":"| **Help**           | `help [COMMAND_WORD]` \u003cbr\u003e e.g., `help add`                                                                                                                                                                                                                             |","lastModifiedDate":"2023-11-10"}],"authorContributionMap":{"larrywang0701":59,"zekone":87,"AndrewJanong":95,"-":121,"josepholim":40,"Nixx162":5}},{"path":"docs/_markbind/layouts/default.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003chead-bottom\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \u003clink rel\u003d\"stylesheet\" href\u003d\"{{baseUrl}}/stylesheets/main.css\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c/head-bottom\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003cheader sticky\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"  \u003cnavbar type\u003d\"dark\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":7,"author":{"gitId":"Nixx162"},"content":"    \u003ca slot\u003d\"brand\" href\u003d\"{{baseUrl}}/index.html\" title\u003d\"Home\" class\u003d\"navbar-brand\"\u003eKeepInTouch\u003c/a\u003e","lastModifiedDate":"2023-10-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    \u003cli\u003e\u003ca href\u003d\"{{baseUrl}}/UserGuide.html\" class\u003d\"nav-link\"\u003eUser Guide\u003c/a\u003e\u003c/li\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    \u003cli\u003e\u003ca href\u003d\"{{baseUrl}}/DeveloperGuide.html\" class\u003d\"nav-link\"\u003eDeveloper Guide\u003c/a\u003e\u003c/li\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    \u003cli\u003e\u003ca href\u003d\"{{baseUrl}}/AboutUs.html\" class\u003d\"nav-link\"\u003eAbout Us\u003c/a\u003e\u003c/li\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":11,"author":{"gitId":"Nixx162"},"content":"    \u003cli\u003e\u003ca href\u003d\"https://github.com/AY2324S1-CS2103T-W16-1/tp\" target\u003d\"_blank\" class\u003d\"nav-link\"\u003e\u003cmd\u003e:fab-github:\u003c/md\u003e\u003c/a\u003e","lastModifiedDate":"2023-10-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    \u003c/li\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    \u003cli slot\u003d\"right\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"      \u003cform class\u003d\"navbar-form\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        \u003csearchbar :data\u003d\"searchData\" placeholder\u003d\"Search\" :on-hit\u003d\"searchCallback\" menu-align-right\u003e\u003c/searchbar\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"      \u003c/form\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003c/li\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  \u003c/navbar\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"\u003c/header\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"\u003cdiv id\u003d\"flex-body\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  \u003cnav id\u003d\"site-nav\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    \u003cdiv class\u003d\"site-nav-top\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"      \u003cdiv class\u003d\"fw-bold mb-2\" style\u003d\"font-size: 1.25rem;\"\u003eSite Map\u003c/div\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    \u003c/div\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    \u003cdiv class\u003d\"nav-component slim-scroll\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"      \u003csite-nav\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"* [Home]({{ baseUrl }}/index.html)","lastModifiedDate":"2023-09-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"* [User Guide]({{ baseUrl }}/UserGuide.html) :expanded:","lastModifiedDate":"2023-09-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  * [Quick Start]({{ baseUrl }}/UserGuide.html#quick-start)","lastModifiedDate":"2023-09-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  * [Features]({{ baseUrl }}/UserGuide.html#features)","lastModifiedDate":"2023-09-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  * [FAQ]({{ baseUrl }}/UserGuide.html#faq)","lastModifiedDate":"2023-09-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  * [Command Summary]({{ baseUrl }}/UserGuide.html#faq)","lastModifiedDate":"2023-09-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"* [Developer Guide]({{ baseUrl }}/DeveloperGuide.html) :expanded:","lastModifiedDate":"2023-09-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"  * [Acknowledgements]({{ baseUrl }}/DeveloperGuide.html#acknowledgements)","lastModifiedDate":"2023-09-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"  * [Setting Up]({{ baseUrl }}/DeveloperGuide.html#setting-up-getting-started)","lastModifiedDate":"2023-09-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"  * [Design]({{ baseUrl }}/DeveloperGuide.html#design)","lastModifiedDate":"2023-09-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"  * [Implementation]({{ baseUrl }}/DeveloperGuide.html#implementation)","lastModifiedDate":"2023-09-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"  * [Documentation, logging, testing, configuration, dev-ops]({{ baseUrl }}/DeveloperGuide.html#documentation-logging-testing-configuration-dev-ops)","lastModifiedDate":"2023-09-12"},{"lineNumber":40,"author":{"gitId":"larrywang0701"},"content":"  * [Appendix A: Requirements]({{ baseUrl }}/DeveloperGuide.html##appendix-a-requirements)","lastModifiedDate":"2023-11-14"},{"lineNumber":41,"author":{"gitId":"larrywang0701"},"content":"  * [Appendix B: Instructions for manual testing]({{ baseUrl }}/DeveloperGuide.html#appendix-b-instructions-for-manual-testing)","lastModifiedDate":"2023-11-14"},{"lineNumber":42,"author":{"gitId":"larrywang0701"},"content":"  * [Appendix C: Planned enhancements]({{ baseUrl }}/DeveloperGuide.html#appendix-c-planned-enhancements)","lastModifiedDate":"2023-11-14"},{"lineNumber":43,"author":{"gitId":"-"},"content":"* Tutorials","lastModifiedDate":"2023-09-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"  * [Tracing code]({{ baseUrl }}/tutorials/TracingCode.html)","lastModifiedDate":"2023-09-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"  * [Adding a command]({{ baseUrl }}/tutorials/AddRemark.html)","lastModifiedDate":"2023-09-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  * [Removing Fields]({{ baseUrl }}/tutorials/RemovingFields.html)","lastModifiedDate":"2023-09-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* [About Us]({{ baseUrl }}/AboutUs.html)","lastModifiedDate":"2023-09-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"      \u003c/site-nav\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    \u003c/div\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  \u003c/nav\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  \u003cdiv id\u003d\"content-wrapper\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    {{ content }}","lastModifiedDate":"2023-09-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"  \u003c/div\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"  \u003cnav id\u003d\"page-nav\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    \u003cdiv class\u003d\"nav-component slim-scroll\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"      \u003cpage-nav /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    \u003c/div\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  \u003c/nav\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"  \u003cscroll-top-button\u003e\u003c/scroll-top-button\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"\u003cfooter\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":63,"author":{"gitId":"-"},"content":"  \u003c!-- Support MarkBind by including a link to us on your landing page! --\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"  \u003cdiv class\u003d\"text-center\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    \u003csmall\u003e[\u003cmd\u003e**Powered by**\u003c/md\u003e \u003cimg src\u003d\"https://markbind.org/favicon.ico\" width\u003d\"30\"\u003e {{MarkBind}}, generated on {{timestamp}}]\u003c/small\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"  \u003c/div\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"\u003c/footer\u003e","lastModifiedDate":"2023-09-12"}],"authorContributionMap":{"larrywang0701":3,"-":62,"Nixx162":2}},{"path":"docs/diagrams/ArchitectureSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2023-07-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"Actor User as user USER_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Participant \":UI\" as ui UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Participant \":Logic\" as logic LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Participant \":Model\" as model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Participant \":Storage\" as storage STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"Nixx162"},"content":"user -[USER_COLOR]\u003e ui : \"delete contact 1\"","lastModifiedDate":"2023-11-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"activate ui UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"Nixx162"},"content":"ui -[UI_COLOR]\u003e logic : execute(\"delete contact 1\")","lastModifiedDate":"2023-11-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"activate logic LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"logic -[LOGIC_COLOR]\u003e model : deletePerson(p)","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"activate model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"model -[MODEL_COLOR]-\u003e logic","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"deactivate model","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"logic -[LOGIC_COLOR]\u003e storage : saveAddressBook(addressBook)","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"activate storage STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"storage -[STORAGE_COLOR]\u003e storage : Save to file","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"activate storage STORAGE_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"storage --[STORAGE_COLOR]\u003e storage","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"deactivate storage","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"storage --[STORAGE_COLOR]\u003e logic","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"deactivate storage","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"logic --[LOGIC_COLOR]\u003e ui","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"deactivate logic","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"ui--[UI_COLOR]\u003e user","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"deactivate ui","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"-":37,"Nixx162":2}},{"path":"docs/diagrams/FindSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Nixx162"},"content":"@startuml","lastModifiedDate":"2023-11-14"},{"lineNumber":2,"author":{"gitId":"Nixx162"},"content":"!include style.puml","lastModifiedDate":"2023-11-14"},{"lineNumber":3,"author":{"gitId":"Nixx162"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2023-11-14"},{"lineNumber":4,"author":{"gitId":"Nixx162"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":5,"author":{"gitId":"Nixx162"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2023-11-14"},{"lineNumber":6,"author":{"gitId":"Nixx162"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2023-11-14"},{"lineNumber":7,"author":{"gitId":"Nixx162"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2023-11-14"},{"lineNumber":8,"author":{"gitId":"Nixx162"},"content":"participant \":FindCommandParser\" as FindCommandParser LOGIC_COLOR","lastModifiedDate":"2023-11-14"},{"lineNumber":9,"author":{"gitId":"Nixx162"},"content":"participant \"d:FindCommand\" as FindCommand LOGIC_COLOR","lastModifiedDate":"2023-11-14"},{"lineNumber":10,"author":{"gitId":"Nixx162"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2023-11-14"},{"lineNumber":11,"author":{"gitId":"Nixx162"},"content":"end box","lastModifiedDate":"2023-11-14"},{"lineNumber":12,"author":{"gitId":"Nixx162"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":13,"author":{"gitId":"Nixx162"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2023-11-14"},{"lineNumber":14,"author":{"gitId":"Nixx162"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2023-11-14"},{"lineNumber":15,"author":{"gitId":"Nixx162"},"content":"end box","lastModifiedDate":"2023-11-14"},{"lineNumber":16,"author":{"gitId":"Nixx162"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":17,"author":{"gitId":"Nixx162"},"content":"[-\u003e LogicManager : execute(\"find John\")","lastModifiedDate":"2023-11-14"},{"lineNumber":18,"author":{"gitId":"Nixx162"},"content":"activate LogicManager","lastModifiedDate":"2023-11-14"},{"lineNumber":19,"author":{"gitId":"Nixx162"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":20,"author":{"gitId":"Nixx162"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"find John\")","lastModifiedDate":"2023-11-14"},{"lineNumber":21,"author":{"gitId":"Nixx162"},"content":"activate AddressBookParser","lastModifiedDate":"2023-11-14"},{"lineNumber":22,"author":{"gitId":"Nixx162"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":23,"author":{"gitId":"Nixx162"},"content":"create FindCommandParser","lastModifiedDate":"2023-11-14"},{"lineNumber":24,"author":{"gitId":"Nixx162"},"content":"AddressBookParser -\u003e FindCommandParser","lastModifiedDate":"2023-11-14"},{"lineNumber":25,"author":{"gitId":"Nixx162"},"content":"activate FindCommandParser","lastModifiedDate":"2023-11-14"},{"lineNumber":26,"author":{"gitId":"Nixx162"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":27,"author":{"gitId":"Nixx162"},"content":"FindCommandParser --\u003e AddressBookParser","lastModifiedDate":"2023-11-14"},{"lineNumber":28,"author":{"gitId":"Nixx162"},"content":"deactivate FindCommandParser","lastModifiedDate":"2023-11-14"},{"lineNumber":29,"author":{"gitId":"Nixx162"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":30,"author":{"gitId":"Nixx162"},"content":"AddressBookParser -\u003e FindCommandParser : parse(\"John\")","lastModifiedDate":"2023-11-14"},{"lineNumber":31,"author":{"gitId":"Nixx162"},"content":"activate FindCommandParser","lastModifiedDate":"2023-11-14"},{"lineNumber":32,"author":{"gitId":"Nixx162"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":33,"author":{"gitId":"Nixx162"},"content":"create FindCommand","lastModifiedDate":"2023-11-14"},{"lineNumber":34,"author":{"gitId":"Nixx162"},"content":"FindCommandParser -\u003e FindCommand","lastModifiedDate":"2023-11-14"},{"lineNumber":35,"author":{"gitId":"Nixx162"},"content":"activate FindCommand","lastModifiedDate":"2023-11-14"},{"lineNumber":36,"author":{"gitId":"Nixx162"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":37,"author":{"gitId":"Nixx162"},"content":"FindCommand --\u003e FindCommandParser : d","lastModifiedDate":"2023-11-14"},{"lineNumber":38,"author":{"gitId":"Nixx162"},"content":"deactivate FindCommand","lastModifiedDate":"2023-11-14"},{"lineNumber":39,"author":{"gitId":"Nixx162"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":40,"author":{"gitId":"Nixx162"},"content":"FindCommandParser --\u003e AddressBookParser : d","lastModifiedDate":"2023-11-14"},{"lineNumber":41,"author":{"gitId":"Nixx162"},"content":"deactivate FindCommandParser","lastModifiedDate":"2023-11-14"},{"lineNumber":42,"author":{"gitId":"Nixx162"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2023-11-14"},{"lineNumber":43,"author":{"gitId":"Nixx162"},"content":"FindCommandParser -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2023-11-14"},{"lineNumber":44,"author":{"gitId":"Nixx162"},"content":"destroy FindCommandParser","lastModifiedDate":"2023-11-14"},{"lineNumber":45,"author":{"gitId":"Nixx162"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":46,"author":{"gitId":"Nixx162"},"content":"AddressBookParser --\u003e LogicManager : d","lastModifiedDate":"2023-11-14"},{"lineNumber":47,"author":{"gitId":"Nixx162"},"content":"deactivate AddressBookParser","lastModifiedDate":"2023-11-14"},{"lineNumber":48,"author":{"gitId":"Nixx162"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":49,"author":{"gitId":"Nixx162"},"content":"LogicManager -\u003e FindCommand : execute()","lastModifiedDate":"2023-11-14"},{"lineNumber":50,"author":{"gitId":"Nixx162"},"content":"activate FindCommand","lastModifiedDate":"2023-11-14"},{"lineNumber":51,"author":{"gitId":"Nixx162"},"content":"FindCommand -\u003e Model : updateFilteredList(predicate)","lastModifiedDate":"2023-11-14"},{"lineNumber":52,"author":{"gitId":"Nixx162"},"content":"activate Model","lastModifiedDate":"2023-11-14"},{"lineNumber":53,"author":{"gitId":"Nixx162"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":54,"author":{"gitId":"Nixx162"},"content":"Model --\u003e FindCommand","lastModifiedDate":"2023-11-14"},{"lineNumber":55,"author":{"gitId":"Nixx162"},"content":"deactivate Model","lastModifiedDate":"2023-11-14"},{"lineNumber":56,"author":{"gitId":"Nixx162"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":57,"author":{"gitId":"Nixx162"},"content":"create CommandResult","lastModifiedDate":"2023-11-14"},{"lineNumber":58,"author":{"gitId":"Nixx162"},"content":"FindCommand -\u003e CommandResult","lastModifiedDate":"2023-11-14"},{"lineNumber":59,"author":{"gitId":"Nixx162"},"content":"activate CommandResult","lastModifiedDate":"2023-11-14"},{"lineNumber":60,"author":{"gitId":"Nixx162"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":61,"author":{"gitId":"Nixx162"},"content":"CommandResult --\u003e FindCommand","lastModifiedDate":"2023-11-14"},{"lineNumber":62,"author":{"gitId":"Nixx162"},"content":"deactivate CommandResult","lastModifiedDate":"2023-11-14"},{"lineNumber":63,"author":{"gitId":"Nixx162"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":64,"author":{"gitId":"Nixx162"},"content":"FindCommand --\u003e LogicManager : result","lastModifiedDate":"2023-11-14"},{"lineNumber":65,"author":{"gitId":"Nixx162"},"content":"deactivate FindCommand","lastModifiedDate":"2023-11-14"},{"lineNumber":66,"author":{"gitId":"Nixx162"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":67,"author":{"gitId":"Nixx162"},"content":"[\u003c--LogicManager","lastModifiedDate":"2023-11-14"},{"lineNumber":68,"author":{"gitId":"Nixx162"},"content":"deactivate LogicManager","lastModifiedDate":"2023-11-14"},{"lineNumber":69,"author":{"gitId":"Nixx162"},"content":"@enduml","lastModifiedDate":"2023-11-14"}],"authorContributionMap":{"Nixx162":69}},{"path":"docs/diagrams/ModelClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Package Model as ModelPackage \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2023-07-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nReadOnlyAddressBook\" as ReadOnlyAddressBook","lastModifiedDate":"2022-01-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nReadOnlyUserPrefs\" as ReadOnlyUserPrefs","lastModifiedDate":"2022-01-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nModel\" as Model","lastModifiedDate":"2022-01-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class AddressBook","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class ModelManager","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class UserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":15,"author":{"gitId":"Nixx162"},"content":"Class UniqueEventList","lastModifiedDate":"2023-11-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class UniquePersonList","lastModifiedDate":"2021-07-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Class Person","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Class Address","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Class Email","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Class Name","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Class Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"Class Tag","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"Nixx162"},"content":"Class Note","lastModifiedDate":"2023-11-12"},{"lineNumber":24,"author":{"gitId":"Nixx162"},"content":"Class Event","lastModifiedDate":"2023-11-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"Class I #FFFFFF","lastModifiedDate":"2023-07-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"AddressBook .up.|\u003e ReadOnlyAddressBook","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"ModelManager .up.|\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"Model .right.\u003e ReadOnlyUserPrefs","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"Model .left.\u003e ReadOnlyAddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"ModelManager -left-\u003e \"1\" AddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"ModelManager -right-\u003e \"1\" UserPrefs","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"UserPrefs .up.|\u003e ReadOnlyUserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"AddressBook *--\u003e \"1\" UniquePersonList","lastModifiedDate":"2019-07-30"},{"lineNumber":42,"author":{"gitId":"Nixx162"},"content":"AddressBook *--\u003e \"1\" UniqueEventList","lastModifiedDate":"2023-11-12"},{"lineNumber":43,"author":{"gitId":"Nixx162"},"content":"UniquePersonList -down-\u003e \"~* all\" Person","lastModifiedDate":"2023-11-13"},{"lineNumber":44,"author":{"gitId":"Nixx162"},"content":"UniqueEventList -down-\u003e \"~* all\" Event","lastModifiedDate":"2023-11-12"},{"lineNumber":45,"author":{"gitId":"zekone"},"content":"Person *--\u003e \"1\" Name","lastModifiedDate":"2023-11-13"},{"lineNumber":46,"author":{"gitId":"zekone"},"content":"Person *--\u003e \"1\" Phone","lastModifiedDate":"2023-11-13"},{"lineNumber":47,"author":{"gitId":"zekone"},"content":"Person *--\u003e \"1\" Email","lastModifiedDate":"2023-11-13"},{"lineNumber":48,"author":{"gitId":"zekone"},"content":"Person *--\u003e \"1\" Address","lastModifiedDate":"2023-11-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"Person *--\u003e \"*\" Tag","lastModifiedDate":"2019-07-03"},{"lineNumber":50,"author":{"gitId":"Nixx162"},"content":"Person *--\u003e \"*\" Note","lastModifiedDate":"2023-11-12"},{"lineNumber":51,"author":{"gitId":"zekone"},"content":"Person *--\u003e \"*\" Event","lastModifiedDate":"2023-11-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":53,"author":{"gitId":"Nixx162"},"content":"UniqueEventList -[hidden]right-\u003e UniquePersonList","lastModifiedDate":"2023-11-14"},{"lineNumber":54,"author":{"gitId":"Nixx162"},"content":"UserPrefs -[hidden]down-\u003e UniquePersonList","lastModifiedDate":"2023-11-13"},{"lineNumber":55,"author":{"gitId":"Nixx162"},"content":"ModelManager -[hidden]down-\u003e UniquePersonList","lastModifiedDate":"2023-11-12"},{"lineNumber":56,"author":{"gitId":"Nixx162"},"content":"Event -[hidden]down-\u003e Name","lastModifiedDate":"2023-11-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"Name -[hidden]right-\u003e Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"Phone -[hidden]right-\u003e Address","lastModifiedDate":"2019-07-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"Address -[hidden]right-\u003e Email","lastModifiedDate":"2019-07-03"},{"lineNumber":60,"author":{"gitId":"Nixx162"},"content":"Email -[hidden]right-\u003e Tag","lastModifiedDate":"2023-11-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":62,"author":{"gitId":"Nixx162"},"content":"Event -[hidden]right-\u003e I","lastModifiedDate":"2023-11-13"},{"lineNumber":63,"author":{"gitId":"Nixx162"},"content":"I -[hidden]right-\u003e Person","lastModifiedDate":"2023-11-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"ModelManager --\u003e \"~* filtered\" Person","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"Nixx162"},"content":"ModelManager --\u003e \"~* filtered\" Event","lastModifiedDate":"2023-11-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"zekone":5,"-":47,"Nixx162":15}},{"path":"docs/diagrams/StorageClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package Storage as StoragePackage {","lastModifiedDate":"2023-07-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":9,"author":{"gitId":"-"},"content":"package \"UserPrefs Storage\" #F4F6F6{","lastModifiedDate":"2021-07-31"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nUserPrefsStorage\" as UserPrefsStorage","lastModifiedDate":"2022-01-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class JsonUserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nStorage\" as Storage","lastModifiedDate":"2022-01-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class StorageManager","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"package \"AddressBook Storage\" #F4F6F6{","lastModifiedDate":"2021-07-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nAddressBookStorage\" as AddressBookStorage","lastModifiedDate":"2022-01-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Class JsonAddressBookStorage","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Class JsonSerializableAddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Class JsonAdaptedPerson","lastModifiedDate":"2021-07-31"},{"lineNumber":22,"author":{"gitId":"-"},"content":"Class JsonAdaptedTag","lastModifiedDate":"2021-07-31"},{"lineNumber":23,"author":{"gitId":"zekone"},"content":"Class JsonAdaptedNote","lastModifiedDate":"2023-10-27"},{"lineNumber":24,"author":{"gitId":"zekone"},"content":"Class JsonAdaptedEvent","lastModifiedDate":"2023-10-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Storage","lastModifiedDate":"2021-07-31"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"StorageManager .up.|\u003e Storage","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"StorageManager -up-\u003e \"1\" UserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"StorageManager -up-\u003e \"1\" AddressBookStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"Storage -left-|\u003e UserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"Storage -right-|\u003e AddressBookStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"JsonUserPrefsStorage .up.|\u003e UserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":40,"author":{"gitId":"-"},"content":"JsonAddressBookStorage .up.|\u003e AddressBookStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":41,"author":{"gitId":"-"},"content":"JsonAddressBookStorage ..\u003e JsonSerializableAddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":42,"author":{"gitId":"-"},"content":"JsonSerializableAddressBook --\u003e \"*\" JsonAdaptedPerson","lastModifiedDate":"2021-07-31"},{"lineNumber":43,"author":{"gitId":"-"},"content":"JsonAdaptedPerson --\u003e \"*\" JsonAdaptedTag","lastModifiedDate":"2021-07-31"},{"lineNumber":44,"author":{"gitId":"zekone"},"content":"JsonAdaptedPerson --\u003e \"*\" JsonAdaptedNote","lastModifiedDate":"2023-10-27"},{"lineNumber":45,"author":{"gitId":"zekone"},"content":"JsonAdaptedPerson --\u003e \"*\" JsonAdaptedEvent","lastModifiedDate":"2023-10-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":47,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"zekone":4,"-":43}},{"path":"docs/diagrams/UiClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor UI_COLOR_T4","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package UI \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nUi\" as Ui","lastModifiedDate":"2022-01-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Class \"{abstract}\\nUiPart\" as UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class UiManager","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class MainWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class HelpWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class ResultDisplay","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Class PersonListPanel","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"Nixx162"},"content":"Class ContactCard","lastModifiedDate":"2023-11-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class StatusBarFooter","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Class CommandBox","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"Nixx162"},"content":"Class EventListWindow","lastModifiedDate":"2023-11-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"package Model \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"Class HiddenModel #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"package Logic \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"Class HiddenLogic #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Ui","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"UiManager .left.|\u003e Ui","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"UiManager -down-\u003e \"1\" MainWindow","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e  \"1\" CommandBox","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e \"1\" ResultDisplay","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e \"1\" PersonListPanel","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e \"1\" StatusBarFooter","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"MainWindow --\u003e \"0..1\" HelpWindow","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"Nixx162"},"content":"MainWindow --\u003e \"0..1\" EventListWindow","lastModifiedDate":"2023-11-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"Nixx162"},"content":"PersonListPanel -down-\u003e \"*\" ContactCard","lastModifiedDate":"2023-11-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"MainWindow -left-|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"ResultDisplay --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"CommandBox --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"PersonListPanel --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"Nixx162"},"content":"EventListWindow --|\u003e UiPart","lastModifiedDate":"2023-11-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"StatusBarFooter --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"HelpWindow --|\u003e UiPart","lastModifiedDate":"2021-07-31"},{"lineNumber":51,"author":{"gitId":"Nixx162"},"content":"ContactCard --|\u003e UiPart","lastModifiedDate":"2023-11-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":53,"author":{"gitId":"Nixx162"},"content":"ContactCard ..\u003e Model","lastModifiedDate":"2023-11-12"},{"lineNumber":54,"author":{"gitId":"Nixx162"},"content":"PersonListPanel ..\u003e Model","lastModifiedDate":"2023-11-12"},{"lineNumber":55,"author":{"gitId":"Nixx162"},"content":"EventListWindow ..\u003e Model","lastModifiedDate":"2023-11-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"UiManager -right-\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"MainWindow -left-\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":59,"author":{"gitId":"Nixx162"},"content":"EventListWindow -[hidden]left- PersonListPanel","lastModifiedDate":"2023-11-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"PersonListPanel -[hidden]left- HelpWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"HelpWindow -[hidden]left- CommandBox","lastModifiedDate":"2019-07-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"CommandBox -[hidden]left- ResultDisplay","lastModifiedDate":"2019-07-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"ResultDisplay -[hidden]left- StatusBarFooter","lastModifiedDate":"2019-07-30"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"MainWindow -[hidden]-|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"-":56,"Nixx162":10}},{"path":"docs/diagrams/event/AddEventActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"AndrewJanong"},"content":"@startuml","lastModifiedDate":"2023-11-13"},{"lineNumber":2,"author":{"gitId":"AndrewJanong"},"content":"skin rose","lastModifiedDate":"2023-11-13"},{"lineNumber":3,"author":{"gitId":"AndrewJanong"},"content":"skinparam ActivityFontSize 15","lastModifiedDate":"2023-11-13"},{"lineNumber":4,"author":{"gitId":"AndrewJanong"},"content":"skinparam ArrowFontSize 12","lastModifiedDate":"2023-11-13"},{"lineNumber":5,"author":{"gitId":"AndrewJanong"},"content":"start","lastModifiedDate":"2023-11-13"},{"lineNumber":6,"author":{"gitId":"AndrewJanong"},"content":":User executes add event command;","lastModifiedDate":"2023-11-13"},{"lineNumber":7,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":8,"author":{"gitId":"AndrewJanong"},"content":"\u0027Since the beta syntax does not support placing the condition outside the","lastModifiedDate":"2023-11-13"},{"lineNumber":9,"author":{"gitId":"AndrewJanong"},"content":"\u0027diamond we place it as the true branch instead.","lastModifiedDate":"2023-11-13"},{"lineNumber":10,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":11,"author":{"gitId":"AndrewJanong"},"content":"if () then ([person exists])","lastModifiedDate":"2023-11-13"},{"lineNumber":12,"author":{"gitId":"AndrewJanong"},"content":"    if () then ([no duplicates or clashes])","lastModifiedDate":"2023-11-13"},{"lineNumber":13,"author":{"gitId":"AndrewJanong"},"content":"        :Add a new event to the person in the address book;","lastModifiedDate":"2023-11-13"},{"lineNumber":14,"author":{"gitId":"AndrewJanong"},"content":"        :Returns result message with","lastModifiedDate":"2023-11-13"},{"lineNumber":15,"author":{"gitId":"AndrewJanong"},"content":"        the event that has been added;","lastModifiedDate":"2023-11-13"},{"lineNumber":16,"author":{"gitId":"AndrewJanong"},"content":"    else ([else])","lastModifiedDate":"2023-11-13"},{"lineNumber":17,"author":{"gitId":"AndrewJanong"},"content":"        :Throw CommandException;","lastModifiedDate":"2023-11-13"},{"lineNumber":18,"author":{"gitId":"AndrewJanong"},"content":"    endif","lastModifiedDate":"2023-11-13"},{"lineNumber":19,"author":{"gitId":"AndrewJanong"},"content":"else ([else])","lastModifiedDate":"2023-11-13"},{"lineNumber":20,"author":{"gitId":"AndrewJanong"},"content":"    :Throw CommandException;","lastModifiedDate":"2023-11-13"},{"lineNumber":21,"author":{"gitId":"AndrewJanong"},"content":"endif","lastModifiedDate":"2023-11-13"},{"lineNumber":22,"author":{"gitId":"AndrewJanong"},"content":"stop","lastModifiedDate":"2023-11-13"},{"lineNumber":23,"author":{"gitId":"AndrewJanong"},"content":"@enduml","lastModifiedDate":"2023-11-13"}],"authorContributionMap":{"AndrewJanong":23}},{"path":"docs/diagrams/event/AddEventSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"AndrewJanong"},"content":"@startuml","lastModifiedDate":"2023-11-13"},{"lineNumber":2,"author":{"gitId":"AndrewJanong"},"content":"!include ../style.puml","lastModifiedDate":"2023-11-13"},{"lineNumber":3,"author":{"gitId":"AndrewJanong"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2023-11-13"},{"lineNumber":4,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":5,"author":{"gitId":"AndrewJanong"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2023-11-13"},{"lineNumber":6,"author":{"gitId":"AndrewJanong"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2023-11-13"},{"lineNumber":7,"author":{"gitId":"AndrewJanong"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2023-11-13"},{"lineNumber":8,"author":{"gitId":"AndrewJanong"},"content":"participant \":AddCommandParser\" as AddCommandParser LOGIC_COLOR","lastModifiedDate":"2023-11-13"},{"lineNumber":9,"author":{"gitId":"AndrewJanong"},"content":"participant \":AddEventCommandParser\" as AddEventCommandParser LOGIC_COLOR","lastModifiedDate":"2023-11-13"},{"lineNumber":10,"author":{"gitId":"AndrewJanong"},"content":"participant \":AddEventCommand\" as AddEventCommand LOGIC_COLOR","lastModifiedDate":"2023-11-13"},{"lineNumber":11,"author":{"gitId":"AndrewJanong"},"content":"participant \"commandResult:CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2023-11-13"},{"lineNumber":12,"author":{"gitId":"AndrewJanong"},"content":"end box","lastModifiedDate":"2023-11-13"},{"lineNumber":13,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":14,"author":{"gitId":"AndrewJanong"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2023-11-13"},{"lineNumber":15,"author":{"gitId":"AndrewJanong"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2023-11-13"},{"lineNumber":16,"author":{"gitId":"AndrewJanong"},"content":"end box","lastModifiedDate":"2023-11-13"},{"lineNumber":17,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":18,"author":{"gitId":"AndrewJanong"},"content":"[-\u003e LogicManager : execute(commandText)","lastModifiedDate":"2023-11-13"},{"lineNumber":19,"author":{"gitId":"AndrewJanong"},"content":"activate LogicManager","lastModifiedDate":"2023-11-13"},{"lineNumber":20,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":21,"author":{"gitId":"AndrewJanong"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(commandText)","lastModifiedDate":"2023-11-13"},{"lineNumber":22,"author":{"gitId":"AndrewJanong"},"content":"activate AddressBookParser","lastModifiedDate":"2023-11-13"},{"lineNumber":23,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":24,"author":{"gitId":"AndrewJanong"},"content":"create AddCommandParser","lastModifiedDate":"2023-11-13"},{"lineNumber":25,"author":{"gitId":"AndrewJanong"},"content":"AddressBookParser -\u003e AddCommandParser","lastModifiedDate":"2023-11-13"},{"lineNumber":26,"author":{"gitId":"AndrewJanong"},"content":"activate AddCommandParser","lastModifiedDate":"2023-11-13"},{"lineNumber":27,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":28,"author":{"gitId":"AndrewJanong"},"content":"AddCommandParser --\u003e AddressBookParser","lastModifiedDate":"2023-11-13"},{"lineNumber":29,"author":{"gitId":"AndrewJanong"},"content":"deactivate AddCommandParser","lastModifiedDate":"2023-11-13"},{"lineNumber":30,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":31,"author":{"gitId":"AndrewJanong"},"content":"AddressBookParser -\u003e AddCommandParser : parse(commandText)","lastModifiedDate":"2023-11-13"},{"lineNumber":32,"author":{"gitId":"AndrewJanong"},"content":"activate AddCommandParser","lastModifiedDate":"2023-11-13"},{"lineNumber":33,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":34,"author":{"gitId":"AndrewJanong"},"content":"create AddEventCommandParser","lastModifiedDate":"2023-11-13"},{"lineNumber":35,"author":{"gitId":"AndrewJanong"},"content":"AddCommandParser -\u003e AddEventCommandParser","lastModifiedDate":"2023-11-13"},{"lineNumber":36,"author":{"gitId":"AndrewJanong"},"content":"activate AddEventCommandParser","lastModifiedDate":"2023-11-13"},{"lineNumber":37,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":38,"author":{"gitId":"AndrewJanong"},"content":"AddEventCommandParser -\u003e AddCommandParser","lastModifiedDate":"2023-11-13"},{"lineNumber":39,"author":{"gitId":"AndrewJanong"},"content":"deactivate AddEventCommandParser","lastModifiedDate":"2023-11-13"},{"lineNumber":40,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":41,"author":{"gitId":"larrywang0701"},"content":"AddCommandParser -\u003e AddEventCommandParser : parse(args)","lastModifiedDate":"2023-11-14"},{"lineNumber":42,"author":{"gitId":"AndrewJanong"},"content":"activate AddEventCommandParser","lastModifiedDate":"2023-11-13"},{"lineNumber":43,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":44,"author":{"gitId":"AndrewJanong"},"content":"create AddEventCommand","lastModifiedDate":"2023-11-13"},{"lineNumber":45,"author":{"gitId":"AndrewJanong"},"content":"AddEventCommandParser -\u003e AddEventCommand","lastModifiedDate":"2023-11-13"},{"lineNumber":46,"author":{"gitId":"AndrewJanong"},"content":"activate AddEventCommand","lastModifiedDate":"2023-11-13"},{"lineNumber":47,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":48,"author":{"gitId":"AndrewJanong"},"content":"AddEventCommand --\u003e AddEventCommandParser","lastModifiedDate":"2023-11-13"},{"lineNumber":49,"author":{"gitId":"AndrewJanong"},"content":"deactivate AddEventCommand","lastModifiedDate":"2023-11-13"},{"lineNumber":50,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":51,"author":{"gitId":"AndrewJanong"},"content":"AddEventCommandParser --\u003e AddCommandParser","lastModifiedDate":"2023-11-13"},{"lineNumber":52,"author":{"gitId":"AndrewJanong"},"content":"deactivate AddEventCommandParser","lastModifiedDate":"2023-11-13"},{"lineNumber":53,"author":{"gitId":"AndrewJanong"},"content":"AddEventCommandParser -[hidden]-\u003e AddCommandParser","lastModifiedDate":"2023-11-13"},{"lineNumber":54,"author":{"gitId":"AndrewJanong"},"content":"destroy AddEventCommandParser","lastModifiedDate":"2023-11-13"},{"lineNumber":55,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":56,"author":{"gitId":"AndrewJanong"},"content":"AddCommandParser --\u003e AddressBookParser","lastModifiedDate":"2023-11-13"},{"lineNumber":57,"author":{"gitId":"AndrewJanong"},"content":"deactivate AddCommandParser","lastModifiedDate":"2023-11-13"},{"lineNumber":58,"author":{"gitId":"AndrewJanong"},"content":"AddCommandParser -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2023-11-13"},{"lineNumber":59,"author":{"gitId":"AndrewJanong"},"content":"destroy AddCommandParser","lastModifiedDate":"2023-11-13"},{"lineNumber":60,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":61,"author":{"gitId":"AndrewJanong"},"content":"AddressBookParser --\u003e LogicManager","lastModifiedDate":"2023-11-13"},{"lineNumber":62,"author":{"gitId":"AndrewJanong"},"content":"deactivate AddressBookParser","lastModifiedDate":"2023-11-13"},{"lineNumber":63,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":64,"author":{"gitId":"larrywang0701"},"content":"LogicManager --\u003e AddEventCommand : execute()","lastModifiedDate":"2023-11-14"},{"lineNumber":65,"author":{"gitId":"AndrewJanong"},"content":"activate AddEventCommand","lastModifiedDate":"2023-11-13"},{"lineNumber":66,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":67,"author":{"gitId":"larrywang0701"},"content":"AddEventCommand --\u003e Model: findPersonByUserFriendlyId(contactId)","lastModifiedDate":"2023-11-14"},{"lineNumber":68,"author":{"gitId":"AndrewJanong"},"content":"activate Model","lastModifiedDate":"2023-11-13"},{"lineNumber":69,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":70,"author":{"gitId":"larrywang0701"},"content":"Model --\u003e AddEventCommand: person","lastModifiedDate":"2023-11-14"},{"lineNumber":71,"author":{"gitId":"larrywang0701"},"content":"deactivate Model","lastModifiedDate":"2023-11-14"},{"lineNumber":72,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":73,"author":{"gitId":"larrywang0701"},"content":"AddEventCommand --\u003e Model: addEvent(toAdd, owner)","lastModifiedDate":"2023-11-14"},{"lineNumber":74,"author":{"gitId":"larrywang0701"},"content":"activate Model","lastModifiedDate":"2023-11-14"},{"lineNumber":75,"author":{"gitId":"larrywang0701"},"content":"AddEventCommand \u003c-- Model","lastModifiedDate":"2023-11-14"},{"lineNumber":76,"author":{"gitId":"AndrewJanong"},"content":"deactivate Model","lastModifiedDate":"2023-11-13"},{"lineNumber":77,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":78,"author":{"gitId":"AndrewJanong"},"content":"create CommandResult","lastModifiedDate":"2023-11-13"},{"lineNumber":79,"author":{"gitId":"larrywang0701"},"content":"AddEventCommand --\u003e CommandResult","lastModifiedDate":"2023-11-14"},{"lineNumber":80,"author":{"gitId":"AndrewJanong"},"content":"activate CommandResult","lastModifiedDate":"2023-11-13"},{"lineNumber":81,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":82,"author":{"gitId":"AndrewJanong"},"content":"CommandResult --\u003e AddEventCommand : commandResult","lastModifiedDate":"2023-11-13"},{"lineNumber":83,"author":{"gitId":"AndrewJanong"},"content":"deactivate CommandResult","lastModifiedDate":"2023-11-13"},{"lineNumber":84,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":85,"author":{"gitId":"AndrewJanong"},"content":"AddEventCommand --\u003e LogicManager : commandResult","lastModifiedDate":"2023-11-13"},{"lineNumber":86,"author":{"gitId":"AndrewJanong"},"content":"deactivate AddEventCommand","lastModifiedDate":"2023-11-13"},{"lineNumber":87,"author":{"gitId":"AndrewJanong"},"content":"AddEventCommand -[hidden]-\u003e LogicManager","lastModifiedDate":"2023-11-13"},{"lineNumber":88,"author":{"gitId":"AndrewJanong"},"content":"destroy AddEventCommand","lastModifiedDate":"2023-11-13"},{"lineNumber":89,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":90,"author":{"gitId":"AndrewJanong"},"content":"[\u003c--LogicManager : commandResult","lastModifiedDate":"2023-11-13"},{"lineNumber":91,"author":{"gitId":"AndrewJanong"},"content":"deactivate LogicManager","lastModifiedDate":"2023-11-13"},{"lineNumber":92,"author":{"gitId":"AndrewJanong"},"content":"@enduml","lastModifiedDate":"2023-11-13"}],"authorContributionMap":{"larrywang0701":10,"AndrewJanong":82}},{"path":"docs/diagrams/event/DeleteEventActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"AndrewJanong"},"content":"@startuml","lastModifiedDate":"2023-11-13"},{"lineNumber":2,"author":{"gitId":"AndrewJanong"},"content":"skin rose","lastModifiedDate":"2023-11-13"},{"lineNumber":3,"author":{"gitId":"AndrewJanong"},"content":"skinparam ActivityFontSize 15","lastModifiedDate":"2023-11-13"},{"lineNumber":4,"author":{"gitId":"AndrewJanong"},"content":"skinparam ArrowFontSize 12","lastModifiedDate":"2023-11-13"},{"lineNumber":5,"author":{"gitId":"AndrewJanong"},"content":"start","lastModifiedDate":"2023-11-13"},{"lineNumber":6,"author":{"gitId":"AndrewJanong"},"content":":User executes delete event command;","lastModifiedDate":"2023-11-13"},{"lineNumber":7,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":8,"author":{"gitId":"AndrewJanong"},"content":"\u0027Since the beta syntax does not support placing the condition outside the","lastModifiedDate":"2023-11-13"},{"lineNumber":9,"author":{"gitId":"AndrewJanong"},"content":"\u0027diamond we place it as the true branch instead.","lastModifiedDate":"2023-11-13"},{"lineNumber":10,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":11,"author":{"gitId":"AndrewJanong"},"content":"if () then ([person exists])","lastModifiedDate":"2023-11-13"},{"lineNumber":12,"author":{"gitId":"AndrewJanong"},"content":"    if () then ([event exists])","lastModifiedDate":"2023-11-13"},{"lineNumber":13,"author":{"gitId":"AndrewJanong"},"content":"        :Delete event from the person","lastModifiedDate":"2023-11-13"},{"lineNumber":14,"author":{"gitId":"AndrewJanong"},"content":"        in the address book;","lastModifiedDate":"2023-11-13"},{"lineNumber":15,"author":{"gitId":"AndrewJanong"},"content":"        :Returns result message with","lastModifiedDate":"2023-11-13"},{"lineNumber":16,"author":{"gitId":"AndrewJanong"},"content":"        the event that has been deleted;","lastModifiedDate":"2023-11-13"},{"lineNumber":17,"author":{"gitId":"AndrewJanong"},"content":"    else ([else])","lastModifiedDate":"2023-11-13"},{"lineNumber":18,"author":{"gitId":"AndrewJanong"},"content":"        :Throw CommandException;","lastModifiedDate":"2023-11-13"},{"lineNumber":19,"author":{"gitId":"AndrewJanong"},"content":"    endif","lastModifiedDate":"2023-11-13"},{"lineNumber":20,"author":{"gitId":"AndrewJanong"},"content":"else ([else])","lastModifiedDate":"2023-11-13"},{"lineNumber":21,"author":{"gitId":"AndrewJanong"},"content":"    :Throw CommandException;","lastModifiedDate":"2023-11-13"},{"lineNumber":22,"author":{"gitId":"AndrewJanong"},"content":"endif","lastModifiedDate":"2023-11-13"},{"lineNumber":23,"author":{"gitId":"AndrewJanong"},"content":"stop","lastModifiedDate":"2023-11-13"},{"lineNumber":24,"author":{"gitId":"AndrewJanong"},"content":"@enduml","lastModifiedDate":"2023-11-13"}],"authorContributionMap":{"AndrewJanong":24}},{"path":"docs/diagrams/event/DeleteEventSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"larrywang0701"},"content":"@startuml","lastModifiedDate":"2023-11-14"},{"lineNumber":2,"author":{"gitId":"larrywang0701"},"content":"!include ../style.puml","lastModifiedDate":"2023-11-14"},{"lineNumber":3,"author":{"gitId":"larrywang0701"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2023-11-14"},{"lineNumber":4,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":5,"author":{"gitId":"larrywang0701"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2023-11-14"},{"lineNumber":6,"author":{"gitId":"larrywang0701"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2023-11-14"},{"lineNumber":7,"author":{"gitId":"larrywang0701"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2023-11-14"},{"lineNumber":8,"author":{"gitId":"larrywang0701"},"content":"participant \":DeleteCommandParser\" as DeleteCommandParser LOGIC_COLOR","lastModifiedDate":"2023-11-14"},{"lineNumber":9,"author":{"gitId":"larrywang0701"},"content":"participant \":DeleteEventCommandParser\" as DeleteEventCommandParser LOGIC_COLOR","lastModifiedDate":"2023-11-14"},{"lineNumber":10,"author":{"gitId":"larrywang0701"},"content":"participant \":DeleteEventCommand\" as DeleteEventCommand LOGIC_COLOR","lastModifiedDate":"2023-11-14"},{"lineNumber":11,"author":{"gitId":"larrywang0701"},"content":"participant \"result:CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2023-11-14"},{"lineNumber":12,"author":{"gitId":"larrywang0701"},"content":"end box","lastModifiedDate":"2023-11-14"},{"lineNumber":13,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":14,"author":{"gitId":"larrywang0701"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2023-11-14"},{"lineNumber":15,"author":{"gitId":"larrywang0701"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2023-11-14"},{"lineNumber":16,"author":{"gitId":"larrywang0701"},"content":"end box","lastModifiedDate":"2023-11-14"},{"lineNumber":17,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":18,"author":{"gitId":"larrywang0701"},"content":"[--\u003e LogicManager : execute(commandText)","lastModifiedDate":"2023-11-14"},{"lineNumber":19,"author":{"gitId":"larrywang0701"},"content":"activate LogicManager","lastModifiedDate":"2023-11-14"},{"lineNumber":20,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":21,"author":{"gitId":"larrywang0701"},"content":"LogicManager --\u003e AddressBookParser : parseCommand(commandText)","lastModifiedDate":"2023-11-14"},{"lineNumber":22,"author":{"gitId":"larrywang0701"},"content":"activate AddressBookParser","lastModifiedDate":"2023-11-14"},{"lineNumber":23,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":24,"author":{"gitId":"larrywang0701"},"content":"create DeleteCommandParser","lastModifiedDate":"2023-11-14"},{"lineNumber":25,"author":{"gitId":"larrywang0701"},"content":"AddressBookParser --\u003e DeleteCommandParser","lastModifiedDate":"2023-11-14"},{"lineNumber":26,"author":{"gitId":"larrywang0701"},"content":"activate DeleteCommandParser","lastModifiedDate":"2023-11-14"},{"lineNumber":27,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":28,"author":{"gitId":"larrywang0701"},"content":"DeleteCommandParser --\u003e AddressBookParser","lastModifiedDate":"2023-11-14"},{"lineNumber":29,"author":{"gitId":"larrywang0701"},"content":"deactivate DeleteCommandParser","lastModifiedDate":"2023-11-14"},{"lineNumber":30,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":31,"author":{"gitId":"larrywang0701"},"content":"AddressBookParser --\u003e DeleteCommandParser : parse(commandText)","lastModifiedDate":"2023-11-14"},{"lineNumber":32,"author":{"gitId":"larrywang0701"},"content":"activate DeleteCommandParser","lastModifiedDate":"2023-11-14"},{"lineNumber":33,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":34,"author":{"gitId":"larrywang0701"},"content":"create DeleteEventCommandParser","lastModifiedDate":"2023-11-14"},{"lineNumber":35,"author":{"gitId":"larrywang0701"},"content":"DeleteCommandParser --\u003e DeleteEventCommandParser","lastModifiedDate":"2023-11-14"},{"lineNumber":36,"author":{"gitId":"larrywang0701"},"content":"activate DeleteEventCommandParser","lastModifiedDate":"2023-11-14"},{"lineNumber":37,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":38,"author":{"gitId":"larrywang0701"},"content":"DeleteEventCommandParser --\u003e DeleteCommandParser","lastModifiedDate":"2023-11-14"},{"lineNumber":39,"author":{"gitId":"larrywang0701"},"content":"deactivate DeleteEventCommandParser","lastModifiedDate":"2023-11-14"},{"lineNumber":40,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":41,"author":{"gitId":"larrywang0701"},"content":"DeleteCommandParser --\u003e DeleteEventCommandParser : parse(args)","lastModifiedDate":"2023-11-14"},{"lineNumber":42,"author":{"gitId":"larrywang0701"},"content":"activate DeleteEventCommandParser","lastModifiedDate":"2023-11-14"},{"lineNumber":43,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":44,"author":{"gitId":"larrywang0701"},"content":"create DeleteEventCommand","lastModifiedDate":"2023-11-14"},{"lineNumber":45,"author":{"gitId":"larrywang0701"},"content":"DeleteEventCommandParser --\u003e DeleteEventCommand","lastModifiedDate":"2023-11-14"},{"lineNumber":46,"author":{"gitId":"larrywang0701"},"content":"activate DeleteEventCommand","lastModifiedDate":"2023-11-14"},{"lineNumber":47,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":48,"author":{"gitId":"larrywang0701"},"content":"DeleteEventCommand --\u003e DeleteEventCommandParser","lastModifiedDate":"2023-11-14"},{"lineNumber":49,"author":{"gitId":"larrywang0701"},"content":"deactivate DeleteEventCommand","lastModifiedDate":"2023-11-14"},{"lineNumber":50,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":51,"author":{"gitId":"larrywang0701"},"content":"DeleteEventCommandParser --\u003e DeleteCommandParser","lastModifiedDate":"2023-11-14"},{"lineNumber":52,"author":{"gitId":"larrywang0701"},"content":"deactivate DeleteEventCommandParser","lastModifiedDate":"2023-11-14"},{"lineNumber":53,"author":{"gitId":"larrywang0701"},"content":"DeleteEventCommandParser -[hidden]-\u003e DeleteCommandParser","lastModifiedDate":"2023-11-14"},{"lineNumber":54,"author":{"gitId":"larrywang0701"},"content":"destroy DeleteEventCommandParser","lastModifiedDate":"2023-11-14"},{"lineNumber":55,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":56,"author":{"gitId":"larrywang0701"},"content":"DeleteCommandParser --\u003e AddressBookParser","lastModifiedDate":"2023-11-14"},{"lineNumber":57,"author":{"gitId":"larrywang0701"},"content":"deactivate DeleteCommandParser","lastModifiedDate":"2023-11-14"},{"lineNumber":58,"author":{"gitId":"larrywang0701"},"content":"DeleteCommandParser -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2023-11-14"},{"lineNumber":59,"author":{"gitId":"larrywang0701"},"content":"destroy DeleteCommandParser","lastModifiedDate":"2023-11-14"},{"lineNumber":60,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":61,"author":{"gitId":"larrywang0701"},"content":"AddressBookParser --\u003e LogicManager","lastModifiedDate":"2023-11-14"},{"lineNumber":62,"author":{"gitId":"larrywang0701"},"content":"deactivate AddressBookParser","lastModifiedDate":"2023-11-14"},{"lineNumber":63,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":64,"author":{"gitId":"larrywang0701"},"content":"LogicManager --\u003e DeleteEventCommand : execute()","lastModifiedDate":"2023-11-14"},{"lineNumber":65,"author":{"gitId":"larrywang0701"},"content":"activate DeleteEventCommand","lastModifiedDate":"2023-11-14"},{"lineNumber":66,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":67,"author":{"gitId":"larrywang0701"},"content":"DeleteEventCommand --\u003e Model: findPersonByUserFriendlyId(contactId)","lastModifiedDate":"2023-11-14"},{"lineNumber":68,"author":{"gitId":"larrywang0701"},"content":"activate Model","lastModifiedDate":"2023-11-14"},{"lineNumber":69,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":70,"author":{"gitId":"larrywang0701"},"content":"Model --\u003e DeleteEventCommand: person","lastModifiedDate":"2023-11-14"},{"lineNumber":71,"author":{"gitId":"larrywang0701"},"content":"deactivate Model","lastModifiedDate":"2023-11-14"},{"lineNumber":72,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":73,"author":{"gitId":"larrywang0701"},"content":"DeleteEventCommand --\u003e Model : removeEventByID(eventID, owner)","lastModifiedDate":"2023-11-14"},{"lineNumber":74,"author":{"gitId":"larrywang0701"},"content":"activate Model","lastModifiedDate":"2023-11-14"},{"lineNumber":75,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":76,"author":{"gitId":"larrywang0701"},"content":"DeleteEventCommand \u003c-- Model","lastModifiedDate":"2023-11-14"},{"lineNumber":77,"author":{"gitId":"larrywang0701"},"content":"deactivate Model","lastModifiedDate":"2023-11-14"},{"lineNumber":78,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":79,"author":{"gitId":"larrywang0701"},"content":"create CommandResult","lastModifiedDate":"2023-11-14"},{"lineNumber":80,"author":{"gitId":"larrywang0701"},"content":"DeleteEventCommand --\u003e CommandResult","lastModifiedDate":"2023-11-14"},{"lineNumber":81,"author":{"gitId":"larrywang0701"},"content":"activate CommandResult","lastModifiedDate":"2023-11-14"},{"lineNumber":82,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":83,"author":{"gitId":"larrywang0701"},"content":"CommandResult --\u003e DeleteEventCommand : result","lastModifiedDate":"2023-11-14"},{"lineNumber":84,"author":{"gitId":"larrywang0701"},"content":"deactivate CommandResult","lastModifiedDate":"2023-11-14"},{"lineNumber":85,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":86,"author":{"gitId":"larrywang0701"},"content":"DeleteEventCommand --\u003e LogicManager : result","lastModifiedDate":"2023-11-14"},{"lineNumber":87,"author":{"gitId":"larrywang0701"},"content":"deactivate DeleteEventCommand","lastModifiedDate":"2023-11-14"},{"lineNumber":88,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":89,"author":{"gitId":"larrywang0701"},"content":"DeleteEventCommand -[hidden]-\u003e LogicManager","lastModifiedDate":"2023-11-14"},{"lineNumber":90,"author":{"gitId":"larrywang0701"},"content":"destroy DeleteEventCommand","lastModifiedDate":"2023-11-14"},{"lineNumber":91,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":92,"author":{"gitId":"larrywang0701"},"content":"[\u003c--LogicManager : result","lastModifiedDate":"2023-11-14"},{"lineNumber":93,"author":{"gitId":"larrywang0701"},"content":"deactivate LogicManager","lastModifiedDate":"2023-11-14"},{"lineNumber":94,"author":{"gitId":"larrywang0701"},"content":"@enduml","lastModifiedDate":"2023-11-14"}],"authorContributionMap":{"larrywang0701":94}},{"path":"docs/diagrams/event/ListEventsActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"larrywang0701"},"content":"@startuml","lastModifiedDate":"2023-11-14"},{"lineNumber":2,"author":{"gitId":"larrywang0701"},"content":"skin rose","lastModifiedDate":"2023-11-14"},{"lineNumber":3,"author":{"gitId":"larrywang0701"},"content":"skinparam ActivityFontSize 15","lastModifiedDate":"2023-11-14"},{"lineNumber":4,"author":{"gitId":"larrywang0701"},"content":"skinparam ArrowFontSize 12","lastModifiedDate":"2023-11-14"},{"lineNumber":5,"author":{"gitId":"larrywang0701"},"content":"start","lastModifiedDate":"2023-11-14"},{"lineNumber":6,"author":{"gitId":"larrywang0701"},"content":":User executes list event command;","lastModifiedDate":"2023-11-14"},{"lineNumber":7,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":8,"author":{"gitId":"larrywang0701"},"content":"if () then ([both exist -st and -et argument or neither exists -st nor -et argument])","lastModifiedDate":"2023-11-14"},{"lineNumber":9,"author":{"gitId":"larrywang0701"},"content":"    if () then ([exist -st argument])","lastModifiedDate":"2023-11-14"},{"lineNumber":10,"author":{"gitId":"larrywang0701"},"content":"        if() then([valid start time and end time])","lastModifiedDate":"2023-11-14"},{"lineNumber":11,"author":{"gitId":"larrywang0701"},"content":"            :Filter the event based on start and end time;","lastModifiedDate":"2023-11-14"},{"lineNumber":12,"author":{"gitId":"larrywang0701"},"content":"        else ([else])","lastModifiedDate":"2023-11-14"},{"lineNumber":13,"author":{"gitId":"larrywang0701"},"content":"            :Throw CommandException;","lastModifiedDate":"2023-11-14"},{"lineNumber":14,"author":{"gitId":"larrywang0701"},"content":"        endif","lastModifiedDate":"2023-11-14"},{"lineNumber":15,"author":{"gitId":"larrywang0701"},"content":"    else ([else])","lastModifiedDate":"2023-11-14"},{"lineNumber":16,"author":{"gitId":"larrywang0701"},"content":"    endif","lastModifiedDate":"2023-11-14"},{"lineNumber":17,"author":{"gitId":"larrywang0701"},"content":"    if () then ([exists -descending argument])","lastModifiedDate":"2023-11-14"},{"lineNumber":18,"author":{"gitId":"larrywang0701"},"content":"            :Sort events in descending order;","lastModifiedDate":"2023-11-14"},{"lineNumber":19,"author":{"gitId":"larrywang0701"},"content":"        else ([else])","lastModifiedDate":"2023-11-14"},{"lineNumber":20,"author":{"gitId":"larrywang0701"},"content":"            :Sort events in ascending order;","lastModifiedDate":"2023-11-14"},{"lineNumber":21,"author":{"gitId":"larrywang0701"},"content":"        endif","lastModifiedDate":"2023-11-14"},{"lineNumber":22,"author":{"gitId":"larrywang0701"},"content":"    :Returns Result message;","lastModifiedDate":"2023-11-14"},{"lineNumber":23,"author":{"gitId":"larrywang0701"},"content":"    :Open a new window to display the event list;","lastModifiedDate":"2023-11-14"},{"lineNumber":24,"author":{"gitId":"larrywang0701"},"content":"else ([else])","lastModifiedDate":"2023-11-14"},{"lineNumber":25,"author":{"gitId":"larrywang0701"},"content":"    :Throw CommandException;","lastModifiedDate":"2023-11-14"},{"lineNumber":26,"author":{"gitId":"larrywang0701"},"content":"endif","lastModifiedDate":"2023-11-14"},{"lineNumber":27,"author":{"gitId":"larrywang0701"},"content":"stop","lastModifiedDate":"2023-11-14"},{"lineNumber":28,"author":{"gitId":"larrywang0701"},"content":"@enduml","lastModifiedDate":"2023-11-14"}],"authorContributionMap":{"larrywang0701":28}},{"path":"docs/diagrams/event/ListEventsSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"larrywang0701"},"content":"@startuml","lastModifiedDate":"2023-11-14"},{"lineNumber":2,"author":{"gitId":"larrywang0701"},"content":"!include ../style.puml","lastModifiedDate":"2023-11-14"},{"lineNumber":3,"author":{"gitId":"larrywang0701"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2023-11-14"},{"lineNumber":4,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":5,"author":{"gitId":"larrywang0701"},"content":"box UI UI_COLOR_T1","lastModifiedDate":"2023-11-14"},{"lineNumber":6,"author":{"gitId":"larrywang0701"},"content":"participant \":MainWindow\" as MainWindow UI_COLOR","lastModifiedDate":"2023-11-14"},{"lineNumber":7,"author":{"gitId":"larrywang0701"},"content":"participant \":EventListWindow\" as EventListWindow UI_COLOR","lastModifiedDate":"2023-11-14"},{"lineNumber":8,"author":{"gitId":"larrywang0701"},"content":"end box","lastModifiedDate":"2023-11-14"},{"lineNumber":9,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":10,"author":{"gitId":"larrywang0701"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2023-11-14"},{"lineNumber":11,"author":{"gitId":"larrywang0701"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2023-11-14"},{"lineNumber":12,"author":{"gitId":"larrywang0701"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2023-11-14"},{"lineNumber":13,"author":{"gitId":"larrywang0701"},"content":"participant \":ListCommandParser\" as ListCommandParser LOGIC_COLOR","lastModifiedDate":"2023-11-14"},{"lineNumber":14,"author":{"gitId":"larrywang0701"},"content":"participant \":ListEventCommand\" as ListEventCommand LOGIC_COLOR","lastModifiedDate":"2023-11-14"},{"lineNumber":15,"author":{"gitId":"larrywang0701"},"content":"participant \":ListEventCommandParser\" as ListEventCommandParser LOGIC_COLOR","lastModifiedDate":"2023-11-14"},{"lineNumber":16,"author":{"gitId":"larrywang0701"},"content":"participant \"result:CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2023-11-14"},{"lineNumber":17,"author":{"gitId":"larrywang0701"},"content":"end box","lastModifiedDate":"2023-11-14"},{"lineNumber":18,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":19,"author":{"gitId":"larrywang0701"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2023-11-14"},{"lineNumber":20,"author":{"gitId":"larrywang0701"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2023-11-14"},{"lineNumber":21,"author":{"gitId":"larrywang0701"},"content":"end box","lastModifiedDate":"2023-11-14"},{"lineNumber":22,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":23,"author":{"gitId":"larrywang0701"},"content":"--\u003e MainWindow : executeCommand(commandText)","lastModifiedDate":"2023-11-14"},{"lineNumber":24,"author":{"gitId":"larrywang0701"},"content":"activate MainWindow","lastModifiedDate":"2023-11-14"},{"lineNumber":25,"author":{"gitId":"larrywang0701"},"content":"MainWindow --\u003e LogicManager : execute(commandText)","lastModifiedDate":"2023-11-14"},{"lineNumber":26,"author":{"gitId":"larrywang0701"},"content":"activate LogicManager","lastModifiedDate":"2023-11-14"},{"lineNumber":27,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":28,"author":{"gitId":"larrywang0701"},"content":"LogicManager --\u003e AddressBookParser : parseCommand(commandText)","lastModifiedDate":"2023-11-14"},{"lineNumber":29,"author":{"gitId":"larrywang0701"},"content":"activate AddressBookParser","lastModifiedDate":"2023-11-14"},{"lineNumber":30,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":31,"author":{"gitId":"larrywang0701"},"content":"create ListCommandParser","lastModifiedDate":"2023-11-14"},{"lineNumber":32,"author":{"gitId":"larrywang0701"},"content":"AddressBookParser --\u003e ListCommandParser","lastModifiedDate":"2023-11-14"},{"lineNumber":33,"author":{"gitId":"larrywang0701"},"content":"activate ListCommandParser","lastModifiedDate":"2023-11-14"},{"lineNumber":34,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":35,"author":{"gitId":"larrywang0701"},"content":"ListCommandParser --\u003e AddressBookParser","lastModifiedDate":"2023-11-14"},{"lineNumber":36,"author":{"gitId":"larrywang0701"},"content":"deactivate ListCommandParser","lastModifiedDate":"2023-11-14"},{"lineNumber":37,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":38,"author":{"gitId":"larrywang0701"},"content":"AddressBookParser --\u003e ListCommandParser : parse(commandText)","lastModifiedDate":"2023-11-14"},{"lineNumber":39,"author":{"gitId":"larrywang0701"},"content":"activate ListCommandParser","lastModifiedDate":"2023-11-14"},{"lineNumber":40,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":41,"author":{"gitId":"larrywang0701"},"content":"create ListEventCommandParser","lastModifiedDate":"2023-11-14"},{"lineNumber":42,"author":{"gitId":"larrywang0701"},"content":"ListCommandParser --\u003e ListEventCommandParser","lastModifiedDate":"2023-11-14"},{"lineNumber":43,"author":{"gitId":"larrywang0701"},"content":"activate ListEventCommandParser","lastModifiedDate":"2023-11-14"},{"lineNumber":44,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":45,"author":{"gitId":"larrywang0701"},"content":"ListEventCommandParser --\u003e ListCommandParser","lastModifiedDate":"2023-11-14"},{"lineNumber":46,"author":{"gitId":"larrywang0701"},"content":"deactivate ListEventCommandParser","lastModifiedDate":"2023-11-14"},{"lineNumber":47,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":48,"author":{"gitId":"larrywang0701"},"content":"ListCommandParser --\u003e ListEventCommandParser : parse(args)","lastModifiedDate":"2023-11-14"},{"lineNumber":49,"author":{"gitId":"larrywang0701"},"content":"activate ListEventCommandParser","lastModifiedDate":"2023-11-14"},{"lineNumber":50,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":51,"author":{"gitId":"larrywang0701"},"content":"create ListEventCommand","lastModifiedDate":"2023-11-14"},{"lineNumber":52,"author":{"gitId":"larrywang0701"},"content":"ListEventCommandParser --\u003e ListEventCommand","lastModifiedDate":"2023-11-14"},{"lineNumber":53,"author":{"gitId":"larrywang0701"},"content":"activate ListEventCommand","lastModifiedDate":"2023-11-14"},{"lineNumber":54,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":55,"author":{"gitId":"larrywang0701"},"content":"ListEventCommand --\u003e ListEventCommandParser","lastModifiedDate":"2023-11-14"},{"lineNumber":56,"author":{"gitId":"larrywang0701"},"content":"deactivate ListEventCommand","lastModifiedDate":"2023-11-14"},{"lineNumber":57,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":58,"author":{"gitId":"larrywang0701"},"content":"ListEventCommandParser --\u003e ListCommandParser","lastModifiedDate":"2023-11-14"},{"lineNumber":59,"author":{"gitId":"larrywang0701"},"content":"deactivate ListEventCommandParser","lastModifiedDate":"2023-11-14"},{"lineNumber":60,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":61,"author":{"gitId":"larrywang0701"},"content":"ListEventCommandParser -[hidden]-\u003e ListCommandParser","lastModifiedDate":"2023-11-14"},{"lineNumber":62,"author":{"gitId":"larrywang0701"},"content":"destroy ListEventCommandParser","lastModifiedDate":"2023-11-14"},{"lineNumber":63,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":64,"author":{"gitId":"larrywang0701"},"content":"ListCommandParser --\u003e AddressBookParser","lastModifiedDate":"2023-11-14"},{"lineNumber":65,"author":{"gitId":"larrywang0701"},"content":"deactivate ListCommandParser","lastModifiedDate":"2023-11-14"},{"lineNumber":66,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":67,"author":{"gitId":"larrywang0701"},"content":"ListCommandParser -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2023-11-14"},{"lineNumber":68,"author":{"gitId":"larrywang0701"},"content":"destroy ListCommandParser","lastModifiedDate":"2023-11-14"},{"lineNumber":69,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":70,"author":{"gitId":"larrywang0701"},"content":"AddressBookParser --\u003e LogicManager","lastModifiedDate":"2023-11-14"},{"lineNumber":71,"author":{"gitId":"larrywang0701"},"content":"deactivate AddressBookParser","lastModifiedDate":"2023-11-14"},{"lineNumber":72,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":73,"author":{"gitId":"larrywang0701"},"content":"LogicManager --\u003e ListEventCommand : execute()","lastModifiedDate":"2023-11-14"},{"lineNumber":74,"author":{"gitId":"larrywang0701"},"content":"activate ListEventCommand","lastModifiedDate":"2023-11-14"},{"lineNumber":75,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":76,"author":{"gitId":"larrywang0701"},"content":"ListEventCommand --\u003e Model: updateFilteredEventList(predicate)","lastModifiedDate":"2023-11-14"},{"lineNumber":77,"author":{"gitId":"larrywang0701"},"content":"activate Model","lastModifiedDate":"2023-11-14"},{"lineNumber":78,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":79,"author":{"gitId":"larrywang0701"},"content":"Model --\u003e ListEventCommand","lastModifiedDate":"2023-11-14"},{"lineNumber":80,"author":{"gitId":"larrywang0701"},"content":"deactivate Model","lastModifiedDate":"2023-11-14"},{"lineNumber":81,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":82,"author":{"gitId":"larrywang0701"},"content":"ListEventCommand --\u003e Model: generateSortedFilteredEventList(comparator)","lastModifiedDate":"2023-11-14"},{"lineNumber":83,"author":{"gitId":"larrywang0701"},"content":"activate Model","lastModifiedDate":"2023-11-14"},{"lineNumber":84,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":85,"author":{"gitId":"larrywang0701"},"content":"ListEventCommand \u003c-- Model : sortedFilteredEventList","lastModifiedDate":"2023-11-14"},{"lineNumber":86,"author":{"gitId":"larrywang0701"},"content":"deactivate Model","lastModifiedDate":"2023-11-14"},{"lineNumber":87,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":88,"author":{"gitId":"larrywang0701"},"content":"create CommandResult","lastModifiedDate":"2023-11-14"},{"lineNumber":89,"author":{"gitId":"larrywang0701"},"content":"ListEventCommand --\u003e CommandResult","lastModifiedDate":"2023-11-14"},{"lineNumber":90,"author":{"gitId":"larrywang0701"},"content":"activate CommandResult","lastModifiedDate":"2023-11-14"},{"lineNumber":91,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":92,"author":{"gitId":"larrywang0701"},"content":"CommandResult --\u003e ListEventCommand : result","lastModifiedDate":"2023-11-14"},{"lineNumber":93,"author":{"gitId":"larrywang0701"},"content":"deactivate CommandResult","lastModifiedDate":"2023-11-14"},{"lineNumber":94,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":95,"author":{"gitId":"larrywang0701"},"content":"ListEventCommand --\u003e LogicManager : result","lastModifiedDate":"2023-11-14"},{"lineNumber":96,"author":{"gitId":"larrywang0701"},"content":"deactivate ListEventCommand","lastModifiedDate":"2023-11-14"},{"lineNumber":97,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":98,"author":{"gitId":"larrywang0701"},"content":"ListEventCommand -[hidden]-\u003e LogicManager","lastModifiedDate":"2023-11-14"},{"lineNumber":99,"author":{"gitId":"larrywang0701"},"content":"destroy ListEventCommand","lastModifiedDate":"2023-11-14"},{"lineNumber":100,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":101,"author":{"gitId":"larrywang0701"},"content":"MainWindow \u003c-- LogicManager : result","lastModifiedDate":"2023-11-14"},{"lineNumber":102,"author":{"gitId":"larrywang0701"},"content":"deactivate LogicManager","lastModifiedDate":"2023-11-14"},{"lineNumber":103,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":104,"author":{"gitId":"larrywang0701"},"content":"MainWindow --\u003e MainWindow : handleEventList()","lastModifiedDate":"2023-11-14"},{"lineNumber":105,"author":{"gitId":"larrywang0701"},"content":"activate MainWindow","lastModifiedDate":"2023-11-14"},{"lineNumber":106,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":107,"author":{"gitId":"larrywang0701"},"content":"MainWindow --\u003e LogicManager : getSortedFilteredEventList()","lastModifiedDate":"2023-11-14"},{"lineNumber":108,"author":{"gitId":"larrywang0701"},"content":"activate LogicManager","lastModifiedDate":"2023-11-14"},{"lineNumber":109,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":110,"author":{"gitId":"larrywang0701"},"content":"LogicManager --\u003e Model : getSortedFilteredEventList()","lastModifiedDate":"2023-11-14"},{"lineNumber":111,"author":{"gitId":"larrywang0701"},"content":"activate Model","lastModifiedDate":"2023-11-14"},{"lineNumber":112,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":113,"author":{"gitId":"larrywang0701"},"content":"LogicManager \u003c-- Model : sortedFilteredEventList","lastModifiedDate":"2023-11-14"},{"lineNumber":114,"author":{"gitId":"larrywang0701"},"content":"deactivate Model","lastModifiedDate":"2023-11-14"},{"lineNumber":115,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":116,"author":{"gitId":"larrywang0701"},"content":"MainWindow \u003c-- LogicManager : sortedFilteredEventList","lastModifiedDate":"2023-11-14"},{"lineNumber":117,"author":{"gitId":"larrywang0701"},"content":"deactivate LogicManager","lastModifiedDate":"2023-11-14"},{"lineNumber":118,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":119,"author":{"gitId":"larrywang0701"},"content":"MainWindow --\u003e EventListWindow : show(events)","lastModifiedDate":"2023-11-14"},{"lineNumber":120,"author":{"gitId":"larrywang0701"},"content":"activate EventListWindow","lastModifiedDate":"2023-11-14"},{"lineNumber":121,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":122,"author":{"gitId":"larrywang0701"},"content":"MainWindow \u003c-- EventListWindow","lastModifiedDate":"2023-11-14"},{"lineNumber":123,"author":{"gitId":"larrywang0701"},"content":"deactivate EventListWindow","lastModifiedDate":"2023-11-14"},{"lineNumber":124,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":125,"author":{"gitId":"larrywang0701"},"content":"deactivate MainWindow","lastModifiedDate":"2023-11-14"},{"lineNumber":126,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":127,"author":{"gitId":"larrywang0701"},"content":"destroy CommandResult","lastModifiedDate":"2023-11-14"},{"lineNumber":128,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":129,"author":{"gitId":"larrywang0701"},"content":"[\u003c--MainWindow","lastModifiedDate":"2023-11-14"},{"lineNumber":130,"author":{"gitId":"larrywang0701"},"content":"@enduml","lastModifiedDate":"2023-11-14"}],"authorContributionMap":{"larrywang0701":130}},{"path":"docs/diagrams/note/AddNoteActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"josepholim"},"content":"@startuml","lastModifiedDate":"2023-11-13"},{"lineNumber":2,"author":{"gitId":"josepholim"},"content":"skin rose","lastModifiedDate":"2023-11-13"},{"lineNumber":3,"author":{"gitId":"josepholim"},"content":"skinparam ActivityFontSize 15","lastModifiedDate":"2023-11-13"},{"lineNumber":4,"author":{"gitId":"josepholim"},"content":"skinparam ArrowFontSize 12","lastModifiedDate":"2023-11-13"},{"lineNumber":5,"author":{"gitId":"josepholim"},"content":"start","lastModifiedDate":"2023-11-13"},{"lineNumber":6,"author":{"gitId":"josepholim"},"content":":User executes add note command;","lastModifiedDate":"2023-11-13"},{"lineNumber":7,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":8,"author":{"gitId":"josepholim"},"content":"\u0027Since the beta syntax does not support placing the condition outside the","lastModifiedDate":"2023-11-13"},{"lineNumber":9,"author":{"gitId":"josepholim"},"content":"\u0027diamond we place it as the true branch instead.","lastModifiedDate":"2023-11-13"},{"lineNumber":10,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":11,"author":{"gitId":"josepholim"},"content":"if () then ([person exists])","lastModifiedDate":"2023-11-13"},{"lineNumber":12,"author":{"gitId":"josepholim"},"content":"    :Add a new note to the person in the address book;","lastModifiedDate":"2023-11-13"},{"lineNumber":13,"author":{"gitId":"josepholim"},"content":"    :Returns result message with","lastModifiedDate":"2023-11-13"},{"lineNumber":14,"author":{"gitId":"josepholim"},"content":"    the note that has been added;","lastModifiedDate":"2023-11-13"},{"lineNumber":15,"author":{"gitId":"josepholim"},"content":"else ([else])","lastModifiedDate":"2023-11-13"},{"lineNumber":16,"author":{"gitId":"josepholim"},"content":"    :Throw CommandException;","lastModifiedDate":"2023-11-13"},{"lineNumber":17,"author":{"gitId":"josepholim"},"content":"endif","lastModifiedDate":"2023-11-13"},{"lineNumber":18,"author":{"gitId":"josepholim"},"content":"stop","lastModifiedDate":"2023-11-13"},{"lineNumber":19,"author":{"gitId":"josepholim"},"content":"@enduml","lastModifiedDate":"2023-11-13"}],"authorContributionMap":{"josepholim":19}},{"path":"docs/diagrams/note/DeleteNoteActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"josepholim"},"content":"@startuml","lastModifiedDate":"2023-11-13"},{"lineNumber":2,"author":{"gitId":"josepholim"},"content":"skin rose","lastModifiedDate":"2023-11-13"},{"lineNumber":3,"author":{"gitId":"josepholim"},"content":"skinparam ActivityFontSize 15","lastModifiedDate":"2023-11-13"},{"lineNumber":4,"author":{"gitId":"josepholim"},"content":"skinparam ArrowFontSize 12","lastModifiedDate":"2023-11-13"},{"lineNumber":5,"author":{"gitId":"josepholim"},"content":"start","lastModifiedDate":"2023-11-13"},{"lineNumber":6,"author":{"gitId":"josepholim"},"content":":User executes delete note command;","lastModifiedDate":"2023-11-13"},{"lineNumber":7,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":8,"author":{"gitId":"josepholim"},"content":"\u0027Since the beta syntax does not support placing the condition outside the","lastModifiedDate":"2023-11-13"},{"lineNumber":9,"author":{"gitId":"josepholim"},"content":"\u0027diamond we place it as the true branch instead.","lastModifiedDate":"2023-11-13"},{"lineNumber":10,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":11,"author":{"gitId":"josepholim"},"content":"if () then ([person exists])","lastModifiedDate":"2023-11-13"},{"lineNumber":12,"author":{"gitId":"josepholim"},"content":"    if () then ([note exists])","lastModifiedDate":"2023-11-13"},{"lineNumber":13,"author":{"gitId":"josepholim"},"content":"        :Delete note from the person","lastModifiedDate":"2023-11-13"},{"lineNumber":14,"author":{"gitId":"josepholim"},"content":"        in the address book;","lastModifiedDate":"2023-11-13"},{"lineNumber":15,"author":{"gitId":"josepholim"},"content":"        :Returns result message with","lastModifiedDate":"2023-11-13"},{"lineNumber":16,"author":{"gitId":"josepholim"},"content":"        the note that has been deleted;","lastModifiedDate":"2023-11-13"},{"lineNumber":17,"author":{"gitId":"josepholim"},"content":"    else ([else])","lastModifiedDate":"2023-11-13"},{"lineNumber":18,"author":{"gitId":"josepholim"},"content":"        :Throw CommandException;","lastModifiedDate":"2023-11-13"},{"lineNumber":19,"author":{"gitId":"josepholim"},"content":"    endif","lastModifiedDate":"2023-11-13"},{"lineNumber":20,"author":{"gitId":"josepholim"},"content":"else ([else])","lastModifiedDate":"2023-11-13"},{"lineNumber":21,"author":{"gitId":"josepholim"},"content":"    :Throw CommandException;","lastModifiedDate":"2023-11-13"},{"lineNumber":22,"author":{"gitId":"josepholim"},"content":"endif","lastModifiedDate":"2023-11-13"},{"lineNumber":23,"author":{"gitId":"josepholim"},"content":"stop","lastModifiedDate":"2023-11-13"},{"lineNumber":24,"author":{"gitId":"josepholim"},"content":"@enduml","lastModifiedDate":"2023-11-13"}],"authorContributionMap":{"josepholim":24}},{"path":"docs/diagrams/note/NoteSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"josepholim"},"content":"@startuml","lastModifiedDate":"2023-11-13"},{"lineNumber":2,"author":{"gitId":"josepholim"},"content":"!include ../style.puml","lastModifiedDate":"2023-11-13"},{"lineNumber":3,"author":{"gitId":"josepholim"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2023-11-13"},{"lineNumber":4,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":5,"author":{"gitId":"josepholim"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2023-11-13"},{"lineNumber":6,"author":{"gitId":"josepholim"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2023-11-13"},{"lineNumber":7,"author":{"gitId":"josepholim"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2023-11-13"},{"lineNumber":8,"author":{"gitId":"josepholim"},"content":"participant \":AddCommandParser\" as AddCommandParser LOGIC_COLOR","lastModifiedDate":"2023-11-13"},{"lineNumber":9,"author":{"gitId":"josepholim"},"content":"participant \":AddNoteCommandParser\" as AddNoteCommandParser LOGIC_COLOR","lastModifiedDate":"2023-11-13"},{"lineNumber":10,"author":{"gitId":"josepholim"},"content":"participant \":AddNoteCommand\" as AddNoteCommand LOGIC_COLOR","lastModifiedDate":"2023-11-13"},{"lineNumber":11,"author":{"gitId":"josepholim"},"content":"participant \"commandResult:CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2023-11-13"},{"lineNumber":12,"author":{"gitId":"josepholim"},"content":"end box","lastModifiedDate":"2023-11-13"},{"lineNumber":13,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":14,"author":{"gitId":"josepholim"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2023-11-13"},{"lineNumber":15,"author":{"gitId":"josepholim"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2023-11-13"},{"lineNumber":16,"author":{"gitId":"josepholim"},"content":"end box","lastModifiedDate":"2023-11-13"},{"lineNumber":17,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":18,"author":{"gitId":"josepholim"},"content":"[-\u003e LogicManager : execute(commandText)","lastModifiedDate":"2023-11-13"},{"lineNumber":19,"author":{"gitId":"josepholim"},"content":"activate LogicManager","lastModifiedDate":"2023-11-13"},{"lineNumber":20,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":21,"author":{"gitId":"josepholim"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(commandText)","lastModifiedDate":"2023-11-13"},{"lineNumber":22,"author":{"gitId":"josepholim"},"content":"activate AddressBookParser","lastModifiedDate":"2023-11-13"},{"lineNumber":23,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":24,"author":{"gitId":"josepholim"},"content":"create AddCommandParser","lastModifiedDate":"2023-11-13"},{"lineNumber":25,"author":{"gitId":"josepholim"},"content":"AddressBookParser -\u003e AddCommandParser","lastModifiedDate":"2023-11-13"},{"lineNumber":26,"author":{"gitId":"josepholim"},"content":"activate AddCommandParser","lastModifiedDate":"2023-11-13"},{"lineNumber":27,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":28,"author":{"gitId":"josepholim"},"content":"AddCommandParser --\u003e AddressBookParser","lastModifiedDate":"2023-11-13"},{"lineNumber":29,"author":{"gitId":"josepholim"},"content":"deactivate AddCommandParser","lastModifiedDate":"2023-11-13"},{"lineNumber":30,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":31,"author":{"gitId":"josepholim"},"content":"AddressBookParser -\u003e AddCommandParser : parse(commandText)","lastModifiedDate":"2023-11-13"},{"lineNumber":32,"author":{"gitId":"josepholim"},"content":"activate AddCommandParser","lastModifiedDate":"2023-11-13"},{"lineNumber":33,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":34,"author":{"gitId":"josepholim"},"content":"create AddNoteCommandParser","lastModifiedDate":"2023-11-13"},{"lineNumber":35,"author":{"gitId":"josepholim"},"content":"AddCommandParser -\u003e AddNoteCommandParser","lastModifiedDate":"2023-11-13"},{"lineNumber":36,"author":{"gitId":"josepholim"},"content":"activate AddNoteCommandParser","lastModifiedDate":"2023-11-13"},{"lineNumber":37,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":38,"author":{"gitId":"josepholim"},"content":"AddNoteCommandParser -\u003e AddCommandParser","lastModifiedDate":"2023-11-13"},{"lineNumber":39,"author":{"gitId":"josepholim"},"content":"deactivate AddNoteCommandParser","lastModifiedDate":"2023-11-13"},{"lineNumber":40,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":41,"author":{"gitId":"josepholim"},"content":"AddCommandParser -\u003e AddNoteCommandParser : parse(commandText)","lastModifiedDate":"2023-11-13"},{"lineNumber":42,"author":{"gitId":"josepholim"},"content":"activate AddNoteCommandParser","lastModifiedDate":"2023-11-13"},{"lineNumber":43,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":44,"author":{"gitId":"josepholim"},"content":"create AddNoteCommand","lastModifiedDate":"2023-11-13"},{"lineNumber":45,"author":{"gitId":"josepholim"},"content":"AddNoteCommandParser -\u003e AddNoteCommand","lastModifiedDate":"2023-11-13"},{"lineNumber":46,"author":{"gitId":"josepholim"},"content":"activate AddNoteCommand","lastModifiedDate":"2023-11-13"},{"lineNumber":47,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":48,"author":{"gitId":"josepholim"},"content":"AddNoteCommand --\u003e AddNoteCommandParser","lastModifiedDate":"2023-11-13"},{"lineNumber":49,"author":{"gitId":"josepholim"},"content":"deactivate AddNoteCommand","lastModifiedDate":"2023-11-13"},{"lineNumber":50,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":51,"author":{"gitId":"josepholim"},"content":"AddNoteCommandParser --\u003e AddCommandParser","lastModifiedDate":"2023-11-13"},{"lineNumber":52,"author":{"gitId":"josepholim"},"content":"deactivate AddNoteCommandParser","lastModifiedDate":"2023-11-13"},{"lineNumber":53,"author":{"gitId":"josepholim"},"content":"AddNoteCommandParser -[hidden]-\u003e AddCommandParser","lastModifiedDate":"2023-11-13"},{"lineNumber":54,"author":{"gitId":"josepholim"},"content":"destroy AddNoteCommandParser","lastModifiedDate":"2023-11-13"},{"lineNumber":55,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":56,"author":{"gitId":"josepholim"},"content":"AddCommandParser --\u003e AddressBookParser","lastModifiedDate":"2023-11-13"},{"lineNumber":57,"author":{"gitId":"josepholim"},"content":"deactivate AddCommandParser","lastModifiedDate":"2023-11-13"},{"lineNumber":58,"author":{"gitId":"josepholim"},"content":"AddCommandParser -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2023-11-13"},{"lineNumber":59,"author":{"gitId":"josepholim"},"content":"destroy AddCommandParser","lastModifiedDate":"2023-11-13"},{"lineNumber":60,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":61,"author":{"gitId":"josepholim"},"content":"AddressBookParser --\u003e LogicManager","lastModifiedDate":"2023-11-13"},{"lineNumber":62,"author":{"gitId":"josepholim"},"content":"deactivate AddressBookParser","lastModifiedDate":"2023-11-13"},{"lineNumber":63,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":64,"author":{"gitId":"josepholim"},"content":"LogicManager -\u003e AddNoteCommand : execute()","lastModifiedDate":"2023-11-13"},{"lineNumber":65,"author":{"gitId":"josepholim"},"content":"activate AddNoteCommand","lastModifiedDate":"2023-11-13"},{"lineNumber":66,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":67,"author":{"gitId":"josepholim"},"content":"AddNoteCommand -\u003e Model: findPersonByUserFriendlyId(contactId)","lastModifiedDate":"2023-11-13"},{"lineNumber":68,"author":{"gitId":"josepholim"},"content":"activate Model","lastModifiedDate":"2023-11-13"},{"lineNumber":69,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":70,"author":{"gitId":"josepholim"},"content":"Model -\u003e AddNoteCommand: person","lastModifiedDate":"2023-11-13"},{"lineNumber":71,"author":{"gitId":"josepholim"},"content":"deactivate Model","lastModifiedDate":"2023-11-13"},{"lineNumber":72,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":73,"author":{"gitId":"josepholim"},"content":"create CommandResult","lastModifiedDate":"2023-11-13"},{"lineNumber":74,"author":{"gitId":"josepholim"},"content":"AddNoteCommand -\u003e CommandResult","lastModifiedDate":"2023-11-13"},{"lineNumber":75,"author":{"gitId":"josepholim"},"content":"activate CommandResult","lastModifiedDate":"2023-11-13"},{"lineNumber":76,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":77,"author":{"gitId":"josepholim"},"content":"CommandResult --\u003e AddNoteCommand : commandResult","lastModifiedDate":"2023-11-13"},{"lineNumber":78,"author":{"gitId":"josepholim"},"content":"deactivate CommandResult","lastModifiedDate":"2023-11-13"},{"lineNumber":79,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":80,"author":{"gitId":"josepholim"},"content":"AddNoteCommand --\u003e LogicManager : commandResult","lastModifiedDate":"2023-11-13"},{"lineNumber":81,"author":{"gitId":"josepholim"},"content":"deactivate AddNoteCommand","lastModifiedDate":"2023-11-13"},{"lineNumber":82,"author":{"gitId":"josepholim"},"content":"AddNoteCommand -[hidden]-\u003e LogicManager","lastModifiedDate":"2023-11-13"},{"lineNumber":83,"author":{"gitId":"josepholim"},"content":"destroy AddNoteCommand","lastModifiedDate":"2023-11-13"},{"lineNumber":84,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":85,"author":{"gitId":"josepholim"},"content":"[\u003c--LogicManager : commandResult","lastModifiedDate":"2023-11-13"},{"lineNumber":86,"author":{"gitId":"josepholim"},"content":"deactivate LogicManager","lastModifiedDate":"2023-11-13"},{"lineNumber":87,"author":{"gitId":"josepholim"},"content":"@enduml","lastModifiedDate":"2023-11-13"}],"authorContributionMap":{"josepholim":87}},{"path":"docs/diagrams/tag/AddTagActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"zekone"},"content":"@startuml","lastModifiedDate":"2023-11-13"},{"lineNumber":2,"author":{"gitId":"zekone"},"content":"skin rose","lastModifiedDate":"2023-11-13"},{"lineNumber":3,"author":{"gitId":"zekone"},"content":"skinparam ActivityFontSize 15","lastModifiedDate":"2023-11-13"},{"lineNumber":4,"author":{"gitId":"zekone"},"content":"skinparam ArrowFontSize 12","lastModifiedDate":"2023-11-13"},{"lineNumber":5,"author":{"gitId":"zekone"},"content":"start","lastModifiedDate":"2023-11-13"},{"lineNumber":6,"author":{"gitId":"zekone"},"content":":User executes add tag command;","lastModifiedDate":"2023-11-13"},{"lineNumber":7,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":8,"author":{"gitId":"zekone"},"content":"\u0027Since the beta syntax does not support placing the condition outside the","lastModifiedDate":"2023-11-13"},{"lineNumber":9,"author":{"gitId":"zekone"},"content":"\u0027diamond we place it as the true branch instead.","lastModifiedDate":"2023-11-13"},{"lineNumber":10,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":11,"author":{"gitId":"zekone"},"content":"if () then ([person exists])","lastModifiedDate":"2023-11-13"},{"lineNumber":12,"author":{"gitId":"zekone"},"content":"    :Add new tags to person;","lastModifiedDate":"2023-11-13"},{"lineNumber":13,"author":{"gitId":"zekone"},"content":"    :Model updates the person in the address book;","lastModifiedDate":"2023-11-13"},{"lineNumber":14,"author":{"gitId":"zekone"},"content":"    :Returns result message notifying","lastModifiedDate":"2023-11-13"},{"lineNumber":15,"author":{"gitId":"zekone"},"content":"    that the tags have been added;","lastModifiedDate":"2023-11-13"},{"lineNumber":16,"author":{"gitId":"zekone"},"content":"else ([else])","lastModifiedDate":"2023-11-13"},{"lineNumber":17,"author":{"gitId":"zekone"},"content":"    :Throw CommandException;","lastModifiedDate":"2023-11-13"},{"lineNumber":18,"author":{"gitId":"zekone"},"content":"endif","lastModifiedDate":"2023-11-13"},{"lineNumber":19,"author":{"gitId":"zekone"},"content":"stop","lastModifiedDate":"2023-11-13"},{"lineNumber":20,"author":{"gitId":"zekone"},"content":"@enduml","lastModifiedDate":"2023-11-13"}],"authorContributionMap":{"zekone":20}},{"path":"docs/diagrams/tag/DeleteTagActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"zekone"},"content":"@startuml","lastModifiedDate":"2023-11-13"},{"lineNumber":2,"author":{"gitId":"zekone"},"content":"skin rose","lastModifiedDate":"2023-11-13"},{"lineNumber":3,"author":{"gitId":"zekone"},"content":"skinparam ActivityFontSize 15","lastModifiedDate":"2023-11-13"},{"lineNumber":4,"author":{"gitId":"zekone"},"content":"skinparam ArrowFontSize 12","lastModifiedDate":"2023-11-13"},{"lineNumber":5,"author":{"gitId":"zekone"},"content":"start","lastModifiedDate":"2023-11-13"},{"lineNumber":6,"author":{"gitId":"zekone"},"content":":User executes delete tag command;","lastModifiedDate":"2023-11-13"},{"lineNumber":7,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":8,"author":{"gitId":"zekone"},"content":"\u0027Since the beta syntax does not support placing the condition outside the","lastModifiedDate":"2023-11-13"},{"lineNumber":9,"author":{"gitId":"zekone"},"content":"\u0027diamond we place it as the true branch instead.","lastModifiedDate":"2023-11-13"},{"lineNumber":10,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":11,"author":{"gitId":"zekone"},"content":"if () then ([person exists])","lastModifiedDate":"2023-11-13"},{"lineNumber":12,"author":{"gitId":"zekone"},"content":"    :Separate tags that exists in the tag list","lastModifiedDate":"2023-11-13"},{"lineNumber":13,"author":{"gitId":"zekone"},"content":"    from those that do not;","lastModifiedDate":"2023-11-13"},{"lineNumber":14,"author":{"gitId":"zekone"},"content":"    :Delete only those that exists in the tag list;","lastModifiedDate":"2023-11-13"},{"lineNumber":15,"author":{"gitId":"zekone"},"content":"    :Model updates the person in the address book;","lastModifiedDate":"2023-11-13"},{"lineNumber":16,"author":{"gitId":"zekone"},"content":"    :Returns result message with a list of tags that have","lastModifiedDate":"2023-11-13"},{"lineNumber":17,"author":{"gitId":"zekone"},"content":"    been deleted and a list of tags that cannot be found;","lastModifiedDate":"2023-11-13"},{"lineNumber":18,"author":{"gitId":"zekone"},"content":"else ([else])","lastModifiedDate":"2023-11-13"},{"lineNumber":19,"author":{"gitId":"zekone"},"content":"    :Throw CommandException;","lastModifiedDate":"2023-11-13"},{"lineNumber":20,"author":{"gitId":"zekone"},"content":"endif","lastModifiedDate":"2023-11-13"},{"lineNumber":21,"author":{"gitId":"zekone"},"content":"stop","lastModifiedDate":"2023-11-13"},{"lineNumber":22,"author":{"gitId":"zekone"},"content":"@enduml","lastModifiedDate":"2023-11-13"}],"authorContributionMap":{"zekone":22}},{"path":"docs/diagrams/tag/ListContactActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"AndrewJanong"},"content":"@startuml","lastModifiedDate":"2023-11-13"},{"lineNumber":2,"author":{"gitId":"AndrewJanong"},"content":"skin rose","lastModifiedDate":"2023-11-13"},{"lineNumber":3,"author":{"gitId":"AndrewJanong"},"content":"skinparam ActivityFontSize 15","lastModifiedDate":"2023-11-13"},{"lineNumber":4,"author":{"gitId":"AndrewJanong"},"content":"skinparam ArrowFontSize 12","lastModifiedDate":"2023-11-13"},{"lineNumber":5,"author":{"gitId":"AndrewJanong"},"content":"start","lastModifiedDate":"2023-11-13"},{"lineNumber":6,"author":{"gitId":"AndrewJanong"},"content":":User executes list contact command;","lastModifiedDate":"2023-11-13"},{"lineNumber":7,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":8,"author":{"gitId":"AndrewJanong"},"content":"\u0027Since the beta syntax does not support placing the condition outside the","lastModifiedDate":"2023-11-13"},{"lineNumber":9,"author":{"gitId":"AndrewJanong"},"content":"\u0027diamond we place it as the true branch instead.","lastModifiedDate":"2023-11-13"},{"lineNumber":10,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":11,"author":{"gitId":"AndrewJanong"},"content":"if () then ([tags provided])","lastModifiedDate":"2023-11-13"},{"lineNumber":12,"author":{"gitId":"AndrewJanong"},"content":"    :Model updates contacts list","lastModifiedDate":"2023-11-13"},{"lineNumber":13,"author":{"gitId":"AndrewJanong"},"content":"    to only show contacts containing","lastModifiedDate":"2023-11-13"},{"lineNumber":14,"author":{"gitId":"AndrewJanong"},"content":"    at least one of the tags;","lastModifiedDate":"2023-11-13"},{"lineNumber":15,"author":{"gitId":"AndrewJanong"},"content":"else ([else])","lastModifiedDate":"2023-11-13"},{"lineNumber":16,"author":{"gitId":"AndrewJanong"},"content":"    :Model updates contacts list","lastModifiedDate":"2023-11-13"},{"lineNumber":17,"author":{"gitId":"AndrewJanong"},"content":"    to show all contacts;","lastModifiedDate":"2023-11-13"},{"lineNumber":18,"author":{"gitId":"AndrewJanong"},"content":"endif","lastModifiedDate":"2023-11-13"},{"lineNumber":19,"author":{"gitId":"AndrewJanong"},"content":"    :Returns success message;","lastModifiedDate":"2023-11-13"},{"lineNumber":20,"author":{"gitId":"AndrewJanong"},"content":"stop","lastModifiedDate":"2023-11-13"},{"lineNumber":21,"author":{"gitId":"AndrewJanong"},"content":"@enduml","lastModifiedDate":"2023-11-13"}],"authorContributionMap":{"AndrewJanong":21}},{"path":"docs/diagrams/tag/ListContactSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"AndrewJanong"},"content":"@startuml","lastModifiedDate":"2023-11-13"},{"lineNumber":2,"author":{"gitId":"zekone"},"content":"!include ../style.puml","lastModifiedDate":"2023-11-13"},{"lineNumber":3,"author":{"gitId":"AndrewJanong"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2023-11-13"},{"lineNumber":4,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":5,"author":{"gitId":"AndrewJanong"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2023-11-13"},{"lineNumber":6,"author":{"gitId":"AndrewJanong"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2023-11-13"},{"lineNumber":7,"author":{"gitId":"AndrewJanong"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2023-11-13"},{"lineNumber":8,"author":{"gitId":"AndrewJanong"},"content":"participant \":ListCommandParser\" as ListCommandParser LOGIC_COLOR","lastModifiedDate":"2023-11-13"},{"lineNumber":9,"author":{"gitId":"AndrewJanong"},"content":"participant \":ListPersonCommandParser\" as ListPersonCommandParser LOGIC_COLOR","lastModifiedDate":"2023-11-13"},{"lineNumber":10,"author":{"gitId":"AndrewJanong"},"content":"participant \":ListPersonCommand\" as ListPersonCommand LOGIC_COLOR","lastModifiedDate":"2023-11-13"},{"lineNumber":11,"author":{"gitId":"AndrewJanong"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2023-11-13"},{"lineNumber":12,"author":{"gitId":"AndrewJanong"},"content":"end box","lastModifiedDate":"2023-11-13"},{"lineNumber":13,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":14,"author":{"gitId":"AndrewJanong"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2023-11-13"},{"lineNumber":15,"author":{"gitId":"AndrewJanong"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2023-11-13"},{"lineNumber":16,"author":{"gitId":"AndrewJanong"},"content":"end box","lastModifiedDate":"2023-11-13"},{"lineNumber":17,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":18,"author":{"gitId":"AndrewJanong"},"content":"[-\u003e LogicManager : execute(\"list contact -t friends\")","lastModifiedDate":"2023-11-13"},{"lineNumber":19,"author":{"gitId":"AndrewJanong"},"content":"activate LogicManager","lastModifiedDate":"2023-11-13"},{"lineNumber":20,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":21,"author":{"gitId":"AndrewJanong"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"list contact -t friends\")","lastModifiedDate":"2023-11-13"},{"lineNumber":22,"author":{"gitId":"AndrewJanong"},"content":"activate AddressBookParser","lastModifiedDate":"2023-11-13"},{"lineNumber":23,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":24,"author":{"gitId":"AndrewJanong"},"content":"create ListCommandParser","lastModifiedDate":"2023-11-13"},{"lineNumber":25,"author":{"gitId":"AndrewJanong"},"content":"AddressBookParser -\u003e ListCommandParser","lastModifiedDate":"2023-11-13"},{"lineNumber":26,"author":{"gitId":"AndrewJanong"},"content":"activate ListCommandParser","lastModifiedDate":"2023-11-13"},{"lineNumber":27,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":28,"author":{"gitId":"AndrewJanong"},"content":"ListCommandParser --\u003e AddressBookParser","lastModifiedDate":"2023-11-13"},{"lineNumber":29,"author":{"gitId":"AndrewJanong"},"content":"deactivate ListCommandParser","lastModifiedDate":"2023-11-13"},{"lineNumber":30,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":31,"author":{"gitId":"AndrewJanong"},"content":"AddressBookParser -\u003e ListCommandParser : parse(args)","lastModifiedDate":"2023-11-13"},{"lineNumber":32,"author":{"gitId":"AndrewJanong"},"content":"activate ListCommandParser","lastModifiedDate":"2023-11-13"},{"lineNumber":33,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":34,"author":{"gitId":"AndrewJanong"},"content":"create ListPersonCommandParser","lastModifiedDate":"2023-11-13"},{"lineNumber":35,"author":{"gitId":"AndrewJanong"},"content":"ListCommandParser -\u003e ListPersonCommandParser","lastModifiedDate":"2023-11-13"},{"lineNumber":36,"author":{"gitId":"AndrewJanong"},"content":"activate ListPersonCommandParser","lastModifiedDate":"2023-11-13"},{"lineNumber":37,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":38,"author":{"gitId":"AndrewJanong"},"content":"ListPersonCommandParser --\u003e ListCommandParser","lastModifiedDate":"2023-11-13"},{"lineNumber":39,"author":{"gitId":"AndrewJanong"},"content":"deactivate ListPersonCommandParser","lastModifiedDate":"2023-11-13"},{"lineNumber":40,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":41,"author":{"gitId":"AndrewJanong"},"content":"ListCommandParser --\u003e ListPersonCommandParser : parse(args)","lastModifiedDate":"2023-11-13"},{"lineNumber":42,"author":{"gitId":"AndrewJanong"},"content":"activate ListPersonCommandParser","lastModifiedDate":"2023-11-13"},{"lineNumber":43,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":44,"author":{"gitId":"AndrewJanong"},"content":"create ListPersonCommand","lastModifiedDate":"2023-11-13"},{"lineNumber":45,"author":{"gitId":"AndrewJanong"},"content":"ListPersonCommandParser --\u003e ListPersonCommand","lastModifiedDate":"2023-11-13"},{"lineNumber":46,"author":{"gitId":"AndrewJanong"},"content":"activate ListPersonCommand","lastModifiedDate":"2023-11-13"},{"lineNumber":47,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":48,"author":{"gitId":"AndrewJanong"},"content":"ListPersonCommand --\u003eListPersonCommandParser","lastModifiedDate":"2023-11-13"},{"lineNumber":49,"author":{"gitId":"AndrewJanong"},"content":"deactivate ListPersonCommand","lastModifiedDate":"2023-11-13"},{"lineNumber":50,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":51,"author":{"gitId":"AndrewJanong"},"content":"ListPersonCommandParser --\u003e ListCommandParser","lastModifiedDate":"2023-11-13"},{"lineNumber":52,"author":{"gitId":"AndrewJanong"},"content":"deactivate ListPersonCommandParser","lastModifiedDate":"2023-11-13"},{"lineNumber":53,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":54,"author":{"gitId":"AndrewJanong"},"content":"ListPersonCommandParser -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2023-11-13"},{"lineNumber":55,"author":{"gitId":"AndrewJanong"},"content":"destroy ListPersonCommandParser","lastModifiedDate":"2023-11-13"},{"lineNumber":56,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":57,"author":{"gitId":"AndrewJanong"},"content":"ListCommandParser --\u003e AddressBookParser","lastModifiedDate":"2023-11-13"},{"lineNumber":58,"author":{"gitId":"AndrewJanong"},"content":"deactivate ListCommandParser","lastModifiedDate":"2023-11-13"},{"lineNumber":59,"author":{"gitId":"AndrewJanong"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2023-11-13"},{"lineNumber":60,"author":{"gitId":"AndrewJanong"},"content":"ListCommandParser -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2023-11-13"},{"lineNumber":61,"author":{"gitId":"AndrewJanong"},"content":"destroy ListCommandParser","lastModifiedDate":"2023-11-13"},{"lineNumber":62,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":63,"author":{"gitId":"AndrewJanong"},"content":"AddressBookParser --\u003e LogicManager","lastModifiedDate":"2023-11-13"},{"lineNumber":64,"author":{"gitId":"AndrewJanong"},"content":"deactivate AddressBookParser","lastModifiedDate":"2023-11-13"},{"lineNumber":65,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":66,"author":{"gitId":"AndrewJanong"},"content":"LogicManager -\u003e ListPersonCommand : execute()","lastModifiedDate":"2023-11-13"},{"lineNumber":67,"author":{"gitId":"AndrewJanong"},"content":"activate ListPersonCommand","lastModifiedDate":"2023-11-13"},{"lineNumber":68,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":69,"author":{"gitId":"AndrewJanong"},"content":"ListPersonCommand -\u003e Model : updateFilteredPersonList(predicate)","lastModifiedDate":"2023-11-13"},{"lineNumber":70,"author":{"gitId":"AndrewJanong"},"content":"activate Model","lastModifiedDate":"2023-11-13"},{"lineNumber":71,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":72,"author":{"gitId":"AndrewJanong"},"content":"Model --\u003e ListPersonCommand","lastModifiedDate":"2023-11-13"},{"lineNumber":73,"author":{"gitId":"AndrewJanong"},"content":"deactivate Model","lastModifiedDate":"2023-11-13"},{"lineNumber":74,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":75,"author":{"gitId":"AndrewJanong"},"content":"create CommandResult","lastModifiedDate":"2023-11-13"},{"lineNumber":76,"author":{"gitId":"AndrewJanong"},"content":"ListPersonCommand -\u003e CommandResult","lastModifiedDate":"2023-11-13"},{"lineNumber":77,"author":{"gitId":"AndrewJanong"},"content":"activate CommandResult","lastModifiedDate":"2023-11-13"},{"lineNumber":78,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":79,"author":{"gitId":"AndrewJanong"},"content":"CommandResult --\u003e ListPersonCommand","lastModifiedDate":"2023-11-13"},{"lineNumber":80,"author":{"gitId":"AndrewJanong"},"content":"deactivate CommandResult","lastModifiedDate":"2023-11-13"},{"lineNumber":81,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":82,"author":{"gitId":"AndrewJanong"},"content":"ListPersonCommand --\u003e LogicManager : result","lastModifiedDate":"2023-11-13"},{"lineNumber":83,"author":{"gitId":"AndrewJanong"},"content":"deactivate ListPersonCommand","lastModifiedDate":"2023-11-13"},{"lineNumber":84,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":85,"author":{"gitId":"AndrewJanong"},"content":"ListPersonCommand -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2023-11-13"},{"lineNumber":86,"author":{"gitId":"AndrewJanong"},"content":"destroy ListPersonCommand","lastModifiedDate":"2023-11-13"},{"lineNumber":87,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":88,"author":{"gitId":"AndrewJanong"},"content":"[\u003c--LogicManager","lastModifiedDate":"2023-11-13"},{"lineNumber":89,"author":{"gitId":"AndrewJanong"},"content":"deactivate LogicManager","lastModifiedDate":"2023-11-13"},{"lineNumber":90,"author":{"gitId":"AndrewJanong"},"content":"@enduml","lastModifiedDate":"2023-11-13"}],"authorContributionMap":{"zekone":1,"AndrewJanong":89}},{"path":"docs/diagrams/tag/TagSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"zekone"},"content":"@startuml","lastModifiedDate":"2023-11-13"},{"lineNumber":2,"author":{"gitId":"zekone"},"content":"!include ../style.puml","lastModifiedDate":"2023-11-13"},{"lineNumber":3,"author":{"gitId":"zekone"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2023-11-13"},{"lineNumber":4,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":5,"author":{"gitId":"zekone"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2023-11-13"},{"lineNumber":6,"author":{"gitId":"zekone"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2023-11-13"},{"lineNumber":7,"author":{"gitId":"zekone"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2023-11-13"},{"lineNumber":8,"author":{"gitId":"zekone"},"content":"participant \":AddCommandParser\" as AddCommandParser LOGIC_COLOR","lastModifiedDate":"2023-11-13"},{"lineNumber":9,"author":{"gitId":"zekone"},"content":"participant \":AddTagCommandParser\" as AddTagCommandParser LOGIC_COLOR","lastModifiedDate":"2023-11-13"},{"lineNumber":10,"author":{"gitId":"zekone"},"content":"participant \":AddTagCommand\" as AddTagCommand LOGIC_COLOR","lastModifiedDate":"2023-11-13"},{"lineNumber":11,"author":{"gitId":"zekone"},"content":"participant \"commandResult:CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2023-11-13"},{"lineNumber":12,"author":{"gitId":"zekone"},"content":"end box","lastModifiedDate":"2023-11-13"},{"lineNumber":13,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":14,"author":{"gitId":"zekone"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2023-11-13"},{"lineNumber":15,"author":{"gitId":"zekone"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2023-11-13"},{"lineNumber":16,"author":{"gitId":"zekone"},"content":"participant \"toEdit:Person\" as Person MODEL_COLOR","lastModifiedDate":"2023-11-13"},{"lineNumber":17,"author":{"gitId":"zekone"},"content":"end box","lastModifiedDate":"2023-11-13"},{"lineNumber":18,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":19,"author":{"gitId":"zekone"},"content":"[-\u003e LogicManager : execute(commandText)","lastModifiedDate":"2023-11-13"},{"lineNumber":20,"author":{"gitId":"zekone"},"content":"activate LogicManager","lastModifiedDate":"2023-11-13"},{"lineNumber":21,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":22,"author":{"gitId":"zekone"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(commandText)","lastModifiedDate":"2023-11-13"},{"lineNumber":23,"author":{"gitId":"zekone"},"content":"activate AddressBookParser","lastModifiedDate":"2023-11-13"},{"lineNumber":24,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":25,"author":{"gitId":"zekone"},"content":"create AddCommandParser","lastModifiedDate":"2023-11-13"},{"lineNumber":26,"author":{"gitId":"zekone"},"content":"AddressBookParser -\u003e AddCommandParser","lastModifiedDate":"2023-11-13"},{"lineNumber":27,"author":{"gitId":"zekone"},"content":"activate AddCommandParser","lastModifiedDate":"2023-11-13"},{"lineNumber":28,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":29,"author":{"gitId":"zekone"},"content":"AddCommandParser --\u003e AddressBookParser","lastModifiedDate":"2023-11-13"},{"lineNumber":30,"author":{"gitId":"zekone"},"content":"deactivate AddCommandParser","lastModifiedDate":"2023-11-13"},{"lineNumber":31,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":32,"author":{"gitId":"zekone"},"content":"AddressBookParser -\u003e AddCommandParser : parse(commandText)","lastModifiedDate":"2023-11-13"},{"lineNumber":33,"author":{"gitId":"zekone"},"content":"activate AddCommandParser","lastModifiedDate":"2023-11-13"},{"lineNumber":34,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":35,"author":{"gitId":"zekone"},"content":"create AddTagCommandParser","lastModifiedDate":"2023-11-13"},{"lineNumber":36,"author":{"gitId":"zekone"},"content":"AddCommandParser -\u003e AddTagCommandParser","lastModifiedDate":"2023-11-13"},{"lineNumber":37,"author":{"gitId":"zekone"},"content":"activate AddTagCommandParser","lastModifiedDate":"2023-11-13"},{"lineNumber":38,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":39,"author":{"gitId":"zekone"},"content":"AddTagCommandParser -\u003e AddCommandParser","lastModifiedDate":"2023-11-13"},{"lineNumber":40,"author":{"gitId":"zekone"},"content":"deactivate AddTagCommandParser","lastModifiedDate":"2023-11-13"},{"lineNumber":41,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":42,"author":{"gitId":"zekone"},"content":"AddCommandParser -\u003e AddTagCommandParser : parse(commandText)","lastModifiedDate":"2023-11-13"},{"lineNumber":43,"author":{"gitId":"zekone"},"content":"activate AddTagCommandParser","lastModifiedDate":"2023-11-13"},{"lineNumber":44,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":45,"author":{"gitId":"zekone"},"content":"create AddTagCommand","lastModifiedDate":"2023-11-13"},{"lineNumber":46,"author":{"gitId":"zekone"},"content":"AddTagCommandParser -\u003e AddTagCommand","lastModifiedDate":"2023-11-13"},{"lineNumber":47,"author":{"gitId":"zekone"},"content":"activate AddTagCommand","lastModifiedDate":"2023-11-13"},{"lineNumber":48,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":49,"author":{"gitId":"zekone"},"content":"AddTagCommand --\u003e AddTagCommandParser","lastModifiedDate":"2023-11-13"},{"lineNumber":50,"author":{"gitId":"zekone"},"content":"deactivate AddTagCommand","lastModifiedDate":"2023-11-13"},{"lineNumber":51,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":52,"author":{"gitId":"zekone"},"content":"AddTagCommandParser --\u003e AddCommandParser","lastModifiedDate":"2023-11-13"},{"lineNumber":53,"author":{"gitId":"zekone"},"content":"deactivate AddTagCommandParser","lastModifiedDate":"2023-11-13"},{"lineNumber":54,"author":{"gitId":"zekone"},"content":"AddTagCommandParser -[hidden]-\u003e AddCommandParser","lastModifiedDate":"2023-11-13"},{"lineNumber":55,"author":{"gitId":"zekone"},"content":"destroy AddTagCommandParser","lastModifiedDate":"2023-11-13"},{"lineNumber":56,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":57,"author":{"gitId":"zekone"},"content":"AddCommandParser --\u003e AddressBookParser","lastModifiedDate":"2023-11-13"},{"lineNumber":58,"author":{"gitId":"zekone"},"content":"deactivate AddCommandParser","lastModifiedDate":"2023-11-13"},{"lineNumber":59,"author":{"gitId":"zekone"},"content":"AddCommandParser -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2023-11-13"},{"lineNumber":60,"author":{"gitId":"zekone"},"content":"destroy AddCommandParser","lastModifiedDate":"2023-11-13"},{"lineNumber":61,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":62,"author":{"gitId":"zekone"},"content":"AddressBookParser --\u003e LogicManager","lastModifiedDate":"2023-11-13"},{"lineNumber":63,"author":{"gitId":"zekone"},"content":"deactivate AddressBookParser","lastModifiedDate":"2023-11-13"},{"lineNumber":64,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":65,"author":{"gitId":"zekone"},"content":"LogicManager -\u003e AddTagCommand : execute()","lastModifiedDate":"2023-11-13"},{"lineNumber":66,"author":{"gitId":"zekone"},"content":"activate AddTagCommand","lastModifiedDate":"2023-11-13"},{"lineNumber":67,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":68,"author":{"gitId":"zekone"},"content":"AddTagCommand -\u003e Model: findPersonByUserFriendlyId(contactId)","lastModifiedDate":"2023-11-13"},{"lineNumber":69,"author":{"gitId":"zekone"},"content":"activate Model","lastModifiedDate":"2023-11-13"},{"lineNumber":70,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":71,"author":{"gitId":"zekone"},"content":"Model -\u003e AddTagCommand: toEdit","lastModifiedDate":"2023-11-13"},{"lineNumber":72,"author":{"gitId":"zekone"},"content":"deactivate Model","lastModifiedDate":"2023-11-13"},{"lineNumber":73,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":74,"author":{"gitId":"zekone"},"content":"AddTagCommand -\u003e Person:addTag(toAdd)","lastModifiedDate":"2023-11-13"},{"lineNumber":75,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":76,"author":{"gitId":"zekone"},"content":"AddTagCommand -\u003e Model:setPerson(person, toEdit)","lastModifiedDate":"2023-11-13"},{"lineNumber":77,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":78,"author":{"gitId":"zekone"},"content":"create CommandResult","lastModifiedDate":"2023-11-13"},{"lineNumber":79,"author":{"gitId":"zekone"},"content":"AddTagCommand -\u003e CommandResult","lastModifiedDate":"2023-11-13"},{"lineNumber":80,"author":{"gitId":"zekone"},"content":"activate CommandResult","lastModifiedDate":"2023-11-13"},{"lineNumber":81,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":82,"author":{"gitId":"zekone"},"content":"CommandResult --\u003e AddTagCommand : commandResult","lastModifiedDate":"2023-11-13"},{"lineNumber":83,"author":{"gitId":"zekone"},"content":"deactivate CommandResult","lastModifiedDate":"2023-11-13"},{"lineNumber":84,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":85,"author":{"gitId":"zekone"},"content":"AddTagCommand --\u003e LogicManager : commandResult","lastModifiedDate":"2023-11-13"},{"lineNumber":86,"author":{"gitId":"zekone"},"content":"deactivate AddTagCommand","lastModifiedDate":"2023-11-13"},{"lineNumber":87,"author":{"gitId":"zekone"},"content":"AddTagCommand -[hidden]-\u003e LogicManager","lastModifiedDate":"2023-11-13"},{"lineNumber":88,"author":{"gitId":"zekone"},"content":"destroy AddTagCommand","lastModifiedDate":"2023-11-13"},{"lineNumber":89,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":90,"author":{"gitId":"zekone"},"content":"[\u003c--LogicManager : commandResult","lastModifiedDate":"2023-11-13"},{"lineNumber":91,"author":{"gitId":"zekone"},"content":"deactivate LogicManager","lastModifiedDate":"2023-11-13"},{"lineNumber":92,"author":{"gitId":"zekone"},"content":"@enduml","lastModifiedDate":"2023-11-13"}],"authorContributionMap":{"zekone":92}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  layout: default.md","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  title: \"\"","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"Nixx162"},"content":"# KeepInTouch","lastModifiedDate":"2023-10-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":8,"author":{"gitId":"larrywang0701"},"content":"[![CI Status](https://github.com/AY2324S1-CS2103T-W16-1/tp/actions/workflows/gradle.yml/badge.svg)](https://github.com/AY2324S1-CS2103T-W16-1/tp/actions)","lastModifiedDate":"2023-11-10"},{"lineNumber":9,"author":{"gitId":"larrywang0701"},"content":"[![codecov](https://codecov.io/gh/AY2324S1-CS2103T-W16-1/tp/branch/master/graph/badge.svg?token\u003dKEJTLP53IM)](https://codecov.io/gh/AY2324S1-CS2103T-W16-1/tp)","lastModifiedDate":"2023-11-10"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"Nixx162"},"content":"**KeepInTouch is a Desktop application developed for jobseekers.** It is meant to help them track connections in their professional network, along with events related to their professional development. While it has a GUI, most of the user interactions happen using a CLI (Command Line Interface).","lastModifiedDate":"2023-10-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"Nixx162"},"content":"* If you are interested in using KeepInTouch, head over to the [_Quick Start_ section of the **User Guide**](UserGuide.html#quick-start).","lastModifiedDate":"2023-10-06"},{"lineNumber":16,"author":{"gitId":"josepholim"},"content":"* If you are interested in developing KeepInTouch, the [**Developer Guide**](DeveloperGuide.html) is a good place to start.","lastModifiedDate":"2023-11-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"**Acknowledgements**","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"larrywang0701":2,"-":15,"josepholim":1,"Nixx162":3}},{"path":"docs/team/andrewjanong.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"AndrewJanong"},"content":"---","lastModifiedDate":"2023-10-05"},{"lineNumber":2,"author":{"gitId":"AndrewJanong"},"content":"layout: andrewjanong.md","lastModifiedDate":"2023-10-05"},{"lineNumber":3,"author":{"gitId":"AndrewJanong"},"content":"title: \"Andrew Daniel Janong\u0027s Project Portfolio Page\"","lastModifiedDate":"2023-10-05"},{"lineNumber":4,"author":{"gitId":"AndrewJanong"},"content":"---","lastModifiedDate":"2023-10-05"},{"lineNumber":5,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":6,"author":{"gitId":"AndrewJanong"},"content":"### Project: KeepInTouch","lastModifiedDate":"2023-10-05"},{"lineNumber":7,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":8,"author":{"gitId":"AndrewJanong"},"content":"KeepInTouch is a desktop app for managing contacts for people in the working industry (recruiters, engineers, etc.) as well as events for career purposes.","lastModifiedDate":"2023-11-10"},{"lineNumber":9,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":10,"author":{"gitId":"AndrewJanong"},"content":"Below are my contributions to the team:","lastModifiedDate":"2023-11-14"},{"lineNumber":11,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":12,"author":{"gitId":"AndrewJanong"},"content":"* **Code contributed**: [Reposense link](https://nus-cs2103-ay2324s1.github.io/tp-dashboard/?search\u003d\u0026sort\u003dtotalCommits\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByNone\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code\u0026since\u003d2023-09-22\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026tabAuthor\u003dAndrewJanong\u0026tabRepo\u003dAY2324S1-CS2103T-W16-1%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003ddocs~functional-code~test-code\u0026authorshipIsBinaryFileTypeChecked\u003dfalse\u0026authorshipIsIgnoredFilesChecked\u003dfalse)","lastModifiedDate":"2023-11-14"},{"lineNumber":13,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":14,"author":{"gitId":"AndrewJanong"},"content":"* **Enhancements implemented**:","lastModifiedDate":"2023-11-14"},{"lineNumber":15,"author":{"gitId":"AndrewJanong"},"content":"  * Added `tag` inputs for `list contact` ([\\#76](https://github.com/AY2324S1-CS2103T-W16-1/tp/pull/76))","lastModifiedDate":"2023-11-14"},{"lineNumber":16,"author":{"gitId":"AndrewJanong"},"content":"    * What it does: It allows users to find contacts containing certain tags.","lastModifiedDate":"2023-11-14"},{"lineNumber":17,"author":{"gitId":"AndrewJanong"},"content":"    * Justification: This feature improves the product efficiency as the user may now search through contacts more effectively.","lastModifiedDate":"2023-11-14"},{"lineNumber":18,"author":{"gitId":"AndrewJanong"},"content":"  * Fixed bug for questionable date and time string paring for `Event`. ([\\#153](https://github.com/AY2324S1-CS2103T-W16-1/tp/pull/153))","lastModifiedDate":"2023-11-14"},{"lineNumber":19,"author":{"gitId":"AndrewJanong"},"content":"    * Justification: Added more control-flow statements to make sure parsing works for certain string inputs and also returns the correct success/fail message.","lastModifiedDate":"2023-11-14"},{"lineNumber":20,"author":{"gitId":"AndrewJanong"},"content":"  * Fixed bug for `Event` commands to allow end time to be empty ([\\#83](https://github.com/AY2324S1-CS2103T-W16-1/tp/pull/83))","lastModifiedDate":"2023-11-14"},{"lineNumber":21,"author":{"gitId":"AndrewJanong"},"content":"    * Justification: Made sure the code does not accept empty start time and sets end time to start time whenever the value is not given.","lastModifiedDate":"2023-11-14"},{"lineNumber":22,"author":{"gitId":"AndrewJanong"},"content":"  * Increased coverage by adding tests. ([\\#194](https://github.com/AY2324S1-CS2103T-W16-1/tp/pull/194))","lastModifiedDate":"2023-11-14"},{"lineNumber":23,"author":{"gitId":"AndrewJanong"},"content":"    * Justification: Improved test cases for `Event`","lastModifiedDate":"2023-11-14"},{"lineNumber":24,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":25,"author":{"gitId":"AndrewJanong"},"content":"* **Fixed bugs reported in PE-D**:","lastModifiedDate":"2023-11-14"},{"lineNumber":26,"author":{"gitId":"AndrewJanong"},"content":"  * Fixed behavior when comparing two `Person` objects ([\\#151](https://github.com/AY2324S1-CS2103T-W16-1/tp/pull/151))","lastModifiedDate":"2023-11-14"},{"lineNumber":27,"author":{"gitId":"AndrewJanong"},"content":"  * Fixed date parsing bug ([\\#153](https://github.com/AY2324S1-CS2103T-W16-1/tp/pull/153))","lastModifiedDate":"2023-11-14"},{"lineNumber":28,"author":{"gitId":"AndrewJanong"},"content":"  * Fixed UG bugs ([\\#161](https://github.com/AY2324S1-CS2103T-W16-1/tp/pull/161))","lastModifiedDate":"2023-11-14"},{"lineNumber":29,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":30,"author":{"gitId":"AndrewJanong"},"content":"* **Documentation**:","lastModifiedDate":"2023-10-05"},{"lineNumber":31,"author":{"gitId":"AndrewJanong"},"content":"  * User Guide:","lastModifiedDate":"2023-10-05"},{"lineNumber":32,"author":{"gitId":"AndrewJanong"},"content":"    * Adapt the UG for all must-have features and create Table of Content ([\\#13](https://github.com/AY2324S1-CS2103T-W16-1/tp/pull/13))","lastModifiedDate":"2023-11-14"},{"lineNumber":33,"author":{"gitId":"AndrewJanong"},"content":"    * Add screenshots and expected success and unsuccessful outputs ([\\#168](https://github.com/AY2324S1-CS2103T-W16-1/tp/pull/168))","lastModifiedDate":"2023-11-14"},{"lineNumber":34,"author":{"gitId":"AndrewJanong"},"content":"  * Developer Guide:","lastModifiedDate":"2023-10-05"},{"lineNumber":35,"author":{"gitId":"AndrewJanong"},"content":"    * Added Implementation for List Contact feature ([\\#184](https://github.com/AY2324S1-CS2103T-W16-1/tp/pull/184))","lastModifiedDate":"2023-11-14"},{"lineNumber":36,"author":{"gitId":"AndrewJanong"},"content":"    * Added Implementation for Event features ([\\#198](https://github.com/AY2324S1-CS2103T-W16-1/tp/pull/198))","lastModifiedDate":"2023-11-14"},{"lineNumber":37,"author":{"gitId":"AndrewJanong"},"content":"    * Added Instructions for Manual Testing for Event features ([\\#197](https://github.com/AY2324S1-CS2103T-W16-1/tp/pull/197))","lastModifiedDate":"2023-11-14"},{"lineNumber":38,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":39,"author":{"gitId":"AndrewJanong"},"content":"* **Review/Mentoring contributions**:","lastModifiedDate":"2023-11-14"},{"lineNumber":40,"author":{"gitId":"AndrewJanong"},"content":"  * Reviewed a total of 14 PRs.","lastModifiedDate":"2023-11-14"},{"lineNumber":41,"author":{"gitId":"AndrewJanong"},"content":"  * Answering queries from team members in the Telegram group chat.","lastModifiedDate":"2023-11-14"},{"lineNumber":42,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":43,"author":{"gitId":"AndrewJanong"},"content":"* **Contributions beyond the project team**:","lastModifiedDate":"2023-11-14"},{"lineNumber":44,"author":{"gitId":"AndrewJanong"},"content":"  * Reported 8 bugs for the other team during the PED.","lastModifiedDate":"2023-11-14"}],"authorContributionMap":{"AndrewJanong":44}},{"path":"docs/team/josepholim.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"josepholim"},"content":"---","lastModifiedDate":"2023-10-05"},{"lineNumber":2,"author":{"gitId":"josepholim"},"content":"  layout: josepholim.md","lastModifiedDate":"2023-10-05"},{"lineNumber":3,"author":{"gitId":"josepholim"},"content":"  title: \"Joseph Oliver Lim\u0027s Project Portfolio Page\"","lastModifiedDate":"2023-10-05"},{"lineNumber":4,"author":{"gitId":"josepholim"},"content":"---","lastModifiedDate":"2023-10-05"},{"lineNumber":5,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":6,"author":{"gitId":"josepholim"},"content":"### Project: KeepInTouch","lastModifiedDate":"2023-10-05"},{"lineNumber":7,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":8,"author":{"gitId":"josepholim"},"content":"KeepInTouch is a desktop app for managing contacts for people in the working industry (recruiters, engineers, etc.) as well as events for career purposes.","lastModifiedDate":"2023-11-10"},{"lineNumber":9,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":10,"author":{"gitId":"josepholim"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2324s1.github.io/tp-dashboard/?search\u003djosepholim\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code\u0026since\u003d2023-09-22\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026tabAuthor\u003djosepholim\u0026tabRepo\u003dAY2324S1-CS2103T-W16-1%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003ddocs~functional-code~test-code\u0026authorshipIsBinaryFileTypeChecked\u003dfalse\u0026authorshipIsIgnoredFilesChecked\u003dfalse)","lastModifiedDate":"2023-11-10"},{"lineNumber":11,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":12,"author":{"gitId":"josepholim"},"content":"* **Enhancements implemented**:","lastModifiedDate":"2023-11-10"},{"lineNumber":13,"author":{"gitId":"josepholim"},"content":"    * Added `add note` commands and tests. ([\\#39](https://github.com/AY2324S1-CS2103T-W16-1/tp/pull/39), [\\#42](https://github.com/AY2324S1-CS2103T-W16-1/tp/pull/42))","lastModifiedDate":"2023-11-13"},{"lineNumber":14,"author":{"gitId":"josepholim"},"content":"        * What it does: Supports adding a note to a contact.","lastModifiedDate":"2023-11-10"},{"lineNumber":15,"author":{"gitId":"josepholim"},"content":"        * Justification: This feature allows the user to record additional information about each contact.","lastModifiedDate":"2023-11-13"},{"lineNumber":16,"author":{"gitId":"josepholim"},"content":"    * Added `delete note` commands and tests. ([\\#39](https://github.com/AY2324S1-CS2103T-W16-1/tp/pull/39), [\\#42](https://github.com/AY2324S1-CS2103T-W16-1/tp/pull/42))","lastModifiedDate":"2023-11-13"},{"lineNumber":17,"author":{"gitId":"josepholim"},"content":"        * What it does: Supports deleting a note from a contact.","lastModifiedDate":"2023-11-10"},{"lineNumber":18,"author":{"gitId":"josepholim"},"content":"        * Justification: This feature allows the user to remove additional information that are no longer relevant.","lastModifiedDate":"2023-11-13"},{"lineNumber":19,"author":{"gitId":"josepholim"},"content":"    * Added support for duplicate contact names. ([\\#72](https://github.com/AY2324S1-CS2103T-W16-1/tp/pull/72))","lastModifiedDate":"2023-11-13"},{"lineNumber":20,"author":{"gitId":"josepholim"},"content":"        * Previously in AB3, two contacts are considered duplicates if they have the same name. I modified the definition of duplicate contacts to those with the same names and data fields.","lastModifiedDate":"2023-11-13"},{"lineNumber":21,"author":{"gitId":"josepholim"},"content":"        * Justification: This feature allows the user to have multiple contacts with the same name.","lastModifiedDate":"2023-11-13"},{"lineNumber":22,"author":{"gitId":"josepholim"},"content":"    * Fixed bug for empty fields in `add note` and `delete note` commands. ([\\#60](https://github.com/AY2324S1-CS2103T-W16-1/tp/pull/60))","lastModifiedDate":"2023-11-13"},{"lineNumber":23,"author":{"gitId":"josepholim"},"content":"        * Justification: Added regex validation to ensure that the fields for the commands cannot be an empty string or a string with only whitespaces.","lastModifiedDate":"2023-11-13"},{"lineNumber":24,"author":{"gitId":"josepholim"},"content":"    * Increased coverage by adding tests. ([\\#42](https://github.com/AY2324S1-CS2103T-W16-1/tp/pull/42), [\\#183](https://github.com/AY2324S1-CS2103T-W16-1/tp/pull/183))","lastModifiedDate":"2023-11-13"},{"lineNumber":25,"author":{"gitId":"josepholim"},"content":"        * Justification: Coverage increased by 1% and 2% in each PR.","lastModifiedDate":"2023-11-13"},{"lineNumber":26,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":27,"author":{"gitId":"josepholim"},"content":"* **Documentation**:","lastModifiedDate":"2023-10-05"},{"lineNumber":28,"author":{"gitId":"josepholim"},"content":"    * User Guide:","lastModifiedDate":"2023-10-05"},{"lineNumber":29,"author":{"gitId":"josepholim"},"content":"        * Adapt the UG for add note and delete note by id ([\\#39](https://github.com/AY2324S1-CS2103T-W16-1/tp/pull/39))","lastModifiedDate":"2023-11-13"},{"lineNumber":30,"author":{"gitId":"josepholim"},"content":"        * Modify the UG for list events feature ([\\#158](https://github.com/AY2324S1-CS2103T-W16-1/tp/pull/158))","lastModifiedDate":"2023-11-13"},{"lineNumber":31,"author":{"gitId":"josepholim"},"content":"        * Fix Table of Content ([\\#156](https://github.com/AY2324S1-CS2103T-W16-1/tp/pull/156))","lastModifiedDate":"2023-11-13"},{"lineNumber":32,"author":{"gitId":"josepholim"},"content":"        * Fix typos and formatting ([\\#177](https://github.com/AY2324S1-CS2103T-W16-1/tp/pull/177))","lastModifiedDate":"2023-11-13"},{"lineNumber":33,"author":{"gitId":"josepholim"},"content":"    * Developer Guide:","lastModifiedDate":"2023-10-05"},{"lineNumber":34,"author":{"gitId":"josepholim"},"content":"        * Added Table of Content ([\\#192](https://github.com/AY2324S1-CS2103T-W16-1/tp/pull/192))","lastModifiedDate":"2023-11-13"},{"lineNumber":35,"author":{"gitId":"josepholim"},"content":"        * Added Implementation for Notes Feature ([\\#182](https://github.com/AY2324S1-CS2103T-W16-1/tp/pull/182))","lastModifiedDate":"2023-11-13"},{"lineNumber":36,"author":{"gitId":"josepholim"},"content":"        * Added User Stories ([\\#52](https://github.com/AY2324S1-CS2103T-W16-1/tp/pull/52), [\\#179](https://github.com/AY2324S1-CS2103T-W16-1/tp/pull/179))","lastModifiedDate":"2023-11-13"},{"lineNumber":37,"author":{"gitId":"josepholim"},"content":"        * Added Use Cases ([\\#25](https://github.com/AY2324S1-CS2103T-W16-1/tp/pull/25), [\\#52](https://github.com/AY2324S1-CS2103T-W16-1/tp/pull/52), [\\#179](https://github.com/AY2324S1-CS2103T-W16-1/tp/pull/179))","lastModifiedDate":"2023-11-13"},{"lineNumber":38,"author":{"gitId":"josepholim"},"content":"        * Added Non-Functional Requirements ([\\#12](https://github.com/AY2324S1-CS2103T-W16-1/tp/pull/12), [\\#180](https://github.com/AY2324S1-CS2103T-W16-1/tp/pull/180))","lastModifiedDate":"2023-11-13"},{"lineNumber":39,"author":{"gitId":"josepholim"},"content":"        * Added Instructions for Manual Testing for Notes feature ([\\#193](https://github.com/AY2324S1-CS2103T-W16-1/tp/pull/193))","lastModifiedDate":"2023-11-13"},{"lineNumber":40,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":41,"author":{"gitId":"josepholim"},"content":"* **Review/Mentoring contributions**:","lastModifiedDate":"2023-11-13"},{"lineNumber":42,"author":{"gitId":"josepholim"},"content":"    * Reviewed a total of 22 PRs.","lastModifiedDate":"2023-11-13"},{"lineNumber":43,"author":{"gitId":"josepholim"},"content":"    * Answering queries from team members in the Telegram group chat.","lastModifiedDate":"2023-11-13"},{"lineNumber":44,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":45,"author":{"gitId":"josepholim"},"content":"* **Contributions beyond the project team**:","lastModifiedDate":"2023-11-13"},{"lineNumber":46,"author":{"gitId":"josepholim"},"content":"    * Reported 21 bugs for the other team during the PED.","lastModifiedDate":"2023-11-13"}],"authorContributionMap":{"josepholim":46}},{"path":"docs/team/larrywang0701.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"larrywang0701"},"content":"---","lastModifiedDate":"2023-10-05"},{"lineNumber":2,"author":{"gitId":"larrywang0701"},"content":"  layout: larrywang0701.md","lastModifiedDate":"2023-11-10"},{"lineNumber":3,"author":{"gitId":"larrywang0701"},"content":"  title: \"Wang Zihan\u0027s Project Portfolio Page\"","lastModifiedDate":"2023-10-05"},{"lineNumber":4,"author":{"gitId":"larrywang0701"},"content":"---","lastModifiedDate":"2023-10-05"},{"lineNumber":5,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":6,"author":{"gitId":"larrywang0701"},"content":"# Wang Zihan\u0027s Project Portfolio Page","lastModifiedDate":"2023-11-14"},{"lineNumber":7,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":8,"author":{"gitId":"larrywang0701"},"content":"### Project  Overview:","lastModifiedDate":"2023-10-05"},{"lineNumber":9,"author":{"gitId":"larrywang0701"},"content":"**_KeepInTouch_** is a desktop application designed for job seekers. It can help the job-seekers to manage contacts and events conveniently. Here is my work and contributions to this project:","lastModifiedDate":"2023-11-10"},{"lineNumber":10,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":11,"author":{"gitId":"larrywang0701"},"content":"### Summary of Contributions","lastModifiedDate":"2023-10-05"},{"lineNumber":12,"author":{"gitId":"larrywang0701"},"content":"  - #### Code Contributed:","lastModifiedDate":"2023-10-05"},{"lineNumber":13,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":14,"author":{"gitId":"larrywang0701"},"content":"    [Link](https://nus-cs2103-ay2324s1.github.io/tp-dashboard/?search\u003dlarrywang0701\u0026breakdown\u003dfalse\u0026sort\u003dgroupTitle%20dsc\u0026sortWithin\u003dtitle\u0026since\u003d2023-09-22\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026tabAuthor\u003dlarrywang0701\u0026tabRepo\u003dAY2324S1-CS2103T-W16-1%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003ddocs~functional-code~test-code\u0026authorshipIsBinaryFileTypeChecked\u003dfalse\u0026authorshipIsIgnoredFilesChecked\u003dfalse)","lastModifiedDate":"2023-11-10"},{"lineNumber":15,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":16,"author":{"gitId":"larrywang0701"},"content":"  - #### New feature implemented","lastModifiedDate":"2023-11-10"},{"lineNumber":17,"author":{"gitId":"larrywang0701"},"content":"      - Major parts for the event feature:","lastModifiedDate":"2023-11-10"},{"lineNumber":18,"author":{"gitId":"larrywang0701"},"content":"          - Commands and features for add, list and delete events [#33](https://github.com/AY2324S1-CS2103T-W16-1/tp/pull/33)","lastModifiedDate":"2023-11-10"},{"lineNumber":19,"author":{"gitId":"larrywang0701"},"content":"            - `add event`, `list events` and `delete event`","lastModifiedDate":"2023-11-10"},{"lineNumber":20,"author":{"gitId":"larrywang0701"},"content":"          - Filter and sort events [#71](https://github.com/AY2324S1-CS2103T-W16-1/tp/pull/71)","lastModifiedDate":"2023-11-10"},{"lineNumber":21,"author":{"gitId":"larrywang0701"},"content":"          - Relevant test cases for event feature [#33](https://github.com/AY2324S1-CS2103T-W16-1/tp/pull/33) [#71](https://github.com/AY2324S1-CS2103T-W16-1/tp/pull/71) [#169](https://github.com/AY2324S1-CS2103T-W16-1/tp/pull/169)","lastModifiedDate":"2023-11-10"},{"lineNumber":22,"author":{"gitId":"larrywang0701"},"content":"          - Bug fixes for event feature [#47](https://github.com/AY2324S1-CS2103T-W16-1/tp/pull/47) [#85](https://github.com/AY2324S1-CS2103T-W16-1/tp/pull/85)","lastModifiedDate":"2023-11-10"},{"lineNumber":23,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":24,"author":{"gitId":"larrywang0701"},"content":"  - #### Enhancements implemented","lastModifiedDate":"2023-10-05"},{"lineNumber":25,"author":{"gitId":"larrywang0701"},"content":"    - Enhanced the logic of command parser to support secondary command word [#33](https://github.com/AY2324S1-CS2103T-W16-1/tp/pull/33)","lastModifiedDate":"2023-11-10"},{"lineNumber":26,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":27,"author":{"gitId":"larrywang0701"},"content":"  - #### Contributions to the UG","lastModifiedDate":"2023-10-05"},{"lineNumber":28,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":29,"author":{"gitId":"larrywang0701"},"content":"      - During drafting stage: Wrote the command formats for most of the commands in the user guide draft.","lastModifiedDate":"2023-11-10"},{"lineNumber":30,"author":{"gitId":"larrywang0701"},"content":"        - For example: `add contact -n NAME [-p PHONE_NUMBER] [-a ADDRESS] [-e EMAIL]`","lastModifiedDate":"2023-11-10"},{"lineNumber":31,"author":{"gitId":"larrywang0701"},"content":"        - (in Project File on Google Docs)","lastModifiedDate":"2023-11-10"},{"lineNumber":32,"author":{"gitId":"larrywang0701"},"content":"      - Add details and tweak the description for `add event`, `list events` and `delete event` commands.","lastModifiedDate":"2023-11-10"},{"lineNumber":33,"author":{"gitId":"larrywang0701"},"content":"    [#33](https://github.com/AY2324S1-CS2103T-W16-1/tp/pull/33/files#diff-b50feaf9240709b6b02fb9584696b012c2a69feeba89e409952cc2f401f373fb)","lastModifiedDate":"2023-11-10"},{"lineNumber":34,"author":{"gitId":"larrywang0701"},"content":"    [#71](https://github.com/AY2324S1-CS2103T-W16-1/tp/pull/71/files#diff-b50feaf9240709b6b02fb9584696b012c2a69feeba89e409952cc2f401f373fb)","lastModifiedDate":"2023-11-10"},{"lineNumber":35,"author":{"gitId":"larrywang0701"},"content":"      - Add glossary part for UG, more hyperlinks for navigation, add more details for transferring data, and various adjustments to UG. [#169](https://github.com/AY2324S1-CS2103T-W16-1/tp/pull/169/files#diff-b50feaf9240709b6b02fb9584696b012c2a69feeba89e409952cc2f401f373fb)","lastModifiedDate":"2023-11-10"},{"lineNumber":36,"author":{"gitId":"larrywang0701"},"content":"      - Add the line for telling user not to modify the data file directly in FAQ part. [#167](https://github.com/AY2324S1-CS2103T-W16-1/tp/pull/167)","lastModifiedDate":"2023-11-10"},{"lineNumber":37,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":38,"author":{"gitId":"larrywang0701"},"content":"  - #### Contributions to the DG","lastModifiedDate":"2023-10-05"},{"lineNumber":39,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":40,"author":{"gitId":"larrywang0701"},"content":"     - Wrote the User Stories part in the DG [#10](https://github.com/AY2324S1-CS2103T-W16-1/tp/pull/10)","lastModifiedDate":"2023-11-10"},{"lineNumber":41,"author":{"gitId":"larrywang0701"},"content":"     - Add details about secondary command parser in DG [#47](https://github.com/AY2324S1-CS2103T-W16-1/tp/pull/47/files#diff-1a95edf069a4136e9cb71bee758b0dc86996f6051f0d438ec2c424557de7160b)","lastModifiedDate":"2023-11-10"},{"lineNumber":42,"author":{"gitId":"larrywang0701"},"content":"     - Add details about implementation on `ListEventCommandParser` and `ListEventCommand` [#206](https://github.com/AY2324S1-CS2103T-W16-1/tp/pull/206) [#208](https://github.com/AY2324S1-CS2103T-W16-1/tp/pull/208)","lastModifiedDate":"2023-11-14"},{"lineNumber":43,"author":{"gitId":"larrywang0701"},"content":"     - Add manual test cases for `list events` command [#211](https://github.com/AY2324S1-CS2103T-W16-1/tp/pull/211)","lastModifiedDate":"2023-11-14"},{"lineNumber":44,"author":{"gitId":"larrywang0701"},"content":"     - UML diagrams contributions:","lastModifiedDate":"2023-11-14"},{"lineNumber":45,"author":{"gitId":"larrywang0701"},"content":"       - UML diagrams that I added:","lastModifiedDate":"2023-11-14"},{"lineNumber":46,"author":{"gitId":"larrywang0701"},"content":"         - docs/diagrams/event/ListEventsSequenceDiagram.puml [#206](https://github.com/AY2324S1-CS2103T-W16-1/tp/pull/206)","lastModifiedDate":"2023-11-14"},{"lineNumber":47,"author":{"gitId":"larrywang0701"},"content":"         - docs/diagrams/event/ListEventsActivityDiagram.puml [#206](https://github.com/AY2324S1-CS2103T-W16-1/tp/pull/206)","lastModifiedDate":"2023-11-14"},{"lineNumber":48,"author":{"gitId":"larrywang0701"},"content":"         - docs/diagrams/event/DeleteEventSequenceDiagram.puml [#206](https://github.com/AY2324S1-CS2103T-W16-1/tp/pull/206)","lastModifiedDate":"2023-11-14"},{"lineNumber":49,"author":{"gitId":"larrywang0701"},"content":"       - UML diagram that I updated:","lastModifiedDate":"2023-11-14"},{"lineNumber":50,"author":{"gitId":"larrywang0701"},"content":"         - docs/diagrams/event/AddEventSequenceDiagram.puml [#206](https://github.com/AY2324S1-CS2103T-W16-1/tp/pull/206)","lastModifiedDate":"2023-11-14"},{"lineNumber":51,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":52,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":53,"author":{"gitId":"larrywang0701"},"content":"  - #### Review/mentoring contributions","lastModifiedDate":"2023-10-05"},{"lineNumber":54,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":55,"author":{"gitId":"larrywang0701"},"content":"     - Pull requests reviewed:","lastModifiedDate":"2023-11-10"},{"lineNumber":56,"author":{"gitId":"larrywang0701"},"content":"       - [#32](https://github.com/AY2324S1-CS2103T-W16-1/tp/pull/32)","lastModifiedDate":"2023-11-10"},{"lineNumber":57,"author":{"gitId":"larrywang0701"},"content":"       - [#69](https://github.com/AY2324S1-CS2103T-W16-1/tp/pull/69)","lastModifiedDate":"2023-11-10"},{"lineNumber":58,"author":{"gitId":"larrywang0701"},"content":"       - [#163](https://github.com/AY2324S1-CS2103T-W16-1/tp/pull/163)","lastModifiedDate":"2023-11-10"},{"lineNumber":59,"author":{"gitId":"larrywang0701"},"content":"       - [#168](https://github.com/AY2324S1-CS2103T-W16-1/tp/pull/168)","lastModifiedDate":"2023-11-10"},{"lineNumber":60,"author":{"gitId":"larrywang0701"},"content":"  ","lastModifiedDate":"2023-11-14"},{"lineNumber":61,"author":{"gitId":"larrywang0701"},"content":"  - #### Contributions beyond the project team","lastModifiedDate":"2023-11-14"},{"lineNumber":62,"author":{"gitId":"larrywang0701"},"content":"    - Reported 6 bugs to other team\u0027s product during PE-D","lastModifiedDate":"2023-11-14"}],"authorContributionMap":{"larrywang0701":62}},{"path":"docs/team/nixx162.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Nixx162"},"content":"---","lastModifiedDate":"2023-10-07"},{"lineNumber":2,"author":{"gitId":"Nixx162"},"content":"  layout: nixx162.md","lastModifiedDate":"2023-10-07"},{"lineNumber":3,"author":{"gitId":"Nixx162"},"content":"  title: \"Nicholas Jimmy Alden\u0027s Project Portfolio Page\"","lastModifiedDate":"2023-10-07"},{"lineNumber":4,"author":{"gitId":"Nixx162"},"content":"---","lastModifiedDate":"2023-10-07"},{"lineNumber":5,"author":{"gitId":"Nixx162"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":6,"author":{"gitId":"Nixx162"},"content":"### Project: KeepInTouch","lastModifiedDate":"2023-10-07"},{"lineNumber":7,"author":{"gitId":"Nixx162"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":8,"author":{"gitId":"Nixx162"},"content":"KeepInTouch is a desktop app for managing contacts for people in the working industry (recruiters, engineers, etc.) as well as events for career purposes.","lastModifiedDate":"2023-11-10"},{"lineNumber":9,"author":{"gitId":"Nixx162"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":10,"author":{"gitId":"Nixx162"},"content":"Given below are my contributions to the team:","lastModifiedDate":"2023-11-10"},{"lineNumber":11,"author":{"gitId":"Nixx162"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":12,"author":{"gitId":"Nixx162"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2324s1.github.io/tp-dashboard/?search\u003dnixx162\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code\u0026since\u003d2023-09-22)","lastModifiedDate":"2023-11-10"},{"lineNumber":13,"author":{"gitId":"Nixx162"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":14,"author":{"gitId":"Nixx162"},"content":"* **Project management**:","lastModifiedDate":"2023-10-07"},{"lineNumber":15,"author":{"gitId":"Nixx162"},"content":"    * Went through all the issues in GitHub to create a summary of what bugs there are (eliminating duplicate reports), whether they can be fixed, and recommended ideas of fixing it.","lastModifiedDate":"2023-11-10"},{"lineNumber":16,"author":{"gitId":"Nixx162"},"content":"    * Managed the CI and repo setup to establish best practices","lastModifiedDate":"2023-11-14"},{"lineNumber":17,"author":{"gitId":"Nixx162"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":18,"author":{"gitId":"Nixx162"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2023-10-07"},{"lineNumber":19,"author":{"gitId":"Nixx162"},"content":"    * [#43](https://github.com/AY2324S1-CS2103T-W16-1/tp/pull/43) Improved help feature to better accomodate users. The old help command only opens a window containing a link to the user guide. The improvements I implemented are:","lastModifiedDate":"2023-11-14"},{"lineNumber":20,"author":{"gitId":"Nixx162"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":21,"author":{"gitId":"Nixx162"},"content":"        * Calling the help command now display the list of all available commands","lastModifiedDate":"2023-11-10"},{"lineNumber":22,"author":{"gitId":"Nixx162"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":23,"author":{"gitId":"Nixx162"},"content":"        * Calling the help command with the relevant command word will display the uses of that command word","lastModifiedDate":"2023-11-10"},{"lineNumber":24,"author":{"gitId":"Nixx162"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":25,"author":{"gitId":"Nixx162"},"content":"        * Help command can recognize small typos in the additional argument and can suggest a correction","lastModifiedDate":"2023-11-10"},{"lineNumber":26,"author":{"gitId":"Nixx162"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":27,"author":{"gitId":"Nixx162"},"content":"    * [#77](https://github.com/AY2324S1-CS2103T-W16-1/tp/pull/77) Improved UI of the original contact list. Since initially all fields in a person instance is shown vertically, this leaves a lot of weight space in the right part of the window. Additionally, the density of information can make it hard to read. Therefore, I modified the display container to be a table instead.","lastModifiedDate":"2023-11-14"},{"lineNumber":28,"author":{"gitId":"Nixx162"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":29,"author":{"gitId":"Nixx162"},"content":"    * [#82](https://github.com/AY2324S1-CS2103T-W16-1/tp/pull/82) Improved UX when calling `list events`. Previously, the events are displayed as a text shown in the `ResultDisplay` container, which:","lastModifiedDate":"2023-11-14"},{"lineNumber":30,"author":{"gitId":"Nixx162"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":31,"author":{"gitId":"Nixx162"},"content":"        1. Can only show a small amount of rows, forcing the user to scroll","lastModifiedDate":"2023-11-10"},{"lineNumber":32,"author":{"gitId":"Nixx162"},"content":"        2. Is information-dense and unpleasant to read","lastModifiedDate":"2023-11-10"},{"lineNumber":33,"author":{"gitId":"Nixx162"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":34,"author":{"gitId":"Nixx162"},"content":"        Therefore, similar to the previous solution, I displayed the result, using a popup window, in a table as well.","lastModifiedDate":"2023-11-10"},{"lineNumber":35,"author":{"gitId":"Nixx162"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":36,"author":{"gitId":"Nixx162"},"content":"    * [#152](https://github.com/AY2324S1-CS2103T-W16-1/tp/pull/152) Did bug-fixes related to these features after PE-D","lastModifiedDate":"2023-11-14"},{"lineNumber":37,"author":{"gitId":"Nixx162"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":38,"author":{"gitId":"Nixx162"},"content":"* **Documentation**:","lastModifiedDate":"2023-10-07"},{"lineNumber":39,"author":{"gitId":"Nixx162"},"content":"    * User Guide:","lastModifiedDate":"2023-10-07"},{"lineNumber":40,"author":{"gitId":"Nixx162"},"content":"        * Proofread the UG and fixed some typos, grammatical errors, and misrepresentations.","lastModifiedDate":"2023-11-13"},{"lineNumber":41,"author":{"gitId":"Nixx162"},"content":"    * Developer Guide:","lastModifiedDate":"2023-10-07"},{"lineNumber":42,"author":{"gitId":"Nixx162"},"content":"        * [#178](https://github.com/AY2324S1-CS2103T-W16-1/tp/pull/178), [#205](https://github.com/AY2324S1-CS2103T-W16-1/tp/pull/205) Modified the existing UML to fit the current state of our project","lastModifiedDate":"2023-11-14"},{"lineNumber":43,"author":{"gitId":"Nixx162"},"content":"        * [#187](https://github.com/AY2324S1-CS2103T-W16-1/tp/pull/187) Formatted and added some test cases to the manual testing section","lastModifiedDate":"2023-11-14"},{"lineNumber":44,"author":{"gitId":"Nixx162"},"content":"        * Discussed implementation details of the improved help feature in the DG","lastModifiedDate":"2023-11-14"},{"lineNumber":45,"author":{"gitId":"Nixx162"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":46,"author":{"gitId":"Nixx162"},"content":"- **Review/mentoring contributions**","lastModifiedDate":"2023-11-14"},{"lineNumber":47,"author":{"gitId":"Nixx162"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":48,"author":{"gitId":"Nixx162"},"content":"     - Pull requests reviewed:","lastModifiedDate":"2023-11-14"},{"lineNumber":49,"author":{"gitId":"Nixx162"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":50,"author":{"gitId":"Nixx162"},"content":"       - [#33](https://github.com/AY2324S1-CS2103T-W16-1/tp/pull/33)","lastModifiedDate":"2023-11-14"},{"lineNumber":51,"author":{"gitId":"Nixx162"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":52,"author":{"gitId":"Nixx162"},"content":"    - Give advice on how to achieve certain things by understanding the  codebase.       ","lastModifiedDate":"2023-11-14"},{"lineNumber":53,"author":{"gitId":"Nixx162"},"content":"    Example: Change from [#68](https://github.com/AY2324S1-CS2103T-W16-1/tp/pull/68) to [#72](https://github.com/AY2324S1-CS2103T-W16-1/tp/pull/72)","lastModifiedDate":"2023-11-14"},{"lineNumber":54,"author":{"gitId":"Nixx162"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":55,"author":{"gitId":"Nixx162"},"content":"- **Contributions beyond the project team**","lastModifiedDate":"2023-11-14"},{"lineNumber":56,"author":{"gitId":"Nixx162"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":57,"author":{"gitId":"Nixx162"},"content":"    - Reported 11 bugs to other team\u0027s product during PE-D","lastModifiedDate":"2023-11-14"}],"authorContributionMap":{"Nixx162":57}},{"path":"docs/team/zekone.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"zekone"},"content":"---","lastModifiedDate":"2023-10-05"},{"lineNumber":2,"author":{"gitId":"zekone"},"content":"  layout: zekone.md","lastModifiedDate":"2023-10-05"},{"lineNumber":3,"author":{"gitId":"zekone"},"content":"  title: \"Khee Wei\u0027s Project Portfolio Page\"","lastModifiedDate":"2023-10-05"},{"lineNumber":4,"author":{"gitId":"zekone"},"content":"---","lastModifiedDate":"2023-10-05"},{"lineNumber":5,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":6,"author":{"gitId":"zekone"},"content":"### Project: KeepInTouch","lastModifiedDate":"2023-10-05"},{"lineNumber":7,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":8,"author":{"gitId":"zekone"},"content":"KeepInTouch is a desktop app for managing contacts for job-seekers. It can also help job-seekers to manage events for career purposes.","lastModifiedDate":"2023-11-13"},{"lineNumber":9,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":10,"author":{"gitId":"zekone"},"content":"* **New Feature**: Delete and add tags to existing contacts ([\\#63](https://github.com/AY2324S1-CS2103T-W16-1/tp/pull/63))","lastModifiedDate":"2023-11-13"},{"lineNumber":11,"author":{"gitId":"zekone"},"content":"  * What it does: It allows users to add/delete one or more tags from any existing contacts with one simple command.","lastModifiedDate":"2023-11-13"},{"lineNumber":12,"author":{"gitId":"zekone"},"content":"  * Justification: This feature improves the product significantly because the original product can only change the tags when adding a new contact. Changing tags will require deleting a contact and add it again with the new tags which is a huge inconvenience.","lastModifiedDate":"2023-11-13"},{"lineNumber":13,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":14,"author":{"gitId":"zekone"},"content":"* **Existing Feature**: Adapt the `storage` in our architecture. ([\\#32](https://github.com/AY2324S1-CS2103T-W16-1/tp/pull/32))","lastModifiedDate":"2023-11-13"},{"lineNumber":15,"author":{"gitId":"zekone"},"content":"  * What it does: It allows `storage` to work with newly added feature such as `note` and `event`.","lastModifiedDate":"2023-11-13"},{"lineNumber":16,"author":{"gitId":"zekone"},"content":"  * Justification: Without this adaptation, our product will not be able to store and retrieve data correctly.","lastModifiedDate":"2023-11-10"},{"lineNumber":17,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":18,"author":{"gitId":"zekone"},"content":"* **Code contributed**: [RepoSense](https://nus-cs2103-ay2324s1.github.io/tp-dashboard/?search\u003dzekone\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code\u0026since\u003d2023-09-22)","lastModifiedDate":"2023-11-13"},{"lineNumber":19,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":20,"author":{"gitId":"zekone"},"content":"* **Project management**:","lastModifiedDate":"2023-10-05"},{"lineNumber":21,"author":{"gitId":"zekone"},"content":"  * Managed `1.3.trial` release.","lastModifiedDate":"2023-11-13"},{"lineNumber":22,"author":{"gitId":"zekone"},"content":"  * Created 12 labels for better tracking of issues.","lastModifiedDate":"2023-11-13"},{"lineNumber":23,"author":{"gitId":"zekone"},"content":"  * Created milestones `v1.2` and `v1.3`.","lastModifiedDate":"2023-11-13"},{"lineNumber":24,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":25,"author":{"gitId":"zekone"},"content":"* **Fixed bugs reported in PE-D**:","lastModifiedDate":"2023-11-13"},{"lineNumber":26,"author":{"gitId":"zekone"},"content":"  * Added tag related help message to help command ([\\#147](https://github.com/AY2324S1-CS2103T-W16-1/tp/pull/147))","lastModifiedDate":"2023-11-13"},{"lineNumber":27,"author":{"gitId":"zekone"},"content":"  * Fixed help and error messages ([\\#148](https://github.com/AY2324S1-CS2103T-W16-1/tp/pull/148), [\\#155](https://github.com/AY2324S1-CS2103T-W16-1/tp/pull/155))","lastModifiedDate":"2023-11-13"},{"lineNumber":28,"author":{"gitId":"zekone"},"content":"  * Deleted edit feature ([\\#149](https://github.com/AY2324S1-CS2103T-W16-1/tp/pull/149))","lastModifiedDate":"2023-11-13"},{"lineNumber":29,"author":{"gitId":"zekone"},"content":"  * Fixed UG bugs ([\\#150](https://github.com/AY2324S1-CS2103T-W16-1/tp/pull/150), [\\#157](https://github.com/AY2324S1-CS2103T-W16-1/tp/pull/157))","lastModifiedDate":"2023-11-13"},{"lineNumber":30,"author":{"gitId":"zekone"},"content":"  * Fixed behaviour when deleting non-exiting tags ([\\#154](https://github.com/AY2324S1-CS2103T-W16-1/tp/pull/154))","lastModifiedDate":"2023-11-13"},{"lineNumber":31,"author":{"gitId":"zekone"},"content":"  * Added bugs that cannot be fixed due to feature-freeze to the DG under planned enhancements. ([\\#159](https://github.com/AY2324S1-CS2103T-W16-1/tp/pull/159), [\\#164](https://github.com/AY2324S1-CS2103T-W16-1/tp/pull/164))","lastModifiedDate":"2023-11-13"},{"lineNumber":32,"author":{"gitId":"zekone"},"content":"  * Changed jar filename in gradle.build ([\\#163](https://github.com/AY2324S1-CS2103T-W16-1/tp/pull/163))","lastModifiedDate":"2023-11-13"},{"lineNumber":33,"author":{"gitId":"zekone"},"content":"  * Fixed error message and UG when a large index is causing integer overflow ([\\#166](https://github.com/AY2324S1-CS2103T-W16-1/tp/pull/166))","lastModifiedDate":"2023-11-13"},{"lineNumber":34,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":35,"author":{"gitId":"zekone"},"content":"* **Documentation**:","lastModifiedDate":"2023-10-05"},{"lineNumber":36,"author":{"gitId":"zekone"},"content":"  * User Guide:","lastModifiedDate":"2023-10-05"},{"lineNumber":37,"author":{"gitId":"zekone"},"content":"    * Added section for details and requirements for user input parameters ([\\#157](https://github.com/AY2324S1-CS2103T-W16-1/tp/pull/157))","lastModifiedDate":"2023-11-13"},{"lineNumber":38,"author":{"gitId":"zekone"},"content":"    * Added section for add and delete tag feature ([\\#63](https://github.com/AY2324S1-CS2103T-W16-1/tp/pull/63))","lastModifiedDate":"2023-11-13"},{"lineNumber":39,"author":{"gitId":"zekone"},"content":"    * Added section for find feature ([\\#81](https://github.com/AY2324S1-CS2103T-W16-1/tp/pull/81))","lastModifiedDate":"2023-11-13"},{"lineNumber":40,"author":{"gitId":"zekone"},"content":"    * Added section for clear feature ([\\#150](https://github.com/AY2324S1-CS2103T-W16-1/tp/pull/150))","lastModifiedDate":"2023-11-13"},{"lineNumber":41,"author":{"gitId":"zekone"},"content":"  * Developer Guide:","lastModifiedDate":"2023-10-05"},{"lineNumber":42,"author":{"gitId":"zekone"},"content":"    * Added planned enhancement section ([\\#159](https://github.com/AY2324S1-CS2103T-W16-1/tp/pull/159))","lastModifiedDate":"2023-11-13"},{"lineNumber":43,"author":{"gitId":"zekone"},"content":"    * Added implementation section for add and delete tag feature([\\#181](https://github.com/AY2324S1-CS2103T-W16-1/tp/pull/181))","lastModifiedDate":"2023-11-13"},{"lineNumber":44,"author":{"gitId":"zekone"},"content":"    * Added use cases for adding and deleting tag ([\\#63](https://github.com/AY2324S1-CS2103T-W16-1/tp/pull/63))","lastModifiedDate":"2023-11-13"},{"lineNumber":45,"author":{"gitId":"zekone"},"content":"    * Updated storage component ([\\#54](https://github.com/AY2324S1-CS2103T-W16-1/tp/pull/54))","lastModifiedDate":"2023-11-13"},{"lineNumber":46,"author":{"gitId":"zekone"},"content":"    * Added section for manual testing of adding and deleting tag ([\\#186](https://github.com/AY2324S1-CS2103T-W16-1/tp/pull/186))","lastModifiedDate":"2023-11-13"},{"lineNumber":47,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":48,"author":{"gitId":"zekone"},"content":"* **Community**:","lastModifiedDate":"2023-10-05"},{"lineNumber":49,"author":{"gitId":"zekone"},"content":"  * PRs reviewed (with non-trivial review comments): [\\#33](https://github.com/AY2324S1-CS2103T-W16-1/tp/pull/33)","lastModifiedDate":"2023-11-13"}],"authorContributionMap":{"zekone":49}},{"path":"src/main/java/seedu/address/commons/util/DateTimeUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"larrywang0701"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"larrywang0701"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-11-01"},{"lineNumber":4,"author":{"gitId":"larrywang0701"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-11-01"},{"lineNumber":5,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":6,"author":{"gitId":"AndrewJanong"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-11-09"},{"lineNumber":7,"author":{"gitId":"larrywang0701"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"AndrewJanong"},"content":"import java.time.LocalTime;","lastModifiedDate":"2023-11-09"},{"lineNumber":9,"author":{"gitId":"larrywang0701"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"larrywang0701"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"AndrewJanong"},"content":"import java.time.format.ResolverStyle;","lastModifiedDate":"2023-11-09"},{"lineNumber":12,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"larrywang0701"},"content":"/**","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"larrywang0701"},"content":" * Utilities about date and time","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"larrywang0701"},"content":" */","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"larrywang0701"},"content":"public class DateTimeUtil {","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"larrywang0701"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"larrywang0701"},"content":"     * Parse string into LocalDateTime","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"larrywang0701"},"content":"     * @param str the string to be parsed","lastModifiedDate":"2023-10-12"},{"lineNumber":20,"author":{"gitId":"larrywang0701"},"content":"     * @return The parsed LocalDateTime","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"larrywang0701"},"content":"     * @throws DateTimeParseException If the string cannot be parsed into LocalDateTime","lastModifiedDate":"2023-10-12"},{"lineNumber":22,"author":{"gitId":"larrywang0701"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"larrywang0701"},"content":"    public static LocalDateTime parseString(String str) throws DateTimeParseException {","lastModifiedDate":"2023-10-12"},{"lineNumber":24,"author":{"gitId":"larrywang0701"},"content":"        requireNonNull(str);","lastModifiedDate":"2023-11-01"},{"lineNumber":25,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":26,"author":{"gitId":"AndrewJanong"},"content":"        DateTimeFormatter formatter1 \u003d DateTimeFormatter","lastModifiedDate":"2023-11-09"},{"lineNumber":27,"author":{"gitId":"AndrewJanong"},"content":"                .ofPattern(\"uuuu-MM-dd HH:mm[:ss]\")","lastModifiedDate":"2023-11-09"},{"lineNumber":28,"author":{"gitId":"AndrewJanong"},"content":"                .withResolverStyle(ResolverStyle.STRICT);","lastModifiedDate":"2023-11-09"},{"lineNumber":29,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":30,"author":{"gitId":"AndrewJanong"},"content":"        DateTimeFormatter onlyDateFormatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");","lastModifiedDate":"2023-11-09"},{"lineNumber":31,"author":{"gitId":"AndrewJanong"},"content":"        DateTimeFormatter onlyTimeFormatter \u003d DateTimeFormatter.ofPattern(\"HH:mm[:ss]\");","lastModifiedDate":"2023-11-09"},{"lineNumber":32,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":33,"author":{"gitId":"larrywang0701"},"content":"        LocalDateTime result \u003d null;","lastModifiedDate":"2023-10-12"},{"lineNumber":34,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":35,"author":{"gitId":"larrywang0701"},"content":"        try {","lastModifiedDate":"2023-10-12"},{"lineNumber":36,"author":{"gitId":"larrywang0701"},"content":"            result \u003d LocalDateTime.parse(str, formatter1);","lastModifiedDate":"2023-10-12"},{"lineNumber":37,"author":{"gitId":"larrywang0701"},"content":"        } catch (DateTimeParseException e2) {","lastModifiedDate":"2023-10-12"},{"lineNumber":38,"author":{"gitId":"larrywang0701"},"content":"            LocalDateTime now \u003d LocalDateTime.now();","lastModifiedDate":"2023-10-12"},{"lineNumber":39,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":40,"author":{"gitId":"larrywang0701"},"content":"            if (str.contains(\"-\")) {","lastModifiedDate":"2023-10-13"},{"lineNumber":41,"author":{"gitId":"AndrewJanong"},"content":"                // str only contains date, will immediately throw exception otherwise","lastModifiedDate":"2023-11-09"},{"lineNumber":42,"author":{"gitId":"AndrewJanong"},"content":"                LocalDate onlyDate \u003d LocalDate.parse(str, onlyDateFormatter);","lastModifiedDate":"2023-11-09"},{"lineNumber":43,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":44,"author":{"gitId":"larrywang0701"},"content":"                String appendTime \u003d \" 00:00:00\";","lastModifiedDate":"2023-10-13"},{"lineNumber":45,"author":{"gitId":"larrywang0701"},"content":"                result \u003d LocalDateTime.parse(str + appendTime, formatter1);","lastModifiedDate":"2023-10-13"},{"lineNumber":46,"author":{"gitId":"larrywang0701"},"content":"            } else {","lastModifiedDate":"2023-10-13"},{"lineNumber":47,"author":{"gitId":"AndrewJanong"},"content":"                //str only contains time, will immediately throw exception otherwise","lastModifiedDate":"2023-11-09"},{"lineNumber":48,"author":{"gitId":"AndrewJanong"},"content":"                LocalTime onlyTime \u003d LocalTime.parse(str, onlyTimeFormatter);","lastModifiedDate":"2023-11-09"},{"lineNumber":49,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":50,"author":{"gitId":"larrywang0701"},"content":"                int month \u003d now.getMonthValue();","lastModifiedDate":"2023-11-01"},{"lineNumber":51,"author":{"gitId":"larrywang0701"},"content":"                int day \u003d now.getDayOfMonth();","lastModifiedDate":"2023-11-01"},{"lineNumber":52,"author":{"gitId":"larrywang0701"},"content":"                String appendDate \u003d now.getYear() + \"-\" + (month \u003c\u003d 9 ? \"0\" + month : month)","lastModifiedDate":"2023-11-01"},{"lineNumber":53,"author":{"gitId":"larrywang0701"},"content":"                        + \"-\" + (day \u003c\u003d 9 ? \"0\" + day : day) + \" \";","lastModifiedDate":"2023-11-01"},{"lineNumber":54,"author":{"gitId":"larrywang0701"},"content":"                result \u003d LocalDateTime.parse(appendDate + str, formatter1);","lastModifiedDate":"2023-10-12"},{"lineNumber":55,"author":{"gitId":"larrywang0701"},"content":"            }","lastModifiedDate":"2023-10-12"},{"lineNumber":56,"author":{"gitId":"larrywang0701"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":57,"author":{"gitId":"larrywang0701"},"content":"        return result;","lastModifiedDate":"2023-10-12"},{"lineNumber":58,"author":{"gitId":"larrywang0701"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":59,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":60,"author":{"gitId":"larrywang0701"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":61,"author":{"gitId":"larrywang0701"},"content":"     * Get the formatted String representation of the {@code LocalDateTime} object","lastModifiedDate":"2023-10-12"},{"lineNumber":62,"author":{"gitId":"larrywang0701"},"content":"     *","lastModifiedDate":"2023-10-12"},{"lineNumber":63,"author":{"gitId":"larrywang0701"},"content":"     * @param time The {@code LocalDateTime} object to be parsed","lastModifiedDate":"2023-10-12"},{"lineNumber":64,"author":{"gitId":"larrywang0701"},"content":"     * @return The String representation of this {@code LocalDateTime} object, in the format {@code yyyy-MM-dd HH:mm:ss}","lastModifiedDate":"2023-10-12"},{"lineNumber":65,"author":{"gitId":"larrywang0701"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":66,"author":{"gitId":"larrywang0701"},"content":"    public static String toFormattedString(LocalDateTime time) {","lastModifiedDate":"2023-10-12"},{"lineNumber":67,"author":{"gitId":"larrywang0701"},"content":"        requireNonNull(time);","lastModifiedDate":"2023-11-01"},{"lineNumber":68,"author":{"gitId":"larrywang0701"},"content":"        return time.format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm:ss\"));","lastModifiedDate":"2023-10-12"},{"lineNumber":69,"author":{"gitId":"larrywang0701"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":70,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":71,"author":{"gitId":"larrywang0701"},"content":"    /**","lastModifiedDate":"2023-11-01"},{"lineNumber":72,"author":{"gitId":"larrywang0701"},"content":"     * Return {@code true} if {@code timeToCheck} is between {@code intervalStart} and {@code intervalEnd} (inclusive).","lastModifiedDate":"2023-11-01"},{"lineNumber":73,"author":{"gitId":"larrywang0701"},"content":"     * In another word, returns {@code true} when {@code intervalStart} \u003c\u003d {@code timeToCheck} \u003c\u003d {@code intervalEnd}","lastModifiedDate":"2023-11-01"},{"lineNumber":74,"author":{"gitId":"larrywang0701"},"content":"     *","lastModifiedDate":"2023-11-01"},{"lineNumber":75,"author":{"gitId":"larrywang0701"},"content":"     * @param intervalStart The start time for the interval","lastModifiedDate":"2023-11-01"},{"lineNumber":76,"author":{"gitId":"larrywang0701"},"content":"     * @param intervalEnd The end time for the interval","lastModifiedDate":"2023-11-01"},{"lineNumber":77,"author":{"gitId":"larrywang0701"},"content":"     * @param timeToCheck The time that is needed for checking","lastModifiedDate":"2023-11-01"},{"lineNumber":78,"author":{"gitId":"larrywang0701"},"content":"     * @return Whether {@code timeToCheck} is between {@code intervalStart} and {@code intervalEnd} or not","lastModifiedDate":"2023-11-01"},{"lineNumber":79,"author":{"gitId":"larrywang0701"},"content":"     */","lastModifiedDate":"2023-11-01"},{"lineNumber":80,"author":{"gitId":"larrywang0701"},"content":"    public static boolean withinTimeInterval(LocalDateTime intervalStart,","lastModifiedDate":"2023-11-01"},{"lineNumber":81,"author":{"gitId":"larrywang0701"},"content":"                                      LocalDateTime intervalEnd, LocalDateTime timeToCheck) {","lastModifiedDate":"2023-11-01"},{"lineNumber":82,"author":{"gitId":"larrywang0701"},"content":"        requireAllNonNull(intervalStart, intervalEnd, timeToCheck);","lastModifiedDate":"2023-11-01"},{"lineNumber":83,"author":{"gitId":"larrywang0701"},"content":"        assert intervalStart.equals(intervalEnd) || intervalStart.isBefore(intervalEnd);","lastModifiedDate":"2023-11-01"},{"lineNumber":84,"author":{"gitId":"larrywang0701"},"content":"        return timeToCheck.equals(intervalStart)","lastModifiedDate":"2023-11-01"},{"lineNumber":85,"author":{"gitId":"larrywang0701"},"content":"                || timeToCheck.equals(intervalEnd)","lastModifiedDate":"2023-11-01"},{"lineNumber":86,"author":{"gitId":"larrywang0701"},"content":"                || (timeToCheck.isAfter(intervalStart) \u0026\u0026 timeToCheck.isBefore(intervalEnd));","lastModifiedDate":"2023-11-01"},{"lineNumber":87,"author":{"gitId":"larrywang0701"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":88,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":89,"author":{"gitId":"larrywang0701"},"content":"    /**","lastModifiedDate":"2023-11-01"},{"lineNumber":90,"author":{"gitId":"larrywang0701"},"content":"     * Return {@code true} if the time interval {@code intervalAStart}~{@code intervalAEnd}","lastModifiedDate":"2023-11-01"},{"lineNumber":91,"author":{"gitId":"larrywang0701"},"content":"     * overlaps with the time interval {@code intervalBStart}~{@code intervalBEnd} (inclusive of start and end time).","lastModifiedDate":"2023-11-01"},{"lineNumber":92,"author":{"gitId":"larrywang0701"},"content":"     * Start time is inclusive, end time is exclusive","lastModifiedDate":"2023-11-01"},{"lineNumber":93,"author":{"gitId":"larrywang0701"},"content":"     *","lastModifiedDate":"2023-11-01"},{"lineNumber":94,"author":{"gitId":"larrywang0701"},"content":"     * @param intervalAStart The start time for the first interval","lastModifiedDate":"2023-11-01"},{"lineNumber":95,"author":{"gitId":"larrywang0701"},"content":"     * @param intervalAEnd The end time for the first interval","lastModifiedDate":"2023-11-01"},{"lineNumber":96,"author":{"gitId":"larrywang0701"},"content":"     * @param intervalBStart The start time for the second interval","lastModifiedDate":"2023-11-01"},{"lineNumber":97,"author":{"gitId":"larrywang0701"},"content":"     * @param intervalBEnd The end time for the second interval","lastModifiedDate":"2023-11-01"},{"lineNumber":98,"author":{"gitId":"larrywang0701"},"content":"     * @return Whether the two time intervals overlap or not","lastModifiedDate":"2023-11-01"},{"lineNumber":99,"author":{"gitId":"larrywang0701"},"content":"     */","lastModifiedDate":"2023-11-01"},{"lineNumber":100,"author":{"gitId":"larrywang0701"},"content":"    public static boolean timeIntervalsOverlap(LocalDateTime intervalAStart, LocalDateTime intervalAEnd,","lastModifiedDate":"2023-11-01"},{"lineNumber":101,"author":{"gitId":"larrywang0701"},"content":"                                        LocalDateTime intervalBStart, LocalDateTime intervalBEnd) {","lastModifiedDate":"2023-11-01"},{"lineNumber":102,"author":{"gitId":"larrywang0701"},"content":"        requireAllNonNull(intervalAStart, intervalAEnd, intervalBStart, intervalBEnd);","lastModifiedDate":"2023-11-01"},{"lineNumber":103,"author":{"gitId":"larrywang0701"},"content":"        return withinTimeInterval(intervalAStart, intervalAEnd, intervalBStart)","lastModifiedDate":"2023-11-01"},{"lineNumber":104,"author":{"gitId":"larrywang0701"},"content":"                || withinTimeInterval(intervalAStart, intervalAEnd, intervalBEnd)","lastModifiedDate":"2023-11-01"},{"lineNumber":105,"author":{"gitId":"larrywang0701"},"content":"                || withinTimeInterval(intervalBStart, intervalBEnd, intervalAStart)","lastModifiedDate":"2023-11-01"},{"lineNumber":106,"author":{"gitId":"larrywang0701"},"content":"                || withinTimeInterval(intervalBStart, intervalBEnd, intervalAEnd);","lastModifiedDate":"2023-11-01"},{"lineNumber":107,"author":{"gitId":"larrywang0701"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":108,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":109,"author":{"gitId":"larrywang0701"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"larrywang0701":90,"AndrewJanong":19}},{"path":"src/main/java/seedu/address/commons/util/StringUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.StringWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":9,"author":{"gitId":"larrywang0701"},"content":"import java.util.List;","lastModifiedDate":"2023-11-01"},{"lineNumber":10,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":11,"author":{"gitId":"larrywang0701"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2023-11-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Helper functions for handling strings.","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class StringUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Returns true if the {@code sentence} contains the {@code word}.","lastModifiedDate":"2016-10-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *   Ignores case, but a full word match is required.","lastModifiedDate":"2016-10-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *   \u003cbr\u003eexamples:\u003cpre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"abc\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"DEF\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"AB\") \u003d\u003d false //not a full word match","lastModifiedDate":"2016-10-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *       \u003c/pre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @param sentence cannot be null","lastModifiedDate":"2016-10-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * @param word cannot be null, cannot be empty, must be a single word","lastModifiedDate":"2016-10-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static boolean containsWordIgnoreCase(String sentence, String word) {","lastModifiedDate":"2016-10-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        requireNonNull(sentence);","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        requireNonNull(word);","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        String preppedWord \u003d word.trim();","lastModifiedDate":"2016-10-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        checkArgument(!preppedWord.isEmpty(), \"Word parameter cannot be empty\");","lastModifiedDate":"2017-05-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        checkArgument(preppedWord.split(\"\\\\s+\").length \u003d\u003d 1, \"Word parameter should be a single word\");","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        String preppedSentence \u003d sentence;","lastModifiedDate":"2016-10-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        String[] wordsInPreppedSentence \u003d preppedSentence.split(\"\\\\s+\");","lastModifiedDate":"2016-10-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return Arrays.stream(wordsInPreppedSentence)","lastModifiedDate":"2018-01-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                .anyMatch(preppedWord::equalsIgnoreCase);","lastModifiedDate":"2018-01-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Returns a detailed message of the t, including the stack trace.","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static String getDetails(Throwable t) {","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        requireNonNull(t);","lastModifiedDate":"2017-05-15"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        StringWriter sw \u003d new StringWriter();","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        t.printStackTrace(new PrintWriter(sw));","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return t.getMessage() + \"\\n\" + sw.toString();","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-22"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Returns true if {@code s} represents a non-zero unsigned integer","lastModifiedDate":"2017-06-02"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * e.g. 1, 2, 3, ..., {@code Integer.MAX_VALUE} \u003cbr\u003e","lastModifiedDate":"2017-06-02"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Will return false for any other non-null string input","lastModifiedDate":"2017-06-02"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * e.g. empty string, \"-1\", \"0\", \"+1\", and \" 2 \" (untrimmed), \"3 0\" (contains whitespace), \"1 a\" (contains letters)","lastModifiedDate":"2017-06-02"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code s} is null.","lastModifiedDate":"2017-06-02"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-22"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public static boolean isNonZeroUnsignedInteger(String s) {","lastModifiedDate":"2017-06-02"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        requireNonNull(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-06-02"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            int value \u003d Integer.parseInt(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            return value \u003e 0 \u0026\u0026 !s.startsWith(\"+\"); // \"+1\" is successfully parsed by Integer#parseInt(String)","lastModifiedDate":"2017-06-02"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        } catch (NumberFormatException nfe) {","lastModifiedDate":"2017-06-02"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-06-02"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-02"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":71,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":72,"author":{"gitId":"larrywang0701"},"content":"    /**","lastModifiedDate":"2023-11-01"},{"lineNumber":73,"author":{"gitId":"larrywang0701"},"content":"     * Convert the event list to a human-readable string","lastModifiedDate":"2023-11-01"},{"lineNumber":74,"author":{"gitId":"larrywang0701"},"content":"     *","lastModifiedDate":"2023-11-01"},{"lineNumber":75,"author":{"gitId":"larrywang0701"},"content":"     * @param eventList The event list","lastModifiedDate":"2023-11-01"},{"lineNumber":76,"author":{"gitId":"larrywang0701"},"content":"     * @return The filtered event list as string","lastModifiedDate":"2023-11-01"},{"lineNumber":77,"author":{"gitId":"larrywang0701"},"content":"     */","lastModifiedDate":"2023-11-01"},{"lineNumber":78,"author":{"gitId":"larrywang0701"},"content":"    public static String eventListToString(List\u003c? extends Event\u003e eventList) {","lastModifiedDate":"2023-11-01"},{"lineNumber":79,"author":{"gitId":"larrywang0701"},"content":"        StringBuilder str \u003d new StringBuilder();","lastModifiedDate":"2023-11-01"},{"lineNumber":80,"author":{"gitId":"larrywang0701"},"content":"        eventList.forEach(","lastModifiedDate":"2023-11-01"},{"lineNumber":81,"author":{"gitId":"larrywang0701"},"content":"                evt -\u003e str.append(evt.getUiText()).append(\"\\n\")","lastModifiedDate":"2023-11-01"},{"lineNumber":82,"author":{"gitId":"larrywang0701"},"content":"        );","lastModifiedDate":"2023-11-01"},{"lineNumber":83,"author":{"gitId":"larrywang0701"},"content":"        return str.toString();","lastModifiedDate":"2023-11-01"},{"lineNumber":84,"author":{"gitId":"larrywang0701"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":85,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"larrywang0701":17,"-":68}},{"path":"src/main/java/seedu/address/logic/Logic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":11,"author":{"gitId":"Nixx162"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2023-11-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * API of the Logic component","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Returns the AddressBook.","lastModifiedDate":"2018-12-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * @see seedu.address.model.Model#getAddressBook()","lastModifiedDate":"2018-12-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered list of persons */","lastModifiedDate":"2017-09-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":37,"author":{"gitId":"Nixx162"},"content":"    /** Returns an unmodifiable view of the filtered list of events */","lastModifiedDate":"2023-11-03"},{"lineNumber":38,"author":{"gitId":"Nixx162"},"content":"    ObservableList\u003cEvent\u003e getFilteredEventList();","lastModifiedDate":"2023-11-03"},{"lineNumber":39,"author":{"gitId":"Nixx162"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":40,"author":{"gitId":"larrywang0701"},"content":"    ObservableList\u003cEvent\u003e getSortedFilteredEventList();","lastModifiedDate":"2023-11-14"},{"lineNumber":41,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Set the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"larrywang0701":2,"-":50,"Nixx162":4}},{"path":"src/main/java/seedu/address/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.AccessDeniedException;","lastModifiedDate":"2023-06-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.AddressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":18,"author":{"gitId":"Nixx162"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2023-11-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2016-09-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_FORMAT \u003d \"Could not save data due to the following error: %s\";","lastModifiedDate":"2023-06-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_PERMISSION_ERROR_FORMAT \u003d","lastModifiedDate":"2023-06-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            \"Could not save data to file %s due to insufficient permissions to write to the file or the folder.\";","lastModifiedDate":"2023-06-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2016-09-29"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private final Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private final Storage storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private final AddressBookParser addressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public LogicManager(Model model, Storage storage) {","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2016-09-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        addressBookParser \u003d new AddressBookParser();","lastModifiedDate":"2018-01-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2016-09-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        Command command \u003d addressBookParser.parseCommand(commandText);","lastModifiedDate":"2017-07-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2019-01-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        } catch (AccessDeniedException e) {","lastModifiedDate":"2023-06-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            throw new CommandException(String.format(FILE_OPS_PERMISSION_ERROR_FORMAT, e.getMessage()), e);","lastModifiedDate":"2023-06-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-12-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            throw new CommandException(String.format(FILE_OPS_ERROR_FORMAT, ioe.getMessage()), ioe);","lastModifiedDate":"2023-06-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2018-12-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return model.getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return model.getFilteredPersonList();","lastModifiedDate":"2016-09-25"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-29"},{"lineNumber":75,"author":{"gitId":"Nixx162"},"content":"    @Override","lastModifiedDate":"2023-11-03"},{"lineNumber":76,"author":{"gitId":"Nixx162"},"content":"    public ObservableList\u003cEvent\u003e getFilteredEventList() {","lastModifiedDate":"2023-11-03"},{"lineNumber":77,"author":{"gitId":"Nixx162"},"content":"        return model.getFilteredEventList();","lastModifiedDate":"2023-11-03"},{"lineNumber":78,"author":{"gitId":"Nixx162"},"content":"    }","lastModifiedDate":"2023-11-03"},{"lineNumber":79,"author":{"gitId":"Nixx162"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":80,"author":{"gitId":"larrywang0701"},"content":"    @Override","lastModifiedDate":"2023-11-14"},{"lineNumber":81,"author":{"gitId":"larrywang0701"},"content":"    public ObservableList\u003cEvent\u003e getSortedFilteredEventList() {","lastModifiedDate":"2023-11-14"},{"lineNumber":82,"author":{"gitId":"larrywang0701"},"content":"        return model.getSortedFilteredEventList();","lastModifiedDate":"2023-11-14"},{"lineNumber":83,"author":{"gitId":"larrywang0701"},"content":"    }","lastModifiedDate":"2023-11-14"},{"lineNumber":84,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        return model.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"larrywang0701":5,"-":88,"Nixx162":6}},{"path":"src/main/java/seedu/address/logic/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2023-07-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2023-07-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-07-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-07-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":7,"author":{"gitId":"Nixx162"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2023-10-20"},{"lineNumber":8,"author":{"gitId":"Nixx162"},"content":"import seedu.address.logic.commands.AddEventCommand;","lastModifiedDate":"2023-10-20"},{"lineNumber":9,"author":{"gitId":"Nixx162"},"content":"import seedu.address.logic.commands.AddNoteCommand;","lastModifiedDate":"2023-10-20"},{"lineNumber":10,"author":{"gitId":"Nixx162"},"content":"import seedu.address.logic.commands.AddPersonCommand;","lastModifiedDate":"2023-10-20"},{"lineNumber":11,"author":{"gitId":"zekone"},"content":"import seedu.address.logic.commands.AddTagCommand;","lastModifiedDate":"2023-11-08"},{"lineNumber":12,"author":{"gitId":"Nixx162"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2023-10-20"},{"lineNumber":13,"author":{"gitId":"Nixx162"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2023-10-20"},{"lineNumber":14,"author":{"gitId":"Nixx162"},"content":"import seedu.address.logic.commands.DeleteEventCommand;","lastModifiedDate":"2023-10-20"},{"lineNumber":15,"author":{"gitId":"Nixx162"},"content":"import seedu.address.logic.commands.DeleteNoteCommand;","lastModifiedDate":"2023-10-20"},{"lineNumber":16,"author":{"gitId":"Nixx162"},"content":"import seedu.address.logic.commands.DeletePersonCommand;","lastModifiedDate":"2023-10-20"},{"lineNumber":17,"author":{"gitId":"zekone"},"content":"import seedu.address.logic.commands.DeleteTagCommand;","lastModifiedDate":"2023-11-08"},{"lineNumber":18,"author":{"gitId":"Nixx162"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2023-10-20"},{"lineNumber":19,"author":{"gitId":"Nixx162"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2023-10-20"},{"lineNumber":20,"author":{"gitId":"Nixx162"},"content":"import seedu.address.logic.commands.ListEventCommand;","lastModifiedDate":"2023-10-20"},{"lineNumber":21,"author":{"gitId":"Nixx162"},"content":"import seedu.address.logic.commands.ListPersonCommand;","lastModifiedDate":"2023-10-20"},{"lineNumber":22,"author":{"gitId":"Nixx162"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-20"},{"lineNumber":23,"author":{"gitId":"Nixx162"},"content":"import seedu.address.logic.parser.CliSyntax;","lastModifiedDate":"2023-10-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.Prefix;","lastModifiedDate":"2023-07-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2019-02-23"},{"lineNumber":26,"author":{"gitId":"Nixx162"},"content":"import seedu.address.ui.HelpWindow;","lastModifiedDate":"2023-10-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"zekone"},"content":"    public static final String MESSAGE_MISSING_SECONDARY_COMMAND \u003d","lastModifiedDate":"2023-11-09"},{"lineNumber":35,"author":{"gitId":"zekone"},"content":"            \"Please be more specific. Type \u0027help %1$s\u0027 for more details.\";","lastModifiedDate":"2023-11-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"larrywang0701"},"content":"    public static final String MESSAGE_START_TIME_AFTER_END_TIME \u003d \"Start time %s is after the end time %s!\\n\";","lastModifiedDate":"2023-11-01"},{"lineNumber":38,"author":{"gitId":"larrywang0701"},"content":"    public static final String MESSAGE_INVALID_INTEGER_ARGUMENT \u003d","lastModifiedDate":"2023-10-12"},{"lineNumber":39,"author":{"gitId":"larrywang0701"},"content":"            \"The provided argument is not a valid integer! \\n%1$s\";","lastModifiedDate":"2023-10-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_PERSON_DISPLAYED_INDEX \u003d \"The person index provided is invalid\";","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_PERSONS_LISTED_OVERVIEW \u003d \"%1$d persons listed!\";","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_FIELDS \u003d","lastModifiedDate":"2023-07-14"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                \"Multiple values specified for the following single-valued field(s): \";","lastModifiedDate":"2023-07-14"},{"lineNumber":44,"author":{"gitId":"Nixx162"},"content":"    public static final String ALL_HELP_MESSAGE_HEADER \u003d \"Here are the list of all commands available:\";","lastModifiedDate":"2023-10-20"},{"lineNumber":45,"author":{"gitId":"Nixx162"},"content":"    public static final String ALL_HELP_MESSAGE_FOOTER \u003d String.format(","lastModifiedDate":"2023-10-20"},{"lineNumber":46,"author":{"gitId":"Nixx162"},"content":"        \"Please type in \\\u0027help COMMAND_WORD\\\u0027 to know more, or visit our website at %s\", HelpWindow.USERGUIDE_URL);","lastModifiedDate":"2023-10-20"},{"lineNumber":47,"author":{"gitId":"Nixx162"},"content":"    public static final String HELP_MESSAGE_PROPOSE_ALTERNATIVE_FORMAT \u003d","lastModifiedDate":"2023-10-20"},{"lineNumber":48,"author":{"gitId":"Nixx162"},"content":"        \"Do you mean: %s? \\n Type in \\\u0027help\\\u0027 to see a list of the commands available\";","lastModifiedDate":"2023-10-20"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":50,"author":{"gitId":"larrywang0701"},"content":"    public static final String DUPLICATED_EVENTS \u003d \"\\\"Operation would result in duplicate events\\\"\";","lastModifiedDate":"2023-11-10"},{"lineNumber":51,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":52,"author":{"gitId":"larrywang0701"},"content":"    public static final String EVENT_OVERLAP \u003d \"Event %s overlaps with event %s\";","lastModifiedDate":"2023-11-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-07-14"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Returns an error message indicating the duplicate prefixes.","lastModifiedDate":"2023-07-14"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-07-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static String getErrorMessageForDuplicatePrefixes(Prefix... duplicatePrefixes) {","lastModifiedDate":"2023-07-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assert duplicatePrefixes.length \u003e 0;","lastModifiedDate":"2023-07-14"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        Set\u003cString\u003e duplicateFields \u003d","lastModifiedDate":"2023-07-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"                Stream.of(duplicatePrefixes).map(Prefix::toString).collect(Collectors.toSet());","lastModifiedDate":"2023-07-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return MESSAGE_DUPLICATE_FIELDS + String.join(\" \", duplicateFields);","lastModifiedDate":"2023-07-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-07-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-02-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * Formats the {@code person} for display to the user.","lastModifiedDate":"2019-02-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-02-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public static String format(Person person) {","lastModifiedDate":"2019-02-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2019-02-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        builder.append(person.getName())","lastModifiedDate":"2019-02-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"                .append(\"; Phone: \")","lastModifiedDate":"2019-02-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"                .append(person.getPhone())","lastModifiedDate":"2019-02-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"                .append(\"; Email: \")","lastModifiedDate":"2019-02-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                .append(person.getEmail())","lastModifiedDate":"2019-02-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"                .append(\"; Address: \")","lastModifiedDate":"2019-02-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                .append(person.getAddress())","lastModifiedDate":"2019-02-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                .append(\"; Tags: \");","lastModifiedDate":"2019-02-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        person.getTags().forEach(builder::append);","lastModifiedDate":"2019-02-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":83,"author":{"gitId":"Nixx162"},"content":"    public static String getHelpMessageForAll() {","lastModifiedDate":"2023-10-20"},{"lineNumber":84,"author":{"gitId":"Nixx162"},"content":"        StringBuilder out \u003d new StringBuilder();","lastModifiedDate":"2023-10-20"},{"lineNumber":85,"author":{"gitId":"Nixx162"},"content":"        out.append(ALL_HELP_MESSAGE_HEADER);","lastModifiedDate":"2023-10-20"},{"lineNumber":86,"author":{"gitId":"Nixx162"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":87,"author":{"gitId":"Nixx162"},"content":"        for (String s: CliSyntax.COMMAND_LIST) {","lastModifiedDate":"2023-10-20"},{"lineNumber":88,"author":{"gitId":"Nixx162"},"content":"            out.append(String.format(\"\\n - %s\", s));","lastModifiedDate":"2023-10-20"},{"lineNumber":89,"author":{"gitId":"Nixx162"},"content":"        }","lastModifiedDate":"2023-10-20"},{"lineNumber":90,"author":{"gitId":"Nixx162"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":91,"author":{"gitId":"Nixx162"},"content":"        out.append(\"\\n\" + ALL_HELP_MESSAGE_FOOTER);","lastModifiedDate":"2023-10-20"},{"lineNumber":92,"author":{"gitId":"Nixx162"},"content":"        return out.toString();","lastModifiedDate":"2023-10-20"},{"lineNumber":93,"author":{"gitId":"Nixx162"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":94,"author":{"gitId":"Nixx162"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":95,"author":{"gitId":"Nixx162"},"content":"    public static String getHelpMessageForRecognizableCommand(String command) throws CommandException {","lastModifiedDate":"2023-10-20"},{"lineNumber":96,"author":{"gitId":"Nixx162"},"content":"        switch (command) {","lastModifiedDate":"2023-10-20"},{"lineNumber":97,"author":{"gitId":"Nixx162"},"content":"        case AddCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-20"},{"lineNumber":98,"author":{"gitId":"zekone"},"content":"            return String.format(\"%s \\n\\n %s \\n\\n %s \\n\\n %s\",","lastModifiedDate":"2023-11-08"},{"lineNumber":99,"author":{"gitId":"Nixx162"},"content":"                AddEventCommand.MESSAGE_USAGE,","lastModifiedDate":"2023-10-20"},{"lineNumber":100,"author":{"gitId":"Nixx162"},"content":"                AddNoteCommand.MESSAGE_USAGE,","lastModifiedDate":"2023-10-20"},{"lineNumber":101,"author":{"gitId":"zekone"},"content":"                AddPersonCommand.MESSAGE_USAGE,","lastModifiedDate":"2023-11-08"},{"lineNumber":102,"author":{"gitId":"zekone"},"content":"                AddTagCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-11-08"},{"lineNumber":103,"author":{"gitId":"Nixx162"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":104,"author":{"gitId":"Nixx162"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-20"},{"lineNumber":105,"author":{"gitId":"zekone"},"content":"            return String.format(\"%s \\n\\n %s \\n\\n %s \\n\\n %s\",","lastModifiedDate":"2023-11-08"},{"lineNumber":106,"author":{"gitId":"Nixx162"},"content":"                DeleteEventCommand.MESSAGE_USAGE,","lastModifiedDate":"2023-10-20"},{"lineNumber":107,"author":{"gitId":"Nixx162"},"content":"                DeleteNoteCommand.MESSAGE_USAGE,","lastModifiedDate":"2023-10-20"},{"lineNumber":108,"author":{"gitId":"zekone"},"content":"                DeletePersonCommand.MESSAGE_USAGE,","lastModifiedDate":"2023-11-08"},{"lineNumber":109,"author":{"gitId":"zekone"},"content":"                DeleteTagCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-11-08"},{"lineNumber":110,"author":{"gitId":"Nixx162"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":111,"author":{"gitId":"Nixx162"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-20"},{"lineNumber":112,"author":{"gitId":"Nixx162"},"content":"            return ClearCommand.MESSAGE_USAGE;","lastModifiedDate":"2023-10-20"},{"lineNumber":113,"author":{"gitId":"Nixx162"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":114,"author":{"gitId":"Nixx162"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-20"},{"lineNumber":115,"author":{"gitId":"Nixx162"},"content":"            return FindCommand.MESSAGE_USAGE;","lastModifiedDate":"2023-10-20"},{"lineNumber":116,"author":{"gitId":"Nixx162"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":117,"author":{"gitId":"Nixx162"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-20"},{"lineNumber":118,"author":{"gitId":"zekone"},"content":"            return String.format(\"%s \\n\\n %s\",","lastModifiedDate":"2023-11-03"},{"lineNumber":119,"author":{"gitId":"zekone"},"content":"                ListPersonCommand.MESSAGE_USAGE,","lastModifiedDate":"2023-11-03"},{"lineNumber":120,"author":{"gitId":"zekone"},"content":"                ListEventCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-11-03"},{"lineNumber":121,"author":{"gitId":"Nixx162"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":122,"author":{"gitId":"Nixx162"},"content":"        default:","lastModifiedDate":"2023-10-20"},{"lineNumber":123,"author":{"gitId":"Nixx162"},"content":"            throw new CommandException(\"Unexpected input\");","lastModifiedDate":"2023-10-20"},{"lineNumber":124,"author":{"gitId":"Nixx162"},"content":"        }","lastModifiedDate":"2023-10-20"},{"lineNumber":125,"author":{"gitId":"Nixx162"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":126,"author":{"gitId":"Nixx162"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":127,"author":{"gitId":"Nixx162"},"content":"    public static String getHelpMessageForUnrecognizableCommand(String toShow) {","lastModifiedDate":"2023-10-20"},{"lineNumber":128,"author":{"gitId":"Nixx162"},"content":"        StringBuilder out \u003d new StringBuilder(Messages.MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2023-10-20"},{"lineNumber":129,"author":{"gitId":"Nixx162"},"content":"        out.append(toShow.isEmpty() ? \"\" : \"\\n\" + String.format(HELP_MESSAGE_PROPOSE_ALTERNATIVE_FORMAT, toShow));","lastModifiedDate":"2023-10-20"},{"lineNumber":130,"author":{"gitId":"Nixx162"},"content":"        return out.toString();","lastModifiedDate":"2023-10-20"},{"lineNumber":131,"author":{"gitId":"Nixx162"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":132,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"larrywang0701":6,"zekone":13,"-":52,"Nixx162":61}},{"path":"src/main/java/seedu/address/logic/commands/AddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"larrywang0701"},"content":" * The base class for all secondary {@code add} commands","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"larrywang0701"},"content":"public abstract class AddCommand extends Command {","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"larrywang0701":2,"-":7}},{"path":"src/main/java/seedu/address/logic/commands/AddEventCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"larrywang0701"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"larrywang0701"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"larrywang0701"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"larrywang0701"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"larrywang0701"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"larrywang0701"},"content":"import seedu.address.model.person.ContactID;","lastModifiedDate":"2023-10-25"},{"lineNumber":9,"author":{"gitId":"larrywang0701"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"larrywang0701"},"content":"/**","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"larrywang0701"},"content":" * The command handler for {@code add event} command","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"larrywang0701"},"content":" */","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"larrywang0701"},"content":"public class AddEventCommand extends AddCommand {","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"larrywang0701"},"content":"    public static final String SECONDARY_COMMAND_WORD \u003d \"event\";","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"larrywang0701"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New event added: \";","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"larrywang0701"},"content":"    public static final String MESSAGE_ERROR \u003d \"Error: \";","lastModifiedDate":"2023-11-01"},{"lineNumber":19,"author":{"gitId":"larrywang0701"},"content":"    public static final String MESSAGE_CONTACT_NOT_FOUND \u003d \"Can not find the target contact with ID: \";","lastModifiedDate":"2023-10-25"},{"lineNumber":20,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"larrywang0701"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \" \" + SECONDARY_COMMAND_WORD","lastModifiedDate":"2023-10-12"},{"lineNumber":22,"author":{"gitId":"larrywang0701"},"content":"            + \": Adds an event to a contact.\\n\"","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"zekone"},"content":"            + \"Usage:  add event -id CONTACT_ID -en EVENT_NAME -st \"","lastModifiedDate":"2023-11-08"},{"lineNumber":24,"author":{"gitId":"zekone"},"content":"            + \"START_TIME [-et END_TIME] [-loc LOCATION] [-info INFORMATION]\";","lastModifiedDate":"2023-11-08"},{"lineNumber":25,"author":{"gitId":"Nixx162"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":26,"author":{"gitId":"larrywang0701"},"content":"    private final Event toAdd;","lastModifiedDate":"2023-10-12"},{"lineNumber":27,"author":{"gitId":"larrywang0701"},"content":"    private final ContactID contactId;","lastModifiedDate":"2023-10-25"},{"lineNumber":28,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":29,"author":{"gitId":"larrywang0701"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":30,"author":{"gitId":"larrywang0701"},"content":"     * Creates an AddEventCommand to add the specified {@code Event}","lastModifiedDate":"2023-10-12"},{"lineNumber":31,"author":{"gitId":"larrywang0701"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":32,"author":{"gitId":"larrywang0701"},"content":"    public AddEventCommand(ContactID contactId, Event event) {","lastModifiedDate":"2023-10-25"},{"lineNumber":33,"author":{"gitId":"larrywang0701"},"content":"        requireNonNull(event);","lastModifiedDate":"2023-10-12"},{"lineNumber":34,"author":{"gitId":"larrywang0701"},"content":"        this.contactId \u003d contactId;","lastModifiedDate":"2023-10-12"},{"lineNumber":35,"author":{"gitId":"larrywang0701"},"content":"        this.toAdd \u003d event;","lastModifiedDate":"2023-10-12"},{"lineNumber":36,"author":{"gitId":"larrywang0701"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":37,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":38,"author":{"gitId":"larrywang0701"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":39,"author":{"gitId":"larrywang0701"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-12"},{"lineNumber":40,"author":{"gitId":"larrywang0701"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-12"},{"lineNumber":41,"author":{"gitId":"larrywang0701"},"content":"        Person person \u003d model.findPersonByUserFriendlyId(this.contactId);","lastModifiedDate":"2023-10-12"},{"lineNumber":42,"author":{"gitId":"larrywang0701"},"content":"        if (person \u003d\u003d null) {","lastModifiedDate":"2023-10-12"},{"lineNumber":43,"author":{"gitId":"larrywang0701"},"content":"            throw new CommandException(MESSAGE_CONTACT_NOT_FOUND + this.contactId.getId());","lastModifiedDate":"2023-10-25"},{"lineNumber":44,"author":{"gitId":"larrywang0701"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":45,"author":{"gitId":"larrywang0701"},"content":"        try {","lastModifiedDate":"2023-11-01"},{"lineNumber":46,"author":{"gitId":"larrywang0701"},"content":"            model.addEvent(this.toAdd, person);","lastModifiedDate":"2023-11-01"},{"lineNumber":47,"author":{"gitId":"larrywang0701"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-11-01"},{"lineNumber":48,"author":{"gitId":"larrywang0701"},"content":"            return new CommandResult(MESSAGE_ERROR + e.getMessage());","lastModifiedDate":"2023-11-01"},{"lineNumber":49,"author":{"gitId":"larrywang0701"},"content":"        }","lastModifiedDate":"2023-11-01"},{"lineNumber":50,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":51,"author":{"gitId":"larrywang0701"},"content":"        return new CommandResult(MESSAGE_SUCCESS + toAdd.getName());","lastModifiedDate":"2023-10-12"},{"lineNumber":52,"author":{"gitId":"larrywang0701"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":53,"author":{"gitId":"larrywang0701"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"larrywang0701":50,"zekone":2,"Nixx162":1}},{"path":"src/main/java/seedu/address/logic/commands/AddNoteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"josepholim"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-15"},{"lineNumber":2,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":3,"author":{"gitId":"josepholim"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-15"},{"lineNumber":4,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":5,"author":{"gitId":"josepholim"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-16"},{"lineNumber":6,"author":{"gitId":"josepholim"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-15"},{"lineNumber":7,"author":{"gitId":"josepholim"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-15"},{"lineNumber":8,"author":{"gitId":"josepholim"},"content":"import seedu.address.model.note.Note;","lastModifiedDate":"2023-10-15"},{"lineNumber":9,"author":{"gitId":"larrywang0701"},"content":"import seedu.address.model.person.ContactID;","lastModifiedDate":"2023-10-25"},{"lineNumber":10,"author":{"gitId":"josepholim"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-15"},{"lineNumber":11,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":12,"author":{"gitId":"josepholim"},"content":"/**","lastModifiedDate":"2023-10-15"},{"lineNumber":13,"author":{"gitId":"josepholim"},"content":" * The command handler for {@code add note} command","lastModifiedDate":"2023-10-15"},{"lineNumber":14,"author":{"gitId":"josepholim"},"content":" */","lastModifiedDate":"2023-10-15"},{"lineNumber":15,"author":{"gitId":"josepholim"},"content":"public class AddNoteCommand extends AddCommand {","lastModifiedDate":"2023-10-15"},{"lineNumber":16,"author":{"gitId":"josepholim"},"content":"    public static final String SECONDARY_COMMAND_WORD \u003d \"note\";","lastModifiedDate":"2023-10-15"},{"lineNumber":17,"author":{"gitId":"josepholim"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New note added: \";","lastModifiedDate":"2023-10-15"},{"lineNumber":18,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":19,"author":{"gitId":"josepholim"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \" \" + SECONDARY_COMMAND_WORD","lastModifiedDate":"2023-10-15"},{"lineNumber":20,"author":{"gitId":"josepholim"},"content":"            + \": Adds a note to a contact from the contact list.\\n\"","lastModifiedDate":"2023-10-15"},{"lineNumber":21,"author":{"gitId":"josepholim"},"content":"            + \"Usage:  add note -id CONTACT_ID -tit NOTE_TITLE -con NOTE_CONTENT\";","lastModifiedDate":"2023-10-15"},{"lineNumber":22,"author":{"gitId":"josepholim"},"content":"    public static final String MESSAGE_PERSON_NOT_FOUND \u003d \"Can not find the target contact with ID: \";","lastModifiedDate":"2023-10-15"},{"lineNumber":23,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":24,"author":{"gitId":"josepholim"},"content":"    private final Note toAdd;","lastModifiedDate":"2023-10-15"},{"lineNumber":25,"author":{"gitId":"josepholim"},"content":"    private final ContactID contactId;","lastModifiedDate":"2023-10-27"},{"lineNumber":26,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":27,"author":{"gitId":"josepholim"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":28,"author":{"gitId":"josepholim"},"content":"     * Creates an AddNoteCommand to add the specified {@code Note}","lastModifiedDate":"2023-10-15"},{"lineNumber":29,"author":{"gitId":"josepholim"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":30,"author":{"gitId":"josepholim"},"content":"    public AddNoteCommand(ContactID contactId, Note note) {","lastModifiedDate":"2023-10-27"},{"lineNumber":31,"author":{"gitId":"josepholim"},"content":"        requireNonNull(note);","lastModifiedDate":"2023-10-15"},{"lineNumber":32,"author":{"gitId":"josepholim"},"content":"        this.contactId \u003d contactId;","lastModifiedDate":"2023-10-15"},{"lineNumber":33,"author":{"gitId":"josepholim"},"content":"        this.toAdd \u003d note;","lastModifiedDate":"2023-10-15"},{"lineNumber":34,"author":{"gitId":"josepholim"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":35,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":36,"author":{"gitId":"josepholim"},"content":"    @Override","lastModifiedDate":"2023-10-15"},{"lineNumber":37,"author":{"gitId":"josepholim"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-15"},{"lineNumber":38,"author":{"gitId":"josepholim"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-15"},{"lineNumber":39,"author":{"gitId":"josepholim"},"content":"        Person person \u003d model.findPersonByUserFriendlyId(this.contactId);","lastModifiedDate":"2023-10-27"},{"lineNumber":40,"author":{"gitId":"josepholim"},"content":"        if (person \u003d\u003d null) {","lastModifiedDate":"2023-10-15"},{"lineNumber":41,"author":{"gitId":"josepholim"},"content":"            throw new CommandException(MESSAGE_PERSON_NOT_FOUND + this.contactId);","lastModifiedDate":"2023-10-15"},{"lineNumber":42,"author":{"gitId":"josepholim"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":43,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":44,"author":{"gitId":"josepholim"},"content":"        assert this.contactId.getId() \u003e 0 : \"Invalid contact ID\";","lastModifiedDate":"2023-11-13"},{"lineNumber":45,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":46,"author":{"gitId":"josepholim"},"content":"        person.addNote(this.toAdd);","lastModifiedDate":"2023-10-15"},{"lineNumber":47,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":48,"author":{"gitId":"josepholim"},"content":"        return new CommandResult(MESSAGE_SUCCESS + toAdd.getTitle());","lastModifiedDate":"2023-10-15"},{"lineNumber":49,"author":{"gitId":"josepholim"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":50,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":51,"author":{"gitId":"josepholim"},"content":"    @Override","lastModifiedDate":"2023-10-16"},{"lineNumber":52,"author":{"gitId":"josepholim"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-16"},{"lineNumber":53,"author":{"gitId":"josepholim"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-16"},{"lineNumber":54,"author":{"gitId":"josepholim"},"content":"            return true;","lastModifiedDate":"2023-10-16"},{"lineNumber":55,"author":{"gitId":"josepholim"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":56,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":57,"author":{"gitId":"josepholim"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-16"},{"lineNumber":58,"author":{"gitId":"josepholim"},"content":"        if (!(other instanceof AddNoteCommand)) {","lastModifiedDate":"2023-10-16"},{"lineNumber":59,"author":{"gitId":"josepholim"},"content":"            return false;","lastModifiedDate":"2023-10-16"},{"lineNumber":60,"author":{"gitId":"josepholim"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":61,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":62,"author":{"gitId":"josepholim"},"content":"        AddNoteCommand otherAddNoteCommand \u003d (AddNoteCommand) other;","lastModifiedDate":"2023-10-16"},{"lineNumber":63,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":64,"author":{"gitId":"josepholim"},"content":"        boolean equalToAdd \u003d toAdd.equals(otherAddNoteCommand.toAdd);","lastModifiedDate":"2023-10-16"},{"lineNumber":65,"author":{"gitId":"josepholim"},"content":"        boolean equalContactId \u003d contactId.equals(otherAddNoteCommand.contactId);","lastModifiedDate":"2023-10-27"},{"lineNumber":66,"author":{"gitId":"josepholim"},"content":"        return equalToAdd \u0026\u0026 equalContactId;","lastModifiedDate":"2023-10-16"},{"lineNumber":67,"author":{"gitId":"josepholim"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":68,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":69,"author":{"gitId":"josepholim"},"content":"    @Override","lastModifiedDate":"2023-10-16"},{"lineNumber":70,"author":{"gitId":"josepholim"},"content":"    public String toString() {","lastModifiedDate":"2023-10-16"},{"lineNumber":71,"author":{"gitId":"josepholim"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-10-16"},{"lineNumber":72,"author":{"gitId":"josepholim"},"content":"                .add(\"toAdd\", toAdd)","lastModifiedDate":"2023-10-16"},{"lineNumber":73,"author":{"gitId":"josepholim"},"content":"                .add(\"contactId\", contactId)","lastModifiedDate":"2023-10-16"},{"lineNumber":74,"author":{"gitId":"josepholim"},"content":"                .toString();","lastModifiedDate":"2023-10-16"},{"lineNumber":75,"author":{"gitId":"josepholim"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":76,"author":{"gitId":"josepholim"},"content":"}","lastModifiedDate":"2023-10-15"}],"authorContributionMap":{"larrywang0701":1,"josepholim":75}},{"path":"src/main/java/seedu/address/logic/commands/AddPersonCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"larrywang0701"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"larrywang0701"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"larrywang0701"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"larrywang0701"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"larrywang0701"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"larrywang0701"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"zekone"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-10-28"},{"lineNumber":9,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"larrywang0701"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"larrywang0701"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"larrywang0701"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"larrywang0701"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"larrywang0701"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"larrywang0701"},"content":"/**","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"larrywang0701"},"content":" * Adds a person to the address book.","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"larrywang0701"},"content":" */","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"larrywang0701"},"content":"public class AddPersonCommand extends AddCommand {","lastModifiedDate":"2023-10-12"},{"lineNumber":20,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"larrywang0701"},"content":"    public static final String SECONDARY_COMMAND_WORD \u003d \"contact\";","lastModifiedDate":"2023-10-12"},{"lineNumber":22,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"larrywang0701"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \" \"","lastModifiedDate":"2023-10-12"},{"lineNumber":24,"author":{"gitId":"larrywang0701"},"content":"            + SECONDARY_COMMAND_WORD","lastModifiedDate":"2023-10-12"},{"lineNumber":25,"author":{"gitId":"zekone"},"content":"            + \": Adds a contact to the contact list. \" + \"\\n\"","lastModifiedDate":"2023-11-08"},{"lineNumber":26,"author":{"gitId":"zekone"},"content":"            + \"Usage: \"","lastModifiedDate":"2023-11-08"},{"lineNumber":27,"author":{"gitId":"zekone"},"content":"            + COMMAND_WORD + \" \"","lastModifiedDate":"2023-11-08"},{"lineNumber":28,"author":{"gitId":"zekone"},"content":"            + SECONDARY_COMMAND_WORD + \" \"","lastModifiedDate":"2023-11-08"},{"lineNumber":29,"author":{"gitId":"larrywang0701"},"content":"            + PREFIX_NAME + \" NAME \"","lastModifiedDate":"2023-10-12"},{"lineNumber":30,"author":{"gitId":"larrywang0701"},"content":"            + PREFIX_PHONE + \" PHONE \"","lastModifiedDate":"2023-10-12"},{"lineNumber":31,"author":{"gitId":"larrywang0701"},"content":"            + PREFIX_EMAIL + \" EMAIL \"","lastModifiedDate":"2023-10-12"},{"lineNumber":32,"author":{"gitId":"zekone"},"content":"            + PREFIX_ADDRESS + \" ADDRESS \"","lastModifiedDate":"2023-10-28"},{"lineNumber":33,"author":{"gitId":"zekone"},"content":"            + \"[\" + PREFIX_TAG + \" TAGNAME...]\" + \"\\n\"","lastModifiedDate":"2023-11-08"},{"lineNumber":34,"author":{"gitId":"zekone"},"content":"            + \"Example: \"","lastModifiedDate":"2023-11-08"},{"lineNumber":35,"author":{"gitId":"zekone"},"content":"            + COMMAND_WORD + \" \"","lastModifiedDate":"2023-11-08"},{"lineNumber":36,"author":{"gitId":"zekone"},"content":"            + SECONDARY_COMMAND_WORD + \" \"","lastModifiedDate":"2023-11-08"},{"lineNumber":37,"author":{"gitId":"larrywang0701"},"content":"            + PREFIX_NAME + \" John Doe \"","lastModifiedDate":"2023-10-12"},{"lineNumber":38,"author":{"gitId":"larrywang0701"},"content":"            + PREFIX_PHONE + \" 98765432 \"","lastModifiedDate":"2023-10-12"},{"lineNumber":39,"author":{"gitId":"larrywang0701"},"content":"            + PREFIX_EMAIL + \" johnd@example.com \"","lastModifiedDate":"2023-10-12"},{"lineNumber":40,"author":{"gitId":"zekone"},"content":"            + PREFIX_ADDRESS + \" 311, Clementi Ave 2, #02-25 \"","lastModifiedDate":"2023-10-28"},{"lineNumber":41,"author":{"gitId":"zekone"},"content":"            + PREFIX_TAG + \" frontend \";","lastModifiedDate":"2023-10-28"},{"lineNumber":42,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":43,"author":{"gitId":"AndrewJanong"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New contact added: %1$s\";","lastModifiedDate":"2023-10-14"},{"lineNumber":44,"author":{"gitId":"AndrewJanong"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This contact already exists in the contact list\";","lastModifiedDate":"2023-10-14"},{"lineNumber":45,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":46,"author":{"gitId":"larrywang0701"},"content":"    private final Person toAdd;","lastModifiedDate":"2023-10-12"},{"lineNumber":47,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":48,"author":{"gitId":"larrywang0701"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":49,"author":{"gitId":"larrywang0701"},"content":"     * Creates an AddPersonCommand to add the specified {@code Person}","lastModifiedDate":"2023-10-12"},{"lineNumber":50,"author":{"gitId":"larrywang0701"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":51,"author":{"gitId":"larrywang0701"},"content":"    public AddPersonCommand(Person person) {","lastModifiedDate":"2023-10-12"},{"lineNumber":52,"author":{"gitId":"larrywang0701"},"content":"        requireNonNull(person);","lastModifiedDate":"2023-10-12"},{"lineNumber":53,"author":{"gitId":"larrywang0701"},"content":"        toAdd \u003d person;","lastModifiedDate":"2023-10-12"},{"lineNumber":54,"author":{"gitId":"larrywang0701"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":55,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":56,"author":{"gitId":"larrywang0701"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":57,"author":{"gitId":"larrywang0701"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-12"},{"lineNumber":58,"author":{"gitId":"larrywang0701"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-12"},{"lineNumber":59,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":60,"author":{"gitId":"larrywang0701"},"content":"        if (model.hasPerson(toAdd)) {","lastModifiedDate":"2023-10-12"},{"lineNumber":61,"author":{"gitId":"larrywang0701"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2023-10-12"},{"lineNumber":62,"author":{"gitId":"larrywang0701"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":63,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":64,"author":{"gitId":"larrywang0701"},"content":"        model.addPerson(toAdd);","lastModifiedDate":"2023-10-12"},{"lineNumber":65,"author":{"gitId":"larrywang0701"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, Messages.format(toAdd)));","lastModifiedDate":"2023-10-12"},{"lineNumber":66,"author":{"gitId":"larrywang0701"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":67,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":68,"author":{"gitId":"larrywang0701"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":69,"author":{"gitId":"larrywang0701"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-12"},{"lineNumber":70,"author":{"gitId":"larrywang0701"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-12"},{"lineNumber":71,"author":{"gitId":"larrywang0701"},"content":"            return true;","lastModifiedDate":"2023-10-12"},{"lineNumber":72,"author":{"gitId":"larrywang0701"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":73,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":74,"author":{"gitId":"larrywang0701"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-12"},{"lineNumber":75,"author":{"gitId":"larrywang0701"},"content":"        if (!(other instanceof AddPersonCommand)) {","lastModifiedDate":"2023-10-12"},{"lineNumber":76,"author":{"gitId":"larrywang0701"},"content":"            return false;","lastModifiedDate":"2023-10-12"},{"lineNumber":77,"author":{"gitId":"larrywang0701"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":78,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":79,"author":{"gitId":"larrywang0701"},"content":"        AddPersonCommand otherAddPersonCommand \u003d (AddPersonCommand) other;","lastModifiedDate":"2023-10-12"},{"lineNumber":80,"author":{"gitId":"larrywang0701"},"content":"        return toAdd.equals(otherAddPersonCommand.toAdd);","lastModifiedDate":"2023-10-12"},{"lineNumber":81,"author":{"gitId":"larrywang0701"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":82,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":83,"author":{"gitId":"larrywang0701"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":84,"author":{"gitId":"larrywang0701"},"content":"    public String toString() {","lastModifiedDate":"2023-10-12"},{"lineNumber":85,"author":{"gitId":"larrywang0701"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-10-12"},{"lineNumber":86,"author":{"gitId":"larrywang0701"},"content":"                .add(\"toAdd\", toAdd)","lastModifiedDate":"2023-10-12"},{"lineNumber":87,"author":{"gitId":"larrywang0701"},"content":"                .toString();","lastModifiedDate":"2023-10-12"},{"lineNumber":88,"author":{"gitId":"larrywang0701"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":89,"author":{"gitId":"larrywang0701"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"larrywang0701":75,"zekone":12,"AndrewJanong":2}},{"path":"src/main/java/seedu/address/logic/commands/AddTagCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zekone"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-27"},{"lineNumber":2,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":3,"author":{"gitId":"zekone"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-27"},{"lineNumber":4,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":5,"author":{"gitId":"zekone"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-27"},{"lineNumber":6,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":7,"author":{"gitId":"zekone"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-27"},{"lineNumber":8,"author":{"gitId":"zekone"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-27"},{"lineNumber":9,"author":{"gitId":"zekone"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-27"},{"lineNumber":10,"author":{"gitId":"zekone"},"content":"import seedu.address.model.person.ContactID;","lastModifiedDate":"2023-10-27"},{"lineNumber":11,"author":{"gitId":"zekone"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-27"},{"lineNumber":12,"author":{"gitId":"zekone"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-10-27"},{"lineNumber":13,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":14,"author":{"gitId":"zekone"},"content":"/**","lastModifiedDate":"2023-10-27"},{"lineNumber":15,"author":{"gitId":"zekone"},"content":" * The command handler for {@code add tag} command","lastModifiedDate":"2023-10-27"},{"lineNumber":16,"author":{"gitId":"zekone"},"content":" */","lastModifiedDate":"2023-10-27"},{"lineNumber":17,"author":{"gitId":"zekone"},"content":"public class AddTagCommand extends AddCommand {","lastModifiedDate":"2023-10-27"},{"lineNumber":18,"author":{"gitId":"zekone"},"content":"    public static final String SECONDARY_COMMAND_WORD \u003d \"tag\";","lastModifiedDate":"2023-10-27"},{"lineNumber":19,"author":{"gitId":"zekone"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New tags added: \";","lastModifiedDate":"2023-10-27"},{"lineNumber":20,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":21,"author":{"gitId":"zekone"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \" \" + SECONDARY_COMMAND_WORD","lastModifiedDate":"2023-10-27"},{"lineNumber":22,"author":{"gitId":"zekone"},"content":"            + \": Adds tags to a contact from the contact list.\\n\"","lastModifiedDate":"2023-10-27"},{"lineNumber":23,"author":{"gitId":"zekone"},"content":"            + \"Usage:  add tag -id CONTACT_ID -t TAGNAME...\";","lastModifiedDate":"2023-11-08"},{"lineNumber":24,"author":{"gitId":"zekone"},"content":"    public static final String MESSAGE_PERSON_NOT_FOUND \u003d \"Can not find the target contact with ID: \";","lastModifiedDate":"2023-10-27"},{"lineNumber":25,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":26,"author":{"gitId":"zekone"},"content":"    private final Set\u003cTag\u003e toAdd;","lastModifiedDate":"2023-10-27"},{"lineNumber":27,"author":{"gitId":"zekone"},"content":"    private final int contactId;","lastModifiedDate":"2023-10-27"},{"lineNumber":28,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":29,"author":{"gitId":"zekone"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":30,"author":{"gitId":"zekone"},"content":"     * Creates an AddTagCommand to add the specified {@code Tag}(s).","lastModifiedDate":"2023-10-27"},{"lineNumber":31,"author":{"gitId":"zekone"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":32,"author":{"gitId":"zekone"},"content":"    public AddTagCommand(int contactId, Set\u003cTag\u003e tagList) {","lastModifiedDate":"2023-10-27"},{"lineNumber":33,"author":{"gitId":"zekone"},"content":"        requireNonNull(tagList);","lastModifiedDate":"2023-10-27"},{"lineNumber":34,"author":{"gitId":"zekone"},"content":"        this.contactId \u003d contactId;","lastModifiedDate":"2023-10-27"},{"lineNumber":35,"author":{"gitId":"zekone"},"content":"        this.toAdd \u003d tagList;","lastModifiedDate":"2023-10-27"},{"lineNumber":36,"author":{"gitId":"zekone"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":37,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":38,"author":{"gitId":"zekone"},"content":"    @Override","lastModifiedDate":"2023-10-27"},{"lineNumber":39,"author":{"gitId":"zekone"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-27"},{"lineNumber":40,"author":{"gitId":"zekone"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-27"},{"lineNumber":41,"author":{"gitId":"zekone"},"content":"        Person person \u003d model.findPersonByUserFriendlyId(ContactID.fromInt(this.contactId));","lastModifiedDate":"2023-10-27"},{"lineNumber":42,"author":{"gitId":"zekone"},"content":"        if (person \u003d\u003d null) {","lastModifiedDate":"2023-10-27"},{"lineNumber":43,"author":{"gitId":"zekone"},"content":"            throw new CommandException(MESSAGE_PERSON_NOT_FOUND + this.contactId);","lastModifiedDate":"2023-10-27"},{"lineNumber":44,"author":{"gitId":"zekone"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":45,"author":{"gitId":"Nixx162"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":46,"author":{"gitId":"Nixx162"},"content":"        Person toEdit \u003d person;","lastModifiedDate":"2023-11-09"},{"lineNumber":47,"author":{"gitId":"Nixx162"},"content":"        toEdit.addTags(this.toAdd);","lastModifiedDate":"2023-11-09"},{"lineNumber":48,"author":{"gitId":"Nixx162"},"content":"        model.setPerson(person, toEdit);","lastModifiedDate":"2023-11-09"},{"lineNumber":49,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":50,"author":{"gitId":"zekone"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2023-10-27"},{"lineNumber":51,"author":{"gitId":"zekone"},"content":"        builder.append(MESSAGE_SUCCESS);","lastModifiedDate":"2023-10-27"},{"lineNumber":52,"author":{"gitId":"zekone"},"content":"        toAdd.forEach(builder::append);","lastModifiedDate":"2023-10-27"},{"lineNumber":53,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":54,"author":{"gitId":"zekone"},"content":"        return new CommandResult(builder.toString());","lastModifiedDate":"2023-10-27"},{"lineNumber":55,"author":{"gitId":"zekone"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":56,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":57,"author":{"gitId":"zekone"},"content":"    @Override","lastModifiedDate":"2023-10-27"},{"lineNumber":58,"author":{"gitId":"zekone"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-27"},{"lineNumber":59,"author":{"gitId":"zekone"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-27"},{"lineNumber":60,"author":{"gitId":"zekone"},"content":"            return true;","lastModifiedDate":"2023-10-27"},{"lineNumber":61,"author":{"gitId":"zekone"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":62,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":63,"author":{"gitId":"zekone"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-27"},{"lineNumber":64,"author":{"gitId":"zekone"},"content":"        if (!(other instanceof AddTagCommand)) {","lastModifiedDate":"2023-10-27"},{"lineNumber":65,"author":{"gitId":"zekone"},"content":"            return false;","lastModifiedDate":"2023-10-27"},{"lineNumber":66,"author":{"gitId":"zekone"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":67,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":68,"author":{"gitId":"zekone"},"content":"        AddTagCommand otherAddNoteCommand \u003d (AddTagCommand) other;","lastModifiedDate":"2023-10-27"},{"lineNumber":69,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":70,"author":{"gitId":"zekone"},"content":"        boolean equalToAdd \u003d toAdd.equals(otherAddNoteCommand.toAdd);","lastModifiedDate":"2023-10-27"},{"lineNumber":71,"author":{"gitId":"zekone"},"content":"        boolean equalContactId \u003d (contactId \u003d\u003d otherAddNoteCommand.contactId);","lastModifiedDate":"2023-10-27"},{"lineNumber":72,"author":{"gitId":"zekone"},"content":"        return equalToAdd \u0026\u0026 equalContactId;","lastModifiedDate":"2023-10-27"},{"lineNumber":73,"author":{"gitId":"zekone"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":74,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":75,"author":{"gitId":"zekone"},"content":"    @Override","lastModifiedDate":"2023-10-27"},{"lineNumber":76,"author":{"gitId":"zekone"},"content":"    public String toString() {","lastModifiedDate":"2023-10-27"},{"lineNumber":77,"author":{"gitId":"zekone"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-10-27"},{"lineNumber":78,"author":{"gitId":"zekone"},"content":"                .add(\"toAdd\", toAdd)","lastModifiedDate":"2023-10-27"},{"lineNumber":79,"author":{"gitId":"zekone"},"content":"                .add(\"contactId\", contactId)","lastModifiedDate":"2023-10-27"},{"lineNumber":80,"author":{"gitId":"zekone"},"content":"                .toString();","lastModifiedDate":"2023-10-27"},{"lineNumber":81,"author":{"gitId":"zekone"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":82,"author":{"gitId":"zekone"},"content":"}","lastModifiedDate":"2023-10-27"}],"authorContributionMap":{"zekone":78,"Nixx162":4}},{"path":"src/main/java/seedu/address/logic/commands/ClearCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Clears the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ClearCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"clear\";","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"zekone"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"All entries has been cleared!\";","lastModifiedDate":"2023-11-08"},{"lineNumber":15,"author":{"gitId":"zekone"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Clears all KeepInTouch entries\";","lastModifiedDate":"2023-11-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        model.setAddressBook(new AddressBook());","lastModifiedDate":"2018-11-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"zekone":2,"-":21}},{"path":"src/main/java/seedu/address/logic/commands/CommandResult.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2018-12-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Represents the result of a command execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class CommandResult {","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private final String feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /** The application should exit. */","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private final boolean exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"Nixx162"},"content":"    private final boolean listEvent;","lastModifiedDate":"2023-11-03"},{"lineNumber":20,"author":{"gitId":"Nixx162"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified fields.","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"Nixx162"},"content":"    public CommandResult(String feedbackToUser, boolean exit, boolean listEvent) {","lastModifiedDate":"2023-11-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.feedbackToUser \u003d requireNonNull(feedbackToUser);","lastModifiedDate":"2017-05-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        this.exit \u003d exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"Nixx162"},"content":"        this.listEvent \u003d listEvent;","lastModifiedDate":"2023-11-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified {@code feedbackToUser},","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * and other fields set to their default value.","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public CommandResult(String feedbackToUser) {","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this(feedbackToUser, false, false);","lastModifiedDate":"2023-11-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public String getFeedbackToUser() {","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public boolean isExit() {","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"Nixx162"},"content":"    public boolean isListEvent() {","lastModifiedDate":"2023-11-03"},{"lineNumber":47,"author":{"gitId":"Nixx162"},"content":"        return listEvent;","lastModifiedDate":"2023-11-03"},{"lineNumber":48,"author":{"gitId":"Nixx162"},"content":"    }","lastModifiedDate":"2023-11-03"},{"lineNumber":49,"author":{"gitId":"Nixx162"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        if (!(other instanceof CommandResult)) {","lastModifiedDate":"2018-12-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-12-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        CommandResult otherCommandResult \u003d (CommandResult) other;","lastModifiedDate":"2018-12-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return feedbackToUser.equals(otherCommandResult.feedbackToUser)","lastModifiedDate":"2018-12-09"},{"lineNumber":63,"author":{"gitId":"Nixx162"},"content":"                \u0026\u0026 exit \u003d\u003d otherCommandResult.exit","lastModifiedDate":"2023-11-03"},{"lineNumber":64,"author":{"gitId":"Nixx162"},"content":"                \u0026\u0026 listEvent \u003d\u003d otherCommandResult.listEvent;","lastModifiedDate":"2023-11-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":69,"author":{"gitId":"Nixx162"},"content":"        return Objects.hash(feedbackToUser, exit);","lastModifiedDate":"2023-10-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                .add(\"feedbackToUser\", feedbackToUser)","lastModifiedDate":"2019-02-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"                .add(\"exit\", exit)","lastModifiedDate":"2019-02-23"},{"lineNumber":77,"author":{"gitId":"Nixx162"},"content":"                .add(\"listEvent\", listEvent)","lastModifiedDate":"2023-11-03"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"-":69,"Nixx162":12}},{"path":"src/main/java/seedu/address/logic/commands/DeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"larrywang0701"},"content":" * The base class for all secondary {@code delete} commands","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"larrywang0701"},"content":"public abstract class DeleteCommand extends Command {","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"larrywang0701":2,"-":6}},{"path":"src/main/java/seedu/address/logic/commands/DeleteEventCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"larrywang0701"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"larrywang0701"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"larrywang0701"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"larrywang0701"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"larrywang0701"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2023-10-25"},{"lineNumber":8,"author":{"gitId":"larrywang0701"},"content":"import seedu.address.model.event.EventID;","lastModifiedDate":"2023-10-25"},{"lineNumber":9,"author":{"gitId":"larrywang0701"},"content":"import seedu.address.model.event.exceptions.EventNotFoundException;","lastModifiedDate":"2023-11-01"},{"lineNumber":10,"author":{"gitId":"larrywang0701"},"content":"import seedu.address.model.person.ContactID;","lastModifiedDate":"2023-10-25"},{"lineNumber":11,"author":{"gitId":"larrywang0701"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"larrywang0701"},"content":"/**","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"larrywang0701"},"content":" * The command handler for {@code delete event} command","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"larrywang0701"},"content":" */","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"larrywang0701"},"content":"public class DeleteEventCommand extends DeleteCommand {","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"larrywang0701"},"content":"    public static final String SECONDARY_COMMAND_WORD \u003d \"event\";","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"larrywang0701"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \" \"","lastModifiedDate":"2023-10-12"},{"lineNumber":20,"author":{"gitId":"larrywang0701"},"content":"            + SECONDARY_COMMAND_WORD + \": Deletes an event from a contact.\\n\"","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"larrywang0701"},"content":"            + \"Usage:  delete event -id CONTACT_ID -eid EVENT_ID\";","lastModifiedDate":"2023-10-25"},{"lineNumber":22,"author":{"gitId":"Nixx162"},"content":"    public static final String MESSAGE_PERSON_NOT_FOUND \u003d \"Can not find the target contact with ID: \";","lastModifiedDate":"2023-10-17"},{"lineNumber":23,"author":{"gitId":"larrywang0701"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Successfully deleted event: \";","lastModifiedDate":"2023-10-12"},{"lineNumber":24,"author":{"gitId":"larrywang0701"},"content":"    public static final String MESSAGE_EVENT_NOT_FOUND \u003d \"Event not found: ID \u003d \";","lastModifiedDate":"2023-10-12"},{"lineNumber":25,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"larrywang0701"},"content":"    private final EventID eventIdToDelete;","lastModifiedDate":"2023-10-25"},{"lineNumber":27,"author":{"gitId":"larrywang0701"},"content":"    private final ContactID contactId;","lastModifiedDate":"2023-10-25"},{"lineNumber":28,"author":{"gitId":"larrywang0701"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":29,"author":{"gitId":"larrywang0701"},"content":"     * Creates an DeleteEventCommand to delete the specified {@code Event}","lastModifiedDate":"2023-10-12"},{"lineNumber":30,"author":{"gitId":"larrywang0701"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":31,"author":{"gitId":"larrywang0701"},"content":"    public DeleteEventCommand(ContactID contactId, EventID eventIdToDelete) {","lastModifiedDate":"2023-10-25"},{"lineNumber":32,"author":{"gitId":"larrywang0701"},"content":"        this.contactId \u003d contactId;","lastModifiedDate":"2023-10-12"},{"lineNumber":33,"author":{"gitId":"larrywang0701"},"content":"        this.eventIdToDelete \u003d eventIdToDelete;","lastModifiedDate":"2023-10-12"},{"lineNumber":34,"author":{"gitId":"larrywang0701"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":35,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":36,"author":{"gitId":"larrywang0701"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":37,"author":{"gitId":"larrywang0701"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-12"},{"lineNumber":38,"author":{"gitId":"larrywang0701"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-12"},{"lineNumber":39,"author":{"gitId":"larrywang0701"},"content":"        Person person \u003d model.findPersonByUserFriendlyId(this.contactId);","lastModifiedDate":"2023-10-12"},{"lineNumber":40,"author":{"gitId":"larrywang0701"},"content":"        if (person \u003d\u003d null) {","lastModifiedDate":"2023-10-12"},{"lineNumber":41,"author":{"gitId":"Nixx162"},"content":"            throw new CommandException(MESSAGE_PERSON_NOT_FOUND + this.contactId);","lastModifiedDate":"2023-10-17"},{"lineNumber":42,"author":{"gitId":"larrywang0701"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":43,"author":{"gitId":"larrywang0701"},"content":"        try {","lastModifiedDate":"2023-11-01"},{"lineNumber":44,"author":{"gitId":"larrywang0701"},"content":"            Event deletedEvent \u003d model.removeEventByID(this.eventIdToDelete, person);","lastModifiedDate":"2023-11-01"},{"lineNumber":45,"author":{"gitId":"larrywang0701"},"content":"            return new CommandResult(MESSAGE_SUCCESS + this.eventIdToDelete","lastModifiedDate":"2023-11-01"},{"lineNumber":46,"author":{"gitId":"larrywang0701"},"content":"                    + \". \" + deletedEvent.getName());","lastModifiedDate":"2023-11-01"},{"lineNumber":47,"author":{"gitId":"larrywang0701"},"content":"        } catch (EventNotFoundException e) {","lastModifiedDate":"2023-11-01"},{"lineNumber":48,"author":{"gitId":"larrywang0701"},"content":"            throw new CommandException(MESSAGE_EVENT_NOT_FOUND + this.eventIdToDelete);","lastModifiedDate":"2023-10-12"},{"lineNumber":49,"author":{"gitId":"larrywang0701"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":50,"author":{"gitId":"larrywang0701"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":51,"author":{"gitId":"larrywang0701"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"larrywang0701":49,"Nixx162":2}},{"path":"src/main/java/seedu/address/logic/commands/DeleteNoteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"josepholim"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-15"},{"lineNumber":2,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":3,"author":{"gitId":"josepholim"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-15"},{"lineNumber":4,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":5,"author":{"gitId":"josepholim"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-16"},{"lineNumber":6,"author":{"gitId":"josepholim"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-15"},{"lineNumber":7,"author":{"gitId":"josepholim"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-15"},{"lineNumber":8,"author":{"gitId":"josepholim"},"content":"import seedu.address.model.note.Note;","lastModifiedDate":"2023-10-27"},{"lineNumber":9,"author":{"gitId":"josepholim"},"content":"import seedu.address.model.note.NoteID;","lastModifiedDate":"2023-10-27"},{"lineNumber":10,"author":{"gitId":"larrywang0701"},"content":"import seedu.address.model.person.ContactID;","lastModifiedDate":"2023-10-25"},{"lineNumber":11,"author":{"gitId":"josepholim"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-15"},{"lineNumber":12,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":13,"author":{"gitId":"josepholim"},"content":"/**","lastModifiedDate":"2023-10-15"},{"lineNumber":14,"author":{"gitId":"josepholim"},"content":" * The command handler for {@code delete note} command","lastModifiedDate":"2023-10-15"},{"lineNumber":15,"author":{"gitId":"josepholim"},"content":" */","lastModifiedDate":"2023-10-15"},{"lineNumber":16,"author":{"gitId":"josepholim"},"content":"public class DeleteNoteCommand extends DeleteCommand {","lastModifiedDate":"2023-10-15"},{"lineNumber":17,"author":{"gitId":"josepholim"},"content":"    public static final String SECONDARY_COMMAND_WORD \u003d \"note\";","lastModifiedDate":"2023-10-15"},{"lineNumber":18,"author":{"gitId":"josepholim"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \" \"","lastModifiedDate":"2023-10-15"},{"lineNumber":19,"author":{"gitId":"josepholim"},"content":"            + SECONDARY_COMMAND_WORD + \": Deletes a note from a contact.\\n\"","lastModifiedDate":"2023-10-15"},{"lineNumber":20,"author":{"gitId":"josepholim"},"content":"            + \"Usage:  delete note -id CONTACT_ID -nid NOTE_ID\";","lastModifiedDate":"2023-10-15"},{"lineNumber":21,"author":{"gitId":"josepholim"},"content":"    public static final String MESSAGE_PERSON_NOT_FOUND \u003d \"Can not find the target contact with ID: \";","lastModifiedDate":"2023-10-15"},{"lineNumber":22,"author":{"gitId":"josepholim"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Successfully deleted note: \";","lastModifiedDate":"2023-10-15"},{"lineNumber":23,"author":{"gitId":"josepholim"},"content":"    public static final String MESSAGE_NOTE_NOT_FOUND \u003d \"Note not found: ID \u003d \";","lastModifiedDate":"2023-10-15"},{"lineNumber":24,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":25,"author":{"gitId":"josepholim"},"content":"    private final NoteID noteIdToDelete;","lastModifiedDate":"2023-10-27"},{"lineNumber":26,"author":{"gitId":"josepholim"},"content":"    private final ContactID contactId;","lastModifiedDate":"2023-10-27"},{"lineNumber":27,"author":{"gitId":"josepholim"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":28,"author":{"gitId":"josepholim"},"content":"     * Creates a DeleteNoteCommand to delete the specified {@code Note}","lastModifiedDate":"2023-10-27"},{"lineNumber":29,"author":{"gitId":"josepholim"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":30,"author":{"gitId":"josepholim"},"content":"    public DeleteNoteCommand(ContactID contactId, NoteID noteIdToDelete) {","lastModifiedDate":"2023-10-27"},{"lineNumber":31,"author":{"gitId":"josepholim"},"content":"        this.contactId \u003d contactId;","lastModifiedDate":"2023-10-15"},{"lineNumber":32,"author":{"gitId":"josepholim"},"content":"        this.noteIdToDelete \u003d noteIdToDelete;","lastModifiedDate":"2023-10-15"},{"lineNumber":33,"author":{"gitId":"josepholim"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":34,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":35,"author":{"gitId":"josepholim"},"content":"    @Override","lastModifiedDate":"2023-10-15"},{"lineNumber":36,"author":{"gitId":"josepholim"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-15"},{"lineNumber":37,"author":{"gitId":"josepholim"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-15"},{"lineNumber":38,"author":{"gitId":"josepholim"},"content":"        Person person \u003d model.findPersonByUserFriendlyId(this.contactId);","lastModifiedDate":"2023-10-27"},{"lineNumber":39,"author":{"gitId":"josepholim"},"content":"        if (person \u003d\u003d null) {","lastModifiedDate":"2023-10-15"},{"lineNumber":40,"author":{"gitId":"josepholim"},"content":"            throw new CommandException(MESSAGE_PERSON_NOT_FOUND + this.contactId);","lastModifiedDate":"2023-10-15"},{"lineNumber":41,"author":{"gitId":"josepholim"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":42,"author":{"gitId":"josepholim"},"content":"        assert this.contactId.getId() \u003e 0 : \"Invalid contact ID\";","lastModifiedDate":"2023-11-13"},{"lineNumber":43,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":44,"author":{"gitId":"josepholim"},"content":"        Note deletedNote \u003d person.removeNoteByUserFriendlyId(this.noteIdToDelete);","lastModifiedDate":"2023-10-27"},{"lineNumber":45,"author":{"gitId":"josepholim"},"content":"        if (deletedNote \u003d\u003d null) {","lastModifiedDate":"2023-10-27"},{"lineNumber":46,"author":{"gitId":"josepholim"},"content":"            throw new CommandException(MESSAGE_NOTE_NOT_FOUND + this.noteIdToDelete);","lastModifiedDate":"2023-10-15"},{"lineNumber":47,"author":{"gitId":"josepholim"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":48,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":49,"author":{"gitId":"josepholim"},"content":"        assert this.noteIdToDelete.getId() \u003e 0 : \"Invalid note ID\";","lastModifiedDate":"2023-11-13"},{"lineNumber":50,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":51,"author":{"gitId":"josepholim"},"content":"        return new CommandResult(MESSAGE_SUCCESS + this.noteIdToDelete + \". \" + deletedNote.getTitle());","lastModifiedDate":"2023-10-27"},{"lineNumber":52,"author":{"gitId":"josepholim"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":53,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":54,"author":{"gitId":"josepholim"},"content":"    @Override","lastModifiedDate":"2023-10-16"},{"lineNumber":55,"author":{"gitId":"josepholim"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-16"},{"lineNumber":56,"author":{"gitId":"josepholim"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-16"},{"lineNumber":57,"author":{"gitId":"josepholim"},"content":"            return true;","lastModifiedDate":"2023-10-16"},{"lineNumber":58,"author":{"gitId":"josepholim"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":59,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":60,"author":{"gitId":"josepholim"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-16"},{"lineNumber":61,"author":{"gitId":"josepholim"},"content":"        if (!(other instanceof DeleteNoteCommand)) {","lastModifiedDate":"2023-10-16"},{"lineNumber":62,"author":{"gitId":"josepholim"},"content":"            return false;","lastModifiedDate":"2023-10-16"},{"lineNumber":63,"author":{"gitId":"josepholim"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":64,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":65,"author":{"gitId":"josepholim"},"content":"        DeleteNoteCommand otherDeleteNoteCommand \u003d (DeleteNoteCommand) other;","lastModifiedDate":"2023-10-16"},{"lineNumber":66,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":67,"author":{"gitId":"josepholim"},"content":"        boolean equalNoteIdToDelete \u003d noteIdToDelete.equals(otherDeleteNoteCommand.noteIdToDelete);","lastModifiedDate":"2023-10-27"},{"lineNumber":68,"author":{"gitId":"josepholim"},"content":"        boolean equalContactId \u003d contactId.equals(otherDeleteNoteCommand.contactId);","lastModifiedDate":"2023-10-27"},{"lineNumber":69,"author":{"gitId":"josepholim"},"content":"        return equalNoteIdToDelete \u0026\u0026 equalContactId;","lastModifiedDate":"2023-10-16"},{"lineNumber":70,"author":{"gitId":"josepholim"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":71,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":72,"author":{"gitId":"josepholim"},"content":"    @Override","lastModifiedDate":"2023-10-16"},{"lineNumber":73,"author":{"gitId":"josepholim"},"content":"    public String toString() {","lastModifiedDate":"2023-10-16"},{"lineNumber":74,"author":{"gitId":"josepholim"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-10-16"},{"lineNumber":75,"author":{"gitId":"josepholim"},"content":"                .add(\"noteIdToDelete\", noteIdToDelete)","lastModifiedDate":"2023-10-16"},{"lineNumber":76,"author":{"gitId":"josepholim"},"content":"                .add(\"contactId\", contactId)","lastModifiedDate":"2023-10-16"},{"lineNumber":77,"author":{"gitId":"josepholim"},"content":"                .toString();","lastModifiedDate":"2023-10-16"},{"lineNumber":78,"author":{"gitId":"josepholim"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":79,"author":{"gitId":"josepholim"},"content":"}","lastModifiedDate":"2023-10-15"}],"authorContributionMap":{"larrywang0701":1,"josepholim":78}},{"path":"src/main/java/seedu/address/logic/commands/DeletePersonCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"larrywang0701"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"larrywang0701"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"larrywang0701"},"content":"import java.util.List;","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"larrywang0701"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"larrywang0701"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"larrywang0701"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"larrywang0701"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"larrywang0701"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"larrywang0701"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"larrywang0701"},"content":"/**","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"larrywang0701"},"content":" * Deletes a person identified using it\u0027s displayed index from the address book.","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"larrywang0701"},"content":" */","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"larrywang0701"},"content":"public class DeletePersonCommand extends DeleteCommand {","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"larrywang0701"},"content":"    public static final String SECONDARY_COMMAND_WORD \u003d \"contact\";","lastModifiedDate":"2023-10-12"},{"lineNumber":20,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"AndrewJanong"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \" \"","lastModifiedDate":"2023-10-14"},{"lineNumber":22,"author":{"gitId":"AndrewJanong"},"content":"            + SECONDARY_COMMAND_WORD","lastModifiedDate":"2023-10-14"},{"lineNumber":23,"author":{"gitId":"AndrewJanong"},"content":"            + \": Deletes a contact by its index number used in the displayed contact list.\\n\"","lastModifiedDate":"2023-10-14"},{"lineNumber":24,"author":{"gitId":"zekone"},"content":"            + \"Usage: \" + COMMAND_WORD + \" \" + SECONDARY_COMMAND_WORD + \" CONTACT_ID\\n\"","lastModifiedDate":"2023-11-10"},{"lineNumber":25,"author":{"gitId":"AndrewJanong"},"content":"            + \"Example: \" + COMMAND_WORD + \" \" + SECONDARY_COMMAND_WORD + \" 1\";","lastModifiedDate":"2023-10-14"},{"lineNumber":26,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":27,"author":{"gitId":"AndrewJanong"},"content":"    public static final String MESSAGE_DELETE_PERSON_SUCCESS \u003d \"Deleted Contact: %1$s\";","lastModifiedDate":"2023-10-14"},{"lineNumber":28,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":29,"author":{"gitId":"larrywang0701"},"content":"    private final Index targetIndex;","lastModifiedDate":"2023-10-12"},{"lineNumber":30,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":31,"author":{"gitId":"larrywang0701"},"content":"    public DeletePersonCommand(Index targetIndex) {","lastModifiedDate":"2023-10-12"},{"lineNumber":32,"author":{"gitId":"larrywang0701"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2023-10-12"},{"lineNumber":33,"author":{"gitId":"larrywang0701"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":34,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":35,"author":{"gitId":"larrywang0701"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":36,"author":{"gitId":"larrywang0701"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-12"},{"lineNumber":37,"author":{"gitId":"larrywang0701"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-12"},{"lineNumber":38,"author":{"gitId":"larrywang0701"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2023-10-12"},{"lineNumber":39,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":40,"author":{"gitId":"larrywang0701"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-10-12"},{"lineNumber":41,"author":{"gitId":"larrywang0701"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-12"},{"lineNumber":42,"author":{"gitId":"larrywang0701"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":43,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":44,"author":{"gitId":"larrywang0701"},"content":"        Person personToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2023-10-12"},{"lineNumber":45,"author":{"gitId":"larrywang0701"},"content":"        model.deletePerson(personToDelete);","lastModifiedDate":"2023-10-12"},{"lineNumber":46,"author":{"gitId":"larrywang0701"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_PERSON_SUCCESS, Messages.format(personToDelete)));","lastModifiedDate":"2023-10-12"},{"lineNumber":47,"author":{"gitId":"larrywang0701"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":48,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":49,"author":{"gitId":"larrywang0701"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":50,"author":{"gitId":"larrywang0701"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-12"},{"lineNumber":51,"author":{"gitId":"larrywang0701"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-12"},{"lineNumber":52,"author":{"gitId":"larrywang0701"},"content":"            return true;","lastModifiedDate":"2023-10-12"},{"lineNumber":53,"author":{"gitId":"larrywang0701"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":54,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":55,"author":{"gitId":"larrywang0701"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-12"},{"lineNumber":56,"author":{"gitId":"larrywang0701"},"content":"        if (!(other instanceof DeletePersonCommand)) {","lastModifiedDate":"2023-10-12"},{"lineNumber":57,"author":{"gitId":"larrywang0701"},"content":"            return false;","lastModifiedDate":"2023-10-12"},{"lineNumber":58,"author":{"gitId":"larrywang0701"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":59,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":60,"author":{"gitId":"larrywang0701"},"content":"        DeletePersonCommand otherDeletePersonCommand \u003d (DeletePersonCommand) other;","lastModifiedDate":"2023-10-12"},{"lineNumber":61,"author":{"gitId":"larrywang0701"},"content":"        return targetIndex.equals(otherDeletePersonCommand.targetIndex);","lastModifiedDate":"2023-10-12"},{"lineNumber":62,"author":{"gitId":"larrywang0701"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":63,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":64,"author":{"gitId":"larrywang0701"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":65,"author":{"gitId":"larrywang0701"},"content":"    public String toString() {","lastModifiedDate":"2023-10-12"},{"lineNumber":66,"author":{"gitId":"larrywang0701"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-10-12"},{"lineNumber":67,"author":{"gitId":"larrywang0701"},"content":"                .add(\"targetIndex\", targetIndex)","lastModifiedDate":"2023-10-12"},{"lineNumber":68,"author":{"gitId":"larrywang0701"},"content":"                .toString();","lastModifiedDate":"2023-10-12"},{"lineNumber":69,"author":{"gitId":"larrywang0701"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":70,"author":{"gitId":"larrywang0701"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"larrywang0701":64,"zekone":1,"AndrewJanong":5}},{"path":"src/main/java/seedu/address/logic/commands/DeleteTagCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zekone"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-27"},{"lineNumber":2,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":3,"author":{"gitId":"zekone"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-27"},{"lineNumber":4,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":5,"author":{"gitId":"zekone"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-11-09"},{"lineNumber":6,"author":{"gitId":"zekone"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-27"},{"lineNumber":7,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":8,"author":{"gitId":"zekone"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-27"},{"lineNumber":9,"author":{"gitId":"zekone"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-27"},{"lineNumber":10,"author":{"gitId":"zekone"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-27"},{"lineNumber":11,"author":{"gitId":"zekone"},"content":"import seedu.address.model.person.ContactID;","lastModifiedDate":"2023-10-27"},{"lineNumber":12,"author":{"gitId":"zekone"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-27"},{"lineNumber":13,"author":{"gitId":"zekone"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-10-27"},{"lineNumber":14,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":15,"author":{"gitId":"zekone"},"content":"/**","lastModifiedDate":"2023-10-27"},{"lineNumber":16,"author":{"gitId":"zekone"},"content":" * The command handler for {@code delete tag} command","lastModifiedDate":"2023-10-27"},{"lineNumber":17,"author":{"gitId":"zekone"},"content":" */","lastModifiedDate":"2023-10-27"},{"lineNumber":18,"author":{"gitId":"zekone"},"content":"public class DeleteTagCommand extends DeleteCommand {","lastModifiedDate":"2023-10-27"},{"lineNumber":19,"author":{"gitId":"zekone"},"content":"    public static final String SECONDARY_COMMAND_WORD \u003d \"tag\";","lastModifiedDate":"2023-10-27"},{"lineNumber":20,"author":{"gitId":"zekone"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \" \"","lastModifiedDate":"2023-10-27"},{"lineNumber":21,"author":{"gitId":"zekone"},"content":"            + SECONDARY_COMMAND_WORD + \": Delete one or more tags from a contact.\\n\"","lastModifiedDate":"2023-10-27"},{"lineNumber":22,"author":{"gitId":"zekone"},"content":"            + \"Usage:  delete tag -id CONTACT_ID -t TAGNAME...\";","lastModifiedDate":"2023-11-08"},{"lineNumber":23,"author":{"gitId":"zekone"},"content":"    public static final String MESSAGE_PERSON_NOT_FOUND \u003d \"Can not find the target contact with ID: \";","lastModifiedDate":"2023-10-27"},{"lineNumber":24,"author":{"gitId":"zekone"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Successfully deleted tags: \";","lastModifiedDate":"2023-10-27"},{"lineNumber":25,"author":{"gitId":"zekone"},"content":"    public static final String MESSAGE_TAGS_DOES_NOT_EXIST \u003d \"Could not find the following tags: \";","lastModifiedDate":"2023-11-09"},{"lineNumber":26,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":27,"author":{"gitId":"zekone"},"content":"    private final Set\u003cTag\u003e toDelete;","lastModifiedDate":"2023-10-27"},{"lineNumber":28,"author":{"gitId":"zekone"},"content":"    private final int contactId;","lastModifiedDate":"2023-10-27"},{"lineNumber":29,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":30,"author":{"gitId":"zekone"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":31,"author":{"gitId":"zekone"},"content":"     * Creates an DeleteTagCommand to delete the specified {@code Tag}(s).","lastModifiedDate":"2023-10-27"},{"lineNumber":32,"author":{"gitId":"zekone"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":33,"author":{"gitId":"zekone"},"content":"    public DeleteTagCommand(int contactId, Set\u003cTag\u003e tagList) {","lastModifiedDate":"2023-10-27"},{"lineNumber":34,"author":{"gitId":"zekone"},"content":"        requireNonNull(tagList);","lastModifiedDate":"2023-10-27"},{"lineNumber":35,"author":{"gitId":"zekone"},"content":"        this.contactId \u003d contactId;","lastModifiedDate":"2023-10-27"},{"lineNumber":36,"author":{"gitId":"zekone"},"content":"        this.toDelete \u003d tagList;","lastModifiedDate":"2023-10-27"},{"lineNumber":37,"author":{"gitId":"zekone"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":38,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":39,"author":{"gitId":"zekone"},"content":"    @Override","lastModifiedDate":"2023-10-27"},{"lineNumber":40,"author":{"gitId":"zekone"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-27"},{"lineNumber":41,"author":{"gitId":"zekone"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-27"},{"lineNumber":42,"author":{"gitId":"zekone"},"content":"        Person person \u003d model.findPersonByUserFriendlyId(ContactID.fromInt(this.contactId));","lastModifiedDate":"2023-10-27"},{"lineNumber":43,"author":{"gitId":"zekone"},"content":"        if (person \u003d\u003d null) {","lastModifiedDate":"2023-10-27"},{"lineNumber":44,"author":{"gitId":"zekone"},"content":"            throw new CommandException(MESSAGE_PERSON_NOT_FOUND + this.contactId);","lastModifiedDate":"2023-10-27"},{"lineNumber":45,"author":{"gitId":"zekone"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":46,"author":{"gitId":"Nixx162"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":47,"author":{"gitId":"Nixx162"},"content":"        Person toEdit \u003d person;","lastModifiedDate":"2023-11-09"},{"lineNumber":48,"author":{"gitId":"zekone"},"content":"        Set\u003cTag\u003e nonExistantTags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-11-09"},{"lineNumber":49,"author":{"gitId":"zekone"},"content":"        Set\u003cTag\u003e existantTags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-11-09"},{"lineNumber":50,"author":{"gitId":"zekone"},"content":"        for (Tag t : toDelete) {","lastModifiedDate":"2023-11-09"},{"lineNumber":51,"author":{"gitId":"zekone"},"content":"            if (!toEdit.containsTag(t)) {","lastModifiedDate":"2023-11-09"},{"lineNumber":52,"author":{"gitId":"zekone"},"content":"                nonExistantTags.add(t);","lastModifiedDate":"2023-11-09"},{"lineNumber":53,"author":{"gitId":"zekone"},"content":"            } else {","lastModifiedDate":"2023-11-09"},{"lineNumber":54,"author":{"gitId":"zekone"},"content":"                existantTags.add(t);","lastModifiedDate":"2023-11-09"},{"lineNumber":55,"author":{"gitId":"zekone"},"content":"            }","lastModifiedDate":"2023-11-09"},{"lineNumber":56,"author":{"gitId":"zekone"},"content":"        }","lastModifiedDate":"2023-11-09"},{"lineNumber":57,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":58,"author":{"gitId":"zekone"},"content":"        toEdit.removeTags(existantTags);","lastModifiedDate":"2023-11-09"},{"lineNumber":59,"author":{"gitId":"Nixx162"},"content":"        model.setPerson(person, toEdit);","lastModifiedDate":"2023-11-09"},{"lineNumber":60,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":61,"author":{"gitId":"zekone"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2023-10-27"},{"lineNumber":62,"author":{"gitId":"zekone"},"content":"        builder.append(MESSAGE_SUCCESS);","lastModifiedDate":"2023-10-27"},{"lineNumber":63,"author":{"gitId":"zekone"},"content":"        existantTags.forEach(builder::append);","lastModifiedDate":"2023-11-09"},{"lineNumber":64,"author":{"gitId":"zekone"},"content":"        builder.append(\"\\n\");","lastModifiedDate":"2023-11-09"},{"lineNumber":65,"author":{"gitId":"zekone"},"content":"        builder.append(MESSAGE_TAGS_DOES_NOT_EXIST);","lastModifiedDate":"2023-11-09"},{"lineNumber":66,"author":{"gitId":"zekone"},"content":"        nonExistantTags.forEach(builder::append);","lastModifiedDate":"2023-11-09"},{"lineNumber":67,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":68,"author":{"gitId":"zekone"},"content":"        return new CommandResult(builder.toString());","lastModifiedDate":"2023-10-27"},{"lineNumber":69,"author":{"gitId":"zekone"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":70,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":71,"author":{"gitId":"zekone"},"content":"    @Override","lastModifiedDate":"2023-10-27"},{"lineNumber":72,"author":{"gitId":"zekone"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-27"},{"lineNumber":73,"author":{"gitId":"zekone"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-27"},{"lineNumber":74,"author":{"gitId":"zekone"},"content":"            return true;","lastModifiedDate":"2023-10-27"},{"lineNumber":75,"author":{"gitId":"zekone"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":76,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":77,"author":{"gitId":"zekone"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-27"},{"lineNumber":78,"author":{"gitId":"zekone"},"content":"        if (!(other instanceof DeleteTagCommand)) {","lastModifiedDate":"2023-10-27"},{"lineNumber":79,"author":{"gitId":"zekone"},"content":"            return false;","lastModifiedDate":"2023-10-27"},{"lineNumber":80,"author":{"gitId":"zekone"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":81,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":82,"author":{"gitId":"zekone"},"content":"        DeleteTagCommand otherAddNoteCommand \u003d (DeleteTagCommand) other;","lastModifiedDate":"2023-10-27"},{"lineNumber":83,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":84,"author":{"gitId":"zekone"},"content":"        boolean equalToDelete \u003d toDelete.equals(otherAddNoteCommand.toDelete);","lastModifiedDate":"2023-10-27"},{"lineNumber":85,"author":{"gitId":"zekone"},"content":"        boolean equalContactId \u003d (contactId \u003d\u003d otherAddNoteCommand.contactId);","lastModifiedDate":"2023-10-27"},{"lineNumber":86,"author":{"gitId":"zekone"},"content":"        return equalToDelete \u0026\u0026 equalContactId;","lastModifiedDate":"2023-10-27"},{"lineNumber":87,"author":{"gitId":"zekone"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":88,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":89,"author":{"gitId":"zekone"},"content":"    @Override","lastModifiedDate":"2023-10-27"},{"lineNumber":90,"author":{"gitId":"zekone"},"content":"    public String toString() {","lastModifiedDate":"2023-10-27"},{"lineNumber":91,"author":{"gitId":"zekone"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-10-27"},{"lineNumber":92,"author":{"gitId":"zekone"},"content":"                .add(\"toDelete\", toDelete)","lastModifiedDate":"2023-10-27"},{"lineNumber":93,"author":{"gitId":"zekone"},"content":"                .add(\"contactId\", contactId)","lastModifiedDate":"2023-10-27"},{"lineNumber":94,"author":{"gitId":"zekone"},"content":"                .toString();","lastModifiedDate":"2023-10-27"},{"lineNumber":95,"author":{"gitId":"zekone"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":96,"author":{"gitId":"zekone"},"content":"}","lastModifiedDate":"2023-10-27"}],"authorContributionMap":{"zekone":93,"Nixx162":3}},{"path":"src/main/java/seedu/address/logic/commands/ExitCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Terminates the program.","lastModifiedDate":"2016-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"exit\";","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_EXIT_ACKNOWLEDGEMENT \u003d \"Exiting Address Book as requested ...\";","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":16,"author":{"gitId":"Nixx162"},"content":"        return new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, true, false);","lastModifiedDate":"2023-11-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"-":18,"Nixx162":1}},{"path":"src/main/java/seedu/address/logic/commands/FindCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Finds and lists all persons in address book whose name contains any of the argument keywords.","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Keyword matching is case insensitive.","lastModifiedDate":"2018-04-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"find\";","lastModifiedDate":"2016-09-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all persons whose names contain any of \"","lastModifiedDate":"2016-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"the specified keywords (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2018-04-01"},{"lineNumber":20,"author":{"gitId":"zekone"},"content":"            + \"Parameters: KEYWORD [MORE_KEYWORDS...]\\n\"","lastModifiedDate":"2023-11-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" alice bob charlie\";","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final NameContainsKeywordsPredicate predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public FindCommand(NameContainsKeywordsPredicate predicate) {","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return new CommandResult(","lastModifiedDate":"2018-04-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"                String.format(Messages.MESSAGE_PERSONS_LISTED_OVERVIEW, model.getFilteredPersonList().size()));","lastModifiedDate":"2018-04-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        if (!(other instanceof FindCommand)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        FindCommand otherFindCommand \u003d (FindCommand) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return predicate.equals(otherFindCommand.predicate);","lastModifiedDate":"2023-07-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"                .add(\"predicate\", predicate)","lastModifiedDate":"2019-02-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"zekone":1,"-":57}},{"path":"src/main/java/seedu/address/logic/commands/HelpCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"Nixx162"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-18"},{"lineNumber":4,"author":{"gitId":"Nixx162"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Format full help instructions for every command for display.","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"help\";","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Shows program usage instructions.\\n\"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static final String SHOWING_HELP_MESSAGE \u003d \"Opened help window.\";","lastModifiedDate":"2016-08-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":19,"author":{"gitId":"Nixx162"},"content":"    private boolean willShowAll;","lastModifiedDate":"2023-10-18"},{"lineNumber":20,"author":{"gitId":"Nixx162"},"content":"    private boolean isRecognizable;","lastModifiedDate":"2023-10-18"},{"lineNumber":21,"author":{"gitId":"Nixx162"},"content":"    private String toShow;","lastModifiedDate":"2023-10-18"},{"lineNumber":22,"author":{"gitId":"Nixx162"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":23,"author":{"gitId":"Nixx162"},"content":"    private HelpCommand(boolean willShowAll, boolean isRecognizable, String toShow) {","lastModifiedDate":"2023-10-18"},{"lineNumber":24,"author":{"gitId":"Nixx162"},"content":"        this.willShowAll \u003d willShowAll;","lastModifiedDate":"2023-10-18"},{"lineNumber":25,"author":{"gitId":"Nixx162"},"content":"        this.isRecognizable \u003d isRecognizable;","lastModifiedDate":"2023-10-18"},{"lineNumber":26,"author":{"gitId":"Nixx162"},"content":"        this.toShow \u003d toShow;","lastModifiedDate":"2023-10-18"},{"lineNumber":27,"author":{"gitId":"Nixx162"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":28,"author":{"gitId":"Nixx162"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":29,"author":{"gitId":"Nixx162"},"content":"    public HelpCommand(boolean willShowAll) {","lastModifiedDate":"2023-10-18"},{"lineNumber":30,"author":{"gitId":"Nixx162"},"content":"        this(willShowAll, false, \"\");","lastModifiedDate":"2023-10-18"},{"lineNumber":31,"author":{"gitId":"Nixx162"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":32,"author":{"gitId":"Nixx162"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":33,"author":{"gitId":"Nixx162"},"content":"    public HelpCommand(boolean isRecognizable, String toShow) {","lastModifiedDate":"2023-10-18"},{"lineNumber":34,"author":{"gitId":"Nixx162"},"content":"        this(false, isRecognizable, toShow);","lastModifiedDate":"2023-10-18"},{"lineNumber":35,"author":{"gitId":"Nixx162"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":36,"author":{"gitId":"Nixx162"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"Nixx162"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-18"},{"lineNumber":39,"author":{"gitId":"Nixx162"},"content":"        if (willShowAll) {","lastModifiedDate":"2023-10-18"},{"lineNumber":40,"author":{"gitId":"Nixx162"},"content":"            return new CommandResult(Messages.getHelpMessageForAll());","lastModifiedDate":"2023-10-20"},{"lineNumber":41,"author":{"gitId":"Nixx162"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":42,"author":{"gitId":"Nixx162"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":43,"author":{"gitId":"Nixx162"},"content":"        if (!isRecognizable) {","lastModifiedDate":"2023-10-18"},{"lineNumber":44,"author":{"gitId":"Nixx162"},"content":"            return new CommandResult(Messages.getHelpMessageForUnrecognizableCommand(toShow));","lastModifiedDate":"2023-10-20"},{"lineNumber":45,"author":{"gitId":"Nixx162"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":46,"author":{"gitId":"Nixx162"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":47,"author":{"gitId":"Nixx162"},"content":"        return new CommandResult(Messages.getHelpMessageForRecognizableCommand(toShow));","lastModifiedDate":"2023-10-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"Nixx162"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":50,"author":{"gitId":"Nixx162"},"content":"    @Override","lastModifiedDate":"2023-10-19"},{"lineNumber":51,"author":{"gitId":"Nixx162"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-19"},{"lineNumber":52,"author":{"gitId":"Nixx162"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-19"},{"lineNumber":53,"author":{"gitId":"Nixx162"},"content":"            return true;","lastModifiedDate":"2023-10-19"},{"lineNumber":54,"author":{"gitId":"Nixx162"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":55,"author":{"gitId":"Nixx162"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":56,"author":{"gitId":"Nixx162"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-19"},{"lineNumber":57,"author":{"gitId":"Nixx162"},"content":"        if (!(other instanceof HelpCommand)) {","lastModifiedDate":"2023-10-19"},{"lineNumber":58,"author":{"gitId":"Nixx162"},"content":"            return false;","lastModifiedDate":"2023-10-19"},{"lineNumber":59,"author":{"gitId":"Nixx162"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":60,"author":{"gitId":"Nixx162"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":61,"author":{"gitId":"Nixx162"},"content":"        HelpCommand otherHelpCommand \u003d (HelpCommand) other;","lastModifiedDate":"2023-10-19"},{"lineNumber":62,"author":{"gitId":"Nixx162"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":63,"author":{"gitId":"Nixx162"},"content":"        boolean showAllIsEqual \u003d willShowAll \u003d\u003d otherHelpCommand.willShowAll;","lastModifiedDate":"2023-10-19"},{"lineNumber":64,"author":{"gitId":"Nixx162"},"content":"        boolean isRecognizableIsEqual \u003d isRecognizable \u003d\u003d otherHelpCommand.isRecognizable;","lastModifiedDate":"2023-10-19"},{"lineNumber":65,"author":{"gitId":"Nixx162"},"content":"        boolean toShowIsEqual \u003d toShow.equals(otherHelpCommand.toShow);","lastModifiedDate":"2023-10-19"},{"lineNumber":66,"author":{"gitId":"Nixx162"},"content":"        return showAllIsEqual \u0026\u0026 isRecognizableIsEqual \u0026\u0026 toShowIsEqual;","lastModifiedDate":"2023-10-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"-":20,"Nixx162":48}},{"path":"src/main/java/seedu/address/logic/commands/ListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Lists all persons in the address book to the user.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"larrywang0701"},"content":"public abstract class ListCommand extends Command {","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"larrywang0701":1,"-":9}},{"path":"src/main/java/seedu/address/logic/commands/ListEventCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"larrywang0701"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"larrywang0701"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"larrywang0701"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-11-01"},{"lineNumber":6,"author":{"gitId":"larrywang0701"},"content":"import java.util.List;","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"larrywang0701"},"content":"import seedu.address.commons.util.DateTimeUtil;","lastModifiedDate":"2023-11-01"},{"lineNumber":9,"author":{"gitId":"larrywang0701"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2023-11-01"},{"lineNumber":10,"author":{"gitId":"larrywang0701"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"larrywang0701"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"larrywang0701"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2023-11-01"},{"lineNumber":13,"author":{"gitId":"larrywang0701"},"content":"import seedu.address.model.event.EventTime;","lastModifiedDate":"2023-11-01"},{"lineNumber":14,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"larrywang0701"},"content":"/**","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"larrywang0701"},"content":" * The command handler for {@code list events} command","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"larrywang0701"},"content":" */","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"larrywang0701"},"content":"public class ListEventCommand extends ListCommand {","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"larrywang0701"},"content":"    public static final String SECONDARY_COMMAND_WORD \u003d \"events\";","lastModifiedDate":"2023-10-12"},{"lineNumber":20,"author":{"gitId":"larrywang0701"},"content":"    public static final String MESSAGE_ALL \u003d \"Here are all the events in this address book \";","lastModifiedDate":"2023-11-01"},{"lineNumber":21,"author":{"gitId":"larrywang0701"},"content":"    public static final String MESSAGE_FILTERED \u003d \"Here are the events in this address book within the time interval \";","lastModifiedDate":"2023-11-01"},{"lineNumber":22,"author":{"gitId":"larrywang0701"},"content":"    public static final String MESSAGE_ASCENDING \u003d \"(in ascending order):\\n\";","lastModifiedDate":"2023-11-01"},{"lineNumber":23,"author":{"gitId":"larrywang0701"},"content":"    public static final String MESSAGE_DESCENDING \u003d \"(in descending order):\\n\";","lastModifiedDate":"2023-11-01"},{"lineNumber":24,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":25,"author":{"gitId":"larrywang0701"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \" \" + SECONDARY_COMMAND_WORD","lastModifiedDate":"2023-11-01"},{"lineNumber":26,"author":{"gitId":"zekone"},"content":"            + \": Shows a list of all events or events within a specified time interval.\\n\"","lastModifiedDate":"2023-11-09"},{"lineNumber":27,"author":{"gitId":"zekone"},"content":"            + \"Usage: \" + COMMAND_WORD + \" \" + SECONDARY_COMMAND_WORD","lastModifiedDate":"2023-11-09"},{"lineNumber":28,"author":{"gitId":"larrywang0701"},"content":"            + \" [-descending] [-st filter_start_time] [-et filter_end_time]\"","lastModifiedDate":"2023-11-01"},{"lineNumber":29,"author":{"gitId":"larrywang0701"},"content":"            + \" (-st and -et must either both present or both not present)\";","lastModifiedDate":"2023-11-01"},{"lineNumber":30,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":31,"author":{"gitId":"larrywang0701"},"content":"    private LocalDateTime filterStartTime;","lastModifiedDate":"2023-11-01"},{"lineNumber":32,"author":{"gitId":"larrywang0701"},"content":"    private LocalDateTime filterEndTime;","lastModifiedDate":"2023-11-01"},{"lineNumber":33,"author":{"gitId":"larrywang0701"},"content":"    private boolean sortAscending;","lastModifiedDate":"2023-11-01"},{"lineNumber":34,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":35,"author":{"gitId":"larrywang0701"},"content":"    /**","lastModifiedDate":"2023-11-01"},{"lineNumber":36,"author":{"gitId":"larrywang0701"},"content":"     * Constructor for {@code ListEventCommand} class","lastModifiedDate":"2023-11-01"},{"lineNumber":37,"author":{"gitId":"zekone"},"content":"     *","lastModifiedDate":"2023-11-09"},{"lineNumber":38,"author":{"gitId":"larrywang0701"},"content":"     * @param filterStartTime The start time for filter","lastModifiedDate":"2023-11-01"},{"lineNumber":39,"author":{"gitId":"larrywang0701"},"content":"     * @param filterEndTime   The end time for filter","lastModifiedDate":"2023-11-01"},{"lineNumber":40,"author":{"gitId":"zekone"},"content":"     * @param sortAscending   Set to {@code true} to sort the events by start time","lastModifiedDate":"2023-11-09"},{"lineNumber":41,"author":{"gitId":"zekone"},"content":"     *                        in ascending order,","lastModifiedDate":"2023-11-09"},{"lineNumber":42,"author":{"gitId":"larrywang0701"},"content":"     *                        {@code false} in descending order.","lastModifiedDate":"2023-11-01"},{"lineNumber":43,"author":{"gitId":"larrywang0701"},"content":"     */","lastModifiedDate":"2023-11-01"},{"lineNumber":44,"author":{"gitId":"larrywang0701"},"content":"    public ListEventCommand(EventTime filterStartTime, EventTime filterEndTime, boolean sortAscending) {","lastModifiedDate":"2023-11-01"},{"lineNumber":45,"author":{"gitId":"larrywang0701"},"content":"        this.filterStartTime \u003d filterStartTime !\u003d null ? filterStartTime.getTime() : null;","lastModifiedDate":"2023-11-04"},{"lineNumber":46,"author":{"gitId":"larrywang0701"},"content":"        this.filterEndTime \u003d filterEndTime !\u003d null ? filterEndTime.getTime() : null;","lastModifiedDate":"2023-11-04"},{"lineNumber":47,"author":{"gitId":"larrywang0701"},"content":"        this.sortAscending \u003d sortAscending;","lastModifiedDate":"2023-11-01"},{"lineNumber":48,"author":{"gitId":"larrywang0701"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":49,"author":{"gitId":"Nixx162"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":50,"author":{"gitId":"larrywang0701"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":51,"author":{"gitId":"larrywang0701"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-12"},{"lineNumber":52,"author":{"gitId":"larrywang0701"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-12"},{"lineNumber":53,"author":{"gitId":"larrywang0701"},"content":"        assert (filterStartTime \u003d\u003d null \u0026\u0026 filterEndTime \u003d\u003d null) || (filterStartTime !\u003d null \u0026\u0026 filterEndTime !\u003d null);","lastModifiedDate":"2023-11-01"},{"lineNumber":54,"author":{"gitId":"larrywang0701"},"content":"        String result \u003d \"\";","lastModifiedDate":"2023-11-01"},{"lineNumber":55,"author":{"gitId":"larrywang0701"},"content":"        if (filterStartTime \u003d\u003d null) {","lastModifiedDate":"2023-11-01"},{"lineNumber":56,"author":{"gitId":"larrywang0701"},"content":"            model.updateFilteredEventList(evt -\u003e true); // Remove the filter to get the full event list","lastModifiedDate":"2023-11-01"},{"lineNumber":57,"author":{"gitId":"larrywang0701"},"content":"            result \u003d MESSAGE_ALL;","lastModifiedDate":"2023-11-01"},{"lineNumber":58,"author":{"gitId":"larrywang0701"},"content":"        } else {","lastModifiedDate":"2023-11-01"},{"lineNumber":59,"author":{"gitId":"larrywang0701"},"content":"            model.updateFilteredEventList(","lastModifiedDate":"2023-11-01"},{"lineNumber":60,"author":{"gitId":"larrywang0701"},"content":"                    evt -\u003e DateTimeUtil.withinTimeInterval(this.filterStartTime, this.filterEndTime,","lastModifiedDate":"2023-11-01"},{"lineNumber":61,"author":{"gitId":"zekone"},"content":"                            evt.getStartTime()));","lastModifiedDate":"2023-11-09"},{"lineNumber":62,"author":{"gitId":"larrywang0701"},"content":"            result \u003d MESSAGE_FILTERED;","lastModifiedDate":"2023-11-01"},{"lineNumber":63,"author":{"gitId":"larrywang0701"},"content":"        }","lastModifiedDate":"2023-11-01"},{"lineNumber":64,"author":{"gitId":"larrywang0701"},"content":"        result +\u003d this.sortAscending ? MESSAGE_ASCENDING : MESSAGE_DESCENDING;","lastModifiedDate":"2023-11-01"},{"lineNumber":65,"author":{"gitId":"larrywang0701"},"content":"        List\u003cEvent\u003e eventList \u003d model.generateSortedFilteredEventList((o1, o2) -\u003e {","lastModifiedDate":"2023-11-14"},{"lineNumber":66,"author":{"gitId":"larrywang0701"},"content":"            LocalDateTime startTime1 \u003d o1.getStartTime();","lastModifiedDate":"2023-11-01"},{"lineNumber":67,"author":{"gitId":"larrywang0701"},"content":"            LocalDateTime startTime2 \u003d o2.getStartTime();","lastModifiedDate":"2023-11-01"},{"lineNumber":68,"author":{"gitId":"larrywang0701"},"content":"            return (startTime1.isBefore(startTime2)","lastModifiedDate":"2023-11-01"},{"lineNumber":69,"author":{"gitId":"larrywang0701"},"content":"                    ? 1","lastModifiedDate":"2023-11-01"},{"lineNumber":70,"author":{"gitId":"larrywang0701"},"content":"                    : startTime1.equals(startTime2)","lastModifiedDate":"2023-11-01"},{"lineNumber":71,"author":{"gitId":"larrywang0701"},"content":"                            ? 0","lastModifiedDate":"2023-11-01"},{"lineNumber":72,"author":{"gitId":"zekone"},"content":"                            : -1)","lastModifiedDate":"2023-11-09"},{"lineNumber":73,"author":{"gitId":"zekone"},"content":"                    * (sortAscending ? -1 : 1);","lastModifiedDate":"2023-11-09"},{"lineNumber":74,"author":{"gitId":"larrywang0701"},"content":"        });","lastModifiedDate":"2023-11-01"},{"lineNumber":75,"author":{"gitId":"larrywang0701"},"content":"        result +\u003d StringUtil.eventListToString(eventList);","lastModifiedDate":"2023-11-01"},{"lineNumber":76,"author":{"gitId":"Nixx162"},"content":"        return new CommandResult(result, false, true);","lastModifiedDate":"2023-11-03"},{"lineNumber":77,"author":{"gitId":"larrywang0701"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":78,"author":{"gitId":"larrywang0701"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"larrywang0701":68,"zekone":8,"Nixx162":2}},{"path":"src/main/java/seedu/address/logic/commands/ListPersonCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"larrywang0701"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"larrywang0701"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"AndrewJanong"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-11-02"},{"lineNumber":5,"author":{"gitId":"larrywang0701"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"AndrewJanong"},"content":"import java.util.Set;","lastModifiedDate":"2023-11-02"},{"lineNumber":8,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":9,"author":{"gitId":"larrywang0701"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"AndrewJanong"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-11-02"},{"lineNumber":11,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"larrywang0701"},"content":"/**","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"larrywang0701"},"content":" * The command handler for {@code list contact} command","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"larrywang0701"},"content":" */","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"larrywang0701"},"content":"public class ListPersonCommand extends ListCommand {","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"AndrewJanong"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed contacts\";","lastModifiedDate":"2023-11-02"},{"lineNumber":17,"author":{"gitId":"larrywang0701"},"content":"    public static final String SECONDARY_COMMAND_WORD \u003d \"contact\";","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"AndrewJanong"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \" \"","lastModifiedDate":"2023-11-02"},{"lineNumber":20,"author":{"gitId":"AndrewJanong"},"content":"            + SECONDARY_COMMAND_WORD","lastModifiedDate":"2023-11-02"},{"lineNumber":21,"author":{"gitId":"zekone"},"content":"            + \": Lists contacts in the address book.\\n\"","lastModifiedDate":"2023-11-09"},{"lineNumber":22,"author":{"gitId":"zekone"},"content":"            + \"Usage: \"","lastModifiedDate":"2023-11-09"},{"lineNumber":23,"author":{"gitId":"zekone"},"content":"            + COMMAND_WORD + \" \" + SECONDARY_COMMAND_WORD","lastModifiedDate":"2023-11-09"},{"lineNumber":24,"author":{"gitId":"zekone"},"content":"            + \" [\" + PREFIX_TAG + \" TAGNAME...]\\n\"","lastModifiedDate":"2023-11-09"},{"lineNumber":25,"author":{"gitId":"AndrewJanong"},"content":"            + \"Example: \\n\"","lastModifiedDate":"2023-11-02"},{"lineNumber":26,"author":{"gitId":"AndrewJanong"},"content":"            + \"- \" + COMMAND_WORD + \" \" + SECONDARY_COMMAND_WORD + \"\\n\"","lastModifiedDate":"2023-11-02"},{"lineNumber":27,"author":{"gitId":"AndrewJanong"},"content":"            + \"- \" + COMMAND_WORD + \" \" + SECONDARY_COMMAND_WORD + \" \" + PREFIX_TAG + \" recruiter\";","lastModifiedDate":"2023-11-02"},{"lineNumber":28,"author":{"gitId":"Nixx162"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":29,"author":{"gitId":"AndrewJanong"},"content":"    private final Set\u003cTag\u003e tags;","lastModifiedDate":"2023-11-02"},{"lineNumber":30,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":31,"author":{"gitId":"AndrewJanong"},"content":"    /**","lastModifiedDate":"2023-11-02"},{"lineNumber":32,"author":{"gitId":"zekone"},"content":"     * Creates a ListPersonCommand to list contacts based on tags (may be empty)","lastModifiedDate":"2023-11-09"},{"lineNumber":33,"author":{"gitId":"zekone"},"content":"     * {@code Person}","lastModifiedDate":"2023-11-09"},{"lineNumber":34,"author":{"gitId":"AndrewJanong"},"content":"     */","lastModifiedDate":"2023-11-02"},{"lineNumber":35,"author":{"gitId":"AndrewJanong"},"content":"    public ListPersonCommand(Set\u003cTag\u003e tags) {","lastModifiedDate":"2023-11-02"},{"lineNumber":36,"author":{"gitId":"AndrewJanong"},"content":"        requireNonNull(tags);","lastModifiedDate":"2023-11-02"},{"lineNumber":37,"author":{"gitId":"AndrewJanong"},"content":"        this.tags \u003d tags;","lastModifiedDate":"2023-11-02"},{"lineNumber":38,"author":{"gitId":"AndrewJanong"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":39,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":40,"author":{"gitId":"larrywang0701"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":41,"author":{"gitId":"larrywang0701"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2023-10-12"},{"lineNumber":42,"author":{"gitId":"larrywang0701"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-12"},{"lineNumber":43,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":44,"author":{"gitId":"AndrewJanong"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2023-11-02"},{"lineNumber":45,"author":{"gitId":"larrywang0701"},"content":"            model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2023-10-12"},{"lineNumber":46,"author":{"gitId":"AndrewJanong"},"content":"        } else {","lastModifiedDate":"2023-11-02"},{"lineNumber":47,"author":{"gitId":"AndrewJanong"},"content":"            model.updateFilteredPersonList(person -\u003e {","lastModifiedDate":"2023-11-02"},{"lineNumber":48,"author":{"gitId":"AndrewJanong"},"content":"                for (Tag tag : tags) {","lastModifiedDate":"2023-11-02"},{"lineNumber":49,"author":{"gitId":"AndrewJanong"},"content":"                    if (person.containsTag(tag)) {","lastModifiedDate":"2023-11-02"},{"lineNumber":50,"author":{"gitId":"AndrewJanong"},"content":"                        return true;","lastModifiedDate":"2023-11-02"},{"lineNumber":51,"author":{"gitId":"AndrewJanong"},"content":"                    }","lastModifiedDate":"2023-11-02"},{"lineNumber":52,"author":{"gitId":"AndrewJanong"},"content":"                }","lastModifiedDate":"2023-11-02"},{"lineNumber":53,"author":{"gitId":"AndrewJanong"},"content":"                return false;","lastModifiedDate":"2023-11-02"},{"lineNumber":54,"author":{"gitId":"AndrewJanong"},"content":"            });","lastModifiedDate":"2023-11-02"},{"lineNumber":55,"author":{"gitId":"AndrewJanong"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":56,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":57,"author":{"gitId":"larrywang0701"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2023-10-12"},{"lineNumber":58,"author":{"gitId":"larrywang0701"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":59,"author":{"gitId":"larrywang0701"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"larrywang0701":21,"zekone":6,"AndrewJanong":31,"Nixx162":1}},{"path":"src/main/java/seedu/address/logic/parser/AddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"zekone"},"content":"import static seedu.address.logic.Messages.MESSAGE_MISSING_SECONDARY_COMMAND;","lastModifiedDate":"2023-11-09"},{"lineNumber":4,"author":{"gitId":"larrywang0701"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"larrywang0701"},"content":"import seedu.address.logic.commands.AddEventCommand;","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"josepholim"},"content":"import seedu.address.logic.commands.AddNoteCommand;","lastModifiedDate":"2023-10-15"},{"lineNumber":9,"author":{"gitId":"larrywang0701"},"content":"import seedu.address.logic.commands.AddPersonCommand;","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"zekone"},"content":"import seedu.address.logic.commands.AddTagCommand;","lastModifiedDate":"2023-10-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"larrywang0701"},"content":" * The parser for all secondary {@code add} commands","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class AddCommandParser implements Parser\u003cAddCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":18,"author":{"gitId":"larrywang0701"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"larrywang0701"},"content":"    public AddCommand parse(String userInput) throws ParseException {","lastModifiedDate":"2023-10-12"},{"lineNumber":20,"author":{"gitId":"larrywang0701"},"content":"        String secondaryCommandWord \u003d SecondaryCommandSelector.getSecondaryCommandWord(userInput);","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":22,"author":{"gitId":"zekone"},"content":"        if (secondaryCommandWord \u003d\u003d null) {","lastModifiedDate":"2023-11-09"},{"lineNumber":23,"author":{"gitId":"zekone"},"content":"            throw new ParseException(String.format(MESSAGE_MISSING_SECONDARY_COMMAND, AddCommand.COMMAND_WORD));","lastModifiedDate":"2023-11-09"},{"lineNumber":24,"author":{"gitId":"zekone"},"content":"        }","lastModifiedDate":"2023-11-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":26,"author":{"gitId":"larrywang0701"},"content":"        String args \u003d SecondaryCommandSelector.getArguments(secondaryCommandWord, userInput);","lastModifiedDate":"2023-10-12"},{"lineNumber":27,"author":{"gitId":"larrywang0701"},"content":"        switch (secondaryCommandWord) {","lastModifiedDate":"2023-10-12"},{"lineNumber":28,"author":{"gitId":"larrywang0701"},"content":"        case AddPersonCommand.SECONDARY_COMMAND_WORD:","lastModifiedDate":"2023-10-12"},{"lineNumber":29,"author":{"gitId":"larrywang0701"},"content":"            return new AddPersonCommandParser().parse(args);","lastModifiedDate":"2023-10-12"},{"lineNumber":30,"author":{"gitId":"larrywang0701"},"content":"        case AddEventCommand.SECONDARY_COMMAND_WORD:","lastModifiedDate":"2023-10-12"},{"lineNumber":31,"author":{"gitId":"larrywang0701"},"content":"            return new AddEventCommandParser().parse(args);","lastModifiedDate":"2023-10-12"},{"lineNumber":32,"author":{"gitId":"josepholim"},"content":"        case AddNoteCommand.SECONDARY_COMMAND_WORD:","lastModifiedDate":"2023-10-15"},{"lineNumber":33,"author":{"gitId":"josepholim"},"content":"            return new AddNoteCommandParser().parse(args);","lastModifiedDate":"2023-10-15"},{"lineNumber":34,"author":{"gitId":"zekone"},"content":"        case AddTagCommand.SECONDARY_COMMAND_WORD:","lastModifiedDate":"2023-10-27"},{"lineNumber":35,"author":{"gitId":"zekone"},"content":"            return new AddTagCommandParser().parse(args);","lastModifiedDate":"2023-10-27"},{"lineNumber":36,"author":{"gitId":"larrywang0701"},"content":"        default:","lastModifiedDate":"2023-10-12"},{"lineNumber":37,"author":{"gitId":"larrywang0701"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2023-10-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-17"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"larrywang0701":15,"zekone":7,"-":17,"josepholim":3}},{"path":"src/main/java/seedu/address/logic/parser/AddEventCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"larrywang0701"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"larrywang0701"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"larrywang0701"},"content":"import static seedu.address.logic.Messages.MESSAGE_START_TIME_AFTER_END_TIME;","lastModifiedDate":"2023-11-01"},{"lineNumber":5,"author":{"gitId":"larrywang0701"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_END_TIME;","lastModifiedDate":"2023-11-01"},{"lineNumber":6,"author":{"gitId":"larrywang0701"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EVENT_INFORMATION;","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"larrywang0701"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EVENT_LOCATION;","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"larrywang0701"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EVENT_NAME;","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"larrywang0701"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PERSON_ID;","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"larrywang0701"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_START_TIME;","lastModifiedDate":"2023-11-01"},{"lineNumber":11,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"larrywang0701"},"content":"import seedu.address.logic.commands.AddEventCommand;","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"larrywang0701"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"larrywang0701"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"larrywang0701"},"content":"import seedu.address.model.event.EventInformation;","lastModifiedDate":"2023-10-25"},{"lineNumber":16,"author":{"gitId":"larrywang0701"},"content":"import seedu.address.model.event.EventLocation;","lastModifiedDate":"2023-10-25"},{"lineNumber":17,"author":{"gitId":"larrywang0701"},"content":"import seedu.address.model.event.EventName;","lastModifiedDate":"2023-10-25"},{"lineNumber":18,"author":{"gitId":"larrywang0701"},"content":"import seedu.address.model.event.EventTime;","lastModifiedDate":"2023-10-25"},{"lineNumber":19,"author":{"gitId":"larrywang0701"},"content":"import seedu.address.model.person.ContactID;","lastModifiedDate":"2023-10-25"},{"lineNumber":20,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"larrywang0701"},"content":"/**","lastModifiedDate":"2023-10-12"},{"lineNumber":22,"author":{"gitId":"larrywang0701"},"content":" * Parses input arguments and creates a new AddEventCommand object","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"larrywang0701"},"content":" */","lastModifiedDate":"2023-10-12"},{"lineNumber":24,"author":{"gitId":"larrywang0701"},"content":"public class AddEventCommandParser implements Parser\u003cAddEventCommand\u003e {","lastModifiedDate":"2023-10-12"},{"lineNumber":25,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":27,"author":{"gitId":"larrywang0701"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":28,"author":{"gitId":"larrywang0701"},"content":"    public AddEventCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-12"},{"lineNumber":29,"author":{"gitId":"larrywang0701"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_PERSON_ID,","lastModifiedDate":"2023-10-12"},{"lineNumber":30,"author":{"gitId":"larrywang0701"},"content":"                PREFIX_EVENT_NAME, PREFIX_START_TIME, PREFIX_END_TIME,","lastModifiedDate":"2023-11-01"},{"lineNumber":31,"author":{"gitId":"larrywang0701"},"content":"                PREFIX_EVENT_LOCATION, PREFIX_EVENT_INFORMATION);","lastModifiedDate":"2023-10-12"},{"lineNumber":32,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":33,"author":{"gitId":"larrywang0701"},"content":"        if (!ParserUtil.arePrefixesPresent(argMultimap, PREFIX_PERSON_ID, PREFIX_EVENT_NAME,","lastModifiedDate":"2023-10-12"},{"lineNumber":34,"author":{"gitId":"larrywang0701"},"content":"                PREFIX_START_TIME) || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2023-11-01"},{"lineNumber":35,"author":{"gitId":"larrywang0701"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddEventCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-12"},{"lineNumber":36,"author":{"gitId":"larrywang0701"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":37,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":38,"author":{"gitId":"larrywang0701"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_PERSON_ID,","lastModifiedDate":"2023-10-12"},{"lineNumber":39,"author":{"gitId":"larrywang0701"},"content":"                PREFIX_EVENT_NAME, PREFIX_START_TIME, PREFIX_END_TIME, PREFIX_EVENT_LOCATION,","lastModifiedDate":"2023-11-01"},{"lineNumber":40,"author":{"gitId":"larrywang0701"},"content":"                PREFIX_EVENT_INFORMATION);","lastModifiedDate":"2023-10-12"},{"lineNumber":41,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":42,"author":{"gitId":"larrywang0701"},"content":"        EventName eventName \u003d ParserUtil.parseEventName(argMultimap.getValue(PREFIX_EVENT_NAME).get());","lastModifiedDate":"2023-10-25"},{"lineNumber":43,"author":{"gitId":"larrywang0701"},"content":"        String startTimeStr \u003d argMultimap.getValue(PREFIX_START_TIME).get();","lastModifiedDate":"2023-11-04"},{"lineNumber":44,"author":{"gitId":"larrywang0701"},"content":"        EventTime startTime \u003d ParserUtil.parseEventTime(startTimeStr);","lastModifiedDate":"2023-11-04"},{"lineNumber":45,"author":{"gitId":"larrywang0701"},"content":"        EventTime endTime \u003d ParserUtil.parseEventTime(argMultimap.getValue(PREFIX_END_TIME)","lastModifiedDate":"2023-11-04"},{"lineNumber":46,"author":{"gitId":"larrywang0701"},"content":"                .orElseGet(()-\u003estartTimeStr));","lastModifiedDate":"2023-11-04"},{"lineNumber":47,"author":{"gitId":"larrywang0701"},"content":"        EventLocation location \u003d","lastModifiedDate":"2023-10-25"},{"lineNumber":48,"author":{"gitId":"larrywang0701"},"content":"                ParserUtil.parseEventLocation(argMultimap.getValue(PREFIX_EVENT_LOCATION).orElseGet(()-\u003enull));","lastModifiedDate":"2023-10-25"},{"lineNumber":49,"author":{"gitId":"larrywang0701"},"content":"        EventInformation information \u003d","lastModifiedDate":"2023-10-25"},{"lineNumber":50,"author":{"gitId":"larrywang0701"},"content":"                ParserUtil.parseEventInformation(argMultimap.getValue(PREFIX_EVENT_INFORMATION).orElseGet(()-\u003enull));","lastModifiedDate":"2023-10-25"},{"lineNumber":51,"author":{"gitId":"larrywang0701"},"content":"        ContactID contactId \u003d ParserUtil.parseContactID(argMultimap.getValue(PREFIX_PERSON_ID).get());","lastModifiedDate":"2023-10-25"},{"lineNumber":52,"author":{"gitId":"larrywang0701"},"content":"        if (startTime.isAfter(endTime)) {","lastModifiedDate":"2023-11-01"},{"lineNumber":53,"author":{"gitId":"larrywang0701"},"content":"            throw new ParseException(String.format(MESSAGE_START_TIME_AFTER_END_TIME, startTime, endTime));","lastModifiedDate":"2023-11-01"},{"lineNumber":54,"author":{"gitId":"larrywang0701"},"content":"        }","lastModifiedDate":"2023-11-01"},{"lineNumber":55,"author":{"gitId":"larrywang0701"},"content":"        Event newEvent \u003d new Event(eventName, startTime, endTime, location, information);","lastModifiedDate":"2023-10-25"},{"lineNumber":56,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":57,"author":{"gitId":"larrywang0701"},"content":"        return new AddEventCommand(contactId, newEvent);","lastModifiedDate":"2023-10-12"},{"lineNumber":58,"author":{"gitId":"larrywang0701"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":59,"author":{"gitId":"larrywang0701"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"larrywang0701":59}},{"path":"src/main/java/seedu/address/logic/parser/AddNoteCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"josepholim"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-15"},{"lineNumber":2,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":3,"author":{"gitId":"josepholim"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-15"},{"lineNumber":4,"author":{"gitId":"josepholim"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NOTE_CONTENT;","lastModifiedDate":"2023-10-15"},{"lineNumber":5,"author":{"gitId":"josepholim"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NOTE_TITLE;","lastModifiedDate":"2023-10-15"},{"lineNumber":6,"author":{"gitId":"josepholim"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PERSON_ID;","lastModifiedDate":"2023-10-15"},{"lineNumber":7,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":8,"author":{"gitId":"josepholim"},"content":"import seedu.address.logic.commands.AddNoteCommand;","lastModifiedDate":"2023-10-15"},{"lineNumber":9,"author":{"gitId":"josepholim"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-15"},{"lineNumber":10,"author":{"gitId":"josepholim"},"content":"import seedu.address.model.note.Note;","lastModifiedDate":"2023-10-15"},{"lineNumber":11,"author":{"gitId":"josepholim"},"content":"import seedu.address.model.note.NoteContent;","lastModifiedDate":"2023-10-27"},{"lineNumber":12,"author":{"gitId":"josepholim"},"content":"import seedu.address.model.note.NoteTitle;","lastModifiedDate":"2023-10-27"},{"lineNumber":13,"author":{"gitId":"josepholim"},"content":"import seedu.address.model.person.ContactID;","lastModifiedDate":"2023-10-27"},{"lineNumber":14,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":15,"author":{"gitId":"josepholim"},"content":"/**","lastModifiedDate":"2023-10-15"},{"lineNumber":16,"author":{"gitId":"josepholim"},"content":" * Parses input arguments and creates a new AddNoteCommand object","lastModifiedDate":"2023-10-15"},{"lineNumber":17,"author":{"gitId":"josepholim"},"content":" */","lastModifiedDate":"2023-10-15"},{"lineNumber":18,"author":{"gitId":"josepholim"},"content":"public class AddNoteCommandParser implements Parser\u003cAddNoteCommand\u003e {","lastModifiedDate":"2023-10-15"},{"lineNumber":19,"author":{"gitId":"josepholim"},"content":"    @Override","lastModifiedDate":"2023-10-15"},{"lineNumber":20,"author":{"gitId":"josepholim"},"content":"    public AddNoteCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-15"},{"lineNumber":21,"author":{"gitId":"josepholim"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_PERSON_ID,","lastModifiedDate":"2023-10-15"},{"lineNumber":22,"author":{"gitId":"josepholim"},"content":"                PREFIX_NOTE_TITLE, PREFIX_NOTE_CONTENT);","lastModifiedDate":"2023-10-15"},{"lineNumber":23,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":24,"author":{"gitId":"josepholim"},"content":"        if (!ParserUtil.arePrefixesPresent(argMultimap, PREFIX_PERSON_ID, PREFIX_NOTE_TITLE, PREFIX_NOTE_CONTENT)","lastModifiedDate":"2023-10-15"},{"lineNumber":25,"author":{"gitId":"josepholim"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2023-10-15"},{"lineNumber":26,"author":{"gitId":"josepholim"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddNoteCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-15"},{"lineNumber":27,"author":{"gitId":"josepholim"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":28,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":29,"author":{"gitId":"josepholim"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_PERSON_ID, PREFIX_NOTE_TITLE, PREFIX_NOTE_CONTENT);","lastModifiedDate":"2023-10-15"},{"lineNumber":30,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":31,"author":{"gitId":"josepholim"},"content":"        NoteTitle noteTitle \u003d ParserUtil.parseNoteTitle(argMultimap.getValue(PREFIX_NOTE_TITLE).get());","lastModifiedDate":"2023-10-27"},{"lineNumber":32,"author":{"gitId":"josepholim"},"content":"        NoteContent noteContent \u003d ParserUtil.parseNoteContent(argMultimap.getValue(PREFIX_NOTE_CONTENT).get());","lastModifiedDate":"2023-10-27"},{"lineNumber":33,"author":{"gitId":"josepholim"},"content":"        Note newNote \u003d new Note(noteTitle, noteContent);","lastModifiedDate":"2023-10-15"},{"lineNumber":34,"author":{"gitId":"josepholim"},"content":"        ContactID contactId \u003d ParserUtil.parseContactID(argMultimap.getValue(PREFIX_PERSON_ID).get());","lastModifiedDate":"2023-10-27"},{"lineNumber":35,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":36,"author":{"gitId":"josepholim"},"content":"        return new AddNoteCommand(contactId, newNote);","lastModifiedDate":"2023-10-15"},{"lineNumber":37,"author":{"gitId":"josepholim"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":38,"author":{"gitId":"josepholim"},"content":"}","lastModifiedDate":"2023-10-15"}],"authorContributionMap":{"josepholim":38}},{"path":"src/main/java/seedu/address/logic/parser/AddPersonCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"larrywang0701"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"larrywang0701"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"larrywang0701"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"larrywang0701"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"larrywang0701"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"larrywang0701"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"larrywang0701"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"larrywang0701"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"larrywang0701"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"larrywang0701"},"content":"import seedu.address.logic.commands.AddPersonCommand;","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"larrywang0701"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"larrywang0701"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"larrywang0701"},"content":"import seedu.address.model.note.Note;","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"larrywang0701"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"larrywang0701"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"larrywang0701"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-10-12"},{"lineNumber":20,"author":{"gitId":"larrywang0701"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"larrywang0701"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2023-10-12"},{"lineNumber":22,"author":{"gitId":"larrywang0701"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":24,"author":{"gitId":"larrywang0701"},"content":"/**","lastModifiedDate":"2023-10-12"},{"lineNumber":25,"author":{"gitId":"larrywang0701"},"content":" * Parses input arguments and creates a new AddPersonCommand object","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"larrywang0701"},"content":" */","lastModifiedDate":"2023-10-12"},{"lineNumber":27,"author":{"gitId":"larrywang0701"},"content":"public class AddPersonCommandParser implements Parser\u003cAddPersonCommand\u003e {","lastModifiedDate":"2023-10-12"},{"lineNumber":28,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":29,"author":{"gitId":"larrywang0701"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":30,"author":{"gitId":"larrywang0701"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2023-10-12"},{"lineNumber":31,"author":{"gitId":"larrywang0701"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2023-10-12"},{"lineNumber":32,"author":{"gitId":"larrywang0701"},"content":"     *","lastModifiedDate":"2023-10-12"},{"lineNumber":33,"author":{"gitId":"larrywang0701"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-10-12"},{"lineNumber":34,"author":{"gitId":"larrywang0701"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":35,"author":{"gitId":"larrywang0701"},"content":"    public AddPersonCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-12"},{"lineNumber":36,"author":{"gitId":"larrywang0701"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL,","lastModifiedDate":"2023-10-12"},{"lineNumber":37,"author":{"gitId":"larrywang0701"},"content":"                PREFIX_ADDRESS, PREFIX_TAG);","lastModifiedDate":"2023-10-12"},{"lineNumber":38,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":39,"author":{"gitId":"larrywang0701"},"content":"        if (!ParserUtil.arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_ADDRESS, PREFIX_PHONE, PREFIX_EMAIL)","lastModifiedDate":"2023-10-12"},{"lineNumber":40,"author":{"gitId":"larrywang0701"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2023-10-12"},{"lineNumber":41,"author":{"gitId":"larrywang0701"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddPersonCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-12"},{"lineNumber":42,"author":{"gitId":"larrywang0701"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":43,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":44,"author":{"gitId":"larrywang0701"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS);","lastModifiedDate":"2023-10-12"},{"lineNumber":45,"author":{"gitId":"larrywang0701"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2023-10-12"},{"lineNumber":46,"author":{"gitId":"larrywang0701"},"content":"        Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2023-10-12"},{"lineNumber":47,"author":{"gitId":"larrywang0701"},"content":"        Email email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get());","lastModifiedDate":"2023-10-12"},{"lineNumber":48,"author":{"gitId":"larrywang0701"},"content":"        Address address \u003d ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get());","lastModifiedDate":"2023-10-12"},{"lineNumber":49,"author":{"gitId":"larrywang0701"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2023-10-12"},{"lineNumber":50,"author":{"gitId":"larrywang0701"},"content":"        ArrayList\u003cNote\u003e noteList \u003d new ArrayList\u003cNote\u003e();","lastModifiedDate":"2023-10-12"},{"lineNumber":51,"author":{"gitId":"larrywang0701"},"content":"        ArrayList\u003cEvent\u003e eventList \u003d new ArrayList\u003cEvent\u003e();","lastModifiedDate":"2023-10-12"},{"lineNumber":52,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":53,"author":{"gitId":"larrywang0701"},"content":"        Person person \u003d new Person(name, phone, email, address, tagList, noteList, eventList);","lastModifiedDate":"2023-10-12"},{"lineNumber":54,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":55,"author":{"gitId":"larrywang0701"},"content":"        return new AddPersonCommand(person);","lastModifiedDate":"2023-10-12"},{"lineNumber":56,"author":{"gitId":"larrywang0701"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":57,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":58,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":59,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":60,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":61,"author":{"gitId":"larrywang0701"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"larrywang0701":61}},{"path":"src/main/java/seedu/address/logic/parser/AddTagCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zekone"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-27"},{"lineNumber":2,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":3,"author":{"gitId":"zekone"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-27"},{"lineNumber":4,"author":{"gitId":"zekone"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_INTEGER_ARGUMENT;","lastModifiedDate":"2023-10-27"},{"lineNumber":5,"author":{"gitId":"zekone"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PERSON_ID;","lastModifiedDate":"2023-10-27"},{"lineNumber":6,"author":{"gitId":"zekone"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-10-27"},{"lineNumber":7,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":8,"author":{"gitId":"zekone"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-27"},{"lineNumber":9,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":10,"author":{"gitId":"zekone"},"content":"import seedu.address.logic.commands.AddTagCommand;","lastModifiedDate":"2023-10-27"},{"lineNumber":11,"author":{"gitId":"zekone"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-27"},{"lineNumber":12,"author":{"gitId":"zekone"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-10-27"},{"lineNumber":13,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":14,"author":{"gitId":"zekone"},"content":"/**","lastModifiedDate":"2023-10-27"},{"lineNumber":15,"author":{"gitId":"zekone"},"content":" * Parses input arguments and creates a new AddTagCommand object","lastModifiedDate":"2023-10-27"},{"lineNumber":16,"author":{"gitId":"zekone"},"content":" */","lastModifiedDate":"2023-10-27"},{"lineNumber":17,"author":{"gitId":"zekone"},"content":"public class AddTagCommandParser implements Parser\u003cAddTagCommand\u003e {","lastModifiedDate":"2023-10-27"},{"lineNumber":18,"author":{"gitId":"zekone"},"content":"    @Override","lastModifiedDate":"2023-10-27"},{"lineNumber":19,"author":{"gitId":"zekone"},"content":"    public AddTagCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-27"},{"lineNumber":20,"author":{"gitId":"zekone"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_PERSON_ID,","lastModifiedDate":"2023-10-27"},{"lineNumber":21,"author":{"gitId":"zekone"},"content":"                PREFIX_TAG);","lastModifiedDate":"2023-10-27"},{"lineNumber":22,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":23,"author":{"gitId":"zekone"},"content":"        if (!ParserUtil.arePrefixesPresent(argMultimap, PREFIX_PERSON_ID, PREFIX_TAG)","lastModifiedDate":"2023-10-27"},{"lineNumber":24,"author":{"gitId":"zekone"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2023-10-27"},{"lineNumber":25,"author":{"gitId":"zekone"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddTagCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-27"},{"lineNumber":26,"author":{"gitId":"zekone"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":27,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":28,"author":{"gitId":"zekone"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_PERSON_ID);","lastModifiedDate":"2023-10-27"},{"lineNumber":29,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":30,"author":{"gitId":"zekone"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2023-10-27"},{"lineNumber":31,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":32,"author":{"gitId":"zekone"},"content":"        int contactId \u003d -1;","lastModifiedDate":"2023-10-27"},{"lineNumber":33,"author":{"gitId":"zekone"},"content":"        try {","lastModifiedDate":"2023-10-27"},{"lineNumber":34,"author":{"gitId":"zekone"},"content":"            contactId \u003d Integer.parseInt(argMultimap.getValue(PREFIX_PERSON_ID).get());","lastModifiedDate":"2023-10-27"},{"lineNumber":35,"author":{"gitId":"zekone"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-10-27"},{"lineNumber":36,"author":{"gitId":"zekone"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_INTEGER_ARGUMENT, e.getMessage()));","lastModifiedDate":"2023-10-27"},{"lineNumber":37,"author":{"gitId":"zekone"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":38,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":39,"author":{"gitId":"zekone"},"content":"        return new AddTagCommand(contactId, tagList);","lastModifiedDate":"2023-10-27"},{"lineNumber":40,"author":{"gitId":"zekone"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":41,"author":{"gitId":"zekone"},"content":"}","lastModifiedDate":"2023-10-27"}],"authorContributionMap":{"zekone":41}},{"path":"src/main/java/seedu/address/logic/parser/AddressBookParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-07-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-07-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class AddressBookParser {","lastModifiedDate":"2017-07-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(AddressBookParser.class);","lastModifiedDate":"2023-07-29"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // Note to developers: Change the log level in config.json to enable lower level (i.e., FINE, FINER and lower)","lastModifiedDate":"2023-07-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // log messages such as the one below.","lastModifiedDate":"2023-07-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // Lower level log messages are used sparingly to minimize noise in the code.","lastModifiedDate":"2023-07-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        logger.fine(\"Command word: \" + commandWord + \"; Arguments: \" + arguments);","lastModifiedDate":"2023-07-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        case AddCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            return new AddCommandParser().parse(arguments);","lastModifiedDate":"2017-02-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            return new DeleteCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            return new ClearCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return new FindCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":68,"author":{"gitId":"larrywang0701"},"content":"            return new ListCommandParser().parse(arguments);","lastModifiedDate":"2023-10-12"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":74,"author":{"gitId":"Nixx162"},"content":"            return new HelpCommandParser().parse(arguments);","lastModifiedDate":"2023-10-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            logger.finer(\"This user input caused a ParseException: \" + userInput);","lastModifiedDate":"2023-07-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"larrywang0701":1,"-":79,"Nixx162":1}},{"path":"src/main/java/seedu/address/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"Nixx162"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-18"},{"lineNumber":4,"author":{"gitId":"Nixx162"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-10-18"},{"lineNumber":5,"author":{"gitId":"Nixx162"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":6,"author":{"gitId":"Nixx162"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2023-10-18"},{"lineNumber":7,"author":{"gitId":"Nixx162"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2023-10-18"},{"lineNumber":8,"author":{"gitId":"Nixx162"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2023-10-18"},{"lineNumber":9,"author":{"gitId":"Nixx162"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2023-10-18"},{"lineNumber":10,"author":{"gitId":"Nixx162"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2023-10-18"},{"lineNumber":11,"author":{"gitId":"Nixx162"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":18,"author":{"gitId":"larrywang0701"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"-n\");","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"larrywang0701"},"content":"    public static final Prefix PREFIX_PERSON_ID \u003d new Prefix(\"-id\");","lastModifiedDate":"2023-10-12"},{"lineNumber":20,"author":{"gitId":"josepholim"},"content":"    public static final Prefix PREFIX_NOTE_ID \u003d new Prefix(\"-nid\");","lastModifiedDate":"2023-10-15"},{"lineNumber":21,"author":{"gitId":"larrywang0701"},"content":"    public static final Prefix PREFIX_EVENT_ID \u003d new Prefix(\"-eid\");","lastModifiedDate":"2023-10-12"},{"lineNumber":22,"author":{"gitId":"AndrewJanong"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"-p\");","lastModifiedDate":"2023-10-13"},{"lineNumber":23,"author":{"gitId":"AndrewJanong"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"-e\");","lastModifiedDate":"2023-10-13"},{"lineNumber":24,"author":{"gitId":"AndrewJanong"},"content":"    public static final Prefix PREFIX_ADDRESS \u003d new Prefix(\"-a\");","lastModifiedDate":"2023-10-13"},{"lineNumber":25,"author":{"gitId":"AndrewJanong"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"-t\");","lastModifiedDate":"2023-10-13"},{"lineNumber":26,"author":{"gitId":"josepholim"},"content":"    public static final Prefix PREFIX_NOTE_TITLE \u003d new Prefix(\"-tit\");","lastModifiedDate":"2023-10-15"},{"lineNumber":27,"author":{"gitId":"josepholim"},"content":"    public static final Prefix PREFIX_NOTE_CONTENT \u003d new Prefix(\"-con\");","lastModifiedDate":"2023-10-15"},{"lineNumber":28,"author":{"gitId":"larrywang0701"},"content":"    public static final Prefix PREFIX_EVENT_NAME \u003d new Prefix(\"-en\");","lastModifiedDate":"2023-10-12"},{"lineNumber":29,"author":{"gitId":"larrywang0701"},"content":"    public static final Prefix PREFIX_START_TIME \u003d new Prefix(\"-st\");","lastModifiedDate":"2023-11-01"},{"lineNumber":30,"author":{"gitId":"larrywang0701"},"content":"    public static final Prefix PREFIX_END_TIME \u003d new Prefix(\"-et\");","lastModifiedDate":"2023-11-01"},{"lineNumber":31,"author":{"gitId":"larrywang0701"},"content":"    public static final Prefix PREFIX_EVENT_LOCATION \u003d new Prefix(\"-loc\");","lastModifiedDate":"2023-10-12"},{"lineNumber":32,"author":{"gitId":"larrywang0701"},"content":"    public static final Prefix PREFIX_EVENT_INFORMATION \u003d new Prefix(\"-info\");","lastModifiedDate":"2023-10-12"},{"lineNumber":33,"author":{"gitId":"larrywang0701"},"content":"    public static final Prefix PREFIX_SORT_DESCENDING \u003d new Prefix(\"-descending\");","lastModifiedDate":"2023-11-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":35,"author":{"gitId":"Nixx162"},"content":"    public static final ArrayList\u003cString\u003e COMMAND_LIST \u003d new ArrayList\u003cString\u003e(Arrays.asList(","lastModifiedDate":"2023-10-18"},{"lineNumber":36,"author":{"gitId":"Nixx162"},"content":"        AddCommand.COMMAND_WORD,","lastModifiedDate":"2023-10-18"},{"lineNumber":37,"author":{"gitId":"Nixx162"},"content":"        DeleteCommand.COMMAND_WORD,","lastModifiedDate":"2023-10-18"},{"lineNumber":38,"author":{"gitId":"Nixx162"},"content":"        ClearCommand.COMMAND_WORD,","lastModifiedDate":"2023-10-18"},{"lineNumber":39,"author":{"gitId":"Nixx162"},"content":"        FindCommand.COMMAND_WORD,","lastModifiedDate":"2023-10-18"},{"lineNumber":40,"author":{"gitId":"Nixx162"},"content":"        ListCommand.COMMAND_WORD));","lastModifiedDate":"2023-10-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"larrywang0701":9,"AndrewJanong":4,"-":10,"josepholim":3,"Nixx162":15}},{"path":"src/main/java/seedu/address/logic/parser/DeleteCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"zekone"},"content":"import static seedu.address.logic.Messages.MESSAGE_MISSING_SECONDARY_COMMAND;","lastModifiedDate":"2023-11-09"},{"lineNumber":4,"author":{"gitId":"larrywang0701"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"larrywang0701"},"content":"import seedu.address.logic.commands.DeleteEventCommand;","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"josepholim"},"content":"import seedu.address.logic.commands.DeleteNoteCommand;","lastModifiedDate":"2023-10-15"},{"lineNumber":9,"author":{"gitId":"larrywang0701"},"content":"import seedu.address.logic.commands.DeletePersonCommand;","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"zekone"},"content":"import seedu.address.logic.commands.DeleteTagCommand;","lastModifiedDate":"2023-10-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"larrywang0701"},"content":" * The parser for all secondary {@code delete} commands","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class DeleteCommandParser implements Parser\u003cDeleteCommand\u003e {","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"larrywang0701"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"larrywang0701"},"content":"    public DeleteCommand parse(String userInput) throws ParseException {","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"larrywang0701"},"content":"        String secondaryCommandWord \u003d SecondaryCommandSelector.getSecondaryCommandWord(userInput);","lastModifiedDate":"2023-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":21,"author":{"gitId":"zekone"},"content":"        if (secondaryCommandWord \u003d\u003d null) {","lastModifiedDate":"2023-11-09"},{"lineNumber":22,"author":{"gitId":"zekone"},"content":"            throw new ParseException(String.format(MESSAGE_MISSING_SECONDARY_COMMAND, DeleteCommand.COMMAND_WORD));","lastModifiedDate":"2023-11-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-11-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":25,"author":{"gitId":"larrywang0701"},"content":"        String args \u003d SecondaryCommandSelector.getArguments(secondaryCommandWord, userInput);","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"larrywang0701"},"content":"        switch (secondaryCommandWord) {","lastModifiedDate":"2023-10-12"},{"lineNumber":27,"author":{"gitId":"larrywang0701"},"content":"        case DeletePersonCommand.SECONDARY_COMMAND_WORD:","lastModifiedDate":"2023-10-12"},{"lineNumber":28,"author":{"gitId":"larrywang0701"},"content":"            return new DeletePersonCommandParser().parse(args);","lastModifiedDate":"2023-10-12"},{"lineNumber":29,"author":{"gitId":"josepholim"},"content":"        case DeleteNoteCommand.SECONDARY_COMMAND_WORD:","lastModifiedDate":"2023-10-15"},{"lineNumber":30,"author":{"gitId":"josepholim"},"content":"            return new DeleteNoteCommandParser().parse(args);","lastModifiedDate":"2023-10-15"},{"lineNumber":31,"author":{"gitId":"larrywang0701"},"content":"        case DeleteEventCommand.SECONDARY_COMMAND_WORD:","lastModifiedDate":"2023-10-12"},{"lineNumber":32,"author":{"gitId":"larrywang0701"},"content":"            return new DeleteEventCommandParser().parse(args);","lastModifiedDate":"2023-10-12"},{"lineNumber":33,"author":{"gitId":"zekone"},"content":"        case DeleteTagCommand.SECONDARY_COMMAND_WORD:","lastModifiedDate":"2023-10-27"},{"lineNumber":34,"author":{"gitId":"zekone"},"content":"            return new DeleteTagCommandParser().parse(args);","lastModifiedDate":"2023-10-27"},{"lineNumber":35,"author":{"gitId":"larrywang0701"},"content":"        default:","lastModifiedDate":"2023-10-12"},{"lineNumber":36,"author":{"gitId":"larrywang0701"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2023-10-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"larrywang0701":15,"zekone":6,"-":15,"josepholim":3}},{"path":"src/main/java/seedu/address/logic/parser/DeleteEventCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"larrywang0701"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"larrywang0701"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"larrywang0701"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EVENT_ID;","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"larrywang0701"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PERSON_ID;","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"larrywang0701"},"content":"import seedu.address.logic.commands.DeleteEventCommand;","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"larrywang0701"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"larrywang0701"},"content":"import seedu.address.model.event.EventID;","lastModifiedDate":"2023-10-25"},{"lineNumber":10,"author":{"gitId":"larrywang0701"},"content":"import seedu.address.model.person.ContactID;","lastModifiedDate":"2023-10-25"},{"lineNumber":11,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"larrywang0701"},"content":"/**","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"larrywang0701"},"content":" * Parses input arguments and creates a new DeleteEventCommand object","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"larrywang0701"},"content":" */","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"larrywang0701"},"content":"public class DeleteEventCommandParser implements Parser\u003cDeleteEventCommand\u003e {","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"larrywang0701"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"larrywang0701"},"content":"    public DeleteEventCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"larrywang0701"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_PERSON_ID, PREFIX_EVENT_ID);","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":20,"author":{"gitId":"larrywang0701"},"content":"        if (!ParserUtil.arePrefixesPresent(argMultimap, PREFIX_PERSON_ID, PREFIX_EVENT_ID)","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"larrywang0701"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2023-10-12"},{"lineNumber":22,"author":{"gitId":"larrywang0701"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteEventCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"larrywang0701"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":24,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":25,"author":{"gitId":"larrywang0701"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_PERSON_ID, PREFIX_EVENT_ID);","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"larrywang0701"},"content":"        ContactID contactId \u003d ParserUtil.parseContactID(argMultimap.getValue(PREFIX_PERSON_ID).get());","lastModifiedDate":"2023-10-25"},{"lineNumber":27,"author":{"gitId":"larrywang0701"},"content":"        EventID eventId \u003d ParserUtil.parseEventID(argMultimap.getValue(PREFIX_EVENT_ID).get());","lastModifiedDate":"2023-10-25"},{"lineNumber":28,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":29,"author":{"gitId":"larrywang0701"},"content":"        return new DeleteEventCommand(contactId, eventId);","lastModifiedDate":"2023-10-12"},{"lineNumber":30,"author":{"gitId":"larrywang0701"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":31,"author":{"gitId":"larrywang0701"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"larrywang0701":31}},{"path":"src/main/java/seedu/address/logic/parser/DeleteNoteCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"josepholim"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-15"},{"lineNumber":2,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":3,"author":{"gitId":"josepholim"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-15"},{"lineNumber":4,"author":{"gitId":"josepholim"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NOTE_ID;","lastModifiedDate":"2023-10-15"},{"lineNumber":5,"author":{"gitId":"josepholim"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PERSON_ID;","lastModifiedDate":"2023-10-15"},{"lineNumber":6,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":7,"author":{"gitId":"josepholim"},"content":"import seedu.address.logic.commands.DeleteNoteCommand;","lastModifiedDate":"2023-10-15"},{"lineNumber":8,"author":{"gitId":"josepholim"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-15"},{"lineNumber":9,"author":{"gitId":"josepholim"},"content":"import seedu.address.model.note.NoteID;","lastModifiedDate":"2023-10-27"},{"lineNumber":10,"author":{"gitId":"josepholim"},"content":"import seedu.address.model.person.ContactID;","lastModifiedDate":"2023-10-27"},{"lineNumber":11,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":12,"author":{"gitId":"josepholim"},"content":"/**","lastModifiedDate":"2023-10-15"},{"lineNumber":13,"author":{"gitId":"josepholim"},"content":" * Parses input arguments and creates a new DeleteNoteCommand object","lastModifiedDate":"2023-10-15"},{"lineNumber":14,"author":{"gitId":"josepholim"},"content":" */","lastModifiedDate":"2023-10-15"},{"lineNumber":15,"author":{"gitId":"josepholim"},"content":"public class DeleteNoteCommandParser implements Parser\u003cDeleteNoteCommand\u003e {","lastModifiedDate":"2023-10-15"},{"lineNumber":16,"author":{"gitId":"josepholim"},"content":"    @Override","lastModifiedDate":"2023-10-15"},{"lineNumber":17,"author":{"gitId":"josepholim"},"content":"    public DeleteNoteCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-15"},{"lineNumber":18,"author":{"gitId":"josepholim"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_PERSON_ID, PREFIX_NOTE_ID);","lastModifiedDate":"2023-10-15"},{"lineNumber":19,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":20,"author":{"gitId":"josepholim"},"content":"        if (!ParserUtil.arePrefixesPresent(argMultimap, PREFIX_PERSON_ID, PREFIX_NOTE_ID)","lastModifiedDate":"2023-10-15"},{"lineNumber":21,"author":{"gitId":"josepholim"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2023-10-15"},{"lineNumber":22,"author":{"gitId":"josepholim"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteNoteCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-15"},{"lineNumber":23,"author":{"gitId":"josepholim"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":24,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":25,"author":{"gitId":"josepholim"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_PERSON_ID, PREFIX_NOTE_ID);","lastModifiedDate":"2023-10-15"},{"lineNumber":26,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":27,"author":{"gitId":"josepholim"},"content":"        ContactID contactId \u003d ParserUtil.parseContactID(argMultimap.getValue(PREFIX_PERSON_ID).get());","lastModifiedDate":"2023-10-27"},{"lineNumber":28,"author":{"gitId":"josepholim"},"content":"        NoteID noteId \u003d ParserUtil.parseNoteID(argMultimap.getValue(PREFIX_NOTE_ID).get());","lastModifiedDate":"2023-10-27"},{"lineNumber":29,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":30,"author":{"gitId":"josepholim"},"content":"        return new DeleteNoteCommand(contactId, noteId);","lastModifiedDate":"2023-10-15"},{"lineNumber":31,"author":{"gitId":"josepholim"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":32,"author":{"gitId":"josepholim"},"content":"}","lastModifiedDate":"2023-10-15"}],"authorContributionMap":{"josepholim":32}},{"path":"src/main/java/seedu/address/logic/parser/DeletePersonCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"larrywang0701"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"larrywang0701"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"larrywang0701"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"larrywang0701"},"content":"import seedu.address.logic.commands.DeletePersonCommand;","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"larrywang0701"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"larrywang0701"},"content":"/**","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"larrywang0701"},"content":" * Parses input arguments and creates a new DeletePersonCommand object","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"larrywang0701"},"content":" */","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"larrywang0701"},"content":"public class DeletePersonCommandParser implements Parser\u003cDeletePersonCommand\u003e {","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"larrywang0701"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"larrywang0701"},"content":"     * Parses the given {@code String} of arguments in the context of the DeletePersonCommand","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"larrywang0701"},"content":"     * and returns a DeletePersonCommand object for execution.","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"larrywang0701"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"larrywang0701"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"larrywang0701"},"content":"    public DeletePersonCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-12"},{"lineNumber":20,"author":{"gitId":"larrywang0701"},"content":"        try {","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"larrywang0701"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2023-10-12"},{"lineNumber":22,"author":{"gitId":"larrywang0701"},"content":"            return new DeletePersonCommand(index);","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"larrywang0701"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-10-12"},{"lineNumber":24,"author":{"gitId":"larrywang0701"},"content":"            throw new ParseException(","lastModifiedDate":"2023-10-12"},{"lineNumber":25,"author":{"gitId":"larrywang0701"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeletePersonCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"larrywang0701"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":27,"author":{"gitId":"larrywang0701"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":28,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":29,"author":{"gitId":"larrywang0701"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"larrywang0701":29}},{"path":"src/main/java/seedu/address/logic/parser/DeleteTagCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zekone"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-27"},{"lineNumber":2,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":3,"author":{"gitId":"zekone"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-27"},{"lineNumber":4,"author":{"gitId":"zekone"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_INTEGER_ARGUMENT;","lastModifiedDate":"2023-10-27"},{"lineNumber":5,"author":{"gitId":"zekone"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PERSON_ID;","lastModifiedDate":"2023-10-27"},{"lineNumber":6,"author":{"gitId":"zekone"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-10-27"},{"lineNumber":7,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":8,"author":{"gitId":"zekone"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-27"},{"lineNumber":9,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":10,"author":{"gitId":"zekone"},"content":"import seedu.address.logic.commands.DeleteTagCommand;","lastModifiedDate":"2023-10-27"},{"lineNumber":11,"author":{"gitId":"zekone"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-27"},{"lineNumber":12,"author":{"gitId":"zekone"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-10-27"},{"lineNumber":13,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":14,"author":{"gitId":"zekone"},"content":"/**","lastModifiedDate":"2023-10-27"},{"lineNumber":15,"author":{"gitId":"zekone"},"content":" * Parses input arguments and creates a new DeleteTagCommand object","lastModifiedDate":"2023-10-27"},{"lineNumber":16,"author":{"gitId":"zekone"},"content":" */","lastModifiedDate":"2023-10-27"},{"lineNumber":17,"author":{"gitId":"zekone"},"content":"public class DeleteTagCommandParser implements Parser\u003cDeleteTagCommand\u003e {","lastModifiedDate":"2023-10-27"},{"lineNumber":18,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":19,"author":{"gitId":"zekone"},"content":"    @Override","lastModifiedDate":"2023-10-27"},{"lineNumber":20,"author":{"gitId":"zekone"},"content":"    public DeleteTagCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-27"},{"lineNumber":21,"author":{"gitId":"zekone"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_PERSON_ID,","lastModifiedDate":"2023-10-27"},{"lineNumber":22,"author":{"gitId":"zekone"},"content":"                PREFIX_TAG);","lastModifiedDate":"2023-10-27"},{"lineNumber":23,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":24,"author":{"gitId":"zekone"},"content":"        if (!ParserUtil.arePrefixesPresent(argMultimap, PREFIX_PERSON_ID, PREFIX_TAG)","lastModifiedDate":"2023-10-27"},{"lineNumber":25,"author":{"gitId":"zekone"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2023-10-27"},{"lineNumber":26,"author":{"gitId":"zekone"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteTagCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-27"},{"lineNumber":27,"author":{"gitId":"zekone"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":28,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":29,"author":{"gitId":"zekone"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_PERSON_ID);","lastModifiedDate":"2023-10-27"},{"lineNumber":30,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":31,"author":{"gitId":"zekone"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2023-10-27"},{"lineNumber":32,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":33,"author":{"gitId":"zekone"},"content":"        int contactId \u003d -1;","lastModifiedDate":"2023-10-27"},{"lineNumber":34,"author":{"gitId":"zekone"},"content":"        try {","lastModifiedDate":"2023-10-27"},{"lineNumber":35,"author":{"gitId":"zekone"},"content":"            contactId \u003d Integer.parseInt(argMultimap.getValue(PREFIX_PERSON_ID).get());","lastModifiedDate":"2023-10-27"},{"lineNumber":36,"author":{"gitId":"zekone"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-10-27"},{"lineNumber":37,"author":{"gitId":"zekone"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_INTEGER_ARGUMENT, e.getMessage()));","lastModifiedDate":"2023-10-27"},{"lineNumber":38,"author":{"gitId":"zekone"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":39,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":40,"author":{"gitId":"zekone"},"content":"        return new DeleteTagCommand(contactId, tagList);","lastModifiedDate":"2023-10-27"},{"lineNumber":41,"author":{"gitId":"zekone"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":42,"author":{"gitId":"zekone"},"content":"}","lastModifiedDate":"2023-10-27"}],"authorContributionMap":{"zekone":42}},{"path":"src/main/java/seedu/address/logic/parser/HelpCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Nixx162"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-18"},{"lineNumber":2,"author":{"gitId":"Nixx162"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":3,"author":{"gitId":"Nixx162"},"content":"import java.util.Collections;","lastModifiedDate":"2023-10-18"},{"lineNumber":4,"author":{"gitId":"Nixx162"},"content":"import java.util.List;","lastModifiedDate":"2023-10-18"},{"lineNumber":5,"author":{"gitId":"Nixx162"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-10-18"},{"lineNumber":6,"author":{"gitId":"Nixx162"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":7,"author":{"gitId":"Nixx162"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2023-10-18"},{"lineNumber":8,"author":{"gitId":"Nixx162"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2023-10-18"},{"lineNumber":9,"author":{"gitId":"Nixx162"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2023-10-18"},{"lineNumber":10,"author":{"gitId":"Nixx162"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2023-10-18"},{"lineNumber":11,"author":{"gitId":"Nixx162"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2023-10-18"},{"lineNumber":12,"author":{"gitId":"Nixx162"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2023-10-18"},{"lineNumber":13,"author":{"gitId":"Nixx162"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-18"},{"lineNumber":14,"author":{"gitId":"Nixx162"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":15,"author":{"gitId":"Nixx162"},"content":"/**","lastModifiedDate":"2023-10-18"},{"lineNumber":16,"author":{"gitId":"larrywang0701"},"content":" * The parser for {@code help} command","lastModifiedDate":"2023-11-01"},{"lineNumber":17,"author":{"gitId":"Nixx162"},"content":" */","lastModifiedDate":"2023-10-18"},{"lineNumber":18,"author":{"gitId":"Nixx162"},"content":"public class HelpCommandParser implements Parser\u003cHelpCommand\u003e {","lastModifiedDate":"2023-10-18"},{"lineNumber":19,"author":{"gitId":"Nixx162"},"content":"    @Override","lastModifiedDate":"2023-10-18"},{"lineNumber":20,"author":{"gitId":"Nixx162"},"content":"    public HelpCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-18"},{"lineNumber":21,"author":{"gitId":"Nixx162"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2023-10-18"},{"lineNumber":22,"author":{"gitId":"Nixx162"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":23,"author":{"gitId":"Nixx162"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2023-10-18"},{"lineNumber":24,"author":{"gitId":"Nixx162"},"content":"            return new HelpCommand(true);","lastModifiedDate":"2023-10-18"},{"lineNumber":25,"author":{"gitId":"Nixx162"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":26,"author":{"gitId":"Nixx162"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":27,"author":{"gitId":"Nixx162"},"content":"        switch (trimmedArgs) {","lastModifiedDate":"2023-10-18"},{"lineNumber":28,"author":{"gitId":"Nixx162"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":29,"author":{"gitId":"Nixx162"},"content":"        case AddCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-18"},{"lineNumber":30,"author":{"gitId":"Nixx162"},"content":"            return new HelpCommand(true, trimmedArgs);","lastModifiedDate":"2023-10-18"},{"lineNumber":31,"author":{"gitId":"Nixx162"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":32,"author":{"gitId":"Nixx162"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-18"},{"lineNumber":33,"author":{"gitId":"Nixx162"},"content":"            return new HelpCommand(true, trimmedArgs);","lastModifiedDate":"2023-10-18"},{"lineNumber":34,"author":{"gitId":"Nixx162"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":35,"author":{"gitId":"Nixx162"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-18"},{"lineNumber":36,"author":{"gitId":"Nixx162"},"content":"            return new HelpCommand(true, trimmedArgs);","lastModifiedDate":"2023-10-18"},{"lineNumber":37,"author":{"gitId":"Nixx162"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":38,"author":{"gitId":"Nixx162"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-18"},{"lineNumber":39,"author":{"gitId":"Nixx162"},"content":"            return new HelpCommand(true, trimmedArgs);","lastModifiedDate":"2023-10-18"},{"lineNumber":40,"author":{"gitId":"Nixx162"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":41,"author":{"gitId":"Nixx162"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-18"},{"lineNumber":42,"author":{"gitId":"Nixx162"},"content":"            return new HelpCommand(true, trimmedArgs);","lastModifiedDate":"2023-10-18"},{"lineNumber":43,"author":{"gitId":"Nixx162"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":44,"author":{"gitId":"Nixx162"},"content":"        default:","lastModifiedDate":"2023-10-18"},{"lineNumber":45,"author":{"gitId":"Nixx162"},"content":"            List\u003cDouble\u003e similarityScores \u003d CliSyntax.COMMAND_LIST.stream()","lastModifiedDate":"2023-10-18"},{"lineNumber":46,"author":{"gitId":"Nixx162"},"content":"                .mapToDouble((command) -\u003e ParserUtil.score(command, trimmedArgs))","lastModifiedDate":"2023-10-18"},{"lineNumber":47,"author":{"gitId":"Nixx162"},"content":"                .boxed()","lastModifiedDate":"2023-10-18"},{"lineNumber":48,"author":{"gitId":"Nixx162"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2023-10-18"},{"lineNumber":49,"author":{"gitId":"Nixx162"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":50,"author":{"gitId":"Nixx162"},"content":"            double maxScore \u003d Collections.max(similarityScores);","lastModifiedDate":"2023-10-18"},{"lineNumber":51,"author":{"gitId":"Nixx162"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":52,"author":{"gitId":"Nixx162"},"content":"            if (maxScore \u003c 0.25) {","lastModifiedDate":"2023-10-19"},{"lineNumber":53,"author":{"gitId":"Nixx162"},"content":"                return new HelpCommand(false);","lastModifiedDate":"2023-10-18"},{"lineNumber":54,"author":{"gitId":"Nixx162"},"content":"            }","lastModifiedDate":"2023-10-18"},{"lineNumber":55,"author":{"gitId":"Nixx162"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":56,"author":{"gitId":"Nixx162"},"content":"            return new HelpCommand(false, CliSyntax.COMMAND_LIST.get(similarityScores.indexOf(maxScore)));","lastModifiedDate":"2023-10-18"},{"lineNumber":57,"author":{"gitId":"Nixx162"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":58,"author":{"gitId":"Nixx162"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":59,"author":{"gitId":"Nixx162"},"content":"}","lastModifiedDate":"2023-10-18"}],"authorContributionMap":{"larrywang0701":1,"Nixx162":58}},{"path":"src/main/java/seedu/address/logic/parser/ListCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"larrywang0701"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"zekone"},"content":"import static seedu.address.logic.Messages.MESSAGE_MISSING_SECONDARY_COMMAND;","lastModifiedDate":"2023-11-09"},{"lineNumber":4,"author":{"gitId":"larrywang0701"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"larrywang0701"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"larrywang0701"},"content":"import seedu.address.logic.commands.ListEventCommand;","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"larrywang0701"},"content":"import seedu.address.logic.commands.ListPersonCommand;","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"larrywang0701"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"larrywang0701"},"content":"/**","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"larrywang0701"},"content":" * The parser for all secondary {@code list} commands","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"larrywang0701"},"content":" */","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"larrywang0701"},"content":"public class ListCommandParser implements Parser\u003cListCommand\u003e {","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"larrywang0701"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"larrywang0701"},"content":"    public ListCommand parse(String userInput) throws ParseException {","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"larrywang0701"},"content":"        String secondaryCommandWord \u003d SecondaryCommandSelector.getSecondaryCommandWord(userInput);","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":19,"author":{"gitId":"zekone"},"content":"        if (secondaryCommandWord \u003d\u003d null) {","lastModifiedDate":"2023-11-09"},{"lineNumber":20,"author":{"gitId":"zekone"},"content":"            throw new ParseException(String.format(MESSAGE_MISSING_SECONDARY_COMMAND, ListCommand.COMMAND_WORD));","lastModifiedDate":"2023-11-09"},{"lineNumber":21,"author":{"gitId":"zekone"},"content":"        }","lastModifiedDate":"2023-11-09"},{"lineNumber":22,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":23,"author":{"gitId":"larrywang0701"},"content":"        String args \u003d SecondaryCommandSelector.getArguments(secondaryCommandWord, userInput);","lastModifiedDate":"2023-10-12"},{"lineNumber":24,"author":{"gitId":"larrywang0701"},"content":"        switch (secondaryCommandWord) {","lastModifiedDate":"2023-10-12"},{"lineNumber":25,"author":{"gitId":"larrywang0701"},"content":"        case ListPersonCommand.SECONDARY_COMMAND_WORD:","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"AndrewJanong"},"content":"            return new ListPersonCommandParser().parse(args);","lastModifiedDate":"2023-11-02"},{"lineNumber":27,"author":{"gitId":"larrywang0701"},"content":"        case ListEventCommand.SECONDARY_COMMAND_WORD:","lastModifiedDate":"2023-10-12"},{"lineNumber":28,"author":{"gitId":"larrywang0701"},"content":"            return new ListEventCommandParser().parse(args);","lastModifiedDate":"2023-11-01"},{"lineNumber":29,"author":{"gitId":"larrywang0701"},"content":"        default:","lastModifiedDate":"2023-10-12"},{"lineNumber":30,"author":{"gitId":"larrywang0701"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2023-10-12"},{"lineNumber":31,"author":{"gitId":"larrywang0701"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":32,"author":{"gitId":"larrywang0701"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":33,"author":{"gitId":"larrywang0701"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"larrywang0701":26,"zekone":6,"AndrewJanong":1}},{"path":"src/main/java/seedu/address/logic/parser/ListEventCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"larrywang0701"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-11-01"},{"lineNumber":2,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":3,"author":{"gitId":"larrywang0701"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-11-01"},{"lineNumber":4,"author":{"gitId":"larrywang0701"},"content":"import static seedu.address.logic.Messages.MESSAGE_START_TIME_AFTER_END_TIME;","lastModifiedDate":"2023-11-01"},{"lineNumber":5,"author":{"gitId":"larrywang0701"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_END_TIME;","lastModifiedDate":"2023-11-01"},{"lineNumber":6,"author":{"gitId":"larrywang0701"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SORT_DESCENDING;","lastModifiedDate":"2023-11-01"},{"lineNumber":7,"author":{"gitId":"larrywang0701"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_START_TIME;","lastModifiedDate":"2023-11-01"},{"lineNumber":8,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":9,"author":{"gitId":"larrywang0701"},"content":"import seedu.address.logic.commands.ListEventCommand;","lastModifiedDate":"2023-11-01"},{"lineNumber":10,"author":{"gitId":"larrywang0701"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-11-01"},{"lineNumber":11,"author":{"gitId":"larrywang0701"},"content":"import seedu.address.model.event.EventTime;","lastModifiedDate":"2023-11-01"},{"lineNumber":12,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":13,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":14,"author":{"gitId":"larrywang0701"},"content":"/**","lastModifiedDate":"2023-11-01"},{"lineNumber":15,"author":{"gitId":"larrywang0701"},"content":" * The parser for {@code list event} command","lastModifiedDate":"2023-11-01"},{"lineNumber":16,"author":{"gitId":"larrywang0701"},"content":" */","lastModifiedDate":"2023-11-01"},{"lineNumber":17,"author":{"gitId":"larrywang0701"},"content":"public class ListEventCommandParser implements Parser\u003cListEventCommand\u003e {","lastModifiedDate":"2023-11-01"},{"lineNumber":18,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":19,"author":{"gitId":"larrywang0701"},"content":"    @Override","lastModifiedDate":"2023-11-01"},{"lineNumber":20,"author":{"gitId":"larrywang0701"},"content":"    public ListEventCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-11-01"},{"lineNumber":21,"author":{"gitId":"larrywang0701"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args,","lastModifiedDate":"2023-11-01"},{"lineNumber":22,"author":{"gitId":"larrywang0701"},"content":"                PREFIX_START_TIME, PREFIX_END_TIME, PREFIX_SORT_DESCENDING);","lastModifiedDate":"2023-11-01"},{"lineNumber":23,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":24,"author":{"gitId":"larrywang0701"},"content":"        if ((","lastModifiedDate":"2023-11-01"},{"lineNumber":25,"author":{"gitId":"larrywang0701"},"content":"                ParserUtil.arePrefixesPresent(argMultimap, PREFIX_START_TIME)","lastModifiedDate":"2023-11-01"},{"lineNumber":26,"author":{"gitId":"larrywang0701"},"content":"                        \u0026\u0026 !ParserUtil.arePrefixesPresent(argMultimap, PREFIX_END_TIME))","lastModifiedDate":"2023-11-01"},{"lineNumber":27,"author":{"gitId":"larrywang0701"},"content":"                || (!ParserUtil.arePrefixesPresent(argMultimap, PREFIX_START_TIME)","lastModifiedDate":"2023-11-01"},{"lineNumber":28,"author":{"gitId":"larrywang0701"},"content":"                \u0026\u0026 ParserUtil.arePrefixesPresent(argMultimap, PREFIX_END_TIME))","lastModifiedDate":"2023-11-01"},{"lineNumber":29,"author":{"gitId":"larrywang0701"},"content":"                || !argMultimap.getPreamble().isEmpty()","lastModifiedDate":"2023-11-01"},{"lineNumber":30,"author":{"gitId":"larrywang0701"},"content":"                || !argMultimap.getValue(PREFIX_SORT_DESCENDING).orElseGet(()-\u003e\"\").isEmpty()) {","lastModifiedDate":"2023-11-01"},{"lineNumber":31,"author":{"gitId":"larrywang0701"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, ListEventCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-11-01"},{"lineNumber":32,"author":{"gitId":"larrywang0701"},"content":"        }","lastModifiedDate":"2023-11-01"},{"lineNumber":33,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":34,"author":{"gitId":"larrywang0701"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_START_TIME, PREFIX_END_TIME, PREFIX_SORT_DESCENDING);","lastModifiedDate":"2023-11-01"},{"lineNumber":35,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":36,"author":{"gitId":"larrywang0701"},"content":"        EventTime filterStartTime \u003d ParserUtil.arePrefixesPresent(argMultimap, PREFIX_START_TIME)","lastModifiedDate":"2023-11-04"},{"lineNumber":37,"author":{"gitId":"larrywang0701"},"content":"                ? ParserUtil.parseEventTime(argMultimap.getValue(PREFIX_START_TIME).get())","lastModifiedDate":"2023-11-04"},{"lineNumber":38,"author":{"gitId":"larrywang0701"},"content":"                : null;","lastModifiedDate":"2023-11-04"},{"lineNumber":39,"author":{"gitId":"larrywang0701"},"content":"        EventTime filterEndTime \u003d ParserUtil.arePrefixesPresent(argMultimap, PREFIX_END_TIME)","lastModifiedDate":"2023-11-04"},{"lineNumber":40,"author":{"gitId":"larrywang0701"},"content":"                ? ParserUtil.parseEventTime(argMultimap.getValue(PREFIX_END_TIME).get())","lastModifiedDate":"2023-11-04"},{"lineNumber":41,"author":{"gitId":"larrywang0701"},"content":"                : null;","lastModifiedDate":"2023-11-04"},{"lineNumber":42,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":43,"author":{"gitId":"larrywang0701"},"content":"        boolean useAscendingOrder \u003d !ParserUtil.arePrefixesPresent(argMultimap, PREFIX_SORT_DESCENDING);","lastModifiedDate":"2023-11-01"},{"lineNumber":44,"author":{"gitId":"larrywang0701"},"content":"        if (filterStartTime !\u003d null) {","lastModifiedDate":"2023-11-04"},{"lineNumber":45,"author":{"gitId":"larrywang0701"},"content":"            if (filterStartTime.isAfter(filterEndTime)) {","lastModifiedDate":"2023-11-01"},{"lineNumber":46,"author":{"gitId":"larrywang0701"},"content":"                throw new ParseException(String.format(MESSAGE_START_TIME_AFTER_END_TIME,","lastModifiedDate":"2023-11-04"},{"lineNumber":47,"author":{"gitId":"larrywang0701"},"content":"                        filterStartTime, filterEndTime));","lastModifiedDate":"2023-11-04"},{"lineNumber":48,"author":{"gitId":"larrywang0701"},"content":"            }","lastModifiedDate":"2023-11-04"},{"lineNumber":49,"author":{"gitId":"larrywang0701"},"content":"        }","lastModifiedDate":"2023-11-01"},{"lineNumber":50,"author":{"gitId":"larrywang0701"},"content":"        return new ListEventCommand(filterStartTime, filterEndTime, useAscendingOrder);","lastModifiedDate":"2023-11-01"},{"lineNumber":51,"author":{"gitId":"larrywang0701"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":52,"author":{"gitId":"larrywang0701"},"content":"}","lastModifiedDate":"2023-11-01"}],"authorContributionMap":{"larrywang0701":52}},{"path":"src/main/java/seedu/address/logic/parser/ListPersonCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"AndrewJanong"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-11-02"},{"lineNumber":2,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":3,"author":{"gitId":"AndrewJanong"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-11-02"},{"lineNumber":4,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":5,"author":{"gitId":"AndrewJanong"},"content":"import java.util.Set;","lastModifiedDate":"2023-11-02"},{"lineNumber":6,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":7,"author":{"gitId":"AndrewJanong"},"content":"import seedu.address.logic.commands.ListPersonCommand;","lastModifiedDate":"2023-11-02"},{"lineNumber":8,"author":{"gitId":"AndrewJanong"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-11-02"},{"lineNumber":9,"author":{"gitId":"AndrewJanong"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-11-02"},{"lineNumber":10,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":11,"author":{"gitId":"AndrewJanong"},"content":"/**","lastModifiedDate":"2023-11-02"},{"lineNumber":12,"author":{"gitId":"AndrewJanong"},"content":" * Parses input arguments and lists all contact based on arguments passed.","lastModifiedDate":"2023-11-02"},{"lineNumber":13,"author":{"gitId":"AndrewJanong"},"content":" */","lastModifiedDate":"2023-11-02"},{"lineNumber":14,"author":{"gitId":"AndrewJanong"},"content":"public class ListPersonCommandParser implements Parser\u003cListPersonCommand\u003e {","lastModifiedDate":"2023-11-02"},{"lineNumber":15,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":16,"author":{"gitId":"AndrewJanong"},"content":"    /**","lastModifiedDate":"2023-11-02"},{"lineNumber":17,"author":{"gitId":"AndrewJanong"},"content":"     * Parses the given {@code String} of arguments in the context of the ListCommand","lastModifiedDate":"2023-11-02"},{"lineNumber":18,"author":{"gitId":"AndrewJanong"},"content":"     * and returns an ListCommand object for execution.","lastModifiedDate":"2023-11-02"},{"lineNumber":19,"author":{"gitId":"AndrewJanong"},"content":"     *","lastModifiedDate":"2023-11-02"},{"lineNumber":20,"author":{"gitId":"AndrewJanong"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-11-02"},{"lineNumber":21,"author":{"gitId":"AndrewJanong"},"content":"     */","lastModifiedDate":"2023-11-02"},{"lineNumber":22,"author":{"gitId":"AndrewJanong"},"content":"    public ListPersonCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-11-02"},{"lineNumber":23,"author":{"gitId":"AndrewJanong"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_TAG);","lastModifiedDate":"2023-11-02"},{"lineNumber":24,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":25,"author":{"gitId":"AndrewJanong"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2023-11-02"},{"lineNumber":26,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":27,"author":{"gitId":"AndrewJanong"},"content":"        return new ListPersonCommand(tagList);","lastModifiedDate":"2023-11-02"},{"lineNumber":28,"author":{"gitId":"AndrewJanong"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":29,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":30,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":31,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":32,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":33,"author":{"gitId":"AndrewJanong"},"content":"}","lastModifiedDate":"2023-11-02"}],"authorContributionMap":{"AndrewJanong":33}},{"path":"src/main/java/seedu/address/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"larrywang0701"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_INTEGER_ARGUMENT;","lastModifiedDate":"2023-10-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"larrywang0701"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-10-25"},{"lineNumber":7,"author":{"gitId":"Nixx162"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"Nixx162"},"content":"import java.util.TreeSet;","lastModifiedDate":"2023-10-18"},{"lineNumber":12,"author":{"gitId":"larrywang0701"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-02-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":17,"author":{"gitId":"larrywang0701"},"content":"import seedu.address.model.event.EventID;","lastModifiedDate":"2023-10-25"},{"lineNumber":18,"author":{"gitId":"larrywang0701"},"content":"import seedu.address.model.event.EventInformation;","lastModifiedDate":"2023-10-25"},{"lineNumber":19,"author":{"gitId":"larrywang0701"},"content":"import seedu.address.model.event.EventLocation;","lastModifiedDate":"2023-10-25"},{"lineNumber":20,"author":{"gitId":"larrywang0701"},"content":"import seedu.address.model.event.EventName;","lastModifiedDate":"2023-10-25"},{"lineNumber":21,"author":{"gitId":"larrywang0701"},"content":"import seedu.address.model.event.EventTime;","lastModifiedDate":"2023-10-25"},{"lineNumber":22,"author":{"gitId":"josepholim"},"content":"import seedu.address.model.note.NoteContent;","lastModifiedDate":"2023-10-27"},{"lineNumber":23,"author":{"gitId":"josepholim"},"content":"import seedu.address.model.note.NoteID;","lastModifiedDate":"2023-10-27"},{"lineNumber":24,"author":{"gitId":"josepholim"},"content":"import seedu.address.model.note.NoteTitle;","lastModifiedDate":"2023-10-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-02-11"},{"lineNumber":26,"author":{"gitId":"larrywang0701"},"content":"import seedu.address.model.person.ContactID;","lastModifiedDate":"2023-10-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-02-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-02-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-02-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-02-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * Parses a {@code String address} into an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code address} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public static Address parseAddress(String address) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-30"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        String trimmedAddress \u003d address.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(trimmedAddress)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            throw new ParseException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        return new Address(trimmedAddress);","lastModifiedDate":"2017-05-30"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-30"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2017-05-30"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public static Tag parseTag(String tag) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2017-05-30"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        return new Tag(trimmedTag);","lastModifiedDate":"2017-05-30"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2017-03-07"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2017-05-15"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2017-02-11"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2017-02-11"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            tagSet.add(parseTag(tagName));","lastModifiedDate":"2017-05-30"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        return tagSet;","lastModifiedDate":"2017-03-07"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":138,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":139,"author":{"gitId":"larrywang0701"},"content":"    /**","lastModifiedDate":"2023-10-25"},{"lineNumber":140,"author":{"gitId":"larrywang0701"},"content":"     * Parses a {@code String eventName} into a {@code EventName}.","lastModifiedDate":"2023-10-25"},{"lineNumber":141,"author":{"gitId":"larrywang0701"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-10-25"},{"lineNumber":142,"author":{"gitId":"larrywang0701"},"content":"     *","lastModifiedDate":"2023-10-25"},{"lineNumber":143,"author":{"gitId":"larrywang0701"},"content":"     * @throws ParseException if the given {@code eventName} is invalid.","lastModifiedDate":"2023-10-25"},{"lineNumber":144,"author":{"gitId":"larrywang0701"},"content":"     */","lastModifiedDate":"2023-10-25"},{"lineNumber":145,"author":{"gitId":"larrywang0701"},"content":"    public static ContactID parseContactID(String contactID) throws ParseException {","lastModifiedDate":"2023-10-25"},{"lineNumber":146,"author":{"gitId":"larrywang0701"},"content":"        requireNonNull(contactID);","lastModifiedDate":"2023-10-25"},{"lineNumber":147,"author":{"gitId":"larrywang0701"},"content":"        String trimmedContactID \u003d contactID.trim();","lastModifiedDate":"2023-10-25"},{"lineNumber":148,"author":{"gitId":"larrywang0701"},"content":"        if (trimmedContactID.isEmpty()) {","lastModifiedDate":"2023-10-25"},{"lineNumber":149,"author":{"gitId":"larrywang0701"},"content":"            throw new ParseException(ContactID.MESSAGE_NON_EMPTY);","lastModifiedDate":"2023-10-25"},{"lineNumber":150,"author":{"gitId":"larrywang0701"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":151,"author":{"gitId":"larrywang0701"},"content":"        ContactID result \u003d null;","lastModifiedDate":"2023-10-25"},{"lineNumber":152,"author":{"gitId":"larrywang0701"},"content":"        try {","lastModifiedDate":"2023-10-25"},{"lineNumber":153,"author":{"gitId":"larrywang0701"},"content":"            result \u003d ContactID.fromString(trimmedContactID);","lastModifiedDate":"2023-10-25"},{"lineNumber":154,"author":{"gitId":"larrywang0701"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-10-25"},{"lineNumber":155,"author":{"gitId":"larrywang0701"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_INTEGER_ARGUMENT, e.getMessage()));","lastModifiedDate":"2023-10-25"},{"lineNumber":156,"author":{"gitId":"larrywang0701"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":157,"author":{"gitId":"larrywang0701"},"content":"        return result;","lastModifiedDate":"2023-10-25"},{"lineNumber":158,"author":{"gitId":"larrywang0701"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":159,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":160,"author":{"gitId":"josepholim"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":161,"author":{"gitId":"josepholim"},"content":"     * Parses a {@code String noteTitle} into a {@code NoteTitle}.","lastModifiedDate":"2023-10-27"},{"lineNumber":162,"author":{"gitId":"josepholim"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-10-27"},{"lineNumber":163,"author":{"gitId":"josepholim"},"content":"     *","lastModifiedDate":"2023-10-27"},{"lineNumber":164,"author":{"gitId":"josepholim"},"content":"     * @throws ParseException if the given {@code noteTitle} is invalid.","lastModifiedDate":"2023-10-27"},{"lineNumber":165,"author":{"gitId":"josepholim"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":166,"author":{"gitId":"josepholim"},"content":"    public static NoteTitle parseNoteTitle(String noteTitle) throws ParseException {","lastModifiedDate":"2023-10-27"},{"lineNumber":167,"author":{"gitId":"josepholim"},"content":"        requireNonNull(noteTitle);","lastModifiedDate":"2023-10-27"},{"lineNumber":168,"author":{"gitId":"josepholim"},"content":"        String trimmedNoteTitle \u003d noteTitle.trim();","lastModifiedDate":"2023-10-27"},{"lineNumber":169,"author":{"gitId":"josepholim"},"content":"        if (!NoteTitle.isValidNoteTitle(trimmedNoteTitle)) {","lastModifiedDate":"2023-10-27"},{"lineNumber":170,"author":{"gitId":"josepholim"},"content":"            throw new ParseException(NoteTitle.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-27"},{"lineNumber":171,"author":{"gitId":"josepholim"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":172,"author":{"gitId":"josepholim"},"content":"        return NoteTitle.fromString(trimmedNoteTitle);","lastModifiedDate":"2023-10-27"},{"lineNumber":173,"author":{"gitId":"josepholim"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":174,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":175,"author":{"gitId":"josepholim"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":176,"author":{"gitId":"josepholim"},"content":"     * Parses a {@code String noteContent} into a {@code NoteContent}.","lastModifiedDate":"2023-10-27"},{"lineNumber":177,"author":{"gitId":"josepholim"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-10-27"},{"lineNumber":178,"author":{"gitId":"josepholim"},"content":"     *","lastModifiedDate":"2023-10-27"},{"lineNumber":179,"author":{"gitId":"josepholim"},"content":"     * @throws ParseException if the given {@code noteContent} is invalid.","lastModifiedDate":"2023-10-27"},{"lineNumber":180,"author":{"gitId":"josepholim"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":181,"author":{"gitId":"josepholim"},"content":"    public static NoteContent parseNoteContent(String noteContent) throws ParseException {","lastModifiedDate":"2023-10-27"},{"lineNumber":182,"author":{"gitId":"josepholim"},"content":"        requireNonNull(noteContent);","lastModifiedDate":"2023-10-27"},{"lineNumber":183,"author":{"gitId":"josepholim"},"content":"        String trimmedNoteContent \u003d noteContent.trim();","lastModifiedDate":"2023-10-27"},{"lineNumber":184,"author":{"gitId":"josepholim"},"content":"        if (!NoteContent.isValidNoteContent(trimmedNoteContent)) {","lastModifiedDate":"2023-10-27"},{"lineNumber":185,"author":{"gitId":"josepholim"},"content":"            throw new ParseException(NoteContent.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-27"},{"lineNumber":186,"author":{"gitId":"josepholim"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":187,"author":{"gitId":"josepholim"},"content":"        return NoteContent.fromString(trimmedNoteContent);","lastModifiedDate":"2023-10-27"},{"lineNumber":188,"author":{"gitId":"josepholim"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":189,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":190,"author":{"gitId":"josepholim"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":191,"author":{"gitId":"josepholim"},"content":"     * Parses a {@code String noteID} into a {@code NoteID}.","lastModifiedDate":"2023-10-27"},{"lineNumber":192,"author":{"gitId":"josepholim"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-10-27"},{"lineNumber":193,"author":{"gitId":"josepholim"},"content":"     *","lastModifiedDate":"2023-10-27"},{"lineNumber":194,"author":{"gitId":"josepholim"},"content":"     * @throws ParseException if the given {@code noteID} is invalid.","lastModifiedDate":"2023-10-27"},{"lineNumber":195,"author":{"gitId":"josepholim"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":196,"author":{"gitId":"josepholim"},"content":"    public static NoteID parseNoteID(String noteID) throws ParseException {","lastModifiedDate":"2023-10-27"},{"lineNumber":197,"author":{"gitId":"josepholim"},"content":"        requireNonNull(noteID);","lastModifiedDate":"2023-10-27"},{"lineNumber":198,"author":{"gitId":"josepholim"},"content":"        String trimmedNoteID \u003d noteID.trim();","lastModifiedDate":"2023-10-27"},{"lineNumber":199,"author":{"gitId":"josepholim"},"content":"        if (trimmedNoteID.isEmpty()) {","lastModifiedDate":"2023-10-27"},{"lineNumber":200,"author":{"gitId":"josepholim"},"content":"            throw new ParseException(NoteID.MESSAGE_NON_EMPTY);","lastModifiedDate":"2023-10-27"},{"lineNumber":201,"author":{"gitId":"josepholim"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":202,"author":{"gitId":"josepholim"},"content":"        NoteID result \u003d null;","lastModifiedDate":"2023-10-27"},{"lineNumber":203,"author":{"gitId":"josepholim"},"content":"        try {","lastModifiedDate":"2023-10-27"},{"lineNumber":204,"author":{"gitId":"josepholim"},"content":"            result \u003d NoteID.fromString(trimmedNoteID);","lastModifiedDate":"2023-10-27"},{"lineNumber":205,"author":{"gitId":"josepholim"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-10-27"},{"lineNumber":206,"author":{"gitId":"josepholim"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_INTEGER_ARGUMENT, e.getMessage()));","lastModifiedDate":"2023-10-27"},{"lineNumber":207,"author":{"gitId":"josepholim"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":208,"author":{"gitId":"josepholim"},"content":"        return result;","lastModifiedDate":"2023-10-27"},{"lineNumber":209,"author":{"gitId":"josepholim"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":210,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":211,"author":{"gitId":"larrywang0701"},"content":"    /**","lastModifiedDate":"2023-10-25"},{"lineNumber":212,"author":{"gitId":"larrywang0701"},"content":"     * Parses a {@code String eventName} into a {@code EventName}.","lastModifiedDate":"2023-10-25"},{"lineNumber":213,"author":{"gitId":"larrywang0701"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-10-25"},{"lineNumber":214,"author":{"gitId":"larrywang0701"},"content":"     *","lastModifiedDate":"2023-10-25"},{"lineNumber":215,"author":{"gitId":"larrywang0701"},"content":"     * @throws ParseException if the given {@code eventName} is invalid.","lastModifiedDate":"2023-10-25"},{"lineNumber":216,"author":{"gitId":"larrywang0701"},"content":"     */","lastModifiedDate":"2023-10-25"},{"lineNumber":217,"author":{"gitId":"larrywang0701"},"content":"    public static EventName parseEventName(String eventName) throws ParseException {","lastModifiedDate":"2023-10-25"},{"lineNumber":218,"author":{"gitId":"larrywang0701"},"content":"        requireNonNull(eventName);","lastModifiedDate":"2023-10-25"},{"lineNumber":219,"author":{"gitId":"larrywang0701"},"content":"        String trimmedEventName \u003d eventName.trim();","lastModifiedDate":"2023-10-25"},{"lineNumber":220,"author":{"gitId":"larrywang0701"},"content":"        if (!EventName.isValidEventName(trimmedEventName)) {","lastModifiedDate":"2023-10-25"},{"lineNumber":221,"author":{"gitId":"larrywang0701"},"content":"            throw new ParseException(EventName.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-25"},{"lineNumber":222,"author":{"gitId":"larrywang0701"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":223,"author":{"gitId":"larrywang0701"},"content":"        return EventName.fromString(trimmedEventName);","lastModifiedDate":"2023-10-25"},{"lineNumber":224,"author":{"gitId":"larrywang0701"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":225,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":226,"author":{"gitId":"larrywang0701"},"content":"    /**","lastModifiedDate":"2023-10-25"},{"lineNumber":227,"author":{"gitId":"larrywang0701"},"content":"     * Parses a {@code String eventTime} into a {@code EventTime} with the specified date-time format.","lastModifiedDate":"2023-10-25"},{"lineNumber":228,"author":{"gitId":"larrywang0701"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-10-25"},{"lineNumber":229,"author":{"gitId":"larrywang0701"},"content":"     *","lastModifiedDate":"2023-10-25"},{"lineNumber":230,"author":{"gitId":"larrywang0701"},"content":"     * @throws ParseException if the given {@code eventTime} is invalid.","lastModifiedDate":"2023-10-25"},{"lineNumber":231,"author":{"gitId":"larrywang0701"},"content":"     */","lastModifiedDate":"2023-10-25"},{"lineNumber":232,"author":{"gitId":"larrywang0701"},"content":"    public static EventTime parseEventTime(String eventTime) throws ParseException {","lastModifiedDate":"2023-10-25"},{"lineNumber":233,"author":{"gitId":"larrywang0701"},"content":"        String trimmedEventTime \u003d \"\";","lastModifiedDate":"2023-10-25"},{"lineNumber":234,"author":{"gitId":"larrywang0701"},"content":"        if (eventTime !\u003d null) {","lastModifiedDate":"2023-10-25"},{"lineNumber":235,"author":{"gitId":"larrywang0701"},"content":"            trimmedEventTime \u003d eventTime.trim();","lastModifiedDate":"2023-10-25"},{"lineNumber":236,"author":{"gitId":"larrywang0701"},"content":"            if (trimmedEventTime.isEmpty()) {","lastModifiedDate":"2023-10-25"},{"lineNumber":237,"author":{"gitId":"larrywang0701"},"content":"                throw new ParseException(EventTime.MESSAGE_NON_EMPTY);","lastModifiedDate":"2023-10-25"},{"lineNumber":238,"author":{"gitId":"larrywang0701"},"content":"            }","lastModifiedDate":"2023-10-25"},{"lineNumber":239,"author":{"gitId":"larrywang0701"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":240,"author":{"gitId":"larrywang0701"},"content":"        EventTime result \u003d null;","lastModifiedDate":"2023-10-25"},{"lineNumber":241,"author":{"gitId":"larrywang0701"},"content":"        try {","lastModifiedDate":"2023-10-25"},{"lineNumber":242,"author":{"gitId":"larrywang0701"},"content":"            result \u003d EventTime.fromString(trimmedEventTime);","lastModifiedDate":"2023-10-25"},{"lineNumber":243,"author":{"gitId":"larrywang0701"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-10-25"},{"lineNumber":244,"author":{"gitId":"larrywang0701"},"content":"            throw new ParseException(EventTime.MESSAGE_INVALID_DATETIME_FORMAT + e.getMessage());","lastModifiedDate":"2023-10-25"},{"lineNumber":245,"author":{"gitId":"larrywang0701"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":246,"author":{"gitId":"larrywang0701"},"content":"        return result;","lastModifiedDate":"2023-10-25"},{"lineNumber":247,"author":{"gitId":"larrywang0701"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":248,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":249,"author":{"gitId":"larrywang0701"},"content":"    /**","lastModifiedDate":"2023-10-25"},{"lineNumber":250,"author":{"gitId":"larrywang0701"},"content":"     * Parses a {@code String eventLocation} into a {@code EventLocation}.","lastModifiedDate":"2023-10-25"},{"lineNumber":251,"author":{"gitId":"larrywang0701"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-10-25"},{"lineNumber":252,"author":{"gitId":"larrywang0701"},"content":"     *","lastModifiedDate":"2023-10-25"},{"lineNumber":253,"author":{"gitId":"larrywang0701"},"content":"     * @throws ParseException if the given {@code eventLocation} is invalid.","lastModifiedDate":"2023-10-25"},{"lineNumber":254,"author":{"gitId":"larrywang0701"},"content":"     */","lastModifiedDate":"2023-10-25"},{"lineNumber":255,"author":{"gitId":"larrywang0701"},"content":"    public static EventLocation parseEventLocation(String eventLocation) throws ParseException {","lastModifiedDate":"2023-10-25"},{"lineNumber":256,"author":{"gitId":"larrywang0701"},"content":"        if (eventLocation \u003d\u003d null) {","lastModifiedDate":"2023-10-25"},{"lineNumber":257,"author":{"gitId":"larrywang0701"},"content":"            return EventLocation.fromString(\"\");","lastModifiedDate":"2023-10-25"},{"lineNumber":258,"author":{"gitId":"larrywang0701"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":259,"author":{"gitId":"larrywang0701"},"content":"        String trimmedEventLocation \u003d eventLocation.trim();","lastModifiedDate":"2023-10-25"},{"lineNumber":260,"author":{"gitId":"larrywang0701"},"content":"        if (!EventLocation.isValidEventLocation(trimmedEventLocation)) {","lastModifiedDate":"2023-10-25"},{"lineNumber":261,"author":{"gitId":"larrywang0701"},"content":"            throw new ParseException(EventLocation.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-25"},{"lineNumber":262,"author":{"gitId":"larrywang0701"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":263,"author":{"gitId":"larrywang0701"},"content":"        return EventLocation.fromString(trimmedEventLocation);","lastModifiedDate":"2023-10-25"},{"lineNumber":264,"author":{"gitId":"larrywang0701"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":265,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":266,"author":{"gitId":"larrywang0701"},"content":"    /**","lastModifiedDate":"2023-10-25"},{"lineNumber":267,"author":{"gitId":"larrywang0701"},"content":"     * Parses a {@code String eventInformation} into a {@code EventInformation}.","lastModifiedDate":"2023-10-25"},{"lineNumber":268,"author":{"gitId":"larrywang0701"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-10-25"},{"lineNumber":269,"author":{"gitId":"larrywang0701"},"content":"     *","lastModifiedDate":"2023-10-25"},{"lineNumber":270,"author":{"gitId":"larrywang0701"},"content":"     * @throws ParseException if the given {@code eventInformation} is invalid.","lastModifiedDate":"2023-10-25"},{"lineNumber":271,"author":{"gitId":"larrywang0701"},"content":"     */","lastModifiedDate":"2023-10-25"},{"lineNumber":272,"author":{"gitId":"larrywang0701"},"content":"    public static EventInformation parseEventInformation(String eventInformation) throws ParseException {","lastModifiedDate":"2023-10-25"},{"lineNumber":273,"author":{"gitId":"larrywang0701"},"content":"        if (eventInformation \u003d\u003d null) {","lastModifiedDate":"2023-10-25"},{"lineNumber":274,"author":{"gitId":"larrywang0701"},"content":"            return EventInformation.fromString(\"\");","lastModifiedDate":"2023-10-25"},{"lineNumber":275,"author":{"gitId":"larrywang0701"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":276,"author":{"gitId":"larrywang0701"},"content":"        String trimmedEventInformation \u003d eventInformation.trim();","lastModifiedDate":"2023-10-25"},{"lineNumber":277,"author":{"gitId":"larrywang0701"},"content":"        if (!EventInformation.isValidEventInformation(trimmedEventInformation)) {","lastModifiedDate":"2023-10-25"},{"lineNumber":278,"author":{"gitId":"larrywang0701"},"content":"            throw new ParseException(EventInformation.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-25"},{"lineNumber":279,"author":{"gitId":"larrywang0701"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":280,"author":{"gitId":"larrywang0701"},"content":"        return EventInformation.fromString(trimmedEventInformation);","lastModifiedDate":"2023-10-25"},{"lineNumber":281,"author":{"gitId":"larrywang0701"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":282,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":283,"author":{"gitId":"larrywang0701"},"content":"    /**","lastModifiedDate":"2023-10-25"},{"lineNumber":284,"author":{"gitId":"larrywang0701"},"content":"     * Parses a {@code String eventID} into a {@code EventID}.","lastModifiedDate":"2023-10-25"},{"lineNumber":285,"author":{"gitId":"larrywang0701"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-10-25"},{"lineNumber":286,"author":{"gitId":"larrywang0701"},"content":"     *","lastModifiedDate":"2023-10-25"},{"lineNumber":287,"author":{"gitId":"larrywang0701"},"content":"     * @throws ParseException if the given {@code eventID} is invalid.","lastModifiedDate":"2023-10-25"},{"lineNumber":288,"author":{"gitId":"larrywang0701"},"content":"     */","lastModifiedDate":"2023-10-25"},{"lineNumber":289,"author":{"gitId":"larrywang0701"},"content":"    public static EventID parseEventID(String eventID) throws ParseException {","lastModifiedDate":"2023-10-25"},{"lineNumber":290,"author":{"gitId":"larrywang0701"},"content":"        requireNonNull(eventID);","lastModifiedDate":"2023-10-25"},{"lineNumber":291,"author":{"gitId":"larrywang0701"},"content":"        String trimmedEventID \u003d eventID.trim();","lastModifiedDate":"2023-10-25"},{"lineNumber":292,"author":{"gitId":"larrywang0701"},"content":"        if (trimmedEventID.isEmpty()) {","lastModifiedDate":"2023-10-25"},{"lineNumber":293,"author":{"gitId":"larrywang0701"},"content":"            throw new ParseException(EventID.MESSAGE_NON_EMPTY);","lastModifiedDate":"2023-10-25"},{"lineNumber":294,"author":{"gitId":"larrywang0701"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":295,"author":{"gitId":"larrywang0701"},"content":"        EventID result \u003d null;","lastModifiedDate":"2023-10-25"},{"lineNumber":296,"author":{"gitId":"larrywang0701"},"content":"        try {","lastModifiedDate":"2023-10-25"},{"lineNumber":297,"author":{"gitId":"larrywang0701"},"content":"            result \u003d EventID.fromString(trimmedEventID);","lastModifiedDate":"2023-10-25"},{"lineNumber":298,"author":{"gitId":"larrywang0701"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-10-25"},{"lineNumber":299,"author":{"gitId":"larrywang0701"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_INTEGER_ARGUMENT, e.getMessage()));","lastModifiedDate":"2023-10-25"},{"lineNumber":300,"author":{"gitId":"larrywang0701"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":301,"author":{"gitId":"larrywang0701"},"content":"        return result;","lastModifiedDate":"2023-10-25"},{"lineNumber":302,"author":{"gitId":"larrywang0701"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":303,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":304,"author":{"gitId":"larrywang0701"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":305,"author":{"gitId":"larrywang0701"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values","lastModifiedDate":"2023-10-12"},{"lineNumber":306,"author":{"gitId":"larrywang0701"},"content":"     * in the given","lastModifiedDate":"2023-10-12"},{"lineNumber":307,"author":{"gitId":"larrywang0701"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2023-10-12"},{"lineNumber":308,"author":{"gitId":"larrywang0701"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":309,"author":{"gitId":"larrywang0701"},"content":"    public static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2023-10-12"},{"lineNumber":310,"author":{"gitId":"larrywang0701"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2023-10-12"},{"lineNumber":311,"author":{"gitId":"larrywang0701"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":312,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":313,"author":{"gitId":"Nixx162"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":314,"author":{"gitId":"Nixx162"},"content":"     * Calculate the similarity score of objects where 0.0 implies absolutely no","lastModifiedDate":"2023-10-18"},{"lineNumber":315,"author":{"gitId":"Nixx162"},"content":"     * similarity","lastModifiedDate":"2023-10-18"},{"lineNumber":316,"author":{"gitId":"Nixx162"},"content":"     * and 1.0 implies absolute similarity","lastModifiedDate":"2023-10-18"},{"lineNumber":317,"author":{"gitId":"Nixx162"},"content":"     *","lastModifiedDate":"2023-10-18"},{"lineNumber":318,"author":{"gitId":"Nixx162"},"content":"     * @author rrice-reused","lastModifiedDate":"2023-10-18"},{"lineNumber":319,"author":{"gitId":"Nixx162"},"content":"     * @param first the first string to compare","lastModifiedDate":"2023-10-18"},{"lineNumber":320,"author":{"gitId":"Nixx162"},"content":"     * @param second the second string to compare","lastModifiedDate":"2023-10-18"},{"lineNumber":321,"author":{"gitId":"Nixx162"},"content":"     * @return a number between 0.0 and 1.0","lastModifiedDate":"2023-10-18"},{"lineNumber":322,"author":{"gitId":"Nixx162"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":323,"author":{"gitId":"Nixx162"},"content":"    public static double score(String first, String second) {","lastModifiedDate":"2023-10-18"},{"lineNumber":324,"author":{"gitId":"Nixx162"},"content":"        // Create two sets of character bigrams, one for each string","lastModifiedDate":"2023-10-18"},{"lineNumber":325,"author":{"gitId":"Nixx162"},"content":"        Set\u003cString\u003e s1 \u003d splitIntoBigrams(first);","lastModifiedDate":"2023-10-18"},{"lineNumber":326,"author":{"gitId":"Nixx162"},"content":"        Set\u003cString\u003e s2 \u003d splitIntoBigrams(second);","lastModifiedDate":"2023-10-18"},{"lineNumber":327,"author":{"gitId":"Nixx162"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":328,"author":{"gitId":"Nixx162"},"content":"        // Get the number of elements in each set","lastModifiedDate":"2023-10-18"},{"lineNumber":329,"author":{"gitId":"Nixx162"},"content":"        int n1 \u003d s1.size();","lastModifiedDate":"2023-10-18"},{"lineNumber":330,"author":{"gitId":"Nixx162"},"content":"        int n2 \u003d s2.size();","lastModifiedDate":"2023-10-18"},{"lineNumber":331,"author":{"gitId":"Nixx162"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":332,"author":{"gitId":"Nixx162"},"content":"        // Find the intersection, and get the number of elements in that set","lastModifiedDate":"2023-10-18"},{"lineNumber":333,"author":{"gitId":"Nixx162"},"content":"        s1.retainAll(s2);","lastModifiedDate":"2023-10-18"},{"lineNumber":334,"author":{"gitId":"Nixx162"},"content":"        int nt \u003d s1.size();","lastModifiedDate":"2023-10-18"},{"lineNumber":335,"author":{"gitId":"Nixx162"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":336,"author":{"gitId":"Nixx162"},"content":"        return (2.0 * (double) nt) / ((double) (n1 + n2));","lastModifiedDate":"2023-10-18"},{"lineNumber":337,"author":{"gitId":"Nixx162"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":338,"author":{"gitId":"Nixx162"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":339,"author":{"gitId":"Nixx162"},"content":"    //@author rrice-reused","lastModifiedDate":"2023-10-18"},{"lineNumber":340,"author":{"gitId":"Nixx162"},"content":"    private static Set\u003cString\u003e splitIntoBigrams(String s) {","lastModifiedDate":"2023-10-18"},{"lineNumber":341,"author":{"gitId":"Nixx162"},"content":"        ArrayList\u003cString\u003e bigrams \u003d new ArrayList\u003cString\u003e();","lastModifiedDate":"2023-10-18"},{"lineNumber":342,"author":{"gitId":"Nixx162"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":343,"author":{"gitId":"Nixx162"},"content":"        if (s.length() \u003c 2) {","lastModifiedDate":"2023-10-18"},{"lineNumber":344,"author":{"gitId":"Nixx162"},"content":"            bigrams.add(s);","lastModifiedDate":"2023-10-18"},{"lineNumber":345,"author":{"gitId":"Nixx162"},"content":"        } else {","lastModifiedDate":"2023-10-18"},{"lineNumber":346,"author":{"gitId":"Nixx162"},"content":"            for (int i \u003d 1; i \u003c s.length(); i++) {","lastModifiedDate":"2023-10-18"},{"lineNumber":347,"author":{"gitId":"Nixx162"},"content":"                StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-10-18"},{"lineNumber":348,"author":{"gitId":"Nixx162"},"content":"                sb.append(s.charAt(i - 1));","lastModifiedDate":"2023-10-18"},{"lineNumber":349,"author":{"gitId":"Nixx162"},"content":"                sb.append(s.charAt(i));","lastModifiedDate":"2023-10-18"},{"lineNumber":350,"author":{"gitId":"Nixx162"},"content":"                bigrams.add(sb.toString());","lastModifiedDate":"2023-10-18"},{"lineNumber":351,"author":{"gitId":"Nixx162"},"content":"            }","lastModifiedDate":"2023-10-18"},{"lineNumber":352,"author":{"gitId":"Nixx162"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":353,"author":{"gitId":"Nixx162"},"content":"        return new TreeSet\u003cString\u003e(bigrams);","lastModifiedDate":"2023-10-18"},{"lineNumber":354,"author":{"gitId":"Nixx162"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":355,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"larrywang0701":134,"-":124,"josepholim":53,"Nixx162":44}},{"path":"src/main/java/seedu/address/logic/parser/SecondaryCommandSelector.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"larrywang0701"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"larrywang0701"},"content":"/**","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"larrywang0701"},"content":" * Helper methods for parsing secondary commands","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"larrywang0701"},"content":" */","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"larrywang0701"},"content":"public abstract class SecondaryCommandSelector {","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"larrywang0701"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"zekone"},"content":"     * Get the secondary command word. For example, the command word {@code event}","lastModifiedDate":"2023-11-09"},{"lineNumber":10,"author":{"gitId":"zekone"},"content":"     * in the comman {@code add event ...}","lastModifiedDate":"2023-11-09"},{"lineNumber":11,"author":{"gitId":"zekone"},"content":"     *","lastModifiedDate":"2023-11-09"},{"lineNumber":12,"author":{"gitId":"larrywang0701"},"content":"     * @param str The command arguments after the primary command word","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"larrywang0701"},"content":"     * @return The secondary command word","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"larrywang0701"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"zekone"},"content":"    public static String getSecondaryCommandWord(String str) {","lastModifiedDate":"2023-11-09"},{"lineNumber":16,"author":{"gitId":"larrywang0701"},"content":"        try {","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"larrywang0701"},"content":"            return str.split(\" \")[1];","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"larrywang0701"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"zekone"},"content":"            return null;","lastModifiedDate":"2023-11-09"},{"lineNumber":20,"author":{"gitId":"larrywang0701"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":22,"author":{"gitId":"larrywang0701"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":24,"author":{"gitId":"larrywang0701"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":25,"author":{"gitId":"larrywang0701"},"content":"     * Get the arguments after secondary command word","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"larrywang0701"},"content":"     * param str The command arguments after the primary command word","lastModifiedDate":"2023-10-12"},{"lineNumber":27,"author":{"gitId":"zekone"},"content":"     *","lastModifiedDate":"2023-11-09"},{"lineNumber":28,"author":{"gitId":"larrywang0701"},"content":"     * @return The arguments after secondary command word","lastModifiedDate":"2023-10-12"},{"lineNumber":29,"author":{"gitId":"larrywang0701"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":30,"author":{"gitId":"larrywang0701"},"content":"    public static String getArguments(String secondaryCommandWord, String str) {","lastModifiedDate":"2023-10-12"},{"lineNumber":31,"author":{"gitId":"larrywang0701"},"content":"        return str.replaceFirst(secondaryCommandWord, \"\");","lastModifiedDate":"2023-10-12"},{"lineNumber":32,"author":{"gitId":"larrywang0701"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":33,"author":{"gitId":"larrywang0701"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"larrywang0701":27,"zekone":6}},{"path":"src/main/java/seedu/address/model/AddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":9,"author":{"gitId":"Nixx162"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2023-11-01"},{"lineNumber":10,"author":{"gitId":"larrywang0701"},"content":"import seedu.address.model.event.EventID;","lastModifiedDate":"2023-11-01"},{"lineNumber":11,"author":{"gitId":"Nixx162"},"content":"import seedu.address.model.event.UniqueEventList;","lastModifiedDate":"2023-11-01"},{"lineNumber":12,"author":{"gitId":"AndrewJanong"},"content":"import seedu.address.model.note.Note;","lastModifiedDate":"2023-10-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.UniquePersonList;","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Wraps all data at the address-book level","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Duplicates are not allowed (by .isSamePerson comparison)","lastModifiedDate":"2018-04-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class AddressBook implements ReadOnlyAddressBook {","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final UniquePersonList persons;","lastModifiedDate":"2016-08-26"},{"lineNumber":23,"author":{"gitId":"larrywang0701"},"content":"    private final UniqueEventList allEvents;","lastModifiedDate":"2023-11-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2019-05-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2016-10-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2016-10-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     *   among constructors.","lastModifiedDate":"2016-10-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    {","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        persons \u003d new UniquePersonList();","lastModifiedDate":"2016-08-26"},{"lineNumber":34,"author":{"gitId":"larrywang0701"},"content":"        allEvents \u003d new UniqueEventList();","lastModifiedDate":"2023-11-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public AddressBook() {}","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Creates an AddressBook using the Persons in the {@code toBeCopied}","lastModifiedDate":"2018-03-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public AddressBook(ReadOnlyAddressBook toBeCopied) {","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2016-12-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2016-12-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    //// list overwrite operations","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Replaces the contents of the person list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        this.persons.setPersons(persons);","lastModifiedDate":"2016-10-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"larrywang0701"},"content":"    /**","lastModifiedDate":"2023-11-01"},{"lineNumber":58,"author":{"gitId":"larrywang0701"},"content":"     * Replaces the contents of the event list with {@code events}.","lastModifiedDate":"2023-11-01"},{"lineNumber":59,"author":{"gitId":"larrywang0701"},"content":"     * {@code events} must not contain duplicate persons.","lastModifiedDate":"2023-11-01"},{"lineNumber":60,"author":{"gitId":"larrywang0701"},"content":"     */","lastModifiedDate":"2023-11-01"},{"lineNumber":61,"author":{"gitId":"larrywang0701"},"content":"    public void setEvents(List\u003cEvent\u003e events) {","lastModifiedDate":"2023-11-01"},{"lineNumber":62,"author":{"gitId":"larrywang0701"},"content":"        this.allEvents.setEvents(events);","lastModifiedDate":"2023-11-01"},{"lineNumber":63,"author":{"gitId":"larrywang0701"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":64,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":65,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code AddressBook} with {@code newData}.","lastModifiedDate":"2017-08-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyAddressBook newData) {","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        requireNonNull(newData);","lastModifiedDate":"2017-05-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-20"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        setPersons(newData.getPersonList());","lastModifiedDate":"2018-03-29"},{"lineNumber":73,"author":{"gitId":"larrywang0701"},"content":"        setEvents(newData.getEventList());","lastModifiedDate":"2023-11-01"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    //// person-level operations","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        return persons.contains(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * Adds a person to the address book.","lastModifiedDate":"2016-09-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * The person must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void addPerson(Person p) {","lastModifiedDate":"2018-08-07"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        persons.add(p);","lastModifiedDate":"2018-03-29"},{"lineNumber":92,"author":{"gitId":"larrywang0701"},"content":"        p.getEvents().forEach(this.allEvents::add);","lastModifiedDate":"2023-11-01"},{"lineNumber":93,"author":{"gitId":"larrywang0701"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":94,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":95,"author":{"gitId":"larrywang0701"},"content":"    /**","lastModifiedDate":"2023-11-01"},{"lineNumber":96,"author":{"gitId":"larrywang0701"},"content":"     * Adds an event to the address book with the specified person as owner.","lastModifiedDate":"2023-11-01"},{"lineNumber":97,"author":{"gitId":"larrywang0701"},"content":"     * The event must not already exists in the address book.","lastModifiedDate":"2023-11-01"},{"lineNumber":98,"author":{"gitId":"larrywang0701"},"content":"     */","lastModifiedDate":"2023-11-01"},{"lineNumber":99,"author":{"gitId":"larrywang0701"},"content":"    public void addEvent(Event toAdd, Person owner) {","lastModifiedDate":"2023-11-01"},{"lineNumber":100,"author":{"gitId":"larrywang0701"},"content":"        allEvents.add(toAdd);","lastModifiedDate":"2023-11-01"},{"lineNumber":101,"author":{"gitId":"larrywang0701"},"content":"        owner.addEvent(toAdd);","lastModifiedDate":"2023-11-01"},{"lineNumber":102,"author":{"gitId":"larrywang0701"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":103,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":104,"author":{"gitId":"larrywang0701"},"content":"    /**","lastModifiedDate":"2023-11-01"},{"lineNumber":105,"author":{"gitId":"larrywang0701"},"content":"     * Removes an event to the address book for the specified person and the global event list.","lastModifiedDate":"2023-11-01"},{"lineNumber":106,"author":{"gitId":"larrywang0701"},"content":"     * The event must exist in the address book.","lastModifiedDate":"2023-11-01"},{"lineNumber":107,"author":{"gitId":"larrywang0701"},"content":"     */","lastModifiedDate":"2023-11-01"},{"lineNumber":108,"author":{"gitId":"larrywang0701"},"content":"    public Event removeEventByID(EventID id, Person owner) {","lastModifiedDate":"2023-11-01"},{"lineNumber":109,"author":{"gitId":"larrywang0701"},"content":"        Event event \u003d owner.removeEventByUserFriendlyId(id);","lastModifiedDate":"2023-11-01"},{"lineNumber":110,"author":{"gitId":"larrywang0701"},"content":"        allEvents.remove(event);","lastModifiedDate":"2023-11-01"},{"lineNumber":111,"author":{"gitId":"larrywang0701"},"content":"        return event;","lastModifiedDate":"2023-11-01"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2018-01-10"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        requireNonNull(editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        persons.setPerson(target, editedPerson);","lastModifiedDate":"2018-03-29"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     * Removes {@code key} from this {@code AddressBook}.","lastModifiedDate":"2017-08-16"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    public void removePerson(Person key) {","lastModifiedDate":"2018-08-07"},{"lineNumber":130,"author":{"gitId":"larrywang0701"},"content":"        key.getEvents().forEach(this.allEvents::remove);","lastModifiedDate":"2023-11-04"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        persons.remove(key);","lastModifiedDate":"2018-02-28"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"larrywang0701"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":135,"author":{"gitId":"larrywang0701"},"content":"    public String eventListToString() {","lastModifiedDate":"2023-10-13"},{"lineNumber":136,"author":{"gitId":"larrywang0701"},"content":"        StringBuilder str \u003d new StringBuilder();","lastModifiedDate":"2023-10-13"},{"lineNumber":137,"author":{"gitId":"larrywang0701"},"content":"        persons.forEach(","lastModifiedDate":"2023-10-13"},{"lineNumber":138,"author":{"gitId":"larrywang0701"},"content":"                person -\u003e person.getEvents().forEach(","lastModifiedDate":"2023-10-13"},{"lineNumber":139,"author":{"gitId":"larrywang0701"},"content":"                        event -\u003e str.append(\"[\").append(","lastModifiedDate":"2023-10-13"},{"lineNumber":140,"author":{"gitId":"larrywang0701"},"content":"                                        person.getName().toString()).append(\"] \")","lastModifiedDate":"2023-10-13"},{"lineNumber":141,"author":{"gitId":"larrywang0701"},"content":"                                .append(event.getUiText()).append(\"\\n\")","lastModifiedDate":"2023-10-13"},{"lineNumber":142,"author":{"gitId":"larrywang0701"},"content":"                )","lastModifiedDate":"2023-10-13"},{"lineNumber":143,"author":{"gitId":"larrywang0701"},"content":"        );","lastModifiedDate":"2023-10-13"},{"lineNumber":144,"author":{"gitId":"larrywang0701"},"content":"        return str.toString();","lastModifiedDate":"2023-10-13"},{"lineNumber":145,"author":{"gitId":"larrywang0701"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":146,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":147,"author":{"gitId":"AndrewJanong"},"content":"    @Override","lastModifiedDate":"2023-10-16"},{"lineNumber":148,"author":{"gitId":"AndrewJanong"},"content":"    public String noteListToString() {","lastModifiedDate":"2023-10-16"},{"lineNumber":149,"author":{"gitId":"AndrewJanong"},"content":"        StringBuilder str \u003d new StringBuilder();","lastModifiedDate":"2023-10-16"},{"lineNumber":150,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":151,"author":{"gitId":"AndrewJanong"},"content":"        for (Person person : persons) {","lastModifiedDate":"2023-10-16"},{"lineNumber":152,"author":{"gitId":"AndrewJanong"},"content":"            if (!person.getNotes().isEmpty()) {","lastModifiedDate":"2023-10-16"},{"lineNumber":153,"author":{"gitId":"AndrewJanong"},"content":"                str.append(\"[\" + person.getName().toString() + \"]\\n\");","lastModifiedDate":"2023-10-16"},{"lineNumber":154,"author":{"gitId":"AndrewJanong"},"content":"            }","lastModifiedDate":"2023-10-16"},{"lineNumber":155,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":156,"author":{"gitId":"AndrewJanong"},"content":"            int noteId \u003d 1;","lastModifiedDate":"2023-10-16"},{"lineNumber":157,"author":{"gitId":"AndrewJanong"},"content":"            for (Note note : person.getNotes()) {","lastModifiedDate":"2023-10-16"},{"lineNumber":158,"author":{"gitId":"AndrewJanong"},"content":"                str.append(noteId + \". \" + note.getUiText()).append(\"\\n\");","lastModifiedDate":"2023-10-16"},{"lineNumber":159,"author":{"gitId":"AndrewJanong"},"content":"                noteId +\u003d 1;","lastModifiedDate":"2023-10-16"},{"lineNumber":160,"author":{"gitId":"AndrewJanong"},"content":"            };","lastModifiedDate":"2023-10-16"},{"lineNumber":161,"author":{"gitId":"AndrewJanong"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":162,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":163,"author":{"gitId":"AndrewJanong"},"content":"        return str.toString();","lastModifiedDate":"2023-10-16"},{"lineNumber":164,"author":{"gitId":"AndrewJanong"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":165,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    //// util methods","lastModifiedDate":"2016-08-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"                .add(\"persons\", persons)","lastModifiedDate":"2019-02-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        return persons.asUnmodifiableObservableList();","lastModifiedDate":"2018-04-05"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-01"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-01"},{"lineNumber":180,"author":{"gitId":"larrywang0701"},"content":"    @Override","lastModifiedDate":"2023-11-01"},{"lineNumber":181,"author":{"gitId":"Nixx162"},"content":"    public ObservableList\u003cEvent\u003e getEventList() {","lastModifiedDate":"2023-11-01"},{"lineNumber":182,"author":{"gitId":"larrywang0701"},"content":"        return this.allEvents.asUnmodifiableObservableList();","lastModifiedDate":"2023-11-01"},{"lineNumber":183,"author":{"gitId":"Nixx162"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":184,"author":{"gitId":"Nixx162"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":188,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        if (!(other instanceof AddressBook)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":193,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        AddressBook otherAddressBook \u003d (AddressBook) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        return persons.equals(otherAddressBook.persons);","lastModifiedDate":"2023-07-13"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        return persons.hashCode();","lastModifiedDate":"2018-03-29"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":204,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"larrywang0701":49,"AndrewJanong":20,"-":130,"Nixx162":5}},{"path":"src/main/java/seedu/address/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"larrywang0701"},"content":"import java.util.Comparator;","lastModifiedDate":"2023-11-01"},{"lineNumber":5,"author":{"gitId":"larrywang0701"},"content":"import java.util.List;","lastModifiedDate":"2023-11-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"larrywang0701"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2023-11-01"},{"lineNumber":11,"author":{"gitId":"larrywang0701"},"content":"import seedu.address.model.event.EventID;","lastModifiedDate":"2023-11-01"},{"lineNumber":12,"author":{"gitId":"larrywang0701"},"content":"import seedu.address.model.person.ContactID;","lastModifiedDate":"2023-10-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2017-08-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    Predicate\u003cPerson\u003e PREDICATE_SHOW_ALL_PERSONS \u003d unused -\u003e true;","lastModifiedDate":"2018-01-10"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    void setAddressBookFilePath(Path addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Replaces address book data with the data in {@code addressBook}.","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    void setAddressBook(ReadOnlyAddressBook addressBook);","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /** Returns the AddressBook */","lastModifiedDate":"2016-09-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    boolean hasPerson(Person person);","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * Deletes the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * The person must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    void deletePerson(Person target);","lastModifiedDate":"2018-08-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Adds the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * {@code person} must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    void addPerson(Person person);","lastModifiedDate":"2018-08-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    void setPerson(Person target, Person editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered person list */","lastModifiedDate":"2017-09-01"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * Updates the filter of the filtered person list to filter by the given {@code predicate}.","lastModifiedDate":"2017-08-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate);","lastModifiedDate":"2018-01-10"},{"lineNumber":92,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":93,"author":{"gitId":"larrywang0701"},"content":"    /** Returns an unmodifiable view of the filtered event list */","lastModifiedDate":"2023-11-01"},{"lineNumber":94,"author":{"gitId":"larrywang0701"},"content":"    ObservableList\u003cEvent\u003e getFilteredEventList();","lastModifiedDate":"2023-11-01"},{"lineNumber":95,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":96,"author":{"gitId":"larrywang0701"},"content":"    /**","lastModifiedDate":"2023-11-14"},{"lineNumber":97,"author":{"gitId":"larrywang0701"},"content":"     * Generate a new list from sorting the filtered event list by the given {@code comparator}","lastModifiedDate":"2023-11-14"},{"lineNumber":98,"author":{"gitId":"larrywang0701"},"content":"     * and return the generated list.","lastModifiedDate":"2023-11-14"},{"lineNumber":99,"author":{"gitId":"larrywang0701"},"content":"     * @throws NullPointerException if {@code comparator} is null.","lastModifiedDate":"2023-11-14"},{"lineNumber":100,"author":{"gitId":"larrywang0701"},"content":"     */","lastModifiedDate":"2023-11-14"},{"lineNumber":101,"author":{"gitId":"larrywang0701"},"content":"    List\u003cEvent\u003e generateSortedFilteredEventList(Comparator\u003c? super Event\u003e comparator);","lastModifiedDate":"2023-11-14"},{"lineNumber":102,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":103,"author":{"gitId":"larrywang0701"},"content":"    /**","lastModifiedDate":"2023-11-14"},{"lineNumber":104,"author":{"gitId":"larrywang0701"},"content":"     * Return the sorted-filtered-list generated","lastModifiedDate":"2023-11-14"},{"lineNumber":105,"author":{"gitId":"larrywang0701"},"content":"     * by {@code generateSortedFilteredEventList(Comparator\u003c? super Event\u003e comparator)}","lastModifiedDate":"2023-11-14"},{"lineNumber":106,"author":{"gitId":"larrywang0701"},"content":"     * @throws NullPointerException if {@code sorted-filtered-list} is null","lastModifiedDate":"2023-11-14"},{"lineNumber":107,"author":{"gitId":"larrywang0701"},"content":"     *     (never called {@code generateSortedFilteredEventList(Comparator\u003c? super Event\u003e comparator)} before).","lastModifiedDate":"2023-11-14"},{"lineNumber":108,"author":{"gitId":"larrywang0701"},"content":"     */","lastModifiedDate":"2023-11-14"},{"lineNumber":109,"author":{"gitId":"larrywang0701"},"content":"    ObservableList\u003cEvent\u003e getSortedFilteredEventList();","lastModifiedDate":"2023-11-14"},{"lineNumber":110,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":111,"author":{"gitId":"larrywang0701"},"content":"    /**","lastModifiedDate":"2023-11-01"},{"lineNumber":112,"author":{"gitId":"larrywang0701"},"content":"     * Updates the filter of the filtered event list to filter by the given {@code predicate}.","lastModifiedDate":"2023-11-01"},{"lineNumber":113,"author":{"gitId":"larrywang0701"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2023-11-01"},{"lineNumber":114,"author":{"gitId":"larrywang0701"},"content":"     */","lastModifiedDate":"2023-11-01"},{"lineNumber":115,"author":{"gitId":"larrywang0701"},"content":"    void updateFilteredEventList(Predicate\u003cEvent\u003e predicate);","lastModifiedDate":"2023-11-01"},{"lineNumber":116,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":117,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":118,"author":{"gitId":"larrywang0701"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":119,"author":{"gitId":"larrywang0701"},"content":"     * Find a person by index.","lastModifiedDate":"2023-10-12"},{"lineNumber":120,"author":{"gitId":"larrywang0701"},"content":"     * If the index is invalid, returns null.","lastModifiedDate":"2023-10-12"},{"lineNumber":121,"author":{"gitId":"larrywang0701"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":122,"author":{"gitId":"larrywang0701"},"content":"    Person findPersonByIndex(int index);","lastModifiedDate":"2023-10-12"},{"lineNumber":123,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":124,"author":{"gitId":"larrywang0701"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":125,"author":{"gitId":"larrywang0701"},"content":"     * Find a person by the user-friendly ID displayed in the person card on the UI.","lastModifiedDate":"2023-10-12"},{"lineNumber":126,"author":{"gitId":"larrywang0701"},"content":"     * If the ID is invalid, returns null.","lastModifiedDate":"2023-10-12"},{"lineNumber":127,"author":{"gitId":"larrywang0701"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":128,"author":{"gitId":"larrywang0701"},"content":"    Person findPersonByUserFriendlyId(ContactID id);","lastModifiedDate":"2023-10-25"},{"lineNumber":129,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":130,"author":{"gitId":"larrywang0701"},"content":"    /**","lastModifiedDate":"2023-11-01"},{"lineNumber":131,"author":{"gitId":"larrywang0701"},"content":"     * Add an event under the event list of the specified person and also the global event list","lastModifiedDate":"2023-11-01"},{"lineNumber":132,"author":{"gitId":"larrywang0701"},"content":"     */","lastModifiedDate":"2023-11-01"},{"lineNumber":133,"author":{"gitId":"larrywang0701"},"content":"    void addEvent(Event toAdd, Person owner);","lastModifiedDate":"2023-11-01"},{"lineNumber":134,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":135,"author":{"gitId":"larrywang0701"},"content":"    /**","lastModifiedDate":"2023-11-01"},{"lineNumber":136,"author":{"gitId":"larrywang0701"},"content":"     * Remove an event by its user-friendly id for the specified person and also in the global event list","lastModifiedDate":"2023-11-01"},{"lineNumber":137,"author":{"gitId":"larrywang0701"},"content":"     * @param eventID The id of the event you want to remove","lastModifiedDate":"2023-11-01"},{"lineNumber":138,"author":{"gitId":"larrywang0701"},"content":"     * @return The event object that is just deleted if the operation is successful","lastModifiedDate":"2023-11-01"},{"lineNumber":139,"author":{"gitId":"larrywang0701"},"content":"     *     or {@code null} if the event with this name does not exist","lastModifiedDate":"2023-11-01"},{"lineNumber":140,"author":{"gitId":"larrywang0701"},"content":"     */","lastModifiedDate":"2023-11-01"},{"lineNumber":141,"author":{"gitId":"larrywang0701"},"content":"    Event removeEventByID(EventID eventID, Person owner);","lastModifiedDate":"2023-11-01"},{"lineNumber":142,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":143,"author":{"gitId":"larrywang0701"},"content":"    /**","lastModifiedDate":"2023-11-01"},{"lineNumber":144,"author":{"gitId":"larrywang0701"},"content":"     * Convert the filtered event list to a human-readable string","lastModifiedDate":"2023-11-01"},{"lineNumber":145,"author":{"gitId":"larrywang0701"},"content":"     * @return The filtered event list as string","lastModifiedDate":"2023-11-01"},{"lineNumber":146,"author":{"gitId":"larrywang0701"},"content":"     */","lastModifiedDate":"2023-11-01"},{"lineNumber":147,"author":{"gitId":"larrywang0701"},"content":"    String filteredEventListToString();","lastModifiedDate":"2023-11-01"},{"lineNumber":148,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"larrywang0701":61,"-":87}},{"path":"src/main/java/seedu/address/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"larrywang0701"},"content":"import java.util.Comparator;","lastModifiedDate":"2023-11-01"},{"lineNumber":8,"author":{"gitId":"larrywang0701"},"content":"import java.util.List;","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"larrywang0701"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-11-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"larrywang0701"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-11-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":18,"author":{"gitId":"larrywang0701"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2023-11-01"},{"lineNumber":19,"author":{"gitId":"larrywang0701"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2023-11-01"},{"lineNumber":20,"author":{"gitId":"larrywang0701"},"content":"import seedu.address.model.event.EventID;","lastModifiedDate":"2023-11-01"},{"lineNumber":21,"author":{"gitId":"larrywang0701"},"content":"import seedu.address.model.person.ContactID;","lastModifiedDate":"2023-10-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Represents the in-memory model of the address book data.","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private final FilteredList\u003cPerson\u003e filteredPersons;","lastModifiedDate":"2018-01-10"},{"lineNumber":33,"author":{"gitId":"larrywang0701"},"content":"    private final FilteredList\u003cEvent\u003e filteredEvents;","lastModifiedDate":"2023-11-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"larrywang0701"},"content":"    private ObservableList\u003cEvent\u003e sortedFilteredEvents;","lastModifiedDate":"2023-11-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Initializes a ModelManager with the given addressBook and userPrefs.","lastModifiedDate":"2016-12-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public ModelManager(ReadOnlyAddressBook addressBook, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        requireAllNonNull(addressBook, userPrefs);","lastModifiedDate":"2017-05-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        logger.fine(\"Initializing with address book: \" + addressBook + \" and user prefs \" + userPrefs);","lastModifiedDate":"2016-12-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        this.addressBook \u003d new AddressBook(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        filteredPersons \u003d new FilteredList\u003c\u003e(this.addressBook.getPersonList());","lastModifiedDate":"2019-01-25"},{"lineNumber":48,"author":{"gitId":"larrywang0701"},"content":"        filteredEvents \u003d new FilteredList\u003c\u003e(this.addressBook.getEventList());","lastModifiedDate":"2023-11-01"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        this(new AddressBook(), new UserPrefs());","lastModifiedDate":"2016-09-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return userPrefs.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void setAddressBook(ReadOnlyAddressBook addressBook) {","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        this.addressBook.resetData(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2016-09-21"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        return addressBook.hasPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void deletePerson(Person target) {","lastModifiedDate":"2018-08-15"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        addressBook.removePerson(target);","lastModifiedDate":"2019-01-25"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public void addPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        addressBook.addPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2017-06-07"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        addressBook.setPerson(target, editedPerson);","lastModifiedDate":"2019-01-25"},{"lineNumber":123,"author":{"gitId":"Nixx162"},"content":"        updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2023-11-09"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Person List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-10-12"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the list of {@code Person} backed by the internal list of","lastModifiedDate":"2018-01-10"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2018-06-11"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        return filteredPersons;","lastModifiedDate":"2018-12-09"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        filteredPersons.setPredicate(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":143,"author":{"gitId":"larrywang0701"},"content":"    @Override","lastModifiedDate":"2023-11-01"},{"lineNumber":144,"author":{"gitId":"larrywang0701"},"content":"    public ObservableList\u003cEvent\u003e getFilteredEventList() {","lastModifiedDate":"2023-11-01"},{"lineNumber":145,"author":{"gitId":"larrywang0701"},"content":"        return filteredEvents;","lastModifiedDate":"2023-11-01"},{"lineNumber":146,"author":{"gitId":"larrywang0701"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":147,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":148,"author":{"gitId":"larrywang0701"},"content":"    @Override","lastModifiedDate":"2023-11-01"},{"lineNumber":149,"author":{"gitId":"larrywang0701"},"content":"    public void updateFilteredEventList(Predicate\u003cEvent\u003e predicate) {","lastModifiedDate":"2023-11-01"},{"lineNumber":150,"author":{"gitId":"larrywang0701"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2023-11-01"},{"lineNumber":151,"author":{"gitId":"larrywang0701"},"content":"        filteredEvents.setPredicate(predicate);","lastModifiedDate":"2023-11-01"},{"lineNumber":152,"author":{"gitId":"larrywang0701"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":153,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":154,"author":{"gitId":"larrywang0701"},"content":"    @Override","lastModifiedDate":"2023-11-01"},{"lineNumber":155,"author":{"gitId":"larrywang0701"},"content":"    public List\u003cEvent\u003e generateSortedFilteredEventList(Comparator\u003c? super Event\u003e comparator) {","lastModifiedDate":"2023-11-14"},{"lineNumber":156,"author":{"gitId":"larrywang0701"},"content":"        requireNonNull(comparator);","lastModifiedDate":"2023-11-01"},{"lineNumber":157,"author":{"gitId":"larrywang0701"},"content":"        sortedFilteredEvents \u003d FXCollections.observableList(filteredEvents.stream()","lastModifiedDate":"2023-11-14"},{"lineNumber":158,"author":{"gitId":"larrywang0701"},"content":"                .sorted(comparator).collect(Collectors.toUnmodifiableList()));","lastModifiedDate":"2023-11-14"},{"lineNumber":159,"author":{"gitId":"larrywang0701"},"content":"        return sortedFilteredEvents;","lastModifiedDate":"2023-11-14"},{"lineNumber":160,"author":{"gitId":"larrywang0701"},"content":"    }","lastModifiedDate":"2023-11-14"},{"lineNumber":161,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":162,"author":{"gitId":"larrywang0701"},"content":"    @Override","lastModifiedDate":"2023-11-14"},{"lineNumber":163,"author":{"gitId":"larrywang0701"},"content":"    public ObservableList\u003cEvent\u003e getSortedFilteredEventList() {","lastModifiedDate":"2023-11-14"},{"lineNumber":164,"author":{"gitId":"larrywang0701"},"content":"        requireNonNull(sortedFilteredEvents);","lastModifiedDate":"2023-11-14"},{"lineNumber":165,"author":{"gitId":"larrywang0701"},"content":"        return this.sortedFilteredEvents;","lastModifiedDate":"2023-11-14"},{"lineNumber":166,"author":{"gitId":"larrywang0701"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":167,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":168,"author":{"gitId":"larrywang0701"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":169,"author":{"gitId":"larrywang0701"},"content":"    public Person findPersonByIndex(int index) {","lastModifiedDate":"2023-10-12"},{"lineNumber":170,"author":{"gitId":"AndrewJanong"},"content":"        List\u003cPerson\u003e personList \u003d getFilteredPersonList();","lastModifiedDate":"2023-11-02"},{"lineNumber":171,"author":{"gitId":"larrywang0701"},"content":"        if (index \u003c 0 || index \u003e\u003d personList.size()) {","lastModifiedDate":"2023-10-12"},{"lineNumber":172,"author":{"gitId":"larrywang0701"},"content":"            return null;","lastModifiedDate":"2023-10-12"},{"lineNumber":173,"author":{"gitId":"larrywang0701"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":174,"author":{"gitId":"larrywang0701"},"content":"        return personList.get(index);","lastModifiedDate":"2023-10-12"},{"lineNumber":175,"author":{"gitId":"larrywang0701"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":176,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":177,"author":{"gitId":"larrywang0701"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":178,"author":{"gitId":"larrywang0701"},"content":"    public Person findPersonByUserFriendlyId(ContactID id) {","lastModifiedDate":"2023-10-25"},{"lineNumber":179,"author":{"gitId":"larrywang0701"},"content":"        return this.findPersonByIndex(id.getId() - 1);","lastModifiedDate":"2023-10-25"},{"lineNumber":180,"author":{"gitId":"larrywang0701"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":181,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-07-13"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":185,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        if (!(other instanceof ModelManager)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":190,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        ModelManager otherModelManager \u003d (ModelManager) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        return addressBook.equals(otherModelManager.addressBook)","lastModifiedDate":"2023-07-13"},{"lineNumber":195,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(otherModelManager.userPrefs)","lastModifiedDate":"2023-07-13"},{"lineNumber":196,"author":{"gitId":"-"},"content":"                \u0026\u0026 filteredPersons.equals(otherModelManager.filteredPersons);","lastModifiedDate":"2023-07-13"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":199,"author":{"gitId":"larrywang0701"},"content":"    @Override","lastModifiedDate":"2023-11-01"},{"lineNumber":200,"author":{"gitId":"larrywang0701"},"content":"    public void addEvent(Event toAdd, Person owner) {","lastModifiedDate":"2023-11-01"},{"lineNumber":201,"author":{"gitId":"larrywang0701"},"content":"        this.addressBook.addEvent(toAdd, owner);","lastModifiedDate":"2023-11-01"},{"lineNumber":202,"author":{"gitId":"larrywang0701"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":203,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":204,"author":{"gitId":"larrywang0701"},"content":"    @Override","lastModifiedDate":"2023-11-01"},{"lineNumber":205,"author":{"gitId":"larrywang0701"},"content":"    public Event removeEventByID(EventID eventID, Person owner) {","lastModifiedDate":"2023-11-01"},{"lineNumber":206,"author":{"gitId":"larrywang0701"},"content":"        return this.addressBook.removeEventByID(eventID, owner);","lastModifiedDate":"2023-11-01"},{"lineNumber":207,"author":{"gitId":"larrywang0701"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":208,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":209,"author":{"gitId":"larrywang0701"},"content":"    @Override","lastModifiedDate":"2023-11-01"},{"lineNumber":210,"author":{"gitId":"larrywang0701"},"content":"    public String filteredEventListToString() {","lastModifiedDate":"2023-11-01"},{"lineNumber":211,"author":{"gitId":"larrywang0701"},"content":"        return StringUtil.eventListToString(this.filteredEvents);","lastModifiedDate":"2023-11-01"},{"lineNumber":212,"author":{"gitId":"larrywang0701"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":213,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":214,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"larrywang0701":64,"AndrewJanong":1,"-":148,"Nixx162":1}},{"path":"src/main/java/seedu/address/model/ReadOnlyAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"larrywang0701"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2023-11-01"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Unmodifiable view of an address book","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public interface ReadOnlyAddressBook {","lastModifiedDate":"2019-01-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the persons list.","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * This list will not contain any duplicate persons.","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"larrywang0701"},"content":"    /**","lastModifiedDate":"2023-11-01"},{"lineNumber":19,"author":{"gitId":"larrywang0701"},"content":"     * Returns an unmodifiable view of the event list.","lastModifiedDate":"2023-11-01"},{"lineNumber":20,"author":{"gitId":"larrywang0701"},"content":"     * This list will not contain any duplicate events.","lastModifiedDate":"2023-11-01"},{"lineNumber":21,"author":{"gitId":"larrywang0701"},"content":"     */","lastModifiedDate":"2023-11-01"},{"lineNumber":22,"author":{"gitId":"larrywang0701"},"content":"    ObservableList\u003cEvent\u003e getEventList();","lastModifiedDate":"2023-11-01"},{"lineNumber":23,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":24,"author":{"gitId":"larrywang0701"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":25,"author":{"gitId":"larrywang0701"},"content":"     * Convert the event list to a human-readable string","lastModifiedDate":"2023-10-13"},{"lineNumber":26,"author":{"gitId":"larrywang0701"},"content":"     * @return The event list as string","lastModifiedDate":"2023-10-13"},{"lineNumber":27,"author":{"gitId":"larrywang0701"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":28,"author":{"gitId":"larrywang0701"},"content":"    String eventListToString();","lastModifiedDate":"2023-10-13"},{"lineNumber":29,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":30,"author":{"gitId":"AndrewJanong"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":31,"author":{"gitId":"AndrewJanong"},"content":"     * Convert the note list to a human-readable string","lastModifiedDate":"2023-10-16"},{"lineNumber":32,"author":{"gitId":"AndrewJanong"},"content":"     * @return The note list as string","lastModifiedDate":"2023-10-16"},{"lineNumber":33,"author":{"gitId":"AndrewJanong"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":34,"author":{"gitId":"AndrewJanong"},"content":"    String noteListToString();","lastModifiedDate":"2023-10-16"},{"lineNumber":35,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"larrywang0701":13,"AndrewJanong":6,"-":17}},{"path":"src/main/java/seedu/address/model/event/Event.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zekone"},"content":"package seedu.address.model.event;","lastModifiedDate":"2023-10-10"},{"lineNumber":2,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":3,"author":{"gitId":"Nixx162"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-11-01"},{"lineNumber":4,"author":{"gitId":"Nixx162"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":5,"author":{"gitId":"larrywang0701"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-11-01"},{"lineNumber":6,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":7,"author":{"gitId":"larrywang0701"},"content":"/**","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"larrywang0701"},"content":" * The class for holding an Event","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"larrywang0701"},"content":" */","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"zekone"},"content":"public class Event {","lastModifiedDate":"2023-10-10"},{"lineNumber":11,"author":{"gitId":"larrywang0701"},"content":"    private final EventTime start;","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"larrywang0701"},"content":"    private final EventTime end;","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"larrywang0701"},"content":"    private final EventName name;","lastModifiedDate":"2023-10-25"},{"lineNumber":14,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":15,"author":{"gitId":"larrywang0701"},"content":"    private final EventLocation location;","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"larrywang0701"},"content":"    private final EventInformation information;","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"larrywang0701"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":20,"author":{"gitId":"larrywang0701"},"content":"     * Constructor for the `Event` class","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"larrywang0701"},"content":"     * @param name The event name","lastModifiedDate":"2023-10-12"},{"lineNumber":22,"author":{"gitId":"larrywang0701"},"content":"     * @param start The start time of the event","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"larrywang0701"},"content":"     * @param end The end time of the event","lastModifiedDate":"2023-10-12"},{"lineNumber":24,"author":{"gitId":"larrywang0701"},"content":"     * @param location The location of the event","lastModifiedDate":"2023-10-25"},{"lineNumber":25,"author":{"gitId":"larrywang0701"},"content":"     * @param information The information of the event","lastModifiedDate":"2023-10-25"},{"lineNumber":26,"author":{"gitId":"larrywang0701"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":27,"author":{"gitId":"larrywang0701"},"content":"    public Event(EventName name, EventTime start, EventTime end, EventLocation location, EventInformation information) {","lastModifiedDate":"2023-10-25"},{"lineNumber":28,"author":{"gitId":"Nixx162"},"content":"        requireAllNonNull(name, start);","lastModifiedDate":"2023-11-01"},{"lineNumber":29,"author":{"gitId":"zekone"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-10-10"},{"lineNumber":30,"author":{"gitId":"larrywang0701"},"content":"        this.start \u003d start;","lastModifiedDate":"2023-10-25"},{"lineNumber":31,"author":{"gitId":"larrywang0701"},"content":"        this.end \u003d end;","lastModifiedDate":"2023-10-25"},{"lineNumber":32,"author":{"gitId":"larrywang0701"},"content":"        this.location \u003d location;","lastModifiedDate":"2023-10-25"},{"lineNumber":33,"author":{"gitId":"larrywang0701"},"content":"        this.information \u003d information;","lastModifiedDate":"2023-10-25"},{"lineNumber":34,"author":{"gitId":"larrywang0701"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":35,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":36,"author":{"gitId":"larrywang0701"},"content":"    /**","lastModifiedDate":"2023-10-25"},{"lineNumber":37,"author":{"gitId":"larrywang0701"},"content":"     * Constructor for the `Event` class, with Strings as parameters","lastModifiedDate":"2023-10-25"},{"lineNumber":38,"author":{"gitId":"larrywang0701"},"content":"     * @param name The event name","lastModifiedDate":"2023-10-25"},{"lineNumber":39,"author":{"gitId":"larrywang0701"},"content":"     * @param start The start time of the event","lastModifiedDate":"2023-10-25"},{"lineNumber":40,"author":{"gitId":"larrywang0701"},"content":"     * @param end The end time of the event","lastModifiedDate":"2023-10-25"},{"lineNumber":41,"author":{"gitId":"larrywang0701"},"content":"     * @param location The location of the event","lastModifiedDate":"2023-10-25"},{"lineNumber":42,"author":{"gitId":"larrywang0701"},"content":"     * @param information The information of the event","lastModifiedDate":"2023-10-25"},{"lineNumber":43,"author":{"gitId":"larrywang0701"},"content":"     */","lastModifiedDate":"2023-10-25"},{"lineNumber":44,"author":{"gitId":"larrywang0701"},"content":"    public Event(String name, String start, String end, String location, String information) {","lastModifiedDate":"2023-10-25"},{"lineNumber":45,"author":{"gitId":"larrywang0701"},"content":"        this.name \u003d EventName.fromString(name);","lastModifiedDate":"2023-10-25"},{"lineNumber":46,"author":{"gitId":"larrywang0701"},"content":"        this.start \u003d EventTime.fromString(start);","lastModifiedDate":"2023-10-12"},{"lineNumber":47,"author":{"gitId":"larrywang0701"},"content":"        this.end \u003d EventTime.fromString(end);","lastModifiedDate":"2023-10-12"},{"lineNumber":48,"author":{"gitId":"larrywang0701"},"content":"        this.location \u003d EventLocation.fromString(location);","lastModifiedDate":"2023-10-25"},{"lineNumber":49,"author":{"gitId":"larrywang0701"},"content":"        this.information \u003d EventInformation.fromString(information);","lastModifiedDate":"2023-10-25"},{"lineNumber":50,"author":{"gitId":"zekone"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":51,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":52,"author":{"gitId":"larrywang0701"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":53,"author":{"gitId":"larrywang0701"},"content":"     * Get the name of the event","lastModifiedDate":"2023-10-12"},{"lineNumber":54,"author":{"gitId":"larrywang0701"},"content":"     * @return The name of the event","lastModifiedDate":"2023-10-12"},{"lineNumber":55,"author":{"gitId":"larrywang0701"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":56,"author":{"gitId":"zekone"},"content":"    public String getName() {","lastModifiedDate":"2023-10-10"},{"lineNumber":57,"author":{"gitId":"larrywang0701"},"content":"        return name.toString();","lastModifiedDate":"2023-10-25"},{"lineNumber":58,"author":{"gitId":"zekone"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":59,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":60,"author":{"gitId":"larrywang0701"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":61,"author":{"gitId":"larrywang0701"},"content":"     * Get the start time of the event, represented in string","lastModifiedDate":"2023-10-12"},{"lineNumber":62,"author":{"gitId":"larrywang0701"},"content":"     * @return The start time in string","lastModifiedDate":"2023-10-12"},{"lineNumber":63,"author":{"gitId":"larrywang0701"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":64,"author":{"gitId":"zekone"},"content":"    public String getStartString() {","lastModifiedDate":"2023-10-10"},{"lineNumber":65,"author":{"gitId":"larrywang0701"},"content":"        return this.start.toString();","lastModifiedDate":"2023-10-12"},{"lineNumber":66,"author":{"gitId":"zekone"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":67,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":68,"author":{"gitId":"larrywang0701"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":69,"author":{"gitId":"larrywang0701"},"content":"     * Get the end time of the event, represented in string","lastModifiedDate":"2023-10-12"},{"lineNumber":70,"author":{"gitId":"larrywang0701"},"content":"     * @return The end time in string","lastModifiedDate":"2023-10-12"},{"lineNumber":71,"author":{"gitId":"larrywang0701"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":72,"author":{"gitId":"zekone"},"content":"    public String getEndString() {","lastModifiedDate":"2023-10-10"},{"lineNumber":73,"author":{"gitId":"larrywang0701"},"content":"        return this.end.toString();","lastModifiedDate":"2023-10-12"},{"lineNumber":74,"author":{"gitId":"larrywang0701"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":75,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":76,"author":{"gitId":"larrywang0701"},"content":"    /**","lastModifiedDate":"2023-11-01"},{"lineNumber":77,"author":{"gitId":"larrywang0701"},"content":"     * Get the start time of the event, represented in {@code LocalDateTime}","lastModifiedDate":"2023-11-01"},{"lineNumber":78,"author":{"gitId":"larrywang0701"},"content":"     * @return The start time in {@code LocalDateTime}","lastModifiedDate":"2023-11-01"},{"lineNumber":79,"author":{"gitId":"larrywang0701"},"content":"     */","lastModifiedDate":"2023-11-01"},{"lineNumber":80,"author":{"gitId":"larrywang0701"},"content":"    public LocalDateTime getStartTime() {","lastModifiedDate":"2023-11-01"},{"lineNumber":81,"author":{"gitId":"larrywang0701"},"content":"        return this.start.getTime();","lastModifiedDate":"2023-11-01"},{"lineNumber":82,"author":{"gitId":"larrywang0701"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":83,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":84,"author":{"gitId":"larrywang0701"},"content":"    /**","lastModifiedDate":"2023-11-01"},{"lineNumber":85,"author":{"gitId":"larrywang0701"},"content":"     * Get the end time of the event, represented in {@code LocalDateTime}","lastModifiedDate":"2023-11-01"},{"lineNumber":86,"author":{"gitId":"larrywang0701"},"content":"     * @return The end time in {@code LocalDateTime}","lastModifiedDate":"2023-11-01"},{"lineNumber":87,"author":{"gitId":"larrywang0701"},"content":"     */","lastModifiedDate":"2023-11-01"},{"lineNumber":88,"author":{"gitId":"larrywang0701"},"content":"    public LocalDateTime getEndTime() {","lastModifiedDate":"2023-11-01"},{"lineNumber":89,"author":{"gitId":"larrywang0701"},"content":"        return this.end.getTime();","lastModifiedDate":"2023-11-01"},{"lineNumber":90,"author":{"gitId":"larrywang0701"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":91,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":92,"author":{"gitId":"larrywang0701"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":93,"author":{"gitId":"larrywang0701"},"content":"     * Get the location of the event, represented in string","lastModifiedDate":"2023-10-12"},{"lineNumber":94,"author":{"gitId":"larrywang0701"},"content":"     * @return The location in string","lastModifiedDate":"2023-10-12"},{"lineNumber":95,"author":{"gitId":"larrywang0701"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":96,"author":{"gitId":"larrywang0701"},"content":"    public String getLocationStr() {","lastModifiedDate":"2023-10-12"},{"lineNumber":97,"author":{"gitId":"larrywang0701"},"content":"        return this.location.toString();","lastModifiedDate":"2023-10-12"},{"lineNumber":98,"author":{"gitId":"larrywang0701"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":99,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":100,"author":{"gitId":"larrywang0701"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":101,"author":{"gitId":"larrywang0701"},"content":"     * Get the information of the event, represented in string","lastModifiedDate":"2023-10-12"},{"lineNumber":102,"author":{"gitId":"larrywang0701"},"content":"     * @return The information in string","lastModifiedDate":"2023-10-12"},{"lineNumber":103,"author":{"gitId":"larrywang0701"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":104,"author":{"gitId":"larrywang0701"},"content":"    public String getInformationStr() {","lastModifiedDate":"2023-10-12"},{"lineNumber":105,"author":{"gitId":"larrywang0701"},"content":"        return this.information.toString();","lastModifiedDate":"2023-10-12"},{"lineNumber":106,"author":{"gitId":"larrywang0701"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":107,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":108,"author":{"gitId":"larrywang0701"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":109,"author":{"gitId":"larrywang0701"},"content":"     * Get a string that can be used to represent this event on GUI","lastModifiedDate":"2023-10-12"},{"lineNumber":110,"author":{"gitId":"larrywang0701"},"content":"     * @return The information in string","lastModifiedDate":"2023-10-12"},{"lineNumber":111,"author":{"gitId":"larrywang0701"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":112,"author":{"gitId":"larrywang0701"},"content":"    public String getUiText() {","lastModifiedDate":"2023-10-12"},{"lineNumber":113,"author":{"gitId":"Nixx162"},"content":"        String result \u003d this.getName() + \"\\nStarts at: \" + this.start;","lastModifiedDate":"2023-11-02"},{"lineNumber":114,"author":{"gitId":"larrywang0701"},"content":"        if (!this.end.equals(this.start)) {","lastModifiedDate":"2023-11-04"},{"lineNumber":115,"author":{"gitId":"Nixx162"},"content":"            result +\u003d \"\\nEnds at: \" + this.end;","lastModifiedDate":"2023-11-02"},{"lineNumber":116,"author":{"gitId":"larrywang0701"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":117,"author":{"gitId":"larrywang0701"},"content":"        if (!this.location.toString().isEmpty()) {","lastModifiedDate":"2023-10-12"},{"lineNumber":118,"author":{"gitId":"Nixx162"},"content":"            result +\u003d \"\\nLocation: \" + this.location;","lastModifiedDate":"2023-11-02"},{"lineNumber":119,"author":{"gitId":"larrywang0701"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":120,"author":{"gitId":"larrywang0701"},"content":"        if (!this.information.toString().isEmpty()) {","lastModifiedDate":"2023-10-12"},{"lineNumber":121,"author":{"gitId":"Nixx162"},"content":"            result +\u003d \"\\nInformation: \" + this.information;","lastModifiedDate":"2023-11-02"},{"lineNumber":122,"author":{"gitId":"larrywang0701"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":123,"author":{"gitId":"larrywang0701"},"content":"        return result;","lastModifiedDate":"2023-10-12"},{"lineNumber":124,"author":{"gitId":"zekone"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":125,"author":{"gitId":"Nixx162"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":126,"author":{"gitId":"Nixx162"},"content":"    @Override","lastModifiedDate":"2023-11-01"},{"lineNumber":127,"author":{"gitId":"Nixx162"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-11-01"},{"lineNumber":128,"author":{"gitId":"Nixx162"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-11-01"},{"lineNumber":129,"author":{"gitId":"Nixx162"},"content":"            return true;","lastModifiedDate":"2023-11-01"},{"lineNumber":130,"author":{"gitId":"Nixx162"},"content":"        }","lastModifiedDate":"2023-11-01"},{"lineNumber":131,"author":{"gitId":"Nixx162"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":132,"author":{"gitId":"Nixx162"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-11-01"},{"lineNumber":133,"author":{"gitId":"Nixx162"},"content":"        if (!(other instanceof Event)) {","lastModifiedDate":"2023-11-01"},{"lineNumber":134,"author":{"gitId":"Nixx162"},"content":"            return false;","lastModifiedDate":"2023-11-01"},{"lineNumber":135,"author":{"gitId":"Nixx162"},"content":"        }","lastModifiedDate":"2023-11-01"},{"lineNumber":136,"author":{"gitId":"Nixx162"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":137,"author":{"gitId":"Nixx162"},"content":"        Event otherPerson \u003d (Event) other;","lastModifiedDate":"2023-11-01"},{"lineNumber":138,"author":{"gitId":"Nixx162"},"content":"        return name.equals(otherPerson.name)","lastModifiedDate":"2023-11-01"},{"lineNumber":139,"author":{"gitId":"Nixx162"},"content":"                \u0026\u0026 start.equals(otherPerson.start)","lastModifiedDate":"2023-11-01"},{"lineNumber":140,"author":{"gitId":"Nixx162"},"content":"                \u0026\u0026 end.equals(otherPerson.end)","lastModifiedDate":"2023-11-01"},{"lineNumber":141,"author":{"gitId":"Nixx162"},"content":"                \u0026\u0026 location.equals(otherPerson.location)","lastModifiedDate":"2023-11-01"},{"lineNumber":142,"author":{"gitId":"Nixx162"},"content":"                \u0026\u0026 information.equals(otherPerson.information);","lastModifiedDate":"2023-11-01"},{"lineNumber":143,"author":{"gitId":"Nixx162"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":144,"author":{"gitId":"zekone"},"content":"}","lastModifiedDate":"2023-10-10"}],"authorContributionMap":{"larrywang0701":102,"zekone":16,"Nixx162":26}},{"path":"src/main/java/seedu/address/model/event/EventID.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"larrywang0701"},"content":"package seedu.address.model.event;","lastModifiedDate":"2023-10-25"},{"lineNumber":2,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":3,"author":{"gitId":"larrywang0701"},"content":"/**","lastModifiedDate":"2023-10-25"},{"lineNumber":4,"author":{"gitId":"larrywang0701"},"content":" * The class for holding the event id for DeleteEventCommand","lastModifiedDate":"2023-10-25"},{"lineNumber":5,"author":{"gitId":"larrywang0701"},"content":" */","lastModifiedDate":"2023-10-25"},{"lineNumber":6,"author":{"gitId":"larrywang0701"},"content":"public class EventID {","lastModifiedDate":"2023-10-25"},{"lineNumber":7,"author":{"gitId":"larrywang0701"},"content":"    public static final String MESSAGE_NON_EMPTY \u003d \"Event ID can not be empty!\";","lastModifiedDate":"2023-10-25"},{"lineNumber":8,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":9,"author":{"gitId":"larrywang0701"},"content":"    private final int id;","lastModifiedDate":"2023-10-25"},{"lineNumber":10,"author":{"gitId":"larrywang0701"},"content":"    private EventID(String id) {","lastModifiedDate":"2023-10-25"},{"lineNumber":11,"author":{"gitId":"larrywang0701"},"content":"        this.id \u003d Integer.parseInt(id);","lastModifiedDate":"2023-10-25"},{"lineNumber":12,"author":{"gitId":"larrywang0701"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":13,"author":{"gitId":"larrywang0701"},"content":"    private EventID(int id) {","lastModifiedDate":"2023-10-25"},{"lineNumber":14,"author":{"gitId":"larrywang0701"},"content":"        this.id \u003d id;","lastModifiedDate":"2023-10-25"},{"lineNumber":15,"author":{"gitId":"larrywang0701"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":16,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":17,"author":{"gitId":"larrywang0701"},"content":"    /**","lastModifiedDate":"2023-10-25"},{"lineNumber":18,"author":{"gitId":"larrywang0701"},"content":"     * Get the numerical id","lastModifiedDate":"2023-10-25"},{"lineNumber":19,"author":{"gitId":"larrywang0701"},"content":"     * @return The numerical id","lastModifiedDate":"2023-10-25"},{"lineNumber":20,"author":{"gitId":"larrywang0701"},"content":"     */","lastModifiedDate":"2023-10-25"},{"lineNumber":21,"author":{"gitId":"larrywang0701"},"content":"    public int getId() {","lastModifiedDate":"2023-10-25"},{"lineNumber":22,"author":{"gitId":"larrywang0701"},"content":"        return this.id;","lastModifiedDate":"2023-10-25"},{"lineNumber":23,"author":{"gitId":"larrywang0701"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":24,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":25,"author":{"gitId":"larrywang0701"},"content":"    /**","lastModifiedDate":"2023-10-25"},{"lineNumber":26,"author":{"gitId":"larrywang0701"},"content":"     * Construct an {@code EventID} object from {@code String}","lastModifiedDate":"2023-10-25"},{"lineNumber":27,"author":{"gitId":"larrywang0701"},"content":"     * @param id The id in {@code String}","lastModifiedDate":"2023-10-25"},{"lineNumber":28,"author":{"gitId":"larrywang0701"},"content":"     * @return The {@code EventID} object","lastModifiedDate":"2023-10-25"},{"lineNumber":29,"author":{"gitId":"larrywang0701"},"content":"     */","lastModifiedDate":"2023-10-25"},{"lineNumber":30,"author":{"gitId":"larrywang0701"},"content":"    public static EventID fromString(String id) {","lastModifiedDate":"2023-10-25"},{"lineNumber":31,"author":{"gitId":"larrywang0701"},"content":"        return new EventID(id);","lastModifiedDate":"2023-10-25"},{"lineNumber":32,"author":{"gitId":"larrywang0701"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":33,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":34,"author":{"gitId":"larrywang0701"},"content":"    /**","lastModifiedDate":"2023-10-25"},{"lineNumber":35,"author":{"gitId":"larrywang0701"},"content":"     * Construct an {@code EventID} object from {@code int}","lastModifiedDate":"2023-10-25"},{"lineNumber":36,"author":{"gitId":"larrywang0701"},"content":"     * @param id The id in {@code int}","lastModifiedDate":"2023-10-25"},{"lineNumber":37,"author":{"gitId":"larrywang0701"},"content":"     * @return The {@code EventID} object","lastModifiedDate":"2023-10-25"},{"lineNumber":38,"author":{"gitId":"larrywang0701"},"content":"     */","lastModifiedDate":"2023-10-25"},{"lineNumber":39,"author":{"gitId":"larrywang0701"},"content":"    public static EventID fromInt(int id) {","lastModifiedDate":"2023-10-25"},{"lineNumber":40,"author":{"gitId":"larrywang0701"},"content":"        return new EventID(id);","lastModifiedDate":"2023-10-25"},{"lineNumber":41,"author":{"gitId":"larrywang0701"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":42,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":43,"author":{"gitId":"larrywang0701"},"content":"    @Override","lastModifiedDate":"2023-10-25"},{"lineNumber":44,"author":{"gitId":"larrywang0701"},"content":"    public String toString() {","lastModifiedDate":"2023-10-25"},{"lineNumber":45,"author":{"gitId":"larrywang0701"},"content":"        return String.valueOf(this.id);","lastModifiedDate":"2023-10-25"},{"lineNumber":46,"author":{"gitId":"larrywang0701"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":47,"author":{"gitId":"larrywang0701"},"content":"}","lastModifiedDate":"2023-10-25"}],"authorContributionMap":{"larrywang0701":47}},{"path":"src/main/java/seedu/address/model/event/EventInformation.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"larrywang0701"},"content":"package seedu.address.model.event;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"larrywang0701"},"content":"/**","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"larrywang0701"},"content":" * The class for holding the \"information\" part for an Event","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"larrywang0701"},"content":" */","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"larrywang0701"},"content":"public class EventInformation {","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":8,"author":{"gitId":"larrywang0701"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Event information can not be empty.\";","lastModifiedDate":"2023-10-25"},{"lineNumber":9,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":10,"author":{"gitId":"larrywang0701"},"content":"    private final String information;","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"larrywang0701"},"content":"    private EventInformation(String information) {","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"larrywang0701"},"content":"        this.information \u003d information;","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"larrywang0701"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"larrywang0701"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"larrywang0701"},"content":"     * Construct an {@code EventInformation} object from {@code String}","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"larrywang0701"},"content":"     * @param information The information in {@code String}","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"larrywang0701"},"content":"     * @return The {@code EventInformation} object","lastModifiedDate":"2023-10-12"},{"lineNumber":20,"author":{"gitId":"larrywang0701"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"larrywang0701"},"content":"    public static EventInformation fromString(String information) {","lastModifiedDate":"2023-10-12"},{"lineNumber":22,"author":{"gitId":"larrywang0701"},"content":"        return new EventInformation(information);","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"larrywang0701"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":24,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":25,"author":{"gitId":"larrywang0701"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"larrywang0701"},"content":"     * Get the String representation of this {@code EventInformation} object","lastModifiedDate":"2023-10-12"},{"lineNumber":27,"author":{"gitId":"larrywang0701"},"content":"     * @return The String representation of this {@code EventInformation} object","lastModifiedDate":"2023-10-12"},{"lineNumber":28,"author":{"gitId":"larrywang0701"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":29,"author":{"gitId":"larrywang0701"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":30,"author":{"gitId":"larrywang0701"},"content":"    public String toString() {","lastModifiedDate":"2023-10-12"},{"lineNumber":31,"author":{"gitId":"larrywang0701"},"content":"        return this.information;","lastModifiedDate":"2023-10-12"},{"lineNumber":32,"author":{"gitId":"larrywang0701"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":33,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":34,"author":{"gitId":"larrywang0701"},"content":"    /**","lastModifiedDate":"2023-10-25"},{"lineNumber":35,"author":{"gitId":"larrywang0701"},"content":"     * Returns whether the given information in string is valid event information","lastModifiedDate":"2023-10-25"},{"lineNumber":36,"author":{"gitId":"larrywang0701"},"content":"     * @param str The information in string","lastModifiedDate":"2023-10-25"},{"lineNumber":37,"author":{"gitId":"larrywang0701"},"content":"     * @return True if the name is valid event information, false otherwise","lastModifiedDate":"2023-10-25"},{"lineNumber":38,"author":{"gitId":"larrywang0701"},"content":"     */","lastModifiedDate":"2023-10-25"},{"lineNumber":39,"author":{"gitId":"larrywang0701"},"content":"    public static boolean isValidEventInformation(String str) {","lastModifiedDate":"2023-10-25"},{"lineNumber":40,"author":{"gitId":"larrywang0701"},"content":"        return !str.isEmpty();","lastModifiedDate":"2023-10-25"},{"lineNumber":41,"author":{"gitId":"larrywang0701"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":42,"author":{"gitId":"Nixx162"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":43,"author":{"gitId":"Nixx162"},"content":"    @Override","lastModifiedDate":"2023-11-01"},{"lineNumber":44,"author":{"gitId":"Nixx162"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-11-01"},{"lineNumber":45,"author":{"gitId":"Nixx162"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-11-01"},{"lineNumber":46,"author":{"gitId":"Nixx162"},"content":"            return true;","lastModifiedDate":"2023-11-01"},{"lineNumber":47,"author":{"gitId":"Nixx162"},"content":"        }","lastModifiedDate":"2023-11-01"},{"lineNumber":48,"author":{"gitId":"Nixx162"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":49,"author":{"gitId":"Nixx162"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-11-01"},{"lineNumber":50,"author":{"gitId":"Nixx162"},"content":"        if (!(other instanceof EventInformation)) {","lastModifiedDate":"2023-11-01"},{"lineNumber":51,"author":{"gitId":"Nixx162"},"content":"            return false;","lastModifiedDate":"2023-11-01"},{"lineNumber":52,"author":{"gitId":"Nixx162"},"content":"        }","lastModifiedDate":"2023-11-01"},{"lineNumber":53,"author":{"gitId":"Nixx162"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":54,"author":{"gitId":"Nixx162"},"content":"        EventInformation otherInformation \u003d (EventInformation) other;","lastModifiedDate":"2023-11-01"},{"lineNumber":55,"author":{"gitId":"Nixx162"},"content":"        return information.equals(otherInformation.information);","lastModifiedDate":"2023-11-01"},{"lineNumber":56,"author":{"gitId":"Nixx162"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":57,"author":{"gitId":"larrywang0701"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"larrywang0701":42,"Nixx162":15}},{"path":"src/main/java/seedu/address/model/event/EventLocation.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"larrywang0701"},"content":"package seedu.address.model.event;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"larrywang0701"},"content":"/**","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"larrywang0701"},"content":" * The class for holding the \"location\" part for an Event","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"larrywang0701"},"content":" */","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"larrywang0701"},"content":"public class EventLocation {","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":8,"author":{"gitId":"larrywang0701"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Event location can not be empty.\";","lastModifiedDate":"2023-10-25"},{"lineNumber":9,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":10,"author":{"gitId":"larrywang0701"},"content":"    private final String location;","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":13,"author":{"gitId":"larrywang0701"},"content":"    private EventLocation(String location) {","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"larrywang0701"},"content":"        this.location \u003d location;","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"larrywang0701"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"larrywang0701"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"larrywang0701"},"content":"     * Construct an {@code EventLocation} object from {@code String}","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"zekone"},"content":"     *","lastModifiedDate":"2023-10-20"},{"lineNumber":20,"author":{"gitId":"larrywang0701"},"content":"     * @param location The location in String","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"larrywang0701"},"content":"     * @return The {@code EventLocation} object","lastModifiedDate":"2023-10-12"},{"lineNumber":22,"author":{"gitId":"larrywang0701"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"larrywang0701"},"content":"    public static EventLocation fromString(String location) {","lastModifiedDate":"2023-10-12"},{"lineNumber":24,"author":{"gitId":"larrywang0701"},"content":"        return new EventLocation(location);","lastModifiedDate":"2023-10-12"},{"lineNumber":25,"author":{"gitId":"larrywang0701"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":27,"author":{"gitId":"larrywang0701"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":28,"author":{"gitId":"larrywang0701"},"content":"     * Get the String representation of this {@code EventLocation} object","lastModifiedDate":"2023-10-12"},{"lineNumber":29,"author":{"gitId":"zekone"},"content":"     *","lastModifiedDate":"2023-10-20"},{"lineNumber":30,"author":{"gitId":"larrywang0701"},"content":"     * @return The String representation of this {@code EventLocation} object","lastModifiedDate":"2023-10-12"},{"lineNumber":31,"author":{"gitId":"larrywang0701"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":32,"author":{"gitId":"larrywang0701"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":33,"author":{"gitId":"larrywang0701"},"content":"    public String toString() {","lastModifiedDate":"2023-10-12"},{"lineNumber":34,"author":{"gitId":"larrywang0701"},"content":"        return this.location;","lastModifiedDate":"2023-10-12"},{"lineNumber":35,"author":{"gitId":"larrywang0701"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":36,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":37,"author":{"gitId":"larrywang0701"},"content":"    /**","lastModifiedDate":"2023-10-25"},{"lineNumber":38,"author":{"gitId":"larrywang0701"},"content":"     * Returns whether the given location string in string is a valid event location","lastModifiedDate":"2023-10-25"},{"lineNumber":39,"author":{"gitId":"larrywang0701"},"content":"     * @param str The location in string","lastModifiedDate":"2023-10-25"},{"lineNumber":40,"author":{"gitId":"larrywang0701"},"content":"     * @return True if the location string is a valid event location, false otherwise","lastModifiedDate":"2023-10-25"},{"lineNumber":41,"author":{"gitId":"larrywang0701"},"content":"     */","lastModifiedDate":"2023-10-25"},{"lineNumber":42,"author":{"gitId":"larrywang0701"},"content":"    public static boolean isValidEventLocation(String str) {","lastModifiedDate":"2023-10-25"},{"lineNumber":43,"author":{"gitId":"larrywang0701"},"content":"        return !str.isEmpty();","lastModifiedDate":"2023-10-25"},{"lineNumber":44,"author":{"gitId":"larrywang0701"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":45,"author":{"gitId":"Nixx162"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":46,"author":{"gitId":"Nixx162"},"content":"    @Override","lastModifiedDate":"2023-11-01"},{"lineNumber":47,"author":{"gitId":"Nixx162"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-11-01"},{"lineNumber":48,"author":{"gitId":"Nixx162"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-11-01"},{"lineNumber":49,"author":{"gitId":"Nixx162"},"content":"            return true;","lastModifiedDate":"2023-11-01"},{"lineNumber":50,"author":{"gitId":"Nixx162"},"content":"        }","lastModifiedDate":"2023-11-01"},{"lineNumber":51,"author":{"gitId":"Nixx162"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":52,"author":{"gitId":"Nixx162"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-11-01"},{"lineNumber":53,"author":{"gitId":"Nixx162"},"content":"        if (!(other instanceof EventLocation)) {","lastModifiedDate":"2023-11-01"},{"lineNumber":54,"author":{"gitId":"Nixx162"},"content":"            return false;","lastModifiedDate":"2023-11-01"},{"lineNumber":55,"author":{"gitId":"Nixx162"},"content":"        }","lastModifiedDate":"2023-11-01"},{"lineNumber":56,"author":{"gitId":"Nixx162"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":57,"author":{"gitId":"Nixx162"},"content":"        EventLocation otherLocation \u003d (EventLocation) other;","lastModifiedDate":"2023-11-01"},{"lineNumber":58,"author":{"gitId":"Nixx162"},"content":"        return location.equals(otherLocation.location);","lastModifiedDate":"2023-11-01"},{"lineNumber":59,"author":{"gitId":"Nixx162"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":60,"author":{"gitId":"larrywang0701"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"larrywang0701":42,"zekone":3,"Nixx162":15}},{"path":"src/main/java/seedu/address/model/event/EventName.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"larrywang0701"},"content":"package seedu.address.model.event;","lastModifiedDate":"2023-10-25"},{"lineNumber":2,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":3,"author":{"gitId":"larrywang0701"},"content":"/**","lastModifiedDate":"2023-10-25"},{"lineNumber":4,"author":{"gitId":"larrywang0701"},"content":" * The class for holding the \"name\" part for an Event","lastModifiedDate":"2023-10-25"},{"lineNumber":5,"author":{"gitId":"larrywang0701"},"content":" */","lastModifiedDate":"2023-10-25"},{"lineNumber":6,"author":{"gitId":"larrywang0701"},"content":"public class EventName {","lastModifiedDate":"2023-10-25"},{"lineNumber":7,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":8,"author":{"gitId":"larrywang0701"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Event name can not be empty.\";","lastModifiedDate":"2023-10-25"},{"lineNumber":9,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":10,"author":{"gitId":"larrywang0701"},"content":"    private final String name;","lastModifiedDate":"2023-10-25"},{"lineNumber":11,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":12,"author":{"gitId":"larrywang0701"},"content":"    private EventName(String name) {","lastModifiedDate":"2023-10-25"},{"lineNumber":13,"author":{"gitId":"larrywang0701"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-10-25"},{"lineNumber":14,"author":{"gitId":"larrywang0701"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":15,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":16,"author":{"gitId":"larrywang0701"},"content":"    /**","lastModifiedDate":"2023-10-25"},{"lineNumber":17,"author":{"gitId":"larrywang0701"},"content":"     * Construct an {@code EventName} object from {@code String}","lastModifiedDate":"2023-10-25"},{"lineNumber":18,"author":{"gitId":"larrywang0701"},"content":"     *","lastModifiedDate":"2023-10-25"},{"lineNumber":19,"author":{"gitId":"larrywang0701"},"content":"     * @param name The name in String","lastModifiedDate":"2023-10-25"},{"lineNumber":20,"author":{"gitId":"larrywang0701"},"content":"     * @return The {@code EventName} object","lastModifiedDate":"2023-10-25"},{"lineNumber":21,"author":{"gitId":"larrywang0701"},"content":"     */","lastModifiedDate":"2023-10-25"},{"lineNumber":22,"author":{"gitId":"larrywang0701"},"content":"    public static EventName fromString(String name) {","lastModifiedDate":"2023-10-25"},{"lineNumber":23,"author":{"gitId":"larrywang0701"},"content":"        return new EventName(name);","lastModifiedDate":"2023-10-25"},{"lineNumber":24,"author":{"gitId":"larrywang0701"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":25,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":26,"author":{"gitId":"larrywang0701"},"content":"    /**","lastModifiedDate":"2023-10-25"},{"lineNumber":27,"author":{"gitId":"larrywang0701"},"content":"     * Get the String representation of this {@code EventName} object","lastModifiedDate":"2023-10-25"},{"lineNumber":28,"author":{"gitId":"larrywang0701"},"content":"     *","lastModifiedDate":"2023-10-25"},{"lineNumber":29,"author":{"gitId":"larrywang0701"},"content":"     * @return The String representation of this {@code EventName} object","lastModifiedDate":"2023-10-25"},{"lineNumber":30,"author":{"gitId":"larrywang0701"},"content":"     */","lastModifiedDate":"2023-10-25"},{"lineNumber":31,"author":{"gitId":"larrywang0701"},"content":"    @Override","lastModifiedDate":"2023-10-25"},{"lineNumber":32,"author":{"gitId":"larrywang0701"},"content":"    public String toString() {","lastModifiedDate":"2023-10-25"},{"lineNumber":33,"author":{"gitId":"larrywang0701"},"content":"        return this.name;","lastModifiedDate":"2023-10-25"},{"lineNumber":34,"author":{"gitId":"larrywang0701"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":35,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":36,"author":{"gitId":"larrywang0701"},"content":"    /**","lastModifiedDate":"2023-10-25"},{"lineNumber":37,"author":{"gitId":"larrywang0701"},"content":"     * Returns whether the given name in string is a valid event name","lastModifiedDate":"2023-10-25"},{"lineNumber":38,"author":{"gitId":"larrywang0701"},"content":"     * @param str The name in string","lastModifiedDate":"2023-10-25"},{"lineNumber":39,"author":{"gitId":"larrywang0701"},"content":"     * @return True if the name is a valid event name, false otherwise","lastModifiedDate":"2023-10-25"},{"lineNumber":40,"author":{"gitId":"larrywang0701"},"content":"     */","lastModifiedDate":"2023-10-25"},{"lineNumber":41,"author":{"gitId":"larrywang0701"},"content":"    public static boolean isValidEventName(String str) {","lastModifiedDate":"2023-10-25"},{"lineNumber":42,"author":{"gitId":"larrywang0701"},"content":"        return !str.isEmpty();","lastModifiedDate":"2023-10-25"},{"lineNumber":43,"author":{"gitId":"larrywang0701"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":44,"author":{"gitId":"Nixx162"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":45,"author":{"gitId":"Nixx162"},"content":"    @Override","lastModifiedDate":"2023-11-01"},{"lineNumber":46,"author":{"gitId":"Nixx162"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-11-01"},{"lineNumber":47,"author":{"gitId":"Nixx162"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-11-01"},{"lineNumber":48,"author":{"gitId":"Nixx162"},"content":"            return true;","lastModifiedDate":"2023-11-01"},{"lineNumber":49,"author":{"gitId":"Nixx162"},"content":"        }","lastModifiedDate":"2023-11-01"},{"lineNumber":50,"author":{"gitId":"Nixx162"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":51,"author":{"gitId":"Nixx162"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-11-01"},{"lineNumber":52,"author":{"gitId":"Nixx162"},"content":"        if (!(other instanceof EventName)) {","lastModifiedDate":"2023-11-01"},{"lineNumber":53,"author":{"gitId":"Nixx162"},"content":"            return false;","lastModifiedDate":"2023-11-01"},{"lineNumber":54,"author":{"gitId":"Nixx162"},"content":"        }","lastModifiedDate":"2023-11-01"},{"lineNumber":55,"author":{"gitId":"Nixx162"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":56,"author":{"gitId":"Nixx162"},"content":"        EventName otherName \u003d (EventName) other;","lastModifiedDate":"2023-11-01"},{"lineNumber":57,"author":{"gitId":"Nixx162"},"content":"        return name.equals(otherName.name);","lastModifiedDate":"2023-11-01"},{"lineNumber":58,"author":{"gitId":"Nixx162"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":59,"author":{"gitId":"larrywang0701"},"content":"}","lastModifiedDate":"2023-10-25"}],"authorContributionMap":{"larrywang0701":44,"Nixx162":15}},{"path":"src/main/java/seedu/address/model/event/EventTime.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"larrywang0701"},"content":"package seedu.address.model.event;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"larrywang0701"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"larrywang0701"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"larrywang0701"},"content":"import seedu.address.commons.util.DateTimeUtil;","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"larrywang0701"},"content":"/**","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"larrywang0701"},"content":" * The class for holding the \"start\" and \"end\" part for an Event","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"larrywang0701"},"content":" */","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"larrywang0701"},"content":"public class EventTime {","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"larrywang0701"},"content":"    public static final String MESSAGE_INVALID_DATETIME_FORMAT \u003d \"Invalid date-time format! \";","lastModifiedDate":"2023-10-25"},{"lineNumber":13,"author":{"gitId":"larrywang0701"},"content":"    public static final String MESSAGE_NON_EMPTY \u003d \"Time can not be empty!\";","lastModifiedDate":"2023-11-01"},{"lineNumber":14,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":15,"author":{"gitId":"larrywang0701"},"content":"    private final LocalDateTime time;","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"larrywang0701"},"content":"    private EventTime(String time) throws DateTimeParseException {","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"larrywang0701"},"content":"        this.time \u003d DateTimeUtil.parseString(time);","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"larrywang0701"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":20,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"larrywang0701"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":22,"author":{"gitId":"larrywang0701"},"content":"     * Construct an {@code EventTime} object from {@code String}","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"larrywang0701"},"content":"     * @param timeStr The time in {@code String}","lastModifiedDate":"2023-10-12"},{"lineNumber":24,"author":{"gitId":"larrywang0701"},"content":"     * @return The {@code EventTime} object","lastModifiedDate":"2023-10-12"},{"lineNumber":25,"author":{"gitId":"larrywang0701"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"larrywang0701"},"content":"    public static EventTime fromString(String timeStr) throws DateTimeParseException {","lastModifiedDate":"2023-10-12"},{"lineNumber":27,"author":{"gitId":"larrywang0701"},"content":"        return new EventTime(timeStr);","lastModifiedDate":"2023-11-04"},{"lineNumber":28,"author":{"gitId":"larrywang0701"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":29,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":30,"author":{"gitId":"larrywang0701"},"content":"    /**","lastModifiedDate":"2023-11-01"},{"lineNumber":31,"author":{"gitId":"larrywang0701"},"content":"     * Return the date-time as {@code LocalDateTime}","lastModifiedDate":"2023-11-01"},{"lineNumber":32,"author":{"gitId":"larrywang0701"},"content":"     * @return The date-time as {@code LocalDateTime}","lastModifiedDate":"2023-11-01"},{"lineNumber":33,"author":{"gitId":"larrywang0701"},"content":"     */","lastModifiedDate":"2023-11-01"},{"lineNumber":34,"author":{"gitId":"larrywang0701"},"content":"    public LocalDateTime getTime() {","lastModifiedDate":"2023-11-01"},{"lineNumber":35,"author":{"gitId":"larrywang0701"},"content":"        return this.time;","lastModifiedDate":"2023-11-01"},{"lineNumber":36,"author":{"gitId":"larrywang0701"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":37,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":38,"author":{"gitId":"larrywang0701"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":39,"author":{"gitId":"larrywang0701"},"content":"     * Get the String representation of this {@code EventTime} object","lastModifiedDate":"2023-10-12"},{"lineNumber":40,"author":{"gitId":"larrywang0701"},"content":"     * @return The String representation of this {@code EventTime} object, in the format {@code yyyy-MM-dd HH:mm:ss}","lastModifiedDate":"2023-10-12"},{"lineNumber":41,"author":{"gitId":"larrywang0701"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":42,"author":{"gitId":"larrywang0701"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":43,"author":{"gitId":"larrywang0701"},"content":"    public String toString() {","lastModifiedDate":"2023-10-12"},{"lineNumber":44,"author":{"gitId":"larrywang0701"},"content":"        return this.time !\u003d null ? DateTimeUtil.toFormattedString(this.time) : \"\";","lastModifiedDate":"2023-10-12"},{"lineNumber":45,"author":{"gitId":"larrywang0701"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":46,"author":{"gitId":"Nixx162"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":47,"author":{"gitId":"Nixx162"},"content":"    @Override","lastModifiedDate":"2023-11-01"},{"lineNumber":48,"author":{"gitId":"Nixx162"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-11-01"},{"lineNumber":49,"author":{"gitId":"Nixx162"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-11-01"},{"lineNumber":50,"author":{"gitId":"Nixx162"},"content":"            return true;","lastModifiedDate":"2023-11-01"},{"lineNumber":51,"author":{"gitId":"Nixx162"},"content":"        }","lastModifiedDate":"2023-11-01"},{"lineNumber":52,"author":{"gitId":"Nixx162"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":53,"author":{"gitId":"Nixx162"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-11-01"},{"lineNumber":54,"author":{"gitId":"Nixx162"},"content":"        if (!(other instanceof EventTime)) {","lastModifiedDate":"2023-11-01"},{"lineNumber":55,"author":{"gitId":"Nixx162"},"content":"            return false;","lastModifiedDate":"2023-11-01"},{"lineNumber":56,"author":{"gitId":"Nixx162"},"content":"        }","lastModifiedDate":"2023-11-01"},{"lineNumber":57,"author":{"gitId":"Nixx162"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":58,"author":{"gitId":"larrywang0701"},"content":"        EventTime otherTime \u003d (EventTime) other;","lastModifiedDate":"2023-11-04"},{"lineNumber":59,"author":{"gitId":"larrywang0701"},"content":"        return time.equals(otherTime.time);","lastModifiedDate":"2023-11-04"},{"lineNumber":60,"author":{"gitId":"Nixx162"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":61,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":62,"author":{"gitId":"larrywang0701"},"content":"    /**","lastModifiedDate":"2023-11-01"},{"lineNumber":63,"author":{"gitId":"larrywang0701"},"content":"     * Return {@code true} if this {@code EventTime} is after {@code other}.","lastModifiedDate":"2023-11-01"},{"lineNumber":64,"author":{"gitId":"larrywang0701"},"content":"     * Always returns false when this {@code EventTime} or {@code other} contains null time","lastModifiedDate":"2023-11-01"},{"lineNumber":65,"author":{"gitId":"larrywang0701"},"content":"     * @param other The other {@code EventTime}","lastModifiedDate":"2023-11-01"},{"lineNumber":66,"author":{"gitId":"larrywang0701"},"content":"     */","lastModifiedDate":"2023-11-01"},{"lineNumber":67,"author":{"gitId":"larrywang0701"},"content":"    public boolean isAfter(EventTime other) {","lastModifiedDate":"2023-11-01"},{"lineNumber":68,"author":{"gitId":"larrywang0701"},"content":"        return this.time !\u003d null \u0026\u0026 other.time !\u003d null \u0026\u0026 this.time.isAfter(other.time);","lastModifiedDate":"2023-11-01"},{"lineNumber":69,"author":{"gitId":"larrywang0701"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":70,"author":{"gitId":"larrywang0701"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"larrywang0701":57,"Nixx162":13}},{"path":"src/main/java/seedu/address/model/event/UniqueEventList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Nixx162"},"content":"package seedu.address.model.event;","lastModifiedDate":"2023-11-01"},{"lineNumber":2,"author":{"gitId":"Nixx162"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":3,"author":{"gitId":"Nixx162"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-11-01"},{"lineNumber":4,"author":{"gitId":"Nixx162"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-11-01"},{"lineNumber":5,"author":{"gitId":"Nixx162"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":6,"author":{"gitId":"larrywang0701"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-11-01"},{"lineNumber":7,"author":{"gitId":"Nixx162"},"content":"import java.util.Iterator;","lastModifiedDate":"2023-11-01"},{"lineNumber":8,"author":{"gitId":"Nixx162"},"content":"import java.util.List;","lastModifiedDate":"2023-11-01"},{"lineNumber":9,"author":{"gitId":"Nixx162"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":10,"author":{"gitId":"Nixx162"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-11-01"},{"lineNumber":11,"author":{"gitId":"Nixx162"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-11-01"},{"lineNumber":12,"author":{"gitId":"larrywang0701"},"content":"import seedu.address.commons.util.DateTimeUtil;","lastModifiedDate":"2023-11-01"},{"lineNumber":13,"author":{"gitId":"Nixx162"},"content":"import seedu.address.model.event.exceptions.DuplicateEventException;","lastModifiedDate":"2023-11-01"},{"lineNumber":14,"author":{"gitId":"Nixx162"},"content":"import seedu.address.model.event.exceptions.EventNotFoundException;","lastModifiedDate":"2023-11-01"},{"lineNumber":15,"author":{"gitId":"larrywang0701"},"content":"import seedu.address.model.event.exceptions.EventOverlapException;","lastModifiedDate":"2023-11-01"},{"lineNumber":16,"author":{"gitId":"Nixx162"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":17,"author":{"gitId":"Nixx162"},"content":"/**","lastModifiedDate":"2023-11-01"},{"lineNumber":18,"author":{"gitId":"larrywang0701"},"content":" * A list of events that enforces uniqueness between its elements, does not allow overlaps and does not allow nulls.","lastModifiedDate":"2023-11-01"},{"lineNumber":19,"author":{"gitId":"larrywang0701"},"content":" * An event can be added only if it does not already exist in the list,","lastModifiedDate":"2023-11-01"},{"lineNumber":20,"author":{"gitId":"larrywang0701"},"content":" * and it does not overlap with all currently existed events by time","lastModifiedDate":"2023-11-01"},{"lineNumber":21,"author":{"gitId":"Nixx162"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2023-11-01"},{"lineNumber":22,"author":{"gitId":"Nixx162"},"content":" *","lastModifiedDate":"2023-11-01"},{"lineNumber":23,"author":{"gitId":"Nixx162"},"content":" */","lastModifiedDate":"2023-11-01"},{"lineNumber":24,"author":{"gitId":"Nixx162"},"content":"public class UniqueEventList implements Iterable\u003cEvent\u003e {","lastModifiedDate":"2023-11-01"},{"lineNumber":25,"author":{"gitId":"Nixx162"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":26,"author":{"gitId":"Nixx162"},"content":"    private final ObservableList\u003cEvent\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2023-11-01"},{"lineNumber":27,"author":{"gitId":"Nixx162"},"content":"    private final ObservableList\u003cEvent\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2023-11-01"},{"lineNumber":28,"author":{"gitId":"Nixx162"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2023-11-01"},{"lineNumber":29,"author":{"gitId":"Nixx162"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":30,"author":{"gitId":"Nixx162"},"content":"    /**","lastModifiedDate":"2023-11-01"},{"lineNumber":31,"author":{"gitId":"larrywang0701"},"content":"     * Returns true if the list contains an equivalent event as the given argument.","lastModifiedDate":"2023-11-01"},{"lineNumber":32,"author":{"gitId":"Nixx162"},"content":"     */","lastModifiedDate":"2023-11-01"},{"lineNumber":33,"author":{"gitId":"Nixx162"},"content":"    public boolean contains(Event toCheck) {","lastModifiedDate":"2023-11-01"},{"lineNumber":34,"author":{"gitId":"Nixx162"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2023-11-01"},{"lineNumber":35,"author":{"gitId":"Nixx162"},"content":"        return internalList.stream().anyMatch(toCheck::equals);","lastModifiedDate":"2023-11-01"},{"lineNumber":36,"author":{"gitId":"Nixx162"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":37,"author":{"gitId":"Nixx162"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":38,"author":{"gitId":"Nixx162"},"content":"    /**","lastModifiedDate":"2023-11-01"},{"lineNumber":39,"author":{"gitId":"Nixx162"},"content":"     * Adds an event to the list.","lastModifiedDate":"2023-11-01"},{"lineNumber":40,"author":{"gitId":"Nixx162"},"content":"     */","lastModifiedDate":"2023-11-01"},{"lineNumber":41,"author":{"gitId":"Nixx162"},"content":"    public void add(Event toAdd) {","lastModifiedDate":"2023-11-01"},{"lineNumber":42,"author":{"gitId":"Nixx162"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2023-11-01"},{"lineNumber":43,"author":{"gitId":"Nixx162"},"content":"        if (this.contains(toAdd)) {","lastModifiedDate":"2023-11-01"},{"lineNumber":44,"author":{"gitId":"Nixx162"},"content":"            throw new DuplicateEventException();","lastModifiedDate":"2023-11-01"},{"lineNumber":45,"author":{"gitId":"Nixx162"},"content":"        }","lastModifiedDate":"2023-11-01"},{"lineNumber":46,"author":{"gitId":"larrywang0701"},"content":"        Event overlappingEvent \u003d this.getOverlappingEvent(toAdd);","lastModifiedDate":"2023-11-01"},{"lineNumber":47,"author":{"gitId":"larrywang0701"},"content":"        if (overlappingEvent !\u003d null) {","lastModifiedDate":"2023-11-01"},{"lineNumber":48,"author":{"gitId":"larrywang0701"},"content":"            throw new EventOverlapException(toAdd, overlappingEvent);","lastModifiedDate":"2023-11-01"},{"lineNumber":49,"author":{"gitId":"larrywang0701"},"content":"        }","lastModifiedDate":"2023-11-01"},{"lineNumber":50,"author":{"gitId":"Nixx162"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2023-11-01"},{"lineNumber":51,"author":{"gitId":"Nixx162"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":52,"author":{"gitId":"Nixx162"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":53,"author":{"gitId":"Nixx162"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":54,"author":{"gitId":"Nixx162"},"content":"    /**","lastModifiedDate":"2023-11-01"},{"lineNumber":55,"author":{"gitId":"larrywang0701"},"content":"     * Removes the equivalent event from the list.","lastModifiedDate":"2023-11-01"},{"lineNumber":56,"author":{"gitId":"larrywang0701"},"content":"     * The event must exist in the list.","lastModifiedDate":"2023-11-01"},{"lineNumber":57,"author":{"gitId":"Nixx162"},"content":"     */","lastModifiedDate":"2023-11-01"},{"lineNumber":58,"author":{"gitId":"Nixx162"},"content":"    public void remove(Event toRemove) {","lastModifiedDate":"2023-11-01"},{"lineNumber":59,"author":{"gitId":"Nixx162"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2023-11-01"},{"lineNumber":60,"author":{"gitId":"Nixx162"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2023-11-01"},{"lineNumber":61,"author":{"gitId":"Nixx162"},"content":"            throw new EventNotFoundException();","lastModifiedDate":"2023-11-01"},{"lineNumber":62,"author":{"gitId":"Nixx162"},"content":"        }","lastModifiedDate":"2023-11-01"},{"lineNumber":63,"author":{"gitId":"Nixx162"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":64,"author":{"gitId":"Nixx162"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":65,"author":{"gitId":"larrywang0701"},"content":"    public void setEvents(UniqueEventList replacement) {","lastModifiedDate":"2023-11-01"},{"lineNumber":66,"author":{"gitId":"Nixx162"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2023-11-01"},{"lineNumber":67,"author":{"gitId":"Nixx162"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2023-11-01"},{"lineNumber":68,"author":{"gitId":"Nixx162"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":69,"author":{"gitId":"Nixx162"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":70,"author":{"gitId":"Nixx162"},"content":"    /**","lastModifiedDate":"2023-11-01"},{"lineNumber":71,"author":{"gitId":"larrywang0701"},"content":"     * Replaces the contents of this list with {@code events}.","lastModifiedDate":"2023-11-01"},{"lineNumber":72,"author":{"gitId":"larrywang0701"},"content":"     * {@code persons} must not contain duplicate events.","lastModifiedDate":"2023-11-01"},{"lineNumber":73,"author":{"gitId":"Nixx162"},"content":"     */","lastModifiedDate":"2023-11-01"},{"lineNumber":74,"author":{"gitId":"larrywang0701"},"content":"    public void setEvents(List\u003cEvent\u003e events) {","lastModifiedDate":"2023-11-01"},{"lineNumber":75,"author":{"gitId":"Nixx162"},"content":"        requireAllNonNull(events);","lastModifiedDate":"2023-11-01"},{"lineNumber":76,"author":{"gitId":"Nixx162"},"content":"        if (!eventsAreUnique(events)) {","lastModifiedDate":"2023-11-01"},{"lineNumber":77,"author":{"gitId":"Nixx162"},"content":"            throw new DuplicateEventException();","lastModifiedDate":"2023-11-01"},{"lineNumber":78,"author":{"gitId":"Nixx162"},"content":"        }","lastModifiedDate":"2023-11-01"},{"lineNumber":79,"author":{"gitId":"Nixx162"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":80,"author":{"gitId":"Nixx162"},"content":"        internalList.setAll(events);","lastModifiedDate":"2023-11-01"},{"lineNumber":81,"author":{"gitId":"Nixx162"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":82,"author":{"gitId":"Nixx162"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":83,"author":{"gitId":"Nixx162"},"content":"    /**","lastModifiedDate":"2023-11-01"},{"lineNumber":84,"author":{"gitId":"Nixx162"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2023-11-01"},{"lineNumber":85,"author":{"gitId":"Nixx162"},"content":"     */","lastModifiedDate":"2023-11-01"},{"lineNumber":86,"author":{"gitId":"Nixx162"},"content":"    public ObservableList\u003cEvent\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2023-11-01"},{"lineNumber":87,"author":{"gitId":"Nixx162"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2023-11-01"},{"lineNumber":88,"author":{"gitId":"Nixx162"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":89,"author":{"gitId":"Nixx162"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":90,"author":{"gitId":"Nixx162"},"content":"    @Override","lastModifiedDate":"2023-11-01"},{"lineNumber":91,"author":{"gitId":"Nixx162"},"content":"    public Iterator\u003cEvent\u003e iterator() {","lastModifiedDate":"2023-11-01"},{"lineNumber":92,"author":{"gitId":"Nixx162"},"content":"        return internalList.iterator();","lastModifiedDate":"2023-11-01"},{"lineNumber":93,"author":{"gitId":"Nixx162"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":94,"author":{"gitId":"Nixx162"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":95,"author":{"gitId":"Nixx162"},"content":"    @Override","lastModifiedDate":"2023-11-01"},{"lineNumber":96,"author":{"gitId":"Nixx162"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-11-01"},{"lineNumber":97,"author":{"gitId":"Nixx162"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-11-01"},{"lineNumber":98,"author":{"gitId":"Nixx162"},"content":"            return true;","lastModifiedDate":"2023-11-01"},{"lineNumber":99,"author":{"gitId":"Nixx162"},"content":"        }","lastModifiedDate":"2023-11-01"},{"lineNumber":100,"author":{"gitId":"Nixx162"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":101,"author":{"gitId":"Nixx162"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-11-01"},{"lineNumber":102,"author":{"gitId":"Nixx162"},"content":"        if (!(other instanceof UniqueEventList)) {","lastModifiedDate":"2023-11-01"},{"lineNumber":103,"author":{"gitId":"Nixx162"},"content":"            return false;","lastModifiedDate":"2023-11-01"},{"lineNumber":104,"author":{"gitId":"Nixx162"},"content":"        }","lastModifiedDate":"2023-11-01"},{"lineNumber":105,"author":{"gitId":"Nixx162"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":106,"author":{"gitId":"Nixx162"},"content":"        UniqueEventList otherUniquePersonList \u003d (UniqueEventList) other;","lastModifiedDate":"2023-11-01"},{"lineNumber":107,"author":{"gitId":"Nixx162"},"content":"        return internalList.equals(otherUniquePersonList.internalList);","lastModifiedDate":"2023-11-01"},{"lineNumber":108,"author":{"gitId":"Nixx162"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":109,"author":{"gitId":"Nixx162"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":110,"author":{"gitId":"Nixx162"},"content":"    @Override","lastModifiedDate":"2023-11-01"},{"lineNumber":111,"author":{"gitId":"Nixx162"},"content":"    public int hashCode() {","lastModifiedDate":"2023-11-01"},{"lineNumber":112,"author":{"gitId":"Nixx162"},"content":"        return internalList.hashCode();","lastModifiedDate":"2023-11-01"},{"lineNumber":113,"author":{"gitId":"Nixx162"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":114,"author":{"gitId":"Nixx162"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":115,"author":{"gitId":"Nixx162"},"content":"    @Override","lastModifiedDate":"2023-11-01"},{"lineNumber":116,"author":{"gitId":"Nixx162"},"content":"    public String toString() {","lastModifiedDate":"2023-11-01"},{"lineNumber":117,"author":{"gitId":"Nixx162"},"content":"        return internalList.toString();","lastModifiedDate":"2023-11-01"},{"lineNumber":118,"author":{"gitId":"Nixx162"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":119,"author":{"gitId":"Nixx162"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":120,"author":{"gitId":"Nixx162"},"content":"    /**","lastModifiedDate":"2023-11-01"},{"lineNumber":121,"author":{"gitId":"larrywang0701"},"content":"     * Returns true if {@code events} contains only unique events.","lastModifiedDate":"2023-11-01"},{"lineNumber":122,"author":{"gitId":"Nixx162"},"content":"     */","lastModifiedDate":"2023-11-01"},{"lineNumber":123,"author":{"gitId":"Nixx162"},"content":"    private boolean eventsAreUnique(List\u003cEvent\u003e events) {","lastModifiedDate":"2023-11-01"},{"lineNumber":124,"author":{"gitId":"Nixx162"},"content":"        for (int i \u003d 0; i \u003c events.size() - 1; i++) {","lastModifiedDate":"2023-11-01"},{"lineNumber":125,"author":{"gitId":"Nixx162"},"content":"            for (int j \u003d i + 1; j \u003c events.size(); j++) {","lastModifiedDate":"2023-11-01"},{"lineNumber":126,"author":{"gitId":"Nixx162"},"content":"                if (events.get(i).equals(events.get(j))) {","lastModifiedDate":"2023-11-01"},{"lineNumber":127,"author":{"gitId":"Nixx162"},"content":"                    return false;","lastModifiedDate":"2023-11-01"},{"lineNumber":128,"author":{"gitId":"Nixx162"},"content":"                }","lastModifiedDate":"2023-11-01"},{"lineNumber":129,"author":{"gitId":"Nixx162"},"content":"            }","lastModifiedDate":"2023-11-01"},{"lineNumber":130,"author":{"gitId":"Nixx162"},"content":"        }","lastModifiedDate":"2023-11-01"},{"lineNumber":131,"author":{"gitId":"Nixx162"},"content":"        return true;","lastModifiedDate":"2023-11-01"},{"lineNumber":132,"author":{"gitId":"Nixx162"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":133,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":134,"author":{"gitId":"larrywang0701"},"content":"    /**","lastModifiedDate":"2023-11-01"},{"lineNumber":135,"author":{"gitId":"larrywang0701"},"content":"     * Return an event in the list that is overlapping with {@code newEvent}.","lastModifiedDate":"2023-11-01"},{"lineNumber":136,"author":{"gitId":"larrywang0701"},"content":"     * If no overlapping event is found, return {@code null}","lastModifiedDate":"2023-11-01"},{"lineNumber":137,"author":{"gitId":"larrywang0701"},"content":"     * {@code newEvent} must not exists in the list.","lastModifiedDate":"2023-11-01"},{"lineNumber":138,"author":{"gitId":"larrywang0701"},"content":"     *","lastModifiedDate":"2023-11-01"},{"lineNumber":139,"author":{"gitId":"larrywang0701"},"content":"     * @param newEvent The event for checking overlapping","lastModifiedDate":"2023-11-01"},{"lineNumber":140,"author":{"gitId":"larrywang0701"},"content":"     * @return The overlapping event or {@code null}.","lastModifiedDate":"2023-11-01"},{"lineNumber":141,"author":{"gitId":"larrywang0701"},"content":"     */","lastModifiedDate":"2023-11-01"},{"lineNumber":142,"author":{"gitId":"larrywang0701"},"content":"    private Event getOverlappingEvent(Event newEvent) {","lastModifiedDate":"2023-11-01"},{"lineNumber":143,"author":{"gitId":"larrywang0701"},"content":"        requireNonNull(newEvent);","lastModifiedDate":"2023-11-01"},{"lineNumber":144,"author":{"gitId":"larrywang0701"},"content":"        assert !this.contains(newEvent);","lastModifiedDate":"2023-11-01"},{"lineNumber":145,"author":{"gitId":"larrywang0701"},"content":"        LocalDateTime newEventStartTime \u003d newEvent.getStartTime();","lastModifiedDate":"2023-11-01"},{"lineNumber":146,"author":{"gitId":"larrywang0701"},"content":"        LocalDateTime newEventEndTime \u003d newEvent.getEndTime();","lastModifiedDate":"2023-11-01"},{"lineNumber":147,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":148,"author":{"gitId":"AndrewJanong"},"content":"        assert newEventStartTime !\u003d null : \"Start time should not be null\";","lastModifiedDate":"2023-11-03"},{"lineNumber":149,"author":{"gitId":"larrywang0701"},"content":"        assert newEventEndTime !\u003d null : \"End time should not be null\";","lastModifiedDate":"2023-11-04"},{"lineNumber":150,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":151,"author":{"gitId":"larrywang0701"},"content":"        for (Event e : this.internalList) {","lastModifiedDate":"2023-11-01"},{"lineNumber":152,"author":{"gitId":"larrywang0701"},"content":"            LocalDateTime startTime \u003d e.getStartTime();","lastModifiedDate":"2023-11-01"},{"lineNumber":153,"author":{"gitId":"larrywang0701"},"content":"            LocalDateTime endTime \u003d e.getEndTime();","lastModifiedDate":"2023-11-01"},{"lineNumber":154,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":155,"author":{"gitId":"AndrewJanong"},"content":"            assert startTime !\u003d null : \"Start time should not be null\";","lastModifiedDate":"2023-11-03"},{"lineNumber":156,"author":{"gitId":"larrywang0701"},"content":"            assert endTime !\u003d null : \"End time should not be null\";","lastModifiedDate":"2023-11-04"},{"lineNumber":157,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":158,"author":{"gitId":"larrywang0701"},"content":"            if (DateTimeUtil.timeIntervalsOverlap(newEventStartTime, newEventEndTime, startTime, endTime)) {","lastModifiedDate":"2023-11-01"},{"lineNumber":159,"author":{"gitId":"larrywang0701"},"content":"                return e;","lastModifiedDate":"2023-11-01"},{"lineNumber":160,"author":{"gitId":"larrywang0701"},"content":"            }","lastModifiedDate":"2023-11-01"},{"lineNumber":161,"author":{"gitId":"larrywang0701"},"content":"        }","lastModifiedDate":"2023-11-01"},{"lineNumber":162,"author":{"gitId":"larrywang0701"},"content":"        return null;","lastModifiedDate":"2023-11-01"},{"lineNumber":163,"author":{"gitId":"larrywang0701"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":164,"author":{"gitId":"Nixx162"},"content":"}","lastModifiedDate":"2023-11-01"}],"authorContributionMap":{"larrywang0701":43,"AndrewJanong":6,"Nixx162":115}},{"path":"src/main/java/seedu/address/model/event/exceptions/DuplicateEventException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Nixx162"},"content":"package seedu.address.model.event.exceptions;","lastModifiedDate":"2023-11-01"},{"lineNumber":2,"author":{"gitId":"Nixx162"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":3,"author":{"gitId":"larrywang0701"},"content":"import static seedu.address.logic.Messages.DUPLICATED_EVENTS;","lastModifiedDate":"2023-11-10"},{"lineNumber":4,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":5,"author":{"gitId":"Nixx162"},"content":"/**","lastModifiedDate":"2023-11-01"},{"lineNumber":6,"author":{"gitId":"Nixx162"},"content":" * Signals that the operation will result in duplicate Persons (Persons are considered duplicates if they have the same","lastModifiedDate":"2023-11-01"},{"lineNumber":7,"author":{"gitId":"Nixx162"},"content":" * identity).","lastModifiedDate":"2023-11-01"},{"lineNumber":8,"author":{"gitId":"Nixx162"},"content":" */","lastModifiedDate":"2023-11-01"},{"lineNumber":9,"author":{"gitId":"Nixx162"},"content":"public class DuplicateEventException extends RuntimeException {","lastModifiedDate":"2023-11-01"},{"lineNumber":10,"author":{"gitId":"Nixx162"},"content":"    public DuplicateEventException() {","lastModifiedDate":"2023-11-01"},{"lineNumber":11,"author":{"gitId":"larrywang0701"},"content":"        super(DUPLICATED_EVENTS);","lastModifiedDate":"2023-11-10"},{"lineNumber":12,"author":{"gitId":"Nixx162"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":13,"author":{"gitId":"Nixx162"},"content":"}","lastModifiedDate":"2023-11-01"}],"authorContributionMap":{"larrywang0701":3,"Nixx162":10}},{"path":"src/main/java/seedu/address/model/event/exceptions/EventNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Nixx162"},"content":"package seedu.address.model.event.exceptions;","lastModifiedDate":"2023-11-01"},{"lineNumber":2,"author":{"gitId":"Nixx162"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":3,"author":{"gitId":"Nixx162"},"content":"/**","lastModifiedDate":"2023-11-01"},{"lineNumber":4,"author":{"gitId":"Nixx162"},"content":" * Signals that the operation is unable to find the specified person.","lastModifiedDate":"2023-11-01"},{"lineNumber":5,"author":{"gitId":"Nixx162"},"content":" */","lastModifiedDate":"2023-11-01"},{"lineNumber":6,"author":{"gitId":"Nixx162"},"content":"public class EventNotFoundException extends RuntimeException {}","lastModifiedDate":"2023-11-01"}],"authorContributionMap":{"Nixx162":6}},{"path":"src/main/java/seedu/address/model/event/exceptions/EventOverlapException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"larrywang0701"},"content":"package seedu.address.model.event.exceptions;","lastModifiedDate":"2023-11-01"},{"lineNumber":2,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":3,"author":{"gitId":"larrywang0701"},"content":"import static seedu.address.logic.Messages.EVENT_OVERLAP;","lastModifiedDate":"2023-11-10"},{"lineNumber":4,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":5,"author":{"gitId":"larrywang0701"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2023-11-01"},{"lineNumber":6,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":7,"author":{"gitId":"larrywang0701"},"content":"/**","lastModifiedDate":"2023-11-01"},{"lineNumber":8,"author":{"gitId":"larrywang0701"},"content":" * Thrown when two events overlap (clash) by time","lastModifiedDate":"2023-11-01"},{"lineNumber":9,"author":{"gitId":"larrywang0701"},"content":" */","lastModifiedDate":"2023-11-01"},{"lineNumber":10,"author":{"gitId":"larrywang0701"},"content":"public class EventOverlapException extends RuntimeException {","lastModifiedDate":"2023-11-01"},{"lineNumber":11,"author":{"gitId":"larrywang0701"},"content":"    public EventOverlapException(Event e1, Event e2) {","lastModifiedDate":"2023-11-01"},{"lineNumber":12,"author":{"gitId":"larrywang0701"},"content":"        super(String.format(EVENT_OVERLAP, e1.getUiText(), e2.getUiText()));","lastModifiedDate":"2023-11-10"},{"lineNumber":13,"author":{"gitId":"larrywang0701"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":14,"author":{"gitId":"larrywang0701"},"content":"}","lastModifiedDate":"2023-11-01"}],"authorContributionMap":{"larrywang0701":14}},{"path":"src/main/java/seedu/address/model/note/Note.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zekone"},"content":"package seedu.address.model.note;","lastModifiedDate":"2023-10-10"},{"lineNumber":2,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":3,"author":{"gitId":"josepholim"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-10-27"},{"lineNumber":4,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":5,"author":{"gitId":"larrywang0701"},"content":"/**","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"josepholim"},"content":" * Represents a Note.","lastModifiedDate":"2023-10-15"},{"lineNumber":7,"author":{"gitId":"larrywang0701"},"content":" */","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"zekone"},"content":"public class Note {","lastModifiedDate":"2023-10-10"},{"lineNumber":9,"author":{"gitId":"josepholim"},"content":"    private final NoteTitle title;","lastModifiedDate":"2023-10-15"},{"lineNumber":10,"author":{"gitId":"josepholim"},"content":"    private final NoteContent content;","lastModifiedDate":"2023-10-15"},{"lineNumber":11,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":12,"author":{"gitId":"larrywang0701"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"josepholim"},"content":"     * Constructs a Note.","lastModifiedDate":"2023-10-15"},{"lineNumber":14,"author":{"gitId":"josepholim"},"content":"     * @param title The title of the note.","lastModifiedDate":"2023-10-15"},{"lineNumber":15,"author":{"gitId":"josepholim"},"content":"     * @param content The content of the note.","lastModifiedDate":"2023-10-15"},{"lineNumber":16,"author":{"gitId":"larrywang0701"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"josepholim"},"content":"    public Note(NoteTitle title, NoteContent content) {","lastModifiedDate":"2023-10-27"},{"lineNumber":18,"author":{"gitId":"josepholim"},"content":"        requireAllNonNull(title, content);","lastModifiedDate":"2023-10-27"},{"lineNumber":19,"author":{"gitId":"josepholim"},"content":"        this.title \u003d title;","lastModifiedDate":"2023-10-27"},{"lineNumber":20,"author":{"gitId":"josepholim"},"content":"        this.content \u003d content;","lastModifiedDate":"2023-10-27"},{"lineNumber":21,"author":{"gitId":"josepholim"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":22,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":23,"author":{"gitId":"josepholim"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":24,"author":{"gitId":"josepholim"},"content":"     * Constructs a Note from string representation.","lastModifiedDate":"2023-10-27"},{"lineNumber":25,"author":{"gitId":"josepholim"},"content":"     * @param title The title of the note.","lastModifiedDate":"2023-10-27"},{"lineNumber":26,"author":{"gitId":"josepholim"},"content":"     * @param content The content of the note.","lastModifiedDate":"2023-10-27"},{"lineNumber":27,"author":{"gitId":"josepholim"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":28,"author":{"gitId":"josepholim"},"content":"    public Note(String title, String content) {","lastModifiedDate":"2023-10-15"},{"lineNumber":29,"author":{"gitId":"josepholim"},"content":"        this.title \u003d NoteTitle.fromString(title);","lastModifiedDate":"2023-10-15"},{"lineNumber":30,"author":{"gitId":"josepholim"},"content":"        this.content \u003d NoteContent.fromString(content);","lastModifiedDate":"2023-10-15"},{"lineNumber":31,"author":{"gitId":"zekone"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":32,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":33,"author":{"gitId":"josepholim"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":34,"author":{"gitId":"josepholim"},"content":"     * Returns the title of the note.","lastModifiedDate":"2023-10-15"},{"lineNumber":35,"author":{"gitId":"josepholim"},"content":"     * @return The title of the note.","lastModifiedDate":"2023-10-15"},{"lineNumber":36,"author":{"gitId":"josepholim"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":37,"author":{"gitId":"zekone"},"content":"    public String getTitle() {","lastModifiedDate":"2023-10-10"},{"lineNumber":38,"author":{"gitId":"josepholim"},"content":"        return title.toString();","lastModifiedDate":"2023-10-15"},{"lineNumber":39,"author":{"gitId":"josepholim"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":40,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":41,"author":{"gitId":"josepholim"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":42,"author":{"gitId":"josepholim"},"content":"     * Returns the content of the note.","lastModifiedDate":"2023-10-15"},{"lineNumber":43,"author":{"gitId":"josepholim"},"content":"     * @return The content of the note.","lastModifiedDate":"2023-10-15"},{"lineNumber":44,"author":{"gitId":"josepholim"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":45,"author":{"gitId":"josepholim"},"content":"    public String getContent() {","lastModifiedDate":"2023-10-15"},{"lineNumber":46,"author":{"gitId":"josepholim"},"content":"        return content.toString();","lastModifiedDate":"2023-10-15"},{"lineNumber":47,"author":{"gitId":"zekone"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":48,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":49,"author":{"gitId":"josepholim"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":50,"author":{"gitId":"josepholim"},"content":"     * Returns a string that can be used to represent this note on GUI.","lastModifiedDate":"2023-10-15"},{"lineNumber":51,"author":{"gitId":"josepholim"},"content":"     * @return The information in string.","lastModifiedDate":"2023-10-15"},{"lineNumber":52,"author":{"gitId":"josepholim"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":53,"author":{"gitId":"josepholim"},"content":"    public String getUiText() {","lastModifiedDate":"2023-10-15"},{"lineNumber":54,"author":{"gitId":"Nixx162"},"content":"        String result \u003d this.getTitle() + \"\\n\" + this.getContent();","lastModifiedDate":"2023-11-02"},{"lineNumber":55,"author":{"gitId":"josepholim"},"content":"        return result;","lastModifiedDate":"2023-10-15"},{"lineNumber":56,"author":{"gitId":"zekone"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":57,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":58,"author":{"gitId":"josepholim"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":59,"author":{"gitId":"josepholim"},"content":"     * Returns true if both notes have the same identity and data fields.","lastModifiedDate":"2023-10-16"},{"lineNumber":60,"author":{"gitId":"josepholim"},"content":"     * This defines a stronger notion of equality between two notes.","lastModifiedDate":"2023-10-16"},{"lineNumber":61,"author":{"gitId":"josepholim"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":62,"author":{"gitId":"josepholim"},"content":"    @Override","lastModifiedDate":"2023-10-16"},{"lineNumber":63,"author":{"gitId":"josepholim"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-16"},{"lineNumber":64,"author":{"gitId":"josepholim"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-16"},{"lineNumber":65,"author":{"gitId":"josepholim"},"content":"            return true;","lastModifiedDate":"2023-10-16"},{"lineNumber":66,"author":{"gitId":"josepholim"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":67,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":68,"author":{"gitId":"josepholim"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-16"},{"lineNumber":69,"author":{"gitId":"josepholim"},"content":"        if (!(other instanceof Note)) {","lastModifiedDate":"2023-10-16"},{"lineNumber":70,"author":{"gitId":"josepholim"},"content":"            return false;","lastModifiedDate":"2023-10-16"},{"lineNumber":71,"author":{"gitId":"josepholim"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":72,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":73,"author":{"gitId":"josepholim"},"content":"        Note otherNote \u003d (Note) other;","lastModifiedDate":"2023-10-16"},{"lineNumber":74,"author":{"gitId":"josepholim"},"content":"        return title.equals(otherNote.title)","lastModifiedDate":"2023-10-16"},{"lineNumber":75,"author":{"gitId":"josepholim"},"content":"                \u0026\u0026 content.equals(otherNote.content);","lastModifiedDate":"2023-10-16"},{"lineNumber":76,"author":{"gitId":"josepholim"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":77,"author":{"gitId":"zekone"},"content":"}","lastModifiedDate":"2023-10-10"}],"authorContributionMap":{"larrywang0701":4,"zekone":11,"josepholim":61,"Nixx162":1}},{"path":"src/main/java/seedu/address/model/note/NoteContent.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"josepholim"},"content":"package seedu.address.model.note;","lastModifiedDate":"2023-10-15"},{"lineNumber":2,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":3,"author":{"gitId":"josepholim"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-27"},{"lineNumber":4,"author":{"gitId":"josepholim"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-10-27"},{"lineNumber":5,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":6,"author":{"gitId":"josepholim"},"content":"/**","lastModifiedDate":"2023-10-15"},{"lineNumber":7,"author":{"gitId":"josepholim"},"content":" * Represents a Note\u0027s content.","lastModifiedDate":"2023-10-15"},{"lineNumber":8,"author":{"gitId":"josepholim"},"content":" */","lastModifiedDate":"2023-10-15"},{"lineNumber":9,"author":{"gitId":"josepholim"},"content":"public class NoteContent {","lastModifiedDate":"2023-10-15"},{"lineNumber":10,"author":{"gitId":"josepholim"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Note content should not be blank\";","lastModifiedDate":"2023-10-27"},{"lineNumber":11,"author":{"gitId":"josepholim"},"content":"    /*","lastModifiedDate":"2023-10-27"},{"lineNumber":12,"author":{"gitId":"josepholim"},"content":"     * The first character of the note content must not be a whitespace,","lastModifiedDate":"2023-10-27"},{"lineNumber":13,"author":{"gitId":"josepholim"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2023-10-27"},{"lineNumber":14,"author":{"gitId":"josepholim"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":15,"author":{"gitId":"josepholim"},"content":"    public static final String VALIDATION_REGEX \u003d \"[^\\\\s].*\";","lastModifiedDate":"2023-10-27"},{"lineNumber":16,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":17,"author":{"gitId":"josepholim"},"content":"    private final String content;","lastModifiedDate":"2023-10-15"},{"lineNumber":18,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":19,"author":{"gitId":"josepholim"},"content":"    private NoteContent(String content) {","lastModifiedDate":"2023-10-15"},{"lineNumber":20,"author":{"gitId":"josepholim"},"content":"        requireNonNull(content);","lastModifiedDate":"2023-10-27"},{"lineNumber":21,"author":{"gitId":"josepholim"},"content":"        checkArgument(isValidNoteContent(content), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-27"},{"lineNumber":22,"author":{"gitId":"josepholim"},"content":"        this.content \u003d content;","lastModifiedDate":"2023-10-15"},{"lineNumber":23,"author":{"gitId":"josepholim"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":24,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":25,"author":{"gitId":"josepholim"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":26,"author":{"gitId":"josepholim"},"content":"     * Constructs a NoteContent.","lastModifiedDate":"2023-10-15"},{"lineNumber":27,"author":{"gitId":"josepholim"},"content":"     * @param content The content of the note.","lastModifiedDate":"2023-10-15"},{"lineNumber":28,"author":{"gitId":"josepholim"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":29,"author":{"gitId":"josepholim"},"content":"    public static NoteContent fromString(String content) {","lastModifiedDate":"2023-10-15"},{"lineNumber":30,"author":{"gitId":"josepholim"},"content":"        return new NoteContent(content);","lastModifiedDate":"2023-10-15"},{"lineNumber":31,"author":{"gitId":"josepholim"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":32,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":33,"author":{"gitId":"josepholim"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":34,"author":{"gitId":"josepholim"},"content":"     * Returns true if a given string is a valid note content.","lastModifiedDate":"2023-10-27"},{"lineNumber":35,"author":{"gitId":"josepholim"},"content":"     * @param test The string to be tested.","lastModifiedDate":"2023-10-27"},{"lineNumber":36,"author":{"gitId":"josepholim"},"content":"     * @return A boolean indicating whether the string is valid.","lastModifiedDate":"2023-10-27"},{"lineNumber":37,"author":{"gitId":"josepholim"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":38,"author":{"gitId":"josepholim"},"content":"    public static boolean isValidNoteContent(String test) {","lastModifiedDate":"2023-10-27"},{"lineNumber":39,"author":{"gitId":"josepholim"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-10-27"},{"lineNumber":40,"author":{"gitId":"josepholim"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":41,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":42,"author":{"gitId":"josepholim"},"content":"    @Override","lastModifiedDate":"2023-10-16"},{"lineNumber":43,"author":{"gitId":"josepholim"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-16"},{"lineNumber":44,"author":{"gitId":"josepholim"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-16"},{"lineNumber":45,"author":{"gitId":"josepholim"},"content":"            return true;","lastModifiedDate":"2023-10-16"},{"lineNumber":46,"author":{"gitId":"josepholim"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":47,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":48,"author":{"gitId":"josepholim"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-16"},{"lineNumber":49,"author":{"gitId":"josepholim"},"content":"        if (!(other instanceof NoteContent)) {","lastModifiedDate":"2023-10-16"},{"lineNumber":50,"author":{"gitId":"josepholim"},"content":"            return false;","lastModifiedDate":"2023-10-16"},{"lineNumber":51,"author":{"gitId":"josepholim"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":52,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":53,"author":{"gitId":"josepholim"},"content":"        NoteContent otherNoteContent \u003d (NoteContent) other;","lastModifiedDate":"2023-10-16"},{"lineNumber":54,"author":{"gitId":"josepholim"},"content":"        return content.equals(otherNoteContent.content);","lastModifiedDate":"2023-10-16"},{"lineNumber":55,"author":{"gitId":"josepholim"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":56,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":57,"author":{"gitId":"josepholim"},"content":"    @Override","lastModifiedDate":"2023-10-15"},{"lineNumber":58,"author":{"gitId":"josepholim"},"content":"    public String toString() {","lastModifiedDate":"2023-10-15"},{"lineNumber":59,"author":{"gitId":"josepholim"},"content":"        return this.content;","lastModifiedDate":"2023-10-15"},{"lineNumber":60,"author":{"gitId":"josepholim"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":61,"author":{"gitId":"josepholim"},"content":"}","lastModifiedDate":"2023-10-15"}],"authorContributionMap":{"josepholim":61}},{"path":"src/main/java/seedu/address/model/note/NoteID.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"josepholim"},"content":"package seedu.address.model.note;","lastModifiedDate":"2023-10-27"},{"lineNumber":2,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":3,"author":{"gitId":"josepholim"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-27"},{"lineNumber":4,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":5,"author":{"gitId":"josepholim"},"content":"/**","lastModifiedDate":"2023-10-27"},{"lineNumber":6,"author":{"gitId":"josepholim"},"content":" * Represents the note id for DeleteEventCommand","lastModifiedDate":"2023-10-27"},{"lineNumber":7,"author":{"gitId":"josepholim"},"content":" */","lastModifiedDate":"2023-10-27"},{"lineNumber":8,"author":{"gitId":"josepholim"},"content":"public class NoteID {","lastModifiedDate":"2023-10-27"},{"lineNumber":9,"author":{"gitId":"josepholim"},"content":"    public static final String MESSAGE_NON_EMPTY \u003d \"Note ID should not be blank\";","lastModifiedDate":"2023-10-27"},{"lineNumber":10,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":11,"author":{"gitId":"josepholim"},"content":"    private final int id;","lastModifiedDate":"2023-10-27"},{"lineNumber":12,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":13,"author":{"gitId":"josepholim"},"content":"    private NoteID(String id) {","lastModifiedDate":"2023-10-27"},{"lineNumber":14,"author":{"gitId":"josepholim"},"content":"        requireNonNull(id);","lastModifiedDate":"2023-10-27"},{"lineNumber":15,"author":{"gitId":"josepholim"},"content":"        this.id \u003d Integer.parseInt(id);","lastModifiedDate":"2023-10-27"},{"lineNumber":16,"author":{"gitId":"josepholim"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":17,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":18,"author":{"gitId":"josepholim"},"content":"    private NoteID(int id) {","lastModifiedDate":"2023-10-27"},{"lineNumber":19,"author":{"gitId":"josepholim"},"content":"        requireNonNull(id);","lastModifiedDate":"2023-10-27"},{"lineNumber":20,"author":{"gitId":"josepholim"},"content":"        this.id \u003d id;","lastModifiedDate":"2023-10-27"},{"lineNumber":21,"author":{"gitId":"josepholim"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":22,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":23,"author":{"gitId":"josepholim"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":24,"author":{"gitId":"josepholim"},"content":"     * Gets the numerical id","lastModifiedDate":"2023-10-27"},{"lineNumber":25,"author":{"gitId":"josepholim"},"content":"     * @return The numerical id","lastModifiedDate":"2023-10-27"},{"lineNumber":26,"author":{"gitId":"josepholim"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":27,"author":{"gitId":"josepholim"},"content":"    public int getId() {","lastModifiedDate":"2023-10-27"},{"lineNumber":28,"author":{"gitId":"josepholim"},"content":"        return this.id;","lastModifiedDate":"2023-10-27"},{"lineNumber":29,"author":{"gitId":"josepholim"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":30,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":31,"author":{"gitId":"josepholim"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":32,"author":{"gitId":"josepholim"},"content":"     * Constructs an {@code NoteID} object from {@code String}","lastModifiedDate":"2023-10-27"},{"lineNumber":33,"author":{"gitId":"josepholim"},"content":"     * @param id The id in {@code String}","lastModifiedDate":"2023-10-27"},{"lineNumber":34,"author":{"gitId":"josepholim"},"content":"     * @return The {@code NoteID} object","lastModifiedDate":"2023-10-27"},{"lineNumber":35,"author":{"gitId":"josepholim"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":36,"author":{"gitId":"josepholim"},"content":"    public static NoteID fromString(String id) {","lastModifiedDate":"2023-10-27"},{"lineNumber":37,"author":{"gitId":"josepholim"},"content":"        return new NoteID(id);","lastModifiedDate":"2023-10-27"},{"lineNumber":38,"author":{"gitId":"josepholim"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":39,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":40,"author":{"gitId":"josepholim"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":41,"author":{"gitId":"josepholim"},"content":"     * Constructs an {@code NoteID} object from {@code int}","lastModifiedDate":"2023-10-27"},{"lineNumber":42,"author":{"gitId":"josepholim"},"content":"     * @param id The id in {@code int}","lastModifiedDate":"2023-10-27"},{"lineNumber":43,"author":{"gitId":"josepholim"},"content":"     * @return The {@code NoteID} object","lastModifiedDate":"2023-10-27"},{"lineNumber":44,"author":{"gitId":"josepholim"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":45,"author":{"gitId":"josepholim"},"content":"    public static NoteID fromInt(int id) {","lastModifiedDate":"2023-10-27"},{"lineNumber":46,"author":{"gitId":"josepholim"},"content":"        return new NoteID(id);","lastModifiedDate":"2023-10-27"},{"lineNumber":47,"author":{"gitId":"josepholim"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":48,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":49,"author":{"gitId":"josepholim"},"content":"    @Override","lastModifiedDate":"2023-10-27"},{"lineNumber":50,"author":{"gitId":"josepholim"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-27"},{"lineNumber":51,"author":{"gitId":"josepholim"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-27"},{"lineNumber":52,"author":{"gitId":"josepholim"},"content":"            return true;","lastModifiedDate":"2023-10-27"},{"lineNumber":53,"author":{"gitId":"josepholim"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":54,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":55,"author":{"gitId":"josepholim"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-27"},{"lineNumber":56,"author":{"gitId":"josepholim"},"content":"        if (!(other instanceof NoteID)) {","lastModifiedDate":"2023-10-27"},{"lineNumber":57,"author":{"gitId":"josepholim"},"content":"            return false;","lastModifiedDate":"2023-10-27"},{"lineNumber":58,"author":{"gitId":"josepholim"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":59,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":60,"author":{"gitId":"josepholim"},"content":"        NoteID otherNoteID \u003d (NoteID) other;","lastModifiedDate":"2023-10-27"},{"lineNumber":61,"author":{"gitId":"josepholim"},"content":"        return id \u003d\u003d otherNoteID.id;","lastModifiedDate":"2023-10-27"},{"lineNumber":62,"author":{"gitId":"josepholim"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":63,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":64,"author":{"gitId":"josepholim"},"content":"    @Override","lastModifiedDate":"2023-10-27"},{"lineNumber":65,"author":{"gitId":"josepholim"},"content":"    public String toString() {","lastModifiedDate":"2023-10-27"},{"lineNumber":66,"author":{"gitId":"josepholim"},"content":"        return String.valueOf(this.id);","lastModifiedDate":"2023-10-27"},{"lineNumber":67,"author":{"gitId":"josepholim"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":68,"author":{"gitId":"josepholim"},"content":"}","lastModifiedDate":"2023-10-27"}],"authorContributionMap":{"josepholim":68}},{"path":"src/main/java/seedu/address/model/note/NoteTitle.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"josepholim"},"content":"package seedu.address.model.note;","lastModifiedDate":"2023-10-15"},{"lineNumber":2,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":3,"author":{"gitId":"josepholim"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-27"},{"lineNumber":4,"author":{"gitId":"josepholim"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-10-27"},{"lineNumber":5,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":6,"author":{"gitId":"josepholim"},"content":"/**","lastModifiedDate":"2023-10-15"},{"lineNumber":7,"author":{"gitId":"josepholim"},"content":" * Represents a Note\u0027s title.","lastModifiedDate":"2023-10-15"},{"lineNumber":8,"author":{"gitId":"josepholim"},"content":" */","lastModifiedDate":"2023-10-15"},{"lineNumber":9,"author":{"gitId":"josepholim"},"content":"public class NoteTitle {","lastModifiedDate":"2023-10-15"},{"lineNumber":10,"author":{"gitId":"josepholim"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Note title should not be blank\";","lastModifiedDate":"2023-10-27"},{"lineNumber":11,"author":{"gitId":"josepholim"},"content":"    /*","lastModifiedDate":"2023-10-27"},{"lineNumber":12,"author":{"gitId":"josepholim"},"content":"     * The first character of the note title must not be a whitespace,","lastModifiedDate":"2023-10-27"},{"lineNumber":13,"author":{"gitId":"josepholim"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2023-10-27"},{"lineNumber":14,"author":{"gitId":"josepholim"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":15,"author":{"gitId":"josepholim"},"content":"    public static final String VALIDATION_REGEX \u003d \"[^\\\\s].*\";","lastModifiedDate":"2023-10-27"},{"lineNumber":16,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":17,"author":{"gitId":"josepholim"},"content":"    private final String title;","lastModifiedDate":"2023-10-15"},{"lineNumber":18,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":19,"author":{"gitId":"josepholim"},"content":"    private NoteTitle(String title) {","lastModifiedDate":"2023-10-15"},{"lineNumber":20,"author":{"gitId":"josepholim"},"content":"        requireNonNull(title);","lastModifiedDate":"2023-10-27"},{"lineNumber":21,"author":{"gitId":"josepholim"},"content":"        checkArgument(isValidNoteTitle(title), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-27"},{"lineNumber":22,"author":{"gitId":"josepholim"},"content":"        this.title \u003d title;","lastModifiedDate":"2023-10-15"},{"lineNumber":23,"author":{"gitId":"josepholim"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":24,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":25,"author":{"gitId":"josepholim"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":26,"author":{"gitId":"josepholim"},"content":"     * Constructs a NoteTitle.","lastModifiedDate":"2023-10-15"},{"lineNumber":27,"author":{"gitId":"josepholim"},"content":"     * @param title The title of the note.","lastModifiedDate":"2023-10-15"},{"lineNumber":28,"author":{"gitId":"josepholim"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":29,"author":{"gitId":"josepholim"},"content":"    public static NoteTitle fromString(String title) {","lastModifiedDate":"2023-10-15"},{"lineNumber":30,"author":{"gitId":"josepholim"},"content":"        return new NoteTitle(title);","lastModifiedDate":"2023-10-15"},{"lineNumber":31,"author":{"gitId":"josepholim"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":32,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":33,"author":{"gitId":"josepholim"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":34,"author":{"gitId":"josepholim"},"content":"     * Returns true if a given string is a valid note title.","lastModifiedDate":"2023-10-27"},{"lineNumber":35,"author":{"gitId":"josepholim"},"content":"     * @param test The string to be tested.","lastModifiedDate":"2023-10-27"},{"lineNumber":36,"author":{"gitId":"josepholim"},"content":"     * @return A boolean indicating whether the string is valid.","lastModifiedDate":"2023-10-27"},{"lineNumber":37,"author":{"gitId":"josepholim"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":38,"author":{"gitId":"josepholim"},"content":"    public static boolean isValidNoteTitle(String test) {","lastModifiedDate":"2023-10-27"},{"lineNumber":39,"author":{"gitId":"josepholim"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-10-27"},{"lineNumber":40,"author":{"gitId":"josepholim"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":41,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":42,"author":{"gitId":"josepholim"},"content":"    @Override","lastModifiedDate":"2023-10-16"},{"lineNumber":43,"author":{"gitId":"josepholim"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-16"},{"lineNumber":44,"author":{"gitId":"josepholim"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-16"},{"lineNumber":45,"author":{"gitId":"josepholim"},"content":"            return true;","lastModifiedDate":"2023-10-16"},{"lineNumber":46,"author":{"gitId":"josepholim"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":47,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":48,"author":{"gitId":"josepholim"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-16"},{"lineNumber":49,"author":{"gitId":"josepholim"},"content":"        if (!(other instanceof NoteTitle)) {","lastModifiedDate":"2023-10-16"},{"lineNumber":50,"author":{"gitId":"josepholim"},"content":"            return false;","lastModifiedDate":"2023-10-16"},{"lineNumber":51,"author":{"gitId":"josepholim"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":52,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":53,"author":{"gitId":"josepholim"},"content":"        NoteTitle otherNoteTitle \u003d (NoteTitle) other;","lastModifiedDate":"2023-10-16"},{"lineNumber":54,"author":{"gitId":"josepholim"},"content":"        return title.equals(otherNoteTitle.title);","lastModifiedDate":"2023-10-16"},{"lineNumber":55,"author":{"gitId":"josepholim"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":56,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":57,"author":{"gitId":"josepholim"},"content":"    @Override","lastModifiedDate":"2023-10-15"},{"lineNumber":58,"author":{"gitId":"josepholim"},"content":"    public String toString() {","lastModifiedDate":"2023-10-15"},{"lineNumber":59,"author":{"gitId":"josepholim"},"content":"        return this.title;","lastModifiedDate":"2023-10-15"},{"lineNumber":60,"author":{"gitId":"josepholim"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":61,"author":{"gitId":"josepholim"},"content":"}","lastModifiedDate":"2023-10-15"}],"authorContributionMap":{"josepholim":61}},{"path":"src/main/java/seedu/address/model/person/ContactID.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"larrywang0701"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-10-25"},{"lineNumber":2,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":3,"author":{"gitId":"larrywang0701"},"content":"/**","lastModifiedDate":"2023-10-25"},{"lineNumber":4,"author":{"gitId":"larrywang0701"},"content":" * The class for holding the event id for various commands","lastModifiedDate":"2023-10-25"},{"lineNumber":5,"author":{"gitId":"larrywang0701"},"content":" */","lastModifiedDate":"2023-10-25"},{"lineNumber":6,"author":{"gitId":"larrywang0701"},"content":"public class ContactID {","lastModifiedDate":"2023-10-25"},{"lineNumber":7,"author":{"gitId":"larrywang0701"},"content":"    public static final String MESSAGE_NON_EMPTY \u003d \"Contact ID can not be empty!\";","lastModifiedDate":"2023-10-25"},{"lineNumber":8,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":9,"author":{"gitId":"larrywang0701"},"content":"    private final int id;","lastModifiedDate":"2023-10-25"},{"lineNumber":10,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":11,"author":{"gitId":"larrywang0701"},"content":"    private ContactID(String id) {","lastModifiedDate":"2023-10-25"},{"lineNumber":12,"author":{"gitId":"larrywang0701"},"content":"        this.id \u003d Integer.parseInt(id);","lastModifiedDate":"2023-10-25"},{"lineNumber":13,"author":{"gitId":"larrywang0701"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":14,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":15,"author":{"gitId":"larrywang0701"},"content":"    private ContactID(int id) {","lastModifiedDate":"2023-10-25"},{"lineNumber":16,"author":{"gitId":"larrywang0701"},"content":"        this.id \u003d id;","lastModifiedDate":"2023-10-25"},{"lineNumber":17,"author":{"gitId":"larrywang0701"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":18,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":19,"author":{"gitId":"larrywang0701"},"content":"    public int getId() {","lastModifiedDate":"2023-10-25"},{"lineNumber":20,"author":{"gitId":"larrywang0701"},"content":"        return this.id;","lastModifiedDate":"2023-10-25"},{"lineNumber":21,"author":{"gitId":"larrywang0701"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":22,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":23,"author":{"gitId":"larrywang0701"},"content":"    /**","lastModifiedDate":"2023-10-25"},{"lineNumber":24,"author":{"gitId":"larrywang0701"},"content":"     * Construct an {@code ContactID} object from {@code String}","lastModifiedDate":"2023-10-25"},{"lineNumber":25,"author":{"gitId":"larrywang0701"},"content":"     * @param id The id in {@code String}","lastModifiedDate":"2023-10-25"},{"lineNumber":26,"author":{"gitId":"larrywang0701"},"content":"     * @return The {@code ContactID} object","lastModifiedDate":"2023-10-25"},{"lineNumber":27,"author":{"gitId":"larrywang0701"},"content":"     */","lastModifiedDate":"2023-10-25"},{"lineNumber":28,"author":{"gitId":"larrywang0701"},"content":"    public static ContactID fromString(String id) {","lastModifiedDate":"2023-10-25"},{"lineNumber":29,"author":{"gitId":"larrywang0701"},"content":"        return new ContactID(id);","lastModifiedDate":"2023-10-25"},{"lineNumber":30,"author":{"gitId":"larrywang0701"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":31,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":32,"author":{"gitId":"larrywang0701"},"content":"    /**","lastModifiedDate":"2023-10-25"},{"lineNumber":33,"author":{"gitId":"larrywang0701"},"content":"     * Construct an {@code ContactID} object from {@code int}","lastModifiedDate":"2023-10-25"},{"lineNumber":34,"author":{"gitId":"larrywang0701"},"content":"     * @param id The id in {@code int}","lastModifiedDate":"2023-10-25"},{"lineNumber":35,"author":{"gitId":"larrywang0701"},"content":"     * @return The {@code ContactID} object","lastModifiedDate":"2023-10-25"},{"lineNumber":36,"author":{"gitId":"larrywang0701"},"content":"     */","lastModifiedDate":"2023-10-25"},{"lineNumber":37,"author":{"gitId":"larrywang0701"},"content":"    public static ContactID fromInt(int id) {","lastModifiedDate":"2023-10-25"},{"lineNumber":38,"author":{"gitId":"larrywang0701"},"content":"        return new ContactID(id);","lastModifiedDate":"2023-10-25"},{"lineNumber":39,"author":{"gitId":"larrywang0701"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":40,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":41,"author":{"gitId":"larrywang0701"},"content":"    @Override","lastModifiedDate":"2023-10-25"},{"lineNumber":42,"author":{"gitId":"larrywang0701"},"content":"    public String toString() {","lastModifiedDate":"2023-10-25"},{"lineNumber":43,"author":{"gitId":"larrywang0701"},"content":"        return String.valueOf(this.id);","lastModifiedDate":"2023-10-25"},{"lineNumber":44,"author":{"gitId":"larrywang0701"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":45,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":46,"author":{"gitId":"josepholim"},"content":"    @Override","lastModifiedDate":"2023-10-27"},{"lineNumber":47,"author":{"gitId":"josepholim"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-27"},{"lineNumber":48,"author":{"gitId":"josepholim"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-27"},{"lineNumber":49,"author":{"gitId":"josepholim"},"content":"            return true;","lastModifiedDate":"2023-10-27"},{"lineNumber":50,"author":{"gitId":"josepholim"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":51,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":52,"author":{"gitId":"josepholim"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-27"},{"lineNumber":53,"author":{"gitId":"josepholim"},"content":"        if (!(other instanceof ContactID)) {","lastModifiedDate":"2023-10-27"},{"lineNumber":54,"author":{"gitId":"josepholim"},"content":"            return false;","lastModifiedDate":"2023-10-27"},{"lineNumber":55,"author":{"gitId":"josepholim"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":56,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":57,"author":{"gitId":"josepholim"},"content":"        ContactID otherContactID \u003d (ContactID) other;","lastModifiedDate":"2023-10-27"},{"lineNumber":58,"author":{"gitId":"josepholim"},"content":"        return id \u003d\u003d otherContactID.id;","lastModifiedDate":"2023-10-27"},{"lineNumber":59,"author":{"gitId":"josepholim"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":60,"author":{"gitId":"larrywang0701"},"content":"}","lastModifiedDate":"2023-10-25"}],"authorContributionMap":{"larrywang0701":45,"josepholim":15}},{"path":"src/main/java/seedu/address/model/person/Person.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-03-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-03-26"},{"lineNumber":7,"author":{"gitId":"zekone"},"content":"import java.util.List;","lastModifiedDate":"2023-10-10"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"larrywang0701"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"larrywang0701"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":14,"author":{"gitId":"zekone"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2023-10-10"},{"lineNumber":15,"author":{"gitId":"larrywang0701"},"content":"import seedu.address.model.event.EventID;","lastModifiedDate":"2023-10-25"},{"lineNumber":16,"author":{"gitId":"larrywang0701"},"content":"import seedu.address.model.event.exceptions.EventNotFoundException;","lastModifiedDate":"2023-11-01"},{"lineNumber":17,"author":{"gitId":"zekone"},"content":"import seedu.address.model.note.Note;","lastModifiedDate":"2023-10-10"},{"lineNumber":18,"author":{"gitId":"josepholim"},"content":"import seedu.address.model.note.NoteID;","lastModifiedDate":"2023-10-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Represents a Person in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"zekone"},"content":" * Guarantees: details are present and not null, field values are validated,","lastModifiedDate":"2023-10-10"},{"lineNumber":24,"author":{"gitId":"zekone"},"content":" * immutable.","lastModifiedDate":"2023-10-10"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class Person {","lastModifiedDate":"2018-01-10"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    // Data fields","lastModifiedDate":"2018-04-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private final Address address;","lastModifiedDate":"2018-04-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":36,"author":{"gitId":"josepholim"},"content":"    private final ObservableList\u003cNote\u003e notes \u003d FXCollections.observableArrayList();","lastModifiedDate":"2023-10-15"},{"lineNumber":37,"author":{"gitId":"larrywang0701"},"content":"    private final ObservableList\u003cEvent\u003e events \u003d FXCollections.observableArrayList();","lastModifiedDate":"2023-10-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"zekone"},"content":"    public Person(Name name, Phone phone, Email email, Address address, Set\u003cTag\u003e tags, List\u003cNote\u003e notes,","lastModifiedDate":"2023-10-10"},{"lineNumber":43,"author":{"gitId":"zekone"},"content":"            List\u003cEvent\u003e events) {","lastModifiedDate":"2023-10-10"},{"lineNumber":44,"author":{"gitId":"zekone"},"content":"        requireAllNonNull(name, phone, email, address, tags, notes, events);","lastModifiedDate":"2023-10-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2017-12-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2017-12-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2017-12-20"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":50,"author":{"gitId":"zekone"},"content":"        this.notes.addAll(notes);","lastModifiedDate":"2023-10-10"},{"lineNumber":51,"author":{"gitId":"zekone"},"content":"        this.events.addAll(events);","lastModifiedDate":"2023-10-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public Name getName() {","lastModifiedDate":"2017-07-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2017-12-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public Phone getPhone() {","lastModifiedDate":"2017-07-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public Email getEmail() {","lastModifiedDate":"2017-07-12"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return email;","lastModifiedDate":"2017-12-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public Address getAddress() {","lastModifiedDate":"2017-07-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return address;","lastModifiedDate":"2017-12-20"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-12"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-07"},{"lineNumber":71,"author":{"gitId":"zekone"},"content":"     * Returns an immutable tag set, which throws","lastModifiedDate":"2023-10-10"},{"lineNumber":72,"author":{"gitId":"zekone"},"content":"     * {@code UnsupportedOperationException}","lastModifiedDate":"2023-10-10"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * if modification is attempted.","lastModifiedDate":"2017-03-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-11-02"},{"lineNumber":80,"author":{"gitId":"AndrewJanong"},"content":"     * Checks whether the person contains a certain tag.","lastModifiedDate":"2023-11-02"},{"lineNumber":81,"author":{"gitId":"AndrewJanong"},"content":"     *","lastModifiedDate":"2023-11-02"},{"lineNumber":82,"author":{"gitId":"AndrewJanong"},"content":"     * @param tag the tag to be checked.","lastModifiedDate":"2023-11-02"},{"lineNumber":83,"author":{"gitId":"AndrewJanong"},"content":"     * @return A boolean representing contains or doesn\u0027t contain the tag.","lastModifiedDate":"2023-11-02"},{"lineNumber":84,"author":{"gitId":"AndrewJanong"},"content":"     */","lastModifiedDate":"2023-11-02"},{"lineNumber":85,"author":{"gitId":"AndrewJanong"},"content":"    public boolean containsTag(Tag tag) {","lastModifiedDate":"2023-11-02"},{"lineNumber":86,"author":{"gitId":"AndrewJanong"},"content":"        return tags.contains(tag);","lastModifiedDate":"2023-11-02"},{"lineNumber":87,"author":{"gitId":"AndrewJanong"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":88,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":89,"author":{"gitId":"zekone"},"content":"    /**","lastModifiedDate":"2023-10-10"},{"lineNumber":90,"author":{"gitId":"zekone"},"content":"     * Returns an immutable notes, which throws","lastModifiedDate":"2023-10-10"},{"lineNumber":91,"author":{"gitId":"zekone"},"content":"     * {@code UnsupportedOperationException}","lastModifiedDate":"2023-10-10"},{"lineNumber":92,"author":{"gitId":"zekone"},"content":"     * if modification is attempted.","lastModifiedDate":"2023-10-10"},{"lineNumber":93,"author":{"gitId":"zekone"},"content":"     */","lastModifiedDate":"2023-10-10"},{"lineNumber":94,"author":{"gitId":"josepholim"},"content":"    public ObservableList\u003cNote\u003e getNotes() {","lastModifiedDate":"2023-10-15"},{"lineNumber":95,"author":{"gitId":"josepholim"},"content":"        return FXCollections.unmodifiableObservableList(notes);","lastModifiedDate":"2023-10-15"},{"lineNumber":96,"author":{"gitId":"zekone"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":97,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":98,"author":{"gitId":"zekone"},"content":"    /**","lastModifiedDate":"2023-10-10"},{"lineNumber":99,"author":{"gitId":"zekone"},"content":"     * Returns an immutable events, which throws","lastModifiedDate":"2023-10-10"},{"lineNumber":100,"author":{"gitId":"zekone"},"content":"     * {@code UnsupportedOperationException}","lastModifiedDate":"2023-10-10"},{"lineNumber":101,"author":{"gitId":"zekone"},"content":"     * if modification is attempted.","lastModifiedDate":"2023-10-10"},{"lineNumber":102,"author":{"gitId":"zekone"},"content":"     */","lastModifiedDate":"2023-10-10"},{"lineNumber":103,"author":{"gitId":"larrywang0701"},"content":"    public ObservableList\u003cEvent\u003e getEvents() {","lastModifiedDate":"2023-10-13"},{"lineNumber":104,"author":{"gitId":"larrywang0701"},"content":"        return FXCollections.unmodifiableObservableList(events);","lastModifiedDate":"2023-10-13"},{"lineNumber":105,"author":{"gitId":"zekone"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":106,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":107,"author":{"gitId":"josepholim"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":108,"author":{"gitId":"josepholim"},"content":"     * Adds a note to this person","lastModifiedDate":"2023-10-15"},{"lineNumber":109,"author":{"gitId":"zekone"},"content":"     *","lastModifiedDate":"2023-10-27"},{"lineNumber":110,"author":{"gitId":"josepholim"},"content":"     * @param note The note to be added.","lastModifiedDate":"2023-10-15"},{"lineNumber":111,"author":{"gitId":"josepholim"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":112,"author":{"gitId":"josepholim"},"content":"    public void addNote(Note note) {","lastModifiedDate":"2023-10-15"},{"lineNumber":113,"author":{"gitId":"josepholim"},"content":"        this.notes.add(note);","lastModifiedDate":"2023-10-15"},{"lineNumber":114,"author":{"gitId":"josepholim"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":115,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":116,"author":{"gitId":"zekone"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":117,"author":{"gitId":"zekone"},"content":"     * Adds a set of {@code Tag} to this person","lastModifiedDate":"2023-10-27"},{"lineNumber":118,"author":{"gitId":"zekone"},"content":"     *","lastModifiedDate":"2023-10-27"},{"lineNumber":119,"author":{"gitId":"zekone"},"content":"     * @param tags The tags to be added.","lastModifiedDate":"2023-10-27"},{"lineNumber":120,"author":{"gitId":"zekone"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":121,"author":{"gitId":"zekone"},"content":"    public void addTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2023-10-27"},{"lineNumber":122,"author":{"gitId":"zekone"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2023-10-27"},{"lineNumber":123,"author":{"gitId":"zekone"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":124,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":125,"author":{"gitId":"josepholim"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":126,"author":{"gitId":"zekone"},"content":"     * Removes a set of {@code Tag} from this person","lastModifiedDate":"2023-10-27"},{"lineNumber":127,"author":{"gitId":"zekone"},"content":"     *","lastModifiedDate":"2023-10-27"},{"lineNumber":128,"author":{"gitId":"zekone"},"content":"     * @param tags The tags to be removed.","lastModifiedDate":"2023-10-27"},{"lineNumber":129,"author":{"gitId":"zekone"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":130,"author":{"gitId":"zekone"},"content":"    public void removeTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2023-10-27"},{"lineNumber":131,"author":{"gitId":"zekone"},"content":"        tags.forEach(tag -\u003e this.tags.remove(tag));","lastModifiedDate":"2023-10-27"},{"lineNumber":132,"author":{"gitId":"zekone"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":133,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":134,"author":{"gitId":"zekone"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":135,"author":{"gitId":"zekone"},"content":"     * Removes a note by its user-friendly id","lastModifiedDate":"2023-10-27"},{"lineNumber":136,"author":{"gitId":"zekone"},"content":"     *","lastModifiedDate":"2023-10-27"},{"lineNumber":137,"author":{"gitId":"josepholim"},"content":"     * @param id The id of the note you want to remove","lastModifiedDate":"2023-10-15"},{"lineNumber":138,"author":{"gitId":"josepholim"},"content":"     * @return The note object that is just deleted if the operation is successful","lastModifiedDate":"2023-10-27"},{"lineNumber":139,"author":{"gitId":"josepholim"},"content":"     *         or {@code null} if the note with this name does not exist","lastModifiedDate":"2023-10-27"},{"lineNumber":140,"author":{"gitId":"josepholim"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":141,"author":{"gitId":"josepholim"},"content":"    public Note removeNoteByUserFriendlyId(NoteID id) {","lastModifiedDate":"2023-10-27"},{"lineNumber":142,"author":{"gitId":"josepholim"},"content":"        return this.removeNoteByIndex(id.getId() - 1);","lastModifiedDate":"2023-10-27"},{"lineNumber":143,"author":{"gitId":"josepholim"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":144,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":145,"author":{"gitId":"josepholim"},"content":"    private Note removeNoteByIndex(int index) {","lastModifiedDate":"2023-10-27"},{"lineNumber":146,"author":{"gitId":"josepholim"},"content":"        if (index \u003c 0 || index \u003e\u003d this.notes.size()) {","lastModifiedDate":"2023-10-15"},{"lineNumber":147,"author":{"gitId":"josepholim"},"content":"            return null;","lastModifiedDate":"2023-10-27"},{"lineNumber":148,"author":{"gitId":"josepholim"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":149,"author":{"gitId":"josepholim"},"content":"        return this.notes.remove(index);","lastModifiedDate":"2023-10-27"},{"lineNumber":150,"author":{"gitId":"josepholim"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":151,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":152,"author":{"gitId":"josepholim"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":153,"author":{"gitId":"josepholim"},"content":"     * Adds an event to this person.","lastModifiedDate":"2023-10-15"},{"lineNumber":154,"author":{"gitId":"zekone"},"content":"     *","lastModifiedDate":"2023-10-27"},{"lineNumber":155,"author":{"gitId":"josepholim"},"content":"     * @param event The event to be added.","lastModifiedDate":"2023-10-15"},{"lineNumber":156,"author":{"gitId":"josepholim"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":157,"author":{"gitId":"josepholim"},"content":"    public void addEvent(Event event) {","lastModifiedDate":"2023-10-15"},{"lineNumber":158,"author":{"gitId":"josepholim"},"content":"        this.events.add(event);","lastModifiedDate":"2023-10-15"},{"lineNumber":159,"author":{"gitId":"josepholim"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":160,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":161,"author":{"gitId":"larrywang0701"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":162,"author":{"gitId":"zekone"},"content":"     * Removes an event by its user-friendly id","lastModifiedDate":"2023-10-27"},{"lineNumber":163,"author":{"gitId":"zekone"},"content":"     *","lastModifiedDate":"2023-10-27"},{"lineNumber":164,"author":{"gitId":"larrywang0701"},"content":"     * @param id The id of the event you want to remove","lastModifiedDate":"2023-10-12"},{"lineNumber":165,"author":{"gitId":"larrywang0701"},"content":"     * @return The event object that is just deleted if the operation is successful","lastModifiedDate":"2023-10-25"},{"lineNumber":166,"author":{"gitId":"larrywang0701"},"content":"     *         or {@code null} if the event with this name does not exist","lastModifiedDate":"2023-10-25"},{"lineNumber":167,"author":{"gitId":"larrywang0701"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":168,"author":{"gitId":"larrywang0701"},"content":"    public Event removeEventByUserFriendlyId(EventID id) {","lastModifiedDate":"2023-10-25"},{"lineNumber":169,"author":{"gitId":"larrywang0701"},"content":"        return this.removeEventByIndex(id.getId() - 1);","lastModifiedDate":"2023-10-25"},{"lineNumber":170,"author":{"gitId":"larrywang0701"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":171,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":172,"author":{"gitId":"larrywang0701"},"content":"    private Event removeEventByIndex(int index) {","lastModifiedDate":"2023-10-25"},{"lineNumber":173,"author":{"gitId":"larrywang0701"},"content":"        if (index \u003c 0 || index \u003e\u003d this.events.size()) {","lastModifiedDate":"2023-10-12"},{"lineNumber":174,"author":{"gitId":"larrywang0701"},"content":"            throw new EventNotFoundException();","lastModifiedDate":"2023-11-01"},{"lineNumber":175,"author":{"gitId":"larrywang0701"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":176,"author":{"gitId":"larrywang0701"},"content":"        return this.events.remove(index);","lastModifiedDate":"2023-10-25"},{"lineNumber":177,"author":{"gitId":"larrywang0701"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":178,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":180,"author":{"gitId":"josepholim"},"content":"     * Returns true if both persons have the same identity and data fields.","lastModifiedDate":"2023-11-02"},{"lineNumber":181,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    public boolean isSamePerson(Person otherPerson) {","lastModifiedDate":"2018-04-19"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        if (otherPerson \u003d\u003d this) {","lastModifiedDate":"2018-04-19"},{"lineNumber":184,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":187,"author":{"gitId":"josepholim"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-11-02"},{"lineNumber":188,"author":{"gitId":"josepholim"},"content":"        if (!(otherPerson instanceof Person)) {","lastModifiedDate":"2023-11-02"},{"lineNumber":189,"author":{"gitId":"josepholim"},"content":"            return false;","lastModifiedDate":"2023-11-02"},{"lineNumber":190,"author":{"gitId":"josepholim"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":191,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":192,"author":{"gitId":"AndrewJanong"},"content":"        // Checks everything except tags","lastModifiedDate":"2023-11-09"},{"lineNumber":193,"author":{"gitId":"josepholim"},"content":"        return name.equals(otherPerson.name)","lastModifiedDate":"2023-11-02"},{"lineNumber":194,"author":{"gitId":"josepholim"},"content":"                \u0026\u0026 phone.equals(otherPerson.phone)","lastModifiedDate":"2023-11-02"},{"lineNumber":195,"author":{"gitId":"josepholim"},"content":"                \u0026\u0026 email.equals(otherPerson.email)","lastModifiedDate":"2023-11-02"},{"lineNumber":196,"author":{"gitId":"AndrewJanong"},"content":"                \u0026\u0026 address.equals(otherPerson.address);","lastModifiedDate":"2023-11-09"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":200,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same identity and data fields.","lastModifiedDate":"2018-04-19"},{"lineNumber":201,"author":{"gitId":"-"},"content":"     * This defines a stronger notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":202,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10"},{"lineNumber":206,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        if (!(other instanceof Person)) {","lastModifiedDate":"2018-01-10"},{"lineNumber":211,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        Person otherPerson \u003d (Person) other;","lastModifiedDate":"2018-01-10"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        return name.equals(otherPerson.name)","lastModifiedDate":"2023-07-13"},{"lineNumber":216,"author":{"gitId":"-"},"content":"                \u0026\u0026 phone.equals(otherPerson.phone)","lastModifiedDate":"2023-07-13"},{"lineNumber":217,"author":{"gitId":"-"},"content":"                \u0026\u0026 email.equals(otherPerson.email)","lastModifiedDate":"2023-07-13"},{"lineNumber":218,"author":{"gitId":"AndrewJanong"},"content":"                \u0026\u0026 address.equals(otherPerson.address);","lastModifiedDate":"2023-11-09"},{"lineNumber":219,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":223,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2016-08-24"},{"lineNumber":224,"author":{"gitId":"-"},"content":"        return Objects.hash(name, phone, email, address, tags);","lastModifiedDate":"2016-08-24"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":228,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":229,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"                .add(\"name\", name)","lastModifiedDate":"2019-02-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"                .add(\"phone\", phone)","lastModifiedDate":"2019-02-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"                .add(\"email\", email)","lastModifiedDate":"2019-02-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"                .add(\"address\", address)","lastModifiedDate":"2019-02-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"                .add(\"tags\", tags)","lastModifiedDate":"2019-02-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":237,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"larrywang0701":24,"zekone":50,"AndrewJanong":12,"-":107,"josepholim":44}},{"path":"src/main/java/seedu/address/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.util;","lastModifiedDate":"2016-12-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"larrywang0701"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"larrywang0701"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"zekone"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-10"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":12,"author":{"gitId":"zekone"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2023-10-10"},{"lineNumber":13,"author":{"gitId":"zekone"},"content":"import seedu.address.model.note.Note;","lastModifiedDate":"2023-10-10"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2016-12-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2016-12-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2016-12-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2016-12-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Contains utility methods for populating {@code AddressBook} with sample data.","lastModifiedDate":"2017-08-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static Person[] getSamplePersons() {","lastModifiedDate":"2016-12-20"},{"lineNumber":26,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":27,"author":{"gitId":"zekone"},"content":"        ArrayList\u003cNote\u003e sampleNotes \u003d new ArrayList\u003cNote\u003e();","lastModifiedDate":"2023-10-10"},{"lineNumber":28,"author":{"gitId":"zekone"},"content":"        sampleNotes.add(new Note(\"Questions to ask\", \"Ask about the bug at line 34\"));","lastModifiedDate":"2023-11-08"},{"lineNumber":29,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":30,"author":{"gitId":"zekone"},"content":"        ArrayList\u003cNote\u003e emptyNotes \u003d new ArrayList\u003cNote\u003e();","lastModifiedDate":"2023-11-08"},{"lineNumber":31,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":32,"author":{"gitId":"larrywang0701"},"content":"        ArrayList\u003cEvent\u003e sampleEvents1 \u003d new ArrayList\u003cEvent\u003e();","lastModifiedDate":"2023-11-01"},{"lineNumber":33,"author":{"gitId":"zekone"},"content":"        sampleEvents1.add(new Event(\"Meeting with professor\",","lastModifiedDate":"2023-11-08"},{"lineNumber":34,"author":{"gitId":"Nixx162"},"content":"                LocalDateTime.now().format(DateTimeFormatter.ofPattern(\"YYYY-MM-dd HH:mm:ss\")),","lastModifiedDate":"2023-11-02"},{"lineNumber":35,"author":{"gitId":"Nixx162"},"content":"                LocalDateTime.now().plusHours(1).format(DateTimeFormatter.ofPattern(\"YYYY-MM-dd HH:mm:ss\")),","lastModifiedDate":"2023-11-02"},{"lineNumber":36,"author":{"gitId":"zekone"},"content":"                \"COM 1 Basement\",","lastModifiedDate":"2023-11-08"},{"lineNumber":37,"author":{"gitId":"zekone"},"content":"                \"Discuss the project implementation with the professor\"));","lastModifiedDate":"2023-11-08"},{"lineNumber":38,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":39,"author":{"gitId":"larrywang0701"},"content":"        ArrayList\u003cEvent\u003e sampleEvents2 \u003d new ArrayList\u003cEvent\u003e();","lastModifiedDate":"2023-11-01"},{"lineNumber":40,"author":{"gitId":"zekone"},"content":"        sampleEvents2.add(new Event(\"Chat with TikTok recruiter\",","lastModifiedDate":"2023-11-08"},{"lineNumber":41,"author":{"gitId":"Nixx162"},"content":"                LocalDateTime.now().plusHours(2).format(DateTimeFormatter.ofPattern(\"YYYY-MM-dd HH:mm:ss\")),","lastModifiedDate":"2023-11-02"},{"lineNumber":42,"author":{"gitId":"Nixx162"},"content":"                LocalDateTime.now().plusHours(3).format(DateTimeFormatter.ofPattern(\"YYYY-MM-dd HH:mm:ss\")),","lastModifiedDate":"2023-11-02"},{"lineNumber":43,"author":{"gitId":"zekone"},"content":"                \"Online\",","lastModifiedDate":"2023-11-08"},{"lineNumber":44,"author":{"gitId":"zekone"},"content":"                \"Need to prepare for questions\"));","lastModifiedDate":"2023-11-08"},{"lineNumber":45,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return new Person[] {","lastModifiedDate":"2016-12-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Alex Yeoh\"), new Phone(\"87438807\"), new Email(\"alexyeoh@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                    new Address(\"Blk 30 Geylang Street 29, #06-40\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":49,"author":{"gitId":"larrywang0701"},"content":"                    getTagSet(\"friends\"), sampleNotes, sampleEvents1),","lastModifiedDate":"2023-11-01"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Bernice Yu\"), new Phone(\"99272758\"), new Email(\"berniceyu@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                    new Address(\"Blk 30 Lorong 3 Serangoon Gardens, #07-18\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":52,"author":{"gitId":"zekone"},"content":"                    getTagSet(\"colleagues\", \"friends\"), emptyNotes, sampleEvents2),","lastModifiedDate":"2023-11-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Charlotte Oliveiro\"), new Phone(\"93210283\"), new Email(\"charlotte@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"                    new Address(\"Blk 11 Ang Mo Kio Street 74, #11-04\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":55,"author":{"gitId":"zekone"},"content":"                    getTagSet(\"neighbours\"), emptyNotes, new ArrayList\u003cEvent\u003e()),","lastModifiedDate":"2023-11-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            new Person(new Name(\"David Li\"), new Phone(\"91031282\"), new Email(\"lidavid@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"                    new Address(\"Blk 436 Serangoon Gardens Street 26, #16-43\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":58,"author":{"gitId":"zekone"},"content":"                    getTagSet(\"family\"), emptyNotes, new ArrayList\u003cEvent\u003e()),","lastModifiedDate":"2023-11-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Irfan Ibrahim\"), new Phone(\"92492021\"), new Email(\"irfan@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"                    new Address(\"Blk 47 Tampines Street 20, #17-35\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":61,"author":{"gitId":"zekone"},"content":"                    getTagSet(\"classmates\"), emptyNotes, new ArrayList\u003cEvent\u003e()),","lastModifiedDate":"2023-11-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Roy Balakrishnan\"), new Phone(\"92624417\"), new Email(\"royb@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                    new Address(\"Blk 45 Aljunied Street 85, #11-31\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":64,"author":{"gitId":"zekone"},"content":"                    getTagSet(\"colleagues\"), emptyNotes, new ArrayList\u003cEvent\u003e()),","lastModifiedDate":"2023-11-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public static ReadOnlyAddressBook getSampleAddressBook() {","lastModifiedDate":"2016-12-20"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        AddressBook sampleAb \u003d new AddressBook();","lastModifiedDate":"2017-04-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        for (Person samplePerson : getSamplePersons()) {","lastModifiedDate":"2016-12-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            sampleAb.addPerson(samplePerson);","lastModifiedDate":"2017-04-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return sampleAb;","lastModifiedDate":"2017-04-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Returns a tag set containing the list of strings given.","lastModifiedDate":"2017-03-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e getTagSet(String... strings) {","lastModifiedDate":"2017-05-30"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2018-01-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"                .map(Tag::new)","lastModifiedDate":"2018-01-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2018-01-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"larrywang0701":5,"zekone":22,"-":54,"Nixx162":4}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedEvent.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zekone"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-10-10"},{"lineNumber":2,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":3,"author":{"gitId":"zekone"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2023-10-10"},{"lineNumber":4,"author":{"gitId":"zekone"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2023-10-10"},{"lineNumber":5,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":6,"author":{"gitId":"zekone"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-10-10"},{"lineNumber":7,"author":{"gitId":"zekone"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2023-10-10"},{"lineNumber":8,"author":{"gitId":"zekone"},"content":"import seedu.address.model.event.EventInformation;","lastModifiedDate":"2023-10-20"},{"lineNumber":9,"author":{"gitId":"zekone"},"content":"import seedu.address.model.event.EventLocation;","lastModifiedDate":"2023-10-20"},{"lineNumber":10,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":11,"author":{"gitId":"zekone"},"content":"/**","lastModifiedDate":"2023-10-10"},{"lineNumber":12,"author":{"gitId":"zekone"},"content":" * Jackson-friendly version of {@link Event}.","lastModifiedDate":"2023-10-10"},{"lineNumber":13,"author":{"gitId":"zekone"},"content":" */","lastModifiedDate":"2023-10-10"},{"lineNumber":14,"author":{"gitId":"zekone"},"content":"public class JsonAdaptedEvent {","lastModifiedDate":"2023-10-10"},{"lineNumber":15,"author":{"gitId":"zekone"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Event\u0027s %s field is missing!\";","lastModifiedDate":"2023-10-10"},{"lineNumber":16,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":17,"author":{"gitId":"zekone"},"content":"    private final String name;","lastModifiedDate":"2023-10-10"},{"lineNumber":18,"author":{"gitId":"zekone"},"content":"    private final String start;","lastModifiedDate":"2023-10-10"},{"lineNumber":19,"author":{"gitId":"zekone"},"content":"    private final String end;","lastModifiedDate":"2023-10-10"},{"lineNumber":20,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":21,"author":{"gitId":"larrywang0701"},"content":"    private final String location;","lastModifiedDate":"2023-10-12"},{"lineNumber":22,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"larrywang0701"},"content":"    private final String information;","lastModifiedDate":"2023-10-12"},{"lineNumber":24,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":25,"author":{"gitId":"zekone"},"content":"    /**","lastModifiedDate":"2023-10-10"},{"lineNumber":26,"author":{"gitId":"zekone"},"content":"     * Constructs a {@code JsonAdaptedEvent} with the given person details.","lastModifiedDate":"2023-10-10"},{"lineNumber":27,"author":{"gitId":"zekone"},"content":"     */","lastModifiedDate":"2023-10-10"},{"lineNumber":28,"author":{"gitId":"zekone"},"content":"    @JsonCreator","lastModifiedDate":"2023-10-10"},{"lineNumber":29,"author":{"gitId":"zekone"},"content":"    public JsonAdaptedEvent(@JsonProperty(\"name\") String name,","lastModifiedDate":"2023-10-10"},{"lineNumber":30,"author":{"gitId":"larrywang0701"},"content":"            @JsonProperty(\"start\") String start, @JsonProperty(\"end\") String end,","lastModifiedDate":"2023-10-12"},{"lineNumber":31,"author":{"gitId":"larrywang0701"},"content":"            @JsonProperty(\"location\") String location,","lastModifiedDate":"2023-10-12"},{"lineNumber":32,"author":{"gitId":"larrywang0701"},"content":"            @JsonProperty(\"information\") String information) {","lastModifiedDate":"2023-10-12"},{"lineNumber":33,"author":{"gitId":"zekone"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-10-10"},{"lineNumber":34,"author":{"gitId":"zekone"},"content":"        this.start \u003d start;","lastModifiedDate":"2023-10-10"},{"lineNumber":35,"author":{"gitId":"zekone"},"content":"        this.end \u003d end;","lastModifiedDate":"2023-10-10"},{"lineNumber":36,"author":{"gitId":"larrywang0701"},"content":"        this.location \u003d location;","lastModifiedDate":"2023-10-12"},{"lineNumber":37,"author":{"gitId":"larrywang0701"},"content":"        this.information \u003d information;","lastModifiedDate":"2023-10-12"},{"lineNumber":38,"author":{"gitId":"zekone"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":39,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":40,"author":{"gitId":"zekone"},"content":"    /**","lastModifiedDate":"2023-10-10"},{"lineNumber":41,"author":{"gitId":"zekone"},"content":"     * Converts a given {@code Event} into this class for Jackson use.","lastModifiedDate":"2023-10-10"},{"lineNumber":42,"author":{"gitId":"zekone"},"content":"     */","lastModifiedDate":"2023-10-10"},{"lineNumber":43,"author":{"gitId":"zekone"},"content":"    public JsonAdaptedEvent(Event source) {","lastModifiedDate":"2023-10-10"},{"lineNumber":44,"author":{"gitId":"zekone"},"content":"        name \u003d source.getName();","lastModifiedDate":"2023-10-10"},{"lineNumber":45,"author":{"gitId":"zekone"},"content":"        start \u003d source.getStartString();","lastModifiedDate":"2023-10-10"},{"lineNumber":46,"author":{"gitId":"zekone"},"content":"        end \u003d source.getEndString();","lastModifiedDate":"2023-10-10"},{"lineNumber":47,"author":{"gitId":"larrywang0701"},"content":"        location \u003d source.getLocationStr();","lastModifiedDate":"2023-10-12"},{"lineNumber":48,"author":{"gitId":"larrywang0701"},"content":"        information \u003d source.getInformationStr();","lastModifiedDate":"2023-10-12"},{"lineNumber":49,"author":{"gitId":"zekone"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":50,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":51,"author":{"gitId":"zekone"},"content":"    /**","lastModifiedDate":"2023-10-10"},{"lineNumber":52,"author":{"gitId":"zekone"},"content":"     * Converts this Jackson-friendly adapted event object into the model\u0027s","lastModifiedDate":"2023-10-10"},{"lineNumber":53,"author":{"gitId":"zekone"},"content":"     * {@code Event} object.","lastModifiedDate":"2023-10-10"},{"lineNumber":54,"author":{"gitId":"zekone"},"content":"     *","lastModifiedDate":"2023-10-10"},{"lineNumber":55,"author":{"gitId":"zekone"},"content":"     * @throws IllegalValueException if there were any data constraints violated in","lastModifiedDate":"2023-10-10"},{"lineNumber":56,"author":{"gitId":"zekone"},"content":"     *                               the adapted event.","lastModifiedDate":"2023-10-10"},{"lineNumber":57,"author":{"gitId":"zekone"},"content":"     */","lastModifiedDate":"2023-10-10"},{"lineNumber":58,"author":{"gitId":"zekone"},"content":"    public Event toModelType() throws IllegalValueException {","lastModifiedDate":"2023-10-10"},{"lineNumber":59,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":60,"author":{"gitId":"zekone"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2023-10-10"},{"lineNumber":61,"author":{"gitId":"zekone"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, \"name\"));","lastModifiedDate":"2023-10-10"},{"lineNumber":62,"author":{"gitId":"zekone"},"content":"        }","lastModifiedDate":"2023-10-10"},{"lineNumber":63,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":64,"author":{"gitId":"zekone"},"content":"        if (start \u003d\u003d null) {","lastModifiedDate":"2023-10-10"},{"lineNumber":65,"author":{"gitId":"zekone"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, \"start\"));","lastModifiedDate":"2023-10-10"},{"lineNumber":66,"author":{"gitId":"zekone"},"content":"        }","lastModifiedDate":"2023-10-10"},{"lineNumber":67,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":68,"author":{"gitId":"zekone"},"content":"        if (end \u003d\u003d null) {","lastModifiedDate":"2023-10-10"},{"lineNumber":69,"author":{"gitId":"zekone"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, \"end\"));","lastModifiedDate":"2023-10-10"},{"lineNumber":70,"author":{"gitId":"zekone"},"content":"        }","lastModifiedDate":"2023-10-10"},{"lineNumber":71,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":72,"author":{"gitId":"larrywang0701"},"content":"        if (location \u003d\u003d null) {","lastModifiedDate":"2023-10-12"},{"lineNumber":73,"author":{"gitId":"zekone"},"content":"            throw new IllegalValueException(","lastModifiedDate":"2023-10-20"},{"lineNumber":74,"author":{"gitId":"zekone"},"content":"                    String.format(MISSING_FIELD_MESSAGE_FORMAT, EventLocation.class.getSimpleName()));","lastModifiedDate":"2023-10-20"},{"lineNumber":75,"author":{"gitId":"larrywang0701"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":76,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":77,"author":{"gitId":"larrywang0701"},"content":"        if (information \u003d\u003d null) {","lastModifiedDate":"2023-10-12"},{"lineNumber":78,"author":{"gitId":"zekone"},"content":"            throw new IllegalValueException(","lastModifiedDate":"2023-10-20"},{"lineNumber":79,"author":{"gitId":"zekone"},"content":"                    String.format(MISSING_FIELD_MESSAGE_FORMAT, EventInformation.class.getSimpleName()));","lastModifiedDate":"2023-10-20"},{"lineNumber":80,"author":{"gitId":"larrywang0701"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":81,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":82,"author":{"gitId":"larrywang0701"},"content":"        return new Event(name, start, end, location, information);","lastModifiedDate":"2023-10-12"},{"lineNumber":83,"author":{"gitId":"zekone"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":84,"author":{"gitId":"zekone"},"content":"}","lastModifiedDate":"2023-10-10"}],"authorContributionMap":{"larrywang0701":18,"zekone":66}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedNote.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zekone"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-10-10"},{"lineNumber":2,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":3,"author":{"gitId":"zekone"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2023-10-10"},{"lineNumber":4,"author":{"gitId":"zekone"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2023-10-10"},{"lineNumber":5,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":6,"author":{"gitId":"zekone"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-10-10"},{"lineNumber":7,"author":{"gitId":"zekone"},"content":"import seedu.address.model.note.Note;","lastModifiedDate":"2023-10-10"},{"lineNumber":8,"author":{"gitId":"zekone"},"content":"import seedu.address.model.note.NoteContent;","lastModifiedDate":"2023-10-20"},{"lineNumber":9,"author":{"gitId":"zekone"},"content":"import seedu.address.model.note.NoteTitle;","lastModifiedDate":"2023-10-20"},{"lineNumber":10,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":11,"author":{"gitId":"zekone"},"content":"/**","lastModifiedDate":"2023-10-10"},{"lineNumber":12,"author":{"gitId":"zekone"},"content":" * Jackson-friendly version of {@link Note}.","lastModifiedDate":"2023-10-10"},{"lineNumber":13,"author":{"gitId":"zekone"},"content":" */","lastModifiedDate":"2023-10-10"},{"lineNumber":14,"author":{"gitId":"zekone"},"content":"public class JsonAdaptedNote {","lastModifiedDate":"2023-10-10"},{"lineNumber":15,"author":{"gitId":"zekone"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Notes\u0027s %s field is missing!\";","lastModifiedDate":"2023-10-10"},{"lineNumber":16,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":17,"author":{"gitId":"zekone"},"content":"    private final String title;","lastModifiedDate":"2023-10-10"},{"lineNumber":18,"author":{"gitId":"josepholim"},"content":"    private final String content;","lastModifiedDate":"2023-10-15"},{"lineNumber":19,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":20,"author":{"gitId":"zekone"},"content":"    /**","lastModifiedDate":"2023-10-10"},{"lineNumber":21,"author":{"gitId":"zekone"},"content":"     * Constructs a {@code JsonAdaptedNote} with the given person details.","lastModifiedDate":"2023-10-10"},{"lineNumber":22,"author":{"gitId":"zekone"},"content":"     */","lastModifiedDate":"2023-10-10"},{"lineNumber":23,"author":{"gitId":"zekone"},"content":"    @JsonCreator","lastModifiedDate":"2023-10-10"},{"lineNumber":24,"author":{"gitId":"josepholim"},"content":"    public JsonAdaptedNote(@JsonProperty(\"title\") String title, @JsonProperty(\"content\") String content) {","lastModifiedDate":"2023-10-15"},{"lineNumber":25,"author":{"gitId":"zekone"},"content":"        this.title \u003d title;","lastModifiedDate":"2023-10-10"},{"lineNumber":26,"author":{"gitId":"josepholim"},"content":"        this.content \u003d content;","lastModifiedDate":"2023-10-15"},{"lineNumber":27,"author":{"gitId":"zekone"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":28,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":29,"author":{"gitId":"zekone"},"content":"    /**","lastModifiedDate":"2023-10-10"},{"lineNumber":30,"author":{"gitId":"zekone"},"content":"     * Converts a given {@code Note} into this class for Jackson use.","lastModifiedDate":"2023-10-10"},{"lineNumber":31,"author":{"gitId":"zekone"},"content":"     */","lastModifiedDate":"2023-10-10"},{"lineNumber":32,"author":{"gitId":"zekone"},"content":"    public JsonAdaptedNote(Note source) {","lastModifiedDate":"2023-10-10"},{"lineNumber":33,"author":{"gitId":"zekone"},"content":"        title \u003d source.getTitle();","lastModifiedDate":"2023-10-10"},{"lineNumber":34,"author":{"gitId":"josepholim"},"content":"        content \u003d source.getContent();","lastModifiedDate":"2023-10-15"},{"lineNumber":35,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":36,"author":{"gitId":"zekone"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":37,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":38,"author":{"gitId":"zekone"},"content":"    /**","lastModifiedDate":"2023-10-10"},{"lineNumber":39,"author":{"gitId":"zekone"},"content":"     * Converts this Jackson-friendly adapted note object into the model\u0027s","lastModifiedDate":"2023-10-10"},{"lineNumber":40,"author":{"gitId":"zekone"},"content":"     * {@code Note} object.","lastModifiedDate":"2023-10-10"},{"lineNumber":41,"author":{"gitId":"zekone"},"content":"     *","lastModifiedDate":"2023-10-10"},{"lineNumber":42,"author":{"gitId":"zekone"},"content":"     * @throws IllegalValueException if there were any data constraints violated in","lastModifiedDate":"2023-10-10"},{"lineNumber":43,"author":{"gitId":"zekone"},"content":"     *                               the adapted Note.","lastModifiedDate":"2023-10-10"},{"lineNumber":44,"author":{"gitId":"zekone"},"content":"     */","lastModifiedDate":"2023-10-10"},{"lineNumber":45,"author":{"gitId":"zekone"},"content":"    public Note toModelType() throws IllegalValueException {","lastModifiedDate":"2023-10-10"},{"lineNumber":46,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":47,"author":{"gitId":"zekone"},"content":"        if (title \u003d\u003d null) {","lastModifiedDate":"2023-10-10"},{"lineNumber":48,"author":{"gitId":"zekone"},"content":"            throw new IllegalValueException(","lastModifiedDate":"2023-10-20"},{"lineNumber":49,"author":{"gitId":"zekone"},"content":"                    String.format(MISSING_FIELD_MESSAGE_FORMAT, NoteTitle.class.getSimpleName()));","lastModifiedDate":"2023-10-20"},{"lineNumber":50,"author":{"gitId":"zekone"},"content":"        }","lastModifiedDate":"2023-10-10"},{"lineNumber":51,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":52,"author":{"gitId":"josepholim"},"content":"        if (content \u003d\u003d null) {","lastModifiedDate":"2023-10-15"},{"lineNumber":53,"author":{"gitId":"zekone"},"content":"            throw new IllegalValueException(","lastModifiedDate":"2023-10-20"},{"lineNumber":54,"author":{"gitId":"zekone"},"content":"                    String.format(MISSING_FIELD_MESSAGE_FORMAT, NoteContent.class.getSimpleName()));","lastModifiedDate":"2023-10-20"},{"lineNumber":55,"author":{"gitId":"zekone"},"content":"        }","lastModifiedDate":"2023-10-10"},{"lineNumber":56,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":57,"author":{"gitId":"josepholim"},"content":"        return new Note(title, content);","lastModifiedDate":"2023-10-15"},{"lineNumber":58,"author":{"gitId":"zekone"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":59,"author":{"gitId":"zekone"},"content":"}","lastModifiedDate":"2023-10-10"}],"authorContributionMap":{"zekone":53,"josepholim":6}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedPerson.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"zekone"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2023-10-10"},{"lineNumber":14,"author":{"gitId":"zekone"},"content":"import seedu.address.model.note.Note;","lastModifiedDate":"2023-10-10"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Person}.","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"class JsonAdaptedPerson {","lastModifiedDate":"2018-12-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Person\u0027s %s field is missing!\";","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final String name;","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final String phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final String email;","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private final String address;","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedTag\u003e tags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-09"},{"lineNumber":34,"author":{"gitId":"zekone"},"content":"    private final List\u003cJsonAdaptedNote\u003e notes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-10"},{"lineNumber":35,"author":{"gitId":"zekone"},"content":"    private final List\u003cJsonAdaptedEvent\u003e events \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedPerson} with the given person details.","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(@JsonProperty(\"name\") String name, @JsonProperty(\"phone\") String phone,","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            @JsonProperty(\"email\") String email, @JsonProperty(\"address\") String address,","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"zekone"},"content":"            @JsonProperty(\"tags\") List\u003cJsonAdaptedTag\u003e tags, @JsonProperty(\"notes\") List\u003cJsonAdaptedNote\u003e notes,","lastModifiedDate":"2023-10-10"},{"lineNumber":44,"author":{"gitId":"zekone"},"content":"            @JsonProperty(\"events\") List\u003cJsonAdaptedEvent\u003e events) {","lastModifiedDate":"2023-10-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        if (tags !\u003d null) {","lastModifiedDate":"2023-01-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            this.tags.addAll(tags);","lastModifiedDate":"2023-01-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"zekone"},"content":"        if (notes !\u003d null) {","lastModifiedDate":"2023-10-10"},{"lineNumber":53,"author":{"gitId":"zekone"},"content":"            this.notes.addAll(notes);","lastModifiedDate":"2023-10-10"},{"lineNumber":54,"author":{"gitId":"zekone"},"content":"        }","lastModifiedDate":"2023-10-10"},{"lineNumber":55,"author":{"gitId":"zekone"},"content":"        if (events !\u003d null) {","lastModifiedDate":"2023-10-10"},{"lineNumber":56,"author":{"gitId":"zekone"},"content":"            this.events.addAll(events);","lastModifiedDate":"2023-10-10"},{"lineNumber":57,"author":{"gitId":"zekone"},"content":"        }","lastModifiedDate":"2023-10-10"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Converts a given {@code Person} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(Person source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        phone \u003d source.getPhone().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        email \u003d source.getEmail().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        address \u003d source.getAddress().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        tags.addAll(source.getTags().stream()","lastModifiedDate":"2023-01-09"},{"lineNumber":69,"author":{"gitId":"-"},"content":"                .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"zekone"},"content":"        notes.addAll(source.getNotes().stream()","lastModifiedDate":"2023-10-10"},{"lineNumber":72,"author":{"gitId":"zekone"},"content":"                .map(JsonAdaptedNote::new)","lastModifiedDate":"2023-10-10"},{"lineNumber":73,"author":{"gitId":"zekone"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2023-10-10"},{"lineNumber":74,"author":{"gitId":"zekone"},"content":"        events.addAll(source.getEvents().stream()","lastModifiedDate":"2023-10-10"},{"lineNumber":75,"author":{"gitId":"zekone"},"content":"                .map(JsonAdaptedEvent::new)","lastModifiedDate":"2023-10-10"},{"lineNumber":76,"author":{"gitId":"zekone"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2023-10-10"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"zekone"},"content":"     * Converts this Jackson-friendly adapted person object into the model\u0027s","lastModifiedDate":"2023-10-10"},{"lineNumber":81,"author":{"gitId":"zekone"},"content":"     * {@code Person} object.","lastModifiedDate":"2023-10-10"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"zekone"},"content":"     * @throws IllegalValueException if there were any data constraints violated in","lastModifiedDate":"2023-10-10"},{"lineNumber":84,"author":{"gitId":"zekone"},"content":"     *                               the adapted person.","lastModifiedDate":"2023-10-10"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public Person toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        final List\u003cTag\u003e personTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        for (JsonAdaptedTag tag : tags) {","lastModifiedDate":"2023-01-09"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            personTags.add(tag.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"zekone"},"content":"        final List\u003cNote\u003e modelNotes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-10"},{"lineNumber":93,"author":{"gitId":"zekone"},"content":"        for (JsonAdaptedNote note : notes) {","lastModifiedDate":"2023-10-10"},{"lineNumber":94,"author":{"gitId":"zekone"},"content":"            modelNotes.add(note.toModelType());","lastModifiedDate":"2023-10-10"},{"lineNumber":95,"author":{"gitId":"zekone"},"content":"        }","lastModifiedDate":"2023-10-10"},{"lineNumber":96,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":97,"author":{"gitId":"zekone"},"content":"        final List\u003cEvent\u003e modelEvents \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-10"},{"lineNumber":98,"author":{"gitId":"zekone"},"content":"        for (JsonAdaptedEvent event : events) {","lastModifiedDate":"2023-10-10"},{"lineNumber":99,"author":{"gitId":"zekone"},"content":"            modelEvents.add(event.toModelType());","lastModifiedDate":"2023-10-10"},{"lineNumber":100,"author":{"gitId":"zekone"},"content":"        }","lastModifiedDate":"2023-10-10"},{"lineNumber":101,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        if (phone \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(phone)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        final Phone modelPhone \u003d new Phone(phone);","lastModifiedDate":"2018-08-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        if (email \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(email)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        final Email modelEmail \u003d new Email(email);","lastModifiedDate":"2018-08-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        if (address \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(address)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        final Address modelAddress \u003d new Address(address);","lastModifiedDate":"2018-08-13"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(personTags);","lastModifiedDate":"2018-08-13"},{"lineNumber":135,"author":{"gitId":"zekone"},"content":"        return new Person(modelName, modelPhone, modelEmail, modelAddress, modelTags, modelNotes, modelEvents);","lastModifiedDate":"2023-10-10"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":138,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"zekone":33,"-":105}},{"path":"src/main/java/seedu/address/ui/ContactCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2023-11-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-11-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-11-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2023-11-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-11-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-11-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-11-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2023-11-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * An UI component that displays information of a {@code Person}.","lastModifiedDate":"2023-11-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2023-11-03"},{"lineNumber":13,"author":{"gitId":"Nixx162"},"content":"public class ContactCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-11-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":15,"author":{"gitId":"Nixx162"},"content":"    private static final String FXML \u003d \"ContactCard.fxml\";","lastModifiedDate":"2023-11-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-11-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2023-11-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2023-11-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2023-11-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2023-11-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2023-11-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-11-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public final Person person;","lastModifiedDate":"2023-11-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2023-11-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2023-11-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2023-11-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private Label name;","lastModifiedDate":"2023-11-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2023-11-03"},{"lineNumber":32,"author":{"gitId":"Nixx162"},"content":"    private Label email;","lastModifiedDate":"2023-11-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2023-11-03"},{"lineNumber":34,"author":{"gitId":"Nixx162"},"content":"    private Label mobile;","lastModifiedDate":"2023-11-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2023-11-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private Label address;","lastModifiedDate":"2023-11-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2023-11-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private FlowPane tags;","lastModifiedDate":"2023-11-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-11-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonCode} with the given {@code Person} and index to display.","lastModifiedDate":"2023-11-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-11-03"},{"lineNumber":43,"author":{"gitId":"Nixx162"},"content":"    public ContactCard(Person person) {","lastModifiedDate":"2023-11-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2023-11-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        this.person \u003d person;","lastModifiedDate":"2023-11-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        name.setText(person.getName().fullName);","lastModifiedDate":"2023-11-03"},{"lineNumber":47,"author":{"gitId":"Nixx162"},"content":"        mobile.setText(\"Phone: \" + person.getPhone().value);","lastModifiedDate":"2023-11-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        address.setText(person.getAddress().value);","lastModifiedDate":"2023-11-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        email.setText(person.getEmail().value);","lastModifiedDate":"2023-11-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        person.getTags().stream()","lastModifiedDate":"2023-11-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                .forEach(tag -\u003e tags.getChildren().add(new Label(tag.tagName)));","lastModifiedDate":"2023-11-03"},{"lineNumber":52,"author":{"gitId":"Nixx162"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-11-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-11-03"}],"authorContributionMap":{"-":47,"Nixx162":7}},{"path":"src/main/java/seedu/address/ui/EventListWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Nixx162"},"content":"package seedu.address.ui;","lastModifiedDate":"2023-11-03"},{"lineNumber":2,"author":{"gitId":"Nixx162"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":3,"author":{"gitId":"Nixx162"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-11-03"},{"lineNumber":4,"author":{"gitId":"Nixx162"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":5,"author":{"gitId":"Nixx162"},"content":"import javafx.beans.property.SimpleStringProperty;","lastModifiedDate":"2023-11-03"},{"lineNumber":6,"author":{"gitId":"Nixx162"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-11-03"},{"lineNumber":7,"author":{"gitId":"Nixx162"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-11-03"},{"lineNumber":8,"author":{"gitId":"Nixx162"},"content":"import javafx.scene.control.TableCell;","lastModifiedDate":"2023-11-03"},{"lineNumber":9,"author":{"gitId":"Nixx162"},"content":"import javafx.scene.control.TableColumn;","lastModifiedDate":"2023-11-03"},{"lineNumber":10,"author":{"gitId":"Nixx162"},"content":"import javafx.scene.control.TableView;","lastModifiedDate":"2023-11-03"},{"lineNumber":11,"author":{"gitId":"Nixx162"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-11-03"},{"lineNumber":12,"author":{"gitId":"Nixx162"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-11-03"},{"lineNumber":13,"author":{"gitId":"Nixx162"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2023-11-03"},{"lineNumber":14,"author":{"gitId":"Nixx162"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":15,"author":{"gitId":"Nixx162"},"content":"/**","lastModifiedDate":"2023-11-03"},{"lineNumber":16,"author":{"gitId":"Nixx162"},"content":" * Controller for a help page","lastModifiedDate":"2023-11-03"},{"lineNumber":17,"author":{"gitId":"Nixx162"},"content":" */","lastModifiedDate":"2023-11-03"},{"lineNumber":18,"author":{"gitId":"Nixx162"},"content":"public class EventListWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2023-11-03"},{"lineNumber":19,"author":{"gitId":"Nixx162"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(EventListWindow.class);","lastModifiedDate":"2023-11-03"},{"lineNumber":20,"author":{"gitId":"Nixx162"},"content":"    private static final String FXML \u003d \"EventListWindow.fxml\";","lastModifiedDate":"2023-11-03"},{"lineNumber":21,"author":{"gitId":"Nixx162"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":22,"author":{"gitId":"Nixx162"},"content":"    @FXML private TableView\u003cEvent\u003e table;","lastModifiedDate":"2023-11-03"},{"lineNumber":23,"author":{"gitId":"Nixx162"},"content":"    @FXML private TableColumn\u003cEvent, Void\u003e indexCol;","lastModifiedDate":"2023-11-03"},{"lineNumber":24,"author":{"gitId":"Nixx162"},"content":"    @FXML private TableColumn\u003cEvent, String\u003e nameCol;","lastModifiedDate":"2023-11-03"},{"lineNumber":25,"author":{"gitId":"Nixx162"},"content":"    @FXML private TableColumn\u003cEvent, String\u003e startCol;","lastModifiedDate":"2023-11-03"},{"lineNumber":26,"author":{"gitId":"Nixx162"},"content":"    @FXML private TableColumn\u003cEvent, String\u003e endCol;","lastModifiedDate":"2023-11-03"},{"lineNumber":27,"author":{"gitId":"Nixx162"},"content":"    @FXML private TableColumn\u003cEvent, String\u003e locCol;","lastModifiedDate":"2023-11-03"},{"lineNumber":28,"author":{"gitId":"Nixx162"},"content":"    @FXML private TableColumn\u003cEvent, String\u003e infoCol;","lastModifiedDate":"2023-11-03"},{"lineNumber":29,"author":{"gitId":"Nixx162"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":30,"author":{"gitId":"Nixx162"},"content":"    /**","lastModifiedDate":"2023-11-03"},{"lineNumber":31,"author":{"gitId":"Nixx162"},"content":"     * Creates a new EventListWindow.","lastModifiedDate":"2023-11-03"},{"lineNumber":32,"author":{"gitId":"Nixx162"},"content":"     *","lastModifiedDate":"2023-11-03"},{"lineNumber":33,"author":{"gitId":"Nixx162"},"content":"     * @param root Stage to use as the root of the EventListWindow.","lastModifiedDate":"2023-11-03"},{"lineNumber":34,"author":{"gitId":"Nixx162"},"content":"     */","lastModifiedDate":"2023-11-03"},{"lineNumber":35,"author":{"gitId":"Nixx162"},"content":"    public EventListWindow(Stage root) {","lastModifiedDate":"2023-11-03"},{"lineNumber":36,"author":{"gitId":"Nixx162"},"content":"        super(FXML, root);","lastModifiedDate":"2023-11-03"},{"lineNumber":37,"author":{"gitId":"Nixx162"},"content":"    }","lastModifiedDate":"2023-11-03"},{"lineNumber":38,"author":{"gitId":"Nixx162"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":39,"author":{"gitId":"Nixx162"},"content":"    /**","lastModifiedDate":"2023-11-03"},{"lineNumber":40,"author":{"gitId":"Nixx162"},"content":"     * Creates a new EventListWindow.","lastModifiedDate":"2023-11-03"},{"lineNumber":41,"author":{"gitId":"Nixx162"},"content":"     */","lastModifiedDate":"2023-11-03"},{"lineNumber":42,"author":{"gitId":"Nixx162"},"content":"    public EventListWindow() {","lastModifiedDate":"2023-11-03"},{"lineNumber":43,"author":{"gitId":"Nixx162"},"content":"        this(new Stage());","lastModifiedDate":"2023-11-03"},{"lineNumber":44,"author":{"gitId":"Nixx162"},"content":"    }","lastModifiedDate":"2023-11-03"},{"lineNumber":45,"author":{"gitId":"Nixx162"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":46,"author":{"gitId":"Nixx162"},"content":"    /**","lastModifiedDate":"2023-11-03"},{"lineNumber":47,"author":{"gitId":"Nixx162"},"content":"     * Shows the help window.","lastModifiedDate":"2023-11-03"},{"lineNumber":48,"author":{"gitId":"Nixx162"},"content":"     * @throws IllegalStateException","lastModifiedDate":"2023-11-03"},{"lineNumber":49,"author":{"gitId":"Nixx162"},"content":"     *     \u003cul\u003e","lastModifiedDate":"2023-11-03"},{"lineNumber":50,"author":{"gitId":"Nixx162"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2023-11-03"},{"lineNumber":51,"author":{"gitId":"Nixx162"},"content":"     *             if this method is called on a thread other than the JavaFX Application Thread.","lastModifiedDate":"2023-11-03"},{"lineNumber":52,"author":{"gitId":"Nixx162"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2023-11-03"},{"lineNumber":53,"author":{"gitId":"Nixx162"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2023-11-03"},{"lineNumber":54,"author":{"gitId":"Nixx162"},"content":"     *             if this method is called during animation or layout processing.","lastModifiedDate":"2023-11-03"},{"lineNumber":55,"author":{"gitId":"Nixx162"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2023-11-03"},{"lineNumber":56,"author":{"gitId":"Nixx162"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2023-11-03"},{"lineNumber":57,"author":{"gitId":"Nixx162"},"content":"     *             if this method is called on the primary stage.","lastModifiedDate":"2023-11-03"},{"lineNumber":58,"author":{"gitId":"Nixx162"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2023-11-03"},{"lineNumber":59,"author":{"gitId":"Nixx162"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2023-11-03"},{"lineNumber":60,"author":{"gitId":"Nixx162"},"content":"     *             if {@code dialogStage} is already showing.","lastModifiedDate":"2023-11-03"},{"lineNumber":61,"author":{"gitId":"Nixx162"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2023-11-03"},{"lineNumber":62,"author":{"gitId":"Nixx162"},"content":"     *     \u003c/ul\u003e","lastModifiedDate":"2023-11-03"},{"lineNumber":63,"author":{"gitId":"Nixx162"},"content":"     */","lastModifiedDate":"2023-11-03"},{"lineNumber":64,"author":{"gitId":"Nixx162"},"content":"    public void show(ObservableList\u003cEvent\u003e events) {","lastModifiedDate":"2023-11-03"},{"lineNumber":65,"author":{"gitId":"Nixx162"},"content":"        logger.fine(\"Showing help page about the application.\");","lastModifiedDate":"2023-11-03"},{"lineNumber":66,"author":{"gitId":"Nixx162"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":67,"author":{"gitId":"Nixx162"},"content":"        indexCol.setCellFactory(col -\u003e new TableIndexCell());","lastModifiedDate":"2023-11-03"},{"lineNumber":68,"author":{"gitId":"Nixx162"},"content":"        nameCol.setCellValueFactory(data -\u003e new SimpleStringProperty(data.getValue().getName()));","lastModifiedDate":"2023-11-03"},{"lineNumber":69,"author":{"gitId":"Nixx162"},"content":"        startCol.setCellValueFactory(data -\u003e new SimpleStringProperty(data.getValue().getStartString()));","lastModifiedDate":"2023-11-03"},{"lineNumber":70,"author":{"gitId":"Nixx162"},"content":"        endCol.setCellValueFactory(data -\u003e new SimpleStringProperty(data.getValue().getEndString()));","lastModifiedDate":"2023-11-03"},{"lineNumber":71,"author":{"gitId":"Nixx162"},"content":"        locCol.setCellValueFactory(data -\u003e new SimpleStringProperty(data.getValue().getLocationStr()));","lastModifiedDate":"2023-11-03"},{"lineNumber":72,"author":{"gitId":"Nixx162"},"content":"        infoCol.setCellValueFactory(data -\u003e new SimpleStringProperty(data.getValue().getInformationStr()));","lastModifiedDate":"2023-11-03"},{"lineNumber":73,"author":{"gitId":"Nixx162"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":74,"author":{"gitId":"Nixx162"},"content":"        table.setItems(events);","lastModifiedDate":"2023-11-03"},{"lineNumber":75,"author":{"gitId":"Nixx162"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":76,"author":{"gitId":"Nixx162"},"content":"        getRoot().show();","lastModifiedDate":"2023-11-03"},{"lineNumber":77,"author":{"gitId":"Nixx162"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2023-11-03"},{"lineNumber":78,"author":{"gitId":"Nixx162"},"content":"    }","lastModifiedDate":"2023-11-03"},{"lineNumber":79,"author":{"gitId":"Nixx162"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":80,"author":{"gitId":"Nixx162"},"content":"    /**","lastModifiedDate":"2023-11-03"},{"lineNumber":81,"author":{"gitId":"Nixx162"},"content":"     * Returns true if the help window is currently being shown.","lastModifiedDate":"2023-11-03"},{"lineNumber":82,"author":{"gitId":"Nixx162"},"content":"     */","lastModifiedDate":"2023-11-03"},{"lineNumber":83,"author":{"gitId":"Nixx162"},"content":"    public boolean isShowing() {","lastModifiedDate":"2023-11-03"},{"lineNumber":84,"author":{"gitId":"Nixx162"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2023-11-03"},{"lineNumber":85,"author":{"gitId":"Nixx162"},"content":"    }","lastModifiedDate":"2023-11-03"},{"lineNumber":86,"author":{"gitId":"Nixx162"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":87,"author":{"gitId":"Nixx162"},"content":"    /**","lastModifiedDate":"2023-11-03"},{"lineNumber":88,"author":{"gitId":"Nixx162"},"content":"     * Hides the help window.","lastModifiedDate":"2023-11-03"},{"lineNumber":89,"author":{"gitId":"Nixx162"},"content":"     */","lastModifiedDate":"2023-11-03"},{"lineNumber":90,"author":{"gitId":"Nixx162"},"content":"    public void hide() {","lastModifiedDate":"2023-11-03"},{"lineNumber":91,"author":{"gitId":"Nixx162"},"content":"        getRoot().hide();","lastModifiedDate":"2023-11-03"},{"lineNumber":92,"author":{"gitId":"Nixx162"},"content":"    }","lastModifiedDate":"2023-11-03"},{"lineNumber":93,"author":{"gitId":"Nixx162"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":94,"author":{"gitId":"Nixx162"},"content":"    /**","lastModifiedDate":"2023-11-03"},{"lineNumber":95,"author":{"gitId":"Nixx162"},"content":"     * Focuses on the help window.","lastModifiedDate":"2023-11-03"},{"lineNumber":96,"author":{"gitId":"Nixx162"},"content":"     */","lastModifiedDate":"2023-11-03"},{"lineNumber":97,"author":{"gitId":"Nixx162"},"content":"    public void focus() {","lastModifiedDate":"2023-11-03"},{"lineNumber":98,"author":{"gitId":"Nixx162"},"content":"        getRoot().requestFocus();","lastModifiedDate":"2023-11-03"},{"lineNumber":99,"author":{"gitId":"Nixx162"},"content":"    }","lastModifiedDate":"2023-11-03"},{"lineNumber":100,"author":{"gitId":"Nixx162"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":101,"author":{"gitId":"Nixx162"},"content":"    class TableIndexCell extends TableCell\u003cEvent, Void\u003e {","lastModifiedDate":"2023-11-03"},{"lineNumber":102,"author":{"gitId":"Nixx162"},"content":"        @Override","lastModifiedDate":"2023-11-03"},{"lineNumber":103,"author":{"gitId":"Nixx162"},"content":"        public void updateIndex(int index) {","lastModifiedDate":"2023-11-03"},{"lineNumber":104,"author":{"gitId":"Nixx162"},"content":"            super.updateIndex(index);","lastModifiedDate":"2023-11-03"},{"lineNumber":105,"author":{"gitId":"Nixx162"},"content":"            if (isEmpty() || index \u003c 0) {","lastModifiedDate":"2023-11-03"},{"lineNumber":106,"author":{"gitId":"Nixx162"},"content":"                setText(null);","lastModifiedDate":"2023-11-03"},{"lineNumber":107,"author":{"gitId":"Nixx162"},"content":"            } else {","lastModifiedDate":"2023-11-03"},{"lineNumber":108,"author":{"gitId":"Nixx162"},"content":"                setText(Integer.toString(index + 1));","lastModifiedDate":"2023-11-03"},{"lineNumber":109,"author":{"gitId":"Nixx162"},"content":"            }","lastModifiedDate":"2023-11-03"},{"lineNumber":110,"author":{"gitId":"Nixx162"},"content":"        }","lastModifiedDate":"2023-11-03"},{"lineNumber":111,"author":{"gitId":"Nixx162"},"content":"    }","lastModifiedDate":"2023-11-03"},{"lineNumber":112,"author":{"gitId":"Nixx162"},"content":"}","lastModifiedDate":"2023-11-03"}],"authorContributionMap":{"Nixx162":112}},{"path":"src/main/java/seedu/address/ui/HelpWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2019-08-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2019-08-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.input.Clipboard;","lastModifiedDate":"2019-08-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.ClipboardContent;","lastModifiedDate":"2019-08-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Controller for a help page","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class HelpWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-12-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"Nixx162"},"content":"    public static final String USERGUIDE_URL \u003d \"https://ay2324s1-cs2103t-w16-1.github.io/tp/UserGuide.html\";","lastModifiedDate":"2023-10-18"},{"lineNumber":19,"author":{"gitId":"Nixx162"},"content":"    public static final String HELP_MESSAGE \u003d \"Type \\\u0027help\\\u0027 in the CLI or refer to the user guide: \" + USERGUIDE_URL;","lastModifiedDate":"2023-10-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(HelpWindow.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"HelpWindow.fxml\";","lastModifiedDate":"2016-09-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Button copyButton;","lastModifiedDate":"2019-08-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Label helpMessage;","lastModifiedDate":"2019-08-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-12-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @param root Stage to use as the root of the HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public HelpWindow(Stage root) {","lastModifiedDate":"2017-12-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        super(FXML, root);","lastModifiedDate":"2017-12-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        helpMessage.setText(HELP_MESSAGE);","lastModifiedDate":"2019-08-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public HelpWindow() {","lastModifiedDate":"2017-12-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this(new Stage());","lastModifiedDate":"2017-12-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Shows the help window.","lastModifiedDate":"2017-08-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * @throws IllegalStateException","lastModifiedDate":"2017-08-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     *     \u003cul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     *             if this method is called on a thread other than the JavaFX Application Thread.","lastModifiedDate":"2017-08-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     *             if this method is called during animation or layout processing.","lastModifiedDate":"2017-08-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     *             if this method is called on the primary stage.","lastModifiedDate":"2017-08-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     *             if {@code dialogStage} is already showing.","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     *     \u003c/ul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void show() {","lastModifiedDate":"2016-08-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        logger.fine(\"Showing help page about the application.\");","lastModifiedDate":"2016-12-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        getRoot().show();","lastModifiedDate":"2018-02-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2019-08-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Returns true if the help window is currently being shown.","lastModifiedDate":"2018-03-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public boolean isShowing() {","lastModifiedDate":"2018-03-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2018-03-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Hides the help window.","lastModifiedDate":"2018-12-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void hide() {","lastModifiedDate":"2018-12-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        getRoot().hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Focuses on the help window.","lastModifiedDate":"2018-03-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void focus() {","lastModifiedDate":"2018-03-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        getRoot().requestFocus();","lastModifiedDate":"2018-03-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-08-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Copies the URL to the user guide to the clipboard.","lastModifiedDate":"2019-08-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-08-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void copyUrl() {","lastModifiedDate":"2019-08-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        final Clipboard clipboard \u003d Clipboard.getSystemClipboard();","lastModifiedDate":"2019-08-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        final ClipboardContent url \u003d new ClipboardContent();","lastModifiedDate":"2019-08-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        url.putString(USERGUIDE_URL);","lastModifiedDate":"2019-08-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        clipboard.setContent(url);","lastModifiedDate":"2019-08-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-08-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"-":100,"Nixx162":2}},{"path":"src/main/java/seedu/address/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-06-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2016-08-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2016-09-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2017-06-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-11-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":26,"author":{"gitId":"larrywang0701"},"content":"    private static MainWindow iNSTANCE;","lastModifiedDate":"2023-10-12"},{"lineNumber":27,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2016-08-18"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2018-08-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Stage primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2016-08-18"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private PersonListPanel personListPanel;","lastModifiedDate":"2016-08-18"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private HelpWindow helpWindow;","lastModifiedDate":"2018-03-15"},{"lineNumber":39,"author":{"gitId":"Nixx162"},"content":"    private EventListWindow eventListWindow;","lastModifiedDate":"2023-11-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private StackPane personListPanelPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    private StackPane resultDisplayPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    private StackPane statusbarPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":56,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public MainWindow(Stage primaryStage, Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2016-09-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        setAccelerators();","lastModifiedDate":"2016-09-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2018-03-15"},{"lineNumber":73,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":74,"author":{"gitId":"Nixx162"},"content":"        eventListWindow \u003d new EventListWindow();","lastModifiedDate":"2023-11-03"},{"lineNumber":75,"author":{"gitId":"Nixx162"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":76,"author":{"gitId":"larrywang0701"},"content":"        iNSTANCE \u003d this;","lastModifiedDate":"2023-10-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2016-12-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2016-12-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    private void setAccelerators() {","lastModifiedDate":"2016-09-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2016-12-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2016-12-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","lastModifiedDate":"2016-12-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2016-12-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2016-12-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-12-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2016-12-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","lastModifiedDate":"2016-12-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"         * is fixed in later version of SDK.","lastModifiedDate":"2016-12-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2016-12-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2016-12-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will","lastModifiedDate":"2016-12-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"         * not work when the focus is in them because the key event is consumed by","lastModifiedDate":"2016-12-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"         * the TextInputControl(s).","lastModifiedDate":"2016-12-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2016-12-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"         * help window purposely so to support accelerators even when focus is","lastModifiedDate":"2016-12-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"         * in CommandBox or ResultDisplay.","lastModifiedDate":"2016-12-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-18"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2016-12-18"},{"lineNumber":111,"author":{"gitId":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2016-12-18"},{"lineNumber":112,"author":{"gitId":"-"},"content":"                event.consume();","lastModifiedDate":"2016-12-18"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-12-18"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2016-12-18"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2017-08-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","lastModifiedDate":"2016-09-21"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        personListPanel \u003d new PersonListPanel(logic.getFilteredPersonList());","lastModifiedDate":"2019-01-25"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        personListPanelPlaceholder.getChildren().add(personListPanel.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2018-12-09"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(logic.getAddressBookFilePath());","lastModifiedDate":"2019-01-25"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeCommand);","lastModifiedDate":"2019-01-25"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2018-11-27"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2018-11-27"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2018-11-27"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2018-11-27"},{"lineNumber":141,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2018-11-27"},{"lineNumber":142,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2018-11-27"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":146,"author":{"gitId":"Nixx162"},"content":"    /**","lastModifiedDate":"2023-11-03"},{"lineNumber":147,"author":{"gitId":"Nixx162"},"content":"     * Opens the event list window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2023-11-03"},{"lineNumber":148,"author":{"gitId":"Nixx162"},"content":"     */","lastModifiedDate":"2023-11-03"},{"lineNumber":149,"author":{"gitId":"Nixx162"},"content":"    @FXML","lastModifiedDate":"2023-11-03"},{"lineNumber":150,"author":{"gitId":"Nixx162"},"content":"    public void handleEventList() {","lastModifiedDate":"2023-11-03"},{"lineNumber":151,"author":{"gitId":"Nixx162"},"content":"        if (!eventListWindow.isShowing()) {","lastModifiedDate":"2023-11-03"},{"lineNumber":152,"author":{"gitId":"larrywang0701"},"content":"            eventListWindow.show(logic.getSortedFilteredEventList());","lastModifiedDate":"2023-11-14"},{"lineNumber":153,"author":{"gitId":"Nixx162"},"content":"        } else {","lastModifiedDate":"2023-11-03"},{"lineNumber":154,"author":{"gitId":"Nixx162"},"content":"            eventListWindow.focus();","lastModifiedDate":"2023-11-03"},{"lineNumber":155,"author":{"gitId":"Nixx162"},"content":"        }","lastModifiedDate":"2023-11-03"},{"lineNumber":156,"author":{"gitId":"Nixx162"},"content":"    }","lastModifiedDate":"2023-11-03"},{"lineNumber":157,"author":{"gitId":"Nixx162"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":159,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2018-03-15"},{"lineNumber":160,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    public void handleHelp() {","lastModifiedDate":"2016-08-31"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2018-03-15"},{"lineNumber":164,"author":{"gitId":"-"},"content":"            helpWindow.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2018-03-15"},{"lineNumber":166,"author":{"gitId":"Nixx162"},"content":"            eventListWindow.focus();","lastModifiedDate":"2023-11-03"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-15"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    void show() {","lastModifiedDate":"2016-10-15"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        primaryStage.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":175,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2016-08-18"},{"lineNumber":176,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    private void handleExit() {","lastModifiedDate":"2016-08-18"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2018-12-08"},{"lineNumber":180,"author":{"gitId":"-"},"content":"                (int) primaryStage.getX(), (int) primaryStage.getY());","lastModifiedDate":"2018-12-08"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2018-12-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        helpWindow.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        primaryStage.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    public PersonListPanel getPersonListPanel() {","lastModifiedDate":"2016-08-25"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        return personListPanel;","lastModifiedDate":"2018-08-14"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-25"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":191,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":192,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-09"},{"lineNumber":193,"author":{"gitId":"-"},"content":"     * @see seedu.address.logic.Logic#execute(String)","lastModifiedDate":"2018-12-09"},{"lineNumber":194,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    private CommandResult executeCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2018-12-09"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":197,"author":{"gitId":"-"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":198,"author":{"gitId":"-"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":199,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":201,"author":{"gitId":"Nixx162"},"content":"            if (commandResult.isListEvent()) {","lastModifiedDate":"2023-11-03"},{"lineNumber":202,"author":{"gitId":"Nixx162"},"content":"                handleEventList();","lastModifiedDate":"2023-11-03"},{"lineNumber":203,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2023-11-03"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":205,"author":{"gitId":"-"},"content":"            if (commandResult.isExit()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":206,"author":{"gitId":"-"},"content":"                handleExit();","lastModifiedDate":"2018-12-09"},{"lineNumber":207,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":209,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2018-12-09"},{"lineNumber":211,"author":{"gitId":"-"},"content":"            logger.info(\"An error occurred while executing command: \" + commandText);","lastModifiedDate":"2023-06-13"},{"lineNumber":212,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2018-12-09"},{"lineNumber":213,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2018-12-09"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":216,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"larrywang0701":6,"-":193,"Nixx162":17}},{"path":"src/main/java/seedu/address/ui/PersonListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-08-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2016-08-25"},{"lineNumber":9,"author":{"gitId":"Nixx162"},"content":"import javafx.scene.control.TableCell;","lastModifiedDate":"2023-11-02"},{"lineNumber":10,"author":{"gitId":"Nixx162"},"content":"import javafx.scene.control.TableColumn;","lastModifiedDate":"2023-11-02"},{"lineNumber":11,"author":{"gitId":"Nixx162"},"content":"import javafx.scene.control.TableView;","lastModifiedDate":"2023-11-02"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"Nixx162"},"content":"import javafx.scene.paint.Color;","lastModifiedDate":"2023-11-02"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2017-01-19"},{"lineNumber":15,"author":{"gitId":"Nixx162"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2023-11-02"},{"lineNumber":16,"author":{"gitId":"Nixx162"},"content":"import seedu.address.model.note.Note;","lastModifiedDate":"2023-11-02"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * Panel containing the list of persons.","lastModifiedDate":"2016-09-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class PersonListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"PersonListPanel.fxml\";","lastModifiedDate":"2016-09-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(PersonListPanel.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":26,"author":{"gitId":"Nixx162"},"content":"    @FXML private TableView\u003cPerson\u003e table;","lastModifiedDate":"2023-11-02"},{"lineNumber":27,"author":{"gitId":"Nixx162"},"content":"    @FXML private TableColumn\u003cPerson, Void\u003e indexCol;","lastModifiedDate":"2023-11-02"},{"lineNumber":28,"author":{"gitId":"Nixx162"},"content":"    @FXML private TableColumn\u003cPerson, Void\u003e contactCol;","lastModifiedDate":"2023-11-03"},{"lineNumber":29,"author":{"gitId":"Nixx162"},"content":"    @FXML private TableColumn\u003cPerson, Void\u003e notesCol;","lastModifiedDate":"2023-11-02"},{"lineNumber":30,"author":{"gitId":"Nixx162"},"content":"    @FXML private TableColumn\u003cPerson, Void\u003e eventsCol;","lastModifiedDate":"2023-11-02"},{"lineNumber":31,"author":{"gitId":"Nixx162"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2020-05-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public PersonListPanel(ObservableList\u003cPerson\u003e personList) {","lastModifiedDate":"2019-01-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":38,"author":{"gitId":"Nixx162"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":39,"author":{"gitId":"Nixx162"},"content":"        indexCol.setCellFactory(col -\u003e new TableIndexCell());","lastModifiedDate":"2023-11-02"},{"lineNumber":40,"author":{"gitId":"Nixx162"},"content":"        indexCol.setPrefWidth(50);","lastModifiedDate":"2023-11-02"},{"lineNumber":41,"author":{"gitId":"Nixx162"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":42,"author":{"gitId":"Nixx162"},"content":"        contactCol.setCellFactory(col -\u003e new TableContactsCell(personList));","lastModifiedDate":"2023-11-03"},{"lineNumber":43,"author":{"gitId":"Nixx162"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":44,"author":{"gitId":"Nixx162"},"content":"        notesCol.setCellFactory(col -\u003e new TableNotesCell(personList));","lastModifiedDate":"2023-11-02"},{"lineNumber":45,"author":{"gitId":"Nixx162"},"content":"        notesCol.minWidthProperty().bind(","lastModifiedDate":"2023-11-03"},{"lineNumber":46,"author":{"gitId":"Nixx162"},"content":"            table.widthProperty().multiply(0.5));","lastModifiedDate":"2023-11-03"},{"lineNumber":47,"author":{"gitId":"Nixx162"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":48,"author":{"gitId":"Nixx162"},"content":"        eventsCol.setCellFactory(col -\u003e new TableEventsCell(personList));","lastModifiedDate":"2023-11-02"},{"lineNumber":49,"author":{"gitId":"Nixx162"},"content":"        eventsCol.minWidthProperty().bind(","lastModifiedDate":"2023-11-03"},{"lineNumber":50,"author":{"gitId":"Nixx162"},"content":"            table.widthProperty().multiply(0.3));","lastModifiedDate":"2023-11-03"},{"lineNumber":51,"author":{"gitId":"Nixx162"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":52,"author":{"gitId":"Nixx162"},"content":"        table.setItems(personList);","lastModifiedDate":"2023-11-02"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":55,"author":{"gitId":"Nixx162"},"content":"    class TableContactsCell extends TableCell\u003cPerson, Void\u003e {","lastModifiedDate":"2023-11-03"},{"lineNumber":56,"author":{"gitId":"Nixx162"},"content":"        private ObservableList\u003cPerson\u003e personList;","lastModifiedDate":"2023-11-02"},{"lineNumber":57,"author":{"gitId":"Nixx162"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":58,"author":{"gitId":"Nixx162"},"content":"        public TableContactsCell(ObservableList\u003cPerson\u003e personList) {","lastModifiedDate":"2023-11-03"},{"lineNumber":59,"author":{"gitId":"Nixx162"},"content":"            this.personList \u003d personList;","lastModifiedDate":"2023-11-02"},{"lineNumber":60,"author":{"gitId":"Nixx162"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":61,"author":{"gitId":"Nixx162"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2023-11-02"},{"lineNumber":63,"author":{"gitId":"Nixx162"},"content":"        public void updateIndex(int index) {","lastModifiedDate":"2023-11-02"},{"lineNumber":64,"author":{"gitId":"Nixx162"},"content":"            super.updateIndex(index);","lastModifiedDate":"2023-11-02"},{"lineNumber":65,"author":{"gitId":"Nixx162"},"content":"            if (isEmpty() || index \u003c 0) {","lastModifiedDate":"2023-11-02"},{"lineNumber":66,"author":{"gitId":"Nixx162"},"content":"                setGraphic(null);","lastModifiedDate":"2023-11-02"},{"lineNumber":67,"author":{"gitId":"Nixx162"},"content":"            } else {","lastModifiedDate":"2023-11-02"},{"lineNumber":68,"author":{"gitId":"Nixx162"},"content":"                setGraphic(new ContactCard(personList.get(index)).getRoot());","lastModifiedDate":"2023-11-03"},{"lineNumber":69,"author":{"gitId":"Nixx162"},"content":"            }","lastModifiedDate":"2023-11-02"},{"lineNumber":70,"author":{"gitId":"Nixx162"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":71,"author":{"gitId":"Nixx162"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":72,"author":{"gitId":"Nixx162"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":73,"author":{"gitId":"Nixx162"},"content":"    class TableNotesCell extends TableCell\u003cPerson, Void\u003e {","lastModifiedDate":"2023-11-02"},{"lineNumber":74,"author":{"gitId":"Nixx162"},"content":"        private ObservableList\u003cPerson\u003e personList;","lastModifiedDate":"2023-11-02"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":76,"author":{"gitId":"Nixx162"},"content":"        public TableNotesCell(ObservableList\u003cPerson\u003e personList) {","lastModifiedDate":"2023-11-02"},{"lineNumber":77,"author":{"gitId":"Nixx162"},"content":"            this.personList \u003d personList;","lastModifiedDate":"2023-11-02"},{"lineNumber":78,"author":{"gitId":"Nixx162"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":79,"author":{"gitId":"Nixx162"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":80,"author":{"gitId":"Nixx162"},"content":"        @Override","lastModifiedDate":"2023-11-02"},{"lineNumber":81,"author":{"gitId":"Nixx162"},"content":"        public void updateIndex(int index) {","lastModifiedDate":"2023-11-02"},{"lineNumber":82,"author":{"gitId":"Nixx162"},"content":"            super.updateIndex(index);","lastModifiedDate":"2023-11-02"},{"lineNumber":83,"author":{"gitId":"Nixx162"},"content":"            if (isEmpty() || index \u003c 0) {","lastModifiedDate":"2023-11-02"},{"lineNumber":84,"author":{"gitId":"-"},"content":"                setGraphic(null);","lastModifiedDate":"2023-11-02"},{"lineNumber":85,"author":{"gitId":"Nixx162"},"content":"            } else {","lastModifiedDate":"2023-11-02"},{"lineNumber":86,"author":{"gitId":"Nixx162"},"content":"                ListView\u003cNote\u003e notes \u003d new ListView\u003c\u003e();","lastModifiedDate":"2023-11-02"},{"lineNumber":87,"author":{"gitId":"Nixx162"},"content":"                notes.setItems(personList.get(index).getNotes());","lastModifiedDate":"2023-11-02"},{"lineNumber":88,"author":{"gitId":"Nixx162"},"content":"                notes.setCellFactory(cell -\u003e new NoteCell());","lastModifiedDate":"2023-11-02"},{"lineNumber":89,"author":{"gitId":"Nixx162"},"content":"                notes.setPrefHeight(120);","lastModifiedDate":"2023-11-02"},{"lineNumber":90,"author":{"gitId":"Nixx162"},"content":"                setGraphic(notes);","lastModifiedDate":"2023-11-02"},{"lineNumber":91,"author":{"gitId":"Nixx162"},"content":"            }","lastModifiedDate":"2023-11-02"},{"lineNumber":92,"author":{"gitId":"Nixx162"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":93,"author":{"gitId":"Nixx162"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":94,"author":{"gitId":"Nixx162"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":95,"author":{"gitId":"Nixx162"},"content":"    class TableEventsCell extends TableCell\u003cPerson, Void\u003e {","lastModifiedDate":"2023-11-02"},{"lineNumber":96,"author":{"gitId":"Nixx162"},"content":"        private ObservableList\u003cPerson\u003e personList;","lastModifiedDate":"2023-11-02"},{"lineNumber":97,"author":{"gitId":"Nixx162"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":98,"author":{"gitId":"Nixx162"},"content":"        public TableEventsCell(ObservableList\u003cPerson\u003e personList) {","lastModifiedDate":"2023-11-02"},{"lineNumber":99,"author":{"gitId":"Nixx162"},"content":"            this.personList \u003d personList;","lastModifiedDate":"2023-11-02"},{"lineNumber":100,"author":{"gitId":"Nixx162"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":101,"author":{"gitId":"Nixx162"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":102,"author":{"gitId":"Nixx162"},"content":"        @Override","lastModifiedDate":"2023-11-02"},{"lineNumber":103,"author":{"gitId":"Nixx162"},"content":"        public void updateIndex(int index) {","lastModifiedDate":"2023-11-02"},{"lineNumber":104,"author":{"gitId":"Nixx162"},"content":"            super.updateIndex(index);","lastModifiedDate":"2023-11-02"},{"lineNumber":105,"author":{"gitId":"Nixx162"},"content":"            if (isEmpty() || index \u003c 0) {","lastModifiedDate":"2023-11-02"},{"lineNumber":106,"author":{"gitId":"Nixx162"},"content":"                setGraphic(null);","lastModifiedDate":"2023-11-02"},{"lineNumber":107,"author":{"gitId":"Nixx162"},"content":"            } else {","lastModifiedDate":"2023-11-02"},{"lineNumber":108,"author":{"gitId":"Nixx162"},"content":"                ListView\u003cEvent\u003e events \u003d new ListView\u003c\u003e();","lastModifiedDate":"2023-11-02"},{"lineNumber":109,"author":{"gitId":"Nixx162"},"content":"                events.setItems(personList.get(index).getEvents());","lastModifiedDate":"2023-11-02"},{"lineNumber":110,"author":{"gitId":"Nixx162"},"content":"                events.setCellFactory(cell -\u003e new EventCell());","lastModifiedDate":"2023-11-02"},{"lineNumber":111,"author":{"gitId":"Nixx162"},"content":"                events.setPrefHeight(120);","lastModifiedDate":"2023-11-02"},{"lineNumber":112,"author":{"gitId":"Nixx162"},"content":"                setGraphic(events);","lastModifiedDate":"2023-11-02"},{"lineNumber":113,"author":{"gitId":"Nixx162"},"content":"            }","lastModifiedDate":"2023-11-02"},{"lineNumber":114,"author":{"gitId":"Nixx162"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":115,"author":{"gitId":"Nixx162"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":116,"author":{"gitId":"Nixx162"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":117,"author":{"gitId":"Nixx162"},"content":"    class TableIndexCell extends TableCell\u003cPerson, Void\u003e {","lastModifiedDate":"2023-11-02"},{"lineNumber":118,"author":{"gitId":"Nixx162"},"content":"        @Override","lastModifiedDate":"2023-11-02"},{"lineNumber":119,"author":{"gitId":"Nixx162"},"content":"        public void updateIndex(int index) {","lastModifiedDate":"2023-11-02"},{"lineNumber":120,"author":{"gitId":"Nixx162"},"content":"            super.updateIndex(index);","lastModifiedDate":"2023-11-02"},{"lineNumber":121,"author":{"gitId":"Nixx162"},"content":"            if (isEmpty() || index \u003c 0) {","lastModifiedDate":"2023-11-02"},{"lineNumber":122,"author":{"gitId":"-"},"content":"                setText(null);","lastModifiedDate":"2023-11-02"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2023-11-02"},{"lineNumber":124,"author":{"gitId":"Nixx162"},"content":"                setText(Integer.toString(index + 1));","lastModifiedDate":"2023-11-02"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2023-11-02"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":129,"author":{"gitId":"Nixx162"},"content":"    private class NoteCell extends ListCell\u003cNote\u003e {","lastModifiedDate":"2023-11-02"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":131,"author":{"gitId":"Nixx162"},"content":"        protected void updateItem(Note note, boolean empty) {","lastModifiedDate":"2023-11-02"},{"lineNumber":132,"author":{"gitId":"Nixx162"},"content":"            super.updateItem(note, empty);","lastModifiedDate":"2023-11-02"},{"lineNumber":133,"author":{"gitId":"Nixx162"},"content":"            if (empty || note \u003d\u003d null) {","lastModifiedDate":"2023-11-02"},{"lineNumber":134,"author":{"gitId":"Nixx162"},"content":"                setGraphic(null);","lastModifiedDate":"2023-11-02"},{"lineNumber":135,"author":{"gitId":"Nixx162"},"content":"                setText(null);","lastModifiedDate":"2023-11-02"},{"lineNumber":136,"author":{"gitId":"Nixx162"},"content":"            } else {","lastModifiedDate":"2023-11-02"},{"lineNumber":137,"author":{"gitId":"Nixx162"},"content":"                setText((getIndex() + 1) + \". \" + note.getUiText());","lastModifiedDate":"2023-11-02"},{"lineNumber":138,"author":{"gitId":"Nixx162"},"content":"                setTextFill(Color.WHITE);","lastModifiedDate":"2023-11-02"},{"lineNumber":139,"author":{"gitId":"Nixx162"},"content":"            }","lastModifiedDate":"2023-11-02"},{"lineNumber":140,"author":{"gitId":"Nixx162"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":141,"author":{"gitId":"Nixx162"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":143,"author":{"gitId":"Nixx162"},"content":"    private class EventCell extends ListCell\u003cEvent\u003e {","lastModifiedDate":"2023-11-02"},{"lineNumber":144,"author":{"gitId":"Nixx162"},"content":"        @Override","lastModifiedDate":"2023-11-02"},{"lineNumber":145,"author":{"gitId":"Nixx162"},"content":"        protected void updateItem(Event event, boolean empty) {","lastModifiedDate":"2023-11-02"},{"lineNumber":146,"author":{"gitId":"Nixx162"},"content":"            super.updateItem(event, empty);","lastModifiedDate":"2023-11-02"},{"lineNumber":147,"author":{"gitId":"Nixx162"},"content":"            if (empty || event \u003d\u003d null) {","lastModifiedDate":"2023-11-02"},{"lineNumber":148,"author":{"gitId":"-"},"content":"                setGraphic(null);","lastModifiedDate":"2016-09-21"},{"lineNumber":149,"author":{"gitId":"-"},"content":"                setText(null);","lastModifiedDate":"2016-09-21"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2016-09-21"},{"lineNumber":151,"author":{"gitId":"Nixx162"},"content":"                setText((getIndex() + 1) + \". \" + event.getUiText());","lastModifiedDate":"2023-11-02"},{"lineNumber":152,"author":{"gitId":"Nixx162"},"content":"                setTextFill(Color.WHITE);","lastModifiedDate":"2023-11-02"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-21"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-21"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":156,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"-":45,"Nixx162":111}},{"path":"src/main/resources/view/ContactCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Nixx162"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-11-03"},{"lineNumber":2,"author":{"gitId":"Nixx162"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":3,"author":{"gitId":"Nixx162"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-11-03"},{"lineNumber":4,"author":{"gitId":"Nixx162"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-11-03"},{"lineNumber":5,"author":{"gitId":"Nixx162"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2023-11-03"},{"lineNumber":6,"author":{"gitId":"Nixx162"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2023-11-03"},{"lineNumber":7,"author":{"gitId":"Nixx162"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2023-11-03"},{"lineNumber":8,"author":{"gitId":"Nixx162"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-11-03"},{"lineNumber":9,"author":{"gitId":"Nixx162"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2023-11-03"},{"lineNumber":10,"author":{"gitId":"Nixx162"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-11-03"},{"lineNumber":11,"author":{"gitId":"Nixx162"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":12,"author":{"gitId":"Nixx162"},"content":"\u003cHBox fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-11-03"},{"lineNumber":13,"author":{"gitId":"Nixx162"},"content":"    \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-11-03"},{"lineNumber":14,"author":{"gitId":"Nixx162"},"content":"        \u003ccolumnConstraints\u003e","lastModifiedDate":"2023-11-03"},{"lineNumber":15,"author":{"gitId":"Nixx162"},"content":"            \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"500\" /\u003e","lastModifiedDate":"2023-11-03"},{"lineNumber":16,"author":{"gitId":"Nixx162"},"content":"        \u003c/columnConstraints\u003e","lastModifiedDate":"2023-11-03"},{"lineNumber":17,"author":{"gitId":"Nixx162"},"content":"        \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2023-11-03"},{"lineNumber":18,"author":{"gitId":"Nixx162"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2023-11-03"},{"lineNumber":19,"author":{"gitId":"Nixx162"},"content":"                \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2023-11-03"},{"lineNumber":20,"author":{"gitId":"Nixx162"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2023-11-03"},{"lineNumber":21,"author":{"gitId":"Nixx162"},"content":"            \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2023-11-03"},{"lineNumber":22,"author":{"gitId":"Nixx162"},"content":"                \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2023-11-03"},{"lineNumber":23,"author":{"gitId":"Nixx162"},"content":"                    \u003cminWidth\u003e","lastModifiedDate":"2023-11-03"},{"lineNumber":24,"author":{"gitId":"Nixx162"},"content":"                        \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2023-11-03"},{"lineNumber":25,"author":{"gitId":"Nixx162"},"content":"                        \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2023-11-03"},{"lineNumber":26,"author":{"gitId":"Nixx162"},"content":"                    \u003c/minWidth\u003e","lastModifiedDate":"2023-11-03"},{"lineNumber":27,"author":{"gitId":"Nixx162"},"content":"                \u003c/Label\u003e","lastModifiedDate":"2023-11-03"},{"lineNumber":28,"author":{"gitId":"Nixx162"},"content":"                \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2023-11-03"},{"lineNumber":29,"author":{"gitId":"Nixx162"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2023-11-03"},{"lineNumber":30,"author":{"gitId":"Nixx162"},"content":"            \u003cFlowPane fx:id\u003d\"tags\"/\u003e","lastModifiedDate":"2023-11-03"},{"lineNumber":31,"author":{"gitId":"Nixx162"},"content":"            \u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\"/\u003e","lastModifiedDate":"2023-11-03"},{"lineNumber":32,"author":{"gitId":"Nixx162"},"content":"            \u003cLabel fx:id\u003d\"mobile\" styleClass\u003d\"cell_small_label\" /\u003e","lastModifiedDate":"2023-11-03"},{"lineNumber":33,"author":{"gitId":"Nixx162"},"content":"            \u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\"/\u003e","lastModifiedDate":"2023-11-03"},{"lineNumber":34,"author":{"gitId":"Nixx162"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":35,"author":{"gitId":"Nixx162"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2023-11-03"},{"lineNumber":36,"author":{"gitId":"Nixx162"},"content":"    \u003c/GridPane\u003e","lastModifiedDate":"2023-11-03"},{"lineNumber":37,"author":{"gitId":"Nixx162"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2023-11-03"}],"authorContributionMap":{"Nixx162":37}},{"path":"src/main/resources/view/DarkTheme.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":".background {","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    background-color: #383838; /* Used in the default.html file */","lastModifiedDate":"2017-03-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":".label {","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":9,"author":{"gitId":"Nixx162"},"content":"    -fx-text-fill: #ff9100;","lastModifiedDate":"2023-11-02"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":".label-bright {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":".label-header {","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    -fx-font-size: 32pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":".text-field {","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":".tab-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":".tab-pane .tab-header-area {","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    -fx-min-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    -fx-max-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":".table-view {","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    -fx-base: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    -fx-control-inner-background: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    -fx-table-cell-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    -fx-table-header-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    -fx-padding: 5;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":".table-view .column-header-background {","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":".table-view .column-header, .table-view .filler {","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    -fx-size: 35;","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    -fx-border-width: 0 0 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    -fx-border-color:","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        derive(-fx-base, 80%)","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0 10 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":".table-view .column-header .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    -fx-font-size: 20pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    -fx-alignment: center-left;","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":".table-view:focused .table-row-cell:filled:focused:selected {","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":".split-pane:horizontal .split-pane-divider {","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-03-02"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    -fx-border-color: transparent transparent transparent #4d4d4d;","lastModifiedDate":"2017-03-02"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":".split-pane {","lastModifiedDate":"2016-08-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    -fx-border-radius: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":".list-view {","lastModifiedDate":"2017-03-02"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    -fx-padding: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2018-01-10"},{"lineNumber":94,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":96,"author":{"gitId":"-"},"content":".list-cell {","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    -fx-label-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    -fx-graphic-text-gap : 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":".list-cell:filled:even {","lastModifiedDate":"2017-03-02"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    -fx-background-color: #3c3e3f;","lastModifiedDate":"2017-03-02"},{"lineNumber":104,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":106,"author":{"gitId":"-"},"content":".list-cell:filled:odd {","lastModifiedDate":"2017-03-02"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    -fx-background-color: #515658;","lastModifiedDate":"2017-03-02"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":110,"author":{"gitId":"-"},"content":".list-cell:filled:selected {","lastModifiedDate":"2017-03-02"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    -fx-background-color: #424d5f;","lastModifiedDate":"2017-03-02"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":114,"author":{"gitId":"-"},"content":".list-cell:filled:selected #cardPane {","lastModifiedDate":"2017-03-02"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    -fx-border-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":117,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":119,"author":{"gitId":"-"},"content":".list-cell .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":121,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":".cell_big_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    -fx-font-size: 16px;","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"Nixx162"},"content":"    -fx-text-fill: #ffffff;","lastModifiedDate":"2023-11-03"},{"lineNumber":127,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":".cell_small_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\";","lastModifiedDate":"2022-01-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    -fx-font-size: 13px;","lastModifiedDate":"2017-03-02"},{"lineNumber":132,"author":{"gitId":"Nixx162"},"content":"    -fx-text-fill: #ffffff;","lastModifiedDate":"2023-11-03"},{"lineNumber":133,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":".stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":137,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":".pane-with-border {","lastModifiedDate":"2017-05-15"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-05-09"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     -fx-border-color: derive(#1d1d1d, 10%);","lastModifiedDate":"2017-05-09"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     -fx-border-top-width: 1px;","lastModifiedDate":"2017-05-09"},{"lineNumber":143,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-09"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":145,"author":{"gitId":"-"},"content":".status-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2018-12-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":149,"author":{"gitId":"-"},"content":".result-display {","lastModifiedDate":"2016-09-14"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2017-03-02"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":156,"author":{"gitId":"-"},"content":".result-display .label {","lastModifiedDate":"2016-09-14"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    -fx-text-fill: black !important;","lastModifiedDate":"2016-09-14"},{"lineNumber":158,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":".status-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    -fx-padding: 4px;","lastModifiedDate":"2018-12-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    -fx-pref-height: 30px;","lastModifiedDate":"2018-12-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":".status-bar-with-border {","lastModifiedDate":"2016-08-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":".status-bar-with-border .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":".grid-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":181,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":183,"author":{"gitId":"-"},"content":".grid-pane .stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":185,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":187,"author":{"gitId":"-"},"content":".context-menu {","lastModifiedDate":"2016-08-08"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":189,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":191,"author":{"gitId":"-"},"content":".context-menu .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":195,"author":{"gitId":"-"},"content":".menu-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":197,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":199,"author":{"gitId":"-"},"content":".menu-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    -fx-font-size: 14pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":204,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":206,"author":{"gitId":"-"},"content":".menu .left-container {","lastModifiedDate":"2016-08-08"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    -fx-background-color: black;","lastModifiedDate":"2016-08-08"},{"lineNumber":208,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":210,"author":{"gitId":"-"},"content":"/*","lastModifiedDate":"2016-08-08"},{"lineNumber":211,"author":{"gitId":"-"},"content":" * Metro style Push Button","lastModifiedDate":"2016-08-08"},{"lineNumber":212,"author":{"gitId":"-"},"content":" * Author: Pedro Duque Vieira","lastModifiedDate":"2016-08-08"},{"lineNumber":213,"author":{"gitId":"-"},"content":" * http://pixelduke.wordpress.com/2012/10/23/jmetro-windows-8-controls-on-java/","lastModifiedDate":"2016-08-08"},{"lineNumber":214,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":215,"author":{"gitId":"-"},"content":".button {","lastModifiedDate":"2016-08-08"},{"lineNumber":216,"author":{"gitId":"-"},"content":"    -fx-padding: 5 22 5 22;","lastModifiedDate":"2016-08-08"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    -fx-border-color: #e2e2e2;","lastModifiedDate":"2016-08-08"},{"lineNumber":218,"author":{"gitId":"-"},"content":"    -fx-border-width: 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":219,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\", Helvetica, Arial, sans-serif;","lastModifiedDate":"2022-01-13"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    -fx-text-fill: #d8d8d8;","lastModifiedDate":"2016-08-08"},{"lineNumber":224,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0 0 0 0, 0, 1, 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":225,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":227,"author":{"gitId":"-"},"content":".button:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":228,"author":{"gitId":"-"},"content":"    -fx-background-color: #3a3a3a;","lastModifiedDate":"2016-08-08"},{"lineNumber":229,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":231,"author":{"gitId":"-"},"content":".button:pressed, .button:default:hover:pressed {","lastModifiedDate":"2016-08-08"},{"lineNumber":232,"author":{"gitId":"-"},"content":"  -fx-background-color: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  -fx-text-fill: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":236,"author":{"gitId":"-"},"content":".button:focused {","lastModifiedDate":"2016-08-08"},{"lineNumber":237,"author":{"gitId":"-"},"content":"    -fx-border-color: white, white;","lastModifiedDate":"2016-08-08"},{"lineNumber":238,"author":{"gitId":"-"},"content":"    -fx-border-width: 1, 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    -fx-border-style: solid, segments(1, 1);","lastModifiedDate":"2016-08-08"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    -fx-border-radius: 0, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":241,"author":{"gitId":"-"},"content":"    -fx-border-insets: 1 1 1 1, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":242,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":244,"author":{"gitId":"-"},"content":".button:disabled, .button:default:disabled {","lastModifiedDate":"2016-08-08"},{"lineNumber":245,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.4;","lastModifiedDate":"2016-08-08"},{"lineNumber":246,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":247,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":248,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":250,"author":{"gitId":"-"},"content":".button:default {","lastModifiedDate":"2016-08-08"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":252,"author":{"gitId":"-"},"content":"    -fx-text-fill: #ffffff;","lastModifiedDate":"2016-08-08"},{"lineNumber":253,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":255,"author":{"gitId":"-"},"content":".button:default:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(-fx-focus-color, 30%);","lastModifiedDate":"2016-08-08"},{"lineNumber":257,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":259,"author":{"gitId":"-"},"content":".dialog-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":261,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":263,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.button-bar \u003e *.container {","lastModifiedDate":"2016-08-08"},{"lineNumber":264,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":265,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":267,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.label.content {","lastModifiedDate":"2016-08-08"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2016-08-08"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2016-08-08"},{"lineNumber":270,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":271,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":273,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel {","lastModifiedDate":"2016-08-08"},{"lineNumber":274,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":275,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":277,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel *.label {","lastModifiedDate":"2016-08-08"},{"lineNumber":278,"author":{"gitId":"-"},"content":"    -fx-font-size: 18px;","lastModifiedDate":"2016-08-08"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    -fx-font-style: italic;","lastModifiedDate":"2016-08-08"},{"lineNumber":280,"author":{"gitId":"-"},"content":"    -fx-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":281,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":282,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":284,"author":{"gitId":"-"},"content":".scroll-bar {","lastModifiedDate":"2017-03-02"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-03-02"},{"lineNumber":286,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":288,"author":{"gitId":"-"},"content":".scroll-bar .thumb {","lastModifiedDate":"2016-08-15"},{"lineNumber":289,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":290,"author":{"gitId":"-"},"content":"    -fx-background-insets: 3;","lastModifiedDate":"2016-08-15"},{"lineNumber":291,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":293,"author":{"gitId":"-"},"content":".scroll-bar .increment-button, .scroll-bar .decrement-button {","lastModifiedDate":"2016-08-15"},{"lineNumber":294,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-15"},{"lineNumber":295,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-15"},{"lineNumber":296,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":298,"author":{"gitId":"-"},"content":".scroll-bar .increment-arrow, .scroll-bar .decrement-arrow {","lastModifiedDate":"2016-08-15"},{"lineNumber":299,"author":{"gitId":"-"},"content":"    -fx-shape: \" \";","lastModifiedDate":"2016-08-15"},{"lineNumber":300,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":302,"author":{"gitId":"-"},"content":".scroll-bar:vertical .increment-arrow, .scroll-bar:vertical .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":303,"author":{"gitId":"-"},"content":"    -fx-padding: 1 8 1 8;","lastModifiedDate":"2016-08-15"},{"lineNumber":304,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":305,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":306,"author":{"gitId":"-"},"content":".scroll-bar:horizontal .increment-arrow, .scroll-bar:horizontal .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":307,"author":{"gitId":"-"},"content":"    -fx-padding: 8 1 8 1;","lastModifiedDate":"2016-08-18"},{"lineNumber":308,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":309,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":310,"author":{"gitId":"-"},"content":"#cardPane {","lastModifiedDate":"2016-08-08"},{"lineNumber":311,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":312,"author":{"gitId":"-"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":313,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":314,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":315,"author":{"gitId":"-"},"content":"#commandTypeLabel {","lastModifiedDate":"2016-08-08"},{"lineNumber":316,"author":{"gitId":"-"},"content":"    -fx-font-size: 11px;","lastModifiedDate":"2016-08-08"},{"lineNumber":317,"author":{"gitId":"-"},"content":"    -fx-text-fill: #F70D1A;","lastModifiedDate":"2016-08-08"},{"lineNumber":318,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":320,"author":{"gitId":"-"},"content":"#commandTextField {","lastModifiedDate":"2017-03-02"},{"lineNumber":321,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent #383838 transparent #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":322,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":323,"author":{"gitId":"-"},"content":"    -fx-border-color: #383838 #383838 #ffffff #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":324,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":325,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":326,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":327,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":328,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":329,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":331,"author":{"gitId":"-"},"content":"#filterField, #personListPanel, #personWebpage {","lastModifiedDate":"2016-08-15"},{"lineNumber":332,"author":{"gitId":"-"},"content":"    -fx-effect: innershadow(gaussian, black, 10, 0, 0, 0);","lastModifiedDate":"2016-08-15"},{"lineNumber":333,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":334,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":335,"author":{"gitId":"-"},"content":"#resultDisplay .content {","lastModifiedDate":"2017-03-02"},{"lineNumber":336,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent, #383838, transparent, #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":337,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":338,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":339,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":340,"author":{"gitId":"-"},"content":"#tags {","lastModifiedDate":"2016-12-18"},{"lineNumber":341,"author":{"gitId":"-"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2016-12-18"},{"lineNumber":342,"author":{"gitId":"-"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":343,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":344,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":345,"author":{"gitId":"-"},"content":"#tags .label {","lastModifiedDate":"2016-12-18"},{"lineNumber":346,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-12-18"},{"lineNumber":347,"author":{"gitId":"-"},"content":"    -fx-background-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":348,"author":{"gitId":"-"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":349,"author":{"gitId":"-"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":350,"author":{"gitId":"-"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":351,"author":{"gitId":"-"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2016-12-18"},{"lineNumber":352,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"}],"authorContributionMap":{"-":349,"Nixx162":3}},{"path":"src/main/resources/view/EventListWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Nixx162"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-11-03"},{"lineNumber":2,"author":{"gitId":"Nixx162"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":3,"author":{"gitId":"Nixx162"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2023-11-03"},{"lineNumber":4,"author":{"gitId":"Nixx162"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-11-03"},{"lineNumber":5,"author":{"gitId":"Nixx162"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2023-11-03"},{"lineNumber":6,"author":{"gitId":"Nixx162"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-11-03"},{"lineNumber":7,"author":{"gitId":"Nixx162"},"content":"\u003c?import javafx.scene.control.TableView?\u003e","lastModifiedDate":"2023-11-03"},{"lineNumber":8,"author":{"gitId":"Nixx162"},"content":"\u003c?import javafx.scene.control.TableColumn?\u003e","lastModifiedDate":"2023-11-03"},{"lineNumber":9,"author":{"gitId":"Nixx162"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-11-03"},{"lineNumber":10,"author":{"gitId":"Nixx162"},"content":"\u003c?import javafx.stage.Stage?\u003e","lastModifiedDate":"2023-11-03"},{"lineNumber":11,"author":{"gitId":"Nixx162"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":12,"author":{"gitId":"Nixx162"},"content":"\u003cfx:root resizable\u003d\"true\" title\u003d\"Event List\" type\u003d\"javafx.stage.Stage\"","lastModifiedDate":"2023-11-03"},{"lineNumber":13,"author":{"gitId":"Nixx162"},"content":"    xmlns\u003d\"http://javafx.com/javafx/17\"","lastModifiedDate":"2023-11-03"},{"lineNumber":14,"author":{"gitId":"Nixx162"},"content":"    xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-11-03"},{"lineNumber":15,"author":{"gitId":"Nixx162"},"content":"    \u003cscene\u003e","lastModifiedDate":"2023-11-03"},{"lineNumber":16,"author":{"gitId":"Nixx162"},"content":"        \u003cScene\u003e","lastModifiedDate":"2023-11-03"},{"lineNumber":17,"author":{"gitId":"Nixx162"},"content":"            \u003cstylesheets\u003e","lastModifiedDate":"2023-11-03"},{"lineNumber":18,"author":{"gitId":"Nixx162"},"content":"                \u003cURL value\u003d\"@EventWindow.css\" /\u003e","lastModifiedDate":"2023-11-03"},{"lineNumber":19,"author":{"gitId":"Nixx162"},"content":"            \u003c/stylesheets\u003e","lastModifiedDate":"2023-11-03"},{"lineNumber":20,"author":{"gitId":"Nixx162"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":21,"author":{"gitId":"Nixx162"},"content":"            \u003cHBox alignment\u003d\"CENTER\" fx:id\u003d\"eventListContainer\"\u003e","lastModifiedDate":"2023-11-03"},{"lineNumber":22,"author":{"gitId":"Nixx162"},"content":"                \u003cchildren\u003e","lastModifiedDate":"2023-11-03"},{"lineNumber":23,"author":{"gitId":"Nixx162"},"content":"                    \u003cTableView fx:id\u003d\"table\"\u003e","lastModifiedDate":"2023-11-03"},{"lineNumber":24,"author":{"gitId":"Nixx162"},"content":"                        \u003ccolumns\u003e","lastModifiedDate":"2023-11-03"},{"lineNumber":25,"author":{"gitId":"Nixx162"},"content":"                            \u003cTableColumn fx:id\u003d\"indexCol\" text\u003d\"ID\"/\u003e","lastModifiedDate":"2023-11-03"},{"lineNumber":26,"author":{"gitId":"Nixx162"},"content":"                            \u003cTableColumn fx:id\u003d\"nameCol\" text\u003d\"Name\"/\u003e","lastModifiedDate":"2023-11-03"},{"lineNumber":27,"author":{"gitId":"Nixx162"},"content":"                            \u003cTableColumn fx:id\u003d\"startCol\" text\u003d\"Start Time\"/\u003e","lastModifiedDate":"2023-11-03"},{"lineNumber":28,"author":{"gitId":"Nixx162"},"content":"                            \u003cTableColumn fx:id\u003d\"endCol\" text\u003d\"End Time\"/\u003e","lastModifiedDate":"2023-11-03"},{"lineNumber":29,"author":{"gitId":"Nixx162"},"content":"                            \u003cTableColumn fx:id\u003d\"locCol\" text\u003d\"Location\"/\u003e","lastModifiedDate":"2023-11-03"},{"lineNumber":30,"author":{"gitId":"Nixx162"},"content":"                            \u003cTableColumn fx:id\u003d\"infoCol\" text\u003d\"Info\"/\u003e","lastModifiedDate":"2023-11-03"},{"lineNumber":31,"author":{"gitId":"Nixx162"},"content":"                        \u003c/columns\u003e","lastModifiedDate":"2023-11-03"},{"lineNumber":32,"author":{"gitId":"Nixx162"},"content":"                    \u003c/TableView\u003e","lastModifiedDate":"2023-11-03"},{"lineNumber":33,"author":{"gitId":"Nixx162"},"content":"                \u003c/children\u003e","lastModifiedDate":"2023-11-03"},{"lineNumber":34,"author":{"gitId":"Nixx162"},"content":"                \u003copaqueInsets\u003e","lastModifiedDate":"2023-11-03"},{"lineNumber":35,"author":{"gitId":"Nixx162"},"content":"                    \u003cInsets bottom\u003d\"10.0\" left\u003d\"5.0\" right\u003d\"10.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2023-11-03"},{"lineNumber":36,"author":{"gitId":"Nixx162"},"content":"                \u003c/opaqueInsets\u003e","lastModifiedDate":"2023-11-03"},{"lineNumber":37,"author":{"gitId":"Nixx162"},"content":"                \u003cpadding\u003e","lastModifiedDate":"2023-11-03"},{"lineNumber":38,"author":{"gitId":"Nixx162"},"content":"                    \u003cInsets bottom\u003d\"10.0\" left\u003d\"5.0\" right\u003d\"10.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2023-11-03"},{"lineNumber":39,"author":{"gitId":"Nixx162"},"content":"                \u003c/padding\u003e","lastModifiedDate":"2023-11-03"},{"lineNumber":40,"author":{"gitId":"Nixx162"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2023-11-03"},{"lineNumber":41,"author":{"gitId":"Nixx162"},"content":"        \u003c/Scene\u003e","lastModifiedDate":"2023-11-03"},{"lineNumber":42,"author":{"gitId":"Nixx162"},"content":"    \u003c/scene\u003e","lastModifiedDate":"2023-11-03"},{"lineNumber":43,"author":{"gitId":"Nixx162"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-11-03"}],"authorContributionMap":{"Nixx162":43}},{"path":"src/main/resources/view/EventWindow.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Nixx162"},"content":"#helpMessageContainer {","lastModifiedDate":"2023-11-03"},{"lineNumber":2,"author":{"gitId":"Nixx162"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2023-11-03"},{"lineNumber":3,"author":{"gitId":"Nixx162"},"content":"}","lastModifiedDate":"2023-11-03"}],"authorContributionMap":{"Nixx162":3}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":12,"author":{"gitId":"Nixx162"},"content":"\u003c?import javafx.stage.Stage?\u003e","lastModifiedDate":"2023-11-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":14,"author":{"gitId":"larrywang0701"},"content":"\u003cfx:root minHeight\u003d\"600\" minWidth\u003d\"450\" onCloseRequest\u003d\"#handleExit\" title\u003d\"KeepInTouch\" type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/20.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-11-10"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \u003cImage url\u003d\"@/images/address_book_32.png\" /\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@DarkTheme.css\" /\u003e","lastModifiedDate":"2016-08-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Extensions.css\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"      \u003cVBox\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        \u003cMenuBar fx:id\u003d\"menuBar\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2017-06-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        \u003c/MenuBar\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":35,"author":{"gitId":"Nixx162"},"content":"        \u003cStackPane fx:id\u003d\"commandBoxPlaceholder\" prefHeight\u003d\"35.0\" prefWidth\u003d\"340.0\" styleClass\u003d\"pane-with-border\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2023-11-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":37,"author":{"gitId":"Nixx162"},"content":"            \u003cInsets bottom\u003d\"5\" left\u003d\"10\" right\u003d\"10\" top\u003d\"5\" /\u003e","lastModifiedDate":"2023-11-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":41,"author":{"gitId":"Nixx162"},"content":"        \u003cStackPane fx:id\u003d\"resultDisplayPlaceholder\" maxHeight\u003d\"100\" minHeight\u003d\"200\" prefHeight\u003d\"100\" styleClass\u003d\"pane-with-border\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2023-11-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":43,"author":{"gitId":"Nixx162"},"content":"            \u003cInsets bottom\u003d\"5\" left\u003d\"10\" right\u003d\"10\" top\u003d\"5\" /\u003e","lastModifiedDate":"2023-11-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":47,"author":{"gitId":"Nixx162"},"content":"        \u003cVBox fx:id\u003d\"personList\" minWidth\u003d\"340\" prefWidth\u003d\"340\" styleClass\u003d\"pane-with-border\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-11-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":49,"author":{"gitId":"Nixx162"},"content":"            \u003cInsets bottom\u003d\"10\" left\u003d\"10\" right\u003d\"10\" top\u003d\"10\" /\u003e","lastModifiedDate":"2023-11-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":51,"author":{"gitId":"-"},"content":"          \u003cStackPane fx:id\u003d\"personListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2017-06-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" VBox.vgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"larrywang0701":1,"-":50,"Nixx162":7}},{"path":"src/main/resources/view/PersonListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"Nixx162"},"content":"\u003c?import javafx.scene.control.TableView?\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"Nixx162"},"content":"\u003c?import javafx.scene.control.TableColumn?\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-07-27"},{"lineNumber":8,"author":{"gitId":"Nixx162"},"content":"  \u003cTableView fx:id\u003d\"table\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":9,"author":{"gitId":"Nixx162"},"content":"    \u003ccolumns\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":10,"author":{"gitId":"Nixx162"},"content":"      \u003cTableColumn fx:id\u003d\"indexCol\" text\u003d\"ID\"/\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":11,"author":{"gitId":"Nixx162"},"content":"      \u003cTableColumn fx:id\u003d\"contactCol\" text\u003d\"Contact\"/\u003e","lastModifiedDate":"2023-11-03"},{"lineNumber":12,"author":{"gitId":"Nixx162"},"content":"      \u003cTableColumn fx:id\u003d\"notesCol\" text\u003d\"Notes\"/\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":13,"author":{"gitId":"Nixx162"},"content":"      \u003cTableColumn fx:id\u003d\"eventsCol\" text\u003d\"Events\"/\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":14,"author":{"gitId":"Nixx162"},"content":"    \u003c/columns\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":15,"author":{"gitId":"Nixx162"},"content":"  \u003c/TableView\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":16,"author":{"gitId":"-"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":6,"Nixx162":10}},{"path":"src/main/resources/view/ResultDisplay.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.TextArea?\u003e","lastModifiedDate":"2016-10-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-06-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003cStackPane fx:id\u003d\"placeHolder\" styleClass\u003d\"pane-with-border\" xmlns\u003d\"http://javafx.com/javafx/17\"","lastModifiedDate":"2023-07-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2016-12-24"},{"lineNumber":8,"author":{"gitId":"Nixx162"},"content":"  \u003cTextArea fx:id\u003d\"resultDisplay\" editable\u003d\"false\" styleClass\u003d\"result-display\" prefHeight\u003d\"500\" /\u003e","lastModifiedDate":"2023-11-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c/StackPane\u003e","lastModifiedDate":"2017-06-22"}],"authorContributionMap":{"-":8,"Nixx162":1}},{"path":"src/test/java/seedu/address/commons/util/DateTimeUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"larrywang0701"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"larrywang0701"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"larrywang0701"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-11-01"},{"lineNumber":5,"author":{"gitId":"larrywang0701"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"larrywang0701"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-11-01"},{"lineNumber":7,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"larrywang0701"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"larrywang0701"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"larrywang0701"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"larrywang0701"},"content":"public class DateTimeUtilTest {","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"larrywang0701"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"larrywang0701"},"content":"    public void test_parseStringCorrectFormat_pass() {","lastModifiedDate":"2023-11-01"},{"lineNumber":16,"author":{"gitId":"larrywang0701"},"content":"        assertEquals(DateTimeUtil.parseString(\"12:00\"), LocalDateTime.now()","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"larrywang0701"},"content":"                .withHour(12).withMinute(0).withSecond(0).withNano(0));","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"larrywang0701"},"content":"        assertEquals(DateTimeUtil.parseString(\"02:00\"), LocalDateTime.now()","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"larrywang0701"},"content":"                .withHour(2).withMinute(0).withSecond(0).withNano(0));","lastModifiedDate":"2023-10-12"},{"lineNumber":20,"author":{"gitId":"larrywang0701"},"content":"        assertEquals(DateTimeUtil.parseString(\"02:01\"), LocalDateTime.now()","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"larrywang0701"},"content":"                .withHour(2).withMinute(1).withSecond(0).withNano(0));","lastModifiedDate":"2023-10-12"},{"lineNumber":22,"author":{"gitId":"larrywang0701"},"content":"        assertEquals(DateTimeUtil.parseString(\"02:10\"), LocalDateTime.now()","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"larrywang0701"},"content":"                .withHour(2).withMinute(10).withSecond(0).withNano(0));","lastModifiedDate":"2023-10-12"},{"lineNumber":24,"author":{"gitId":"larrywang0701"},"content":"        assertEquals(DateTimeUtil.parseString(\"00:10\"), LocalDateTime.now()","lastModifiedDate":"2023-10-12"},{"lineNumber":25,"author":{"gitId":"larrywang0701"},"content":"                .withHour(0).withMinute(10).withSecond(0).withNano(0));","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"larrywang0701"},"content":"        assertEquals(DateTimeUtil.parseString(\"05:01:45\"), LocalDateTime.now()","lastModifiedDate":"2023-10-12"},{"lineNumber":27,"author":{"gitId":"larrywang0701"},"content":"                .withHour(5).withMinute(1).withSecond(45).withNano(0));","lastModifiedDate":"2023-10-12"},{"lineNumber":28,"author":{"gitId":"larrywang0701"},"content":"        assertEquals(DateTimeUtil.parseString(\"2023-10-12 02:10\"),","lastModifiedDate":"2023-10-12"},{"lineNumber":29,"author":{"gitId":"larrywang0701"},"content":"                LocalDateTime.parse(\"2023-10-12T02:10:00\"));","lastModifiedDate":"2023-10-12"},{"lineNumber":30,"author":{"gitId":"larrywang0701"},"content":"        assertEquals(DateTimeUtil.parseString(\"2023-10-12 20:05\"),","lastModifiedDate":"2023-10-12"},{"lineNumber":31,"author":{"gitId":"larrywang0701"},"content":"                LocalDateTime.parse(\"2023-10-12T20:05:00\"));","lastModifiedDate":"2023-10-12"},{"lineNumber":32,"author":{"gitId":"larrywang0701"},"content":"        assertEquals(DateTimeUtil.parseString(\"2023-10-12 20:05:30\"),","lastModifiedDate":"2023-10-12"},{"lineNumber":33,"author":{"gitId":"larrywang0701"},"content":"                LocalDateTime.parse(\"2023-10-12T20:05:30\"));","lastModifiedDate":"2023-10-12"},{"lineNumber":34,"author":{"gitId":"larrywang0701"},"content":"        assertEquals(DateTimeUtil.parseString(\"2023-10-12\"),","lastModifiedDate":"2023-10-13"},{"lineNumber":35,"author":{"gitId":"larrywang0701"},"content":"                LocalDateTime.parse(\"2023-10-12T00:00:00\"));","lastModifiedDate":"2023-10-13"},{"lineNumber":36,"author":{"gitId":"larrywang0701"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":37,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":38,"author":{"gitId":"larrywang0701"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":39,"author":{"gitId":"larrywang0701"},"content":"    public void test_parseStringWrongFormat_fails() {","lastModifiedDate":"2023-11-01"},{"lineNumber":40,"author":{"gitId":"larrywang0701"},"content":"        assertThrows(DateTimeParseException.class, () -\u003e DateTimeUtil.parseString(\"002:00\"));","lastModifiedDate":"2023-10-12"},{"lineNumber":41,"author":{"gitId":"larrywang0701"},"content":"        assertThrows(DateTimeParseException.class, () -\u003e DateTimeUtil.parseString(\"02:0\"));","lastModifiedDate":"2023-10-12"},{"lineNumber":42,"author":{"gitId":"larrywang0701"},"content":"        assertThrows(DateTimeParseException.class, () -\u003e DateTimeUtil.parseString(\"12:1\"));","lastModifiedDate":"2023-10-12"},{"lineNumber":43,"author":{"gitId":"larrywang0701"},"content":"        assertThrows(DateTimeParseException.class, () -\u003e DateTimeUtil.parseString(\"2023-10-12 0:0:0\"));","lastModifiedDate":"2023-10-12"},{"lineNumber":44,"author":{"gitId":"larrywang0701"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":45,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":46,"author":{"gitId":"larrywang0701"},"content":"    @Test","lastModifiedDate":"2023-11-01"},{"lineNumber":47,"author":{"gitId":"larrywang0701"},"content":"    public void test_withinInterval_pass() {","lastModifiedDate":"2023-11-01"},{"lineNumber":48,"author":{"gitId":"larrywang0701"},"content":"        // start time \u003d\u003d check time \u003d\u003d end time","lastModifiedDate":"2023-11-01"},{"lineNumber":49,"author":{"gitId":"larrywang0701"},"content":"        assertTrue(DateTimeUtil.withinTimeInterval(","lastModifiedDate":"2023-11-01"},{"lineNumber":50,"author":{"gitId":"larrywang0701"},"content":"                LocalDateTime.parse(\"2023-11-02T20:10:00\"),","lastModifiedDate":"2023-11-01"},{"lineNumber":51,"author":{"gitId":"larrywang0701"},"content":"                LocalDateTime.parse(\"2023-11-02T20:10:00\"),","lastModifiedDate":"2023-11-01"},{"lineNumber":52,"author":{"gitId":"larrywang0701"},"content":"                LocalDateTime.parse(\"2023-11-02T20:10:00\")));","lastModifiedDate":"2023-11-01"},{"lineNumber":53,"author":{"gitId":"larrywang0701"},"content":"        // start time \u003c check time \u003c end time","lastModifiedDate":"2023-11-01"},{"lineNumber":54,"author":{"gitId":"larrywang0701"},"content":"        assertTrue(DateTimeUtil.withinTimeInterval(","lastModifiedDate":"2023-11-01"},{"lineNumber":55,"author":{"gitId":"larrywang0701"},"content":"                LocalDateTime.parse(\"2023-11-01T20:10:00\"),","lastModifiedDate":"2023-11-01"},{"lineNumber":56,"author":{"gitId":"larrywang0701"},"content":"                LocalDateTime.parse(\"2023-11-03T20:10:00\"),","lastModifiedDate":"2023-11-01"},{"lineNumber":57,"author":{"gitId":"larrywang0701"},"content":"                LocalDateTime.parse(\"2023-11-02T20:10:00\")));","lastModifiedDate":"2023-11-01"},{"lineNumber":58,"author":{"gitId":"larrywang0701"},"content":"        // start time \u003c\u003d check time \u003c end time","lastModifiedDate":"2023-11-01"},{"lineNumber":59,"author":{"gitId":"larrywang0701"},"content":"        assertTrue(DateTimeUtil.withinTimeInterval(","lastModifiedDate":"2023-11-01"},{"lineNumber":60,"author":{"gitId":"larrywang0701"},"content":"                LocalDateTime.parse(\"2023-11-01T20:10:00\"),","lastModifiedDate":"2023-11-01"},{"lineNumber":61,"author":{"gitId":"larrywang0701"},"content":"                LocalDateTime.parse(\"2023-11-03T20:10:00\"),","lastModifiedDate":"2023-11-01"},{"lineNumber":62,"author":{"gitId":"larrywang0701"},"content":"                LocalDateTime.parse(\"2023-11-01T20:10:00\")));","lastModifiedDate":"2023-11-01"},{"lineNumber":63,"author":{"gitId":"larrywang0701"},"content":"        // start time \u003c check time \u003c\u003d end time","lastModifiedDate":"2023-11-01"},{"lineNumber":64,"author":{"gitId":"larrywang0701"},"content":"        assertTrue(DateTimeUtil.withinTimeInterval(","lastModifiedDate":"2023-11-01"},{"lineNumber":65,"author":{"gitId":"larrywang0701"},"content":"                LocalDateTime.parse(\"2023-11-01T20:10:00\"),","lastModifiedDate":"2023-11-01"},{"lineNumber":66,"author":{"gitId":"larrywang0701"},"content":"                LocalDateTime.parse(\"2023-11-03T20:10:00\"),","lastModifiedDate":"2023-11-01"},{"lineNumber":67,"author":{"gitId":"larrywang0701"},"content":"                LocalDateTime.parse(\"2023-11-03T20:10:00\")));","lastModifiedDate":"2023-11-01"},{"lineNumber":68,"author":{"gitId":"larrywang0701"},"content":"        // check time \u003c start time","lastModifiedDate":"2023-11-01"},{"lineNumber":69,"author":{"gitId":"larrywang0701"},"content":"        assertFalse(DateTimeUtil.withinTimeInterval(","lastModifiedDate":"2023-11-01"},{"lineNumber":70,"author":{"gitId":"larrywang0701"},"content":"                LocalDateTime.parse(\"2023-11-02T20:10:00\"),","lastModifiedDate":"2023-11-01"},{"lineNumber":71,"author":{"gitId":"larrywang0701"},"content":"                LocalDateTime.parse(\"2023-11-03T20:10:00\"),","lastModifiedDate":"2023-11-01"},{"lineNumber":72,"author":{"gitId":"larrywang0701"},"content":"                LocalDateTime.parse(\"2023-11-01T20:10:00\")));","lastModifiedDate":"2023-11-01"},{"lineNumber":73,"author":{"gitId":"larrywang0701"},"content":"        // check time \u003e end time","lastModifiedDate":"2023-11-01"},{"lineNumber":74,"author":{"gitId":"larrywang0701"},"content":"        assertFalse(DateTimeUtil.withinTimeInterval(","lastModifiedDate":"2023-11-01"},{"lineNumber":75,"author":{"gitId":"larrywang0701"},"content":"                LocalDateTime.parse(\"2023-11-01T20:10:00\"),","lastModifiedDate":"2023-11-01"},{"lineNumber":76,"author":{"gitId":"larrywang0701"},"content":"                LocalDateTime.parse(\"2023-11-03T20:10:00\"),","lastModifiedDate":"2023-11-01"},{"lineNumber":77,"author":{"gitId":"larrywang0701"},"content":"                LocalDateTime.parse(\"2023-11-05T20:10:00\")));","lastModifiedDate":"2023-11-01"},{"lineNumber":78,"author":{"gitId":"larrywang0701"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":79,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":80,"author":{"gitId":"larrywang0701"},"content":"    @Test","lastModifiedDate":"2023-11-01"},{"lineNumber":81,"author":{"gitId":"larrywang0701"},"content":"    public void test_timeIntervalsOverlap_pass() {","lastModifiedDate":"2023-11-01"},{"lineNumber":82,"author":{"gitId":"larrywang0701"},"content":"        // interval A and B does not overlap","lastModifiedDate":"2023-11-01"},{"lineNumber":83,"author":{"gitId":"larrywang0701"},"content":"        assertFalse(DateTimeUtil.timeIntervalsOverlap(","lastModifiedDate":"2023-11-01"},{"lineNumber":84,"author":{"gitId":"larrywang0701"},"content":"                LocalDateTime.parse(\"2023-11-02T20:10:00\"),","lastModifiedDate":"2023-11-01"},{"lineNumber":85,"author":{"gitId":"larrywang0701"},"content":"                LocalDateTime.parse(\"2023-11-03T20:10:00\"),","lastModifiedDate":"2023-11-01"},{"lineNumber":86,"author":{"gitId":"larrywang0701"},"content":"                LocalDateTime.parse(\"2023-11-04T20:10:00\"),","lastModifiedDate":"2023-11-01"},{"lineNumber":87,"author":{"gitId":"larrywang0701"},"content":"                LocalDateTime.parse(\"2023-11-05T20:10:00\")));","lastModifiedDate":"2023-11-01"},{"lineNumber":88,"author":{"gitId":"larrywang0701"},"content":"        // same intervals","lastModifiedDate":"2023-11-01"},{"lineNumber":89,"author":{"gitId":"larrywang0701"},"content":"        assertTrue(DateTimeUtil.timeIntervalsOverlap(","lastModifiedDate":"2023-11-01"},{"lineNumber":90,"author":{"gitId":"larrywang0701"},"content":"                LocalDateTime.parse(\"2023-11-02T20:10:00\"),","lastModifiedDate":"2023-11-01"},{"lineNumber":91,"author":{"gitId":"larrywang0701"},"content":"                LocalDateTime.parse(\"2023-11-05T20:10:00\"),","lastModifiedDate":"2023-11-01"},{"lineNumber":92,"author":{"gitId":"larrywang0701"},"content":"                LocalDateTime.parse(\"2023-11-02T20:10:00\"),","lastModifiedDate":"2023-11-01"},{"lineNumber":93,"author":{"gitId":"larrywang0701"},"content":"                LocalDateTime.parse(\"2023-11-05T20:10:00\")));","lastModifiedDate":"2023-11-01"},{"lineNumber":94,"author":{"gitId":"larrywang0701"},"content":"        // start A \u003d\u003d start B","lastModifiedDate":"2023-11-01"},{"lineNumber":95,"author":{"gitId":"larrywang0701"},"content":"        assertTrue(DateTimeUtil.timeIntervalsOverlap(","lastModifiedDate":"2023-11-01"},{"lineNumber":96,"author":{"gitId":"larrywang0701"},"content":"                LocalDateTime.parse(\"2023-11-02T20:10:00\"),","lastModifiedDate":"2023-11-01"},{"lineNumber":97,"author":{"gitId":"larrywang0701"},"content":"                LocalDateTime.parse(\"2023-11-03T20:10:00\"),","lastModifiedDate":"2023-11-01"},{"lineNumber":98,"author":{"gitId":"larrywang0701"},"content":"                LocalDateTime.parse(\"2023-11-02T20:10:00\"),","lastModifiedDate":"2023-11-01"},{"lineNumber":99,"author":{"gitId":"larrywang0701"},"content":"                LocalDateTime.parse(\"2023-11-04T20:10:00\")));","lastModifiedDate":"2023-11-01"},{"lineNumber":100,"author":{"gitId":"larrywang0701"},"content":"        // end A \u003d\u003d end B","lastModifiedDate":"2023-11-01"},{"lineNumber":101,"author":{"gitId":"larrywang0701"},"content":"        assertTrue(DateTimeUtil.timeIntervalsOverlap(","lastModifiedDate":"2023-11-01"},{"lineNumber":102,"author":{"gitId":"larrywang0701"},"content":"                LocalDateTime.parse(\"2023-11-01T20:10:00\"),","lastModifiedDate":"2023-11-01"},{"lineNumber":103,"author":{"gitId":"larrywang0701"},"content":"                LocalDateTime.parse(\"2023-11-05T20:10:00\"),","lastModifiedDate":"2023-11-01"},{"lineNumber":104,"author":{"gitId":"larrywang0701"},"content":"                LocalDateTime.parse(\"2023-11-02T20:10:00\"),","lastModifiedDate":"2023-11-01"},{"lineNumber":105,"author":{"gitId":"larrywang0701"},"content":"                LocalDateTime.parse(\"2023-11-05T20:10:00\")));","lastModifiedDate":"2023-11-01"},{"lineNumber":106,"author":{"gitId":"larrywang0701"},"content":"        // start A within interval B","lastModifiedDate":"2023-11-01"},{"lineNumber":107,"author":{"gitId":"larrywang0701"},"content":"        assertTrue(DateTimeUtil.timeIntervalsOverlap(","lastModifiedDate":"2023-11-01"},{"lineNumber":108,"author":{"gitId":"larrywang0701"},"content":"                LocalDateTime.parse(\"2023-11-03T20:10:00\"),","lastModifiedDate":"2023-11-01"},{"lineNumber":109,"author":{"gitId":"larrywang0701"},"content":"                LocalDateTime.parse(\"2023-11-05T20:10:00\"),","lastModifiedDate":"2023-11-01"},{"lineNumber":110,"author":{"gitId":"larrywang0701"},"content":"                LocalDateTime.parse(\"2023-11-02T20:10:00\"),","lastModifiedDate":"2023-11-01"},{"lineNumber":111,"author":{"gitId":"larrywang0701"},"content":"                LocalDateTime.parse(\"2023-11-04T20:10:00\")));","lastModifiedDate":"2023-11-01"},{"lineNumber":112,"author":{"gitId":"larrywang0701"},"content":"        // end A within interval B","lastModifiedDate":"2023-11-01"},{"lineNumber":113,"author":{"gitId":"larrywang0701"},"content":"        assertTrue(DateTimeUtil.timeIntervalsOverlap(","lastModifiedDate":"2023-11-01"},{"lineNumber":114,"author":{"gitId":"larrywang0701"},"content":"                LocalDateTime.parse(\"2023-11-01T20:10:00\"),","lastModifiedDate":"2023-11-01"},{"lineNumber":115,"author":{"gitId":"larrywang0701"},"content":"                LocalDateTime.parse(\"2023-11-03T20:10:00\"),","lastModifiedDate":"2023-11-01"},{"lineNumber":116,"author":{"gitId":"larrywang0701"},"content":"                LocalDateTime.parse(\"2023-11-02T20:10:00\"),","lastModifiedDate":"2023-11-01"},{"lineNumber":117,"author":{"gitId":"larrywang0701"},"content":"                LocalDateTime.parse(\"2023-11-04T20:10:00\")));","lastModifiedDate":"2023-11-01"},{"lineNumber":118,"author":{"gitId":"larrywang0701"},"content":"        // start B within interval A","lastModifiedDate":"2023-11-01"},{"lineNumber":119,"author":{"gitId":"larrywang0701"},"content":"        assertTrue(DateTimeUtil.timeIntervalsOverlap(","lastModifiedDate":"2023-11-01"},{"lineNumber":120,"author":{"gitId":"larrywang0701"},"content":"                LocalDateTime.parse(\"2023-11-01T20:10:00\"),","lastModifiedDate":"2023-11-01"},{"lineNumber":121,"author":{"gitId":"larrywang0701"},"content":"                LocalDateTime.parse(\"2023-11-03T20:10:00\"),","lastModifiedDate":"2023-11-01"},{"lineNumber":122,"author":{"gitId":"larrywang0701"},"content":"                LocalDateTime.parse(\"2023-11-02T20:10:00\"),","lastModifiedDate":"2023-11-01"},{"lineNumber":123,"author":{"gitId":"larrywang0701"},"content":"                LocalDateTime.parse(\"2023-11-05T20:10:00\")));","lastModifiedDate":"2023-11-01"},{"lineNumber":124,"author":{"gitId":"larrywang0701"},"content":"        // end B within interval A","lastModifiedDate":"2023-11-01"},{"lineNumber":125,"author":{"gitId":"larrywang0701"},"content":"        assertTrue(DateTimeUtil.timeIntervalsOverlap(","lastModifiedDate":"2023-11-01"},{"lineNumber":126,"author":{"gitId":"larrywang0701"},"content":"                LocalDateTime.parse(\"2023-11-04T20:10:00\"),","lastModifiedDate":"2023-11-01"},{"lineNumber":127,"author":{"gitId":"larrywang0701"},"content":"                LocalDateTime.parse(\"2023-11-06T20:10:00\"),","lastModifiedDate":"2023-11-01"},{"lineNumber":128,"author":{"gitId":"larrywang0701"},"content":"                LocalDateTime.parse(\"2023-11-02T20:10:00\"),","lastModifiedDate":"2023-11-01"},{"lineNumber":129,"author":{"gitId":"larrywang0701"},"content":"                LocalDateTime.parse(\"2023-11-05T20:10:00\")));","lastModifiedDate":"2023-11-01"},{"lineNumber":130,"author":{"gitId":"larrywang0701"},"content":"        // interval A totally covers interval B","lastModifiedDate":"2023-11-01"},{"lineNumber":131,"author":{"gitId":"larrywang0701"},"content":"        assertTrue(DateTimeUtil.timeIntervalsOverlap(","lastModifiedDate":"2023-11-01"},{"lineNumber":132,"author":{"gitId":"larrywang0701"},"content":"                LocalDateTime.parse(\"2023-11-01T20:10:00\"),","lastModifiedDate":"2023-11-01"},{"lineNumber":133,"author":{"gitId":"larrywang0701"},"content":"                LocalDateTime.parse(\"2023-11-05T20:10:00\"),","lastModifiedDate":"2023-11-01"},{"lineNumber":134,"author":{"gitId":"larrywang0701"},"content":"                LocalDateTime.parse(\"2023-11-02T20:10:00\"),","lastModifiedDate":"2023-11-01"},{"lineNumber":135,"author":{"gitId":"larrywang0701"},"content":"                LocalDateTime.parse(\"2023-11-03T20:10:00\")));","lastModifiedDate":"2023-11-01"},{"lineNumber":136,"author":{"gitId":"larrywang0701"},"content":"        // interval B totally covers interval A","lastModifiedDate":"2023-11-01"},{"lineNumber":137,"author":{"gitId":"larrywang0701"},"content":"        assertTrue(DateTimeUtil.timeIntervalsOverlap(","lastModifiedDate":"2023-11-01"},{"lineNumber":138,"author":{"gitId":"larrywang0701"},"content":"                LocalDateTime.parse(\"2023-11-02T20:10:00\"),","lastModifiedDate":"2023-11-01"},{"lineNumber":139,"author":{"gitId":"larrywang0701"},"content":"                LocalDateTime.parse(\"2023-11-03T20:10:00\"),","lastModifiedDate":"2023-11-01"},{"lineNumber":140,"author":{"gitId":"larrywang0701"},"content":"                LocalDateTime.parse(\"2023-11-01T20:10:00\"),","lastModifiedDate":"2023-11-01"},{"lineNumber":141,"author":{"gitId":"larrywang0701"},"content":"                LocalDateTime.parse(\"2023-11-05T20:10:00\")));","lastModifiedDate":"2023-11-01"},{"lineNumber":142,"author":{"gitId":"larrywang0701"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":143,"author":{"gitId":"larrywang0701"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"larrywang0701":143}},{"path":"src/test/java/seedu/address/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX;","lastModifiedDate":"2023-07-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-07-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.nio.file.AccessDeniedException;","lastModifiedDate":"2023-06-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2023-10-12"},{"lineNumber":22,"author":{"gitId":"larrywang0701"},"content":"import seedu.address.logic.commands.AddPersonCommand;","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2023-10-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2023-10-12"},{"lineNumber":25,"author":{"gitId":"larrywang0701"},"content":"import seedu.address.logic.commands.ListPersonCommand;","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2016-09-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy IO exception\");","lastModifiedDate":"2023-06-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_AD_EXCEPTION \u003d new AccessDeniedException(\"dummy access denied exception\");","lastModifiedDate":"2023-06-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                new JsonAddressBookStorage(temporaryFolder.resolve(\"addressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-06-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":65,"author":{"gitId":"larrywang0701"},"content":"        String deleteCommand \u003d \"delete contact 9\";","lastModifiedDate":"2023-10-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertCommandException(deleteCommand, MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2017-06-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2019-03-14"},{"lineNumber":71,"author":{"gitId":"larrywang0701"},"content":"        String listCommand \u003d ListCommand.COMMAND_WORD + \" \" + ListPersonCommand.SECONDARY_COMMAND_WORD;","lastModifiedDate":"2023-10-12"},{"lineNumber":72,"author":{"gitId":"larrywang0701"},"content":"        assertCommandSuccess(listCommand, ListPersonCommand.MESSAGE_SUCCESS, model);","lastModifiedDate":"2023-10-12"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2019-04-25"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertCommandFailureForExceptionFromStorage(DUMMY_IO_EXCEPTION, String.format(","lastModifiedDate":"2023-06-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                LogicManager.FILE_OPS_ERROR_FORMAT, DUMMY_IO_EXCEPTION.getMessage()));","lastModifiedDate":"2023-06-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-06-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-06-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsAdException_throwsCommandException() {","lastModifiedDate":"2023-06-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertCommandFailureForExceptionFromStorage(DUMMY_AD_EXCEPTION, String.format(","lastModifiedDate":"2023-06-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"                LogicManager.FILE_OPS_PERMISSION_ERROR_FORMAT, DUMMY_AD_EXCEPTION.getMessage()));","lastModifiedDate":"2023-06-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":92,"author":{"gitId":"larrywang0701"},"content":"    @Test","lastModifiedDate":"2023-11-14"},{"lineNumber":93,"author":{"gitId":"larrywang0701"},"content":"    public void getFilteredEventList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2023-11-14"},{"lineNumber":94,"author":{"gitId":"larrywang0701"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredEventList().remove(0));","lastModifiedDate":"2023-11-14"},{"lineNumber":95,"author":{"gitId":"larrywang0701"},"content":"    }","lastModifiedDate":"2023-11-14"},{"lineNumber":96,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":97,"author":{"gitId":"larrywang0701"},"content":"    @Test","lastModifiedDate":"2023-11-14"},{"lineNumber":98,"author":{"gitId":"larrywang0701"},"content":"    public void getSortedFilteredEventList_throwsNullPointerExceptionWhenListNotGenerated() {","lastModifiedDate":"2023-11-14"},{"lineNumber":99,"author":{"gitId":"larrywang0701"},"content":"        assertThrows(NullPointerException.class, () -\u003e logic.getSortedFilteredEventList());","lastModifiedDate":"2023-11-14"},{"lineNumber":100,"author":{"gitId":"larrywang0701"},"content":"    }","lastModifiedDate":"2023-11-14"},{"lineNumber":101,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":137,"author":{"gitId":"-"},"content":"            String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-05-31"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2019-03-14"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":156,"author":{"gitId":"-"},"content":"     * Tests the Logic component\u0027s handling of an {@code IOException} thrown by the Storage component.","lastModifiedDate":"2023-06-13"},{"lineNumber":157,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2023-06-13"},{"lineNumber":158,"author":{"gitId":"-"},"content":"     * @param e the exception to be thrown by the Storage component","lastModifiedDate":"2023-06-13"},{"lineNumber":159,"author":{"gitId":"-"},"content":"     * @param expectedMessage the message expected inside exception thrown by the Logic component","lastModifiedDate":"2023-06-13"},{"lineNumber":160,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    private void assertCommandFailureForExceptionFromStorage(IOException e, String expectedMessage) {","lastModifiedDate":"2023-06-13"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        Path prefPath \u003d temporaryFolder.resolve(\"ExceptionUserPrefs.json\");","lastModifiedDate":"2023-06-13"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        // Inject LogicManager with an AddressBookStorage that throws the IOException e when saving","lastModifiedDate":"2023-06-13"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(prefPath) {","lastModifiedDate":"2023-06-13"},{"lineNumber":166,"author":{"gitId":"-"},"content":"            @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":167,"author":{"gitId":"-"},"content":"            public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath)","lastModifiedDate":"2023-06-13"},{"lineNumber":168,"author":{"gitId":"-"},"content":"                    throws IOException {","lastModifiedDate":"2023-06-13"},{"lineNumber":169,"author":{"gitId":"-"},"content":"                throw e;","lastModifiedDate":"2023-06-13"},{"lineNumber":170,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2023-06-13"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2023-06-13"},{"lineNumber":174,"author":{"gitId":"-"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ExceptionUserPrefs.json\"));","lastModifiedDate":"2023-06-13"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2023-06-13"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2023-06-13"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        // Triggers the saveAddressBook method by executing an add command","lastModifiedDate":"2023-06-13"},{"lineNumber":180,"author":{"gitId":"larrywang0701"},"content":"        String addCommand \u003d AddCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2023-10-12"},{"lineNumber":181,"author":{"gitId":"larrywang0701"},"content":"                + AddPersonCommand.SECONDARY_COMMAND_WORD","lastModifiedDate":"2023-10-12"},{"lineNumber":182,"author":{"gitId":"larrywang0701"},"content":"                + NAME_DESC_AMY + PHONE_DESC_AMY","lastModifiedDate":"2023-10-12"},{"lineNumber":183,"author":{"gitId":"-"},"content":"                + EMAIL_DESC_AMY + ADDRESS_DESC_AMY;","lastModifiedDate":"2023-06-13"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withTags().build();","lastModifiedDate":"2023-06-13"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2023-06-13"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(expectedPerson);","lastModifiedDate":"2023-06-13"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        assertCommandFailure(addCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2023-06-13"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":189,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"larrywang0701":18,"-":171}},{"path":"src/test/java/seedu/address/logic/commands/AddEventCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"larrywang0701"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"larrywang0701"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"larrywang0701"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"larrywang0701"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"larrywang0701"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"larrywang0701"},"content":"import org.junit.jupiter.api.function.ThrowingSupplier;","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"larrywang0701"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"larrywang0701"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"larrywang0701"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"larrywang0701"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"larrywang0701"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"larrywang0701"},"content":"import seedu.address.model.person.ContactID;","lastModifiedDate":"2023-10-25"},{"lineNumber":16,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"larrywang0701"},"content":"public class AddEventCommandTest {","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"larrywang0701"},"content":"    private static final Event VALID_EVENT_0 \u003d new Event(\"Have a meeting\", \"02:00\", \"04:00\",","lastModifiedDate":"2023-10-12"},{"lineNumber":20,"author":{"gitId":"larrywang0701"},"content":"            \"COM1\", \"Discuss project\");","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"larrywang0701"},"content":"    private static final Event VALID_EVENT_SAME_NAME_0 \u003d new Event(\"Have a meeting\", \"05:00\", \"07:00\",","lastModifiedDate":"2023-10-12"},{"lineNumber":22,"author":{"gitId":"larrywang0701"},"content":"            \"COM1\", \"Discuss project again\");","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":24,"author":{"gitId":"larrywang0701"},"content":"    private Model model;","lastModifiedDate":"2023-10-12"},{"lineNumber":25,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"larrywang0701"},"content":"    @BeforeEach","lastModifiedDate":"2023-10-12"},{"lineNumber":27,"author":{"gitId":"larrywang0701"},"content":"    public void setUp() {","lastModifiedDate":"2023-10-12"},{"lineNumber":28,"author":{"gitId":"larrywang0701"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-12"},{"lineNumber":29,"author":{"gitId":"larrywang0701"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":30,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":31,"author":{"gitId":"larrywang0701"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":32,"author":{"gitId":"larrywang0701"},"content":"    public void execute_correctCommand_success() {","lastModifiedDate":"2023-10-25"},{"lineNumber":33,"author":{"gitId":"larrywang0701"},"content":"        ContactID contactID \u003d ContactID.fromInt(1);","lastModifiedDate":"2023-10-25"},{"lineNumber":34,"author":{"gitId":"larrywang0701"},"content":"        assertCommandSuccessWithFeedback(() -\u003e new AddEventCommand(contactID, VALID_EVENT_0)","lastModifiedDate":"2023-10-25"},{"lineNumber":35,"author":{"gitId":"larrywang0701"},"content":"                .execute(model), AddEventCommand.MESSAGE_SUCCESS + VALID_EVENT_0.getName());","lastModifiedDate":"2023-10-12"},{"lineNumber":36,"author":{"gitId":"larrywang0701"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":37,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":38,"author":{"gitId":"larrywang0701"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":39,"author":{"gitId":"larrywang0701"},"content":"    public void execute_personNotExist_fails() {","lastModifiedDate":"2023-10-25"},{"lineNumber":40,"author":{"gitId":"larrywang0701"},"content":"        ContactID contactID \u003d ContactID.fromInt(99999);","lastModifiedDate":"2023-10-25"},{"lineNumber":41,"author":{"gitId":"larrywang0701"},"content":"        assertCommandFailWithFeedback(() -\u003e new AddEventCommand(contactID, VALID_EVENT_SAME_NAME_0)","lastModifiedDate":"2023-10-25"},{"lineNumber":42,"author":{"gitId":"larrywang0701"},"content":"                .execute(model), AddEventCommand.MESSAGE_CONTACT_NOT_FOUND + contactID);","lastModifiedDate":"2023-10-25"},{"lineNumber":43,"author":{"gitId":"larrywang0701"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":44,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":45,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":46,"author":{"gitId":"larrywang0701"},"content":"    private void assertCommandSuccessWithFeedback(ThrowingSupplier\u003cCommandResult\u003e function, String result) {","lastModifiedDate":"2023-10-12"},{"lineNumber":47,"author":{"gitId":"larrywang0701"},"content":"        try {","lastModifiedDate":"2023-10-12"},{"lineNumber":48,"author":{"gitId":"larrywang0701"},"content":"            assertEquals(function.get(), new CommandResult(result));","lastModifiedDate":"2023-10-12"},{"lineNumber":49,"author":{"gitId":"larrywang0701"},"content":"        } catch (Throwable e) {","lastModifiedDate":"2023-10-12"},{"lineNumber":50,"author":{"gitId":"larrywang0701"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", e);","lastModifiedDate":"2023-10-12"},{"lineNumber":51,"author":{"gitId":"larrywang0701"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":52,"author":{"gitId":"larrywang0701"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":53,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":54,"author":{"gitId":"larrywang0701"},"content":"    private void assertCommandFailWithFeedback(ThrowingSupplier\u003cCommandResult\u003e function, String errResult) {","lastModifiedDate":"2023-10-12"},{"lineNumber":55,"author":{"gitId":"larrywang0701"},"content":"        try {","lastModifiedDate":"2023-10-12"},{"lineNumber":56,"author":{"gitId":"larrywang0701"},"content":"            function.get();","lastModifiedDate":"2023-10-12"},{"lineNumber":57,"author":{"gitId":"larrywang0701"},"content":"        } catch (Throwable e) {","lastModifiedDate":"2023-10-12"},{"lineNumber":58,"author":{"gitId":"larrywang0701"},"content":"            if (!(e instanceof CommandException)) {","lastModifiedDate":"2023-10-12"},{"lineNumber":59,"author":{"gitId":"larrywang0701"},"content":"                throw new AssertionError(\"Execution of command failed but not due to CommandException.\");","lastModifiedDate":"2023-10-12"},{"lineNumber":60,"author":{"gitId":"larrywang0701"},"content":"            }","lastModifiedDate":"2023-10-12"},{"lineNumber":61,"author":{"gitId":"larrywang0701"},"content":"            assertEquals(e.getMessage(), errResult);","lastModifiedDate":"2023-10-12"},{"lineNumber":62,"author":{"gitId":"larrywang0701"},"content":"            return;","lastModifiedDate":"2023-10-12"},{"lineNumber":63,"author":{"gitId":"larrywang0701"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":64,"author":{"gitId":"larrywang0701"},"content":"        throw new AssertionError(\"Execution of command should fail.\");","lastModifiedDate":"2023-10-12"},{"lineNumber":65,"author":{"gitId":"larrywang0701"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":66,"author":{"gitId":"larrywang0701"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"larrywang0701":66}},{"path":"src/test/java/seedu/address/logic/commands/AddNoteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"josepholim"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-15"},{"lineNumber":2,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":3,"author":{"gitId":"josepholim"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-15"},{"lineNumber":4,"author":{"gitId":"josepholim"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-16"},{"lineNumber":5,"author":{"gitId":"josepholim"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-16"},{"lineNumber":6,"author":{"gitId":"josepholim"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NOTE_A_PERSON_ID;","lastModifiedDate":"2023-10-16"},{"lineNumber":7,"author":{"gitId":"josepholim"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NOTE_B_PERSON_ID;","lastModifiedDate":"2023-10-16"},{"lineNumber":8,"author":{"gitId":"josepholim"},"content":"import static seedu.address.testutil.TypicalNotes.NOTE_A;","lastModifiedDate":"2023-10-16"},{"lineNumber":9,"author":{"gitId":"josepholim"},"content":"import static seedu.address.testutil.TypicalNotes.NOTE_B;","lastModifiedDate":"2023-10-16"},{"lineNumber":10,"author":{"gitId":"josepholim"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2023-10-15"},{"lineNumber":11,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":12,"author":{"gitId":"josepholim"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-10-15"},{"lineNumber":13,"author":{"gitId":"josepholim"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-15"},{"lineNumber":14,"author":{"gitId":"josepholim"},"content":"import org.junit.jupiter.api.function.ThrowingSupplier;","lastModifiedDate":"2023-10-15"},{"lineNumber":15,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":16,"author":{"gitId":"josepholim"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-11-13"},{"lineNumber":17,"author":{"gitId":"josepholim"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-15"},{"lineNumber":18,"author":{"gitId":"josepholim"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-15"},{"lineNumber":19,"author":{"gitId":"josepholim"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-10-15"},{"lineNumber":20,"author":{"gitId":"josepholim"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-10-15"},{"lineNumber":21,"author":{"gitId":"josepholim"},"content":"import seedu.address.model.note.Note;","lastModifiedDate":"2023-10-15"},{"lineNumber":22,"author":{"gitId":"josepholim"},"content":"import seedu.address.model.person.ContactID;","lastModifiedDate":"2023-10-27"},{"lineNumber":23,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":24,"author":{"gitId":"josepholim"},"content":"public class AddNoteCommandTest {","lastModifiedDate":"2023-10-15"},{"lineNumber":25,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":26,"author":{"gitId":"josepholim"},"content":"    private static final Note VALID_NOTE_0 \u003d new Note(\"Meeting Topics\",","lastModifiedDate":"2023-10-15"},{"lineNumber":27,"author":{"gitId":"josepholim"},"content":"            \"The topic is about the framework design of the project\");","lastModifiedDate":"2023-10-15"},{"lineNumber":28,"author":{"gitId":"josepholim"},"content":"    private static final Note VALID_NOTE_SAME_TITLE_0 \u003d new Note(\"Meeting Topics\",","lastModifiedDate":"2023-10-15"},{"lineNumber":29,"author":{"gitId":"josepholim"},"content":"            \"Applications for SWE full-time positions will open soon\");","lastModifiedDate":"2023-10-15"},{"lineNumber":30,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":31,"author":{"gitId":"josepholim"},"content":"    private Model model;","lastModifiedDate":"2023-10-15"},{"lineNumber":32,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":33,"author":{"gitId":"josepholim"},"content":"    @BeforeEach","lastModifiedDate":"2023-10-15"},{"lineNumber":34,"author":{"gitId":"josepholim"},"content":"    public void setUp() {","lastModifiedDate":"2023-10-15"},{"lineNumber":35,"author":{"gitId":"josepholim"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-15"},{"lineNumber":36,"author":{"gitId":"josepholim"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":37,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":38,"author":{"gitId":"josepholim"},"content":"    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":39,"author":{"gitId":"josepholim"},"content":"    public void execute_correctCommand_success() throws CommandException {","lastModifiedDate":"2023-10-15"},{"lineNumber":40,"author":{"gitId":"josepholim"},"content":"        ContactID contactId \u003d ContactID.fromInt(1);","lastModifiedDate":"2023-10-27"},{"lineNumber":41,"author":{"gitId":"josepholim"},"content":"        assertCommandSuccessWithFeedback(() -\u003e new AddNoteCommand(contactId, VALID_NOTE_0)","lastModifiedDate":"2023-10-27"},{"lineNumber":42,"author":{"gitId":"josepholim"},"content":"                .execute(model), AddNoteCommand.MESSAGE_SUCCESS + VALID_NOTE_0.getTitle());","lastModifiedDate":"2023-10-15"},{"lineNumber":43,"author":{"gitId":"josepholim"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":44,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":45,"author":{"gitId":"josepholim"},"content":"    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":46,"author":{"gitId":"josepholim"},"content":"    public void execute_personNotExist_fails() throws CommandException {","lastModifiedDate":"2023-10-15"},{"lineNumber":47,"author":{"gitId":"josepholim"},"content":"        ContactID contactId \u003d ContactID.fromInt(99999);","lastModifiedDate":"2023-10-27"},{"lineNumber":48,"author":{"gitId":"josepholim"},"content":"        assertCommandFailWithFeedback(() -\u003e new AddNoteCommand(contactId, VALID_NOTE_SAME_TITLE_0)","lastModifiedDate":"2023-10-27"},{"lineNumber":49,"author":{"gitId":"josepholim"},"content":"                .execute(model), AddNoteCommand.MESSAGE_PERSON_NOT_FOUND + contactId);","lastModifiedDate":"2023-10-27"},{"lineNumber":50,"author":{"gitId":"josepholim"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":51,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":52,"author":{"gitId":"josepholim"},"content":"    private void assertCommandSuccessWithFeedback(ThrowingSupplier\u003cCommandResult\u003e function, String result) {","lastModifiedDate":"2023-10-15"},{"lineNumber":53,"author":{"gitId":"josepholim"},"content":"        try {","lastModifiedDate":"2023-10-15"},{"lineNumber":54,"author":{"gitId":"josepholim"},"content":"            assertEquals(function.get(), new CommandResult(result));","lastModifiedDate":"2023-10-15"},{"lineNumber":55,"author":{"gitId":"josepholim"},"content":"        } catch (Throwable e) {","lastModifiedDate":"2023-10-15"},{"lineNumber":56,"author":{"gitId":"josepholim"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", e);","lastModifiedDate":"2023-10-15"},{"lineNumber":57,"author":{"gitId":"josepholim"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":58,"author":{"gitId":"josepholim"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":59,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":60,"author":{"gitId":"josepholim"},"content":"    private void assertCommandFailWithFeedback(ThrowingSupplier\u003cCommandResult\u003e function, String errResult) {","lastModifiedDate":"2023-10-15"},{"lineNumber":61,"author":{"gitId":"josepholim"},"content":"        try {","lastModifiedDate":"2023-10-15"},{"lineNumber":62,"author":{"gitId":"josepholim"},"content":"            function.get();","lastModifiedDate":"2023-10-15"},{"lineNumber":63,"author":{"gitId":"josepholim"},"content":"        } catch (Throwable e) {","lastModifiedDate":"2023-10-15"},{"lineNumber":64,"author":{"gitId":"josepholim"},"content":"            if (!(e instanceof CommandException)) {","lastModifiedDate":"2023-10-15"},{"lineNumber":65,"author":{"gitId":"josepholim"},"content":"                throw new AssertionError(\"Execution of command failed but not due to CommandException.\");","lastModifiedDate":"2023-10-15"},{"lineNumber":66,"author":{"gitId":"josepholim"},"content":"            }","lastModifiedDate":"2023-10-15"},{"lineNumber":67,"author":{"gitId":"josepholim"},"content":"            assertEquals(e.getMessage(), errResult);","lastModifiedDate":"2023-10-15"},{"lineNumber":68,"author":{"gitId":"josepholim"},"content":"            return;","lastModifiedDate":"2023-10-15"},{"lineNumber":69,"author":{"gitId":"josepholim"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":70,"author":{"gitId":"josepholim"},"content":"        throw new AssertionError(\"Execution of command should fail.\");","lastModifiedDate":"2023-10-15"},{"lineNumber":71,"author":{"gitId":"josepholim"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":72,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":73,"author":{"gitId":"josepholim"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":74,"author":{"gitId":"josepholim"},"content":"    public void equals() {","lastModifiedDate":"2023-10-16"},{"lineNumber":75,"author":{"gitId":"josepholim"},"content":"        Note noteA \u003d NOTE_A;","lastModifiedDate":"2023-10-16"},{"lineNumber":76,"author":{"gitId":"josepholim"},"content":"        Note noteB \u003d NOTE_B;","lastModifiedDate":"2023-10-16"},{"lineNumber":77,"author":{"gitId":"josepholim"},"content":"        AddNoteCommand addNoteACommand \u003d new AddNoteCommand(ContactID.fromString(VALID_NOTE_A_PERSON_ID), noteA);","lastModifiedDate":"2023-10-27"},{"lineNumber":78,"author":{"gitId":"josepholim"},"content":"        AddNoteCommand addNoteBCommand \u003d new AddNoteCommand(ContactID.fromString(VALID_NOTE_B_PERSON_ID), noteB);","lastModifiedDate":"2023-10-27"},{"lineNumber":79,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":80,"author":{"gitId":"josepholim"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-16"},{"lineNumber":81,"author":{"gitId":"josepholim"},"content":"        assertTrue(addNoteACommand.equals(addNoteACommand));","lastModifiedDate":"2023-10-16"},{"lineNumber":82,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":83,"author":{"gitId":"josepholim"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-16"},{"lineNumber":84,"author":{"gitId":"josepholim"},"content":"        AddNoteCommand addNoteACommandCopy \u003d new AddNoteCommand(ContactID.fromString(VALID_NOTE_A_PERSON_ID), noteA);","lastModifiedDate":"2023-10-27"},{"lineNumber":85,"author":{"gitId":"josepholim"},"content":"        assertTrue(addNoteACommand.equals(addNoteACommandCopy));","lastModifiedDate":"2023-10-16"},{"lineNumber":86,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":87,"author":{"gitId":"josepholim"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-16"},{"lineNumber":88,"author":{"gitId":"josepholim"},"content":"        assertFalse(addNoteACommand.equals(1));","lastModifiedDate":"2023-10-16"},{"lineNumber":89,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":90,"author":{"gitId":"josepholim"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-16"},{"lineNumber":91,"author":{"gitId":"josepholim"},"content":"        assertFalse(addNoteACommand.equals(null));","lastModifiedDate":"2023-10-16"},{"lineNumber":92,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":93,"author":{"gitId":"josepholim"},"content":"        // different person, different note -\u003e returns false","lastModifiedDate":"2023-11-13"},{"lineNumber":94,"author":{"gitId":"josepholim"},"content":"        assertFalse(addNoteACommand.equals(addNoteBCommand));","lastModifiedDate":"2023-10-16"},{"lineNumber":95,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":96,"author":{"gitId":"josepholim"},"content":"        // same person, different note -\u003e returns false","lastModifiedDate":"2023-11-13"},{"lineNumber":97,"author":{"gitId":"josepholim"},"content":"        AddNoteCommand differentNoteAddNoteCommand \u003d new AddNoteCommand(","lastModifiedDate":"2023-11-13"},{"lineNumber":98,"author":{"gitId":"josepholim"},"content":"                ContactID.fromString(VALID_NOTE_A_PERSON_ID), noteB);","lastModifiedDate":"2023-11-13"},{"lineNumber":99,"author":{"gitId":"josepholim"},"content":"        assertFalse(addNoteACommand.equals(differentNoteAddNoteCommand));","lastModifiedDate":"2023-11-13"},{"lineNumber":100,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":101,"author":{"gitId":"josepholim"},"content":"        // different person, same note -\u003e returns false","lastModifiedDate":"2023-11-13"},{"lineNumber":102,"author":{"gitId":"josepholim"},"content":"        AddNoteCommand differentPersonAddNoteCommand \u003d new AddNoteCommand(","lastModifiedDate":"2023-11-13"},{"lineNumber":103,"author":{"gitId":"josepholim"},"content":"                ContactID.fromString(VALID_NOTE_B_PERSON_ID), noteA);","lastModifiedDate":"2023-11-13"},{"lineNumber":104,"author":{"gitId":"josepholim"},"content":"        assertFalse(addNoteACommand.equals(differentPersonAddNoteCommand));","lastModifiedDate":"2023-11-13"},{"lineNumber":105,"author":{"gitId":"josepholim"},"content":"    }","lastModifiedDate":"2023-11-13"},{"lineNumber":106,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":107,"author":{"gitId":"josepholim"},"content":"    @Test","lastModifiedDate":"2023-11-13"},{"lineNumber":108,"author":{"gitId":"josepholim"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-11-13"},{"lineNumber":109,"author":{"gitId":"josepholim"},"content":"        Note noteA \u003d NOTE_A;","lastModifiedDate":"2023-11-13"},{"lineNumber":110,"author":{"gitId":"josepholim"},"content":"        AddNoteCommand addNoteACommand \u003d new AddNoteCommand(ContactID.fromString(VALID_NOTE_A_PERSON_ID), noteA);","lastModifiedDate":"2023-11-13"},{"lineNumber":111,"author":{"gitId":"josepholim"},"content":"        String expected \u003d new ToStringBuilder(addNoteACommand)","lastModifiedDate":"2023-11-13"},{"lineNumber":112,"author":{"gitId":"josepholim"},"content":"                .add(\"toAdd\", NOTE_A)","lastModifiedDate":"2023-11-13"},{"lineNumber":113,"author":{"gitId":"josepholim"},"content":"                .add(\"contactId\", VALID_NOTE_A_PERSON_ID)","lastModifiedDate":"2023-11-13"},{"lineNumber":114,"author":{"gitId":"josepholim"},"content":"                .toString();","lastModifiedDate":"2023-11-13"},{"lineNumber":115,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":116,"author":{"gitId":"josepholim"},"content":"        assertEquals(expected, addNoteACommand.toString());","lastModifiedDate":"2023-11-13"},{"lineNumber":117,"author":{"gitId":"josepholim"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":118,"author":{"gitId":"josepholim"},"content":"}","lastModifiedDate":"2023-10-15"}],"authorContributionMap":{"josepholim":118}},{"path":"src/test/java/seedu/address/logic/commands/AddPersonCommandIntegrationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-15"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-15"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-15"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code AddCommand}.","lastModifiedDate":"2017-06-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-15"},{"lineNumber":20,"author":{"gitId":"larrywang0701"},"content":"public class AddPersonCommandIntegrationTest {","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void execute_newPerson_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(validPerson);","lastModifiedDate":"2017-06-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":36,"author":{"gitId":"larrywang0701"},"content":"        assertCommandSuccess(new AddPersonCommand(validPerson), model,","lastModifiedDate":"2023-10-12"},{"lineNumber":37,"author":{"gitId":"larrywang0701"},"content":"                String.format(AddPersonCommand.MESSAGE_SUCCESS, Messages.format(validPerson)),","lastModifiedDate":"2023-10-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                expectedModel);","lastModifiedDate":"2019-02-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        Person personInList \u003d model.getAddressBook().getPersonList().get(0);","lastModifiedDate":"2018-01-10"},{"lineNumber":44,"author":{"gitId":"larrywang0701"},"content":"        assertCommandFailure(new AddPersonCommand(personInList), model,","lastModifiedDate":"2023-10-12"},{"lineNumber":45,"author":{"gitId":"larrywang0701"},"content":"                AddPersonCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2023-10-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"larrywang0701":5,"-":43}},{"path":"src/test/java/seedu/address/logic/commands/AddPersonCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2019-02-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-12"},{"lineNumber":13,"author":{"gitId":"larrywang0701"},"content":"import java.util.Comparator;","lastModifiedDate":"2023-11-01"},{"lineNumber":14,"author":{"gitId":"larrywang0701"},"content":"import java.util.List;","lastModifiedDate":"2023-11-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-05-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-05-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"larrywang0701"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2023-11-01"},{"lineNumber":28,"author":{"gitId":"larrywang0701"},"content":"import seedu.address.model.event.EventID;","lastModifiedDate":"2023-11-01"},{"lineNumber":29,"author":{"gitId":"larrywang0701"},"content":"import seedu.address.model.person.ContactID;","lastModifiedDate":"2023-10-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":33,"author":{"gitId":"larrywang0701"},"content":"public class AddPersonCommandTest {","lastModifiedDate":"2023-10-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void constructor_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":37,"author":{"gitId":"larrywang0701"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddPersonCommand(null));","lastModifiedDate":"2023-10-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void execute_personAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2017-05-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        ModelStubAcceptingPersonAdded modelStub \u003d new ModelStubAcceptingPersonAdded();","lastModifiedDate":"2017-05-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":45,"author":{"gitId":"larrywang0701"},"content":"        CommandResult commandResult \u003d new AddPersonCommand(validPerson).execute(modelStub);","lastModifiedDate":"2023-10-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":47,"author":{"gitId":"larrywang0701"},"content":"        assertEquals(String.format(AddPersonCommand.MESSAGE_SUCCESS, Messages.format(validPerson)),","lastModifiedDate":"2023-10-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                commandResult.getFeedbackToUser());","lastModifiedDate":"2019-02-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(validPerson), modelStub.personsAdded);","lastModifiedDate":"2017-05-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":55,"author":{"gitId":"larrywang0701"},"content":"        AddPersonCommand addPersonCommand \u003d new AddPersonCommand(validPerson);","lastModifiedDate":"2023-10-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        ModelStub modelStub \u003d new ModelStubWithPerson(validPerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":58,"author":{"gitId":"larrywang0701"},"content":"        assertThrows(CommandException.class,","lastModifiedDate":"2023-10-12"},{"lineNumber":59,"author":{"gitId":"larrywang0701"},"content":"                AddPersonCommand.MESSAGE_DUPLICATE_PERSON, () -\u003e addPersonCommand.execute(modelStub));","lastModifiedDate":"2023-10-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        Person alice \u003d new PersonBuilder().withName(\"Alice\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        Person bob \u003d new PersonBuilder().withName(\"Bob\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"larrywang0701"},"content":"        AddPersonCommand addAliceCommand \u003d new AddPersonCommand(alice);","lastModifiedDate":"2023-10-12"},{"lineNumber":67,"author":{"gitId":"larrywang0701"},"content":"        AddPersonCommand addBobCommand \u003d new AddPersonCommand(bob);","lastModifiedDate":"2023-10-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"larrywang0701"},"content":"        AddPersonCommand addAliceCommandCopy \u003d new AddPersonCommand(alice);","lastModifiedDate":"2023-10-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2017-06-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2017-06-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2017-06-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":88,"author":{"gitId":"larrywang0701"},"content":"        AddPersonCommand addPersonCommand \u003d new AddPersonCommand(ALICE);","lastModifiedDate":"2023-10-12"},{"lineNumber":89,"author":{"gitId":"larrywang0701"},"content":"        String expected \u003d AddPersonCommand.class.getCanonicalName() + \"{toAdd\u003d\" + ALICE + \"}\";","lastModifiedDate":"2023-10-12"},{"lineNumber":90,"author":{"gitId":"larrywang0701"},"content":"        assertEquals(expected, addPersonCommand.toString());","lastModifiedDate":"2023-10-12"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2017-05-12"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2017-05-12"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2018-11-27"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-12"},{"lineNumber":139,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-06"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        public void deletePerson(Person target) {","lastModifiedDate":"2018-08-08"},{"lineNumber":149,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":159,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":164,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":166,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":167,"author":{"gitId":"larrywang0701"},"content":"        @Override","lastModifiedDate":"2023-11-01"},{"lineNumber":168,"author":{"gitId":"larrywang0701"},"content":"        public ObservableList\u003cEvent\u003e getFilteredEventList() {","lastModifiedDate":"2023-11-01"},{"lineNumber":169,"author":{"gitId":"larrywang0701"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-11-01"},{"lineNumber":170,"author":{"gitId":"larrywang0701"},"content":"        }","lastModifiedDate":"2023-11-01"},{"lineNumber":171,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":172,"author":{"gitId":"larrywang0701"},"content":"        @Override","lastModifiedDate":"2023-11-01"},{"lineNumber":173,"author":{"gitId":"larrywang0701"},"content":"        public List\u003cEvent\u003e generateSortedFilteredEventList(Comparator\u003c? super Event\u003e comparator) {","lastModifiedDate":"2023-11-14"},{"lineNumber":174,"author":{"gitId":"larrywang0701"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-11-01"},{"lineNumber":175,"author":{"gitId":"larrywang0701"},"content":"        }","lastModifiedDate":"2023-11-01"},{"lineNumber":176,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":177,"author":{"gitId":"larrywang0701"},"content":"        @Override","lastModifiedDate":"2023-11-01"},{"lineNumber":178,"author":{"gitId":"larrywang0701"},"content":"        public ObservableList\u003cEvent\u003e getSortedFilteredEventList() {","lastModifiedDate":"2023-11-14"},{"lineNumber":179,"author":{"gitId":"larrywang0701"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-11-01"},{"lineNumber":180,"author":{"gitId":"larrywang0701"},"content":"        }","lastModifiedDate":"2023-11-01"},{"lineNumber":181,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":182,"author":{"gitId":"larrywang0701"},"content":"        @Override","lastModifiedDate":"2023-11-14"},{"lineNumber":183,"author":{"gitId":"larrywang0701"},"content":"        public void updateFilteredEventList(Predicate\u003cEvent\u003e predicate) {","lastModifiedDate":"2023-11-14"},{"lineNumber":184,"author":{"gitId":"larrywang0701"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-11-14"},{"lineNumber":185,"author":{"gitId":"larrywang0701"},"content":"        }","lastModifiedDate":"2023-11-14"},{"lineNumber":186,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":187,"author":{"gitId":"larrywang0701"},"content":"        @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":188,"author":{"gitId":"larrywang0701"},"content":"        public Person findPersonByIndex(int index) {","lastModifiedDate":"2023-10-12"},{"lineNumber":189,"author":{"gitId":"larrywang0701"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-12"},{"lineNumber":190,"author":{"gitId":"larrywang0701"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":191,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":192,"author":{"gitId":"larrywang0701"},"content":"        @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":193,"author":{"gitId":"larrywang0701"},"content":"        public Person findPersonByUserFriendlyId(ContactID id) {","lastModifiedDate":"2023-10-25"},{"lineNumber":194,"author":{"gitId":"larrywang0701"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-12"},{"lineNumber":195,"author":{"gitId":"larrywang0701"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":196,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":197,"author":{"gitId":"larrywang0701"},"content":"        @Override","lastModifiedDate":"2023-11-01"},{"lineNumber":198,"author":{"gitId":"larrywang0701"},"content":"        public void addEvent(Event toAdd, Person owner) {","lastModifiedDate":"2023-11-01"},{"lineNumber":199,"author":{"gitId":"larrywang0701"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-11-01"},{"lineNumber":200,"author":{"gitId":"larrywang0701"},"content":"        }","lastModifiedDate":"2023-11-01"},{"lineNumber":201,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":202,"author":{"gitId":"larrywang0701"},"content":"        @Override","lastModifiedDate":"2023-11-01"},{"lineNumber":203,"author":{"gitId":"larrywang0701"},"content":"        public Event removeEventByID(EventID eventID, Person owner) {","lastModifiedDate":"2023-11-01"},{"lineNumber":204,"author":{"gitId":"larrywang0701"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-11-01"},{"lineNumber":205,"author":{"gitId":"larrywang0701"},"content":"        }","lastModifiedDate":"2023-11-01"},{"lineNumber":206,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":207,"author":{"gitId":"larrywang0701"},"content":"        @Override","lastModifiedDate":"2023-11-01"},{"lineNumber":208,"author":{"gitId":"larrywang0701"},"content":"        public String filteredEventListToString() {","lastModifiedDate":"2023-11-01"},{"lineNumber":209,"author":{"gitId":"larrywang0701"},"content":"            return null;","lastModifiedDate":"2023-11-01"},{"lineNumber":210,"author":{"gitId":"larrywang0701"},"content":"        }","lastModifiedDate":"2023-11-01"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":214,"author":{"gitId":"-"},"content":"     * A Model stub that contains a single person.","lastModifiedDate":"2018-08-07"},{"lineNumber":215,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":216,"author":{"gitId":"-"},"content":"    private class ModelStubWithPerson extends ModelStub {","lastModifiedDate":"2018-08-07"},{"lineNumber":217,"author":{"gitId":"-"},"content":"        private final Person person;","lastModifiedDate":"2018-08-07"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":219,"author":{"gitId":"-"},"content":"        ModelStubWithPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":220,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":221,"author":{"gitId":"-"},"content":"            this.person \u003d person;","lastModifiedDate":"2018-08-07"},{"lineNumber":222,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":224,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":225,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":226,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":227,"author":{"gitId":"-"},"content":"            return this.person.isSamePerson(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":228,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":229,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":231,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":232,"author":{"gitId":"-"},"content":"     * A Model stub that always accept the person being added.","lastModifiedDate":"2017-05-12"},{"lineNumber":233,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":234,"author":{"gitId":"-"},"content":"    private class ModelStubAcceptingPersonAdded extends ModelStub {","lastModifiedDate":"2017-05-12"},{"lineNumber":235,"author":{"gitId":"-"},"content":"        final ArrayList\u003cPerson\u003e personsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2017-05-12"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":237,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07"},{"lineNumber":238,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":239,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":240,"author":{"gitId":"-"},"content":"            return personsAdded.stream().anyMatch(person::isSamePerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":241,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":243,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":244,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-08"},{"lineNumber":245,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":246,"author":{"gitId":"-"},"content":"            personsAdded.add(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":247,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":249,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":250,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-04"},{"lineNumber":251,"author":{"gitId":"-"},"content":"            return new AddressBook();","lastModifiedDate":"2017-05-04"},{"lineNumber":252,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":255,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"larrywang0701":63,"-":192}},{"path":"src/test/java/seedu/address/logic/commands/AddTagCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"zekone"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-27"},{"lineNumber":2,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":3,"author":{"gitId":"zekone"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-27"},{"lineNumber":4,"author":{"gitId":"zekone"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-27"},{"lineNumber":5,"author":{"gitId":"zekone"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-27"},{"lineNumber":6,"author":{"gitId":"zekone"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2023-10-27"},{"lineNumber":7,"author":{"gitId":"zekone"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2023-10-27"},{"lineNumber":8,"author":{"gitId":"zekone"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2023-10-27"},{"lineNumber":9,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":10,"author":{"gitId":"zekone"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-27"},{"lineNumber":11,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":12,"author":{"gitId":"zekone"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-10-27"},{"lineNumber":13,"author":{"gitId":"zekone"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-27"},{"lineNumber":14,"author":{"gitId":"zekone"},"content":"import org.junit.jupiter.api.function.ThrowingSupplier;","lastModifiedDate":"2023-10-27"},{"lineNumber":15,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":16,"author":{"gitId":"josepholim"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-11-13"},{"lineNumber":17,"author":{"gitId":"zekone"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-27"},{"lineNumber":18,"author":{"gitId":"zekone"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-27"},{"lineNumber":19,"author":{"gitId":"zekone"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-10-27"},{"lineNumber":20,"author":{"gitId":"zekone"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-10-27"},{"lineNumber":21,"author":{"gitId":"zekone"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-10-27"},{"lineNumber":22,"author":{"gitId":"zekone"},"content":"import seedu.address.testutil.TagBuilder;","lastModifiedDate":"2023-10-27"},{"lineNumber":23,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":24,"author":{"gitId":"zekone"},"content":"public class AddTagCommandTest {","lastModifiedDate":"2023-10-27"},{"lineNumber":25,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":26,"author":{"gitId":"zekone"},"content":"    private Model model;","lastModifiedDate":"2023-10-27"},{"lineNumber":27,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":28,"author":{"gitId":"zekone"},"content":"    @BeforeEach","lastModifiedDate":"2023-10-27"},{"lineNumber":29,"author":{"gitId":"zekone"},"content":"    public void setUp() {","lastModifiedDate":"2023-10-27"},{"lineNumber":30,"author":{"gitId":"zekone"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-27"},{"lineNumber":31,"author":{"gitId":"zekone"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":32,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":33,"author":{"gitId":"zekone"},"content":"    @Test","lastModifiedDate":"2023-10-27"},{"lineNumber":34,"author":{"gitId":"zekone"},"content":"    public void execute_correctCommand_success() throws CommandException {","lastModifiedDate":"2023-10-27"},{"lineNumber":35,"author":{"gitId":"zekone"},"content":"        int personId \u003d 1;","lastModifiedDate":"2023-10-27"},{"lineNumber":36,"author":{"gitId":"zekone"},"content":"        final Set\u003cTag\u003e tagSet \u003d new TagBuilder().inSet();","lastModifiedDate":"2023-10-27"},{"lineNumber":37,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":38,"author":{"gitId":"zekone"},"content":"        assertCommandSuccessWithFeedback(() -\u003e new AddTagCommand(personId, tagSet)","lastModifiedDate":"2023-10-27"},{"lineNumber":39,"author":{"gitId":"zekone"},"content":"                .execute(model), AddTagCommand.MESSAGE_SUCCESS + new TagBuilder().build().toString());","lastModifiedDate":"2023-10-27"},{"lineNumber":40,"author":{"gitId":"zekone"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":41,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":42,"author":{"gitId":"zekone"},"content":"    @Test","lastModifiedDate":"2023-10-27"},{"lineNumber":43,"author":{"gitId":"zekone"},"content":"    public void execute_personNotExist_fails() throws CommandException {","lastModifiedDate":"2023-10-27"},{"lineNumber":44,"author":{"gitId":"zekone"},"content":"        int personId \u003d 99999;","lastModifiedDate":"2023-10-27"},{"lineNumber":45,"author":{"gitId":"zekone"},"content":"        final Set\u003cTag\u003e tagSet \u003d new TagBuilder().inSet();","lastModifiedDate":"2023-10-27"},{"lineNumber":46,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":47,"author":{"gitId":"zekone"},"content":"        assertCommandFailWithFeedback(() -\u003e new AddTagCommand(personId, tagSet)","lastModifiedDate":"2023-10-27"},{"lineNumber":48,"author":{"gitId":"zekone"},"content":"                .execute(model), AddTagCommand.MESSAGE_PERSON_NOT_FOUND + personId);","lastModifiedDate":"2023-10-27"},{"lineNumber":49,"author":{"gitId":"zekone"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":50,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":51,"author":{"gitId":"zekone"},"content":"    private void assertCommandSuccessWithFeedback(ThrowingSupplier\u003cCommandResult\u003e function, String result) {","lastModifiedDate":"2023-10-27"},{"lineNumber":52,"author":{"gitId":"zekone"},"content":"        try {","lastModifiedDate":"2023-10-27"},{"lineNumber":53,"author":{"gitId":"zekone"},"content":"            assertEquals(function.get(), new CommandResult(result));","lastModifiedDate":"2023-10-27"},{"lineNumber":54,"author":{"gitId":"zekone"},"content":"        } catch (Throwable e) {","lastModifiedDate":"2023-10-27"},{"lineNumber":55,"author":{"gitId":"zekone"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", e);","lastModifiedDate":"2023-10-27"},{"lineNumber":56,"author":{"gitId":"zekone"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":57,"author":{"gitId":"zekone"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":58,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":59,"author":{"gitId":"zekone"},"content":"    private void assertCommandFailWithFeedback(ThrowingSupplier\u003cCommandResult\u003e function, String errResult) {","lastModifiedDate":"2023-10-27"},{"lineNumber":60,"author":{"gitId":"zekone"},"content":"        try {","lastModifiedDate":"2023-10-27"},{"lineNumber":61,"author":{"gitId":"zekone"},"content":"            function.get();","lastModifiedDate":"2023-10-27"},{"lineNumber":62,"author":{"gitId":"zekone"},"content":"        } catch (Throwable e) {","lastModifiedDate":"2023-10-27"},{"lineNumber":63,"author":{"gitId":"zekone"},"content":"            if (!(e instanceof CommandException)) {","lastModifiedDate":"2023-10-27"},{"lineNumber":64,"author":{"gitId":"zekone"},"content":"                throw new AssertionError(\"Execution of command failed but not due to CommandException.\");","lastModifiedDate":"2023-10-27"},{"lineNumber":65,"author":{"gitId":"zekone"},"content":"            }","lastModifiedDate":"2023-10-27"},{"lineNumber":66,"author":{"gitId":"zekone"},"content":"            assertEquals(e.getMessage(), errResult);","lastModifiedDate":"2023-10-27"},{"lineNumber":67,"author":{"gitId":"zekone"},"content":"            return;","lastModifiedDate":"2023-10-27"},{"lineNumber":68,"author":{"gitId":"zekone"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":69,"author":{"gitId":"zekone"},"content":"        throw new AssertionError(\"Execution of command should fail.\");","lastModifiedDate":"2023-10-27"},{"lineNumber":70,"author":{"gitId":"zekone"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":71,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":72,"author":{"gitId":"zekone"},"content":"    @Test","lastModifiedDate":"2023-10-27"},{"lineNumber":73,"author":{"gitId":"zekone"},"content":"    public void equals() {","lastModifiedDate":"2023-10-27"},{"lineNumber":74,"author":{"gitId":"zekone"},"content":"        final Set\u003cTag\u003e tagSetA \u003d new TagBuilder().withTag(VALID_TAG_HUSBAND).inSet();","lastModifiedDate":"2023-10-27"},{"lineNumber":75,"author":{"gitId":"zekone"},"content":"        final Set\u003cTag\u003e tagSetB \u003d new TagBuilder().withTag(VALID_TAG_FRIEND).inSet();","lastModifiedDate":"2023-10-27"},{"lineNumber":76,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":77,"author":{"gitId":"zekone"},"content":"        AddTagCommand commandA \u003d new AddTagCommand(1, tagSetA);","lastModifiedDate":"2023-10-27"},{"lineNumber":78,"author":{"gitId":"josepholim"},"content":"        AddTagCommand commandB \u003d new AddTagCommand(2, tagSetB);","lastModifiedDate":"2023-11-13"},{"lineNumber":79,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":80,"author":{"gitId":"zekone"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-27"},{"lineNumber":81,"author":{"gitId":"zekone"},"content":"        assertTrue(commandA.equals(commandA));","lastModifiedDate":"2023-10-27"},{"lineNumber":82,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":83,"author":{"gitId":"zekone"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-27"},{"lineNumber":84,"author":{"gitId":"zekone"},"content":"        AddTagCommand commandACopy \u003d new AddTagCommand(1, tagSetA);","lastModifiedDate":"2023-10-27"},{"lineNumber":85,"author":{"gitId":"zekone"},"content":"        assertTrue(commandA.equals(commandACopy));","lastModifiedDate":"2023-10-27"},{"lineNumber":86,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":87,"author":{"gitId":"zekone"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-27"},{"lineNumber":88,"author":{"gitId":"zekone"},"content":"        assertFalse(commandA.equals(1));","lastModifiedDate":"2023-10-27"},{"lineNumber":89,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":90,"author":{"gitId":"zekone"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-27"},{"lineNumber":91,"author":{"gitId":"zekone"},"content":"        assertFalse(commandA.equals(null));","lastModifiedDate":"2023-10-27"},{"lineNumber":92,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":93,"author":{"gitId":"josepholim"},"content":"        // different person, different tag -\u003e returns false","lastModifiedDate":"2023-11-13"},{"lineNumber":94,"author":{"gitId":"zekone"},"content":"        assertFalse(commandA.equals(commandB));","lastModifiedDate":"2023-10-27"},{"lineNumber":95,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":96,"author":{"gitId":"josepholim"},"content":"        // same person, different note -\u003e returns false","lastModifiedDate":"2023-11-13"},{"lineNumber":97,"author":{"gitId":"josepholim"},"content":"        AddTagCommand differentNoteCommand \u003d new AddTagCommand(1, tagSetB);","lastModifiedDate":"2023-11-13"},{"lineNumber":98,"author":{"gitId":"josepholim"},"content":"        assertFalse(commandA.equals(differentNoteCommand));","lastModifiedDate":"2023-11-13"},{"lineNumber":99,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":100,"author":{"gitId":"josepholim"},"content":"        // different person, same note -\u003e returns false","lastModifiedDate":"2023-11-13"},{"lineNumber":101,"author":{"gitId":"josepholim"},"content":"        AddTagCommand differentPersonCommand \u003d new AddTagCommand(2, tagSetA);","lastModifiedDate":"2023-11-13"},{"lineNumber":102,"author":{"gitId":"josepholim"},"content":"        assertFalse(commandA.equals(differentPersonCommand));","lastModifiedDate":"2023-11-13"},{"lineNumber":103,"author":{"gitId":"josepholim"},"content":"    }","lastModifiedDate":"2023-11-13"},{"lineNumber":104,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":105,"author":{"gitId":"josepholim"},"content":"    @Test","lastModifiedDate":"2023-11-13"},{"lineNumber":106,"author":{"gitId":"josepholim"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-11-13"},{"lineNumber":107,"author":{"gitId":"josepholim"},"content":"        final Set\u003cTag\u003e tagSetA \u003d new TagBuilder().withTag(VALID_TAG_HUSBAND).inSet();","lastModifiedDate":"2023-11-13"},{"lineNumber":108,"author":{"gitId":"josepholim"},"content":"        AddTagCommand addTagACommand \u003d new AddTagCommand(1, tagSetA);","lastModifiedDate":"2023-11-13"},{"lineNumber":109,"author":{"gitId":"josepholim"},"content":"        String expected \u003d new ToStringBuilder(addTagACommand)","lastModifiedDate":"2023-11-13"},{"lineNumber":110,"author":{"gitId":"josepholim"},"content":"                .add(\"toAdd\", tagSetA)","lastModifiedDate":"2023-11-13"},{"lineNumber":111,"author":{"gitId":"josepholim"},"content":"                .add(\"contactId\", 1)","lastModifiedDate":"2023-11-13"},{"lineNumber":112,"author":{"gitId":"josepholim"},"content":"                .toString();","lastModifiedDate":"2023-11-13"},{"lineNumber":113,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":114,"author":{"gitId":"josepholim"},"content":"        assertEquals(expected, addTagACommand.toString());","lastModifiedDate":"2023-11-13"},{"lineNumber":115,"author":{"gitId":"zekone"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":116,"author":{"gitId":"zekone"},"content":"}","lastModifiedDate":"2023-10-27"}],"authorContributionMap":{"zekone":93,"josepholim":23}},{"path":"src/test/java/seedu/address/logic/commands/CommandResultTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2018-12-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class CommandResultTest {","lastModifiedDate":"2018-12-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\")));","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\", false, false)));","lastModifiedDate":"2023-11-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(commandResult));","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(null));","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(0.5f));","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"different\")));","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"Nixx162"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", true, false)));","lastModifiedDate":"2023-11-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void hashcode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // same values -\u003e returns same hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertEquals(commandResult.hashCode(), new CommandResult(\"feedback\").hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"different\").hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"Nixx162"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", true, false).hashCode());","lastModifiedDate":"2023-11-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2019-02-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        String expected \u003d CommandResult.class.getCanonicalName() + \"{feedbackToUser\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":53,"author":{"gitId":"Nixx162"},"content":"                + commandResult.getFeedbackToUser() + \", exit\u003d\" + commandResult.isExit()","lastModifiedDate":"2023-11-03"},{"lineNumber":54,"author":{"gitId":"Nixx162"},"content":"                + \", listEvent\u003d\" + commandResult.isListEvent() + \"}\";","lastModifiedDate":"2023-11-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertEquals(expected, commandResult.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-12-09"}],"authorContributionMap":{"-":53,"Nixx162":4}},{"path":"src/test/java/seedu/address/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"josepholim"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NOTE_CONTENT;","lastModifiedDate":"2023-10-16"},{"lineNumber":9,"author":{"gitId":"josepholim"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NOTE_ID;","lastModifiedDate":"2023-10-16"},{"lineNumber":10,"author":{"gitId":"josepholim"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NOTE_TITLE;","lastModifiedDate":"2023-10-16"},{"lineNumber":11,"author":{"gitId":"josepholim"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PERSON_ID;","lastModifiedDate":"2023-10-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-07-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-07-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2018-01-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-06-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-07-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2017-07-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2017-07-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_AMY \u003d \"11111111\";","lastModifiedDate":"2017-07-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_BOB \u003d \"22222222\";","lastModifiedDate":"2017-07-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_AMY \u003d \"amy@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_BOB \u003d \"bob@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_AMY \u003d \"Block 312, Amy Street 1\";","lastModifiedDate":"2017-07-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_BOB \u003d \"Block 123, Bobby Street 3\";","lastModifiedDate":"2017-07-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_HUSBAND \u003d \"husband\";","lastModifiedDate":"2017-07-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_FRIEND \u003d \"friend\";","lastModifiedDate":"2017-07-05"},{"lineNumber":42,"author":{"gitId":"zekone"},"content":"    public static final String VALID_PERSON_ID \u003d \"1\";","lastModifiedDate":"2023-10-27"},{"lineNumber":43,"author":{"gitId":"josepholim"},"content":"    public static final String VALID_NOTE_A_PERSON_ID \u003d \"1\";","lastModifiedDate":"2023-10-16"},{"lineNumber":44,"author":{"gitId":"josepholim"},"content":"    public static final String VALID_NOTE_A_TITLE \u003d \"Preferred Qualifications\";","lastModifiedDate":"2023-10-16"},{"lineNumber":45,"author":{"gitId":"josepholim"},"content":"    public static final String VALID_NOTE_A_CONTENT \u003d \"Machine Learning Frameworks\";","lastModifiedDate":"2023-10-16"},{"lineNumber":46,"author":{"gitId":"josepholim"},"content":"    public static final String VALID_NOTE_A_NOTE_ID \u003d \"1\";","lastModifiedDate":"2023-10-16"},{"lineNumber":47,"author":{"gitId":"josepholim"},"content":"    public static final String VALID_NOTE_B_PERSON_ID \u003d \"2\";","lastModifiedDate":"2023-10-16"},{"lineNumber":48,"author":{"gitId":"josepholim"},"content":"    public static final String VALID_NOTE_B_TITLE \u003d \"Preferred Major\";","lastModifiedDate":"2023-10-16"},{"lineNumber":49,"author":{"gitId":"josepholim"},"content":"    public static final String VALID_NOTE_B_CONTENT \u003d \"Computer Science\";","lastModifiedDate":"2023-10-16"},{"lineNumber":50,"author":{"gitId":"josepholim"},"content":"    public static final String VALID_NOTE_B_NOTE_ID \u003d \"1\";","lastModifiedDate":"2023-10-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_AMY \u003d \" \" + PREFIX_PHONE + VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_BOB \u003d \" \" + PREFIX_PHONE + VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_AMY \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_BOB \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_AMY \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_BOB \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_FRIEND \u003d \" \" + PREFIX_TAG + VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_HUSBAND \u003d \" \" + PREFIX_TAG + VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":62,"author":{"gitId":"zekone"},"content":"    public static final String PERSON_ID_DESC \u003d \" \" + PREFIX_PERSON_ID + VALID_PERSON_ID;","lastModifiedDate":"2023-10-27"},{"lineNumber":63,"author":{"gitId":"josepholim"},"content":"    public static final String NOTE_A_PERSON_ID_DESC \u003d \" \" + PREFIX_PERSON_ID + VALID_NOTE_A_PERSON_ID;","lastModifiedDate":"2023-10-16"},{"lineNumber":64,"author":{"gitId":"josepholim"},"content":"    public static final String NOTE_A_TITLE_DESC \u003d \" \" + PREFIX_NOTE_TITLE + VALID_NOTE_A_TITLE;","lastModifiedDate":"2023-10-16"},{"lineNumber":65,"author":{"gitId":"josepholim"},"content":"    public static final String NOTE_A_CONTENT_DESC \u003d \" \" + PREFIX_NOTE_CONTENT + VALID_NOTE_A_CONTENT;","lastModifiedDate":"2023-10-16"},{"lineNumber":66,"author":{"gitId":"josepholim"},"content":"    public static final String NOTE_A_NOTE_ID_DESC \u003d \" \" + PREFIX_NOTE_ID + VALID_NOTE_A_NOTE_ID;","lastModifiedDate":"2023-10-16"},{"lineNumber":67,"author":{"gitId":"josepholim"},"content":"    public static final String NOTE_B_PERSON_ID_DESC \u003d \" \" + PREFIX_PERSON_ID + VALID_NOTE_B_PERSON_ID;","lastModifiedDate":"2023-10-16"},{"lineNumber":68,"author":{"gitId":"josepholim"},"content":"    public static final String NOTE_B_TITLE_DESC \u003d \" \" + PREFIX_NOTE_TITLE + VALID_NOTE_B_TITLE;","lastModifiedDate":"2023-10-16"},{"lineNumber":69,"author":{"gitId":"josepholim"},"content":"    public static final String NOTE_B_CONTENT_DESC \u003d \" \" + PREFIX_NOTE_CONTENT + VALID_NOTE_B_CONTENT;","lastModifiedDate":"2023-10-16"},{"lineNumber":70,"author":{"gitId":"josepholim"},"content":"    public static final String NOTE_B_NOTE_ID_DESC \u003d \" \" + PREFIX_NOTE_ID + VALID_NOTE_B_NOTE_ID;","lastModifiedDate":"2023-10-16"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2017-07-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public static final String INVALID_PHONE_DESC \u003d \" \" + PREFIX_PHONE + \"911a\"; // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2017-07-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public static final String INVALID_EMAIL_DESC \u003d \" \" + PREFIX_EMAIL + \"bob!yahoo\"; // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-07-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public static final String INVALID_ADDRESS_DESC \u003d \" \" + PREFIX_ADDRESS; // empty string not allowed for addresses","lastModifiedDate":"2017-07-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public static final String INVALID_TAG_DESC \u003d \" \" + PREFIX_TAG + \"hubby*\"; // \u0027*\u0027 not allowed in tags","lastModifiedDate":"2017-07-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":84,"author":{"gitId":"zekone"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult}","lastModifiedDate":"2023-10-27"},{"lineNumber":85,"author":{"gitId":"zekone"},"content":"     * \u003cbr\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":100,"author":{"gitId":"zekone"},"content":"     * Convenience wrapper to","lastModifiedDate":"2023-10-27"},{"lineNumber":101,"author":{"gitId":"zekone"},"content":"     * {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2023-10-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":114,"author":{"gitId":"zekone"},"content":"     * - the address book, filtered person list and selected person in","lastModifiedDate":"2023-10-27"},{"lineNumber":115,"author":{"gitId":"zekone"},"content":"     * {@code actualModel} remain unchanged","lastModifiedDate":"2023-10-27"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        AddressBook expectedAddressBook \u003d new AddressBook(actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredPersonList());","lastModifiedDate":"2018-01-10"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2019-05-03"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddressBook, actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredPersonList());","lastModifiedDate":"2017-06-05"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":127,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":129,"author":{"gitId":"zekone"},"content":"     * Updates {@code model}\u0027s filtered list to show only the person at the given","lastModifiedDate":"2023-10-27"},{"lineNumber":130,"author":{"gitId":"zekone"},"content":"     * {@code targetIndex} in the","lastModifiedDate":"2023-10-27"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2018-01-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public static void showPersonAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2018-01-31"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredPersonList().size());","lastModifiedDate":"2018-01-31"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        Person person \u003d model.getFilteredPersonList().get(targetIndex.getZeroBased());","lastModifiedDate":"2018-01-31"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        final String[] splitName \u003d person.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-20"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2017-07-20"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        assertEquals(1, model.getFilteredPersonList().size());","lastModifiedDate":"2018-02-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":143,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"zekone":11,"-":112,"josepholim":20}},{"path":"src/test/java/seedu/address/logic/commands/DeleteEventCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"larrywang0701"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"larrywang0701"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"larrywang0701"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"larrywang0701"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"larrywang0701"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"larrywang0701"},"content":"import org.junit.jupiter.api.function.ThrowingSupplier;","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"larrywang0701"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"larrywang0701"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"larrywang0701"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"larrywang0701"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"larrywang0701"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"larrywang0701"},"content":"import seedu.address.model.event.EventID;","lastModifiedDate":"2023-10-25"},{"lineNumber":16,"author":{"gitId":"larrywang0701"},"content":"import seedu.address.model.person.ContactID;","lastModifiedDate":"2023-10-25"},{"lineNumber":17,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"larrywang0701"},"content":"public class DeleteEventCommandTest {","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"larrywang0701"},"content":"    private static final Event VALID_EVENT_0 \u003d new Event(\"Career Fair\",","lastModifiedDate":"2023-11-01"},{"lineNumber":20,"author":{"gitId":"larrywang0701"},"content":"            \"12:00\", \"14:00\",","lastModifiedDate":"2023-11-01"},{"lineNumber":21,"author":{"gitId":"larrywang0701"},"content":"            \"COM1 Level2\", \"Go to booth #01-01 first\");","lastModifiedDate":"2023-11-01"},{"lineNumber":22,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":23,"author":{"gitId":"larrywang0701"},"content":"    private static final Event VALID_EVENT_1 \u003d new Event(\"Career Fair (Second Day)\",","lastModifiedDate":"2023-11-01"},{"lineNumber":24,"author":{"gitId":"larrywang0701"},"content":"            \"2023-11-02 12:00\", \"2023-11-02 14:00\",","lastModifiedDate":"2023-11-01"},{"lineNumber":25,"author":{"gitId":"larrywang0701"},"content":"            \"COM1 Level2\", \"Go to booth #02-01 first\");","lastModifiedDate":"2023-11-01"},{"lineNumber":26,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":27,"author":{"gitId":"larrywang0701"},"content":"    private Model model;","lastModifiedDate":"2023-10-12"},{"lineNumber":28,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":29,"author":{"gitId":"larrywang0701"},"content":"    @BeforeEach","lastModifiedDate":"2023-10-12"},{"lineNumber":30,"author":{"gitId":"larrywang0701"},"content":"    public void setUp() {","lastModifiedDate":"2023-10-12"},{"lineNumber":31,"author":{"gitId":"larrywang0701"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-12"},{"lineNumber":32,"author":{"gitId":"larrywang0701"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":33,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":34,"author":{"gitId":"larrywang0701"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":35,"author":{"gitId":"larrywang0701"},"content":"    public void execute_correctCommand_success() {","lastModifiedDate":"2023-11-01"},{"lineNumber":36,"author":{"gitId":"larrywang0701"},"content":"        ContactID contactId \u003d ContactID.fromInt(1);","lastModifiedDate":"2023-10-25"},{"lineNumber":37,"author":{"gitId":"larrywang0701"},"content":"        EventID eventID \u003d EventID.fromInt(1);","lastModifiedDate":"2023-10-25"},{"lineNumber":38,"author":{"gitId":"larrywang0701"},"content":"        model.addEvent(VALID_EVENT_0, model.findPersonByUserFriendlyId(contactId));","lastModifiedDate":"2023-11-01"},{"lineNumber":39,"author":{"gitId":"larrywang0701"},"content":"        assertCommandSuccessWithFeedback(() -\u003e new DeleteEventCommand(contactId, eventID)","lastModifiedDate":"2023-10-25"},{"lineNumber":40,"author":{"gitId":"larrywang0701"},"content":"                .execute(model), DeleteEventCommand.MESSAGE_SUCCESS + eventID + \". \" + VALID_EVENT_0.getName());","lastModifiedDate":"2023-10-25"},{"lineNumber":41,"author":{"gitId":"larrywang0701"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":42,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":43,"author":{"gitId":"larrywang0701"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":44,"author":{"gitId":"larrywang0701"},"content":"    public void execute_contactNotFound_fails() {","lastModifiedDate":"2023-11-01"},{"lineNumber":45,"author":{"gitId":"larrywang0701"},"content":"        ContactID contactId \u003d ContactID.fromInt(999);","lastModifiedDate":"2023-10-25"},{"lineNumber":46,"author":{"gitId":"larrywang0701"},"content":"        EventID eventId \u003d EventID.fromInt(1);","lastModifiedDate":"2023-10-25"},{"lineNumber":47,"author":{"gitId":"larrywang0701"},"content":"        assertCommandFailWithFeedback(() -\u003e new DeleteEventCommand(contactId, eventId)","lastModifiedDate":"2023-10-25"},{"lineNumber":48,"author":{"gitId":"larrywang0701"},"content":"                .execute(model), DeleteEventCommand.MESSAGE_PERSON_NOT_FOUND + contactId.getId());","lastModifiedDate":"2023-10-25"},{"lineNumber":49,"author":{"gitId":"larrywang0701"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":50,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":51,"author":{"gitId":"larrywang0701"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":52,"author":{"gitId":"larrywang0701"},"content":"    public void execute_eventNotFound_fails() {","lastModifiedDate":"2023-11-01"},{"lineNumber":53,"author":{"gitId":"larrywang0701"},"content":"        ContactID contactId \u003d ContactID.fromInt(1);","lastModifiedDate":"2023-10-25"},{"lineNumber":54,"author":{"gitId":"larrywang0701"},"content":"        EventID invalidEventId \u003d EventID.fromInt(99999);","lastModifiedDate":"2023-10-25"},{"lineNumber":55,"author":{"gitId":"larrywang0701"},"content":"        model.addEvent(VALID_EVENT_1, model.findPersonByUserFriendlyId(contactId));","lastModifiedDate":"2023-11-01"},{"lineNumber":56,"author":{"gitId":"larrywang0701"},"content":"        assertCommandFailWithFeedback(() -\u003e new DeleteEventCommand(contactId, invalidEventId)","lastModifiedDate":"2023-10-25"},{"lineNumber":57,"author":{"gitId":"larrywang0701"},"content":"                .execute(model), DeleteEventCommand.MESSAGE_EVENT_NOT_FOUND + invalidEventId);","lastModifiedDate":"2023-10-12"},{"lineNumber":58,"author":{"gitId":"larrywang0701"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":59,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":60,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":61,"author":{"gitId":"larrywang0701"},"content":"    private void assertCommandSuccessWithFeedback(ThrowingSupplier\u003cCommandResult\u003e function, String result) {","lastModifiedDate":"2023-10-12"},{"lineNumber":62,"author":{"gitId":"larrywang0701"},"content":"        CommandResult actualResult \u003d null;","lastModifiedDate":"2023-11-01"},{"lineNumber":63,"author":{"gitId":"larrywang0701"},"content":"        try {","lastModifiedDate":"2023-10-12"},{"lineNumber":64,"author":{"gitId":"larrywang0701"},"content":"            actualResult \u003d function.get();","lastModifiedDate":"2023-11-01"},{"lineNumber":65,"author":{"gitId":"larrywang0701"},"content":"        } catch (Throwable e) {","lastModifiedDate":"2023-10-12"},{"lineNumber":66,"author":{"gitId":"larrywang0701"},"content":"            throw new AssertionError(\"Execution of command should not fail, but caught: \" + e);","lastModifiedDate":"2023-11-01"},{"lineNumber":67,"author":{"gitId":"larrywang0701"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":68,"author":{"gitId":"larrywang0701"},"content":"        assertEquals(new CommandResult(result), actualResult);","lastModifiedDate":"2023-11-01"},{"lineNumber":69,"author":{"gitId":"larrywang0701"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":70,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":71,"author":{"gitId":"larrywang0701"},"content":"    private void assertCommandFailWithFeedback(ThrowingSupplier\u003cCommandResult\u003e function, String errResult) {","lastModifiedDate":"2023-10-12"},{"lineNumber":72,"author":{"gitId":"larrywang0701"},"content":"        try {","lastModifiedDate":"2023-10-12"},{"lineNumber":73,"author":{"gitId":"larrywang0701"},"content":"            function.get();","lastModifiedDate":"2023-10-12"},{"lineNumber":74,"author":{"gitId":"larrywang0701"},"content":"        } catch (Throwable e) {","lastModifiedDate":"2023-10-12"},{"lineNumber":75,"author":{"gitId":"larrywang0701"},"content":"            if (!(e instanceof CommandException)) {","lastModifiedDate":"2023-10-12"},{"lineNumber":76,"author":{"gitId":"larrywang0701"},"content":"                throw new AssertionError(\"Execution of command failed but not due to CommandException. \" + e);","lastModifiedDate":"2023-11-01"},{"lineNumber":77,"author":{"gitId":"larrywang0701"},"content":"            }","lastModifiedDate":"2023-10-12"},{"lineNumber":78,"author":{"gitId":"larrywang0701"},"content":"            assertEquals(e.getMessage(), errResult);","lastModifiedDate":"2023-10-12"},{"lineNumber":79,"author":{"gitId":"larrywang0701"},"content":"            return;","lastModifiedDate":"2023-10-12"},{"lineNumber":80,"author":{"gitId":"larrywang0701"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":81,"author":{"gitId":"larrywang0701"},"content":"        throw new AssertionError(\"Execution of command should fail.\");","lastModifiedDate":"2023-10-12"},{"lineNumber":82,"author":{"gitId":"larrywang0701"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":83,"author":{"gitId":"larrywang0701"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"larrywang0701":83}},{"path":"src/test/java/seedu/address/logic/commands/DeleteNoteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"josepholim"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-15"},{"lineNumber":2,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":3,"author":{"gitId":"josepholim"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-15"},{"lineNumber":4,"author":{"gitId":"josepholim"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-16"},{"lineNumber":5,"author":{"gitId":"josepholim"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-16"},{"lineNumber":6,"author":{"gitId":"josepholim"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NOTE_A_NOTE_ID;","lastModifiedDate":"2023-10-16"},{"lineNumber":7,"author":{"gitId":"josepholim"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NOTE_A_PERSON_ID;","lastModifiedDate":"2023-10-16"},{"lineNumber":8,"author":{"gitId":"josepholim"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NOTE_B_NOTE_ID;","lastModifiedDate":"2023-10-16"},{"lineNumber":9,"author":{"gitId":"josepholim"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NOTE_B_PERSON_ID;","lastModifiedDate":"2023-10-16"},{"lineNumber":10,"author":{"gitId":"josepholim"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2023-10-15"},{"lineNumber":11,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":12,"author":{"gitId":"josepholim"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-10-15"},{"lineNumber":13,"author":{"gitId":"josepholim"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-15"},{"lineNumber":14,"author":{"gitId":"josepholim"},"content":"import org.junit.jupiter.api.function.ThrowingSupplier;","lastModifiedDate":"2023-10-15"},{"lineNumber":15,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":16,"author":{"gitId":"josepholim"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-11-13"},{"lineNumber":17,"author":{"gitId":"josepholim"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-15"},{"lineNumber":18,"author":{"gitId":"josepholim"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-15"},{"lineNumber":19,"author":{"gitId":"josepholim"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-10-15"},{"lineNumber":20,"author":{"gitId":"josepholim"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-10-15"},{"lineNumber":21,"author":{"gitId":"josepholim"},"content":"import seedu.address.model.note.Note;","lastModifiedDate":"2023-10-15"},{"lineNumber":22,"author":{"gitId":"josepholim"},"content":"import seedu.address.model.note.NoteID;","lastModifiedDate":"2023-10-27"},{"lineNumber":23,"author":{"gitId":"larrywang0701"},"content":"import seedu.address.model.person.ContactID;","lastModifiedDate":"2023-10-25"},{"lineNumber":24,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":25,"author":{"gitId":"josepholim"},"content":"public class DeleteNoteCommandTest {","lastModifiedDate":"2023-10-15"},{"lineNumber":26,"author":{"gitId":"josepholim"},"content":"    private static final Note VALID_NOTE_0 \u003d new Note(\"Meeting Topics\",","lastModifiedDate":"2023-10-15"},{"lineNumber":27,"author":{"gitId":"josepholim"},"content":"            \"The topic is about the framework design of the project\");","lastModifiedDate":"2023-10-15"},{"lineNumber":28,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":29,"author":{"gitId":"josepholim"},"content":"    private Model model;","lastModifiedDate":"2023-10-15"},{"lineNumber":30,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":31,"author":{"gitId":"josepholim"},"content":"    @BeforeEach","lastModifiedDate":"2023-10-15"},{"lineNumber":32,"author":{"gitId":"josepholim"},"content":"    public void setUp() {","lastModifiedDate":"2023-10-15"},{"lineNumber":33,"author":{"gitId":"josepholim"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-15"},{"lineNumber":34,"author":{"gitId":"josepholim"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":35,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":36,"author":{"gitId":"josepholim"},"content":"    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":37,"author":{"gitId":"josepholim"},"content":"    public void execute_correctCommand_success() throws CommandException {","lastModifiedDate":"2023-10-15"},{"lineNumber":38,"author":{"gitId":"larrywang0701"},"content":"        ContactID contactId \u003d ContactID.fromInt(1);","lastModifiedDate":"2023-10-25"},{"lineNumber":39,"author":{"gitId":"josepholim"},"content":"        NoteID noteId \u003d NoteID.fromInt(1);","lastModifiedDate":"2023-10-27"},{"lineNumber":40,"author":{"gitId":"larrywang0701"},"content":"        model.findPersonByUserFriendlyId(contactId).addNote(VALID_NOTE_0);","lastModifiedDate":"2023-10-25"},{"lineNumber":41,"author":{"gitId":"josepholim"},"content":"        assertCommandSuccessWithFeedback(() -\u003e new DeleteNoteCommand(contactId, noteId)","lastModifiedDate":"2023-10-27"},{"lineNumber":42,"author":{"gitId":"josepholim"},"content":"                .execute(model), DeleteNoteCommand.MESSAGE_SUCCESS + \"1. Meeting Topics\");","lastModifiedDate":"2023-10-27"},{"lineNumber":43,"author":{"gitId":"josepholim"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":44,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":45,"author":{"gitId":"josepholim"},"content":"    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":46,"author":{"gitId":"josepholim"},"content":"    public void execute_personNotFound_fails() throws CommandException {","lastModifiedDate":"2023-10-15"},{"lineNumber":47,"author":{"gitId":"josepholim"},"content":"        ContactID contactId \u003d ContactID.fromInt(999);","lastModifiedDate":"2023-10-27"},{"lineNumber":48,"author":{"gitId":"josepholim"},"content":"        NoteID noteId \u003d NoteID.fromInt(1);","lastModifiedDate":"2023-10-27"},{"lineNumber":49,"author":{"gitId":"josepholim"},"content":"        assertCommandFailWithFeedback(() -\u003e new DeleteNoteCommand(contactId, noteId)","lastModifiedDate":"2023-10-27"},{"lineNumber":50,"author":{"gitId":"josepholim"},"content":"                .execute(model), DeleteNoteCommand.MESSAGE_PERSON_NOT_FOUND + contactId.getId());","lastModifiedDate":"2023-10-27"},{"lineNumber":51,"author":{"gitId":"josepholim"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":52,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":53,"author":{"gitId":"josepholim"},"content":"    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":54,"author":{"gitId":"josepholim"},"content":"    public void execute_noteNotFound_fails() throws CommandException {","lastModifiedDate":"2023-10-15"},{"lineNumber":55,"author":{"gitId":"larrywang0701"},"content":"        ContactID contactId \u003d ContactID.fromInt(1);","lastModifiedDate":"2023-10-25"},{"lineNumber":56,"author":{"gitId":"josepholim"},"content":"        NoteID invalidNoteId \u003d NoteID.fromInt(99999);","lastModifiedDate":"2023-10-27"},{"lineNumber":57,"author":{"gitId":"larrywang0701"},"content":"        model.findPersonByUserFriendlyId(contactId).addNote(VALID_NOTE_0);","lastModifiedDate":"2023-10-25"},{"lineNumber":58,"author":{"gitId":"josepholim"},"content":"        assertCommandFailWithFeedback(() -\u003e new DeleteNoteCommand(contactId, invalidNoteId)","lastModifiedDate":"2023-10-27"},{"lineNumber":59,"author":{"gitId":"josepholim"},"content":"                .execute(model), DeleteNoteCommand.MESSAGE_NOTE_NOT_FOUND + invalidNoteId.getId());","lastModifiedDate":"2023-10-27"},{"lineNumber":60,"author":{"gitId":"josepholim"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":61,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":62,"author":{"gitId":"josepholim"},"content":"    private void assertCommandSuccessWithFeedback(ThrowingSupplier\u003cCommandResult\u003e function, String result) {","lastModifiedDate":"2023-10-15"},{"lineNumber":63,"author":{"gitId":"josepholim"},"content":"        try {","lastModifiedDate":"2023-10-15"},{"lineNumber":64,"author":{"gitId":"josepholim"},"content":"            assertEquals(function.get(), new CommandResult(result));","lastModifiedDate":"2023-10-15"},{"lineNumber":65,"author":{"gitId":"josepholim"},"content":"        } catch (Throwable e) {","lastModifiedDate":"2023-10-15"},{"lineNumber":66,"author":{"gitId":"josepholim"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", e);","lastModifiedDate":"2023-10-15"},{"lineNumber":67,"author":{"gitId":"josepholim"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":68,"author":{"gitId":"josepholim"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":69,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":70,"author":{"gitId":"josepholim"},"content":"    private void assertCommandFailWithFeedback(ThrowingSupplier\u003cCommandResult\u003e function, String errResult) {","lastModifiedDate":"2023-10-15"},{"lineNumber":71,"author":{"gitId":"josepholim"},"content":"        try {","lastModifiedDate":"2023-10-15"},{"lineNumber":72,"author":{"gitId":"josepholim"},"content":"            function.get();","lastModifiedDate":"2023-10-15"},{"lineNumber":73,"author":{"gitId":"josepholim"},"content":"        } catch (Throwable e) {","lastModifiedDate":"2023-10-15"},{"lineNumber":74,"author":{"gitId":"josepholim"},"content":"            if (!(e instanceof CommandException)) {","lastModifiedDate":"2023-10-15"},{"lineNumber":75,"author":{"gitId":"josepholim"},"content":"                throw new AssertionError(\"Execution of command failed but not due to CommandException.\");","lastModifiedDate":"2023-10-15"},{"lineNumber":76,"author":{"gitId":"josepholim"},"content":"            }","lastModifiedDate":"2023-10-15"},{"lineNumber":77,"author":{"gitId":"josepholim"},"content":"            assertEquals(e.getMessage(), errResult);","lastModifiedDate":"2023-10-15"},{"lineNumber":78,"author":{"gitId":"josepholim"},"content":"            return;","lastModifiedDate":"2023-10-15"},{"lineNumber":79,"author":{"gitId":"josepholim"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":80,"author":{"gitId":"josepholim"},"content":"        throw new AssertionError(\"Execution of command should fail.\");","lastModifiedDate":"2023-10-15"},{"lineNumber":81,"author":{"gitId":"josepholim"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":82,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":83,"author":{"gitId":"josepholim"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":84,"author":{"gitId":"josepholim"},"content":"    public void equals() {","lastModifiedDate":"2023-10-16"},{"lineNumber":85,"author":{"gitId":"josepholim"},"content":"        DeleteNoteCommand deleteNoteACommand \u003d new DeleteNoteCommand(ContactID.fromString(VALID_NOTE_A_PERSON_ID),","lastModifiedDate":"2023-10-27"},{"lineNumber":86,"author":{"gitId":"josepholim"},"content":"                NoteID.fromString(VALID_NOTE_A_NOTE_ID));","lastModifiedDate":"2023-10-27"},{"lineNumber":87,"author":{"gitId":"josepholim"},"content":"        DeleteNoteCommand deleteNoteBCommand \u003d new DeleteNoteCommand(ContactID.fromString(VALID_NOTE_B_PERSON_ID),","lastModifiedDate":"2023-10-27"},{"lineNumber":88,"author":{"gitId":"josepholim"},"content":"                NoteID.fromString(VALID_NOTE_B_NOTE_ID));","lastModifiedDate":"2023-10-27"},{"lineNumber":89,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":90,"author":{"gitId":"josepholim"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-16"},{"lineNumber":91,"author":{"gitId":"josepholim"},"content":"        assertTrue(deleteNoteACommand.equals(deleteNoteACommand));","lastModifiedDate":"2023-10-16"},{"lineNumber":92,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":93,"author":{"gitId":"josepholim"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-16"},{"lineNumber":94,"author":{"gitId":"josepholim"},"content":"        DeleteNoteCommand deleteNoteACommandCopy \u003d new DeleteNoteCommand(ContactID.fromString(VALID_NOTE_A_PERSON_ID),","lastModifiedDate":"2023-10-27"},{"lineNumber":95,"author":{"gitId":"josepholim"},"content":"                NoteID.fromString(VALID_NOTE_A_NOTE_ID));","lastModifiedDate":"2023-10-27"},{"lineNumber":96,"author":{"gitId":"josepholim"},"content":"        assertTrue(deleteNoteACommand.equals(deleteNoteACommandCopy));","lastModifiedDate":"2023-10-16"},{"lineNumber":97,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":98,"author":{"gitId":"josepholim"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-16"},{"lineNumber":99,"author":{"gitId":"josepholim"},"content":"        assertFalse(deleteNoteACommand.equals(1));","lastModifiedDate":"2023-10-16"},{"lineNumber":100,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":101,"author":{"gitId":"josepholim"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-16"},{"lineNumber":102,"author":{"gitId":"josepholim"},"content":"        assertFalse(deleteNoteACommand.equals(null));","lastModifiedDate":"2023-10-16"},{"lineNumber":103,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":104,"author":{"gitId":"josepholim"},"content":"        // different person, different note -\u003e returns false","lastModifiedDate":"2023-11-13"},{"lineNumber":105,"author":{"gitId":"josepholim"},"content":"        assertFalse(deleteNoteACommand.equals(deleteNoteBCommand));","lastModifiedDate":"2023-10-16"},{"lineNumber":106,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":107,"author":{"gitId":"josepholim"},"content":"        // same person, different note -\u003e returns false","lastModifiedDate":"2023-11-13"},{"lineNumber":108,"author":{"gitId":"josepholim"},"content":"        DeleteNoteCommand differentNoteDeleteNoteCommand \u003d new DeleteNoteCommand(","lastModifiedDate":"2023-11-13"},{"lineNumber":109,"author":{"gitId":"josepholim"},"content":"                ContactID.fromString(VALID_NOTE_A_PERSON_ID),","lastModifiedDate":"2023-11-13"},{"lineNumber":110,"author":{"gitId":"josepholim"},"content":"                NoteID.fromString(VALID_NOTE_A_NOTE_ID + 1));","lastModifiedDate":"2023-11-13"},{"lineNumber":111,"author":{"gitId":"josepholim"},"content":"        assertFalse(deleteNoteACommand.equals(differentNoteDeleteNoteCommand));","lastModifiedDate":"2023-11-13"},{"lineNumber":112,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":113,"author":{"gitId":"josepholim"},"content":"        // different person, same note -\u003e returns false","lastModifiedDate":"2023-11-13"},{"lineNumber":114,"author":{"gitId":"josepholim"},"content":"        DeleteNoteCommand differentPersonDeleteNoteCommand \u003d new DeleteNoteCommand(","lastModifiedDate":"2023-11-13"},{"lineNumber":115,"author":{"gitId":"josepholim"},"content":"                ContactID.fromString(VALID_NOTE_B_PERSON_ID),","lastModifiedDate":"2023-11-13"},{"lineNumber":116,"author":{"gitId":"josepholim"},"content":"                NoteID.fromString(VALID_NOTE_A_NOTE_ID));","lastModifiedDate":"2023-11-13"},{"lineNumber":117,"author":{"gitId":"josepholim"},"content":"        assertFalse(deleteNoteACommand.equals(differentPersonDeleteNoteCommand));","lastModifiedDate":"2023-11-13"},{"lineNumber":118,"author":{"gitId":"josepholim"},"content":"    }","lastModifiedDate":"2023-11-13"},{"lineNumber":119,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":120,"author":{"gitId":"josepholim"},"content":"    @Test","lastModifiedDate":"2023-11-13"},{"lineNumber":121,"author":{"gitId":"josepholim"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-11-13"},{"lineNumber":122,"author":{"gitId":"josepholim"},"content":"        DeleteNoteCommand deleteNoteACommand \u003d new DeleteNoteCommand(ContactID.fromString(VALID_NOTE_A_PERSON_ID),","lastModifiedDate":"2023-11-13"},{"lineNumber":123,"author":{"gitId":"josepholim"},"content":"                NoteID.fromString(VALID_NOTE_A_NOTE_ID));","lastModifiedDate":"2023-11-13"},{"lineNumber":124,"author":{"gitId":"josepholim"},"content":"        String expected \u003d new ToStringBuilder(deleteNoteACommand)","lastModifiedDate":"2023-11-13"},{"lineNumber":125,"author":{"gitId":"josepholim"},"content":"                .add(\"noteIdToDelete\", VALID_NOTE_A_NOTE_ID)","lastModifiedDate":"2023-11-13"},{"lineNumber":126,"author":{"gitId":"josepholim"},"content":"                .add(\"contactId\", VALID_NOTE_A_PERSON_ID)","lastModifiedDate":"2023-11-13"},{"lineNumber":127,"author":{"gitId":"josepholim"},"content":"                .toString();","lastModifiedDate":"2023-11-13"},{"lineNumber":128,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":129,"author":{"gitId":"josepholim"},"content":"        assertEquals(expected, deleteNoteACommand.toString());","lastModifiedDate":"2023-11-13"},{"lineNumber":130,"author":{"gitId":"josepholim"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":131,"author":{"gitId":"josepholim"},"content":"}","lastModifiedDate":"2023-10-15"}],"authorContributionMap":{"larrywang0701":5,"josepholim":126}},{"path":"src/test/java/seedu/address/logic/commands/DeletePersonCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2020-12-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * {@code DeleteCommand}.","lastModifiedDate":"2018-01-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"larrywang0701"},"content":"public class DeletePersonCommandTest {","lastModifiedDate":"2023-10-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":33,"author":{"gitId":"larrywang0701"},"content":"        DeletePersonCommand deletePersonCommand \u003d new DeletePersonCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2023-10-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":35,"author":{"gitId":"larrywang0701"},"content":"        String expectedMessage \u003d String.format(DeletePersonCommand.MESSAGE_DELETE_PERSON_SUCCESS,","lastModifiedDate":"2023-10-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                Messages.format(personToDelete));","lastModifiedDate":"2019-02-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":41,"author":{"gitId":"larrywang0701"},"content":"        assertCommandSuccess(deletePersonCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2017-06-05"},{"lineNumber":47,"author":{"gitId":"larrywang0701"},"content":"        DeletePersonCommand deletePersonCommand \u003d new DeletePersonCommand(outOfBoundIndex);","lastModifiedDate":"2023-10-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":49,"author":{"gitId":"larrywang0701"},"content":"        assertCommandFailure(deletePersonCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":57,"author":{"gitId":"larrywang0701"},"content":"        DeletePersonCommand deletePersonCommand \u003d new DeletePersonCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2023-10-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":59,"author":{"gitId":"larrywang0701"},"content":"        String expectedMessage \u003d String.format(DeletePersonCommand.MESSAGE_DELETE_PERSON_SUCCESS,","lastModifiedDate":"2023-10-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"                Messages.format(personToDelete));","lastModifiedDate":"2019-02-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        showNoPerson(expectedModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":66,"author":{"gitId":"larrywang0701"},"content":"        assertCommandSuccess(deletePersonCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-06-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-06-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2017-06-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":77,"author":{"gitId":"larrywang0701"},"content":"        DeletePersonCommand deletePersonCommand \u003d new DeletePersonCommand(outOfBoundIndex);","lastModifiedDate":"2023-10-12"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":79,"author":{"gitId":"larrywang0701"},"content":"        assertCommandFailure(deletePersonCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-12"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":84,"author":{"gitId":"larrywang0701"},"content":"        DeletePersonCommand deleteFirstCommand \u003d new DeletePersonCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2023-10-12"},{"lineNumber":85,"author":{"gitId":"larrywang0701"},"content":"        DeletePersonCommand deleteSecondCommand \u003d new DeletePersonCommand(INDEX_SECOND_PERSON);","lastModifiedDate":"2023-10-12"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"larrywang0701"},"content":"        DeletePersonCommand deleteFirstCommandCopy \u003d new DeletePersonCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2023-10-12"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d Index.fromOneBased(1);","lastModifiedDate":"2019-02-23"},{"lineNumber":107,"author":{"gitId":"larrywang0701"},"content":"        DeletePersonCommand deletePersonCommand \u003d new DeletePersonCommand(targetIndex);","lastModifiedDate":"2023-10-12"},{"lineNumber":108,"author":{"gitId":"larrywang0701"},"content":"        String expected \u003d DeletePersonCommand.class.getCanonicalName() + \"{targetIndex\u003d\" + targetIndex + \"}\";","lastModifiedDate":"2023-10-12"},{"lineNumber":109,"author":{"gitId":"larrywang0701"},"content":"        assertEquals(expected, deletePersonCommand.toString());","lastModifiedDate":"2023-10-12"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2017-06-05"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    private void showNoPerson(Model model) {","lastModifiedDate":"2017-06-05"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(p -\u003e false);","lastModifiedDate":"2017-06-12"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertTrue(model.getFilteredPersonList().isEmpty());","lastModifiedDate":"2018-02-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":120,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"larrywang0701":17,"-":103}},{"path":"src/test/java/seedu/address/logic/commands/DeleteTagCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"zekone"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-27"},{"lineNumber":2,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":3,"author":{"gitId":"zekone"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-27"},{"lineNumber":4,"author":{"gitId":"zekone"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-27"},{"lineNumber":5,"author":{"gitId":"zekone"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-27"},{"lineNumber":6,"author":{"gitId":"zekone"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2023-10-27"},{"lineNumber":7,"author":{"gitId":"zekone"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2023-10-27"},{"lineNumber":8,"author":{"gitId":"zekone"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2023-10-27"},{"lineNumber":9,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":10,"author":{"gitId":"zekone"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-27"},{"lineNumber":11,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":12,"author":{"gitId":"zekone"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-10-27"},{"lineNumber":13,"author":{"gitId":"zekone"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-27"},{"lineNumber":14,"author":{"gitId":"zekone"},"content":"import org.junit.jupiter.api.function.ThrowingSupplier;","lastModifiedDate":"2023-10-27"},{"lineNumber":15,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":16,"author":{"gitId":"josepholim"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-11-13"},{"lineNumber":17,"author":{"gitId":"zekone"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-27"},{"lineNumber":18,"author":{"gitId":"zekone"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-27"},{"lineNumber":19,"author":{"gitId":"zekone"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-10-27"},{"lineNumber":20,"author":{"gitId":"zekone"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-10-27"},{"lineNumber":21,"author":{"gitId":"zekone"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-10-27"},{"lineNumber":22,"author":{"gitId":"zekone"},"content":"import seedu.address.testutil.TagBuilder;","lastModifiedDate":"2023-10-27"},{"lineNumber":23,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":24,"author":{"gitId":"zekone"},"content":"public class DeleteTagCommandTest {","lastModifiedDate":"2023-10-27"},{"lineNumber":25,"author":{"gitId":"zekone"},"content":"    private Model model;","lastModifiedDate":"2023-10-27"},{"lineNumber":26,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":27,"author":{"gitId":"zekone"},"content":"    @BeforeEach","lastModifiedDate":"2023-10-27"},{"lineNumber":28,"author":{"gitId":"zekone"},"content":"    public void setUp() {","lastModifiedDate":"2023-10-27"},{"lineNumber":29,"author":{"gitId":"zekone"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-27"},{"lineNumber":30,"author":{"gitId":"zekone"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":31,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":32,"author":{"gitId":"zekone"},"content":"    @Test","lastModifiedDate":"2023-10-27"},{"lineNumber":33,"author":{"gitId":"zekone"},"content":"    public void execute_correctCommand_success() throws CommandException {","lastModifiedDate":"2023-10-27"},{"lineNumber":34,"author":{"gitId":"zekone"},"content":"        int personId \u003d 1;","lastModifiedDate":"2023-10-27"},{"lineNumber":35,"author":{"gitId":"zekone"},"content":"        final Set\u003cTag\u003e tagSet \u003d new TagBuilder().inSet();","lastModifiedDate":"2023-10-27"},{"lineNumber":36,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":37,"author":{"gitId":"zekone"},"content":"        assertCommandSuccessWithFeedback(() -\u003e new DeleteTagCommand(personId, tagSet)","lastModifiedDate":"2023-10-27"},{"lineNumber":38,"author":{"gitId":"zekone"},"content":"                .execute(model),","lastModifiedDate":"2023-11-09"},{"lineNumber":39,"author":{"gitId":"zekone"},"content":"                DeleteTagCommand.MESSAGE_SUCCESS + \"\\n\"","lastModifiedDate":"2023-11-09"},{"lineNumber":40,"author":{"gitId":"zekone"},"content":"                        + DeleteTagCommand.MESSAGE_TAGS_DOES_NOT_EXIST + new TagBuilder().build().toString());","lastModifiedDate":"2023-11-09"},{"lineNumber":41,"author":{"gitId":"zekone"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":42,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":43,"author":{"gitId":"zekone"},"content":"    @Test","lastModifiedDate":"2023-10-27"},{"lineNumber":44,"author":{"gitId":"zekone"},"content":"    public void execute_personNotExist_fails() throws CommandException {","lastModifiedDate":"2023-10-27"},{"lineNumber":45,"author":{"gitId":"zekone"},"content":"        int personId \u003d 99999;","lastModifiedDate":"2023-10-27"},{"lineNumber":46,"author":{"gitId":"zekone"},"content":"        final Set\u003cTag\u003e tagSet \u003d new TagBuilder().inSet();","lastModifiedDate":"2023-10-27"},{"lineNumber":47,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":48,"author":{"gitId":"zekone"},"content":"        assertCommandFailWithFeedback(() -\u003e new DeleteTagCommand(personId, tagSet)","lastModifiedDate":"2023-10-27"},{"lineNumber":49,"author":{"gitId":"zekone"},"content":"                .execute(model), DeleteTagCommand.MESSAGE_PERSON_NOT_FOUND + personId);","lastModifiedDate":"2023-10-27"},{"lineNumber":50,"author":{"gitId":"zekone"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":51,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":52,"author":{"gitId":"zekone"},"content":"    private void assertCommandSuccessWithFeedback(ThrowingSupplier\u003cCommandResult\u003e function, String result) {","lastModifiedDate":"2023-10-27"},{"lineNumber":53,"author":{"gitId":"zekone"},"content":"        try {","lastModifiedDate":"2023-10-27"},{"lineNumber":54,"author":{"gitId":"zekone"},"content":"            assertEquals(function.get(), new CommandResult(result));","lastModifiedDate":"2023-10-27"},{"lineNumber":55,"author":{"gitId":"zekone"},"content":"        } catch (Throwable e) {","lastModifiedDate":"2023-10-27"},{"lineNumber":56,"author":{"gitId":"zekone"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", e);","lastModifiedDate":"2023-10-27"},{"lineNumber":57,"author":{"gitId":"zekone"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":58,"author":{"gitId":"zekone"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":59,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":60,"author":{"gitId":"zekone"},"content":"    private void assertCommandFailWithFeedback(ThrowingSupplier\u003cCommandResult\u003e function, String errResult) {","lastModifiedDate":"2023-10-27"},{"lineNumber":61,"author":{"gitId":"zekone"},"content":"        try {","lastModifiedDate":"2023-10-27"},{"lineNumber":62,"author":{"gitId":"zekone"},"content":"            function.get();","lastModifiedDate":"2023-10-27"},{"lineNumber":63,"author":{"gitId":"zekone"},"content":"        } catch (Throwable e) {","lastModifiedDate":"2023-10-27"},{"lineNumber":64,"author":{"gitId":"zekone"},"content":"            if (!(e instanceof CommandException)) {","lastModifiedDate":"2023-10-27"},{"lineNumber":65,"author":{"gitId":"zekone"},"content":"                throw new AssertionError(\"Execution of command failed but not due to CommandException.\");","lastModifiedDate":"2023-10-27"},{"lineNumber":66,"author":{"gitId":"zekone"},"content":"            }","lastModifiedDate":"2023-10-27"},{"lineNumber":67,"author":{"gitId":"zekone"},"content":"            assertEquals(e.getMessage(), errResult);","lastModifiedDate":"2023-10-27"},{"lineNumber":68,"author":{"gitId":"zekone"},"content":"            return;","lastModifiedDate":"2023-10-27"},{"lineNumber":69,"author":{"gitId":"zekone"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":70,"author":{"gitId":"zekone"},"content":"        throw new AssertionError(\"Execution of command should fail.\");","lastModifiedDate":"2023-10-27"},{"lineNumber":71,"author":{"gitId":"zekone"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":72,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":73,"author":{"gitId":"zekone"},"content":"    @Test","lastModifiedDate":"2023-10-27"},{"lineNumber":74,"author":{"gitId":"zekone"},"content":"    public void equals() {","lastModifiedDate":"2023-10-27"},{"lineNumber":75,"author":{"gitId":"zekone"},"content":"        final Set\u003cTag\u003e tagSetA \u003d new TagBuilder().withTag(VALID_TAG_HUSBAND).inSet();","lastModifiedDate":"2023-10-27"},{"lineNumber":76,"author":{"gitId":"zekone"},"content":"        final Set\u003cTag\u003e tagSetB \u003d new TagBuilder().withTag(VALID_TAG_FRIEND).inSet();","lastModifiedDate":"2023-10-27"},{"lineNumber":77,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":78,"author":{"gitId":"zekone"},"content":"        DeleteTagCommand commandA \u003d new DeleteTagCommand(1, tagSetA);","lastModifiedDate":"2023-10-27"},{"lineNumber":79,"author":{"gitId":"josepholim"},"content":"        DeleteTagCommand commandB \u003d new DeleteTagCommand(2, tagSetB);","lastModifiedDate":"2023-11-13"},{"lineNumber":80,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":81,"author":{"gitId":"zekone"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-27"},{"lineNumber":82,"author":{"gitId":"zekone"},"content":"        assertTrue(commandA.equals(commandA));","lastModifiedDate":"2023-10-27"},{"lineNumber":83,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":84,"author":{"gitId":"zekone"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-27"},{"lineNumber":85,"author":{"gitId":"zekone"},"content":"        DeleteTagCommand commandACopy \u003d new DeleteTagCommand(1, tagSetA);","lastModifiedDate":"2023-10-27"},{"lineNumber":86,"author":{"gitId":"zekone"},"content":"        assertTrue(commandA.equals(commandACopy));","lastModifiedDate":"2023-10-27"},{"lineNumber":87,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":88,"author":{"gitId":"zekone"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-27"},{"lineNumber":89,"author":{"gitId":"zekone"},"content":"        assertFalse(commandA.equals(1));","lastModifiedDate":"2023-10-27"},{"lineNumber":90,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":91,"author":{"gitId":"zekone"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-27"},{"lineNumber":92,"author":{"gitId":"zekone"},"content":"        assertFalse(commandA.equals(null));","lastModifiedDate":"2023-10-27"},{"lineNumber":93,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":94,"author":{"gitId":"josepholim"},"content":"        // different person, different tag -\u003e returns false","lastModifiedDate":"2023-11-13"},{"lineNumber":95,"author":{"gitId":"zekone"},"content":"        assertFalse(commandA.equals(commandB));","lastModifiedDate":"2023-10-27"},{"lineNumber":96,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":97,"author":{"gitId":"josepholim"},"content":"        // same person, different note -\u003e returns false","lastModifiedDate":"2023-11-13"},{"lineNumber":98,"author":{"gitId":"josepholim"},"content":"        DeleteTagCommand differentNoteCommand \u003d new DeleteTagCommand(1, tagSetB);","lastModifiedDate":"2023-11-13"},{"lineNumber":99,"author":{"gitId":"josepholim"},"content":"        assertFalse(commandA.equals(differentNoteCommand));","lastModifiedDate":"2023-11-13"},{"lineNumber":100,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":101,"author":{"gitId":"josepholim"},"content":"        // different person, same note -\u003e returns false","lastModifiedDate":"2023-11-13"},{"lineNumber":102,"author":{"gitId":"josepholim"},"content":"        DeleteTagCommand differentPersonCommand \u003d new DeleteTagCommand(2, tagSetA);","lastModifiedDate":"2023-11-13"},{"lineNumber":103,"author":{"gitId":"josepholim"},"content":"        assertFalse(commandA.equals(differentPersonCommand));","lastModifiedDate":"2023-11-13"},{"lineNumber":104,"author":{"gitId":"josepholim"},"content":"    }","lastModifiedDate":"2023-11-13"},{"lineNumber":105,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":106,"author":{"gitId":"josepholim"},"content":"    @Test","lastModifiedDate":"2023-11-13"},{"lineNumber":107,"author":{"gitId":"josepholim"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-11-13"},{"lineNumber":108,"author":{"gitId":"josepholim"},"content":"        final Set\u003cTag\u003e tagSetA \u003d new TagBuilder().withTag(VALID_TAG_HUSBAND).inSet();","lastModifiedDate":"2023-11-13"},{"lineNumber":109,"author":{"gitId":"josepholim"},"content":"        DeleteTagCommand deleteTagACommand \u003d new DeleteTagCommand(1, tagSetA);","lastModifiedDate":"2023-11-13"},{"lineNumber":110,"author":{"gitId":"josepholim"},"content":"        String expected \u003d new ToStringBuilder(deleteTagACommand)","lastModifiedDate":"2023-11-13"},{"lineNumber":111,"author":{"gitId":"josepholim"},"content":"                .add(\"toDelete\", tagSetA)","lastModifiedDate":"2023-11-13"},{"lineNumber":112,"author":{"gitId":"josepholim"},"content":"                .add(\"contactId\", 1)","lastModifiedDate":"2023-11-13"},{"lineNumber":113,"author":{"gitId":"josepholim"},"content":"                .toString();","lastModifiedDate":"2023-11-13"},{"lineNumber":114,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":115,"author":{"gitId":"josepholim"},"content":"        assertEquals(expected, deleteTagACommand.toString());","lastModifiedDate":"2023-11-13"},{"lineNumber":116,"author":{"gitId":"zekone"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":117,"author":{"gitId":"zekone"},"content":"}","lastModifiedDate":"2023-10-27"}],"authorContributionMap":{"zekone":94,"josepholim":23}},{"path":"src/test/java/seedu/address/logic/commands/ExitCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.ExitCommand.MESSAGE_EXIT_ACKNOWLEDGEMENT;","lastModifiedDate":"2017-06-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ExitCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void execute_exit_success() {","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"Nixx162"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, true, false);","lastModifiedDate":"2023-11-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ExitCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"-":19,"Nixx162":1}},{"path":"src/test/java/seedu/address/logic/commands/HelpCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":3,"author":{"gitId":"josepholim"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-11-13"},{"lineNumber":4,"author":{"gitId":"josepholim"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-11-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-10-20"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-20"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":9,"author":{"gitId":"Nixx162"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-20"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-10-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class HelpCommandTest {","lastModifiedDate":"2023-10-20"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2023-10-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2023-10-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-20"},{"lineNumber":18,"author":{"gitId":"Nixx162"},"content":"    public void execute_showAll_success() {","lastModifiedDate":"2023-10-20"},{"lineNumber":19,"author":{"gitId":"Nixx162"},"content":"        assertCommandSuccess(new HelpCommand(true), model, Messages.getHelpMessageForAll(), expectedModel);","lastModifiedDate":"2023-10-20"},{"lineNumber":20,"author":{"gitId":"Nixx162"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":21,"author":{"gitId":"Nixx162"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":22,"author":{"gitId":"Nixx162"},"content":"    @Test","lastModifiedDate":"2023-10-20"},{"lineNumber":23,"author":{"gitId":"Nixx162"},"content":"    public void execute_unrecognizable_success() {","lastModifiedDate":"2023-10-20"},{"lineNumber":24,"author":{"gitId":"Nixx162"},"content":"        assertCommandSuccess(new HelpCommand(false, AddCommand.COMMAND_WORD),","lastModifiedDate":"2023-10-20"},{"lineNumber":25,"author":{"gitId":"Nixx162"},"content":"            model,","lastModifiedDate":"2023-10-20"},{"lineNumber":26,"author":{"gitId":"Nixx162"},"content":"            Messages.getHelpMessageForUnrecognizableCommand(AddCommand.COMMAND_WORD),","lastModifiedDate":"2023-10-20"},{"lineNumber":27,"author":{"gitId":"Nixx162"},"content":"            expectedModel);","lastModifiedDate":"2023-10-20"},{"lineNumber":28,"author":{"gitId":"Nixx162"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":29,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":30,"author":{"gitId":"josepholim"},"content":"    @Test","lastModifiedDate":"2023-11-13"},{"lineNumber":31,"author":{"gitId":"josepholim"},"content":"    public void equals() {","lastModifiedDate":"2023-11-13"},{"lineNumber":32,"author":{"gitId":"josepholim"},"content":"        HelpCommand helpCommand \u003d new HelpCommand(true);","lastModifiedDate":"2023-11-13"},{"lineNumber":33,"author":{"gitId":"josepholim"},"content":"        HelpCommand helpCommandAdd \u003d new HelpCommand(true, AddCommand.COMMAND_WORD);","lastModifiedDate":"2023-11-13"},{"lineNumber":34,"author":{"gitId":"josepholim"},"content":"        HelpCommand helpCommandDelete \u003d new HelpCommand(true, DeleteCommand.COMMAND_WORD);","lastModifiedDate":"2023-11-13"},{"lineNumber":35,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":36,"author":{"gitId":"josepholim"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-11-13"},{"lineNumber":37,"author":{"gitId":"josepholim"},"content":"        assertTrue(helpCommand.equals(helpCommand));","lastModifiedDate":"2023-11-13"},{"lineNumber":38,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":39,"author":{"gitId":"josepholim"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-11-13"},{"lineNumber":40,"author":{"gitId":"josepholim"},"content":"        assertTrue(helpCommand.equals(new HelpCommand(true)));","lastModifiedDate":"2023-11-13"},{"lineNumber":41,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":42,"author":{"gitId":"josepholim"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-11-13"},{"lineNumber":43,"author":{"gitId":"josepholim"},"content":"        assertFalse(helpCommand.equals(1));","lastModifiedDate":"2023-11-13"},{"lineNumber":44,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":45,"author":{"gitId":"josepholim"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-11-13"},{"lineNumber":46,"author":{"gitId":"josepholim"},"content":"        assertFalse(helpCommand.equals(null));","lastModifiedDate":"2023-11-13"},{"lineNumber":47,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":48,"author":{"gitId":"josepholim"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2023-11-13"},{"lineNumber":49,"author":{"gitId":"josepholim"},"content":"        assertFalse(helpCommand.equals(helpCommandAdd));","lastModifiedDate":"2023-11-13"},{"lineNumber":50,"author":{"gitId":"josepholim"},"content":"        assertFalse(helpCommandAdd.equals(helpCommandDelete));","lastModifiedDate":"2023-11-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-11-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-10-20"}],"authorContributionMap":{"-":16,"josepholim":24,"Nixx162":12}},{"path":"src/test/java/seedu/address/logic/commands/ListCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2018-01-31"},{"lineNumber":6,"author":{"gitId":"AndrewJanong"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2023-11-02"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"AndrewJanong"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-11-02"},{"lineNumber":10,"author":{"gitId":"AndrewJanong"},"content":"import java.util.Set;","lastModifiedDate":"2023-11-02"},{"lineNumber":11,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"AndrewJanong"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-11-02"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ListCommand.","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class ListCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private Model expectedModel;","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void execute_listIsNotFiltered_showsSameList() {","lastModifiedDate":"2017-08-15"},{"lineNumber":36,"author":{"gitId":"AndrewJanong"},"content":"        Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-11-02"},{"lineNumber":37,"author":{"gitId":"AndrewJanong"},"content":"        assertCommandSuccess(new ListPersonCommand(tags), model, ListPersonCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2023-11-02"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void execute_listIsFiltered_showsEverything() {","lastModifiedDate":"2017-08-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":43,"author":{"gitId":"AndrewJanong"},"content":"        Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-11-02"},{"lineNumber":44,"author":{"gitId":"AndrewJanong"},"content":"        assertCommandSuccess(new ListPersonCommand(tags), model, ListPersonCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2023-11-02"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":46,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":47,"author":{"gitId":"AndrewJanong"},"content":"    @Test","lastModifiedDate":"2023-11-02"},{"lineNumber":48,"author":{"gitId":"AndrewJanong"},"content":"    public void execute_listIsFilteredByTag_showsEverything() {","lastModifiedDate":"2023-11-02"},{"lineNumber":49,"author":{"gitId":"AndrewJanong"},"content":"        showPersonAtIndex(expectedModel, INDEX_SECOND_PERSON);","lastModifiedDate":"2023-11-02"},{"lineNumber":50,"author":{"gitId":"AndrewJanong"},"content":"        Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-11-02"},{"lineNumber":51,"author":{"gitId":"AndrewJanong"},"content":"        Tag tag \u003d new Tag(\"owesMoney\");","lastModifiedDate":"2023-11-02"},{"lineNumber":52,"author":{"gitId":"AndrewJanong"},"content":"        tags.add(tag);","lastModifiedDate":"2023-11-02"},{"lineNumber":53,"author":{"gitId":"AndrewJanong"},"content":"        assertCommandSuccess(new ListPersonCommand(tags), model, ListPersonCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2023-11-02"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"AndrewJanong":17,"-":38}},{"path":"src/test/java/seedu/address/logic/commands/ListEventCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"larrywang0701"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"larrywang0701"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"larrywang0701"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"larrywang0701"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"larrywang0701"},"content":"import org.junit.jupiter.api.function.ThrowingSupplier;","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"larrywang0701"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"larrywang0701"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"larrywang0701"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"larrywang0701"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"larrywang0701"},"content":"import seedu.address.model.event.EventTime;","lastModifiedDate":"2023-11-01"},{"lineNumber":14,"author":{"gitId":"larrywang0701"},"content":"import seedu.address.model.person.ContactID;","lastModifiedDate":"2023-10-25"},{"lineNumber":15,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"larrywang0701"},"content":"public class ListEventCommandTest {","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"larrywang0701"},"content":"    private static final Event VALID_EVENT_0 \u003d new Event(\"Have a meeting\", \"02:00\", \"04:00\",","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"larrywang0701"},"content":"            \"COM1\", \"Discuss project\");","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"larrywang0701"},"content":"    private static final Event VALID_EVENT_1 \u003d new Event(\"Midterm Exam\", \"04:01\", \"06:00\",","lastModifiedDate":"2023-11-01"},{"lineNumber":20,"author":{"gitId":"larrywang0701"},"content":"            \"MPSH1\", \"Seat number is xxx.\");","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"larrywang0701"},"content":"    private static final Event VALID_EVENT_2 \u003d new Event(\"Another Midterm Exam\", \"06:01\", \"08:00\",","lastModifiedDate":"2023-11-01"},{"lineNumber":22,"author":{"gitId":"larrywang0701"},"content":"            \"MPSH2\", \"Seat number is xxx.\");","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":24,"author":{"gitId":"larrywang0701"},"content":"    private Model model;","lastModifiedDate":"2023-10-12"},{"lineNumber":25,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"larrywang0701"},"content":"    @BeforeEach","lastModifiedDate":"2023-10-12"},{"lineNumber":27,"author":{"gitId":"larrywang0701"},"content":"    public void setUp() {","lastModifiedDate":"2023-10-12"},{"lineNumber":28,"author":{"gitId":"larrywang0701"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-12"},{"lineNumber":29,"author":{"gitId":"larrywang0701"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":30,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":31,"author":{"gitId":"larrywang0701"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":32,"author":{"gitId":"larrywang0701"},"content":"    public void execute_correctCommandFullList_success() {","lastModifiedDate":"2023-11-01"},{"lineNumber":33,"author":{"gitId":"larrywang0701"},"content":"        model.findPersonByUserFriendlyId(ContactID.fromInt(1)).addEvent(VALID_EVENT_0);","lastModifiedDate":"2023-10-25"},{"lineNumber":34,"author":{"gitId":"larrywang0701"},"content":"        model.findPersonByUserFriendlyId(ContactID.fromInt(2)).addEvent(VALID_EVENT_1);","lastModifiedDate":"2023-10-25"},{"lineNumber":35,"author":{"gitId":"larrywang0701"},"content":"        model.findPersonByUserFriendlyId(ContactID.fromInt(2)).addEvent(VALID_EVENT_2);","lastModifiedDate":"2023-10-25"},{"lineNumber":36,"author":{"gitId":"larrywang0701"},"content":"        assertCommandSuccess(() -\u003e new ListEventCommand(null,","lastModifiedDate":"2023-11-04"},{"lineNumber":37,"author":{"gitId":"larrywang0701"},"content":"                null, true).execute(model));","lastModifiedDate":"2023-11-04"},{"lineNumber":38,"author":{"gitId":"larrywang0701"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":39,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":40,"author":{"gitId":"larrywang0701"},"content":"    @Test","lastModifiedDate":"2023-11-01"},{"lineNumber":41,"author":{"gitId":"larrywang0701"},"content":"    public void execute_correctCommandFiltered_success() {","lastModifiedDate":"2023-11-01"},{"lineNumber":42,"author":{"gitId":"larrywang0701"},"content":"        model.addEvent(VALID_EVENT_0, model.findPersonByUserFriendlyId(ContactID.fromInt(1)));","lastModifiedDate":"2023-11-01"},{"lineNumber":43,"author":{"gitId":"larrywang0701"},"content":"        model.addEvent(VALID_EVENT_1, model.findPersonByUserFriendlyId(ContactID.fromInt(2)));","lastModifiedDate":"2023-11-01"},{"lineNumber":44,"author":{"gitId":"larrywang0701"},"content":"        model.addEvent(VALID_EVENT_2, model.findPersonByUserFriendlyId(ContactID.fromInt(2)));","lastModifiedDate":"2023-11-01"},{"lineNumber":45,"author":{"gitId":"larrywang0701"},"content":"        assertCommandSuccess(() -\u003e new ListEventCommand(EventTime.fromString(\"03:00\"),","lastModifiedDate":"2023-11-01"},{"lineNumber":46,"author":{"gitId":"larrywang0701"},"content":"                EventTime.fromString(\"05:00\"), true).execute(model));","lastModifiedDate":"2023-11-01"},{"lineNumber":47,"author":{"gitId":"larrywang0701"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":48,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":49,"author":{"gitId":"larrywang0701"},"content":"    @Test","lastModifiedDate":"2023-11-02"},{"lineNumber":50,"author":{"gitId":"larrywang0701"},"content":"    public void execute_correctCommandFilteredDescending_success() {","lastModifiedDate":"2023-11-02"},{"lineNumber":51,"author":{"gitId":"larrywang0701"},"content":"        model.addEvent(VALID_EVENT_0, model.findPersonByUserFriendlyId(ContactID.fromInt(1)));","lastModifiedDate":"2023-11-02"},{"lineNumber":52,"author":{"gitId":"larrywang0701"},"content":"        model.addEvent(VALID_EVENT_1, model.findPersonByUserFriendlyId(ContactID.fromInt(2)));","lastModifiedDate":"2023-11-02"},{"lineNumber":53,"author":{"gitId":"larrywang0701"},"content":"        model.addEvent(VALID_EVENT_2, model.findPersonByUserFriendlyId(ContactID.fromInt(2)));","lastModifiedDate":"2023-11-02"},{"lineNumber":54,"author":{"gitId":"larrywang0701"},"content":"        assertCommandSuccess(() -\u003e new ListEventCommand(EventTime.fromString(\"03:00\"),","lastModifiedDate":"2023-11-02"},{"lineNumber":55,"author":{"gitId":"larrywang0701"},"content":"                EventTime.fromString(\"05:00\"), false).execute(model));","lastModifiedDate":"2023-11-02"},{"lineNumber":56,"author":{"gitId":"larrywang0701"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":57,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":58,"author":{"gitId":"larrywang0701"},"content":"    private void assertCommandSuccess(ThrowingSupplier\u003cCommandResult\u003e function) {","lastModifiedDate":"2023-10-12"},{"lineNumber":59,"author":{"gitId":"larrywang0701"},"content":"        try {","lastModifiedDate":"2023-10-12"},{"lineNumber":60,"author":{"gitId":"larrywang0701"},"content":"            function.get();","lastModifiedDate":"2023-10-12"},{"lineNumber":61,"author":{"gitId":"larrywang0701"},"content":"        } catch (Throwable e) {","lastModifiedDate":"2023-10-12"},{"lineNumber":62,"author":{"gitId":"larrywang0701"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", e);","lastModifiedDate":"2023-10-12"},{"lineNumber":63,"author":{"gitId":"larrywang0701"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":64,"author":{"gitId":"larrywang0701"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":65,"author":{"gitId":"larrywang0701"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"larrywang0701":65}},{"path":"src/test/java/seedu/address/logic/parser/AddEventCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"larrywang0701"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"larrywang0701"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"larrywang0701"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"larrywang0701"},"content":"import static seedu.address.logic.Messages.MESSAGE_START_TIME_AFTER_END_TIME;","lastModifiedDate":"2023-11-01"},{"lineNumber":6,"author":{"gitId":"larrywang0701"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"zekone"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PERSON_ID_DESC;","lastModifiedDate":"2023-10-28"},{"lineNumber":8,"author":{"gitId":"zekone"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2023-10-28"},{"lineNumber":9,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"larrywang0701"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"larrywang0701"},"content":"import org.junit.jupiter.api.function.ThrowingSupplier;","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"larrywang0701"},"content":"import seedu.address.logic.commands.AddEventCommand;","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"zekone"},"content":"import seedu.address.logic.commands.AddTagCommand;","lastModifiedDate":"2023-10-28"},{"lineNumber":15,"author":{"gitId":"larrywang0701"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"larrywang0701"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"larrywang0701"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"larrywang0701"},"content":"import seedu.address.model.event.EventInformation;","lastModifiedDate":"2023-10-25"},{"lineNumber":19,"author":{"gitId":"larrywang0701"},"content":"import seedu.address.model.event.EventLocation;","lastModifiedDate":"2023-10-25"},{"lineNumber":20,"author":{"gitId":"larrywang0701"},"content":"import seedu.address.model.event.EventName;","lastModifiedDate":"2023-10-25"},{"lineNumber":21,"author":{"gitId":"larrywang0701"},"content":"import seedu.address.model.event.EventTime;","lastModifiedDate":"2023-10-25"},{"lineNumber":22,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"larrywang0701"},"content":"public class AddEventCommandParserTest {","lastModifiedDate":"2023-11-01"},{"lineNumber":24,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":25,"author":{"gitId":"larrywang0701"},"content":"    private AddCommandParser parser \u003d new AddCommandParser();","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":27,"author":{"gitId":"larrywang0701"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":28,"author":{"gitId":"larrywang0701"},"content":"    public void execute_correctCommand_success() throws CommandException {","lastModifiedDate":"2023-10-12"},{"lineNumber":29,"author":{"gitId":"larrywang0701"},"content":"        assertParseSuccessWithCommand(() -\u003e parser.parse(\" \"","lastModifiedDate":"2023-10-12"},{"lineNumber":30,"author":{"gitId":"larrywang0701"},"content":"                + AddEventCommand.SECONDARY_COMMAND_WORD + \" -id 1 -en aa -st 00:01\"), AddEventCommand.class.getName());","lastModifiedDate":"2023-10-12"},{"lineNumber":31,"author":{"gitId":"zekone"},"content":"        assertParseSuccessWithCommand(() -\u003e parser.parse(\" \" + AddTagCommand.SECONDARY_COMMAND_WORD + \" \"","lastModifiedDate":"2023-10-28"},{"lineNumber":32,"author":{"gitId":"zekone"},"content":"                + PERSON_ID_DESC + TAG_DESC_HUSBAND), AddTagCommand.class.getName());","lastModifiedDate":"2023-10-28"},{"lineNumber":33,"author":{"gitId":"larrywang0701"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":34,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":35,"author":{"gitId":"larrywang0701"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":36,"author":{"gitId":"larrywang0701"},"content":"    public void execute_commandNotFound_fails() throws CommandException {","lastModifiedDate":"2023-10-12"},{"lineNumber":37,"author":{"gitId":"larrywang0701"},"content":"        assertParseFailedWithError(() -\u003e parser.parse(\" \"","lastModifiedDate":"2023-10-12"},{"lineNumber":38,"author":{"gitId":"larrywang0701"},"content":"                + \" unknown_command 1 2 3\"), MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2023-10-12"},{"lineNumber":39,"author":{"gitId":"larrywang0701"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":40,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":41,"author":{"gitId":"larrywang0701"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":42,"author":{"gitId":"larrywang0701"},"content":"    public void execute_commandFormatError_fails() throws CommandException {","lastModifiedDate":"2023-10-12"},{"lineNumber":43,"author":{"gitId":"larrywang0701"},"content":"        assertParseFailedWithError(() -\u003e parser.parse(\" \"","lastModifiedDate":"2023-10-12"},{"lineNumber":44,"author":{"gitId":"larrywang0701"},"content":"                + AddEventCommand.SECONDARY_COMMAND_WORD + \" -....\"),","lastModifiedDate":"2023-10-12"},{"lineNumber":45,"author":{"gitId":"larrywang0701"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddEventCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-12"},{"lineNumber":46,"author":{"gitId":"zekone"},"content":"        assertParseFailedWithError(() -\u003e parser.parse(\" \"","lastModifiedDate":"2023-10-28"},{"lineNumber":47,"author":{"gitId":"zekone"},"content":"                + AddTagCommand.SECONDARY_COMMAND_WORD + \" -**\"),","lastModifiedDate":"2023-10-28"},{"lineNumber":48,"author":{"gitId":"zekone"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddTagCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-28"},{"lineNumber":49,"author":{"gitId":"larrywang0701"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":50,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":51,"author":{"gitId":"larrywang0701"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":52,"author":{"gitId":"larrywang0701"},"content":"    public void execute_emptyStringArguments_fails() {","lastModifiedDate":"2023-10-25"},{"lineNumber":53,"author":{"gitId":"larrywang0701"},"content":"        assertParseFailedWithError(() -\u003e parser.parse(\" \"","lastModifiedDate":"2023-10-25"},{"lineNumber":54,"author":{"gitId":"larrywang0701"},"content":"                + AddEventCommand.SECONDARY_COMMAND_WORD + \" -id 1 -en -st 12:00\"),","lastModifiedDate":"2023-10-25"},{"lineNumber":55,"author":{"gitId":"larrywang0701"},"content":"                EventName.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-25"},{"lineNumber":56,"author":{"gitId":"larrywang0701"},"content":"        assertParseFailedWithError(() -\u003e parser.parse(\" \"","lastModifiedDate":"2023-10-25"},{"lineNumber":57,"author":{"gitId":"larrywang0701"},"content":"                + AddEventCommand.SECONDARY_COMMAND_WORD + \" -id 1 -en Sample -st\"),","lastModifiedDate":"2023-10-25"},{"lineNumber":58,"author":{"gitId":"larrywang0701"},"content":"                EventTime.MESSAGE_NON_EMPTY);","lastModifiedDate":"2023-10-25"},{"lineNumber":59,"author":{"gitId":"larrywang0701"},"content":"        assertParseFailedWithError(() -\u003e parser.parse(\" \"","lastModifiedDate":"2023-10-25"},{"lineNumber":60,"author":{"gitId":"larrywang0701"},"content":"                + AddEventCommand.SECONDARY_COMMAND_WORD + \" -id 1 -en Sample -st 12:00 -et\"),","lastModifiedDate":"2023-10-25"},{"lineNumber":61,"author":{"gitId":"larrywang0701"},"content":"                EventTime.MESSAGE_NON_EMPTY);","lastModifiedDate":"2023-10-25"},{"lineNumber":62,"author":{"gitId":"larrywang0701"},"content":"        assertParseFailedWithError(() -\u003e parser.parse(\" \"","lastModifiedDate":"2023-10-25"},{"lineNumber":63,"author":{"gitId":"larrywang0701"},"content":"                + AddEventCommand.SECONDARY_COMMAND_WORD + \" -id 1 -en Sample -st 12:00 -loc\"),","lastModifiedDate":"2023-10-25"},{"lineNumber":64,"author":{"gitId":"larrywang0701"},"content":"                EventLocation.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-25"},{"lineNumber":65,"author":{"gitId":"larrywang0701"},"content":"        assertParseFailedWithError(() -\u003e parser.parse(\" \"","lastModifiedDate":"2023-10-25"},{"lineNumber":66,"author":{"gitId":"larrywang0701"},"content":"                + AddEventCommand.SECONDARY_COMMAND_WORD + \" -id 1 -en Sample -st 12:00 -info\"),","lastModifiedDate":"2023-10-25"},{"lineNumber":67,"author":{"gitId":"larrywang0701"},"content":"                EventInformation.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-25"},{"lineNumber":68,"author":{"gitId":"larrywang0701"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":69,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":70,"author":{"gitId":"larrywang0701"},"content":"    @Test","lastModifiedDate":"2023-11-01"},{"lineNumber":71,"author":{"gitId":"larrywang0701"},"content":"    public void execute_startTimeAfterEndTime_fails() {","lastModifiedDate":"2023-11-01"},{"lineNumber":72,"author":{"gitId":"larrywang0701"},"content":"        assertParseFailedWithError(() -\u003e parser.parse(\" \"","lastModifiedDate":"2023-11-01"},{"lineNumber":73,"author":{"gitId":"larrywang0701"},"content":"                        + AddEventCommand.SECONDARY_COMMAND_WORD","lastModifiedDate":"2023-11-01"},{"lineNumber":74,"author":{"gitId":"larrywang0701"},"content":"                        + \" -id 1 -en 2 -st 2023-11-02 12:00 -et 2023-11-01 23:00\"),","lastModifiedDate":"2023-11-01"},{"lineNumber":75,"author":{"gitId":"larrywang0701"},"content":"                String.format(MESSAGE_START_TIME_AFTER_END_TIME, \"2023-11-02 12:00:00\", \"2023-11-01 23:00:00\"));","lastModifiedDate":"2023-11-01"},{"lineNumber":76,"author":{"gitId":"larrywang0701"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":77,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":78,"author":{"gitId":"larrywang0701"},"content":"    private void assertParseSuccessWithCommand(ThrowingSupplier\u003cCommand\u003e function, String commandClassName) {","lastModifiedDate":"2023-10-12"},{"lineNumber":79,"author":{"gitId":"larrywang0701"},"content":"        try {","lastModifiedDate":"2023-10-12"},{"lineNumber":80,"author":{"gitId":"larrywang0701"},"content":"            Command command \u003d function.get();","lastModifiedDate":"2023-10-12"},{"lineNumber":81,"author":{"gitId":"larrywang0701"},"content":"            assertEquals(command.getClass().getName(), commandClassName);","lastModifiedDate":"2023-10-12"},{"lineNumber":82,"author":{"gitId":"larrywang0701"},"content":"        } catch (Throwable e) {","lastModifiedDate":"2023-10-12"},{"lineNumber":83,"author":{"gitId":"larrywang0701"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", e);","lastModifiedDate":"2023-10-12"},{"lineNumber":84,"author":{"gitId":"larrywang0701"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":85,"author":{"gitId":"larrywang0701"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":86,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":87,"author":{"gitId":"larrywang0701"},"content":"    private void assertParseFailedWithError(ThrowingSupplier\u003cCommand\u003e function, String errResult) {","lastModifiedDate":"2023-10-12"},{"lineNumber":88,"author":{"gitId":"larrywang0701"},"content":"        try {","lastModifiedDate":"2023-10-12"},{"lineNumber":89,"author":{"gitId":"larrywang0701"},"content":"            function.get();","lastModifiedDate":"2023-10-12"},{"lineNumber":90,"author":{"gitId":"larrywang0701"},"content":"        } catch (Throwable e) {","lastModifiedDate":"2023-10-12"},{"lineNumber":91,"author":{"gitId":"larrywang0701"},"content":"            if (!(e instanceof ParseException)) {","lastModifiedDate":"2023-10-12"},{"lineNumber":92,"author":{"gitId":"larrywang0701"},"content":"                throw new AssertionError(\"Execution of parser failed but not due to ParseException.\");","lastModifiedDate":"2023-10-12"},{"lineNumber":93,"author":{"gitId":"larrywang0701"},"content":"            }","lastModifiedDate":"2023-10-12"},{"lineNumber":94,"author":{"gitId":"larrywang0701"},"content":"            assertEquals(e.getMessage(), errResult);","lastModifiedDate":"2023-10-12"},{"lineNumber":95,"author":{"gitId":"larrywang0701"},"content":"            return;","lastModifiedDate":"2023-10-12"},{"lineNumber":96,"author":{"gitId":"larrywang0701"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":97,"author":{"gitId":"larrywang0701"},"content":"        throw new AssertionError(\"Execution of command should fail.\");","lastModifiedDate":"2023-10-12"},{"lineNumber":98,"author":{"gitId":"larrywang0701"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":99,"author":{"gitId":"larrywang0701"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"larrywang0701":91,"zekone":8}},{"path":"src/test/java/seedu/address/logic/parser/AddNoteCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"josepholim"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-16"},{"lineNumber":2,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":3,"author":{"gitId":"josepholim"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-16"},{"lineNumber":4,"author":{"gitId":"josepholim"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NOTE_A_CONTENT_DESC;","lastModifiedDate":"2023-10-16"},{"lineNumber":5,"author":{"gitId":"josepholim"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NOTE_A_PERSON_ID_DESC;","lastModifiedDate":"2023-10-16"},{"lineNumber":6,"author":{"gitId":"josepholim"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NOTE_A_TITLE_DESC;","lastModifiedDate":"2023-10-16"},{"lineNumber":7,"author":{"gitId":"josepholim"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NOTE_B_CONTENT_DESC;","lastModifiedDate":"2023-10-16"},{"lineNumber":8,"author":{"gitId":"josepholim"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NOTE_B_PERSON_ID_DESC;","lastModifiedDate":"2023-10-16"},{"lineNumber":9,"author":{"gitId":"josepholim"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NOTE_B_TITLE_DESC;","lastModifiedDate":"2023-10-16"},{"lineNumber":10,"author":{"gitId":"josepholim"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2023-10-16"},{"lineNumber":11,"author":{"gitId":"josepholim"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NOTE_A_CONTENT;","lastModifiedDate":"2023-10-16"},{"lineNumber":12,"author":{"gitId":"josepholim"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NOTE_A_PERSON_ID;","lastModifiedDate":"2023-10-16"},{"lineNumber":13,"author":{"gitId":"josepholim"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NOTE_A_TITLE;","lastModifiedDate":"2023-10-16"},{"lineNumber":14,"author":{"gitId":"josepholim"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NOTE_CONTENT;","lastModifiedDate":"2023-10-16"},{"lineNumber":15,"author":{"gitId":"josepholim"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NOTE_TITLE;","lastModifiedDate":"2023-10-16"},{"lineNumber":16,"author":{"gitId":"josepholim"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PERSON_ID;","lastModifiedDate":"2023-10-16"},{"lineNumber":17,"author":{"gitId":"josepholim"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-10-16"},{"lineNumber":18,"author":{"gitId":"josepholim"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-10-16"},{"lineNumber":19,"author":{"gitId":"josepholim"},"content":"import static seedu.address.testutil.TypicalNotes.NOTE_A;","lastModifiedDate":"2023-10-16"},{"lineNumber":20,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":21,"author":{"gitId":"josepholim"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-16"},{"lineNumber":22,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":23,"author":{"gitId":"josepholim"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-16"},{"lineNumber":24,"author":{"gitId":"josepholim"},"content":"import seedu.address.logic.commands.AddNoteCommand;","lastModifiedDate":"2023-10-16"},{"lineNumber":25,"author":{"gitId":"josepholim"},"content":"import seedu.address.model.note.Note;","lastModifiedDate":"2023-10-16"},{"lineNumber":26,"author":{"gitId":"josepholim"},"content":"import seedu.address.model.person.ContactID;","lastModifiedDate":"2023-10-27"},{"lineNumber":27,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":28,"author":{"gitId":"josepholim"},"content":"public class AddNoteCommandParserTest {","lastModifiedDate":"2023-10-16"},{"lineNumber":29,"author":{"gitId":"josepholim"},"content":"    private AddNoteCommandParser parser \u003d new AddNoteCommandParser();","lastModifiedDate":"2023-10-16"},{"lineNumber":30,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":31,"author":{"gitId":"josepholim"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":32,"author":{"gitId":"josepholim"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2023-10-16"},{"lineNumber":33,"author":{"gitId":"josepholim"},"content":"        Note expectedNote \u003d NOTE_A;","lastModifiedDate":"2023-10-16"},{"lineNumber":34,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":35,"author":{"gitId":"josepholim"},"content":"        // whitespace only preamble","lastModifiedDate":"2023-10-16"},{"lineNumber":36,"author":{"gitId":"josepholim"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + NOTE_A_PERSON_ID_DESC + NOTE_A_TITLE_DESC","lastModifiedDate":"2023-10-16"},{"lineNumber":37,"author":{"gitId":"josepholim"},"content":"                + NOTE_A_CONTENT_DESC,","lastModifiedDate":"2023-10-16"},{"lineNumber":38,"author":{"gitId":"josepholim"},"content":"                new AddNoteCommand(ContactID.fromString(VALID_NOTE_A_PERSON_ID), expectedNote));","lastModifiedDate":"2023-10-27"},{"lineNumber":39,"author":{"gitId":"josepholim"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":40,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":41,"author":{"gitId":"josepholim"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":42,"author":{"gitId":"josepholim"},"content":"    public void parse_repeatedNonTagValue_failure() {","lastModifiedDate":"2023-10-16"},{"lineNumber":43,"author":{"gitId":"josepholim"},"content":"        String validExpectedNoteString \u003d NOTE_B_PERSON_ID_DESC + NOTE_B_TITLE_DESC + NOTE_B_CONTENT_DESC;","lastModifiedDate":"2023-10-16"},{"lineNumber":44,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":45,"author":{"gitId":"josepholim"},"content":"        // multiple person ids","lastModifiedDate":"2023-10-16"},{"lineNumber":46,"author":{"gitId":"josepholim"},"content":"        assertParseFailure(parser, NOTE_A_PERSON_ID_DESC + validExpectedNoteString,","lastModifiedDate":"2023-10-16"},{"lineNumber":47,"author":{"gitId":"josepholim"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PERSON_ID));","lastModifiedDate":"2023-10-16"},{"lineNumber":48,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":49,"author":{"gitId":"josepholim"},"content":"        // multiple titles","lastModifiedDate":"2023-10-16"},{"lineNumber":50,"author":{"gitId":"josepholim"},"content":"        assertParseFailure(parser, NOTE_A_TITLE_DESC + validExpectedNoteString,","lastModifiedDate":"2023-10-16"},{"lineNumber":51,"author":{"gitId":"josepholim"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NOTE_TITLE));","lastModifiedDate":"2023-10-16"},{"lineNumber":52,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":53,"author":{"gitId":"josepholim"},"content":"        // multiple contents","lastModifiedDate":"2023-10-16"},{"lineNumber":54,"author":{"gitId":"josepholim"},"content":"        assertParseFailure(parser, NOTE_A_CONTENT_DESC + validExpectedNoteString,","lastModifiedDate":"2023-10-16"},{"lineNumber":55,"author":{"gitId":"josepholim"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NOTE_CONTENT));","lastModifiedDate":"2023-10-16"},{"lineNumber":56,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":57,"author":{"gitId":"josepholim"},"content":"        // multiple fields repeated","lastModifiedDate":"2023-10-16"},{"lineNumber":58,"author":{"gitId":"josepholim"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2023-10-16"},{"lineNumber":59,"author":{"gitId":"josepholim"},"content":"                validExpectedNoteString + NOTE_A_PERSON_ID_DESC + NOTE_A_TITLE_DESC + NOTE_A_CONTENT_DESC","lastModifiedDate":"2023-10-16"},{"lineNumber":60,"author":{"gitId":"josepholim"},"content":"                        + validExpectedNoteString,","lastModifiedDate":"2023-10-16"},{"lineNumber":61,"author":{"gitId":"josepholim"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PERSON_ID, PREFIX_NOTE_TITLE, PREFIX_NOTE_CONTENT));","lastModifiedDate":"2023-10-16"},{"lineNumber":62,"author":{"gitId":"josepholim"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":63,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":64,"author":{"gitId":"josepholim"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":65,"author":{"gitId":"josepholim"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2023-10-16"},{"lineNumber":66,"author":{"gitId":"josepholim"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddNoteCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-10-16"},{"lineNumber":67,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":68,"author":{"gitId":"josepholim"},"content":"        // missing person id prefix","lastModifiedDate":"2023-10-16"},{"lineNumber":69,"author":{"gitId":"josepholim"},"content":"        assertParseFailure(parser, VALID_NOTE_A_PERSON_ID + NOTE_A_TITLE_DESC + NOTE_A_CONTENT_DESC,","lastModifiedDate":"2023-10-16"},{"lineNumber":70,"author":{"gitId":"josepholim"},"content":"                expectedMessage);","lastModifiedDate":"2023-10-16"},{"lineNumber":71,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":72,"author":{"gitId":"josepholim"},"content":"        // missing title prefix","lastModifiedDate":"2023-10-16"},{"lineNumber":73,"author":{"gitId":"josepholim"},"content":"        assertParseFailure(parser, NOTE_A_PERSON_ID_DESC + VALID_NOTE_A_TITLE + NOTE_A_CONTENT_DESC,","lastModifiedDate":"2023-10-16"},{"lineNumber":74,"author":{"gitId":"josepholim"},"content":"                expectedMessage);","lastModifiedDate":"2023-10-16"},{"lineNumber":75,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":76,"author":{"gitId":"josepholim"},"content":"        // missing content prefix","lastModifiedDate":"2023-10-16"},{"lineNumber":77,"author":{"gitId":"josepholim"},"content":"        assertParseFailure(parser, NOTE_A_PERSON_ID_DESC + NOTE_A_TITLE_DESC + VALID_NOTE_A_CONTENT,","lastModifiedDate":"2023-10-16"},{"lineNumber":78,"author":{"gitId":"josepholim"},"content":"                expectedMessage);","lastModifiedDate":"2023-10-16"},{"lineNumber":79,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":80,"author":{"gitId":"josepholim"},"content":"        // all prefixes missing","lastModifiedDate":"2023-10-16"},{"lineNumber":81,"author":{"gitId":"josepholim"},"content":"        assertParseFailure(parser, VALID_NOTE_A_PERSON_ID + VALID_NOTE_A_TITLE + VALID_NOTE_A_CONTENT,","lastModifiedDate":"2023-10-16"},{"lineNumber":82,"author":{"gitId":"josepholim"},"content":"                expectedMessage);","lastModifiedDate":"2023-10-16"},{"lineNumber":83,"author":{"gitId":"josepholim"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":84,"author":{"gitId":"josepholim"},"content":"}","lastModifiedDate":"2023-10-16"}],"authorContributionMap":{"josepholim":84}},{"path":"src/test/java/seedu/address/logic/parser/AddPersonCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2017-12-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2017-12-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-07-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-07-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-07-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-07-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2018-07-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-07-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-14"},{"lineNumber":39,"author":{"gitId":"larrywang0701"},"content":"import seedu.address.logic.commands.AddPersonCommand;","lastModifiedDate":"2023-10-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-06-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-06-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-06-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-06-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-06-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":48,"author":{"gitId":"larrywang0701"},"content":"public class AddPersonCommandParserTest {","lastModifiedDate":"2023-10-12"},{"lineNumber":49,"author":{"gitId":"larrywang0701"},"content":"    private AddPersonCommandParser parser \u003d new AddPersonCommandParser();","lastModifiedDate":"2023-10-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(BOB).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2018-07-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // whitespace only preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":57,"author":{"gitId":"larrywang0701"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND, new AddPersonCommand(expectedPerson));","lastModifiedDate":"2023-10-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // multiple tags - all accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        Person expectedPersonMultipleTags \u003d new PersonBuilder(BOB).withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND)","lastModifiedDate":"2018-07-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-07-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser,","lastModifiedDate":"2023-07-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2023-07-14"},{"lineNumber":65,"author":{"gitId":"larrywang0701"},"content":"                new AddPersonCommand(expectedPersonMultipleTags));","lastModifiedDate":"2023-10-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-07-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-07-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void parse_repeatedNonTagValue_failure() {","lastModifiedDate":"2023-07-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        String validExpectedPersonString \u003d NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2023-07-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND;","lastModifiedDate":"2023-07-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // multiple names","lastModifiedDate":"2023-07-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME));","lastModifiedDate":"2023-07-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // multiple phones","lastModifiedDate":"2023-07-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, PHONE_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        // multiple emails","lastModifiedDate":"2023-07-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, EMAIL_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":83,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_EMAIL));","lastModifiedDate":"2023-07-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        // multiple addresses","lastModifiedDate":"2023-07-14"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, ADDRESS_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_ADDRESS));","lastModifiedDate":"2023-07-14"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // multiple fields repeated","lastModifiedDate":"2023-07-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2023-07-14"},{"lineNumber":91,"author":{"gitId":"-"},"content":"                validExpectedPersonString + PHONE_DESC_AMY + EMAIL_DESC_AMY + NAME_DESC_AMY + ADDRESS_DESC_AMY","lastModifiedDate":"2023-07-14"},{"lineNumber":92,"author":{"gitId":"-"},"content":"                        + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":93,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME, PREFIX_ADDRESS, PREFIX_EMAIL, PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        // invalid value followed by valid value","lastModifiedDate":"2023-07-14"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2023-07-14"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME));","lastModifiedDate":"2023-07-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2023-07-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_EMAIL_DESC + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_EMAIL));","lastModifiedDate":"2023-07-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2023-07-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_PHONE_DESC + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        // invalid address","lastModifiedDate":"2023-07-14"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_ADDRESS_DESC + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":111,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_ADDRESS));","lastModifiedDate":"2023-07-14"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        // valid value followed by invalid value","lastModifiedDate":"2023-07-14"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2023-07-14"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_NAME_DESC,","lastModifiedDate":"2023-07-14"},{"lineNumber":117,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME));","lastModifiedDate":"2023-07-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2023-07-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_EMAIL_DESC,","lastModifiedDate":"2023-07-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_EMAIL));","lastModifiedDate":"2023-07-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2023-07-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_PHONE_DESC,","lastModifiedDate":"2023-07-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        // invalid address","lastModifiedDate":"2023-07-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_ADDRESS_DESC,","lastModifiedDate":"2023-07-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_ADDRESS));","lastModifiedDate":"2023-07-14"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public void parse_optionalFieldsMissing_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        // zero tags","lastModifiedDate":"2017-06-15"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withTags().build();","lastModifiedDate":"2018-07-25"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY + ADDRESS_DESC_AMY,","lastModifiedDate":"2017-12-23"},{"lineNumber":137,"author":{"gitId":"larrywang0701"},"content":"                new AddPersonCommand(expectedPerson));","lastModifiedDate":"2023-10-12"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":142,"author":{"gitId":"larrywang0701"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddPersonCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-10-12"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        // missing name prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        // missing phone prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + VALID_PHONE_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        // missing email prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + VALID_EMAIL_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        // missing address prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + VALID_ADDRESS_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        // all prefixes missing","lastModifiedDate":"2017-06-15"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + VALID_PHONE_BOB + VALID_EMAIL_BOB + VALID_ADDRESS_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-06-15"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2017-06-15"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + INVALID_PHONE_DESC + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2017-06-15"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + INVALID_EMAIL_DESC + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        // invalid address","lastModifiedDate":"2017-06-15"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_ADDRESS_DESC","lastModifiedDate":"2017-12-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        // invalid tag","lastModifiedDate":"2017-06-15"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"                + INVALID_TAG_DESC + VALID_TAG_FRIEND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2017-06-15"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_ADDRESS_DESC,","lastModifiedDate":"2017-12-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        // non-empty preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2017-12-23"},{"lineNumber":194,"author":{"gitId":"larrywang0701"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddPersonCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-12"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":196,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"larrywang0701":8,"-":188}},{"path":"src/test/java/seedu/address/logic/parser/AddTagCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"zekone"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-27"},{"lineNumber":2,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":3,"author":{"gitId":"zekone"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-27"},{"lineNumber":4,"author":{"gitId":"zekone"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2023-10-27"},{"lineNumber":5,"author":{"gitId":"zekone"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PERSON_ID_DESC;","lastModifiedDate":"2023-10-27"},{"lineNumber":6,"author":{"gitId":"zekone"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2023-10-27"},{"lineNumber":7,"author":{"gitId":"zekone"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2023-10-27"},{"lineNumber":8,"author":{"gitId":"zekone"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2023-10-27"},{"lineNumber":9,"author":{"gitId":"zekone"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PERSON_ID;","lastModifiedDate":"2023-10-27"},{"lineNumber":10,"author":{"gitId":"zekone"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2023-10-27"},{"lineNumber":11,"author":{"gitId":"zekone"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2023-10-27"},{"lineNumber":12,"author":{"gitId":"zekone"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-10-27"},{"lineNumber":13,"author":{"gitId":"zekone"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-10-27"},{"lineNumber":14,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":15,"author":{"gitId":"zekone"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-27"},{"lineNumber":16,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":17,"author":{"gitId":"zekone"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-27"},{"lineNumber":18,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":19,"author":{"gitId":"zekone"},"content":"import seedu.address.logic.commands.AddTagCommand;","lastModifiedDate":"2023-10-27"},{"lineNumber":20,"author":{"gitId":"zekone"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-10-27"},{"lineNumber":21,"author":{"gitId":"zekone"},"content":"import seedu.address.testutil.TagBuilder;","lastModifiedDate":"2023-10-27"},{"lineNumber":22,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":23,"author":{"gitId":"josepholim"},"content":"public class AddTagCommandParserTest {","lastModifiedDate":"2023-11-13"},{"lineNumber":24,"author":{"gitId":"zekone"},"content":"    private AddTagCommandParser parser \u003d new AddTagCommandParser();","lastModifiedDate":"2023-10-27"},{"lineNumber":25,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":26,"author":{"gitId":"zekone"},"content":"    @Test","lastModifiedDate":"2023-10-27"},{"lineNumber":27,"author":{"gitId":"zekone"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2023-10-27"},{"lineNumber":28,"author":{"gitId":"zekone"},"content":"        Set\u003cTag\u003e expectedTagSet \u003d new TagBuilder().withTag(VALID_TAG_HUSBAND).inSet();","lastModifiedDate":"2023-10-27"},{"lineNumber":29,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":30,"author":{"gitId":"zekone"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + PERSON_ID_DESC + TAG_DESC_HUSBAND,","lastModifiedDate":"2023-10-27"},{"lineNumber":31,"author":{"gitId":"zekone"},"content":"                new AddTagCommand(Integer.parseInt(VALID_PERSON_ID), expectedTagSet));","lastModifiedDate":"2023-10-27"},{"lineNumber":32,"author":{"gitId":"zekone"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":33,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":34,"author":{"gitId":"zekone"},"content":"    @Test","lastModifiedDate":"2023-10-27"},{"lineNumber":35,"author":{"gitId":"zekone"},"content":"    public void parse_multipleTags_success() {","lastModifiedDate":"2023-10-27"},{"lineNumber":36,"author":{"gitId":"zekone"},"content":"        Set\u003cTag\u003e expectedTagSet \u003d new TagBuilder().withTag(VALID_TAG_HUSBAND).inSet();","lastModifiedDate":"2023-10-27"},{"lineNumber":37,"author":{"gitId":"zekone"},"content":"        expectedTagSet.add(new TagBuilder().withTag(VALID_TAG_FRIEND).build());","lastModifiedDate":"2023-10-27"},{"lineNumber":38,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":39,"author":{"gitId":"zekone"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + PERSON_ID_DESC + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2023-10-27"},{"lineNumber":40,"author":{"gitId":"zekone"},"content":"                new AddTagCommand(Integer.parseInt(VALID_PERSON_ID), expectedTagSet));","lastModifiedDate":"2023-10-27"},{"lineNumber":41,"author":{"gitId":"zekone"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":42,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":43,"author":{"gitId":"zekone"},"content":"    @Test","lastModifiedDate":"2023-10-27"},{"lineNumber":44,"author":{"gitId":"zekone"},"content":"    public void parse_duplicateTags_success() {","lastModifiedDate":"2023-10-27"},{"lineNumber":45,"author":{"gitId":"zekone"},"content":"        Set\u003cTag\u003e expectedTagSet \u003d new TagBuilder().withTag(VALID_TAG_HUSBAND).inSet();","lastModifiedDate":"2023-10-27"},{"lineNumber":46,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":47,"author":{"gitId":"zekone"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + PERSON_ID_DESC + TAG_DESC_HUSBAND + TAG_DESC_HUSBAND,","lastModifiedDate":"2023-10-27"},{"lineNumber":48,"author":{"gitId":"zekone"},"content":"                new AddTagCommand(Integer.parseInt(VALID_PERSON_ID), expectedTagSet));","lastModifiedDate":"2023-10-27"},{"lineNumber":49,"author":{"gitId":"zekone"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":50,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":51,"author":{"gitId":"zekone"},"content":"    @Test","lastModifiedDate":"2023-10-27"},{"lineNumber":52,"author":{"gitId":"zekone"},"content":"    public void parse_invlaidTag_success() {","lastModifiedDate":"2023-10-27"},{"lineNumber":53,"author":{"gitId":"zekone"},"content":"        String expectedMessage \u003d Tag.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-10-27"},{"lineNumber":54,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":55,"author":{"gitId":"zekone"},"content":"        assertParseFailure(parser, PREAMBLE_WHITESPACE + PERSON_ID_DESC + INVALID_TAG_DESC,","lastModifiedDate":"2023-10-27"},{"lineNumber":56,"author":{"gitId":"zekone"},"content":"                expectedMessage);","lastModifiedDate":"2023-10-27"},{"lineNumber":57,"author":{"gitId":"zekone"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":58,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":59,"author":{"gitId":"zekone"},"content":"    @Test","lastModifiedDate":"2023-10-27"},{"lineNumber":60,"author":{"gitId":"zekone"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2023-10-27"},{"lineNumber":61,"author":{"gitId":"zekone"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddTagCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-10-27"},{"lineNumber":62,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":63,"author":{"gitId":"zekone"},"content":"        // missing person id prefix","lastModifiedDate":"2023-10-27"},{"lineNumber":64,"author":{"gitId":"zekone"},"content":"        assertParseFailure(parser, PREAMBLE_WHITESPACE + TAG_DESC_HUSBAND,","lastModifiedDate":"2023-10-27"},{"lineNumber":65,"author":{"gitId":"zekone"},"content":"                expectedMessage);","lastModifiedDate":"2023-10-27"},{"lineNumber":66,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":67,"author":{"gitId":"zekone"},"content":"        // missing tag prefix","lastModifiedDate":"2023-10-27"},{"lineNumber":68,"author":{"gitId":"zekone"},"content":"        assertParseFailure(parser, PREAMBLE_WHITESPACE + PERSON_ID_DESC,","lastModifiedDate":"2023-10-27"},{"lineNumber":69,"author":{"gitId":"zekone"},"content":"                expectedMessage);","lastModifiedDate":"2023-10-27"},{"lineNumber":70,"author":{"gitId":"zekone"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":71,"author":{"gitId":"zekone"},"content":"}","lastModifiedDate":"2023-10-27"}],"authorContributionMap":{"zekone":70,"josepholim":1}},{"path":"src/test/java/seedu/address/logic/parser/AddressBookParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-07-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-06-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":16,"author":{"gitId":"larrywang0701"},"content":"import seedu.address.logic.commands.AddPersonCommand;","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"larrywang0701"},"content":"import seedu.address.logic.commands.DeletePersonCommand;","lastModifiedDate":"2023-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2023-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2023-10-12"},{"lineNumber":24,"author":{"gitId":"larrywang0701"},"content":"import seedu.address.logic.commands.ListPersonCommand;","lastModifiedDate":"2023-10-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonUtil;","lastModifiedDate":"2017-06-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"public class AddressBookParserTest {","lastModifiedDate":"2017-07-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private final AddressBookParser parser \u003d new AddressBookParser();","lastModifiedDate":"2017-07-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void parseCommand_add() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"larrywang0701"},"content":"        AddPersonCommand command \u003d (AddPersonCommand) parser.parseCommand(PersonUtil.getAddCommand(person));","lastModifiedDate":"2023-10-12"},{"lineNumber":39,"author":{"gitId":"larrywang0701"},"content":"        assertEquals(new AddPersonCommand(person), command);","lastModifiedDate":"2023-10-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD) instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD + \" 3\") instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void parseCommand_delete() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"larrywang0701"},"content":"        DeletePersonCommand command \u003d (DeletePersonCommand) parser.parseCommand(","lastModifiedDate":"2023-10-12"},{"lineNumber":51,"author":{"gitId":"larrywang0701"},"content":"                DeleteCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2023-10-12"},{"lineNumber":52,"author":{"gitId":"larrywang0701"},"content":"                        + DeletePersonCommand.SECONDARY_COMMAND_WORD","lastModifiedDate":"2023-10-12"},{"lineNumber":53,"author":{"gitId":"larrywang0701"},"content":"                        + \" \" + INDEX_FIRST_PERSON.getOneBased());","lastModifiedDate":"2023-10-12"},{"lineNumber":54,"author":{"gitId":"larrywang0701"},"content":"        assertEquals(new DeletePersonCommand(INDEX_FIRST_PERSON), command);","lastModifiedDate":"2023-10-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void parseCommand_find() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2017-06-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        FindCommand command \u003d (FindCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                FindCommand.COMMAND_WORD + \" \" + keywords.stream().collect(Collectors.joining(\" \")));","lastModifiedDate":"2017-06-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertEquals(new FindCommand(new NameContainsKeywordsPredicate(keywords)), command);","lastModifiedDate":"2017-06-12"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void parseCommand_list() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":79,"author":{"gitId":"larrywang0701"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD","lastModifiedDate":"2023-10-12"},{"lineNumber":80,"author":{"gitId":"larrywang0701"},"content":"                + \" \" + ListPersonCommand.SECONDARY_COMMAND_WORD) instanceof ListCommand);","lastModifiedDate":"2023-10-12"},{"lineNumber":81,"author":{"gitId":"larrywang0701"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD","lastModifiedDate":"2023-10-12"},{"lineNumber":82,"author":{"gitId":"larrywang0701"},"content":"                + \" \" + ListPersonCommand.SECONDARY_COMMAND_WORD + \" 3\") instanceof ListCommand);","lastModifiedDate":"2023-10-12"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2019-03-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"larrywang0701":14,"-":81}},{"path":"src/test/java/seedu/address/logic/parser/DeleteEventCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"larrywang0701"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"larrywang0701"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"larrywang0701"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"larrywang0701"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"zekone"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PERSON_ID_DESC;","lastModifiedDate":"2023-10-28"},{"lineNumber":7,"author":{"gitId":"zekone"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2023-10-28"},{"lineNumber":8,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"larrywang0701"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"larrywang0701"},"content":"import org.junit.jupiter.api.function.ThrowingSupplier;","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"larrywang0701"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"larrywang0701"},"content":"import seedu.address.logic.commands.DeleteEventCommand;","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"zekone"},"content":"import seedu.address.logic.commands.DeleteTagCommand;","lastModifiedDate":"2023-10-28"},{"lineNumber":15,"author":{"gitId":"larrywang0701"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"larrywang0701"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"larrywang0701"},"content":"public class DeleteEventCommandParserTest {","lastModifiedDate":"2023-11-01"},{"lineNumber":19,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":20,"author":{"gitId":"larrywang0701"},"content":"    private DeleteCommandParser parser \u003d new DeleteCommandParser();","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":22,"author":{"gitId":"larrywang0701"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"larrywang0701"},"content":"    public void execute_correctCommand_success() throws CommandException {","lastModifiedDate":"2023-10-12"},{"lineNumber":24,"author":{"gitId":"larrywang0701"},"content":"        assertParseSuccessWithCommand(() -\u003e parser.parse(\" \"","lastModifiedDate":"2023-10-12"},{"lineNumber":25,"author":{"gitId":"larrywang0701"},"content":"                + DeleteEventCommand.SECONDARY_COMMAND_WORD + \" -id 1 -eid 1\"), DeleteEventCommand.class.getName());","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"zekone"},"content":"        assertParseSuccessWithCommand(() -\u003e parser.parse(\" \" + DeleteTagCommand.SECONDARY_COMMAND_WORD + \" \"","lastModifiedDate":"2023-10-28"},{"lineNumber":27,"author":{"gitId":"zekone"},"content":"                + PERSON_ID_DESC + TAG_DESC_HUSBAND), DeleteTagCommand.class.getName());","lastModifiedDate":"2023-10-28"},{"lineNumber":28,"author":{"gitId":"larrywang0701"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":29,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":30,"author":{"gitId":"larrywang0701"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":31,"author":{"gitId":"larrywang0701"},"content":"    public void execute_commandNotFound_fails() throws CommandException {","lastModifiedDate":"2023-10-12"},{"lineNumber":32,"author":{"gitId":"larrywang0701"},"content":"        assertParseFailedWithError(() -\u003e parser.parse(\" \"","lastModifiedDate":"2023-10-12"},{"lineNumber":33,"author":{"gitId":"larrywang0701"},"content":"                + \" unknown_command 1 2 3\"), MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2023-10-12"},{"lineNumber":34,"author":{"gitId":"larrywang0701"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":35,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":36,"author":{"gitId":"larrywang0701"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":37,"author":{"gitId":"larrywang0701"},"content":"    public void execute_commandFormatError_fails() throws CommandException {","lastModifiedDate":"2023-10-12"},{"lineNumber":38,"author":{"gitId":"larrywang0701"},"content":"        assertParseFailedWithError(() -\u003e parser.parse(\" \"","lastModifiedDate":"2023-10-12"},{"lineNumber":39,"author":{"gitId":"larrywang0701"},"content":"                + DeleteEventCommand.SECONDARY_COMMAND_WORD + \" -....\"),","lastModifiedDate":"2023-10-12"},{"lineNumber":40,"author":{"gitId":"larrywang0701"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteEventCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-12"},{"lineNumber":41,"author":{"gitId":"larrywang0701"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":42,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":43,"author":{"gitId":"larrywang0701"},"content":"    private void assertParseSuccessWithCommand(ThrowingSupplier\u003cCommand\u003e function, String commandClassName) {","lastModifiedDate":"2023-10-12"},{"lineNumber":44,"author":{"gitId":"larrywang0701"},"content":"        try {","lastModifiedDate":"2023-10-12"},{"lineNumber":45,"author":{"gitId":"larrywang0701"},"content":"            Command command \u003d function.get();","lastModifiedDate":"2023-10-12"},{"lineNumber":46,"author":{"gitId":"larrywang0701"},"content":"            assertEquals(command.getClass().getName(), commandClassName);","lastModifiedDate":"2023-10-12"},{"lineNumber":47,"author":{"gitId":"larrywang0701"},"content":"        } catch (Throwable e) {","lastModifiedDate":"2023-10-12"},{"lineNumber":48,"author":{"gitId":"larrywang0701"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", e);","lastModifiedDate":"2023-10-12"},{"lineNumber":49,"author":{"gitId":"larrywang0701"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":50,"author":{"gitId":"larrywang0701"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":51,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":52,"author":{"gitId":"larrywang0701"},"content":"    private void assertParseFailedWithError(ThrowingSupplier\u003cCommand\u003e function, String errResult) {","lastModifiedDate":"2023-10-12"},{"lineNumber":53,"author":{"gitId":"larrywang0701"},"content":"        try {","lastModifiedDate":"2023-10-12"},{"lineNumber":54,"author":{"gitId":"larrywang0701"},"content":"            function.get();","lastModifiedDate":"2023-10-12"},{"lineNumber":55,"author":{"gitId":"larrywang0701"},"content":"        } catch (Throwable e) {","lastModifiedDate":"2023-10-12"},{"lineNumber":56,"author":{"gitId":"larrywang0701"},"content":"            if (!(e instanceof ParseException)) {","lastModifiedDate":"2023-10-12"},{"lineNumber":57,"author":{"gitId":"larrywang0701"},"content":"                throw new AssertionError(\"Execution of parser failed but not due to ParseException.\");","lastModifiedDate":"2023-10-12"},{"lineNumber":58,"author":{"gitId":"larrywang0701"},"content":"            }","lastModifiedDate":"2023-10-12"},{"lineNumber":59,"author":{"gitId":"larrywang0701"},"content":"            assertEquals(e.getMessage(), errResult);","lastModifiedDate":"2023-10-12"},{"lineNumber":60,"author":{"gitId":"larrywang0701"},"content":"            return;","lastModifiedDate":"2023-10-12"},{"lineNumber":61,"author":{"gitId":"larrywang0701"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":62,"author":{"gitId":"larrywang0701"},"content":"        throw new AssertionError(\"Execution of command should fail.\");","lastModifiedDate":"2023-10-12"},{"lineNumber":63,"author":{"gitId":"larrywang0701"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":64,"author":{"gitId":"larrywang0701"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"larrywang0701":59,"zekone":5}},{"path":"src/test/java/seedu/address/logic/parser/DeleteNoteCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"josepholim"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-16"},{"lineNumber":2,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":3,"author":{"gitId":"josepholim"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-16"},{"lineNumber":4,"author":{"gitId":"josepholim"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NOTE_A_NOTE_ID_DESC;","lastModifiedDate":"2023-10-16"},{"lineNumber":5,"author":{"gitId":"josepholim"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NOTE_A_PERSON_ID_DESC;","lastModifiedDate":"2023-10-16"},{"lineNumber":6,"author":{"gitId":"josepholim"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NOTE_B_NOTE_ID_DESC;","lastModifiedDate":"2023-10-16"},{"lineNumber":7,"author":{"gitId":"josepholim"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NOTE_B_PERSON_ID_DESC;","lastModifiedDate":"2023-10-16"},{"lineNumber":8,"author":{"gitId":"josepholim"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2023-10-16"},{"lineNumber":9,"author":{"gitId":"josepholim"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NOTE_A_NOTE_ID;","lastModifiedDate":"2023-10-16"},{"lineNumber":10,"author":{"gitId":"josepholim"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NOTE_A_PERSON_ID;","lastModifiedDate":"2023-10-16"},{"lineNumber":11,"author":{"gitId":"josepholim"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NOTE_ID;","lastModifiedDate":"2023-10-16"},{"lineNumber":12,"author":{"gitId":"josepholim"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PERSON_ID;","lastModifiedDate":"2023-10-16"},{"lineNumber":13,"author":{"gitId":"josepholim"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-10-16"},{"lineNumber":14,"author":{"gitId":"josepholim"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-10-16"},{"lineNumber":15,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":16,"author":{"gitId":"josepholim"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-16"},{"lineNumber":17,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":18,"author":{"gitId":"josepholim"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-16"},{"lineNumber":19,"author":{"gitId":"josepholim"},"content":"import seedu.address.logic.commands.DeleteNoteCommand;","lastModifiedDate":"2023-10-16"},{"lineNumber":20,"author":{"gitId":"josepholim"},"content":"import seedu.address.model.note.NoteID;","lastModifiedDate":"2023-10-27"},{"lineNumber":21,"author":{"gitId":"josepholim"},"content":"import seedu.address.model.person.ContactID;","lastModifiedDate":"2023-10-27"},{"lineNumber":22,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":23,"author":{"gitId":"josepholim"},"content":"public class DeleteNoteCommandParserTest {","lastModifiedDate":"2023-10-16"},{"lineNumber":24,"author":{"gitId":"josepholim"},"content":"    private DeleteNoteCommandParser parser \u003d new DeleteNoteCommandParser();","lastModifiedDate":"2023-10-16"},{"lineNumber":25,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":26,"author":{"gitId":"josepholim"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":27,"author":{"gitId":"josepholim"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2023-10-16"},{"lineNumber":28,"author":{"gitId":"josepholim"},"content":"        // whitespace only preamble","lastModifiedDate":"2023-10-16"},{"lineNumber":29,"author":{"gitId":"josepholim"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + NOTE_A_PERSON_ID_DESC + NOTE_A_NOTE_ID_DESC,","lastModifiedDate":"2023-10-16"},{"lineNumber":30,"author":{"gitId":"josepholim"},"content":"                new DeleteNoteCommand(ContactID.fromString(VALID_NOTE_A_PERSON_ID),","lastModifiedDate":"2023-10-27"},{"lineNumber":31,"author":{"gitId":"josepholim"},"content":"                        NoteID.fromString(VALID_NOTE_A_NOTE_ID)));","lastModifiedDate":"2023-10-27"},{"lineNumber":32,"author":{"gitId":"josepholim"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":33,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":34,"author":{"gitId":"josepholim"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":35,"author":{"gitId":"josepholim"},"content":"    public void parse_repeatedNonTagValue_failure() {","lastModifiedDate":"2023-10-16"},{"lineNumber":36,"author":{"gitId":"josepholim"},"content":"        String validExpectedNoteString \u003d NOTE_B_PERSON_ID_DESC + NOTE_B_NOTE_ID_DESC;","lastModifiedDate":"2023-10-16"},{"lineNumber":37,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":38,"author":{"gitId":"josepholim"},"content":"        // multiple person ids","lastModifiedDate":"2023-10-16"},{"lineNumber":39,"author":{"gitId":"josepholim"},"content":"        assertParseFailure(parser, NOTE_A_PERSON_ID_DESC + validExpectedNoteString,","lastModifiedDate":"2023-10-16"},{"lineNumber":40,"author":{"gitId":"josepholim"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PERSON_ID));","lastModifiedDate":"2023-10-16"},{"lineNumber":41,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":42,"author":{"gitId":"josepholim"},"content":"        // multiple note ids","lastModifiedDate":"2023-10-16"},{"lineNumber":43,"author":{"gitId":"josepholim"},"content":"        assertParseFailure(parser, NOTE_A_NOTE_ID_DESC + validExpectedNoteString,","lastModifiedDate":"2023-10-16"},{"lineNumber":44,"author":{"gitId":"josepholim"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NOTE_ID));","lastModifiedDate":"2023-10-16"},{"lineNumber":45,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":46,"author":{"gitId":"josepholim"},"content":"        // multiple fields repeated","lastModifiedDate":"2023-10-16"},{"lineNumber":47,"author":{"gitId":"josepholim"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2023-10-16"},{"lineNumber":48,"author":{"gitId":"josepholim"},"content":"                validExpectedNoteString + NOTE_A_PERSON_ID_DESC + NOTE_A_NOTE_ID_DESC","lastModifiedDate":"2023-10-16"},{"lineNumber":49,"author":{"gitId":"josepholim"},"content":"                        + validExpectedNoteString,","lastModifiedDate":"2023-10-16"},{"lineNumber":50,"author":{"gitId":"josepholim"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PERSON_ID, PREFIX_NOTE_ID));","lastModifiedDate":"2023-10-16"},{"lineNumber":51,"author":{"gitId":"josepholim"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":52,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":53,"author":{"gitId":"josepholim"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":54,"author":{"gitId":"josepholim"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2023-10-16"},{"lineNumber":55,"author":{"gitId":"josepholim"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteNoteCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-10-16"},{"lineNumber":56,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":57,"author":{"gitId":"josepholim"},"content":"        // missing person id prefix","lastModifiedDate":"2023-10-16"},{"lineNumber":58,"author":{"gitId":"josepholim"},"content":"        assertParseFailure(parser, VALID_NOTE_A_PERSON_ID + NOTE_A_NOTE_ID_DESC,","lastModifiedDate":"2023-10-16"},{"lineNumber":59,"author":{"gitId":"josepholim"},"content":"                expectedMessage);","lastModifiedDate":"2023-10-16"},{"lineNumber":60,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":61,"author":{"gitId":"josepholim"},"content":"        // missing note id prefix","lastModifiedDate":"2023-10-16"},{"lineNumber":62,"author":{"gitId":"josepholim"},"content":"        assertParseFailure(parser, NOTE_A_PERSON_ID_DESC + VALID_NOTE_A_NOTE_ID,","lastModifiedDate":"2023-10-16"},{"lineNumber":63,"author":{"gitId":"josepholim"},"content":"                expectedMessage);","lastModifiedDate":"2023-10-16"},{"lineNumber":64,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":65,"author":{"gitId":"josepholim"},"content":"        // all prefixes missing","lastModifiedDate":"2023-10-16"},{"lineNumber":66,"author":{"gitId":"josepholim"},"content":"        assertParseFailure(parser, VALID_NOTE_A_PERSON_ID + VALID_NOTE_A_NOTE_ID,","lastModifiedDate":"2023-10-16"},{"lineNumber":67,"author":{"gitId":"josepholim"},"content":"                expectedMessage);","lastModifiedDate":"2023-10-16"},{"lineNumber":68,"author":{"gitId":"josepholim"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":69,"author":{"gitId":"josepholim"},"content":"}","lastModifiedDate":"2023-10-16"}],"authorContributionMap":{"josepholim":69}},{"path":"src/test/java/seedu/address/logic/parser/DeletePersonCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":10,"author":{"gitId":"larrywang0701"},"content":"import seedu.address.logic.commands.DeletePersonCommand;","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2017-06-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * outside of the DeleteCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2017-06-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * same path through the DeleteCommand, and therefore we test only one of them.","lastModifiedDate":"2017-06-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2017-06-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2017-06-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":19,"author":{"gitId":"larrywang0701"},"content":"public class DeletePersonCommandParserTest {","lastModifiedDate":"2023-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private DeleteCommandParser parser \u003d new DeleteCommandParser();","lastModifiedDate":"2017-06-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsDeleteCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"larrywang0701"},"content":"        assertParseSuccess(parser, \" contact 1\", new DeletePersonCommand(INDEX_FIRST_PERSON));","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":30,"author":{"gitId":"larrywang0701"},"content":"        assertParseFailure(parser, \" contact a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-10-12"},{"lineNumber":31,"author":{"gitId":"larrywang0701"},"content":"                DeletePersonCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-09"}],"authorContributionMap":{"larrywang0701":5,"-":28}},{"path":"src/test/java/seedu/address/logic/parser/DeleteTagCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"zekone"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-27"},{"lineNumber":2,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":3,"author":{"gitId":"zekone"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-27"},{"lineNumber":4,"author":{"gitId":"zekone"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2023-10-27"},{"lineNumber":5,"author":{"gitId":"zekone"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PERSON_ID_DESC;","lastModifiedDate":"2023-10-27"},{"lineNumber":6,"author":{"gitId":"zekone"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2023-10-27"},{"lineNumber":7,"author":{"gitId":"zekone"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2023-10-27"},{"lineNumber":8,"author":{"gitId":"zekone"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2023-10-27"},{"lineNumber":9,"author":{"gitId":"zekone"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PERSON_ID;","lastModifiedDate":"2023-10-27"},{"lineNumber":10,"author":{"gitId":"zekone"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2023-10-27"},{"lineNumber":11,"author":{"gitId":"zekone"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2023-10-27"},{"lineNumber":12,"author":{"gitId":"zekone"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-10-27"},{"lineNumber":13,"author":{"gitId":"zekone"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-10-27"},{"lineNumber":14,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":15,"author":{"gitId":"zekone"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-27"},{"lineNumber":16,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":17,"author":{"gitId":"zekone"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-27"},{"lineNumber":18,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":19,"author":{"gitId":"zekone"},"content":"import seedu.address.logic.commands.DeleteTagCommand;","lastModifiedDate":"2023-10-27"},{"lineNumber":20,"author":{"gitId":"zekone"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-10-27"},{"lineNumber":21,"author":{"gitId":"zekone"},"content":"import seedu.address.testutil.TagBuilder;","lastModifiedDate":"2023-10-27"},{"lineNumber":22,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":23,"author":{"gitId":"josepholim"},"content":"public class DeleteTagCommandParserTest {","lastModifiedDate":"2023-11-13"},{"lineNumber":24,"author":{"gitId":"zekone"},"content":"    private DeleteTagCommandParser parser \u003d new DeleteTagCommandParser();","lastModifiedDate":"2023-10-27"},{"lineNumber":25,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":26,"author":{"gitId":"zekone"},"content":"    @Test","lastModifiedDate":"2023-10-27"},{"lineNumber":27,"author":{"gitId":"zekone"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2023-10-27"},{"lineNumber":28,"author":{"gitId":"zekone"},"content":"        Set\u003cTag\u003e expectedTagSet \u003d new TagBuilder().withTag(VALID_TAG_HUSBAND).inSet();","lastModifiedDate":"2023-10-27"},{"lineNumber":29,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":30,"author":{"gitId":"zekone"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + PERSON_ID_DESC + TAG_DESC_HUSBAND,","lastModifiedDate":"2023-10-27"},{"lineNumber":31,"author":{"gitId":"zekone"},"content":"                new DeleteTagCommand(Integer.parseInt(VALID_PERSON_ID), expectedTagSet));","lastModifiedDate":"2023-10-27"},{"lineNumber":32,"author":{"gitId":"zekone"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":33,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":34,"author":{"gitId":"zekone"},"content":"    @Test","lastModifiedDate":"2023-10-27"},{"lineNumber":35,"author":{"gitId":"zekone"},"content":"    public void parse_multipleTags_success() {","lastModifiedDate":"2023-10-27"},{"lineNumber":36,"author":{"gitId":"zekone"},"content":"        Set\u003cTag\u003e expectedTagSet \u003d new TagBuilder().withTag(VALID_TAG_HUSBAND).inSet();","lastModifiedDate":"2023-10-27"},{"lineNumber":37,"author":{"gitId":"zekone"},"content":"        expectedTagSet.add(new TagBuilder().withTag(VALID_TAG_FRIEND).build());","lastModifiedDate":"2023-10-27"},{"lineNumber":38,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":39,"author":{"gitId":"zekone"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + PERSON_ID_DESC + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2023-10-27"},{"lineNumber":40,"author":{"gitId":"zekone"},"content":"                new DeleteTagCommand(Integer.parseInt(VALID_PERSON_ID), expectedTagSet));","lastModifiedDate":"2023-10-27"},{"lineNumber":41,"author":{"gitId":"zekone"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":42,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":43,"author":{"gitId":"zekone"},"content":"    @Test","lastModifiedDate":"2023-10-27"},{"lineNumber":44,"author":{"gitId":"zekone"},"content":"    public void parse_duplicateTags_success() {","lastModifiedDate":"2023-10-27"},{"lineNumber":45,"author":{"gitId":"zekone"},"content":"        Set\u003cTag\u003e expectedTagSet \u003d new TagBuilder().withTag(VALID_TAG_HUSBAND).inSet();","lastModifiedDate":"2023-10-27"},{"lineNumber":46,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":47,"author":{"gitId":"zekone"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + PERSON_ID_DESC + TAG_DESC_HUSBAND + TAG_DESC_HUSBAND,","lastModifiedDate":"2023-10-27"},{"lineNumber":48,"author":{"gitId":"zekone"},"content":"                new DeleteTagCommand(Integer.parseInt(VALID_PERSON_ID), expectedTagSet));","lastModifiedDate":"2023-10-27"},{"lineNumber":49,"author":{"gitId":"zekone"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":50,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":51,"author":{"gitId":"zekone"},"content":"    @Test","lastModifiedDate":"2023-10-27"},{"lineNumber":52,"author":{"gitId":"zekone"},"content":"    public void parse_invlaidTag_success() {","lastModifiedDate":"2023-10-27"},{"lineNumber":53,"author":{"gitId":"zekone"},"content":"        String expectedMessage \u003d Tag.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-10-27"},{"lineNumber":54,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":55,"author":{"gitId":"zekone"},"content":"        assertParseFailure(parser, PREAMBLE_WHITESPACE + PERSON_ID_DESC + INVALID_TAG_DESC,","lastModifiedDate":"2023-10-27"},{"lineNumber":56,"author":{"gitId":"zekone"},"content":"                expectedMessage);","lastModifiedDate":"2023-10-27"},{"lineNumber":57,"author":{"gitId":"zekone"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":58,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":59,"author":{"gitId":"zekone"},"content":"    @Test","lastModifiedDate":"2023-10-27"},{"lineNumber":60,"author":{"gitId":"zekone"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2023-10-27"},{"lineNumber":61,"author":{"gitId":"zekone"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteTagCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-10-27"},{"lineNumber":62,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":63,"author":{"gitId":"zekone"},"content":"        // missing person id prefix","lastModifiedDate":"2023-10-27"},{"lineNumber":64,"author":{"gitId":"zekone"},"content":"        assertParseFailure(parser, PREAMBLE_WHITESPACE + TAG_DESC_HUSBAND,","lastModifiedDate":"2023-10-27"},{"lineNumber":65,"author":{"gitId":"zekone"},"content":"                expectedMessage);","lastModifiedDate":"2023-10-27"},{"lineNumber":66,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":67,"author":{"gitId":"zekone"},"content":"        // missing tag prefix","lastModifiedDate":"2023-10-27"},{"lineNumber":68,"author":{"gitId":"zekone"},"content":"        assertParseFailure(parser, PREAMBLE_WHITESPACE + PERSON_ID_DESC,","lastModifiedDate":"2023-10-27"},{"lineNumber":69,"author":{"gitId":"zekone"},"content":"                expectedMessage);","lastModifiedDate":"2023-10-27"},{"lineNumber":70,"author":{"gitId":"zekone"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":71,"author":{"gitId":"zekone"},"content":"}","lastModifiedDate":"2023-10-27"}],"authorContributionMap":{"zekone":70,"josepholim":1}},{"path":"src/test/java/seedu/address/logic/parser/HelpCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Nixx162"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-19"},{"lineNumber":2,"author":{"gitId":"Nixx162"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":3,"author":{"gitId":"Nixx162"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-10-19"},{"lineNumber":4,"author":{"gitId":"Nixx162"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":5,"author":{"gitId":"Nixx162"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-19"},{"lineNumber":6,"author":{"gitId":"Nixx162"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":7,"author":{"gitId":"Nixx162"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2023-10-20"},{"lineNumber":8,"author":{"gitId":"Nixx162"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":9,"author":{"gitId":"Nixx162"},"content":"public class HelpCommandParserTest {","lastModifiedDate":"2023-10-19"},{"lineNumber":10,"author":{"gitId":"Nixx162"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":11,"author":{"gitId":"Nixx162"},"content":"    private HelpCommandParser parser \u003d new HelpCommandParser();","lastModifiedDate":"2023-10-19"},{"lineNumber":12,"author":{"gitId":"Nixx162"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":13,"author":{"gitId":"Nixx162"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":14,"author":{"gitId":"Nixx162"},"content":"    public void parse_emptyArg() {","lastModifiedDate":"2023-10-19"},{"lineNumber":15,"author":{"gitId":"Nixx162"},"content":"        assertParseSuccess(parser, \"     \", new HelpCommand(true));","lastModifiedDate":"2023-10-19"},{"lineNumber":16,"author":{"gitId":"Nixx162"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":17,"author":{"gitId":"Nixx162"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":18,"author":{"gitId":"Nixx162"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":19,"author":{"gitId":"Nixx162"},"content":"    public void parse_recognizableArg() {","lastModifiedDate":"2023-10-19"},{"lineNumber":20,"author":{"gitId":"Nixx162"},"content":"        assertParseSuccess(parser, \"add\", new HelpCommand(true, \"add\"));","lastModifiedDate":"2023-10-19"},{"lineNumber":21,"author":{"gitId":"Nixx162"},"content":"        assertParseSuccess(parser, \"delete\", new HelpCommand(true, \"delete\"));","lastModifiedDate":"2023-10-19"},{"lineNumber":22,"author":{"gitId":"Nixx162"},"content":"        assertParseSuccess(parser, \"clear      \", new HelpCommand(true, \"clear\"));","lastModifiedDate":"2023-10-19"},{"lineNumber":23,"author":{"gitId":"Nixx162"},"content":"        assertParseSuccess(parser, \"find\\t\\t\\t\", new HelpCommand(true, \"find\"));","lastModifiedDate":"2023-10-19"},{"lineNumber":24,"author":{"gitId":"Nixx162"},"content":"        assertParseSuccess(parser, \"list\", new HelpCommand(true, \"list\"));","lastModifiedDate":"2023-10-19"},{"lineNumber":25,"author":{"gitId":"Nixx162"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":26,"author":{"gitId":"Nixx162"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":27,"author":{"gitId":"Nixx162"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":28,"author":{"gitId":"Nixx162"},"content":"    public void parse_unrecognizableArg() {","lastModifiedDate":"2023-10-19"},{"lineNumber":29,"author":{"gitId":"Nixx162"},"content":"        assertParseSuccess(parser, \"baddt\", new HelpCommand(false, \"add\"));","lastModifiedDate":"2023-10-19"},{"lineNumber":30,"author":{"gitId":"Nixx162"},"content":"        assertParseSuccess(parser, \"deleet\", new HelpCommand(false, \"delete\"));","lastModifiedDate":"2023-10-19"},{"lineNumber":31,"author":{"gitId":"Nixx162"},"content":"        assertParseSuccess(parser, \"clean      \", new HelpCommand(false, \"clear\"));","lastModifiedDate":"2023-10-19"},{"lineNumber":32,"author":{"gitId":"Nixx162"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":33,"author":{"gitId":"Nixx162"},"content":"}","lastModifiedDate":"2023-10-19"}],"authorContributionMap":{"Nixx162":33}},{"path":"src/test/java/seedu/address/logic/parser/ListCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"larrywang0701"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"larrywang0701"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"larrywang0701"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"larrywang0701"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"larrywang0701"},"content":"import org.junit.jupiter.api.function.ThrowingSupplier;","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"larrywang0701"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"larrywang0701"},"content":"import seedu.address.logic.commands.ListEventCommand;","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"larrywang0701"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"larrywang0701"},"content":"public class ListCommandParserTest {","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"larrywang0701"},"content":"    private ListCommandParser parser \u003d new ListCommandParser();","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"larrywang0701"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"larrywang0701"},"content":"    public void execute_correctCommand_success() {","lastModifiedDate":"2023-11-01"},{"lineNumber":20,"author":{"gitId":"larrywang0701"},"content":"        assertParseSuccessWithCommand(() -\u003e parser.parse(\" \"","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"larrywang0701"},"content":"                + ListEventCommand.SECONDARY_COMMAND_WORD), ListEventCommand.class.getName());","lastModifiedDate":"2023-10-12"},{"lineNumber":22,"author":{"gitId":"larrywang0701"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":24,"author":{"gitId":"larrywang0701"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":25,"author":{"gitId":"larrywang0701"},"content":"    public void execute_commandNotFound_fails() {","lastModifiedDate":"2023-11-01"},{"lineNumber":26,"author":{"gitId":"larrywang0701"},"content":"        assertParseFailedWithError(() -\u003e parser.parse(\" \"","lastModifiedDate":"2023-10-12"},{"lineNumber":27,"author":{"gitId":"larrywang0701"},"content":"                + \" unknown_command 1 2 3\"), MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2023-10-12"},{"lineNumber":28,"author":{"gitId":"larrywang0701"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":29,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":30,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":31,"author":{"gitId":"larrywang0701"},"content":"    private void assertParseSuccessWithCommand(ThrowingSupplier\u003cCommand\u003e function, String commandClassName) {","lastModifiedDate":"2023-10-12"},{"lineNumber":32,"author":{"gitId":"larrywang0701"},"content":"        try {","lastModifiedDate":"2023-10-12"},{"lineNumber":33,"author":{"gitId":"larrywang0701"},"content":"            Command command \u003d function.get();","lastModifiedDate":"2023-10-12"},{"lineNumber":34,"author":{"gitId":"larrywang0701"},"content":"            assertEquals(command.getClass().getName(), commandClassName);","lastModifiedDate":"2023-10-12"},{"lineNumber":35,"author":{"gitId":"larrywang0701"},"content":"        } catch (Throwable e) {","lastModifiedDate":"2023-10-12"},{"lineNumber":36,"author":{"gitId":"larrywang0701"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", e);","lastModifiedDate":"2023-10-12"},{"lineNumber":37,"author":{"gitId":"larrywang0701"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":38,"author":{"gitId":"larrywang0701"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":39,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":40,"author":{"gitId":"larrywang0701"},"content":"    private void assertParseFailedWithError(ThrowingSupplier\u003cCommand\u003e function, String errResult) {","lastModifiedDate":"2023-10-12"},{"lineNumber":41,"author":{"gitId":"larrywang0701"},"content":"        try {","lastModifiedDate":"2023-10-12"},{"lineNumber":42,"author":{"gitId":"larrywang0701"},"content":"            function.get();","lastModifiedDate":"2023-10-12"},{"lineNumber":43,"author":{"gitId":"larrywang0701"},"content":"        } catch (Throwable e) {","lastModifiedDate":"2023-10-12"},{"lineNumber":44,"author":{"gitId":"larrywang0701"},"content":"            if (!(e instanceof ParseException)) {","lastModifiedDate":"2023-10-12"},{"lineNumber":45,"author":{"gitId":"larrywang0701"},"content":"                throw new AssertionError(\"Execution of parser failed but not due to ParseException.\");","lastModifiedDate":"2023-10-12"},{"lineNumber":46,"author":{"gitId":"larrywang0701"},"content":"            }","lastModifiedDate":"2023-10-12"},{"lineNumber":47,"author":{"gitId":"larrywang0701"},"content":"            assertEquals(e.getMessage(), errResult);","lastModifiedDate":"2023-10-12"},{"lineNumber":48,"author":{"gitId":"larrywang0701"},"content":"            return;","lastModifiedDate":"2023-10-12"},{"lineNumber":49,"author":{"gitId":"larrywang0701"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":50,"author":{"gitId":"larrywang0701"},"content":"        throw new AssertionError(\"Execution of command should fail.\");","lastModifiedDate":"2023-10-12"},{"lineNumber":51,"author":{"gitId":"larrywang0701"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":52,"author":{"gitId":"larrywang0701"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"larrywang0701":52}},{"path":"src/test/java/seedu/address/logic/parser/ListEventCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"larrywang0701"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-11-01"},{"lineNumber":2,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":3,"author":{"gitId":"larrywang0701"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-11-01"},{"lineNumber":4,"author":{"gitId":"larrywang0701"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-11-01"},{"lineNumber":5,"author":{"gitId":"larrywang0701"},"content":"import static seedu.address.logic.Messages.MESSAGE_START_TIME_AFTER_END_TIME;","lastModifiedDate":"2023-11-01"},{"lineNumber":6,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":7,"author":{"gitId":"larrywang0701"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-11-01"},{"lineNumber":8,"author":{"gitId":"larrywang0701"},"content":"import org.junit.jupiter.api.function.ThrowingSupplier;","lastModifiedDate":"2023-11-01"},{"lineNumber":9,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":10,"author":{"gitId":"larrywang0701"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2023-11-01"},{"lineNumber":11,"author":{"gitId":"larrywang0701"},"content":"import seedu.address.logic.commands.ListEventCommand;","lastModifiedDate":"2023-11-01"},{"lineNumber":12,"author":{"gitId":"larrywang0701"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-11-01"},{"lineNumber":13,"author":{"gitId":"larrywang0701"},"content":"import seedu.address.model.event.EventTime;","lastModifiedDate":"2023-11-01"},{"lineNumber":14,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":15,"author":{"gitId":"larrywang0701"},"content":"public class ListEventCommandParserTest {","lastModifiedDate":"2023-11-01"},{"lineNumber":16,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":17,"author":{"gitId":"larrywang0701"},"content":"    private ListEventCommandParser parser \u003d new ListEventCommandParser();","lastModifiedDate":"2023-11-01"},{"lineNumber":18,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":19,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":20,"author":{"gitId":"larrywang0701"},"content":"    @Test","lastModifiedDate":"2023-11-01"},{"lineNumber":21,"author":{"gitId":"larrywang0701"},"content":"    public void execute_correctCommandNoFilter_success() {","lastModifiedDate":"2023-11-01"},{"lineNumber":22,"author":{"gitId":"larrywang0701"},"content":"        assertParseSuccessWithCommand(() -\u003e parser.parse(\" \"), ListEventCommand.class.getName());","lastModifiedDate":"2023-11-01"},{"lineNumber":23,"author":{"gitId":"larrywang0701"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":24,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":25,"author":{"gitId":"larrywang0701"},"content":"    @Test","lastModifiedDate":"2023-11-01"},{"lineNumber":26,"author":{"gitId":"larrywang0701"},"content":"    public void execute_correctCommandNoFilterDescending_success() {","lastModifiedDate":"2023-11-01"},{"lineNumber":27,"author":{"gitId":"larrywang0701"},"content":"        assertParseSuccessWithCommand(() -\u003e parser.parse(\" -descending\"), ListEventCommand.class.getName());","lastModifiedDate":"2023-11-01"},{"lineNumber":28,"author":{"gitId":"larrywang0701"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":29,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":30,"author":{"gitId":"larrywang0701"},"content":"    @Test","lastModifiedDate":"2023-11-01"},{"lineNumber":31,"author":{"gitId":"larrywang0701"},"content":"        public void execute_correctCommandUseFilter_success() {","lastModifiedDate":"2023-11-01"},{"lineNumber":32,"author":{"gitId":"larrywang0701"},"content":"        assertParseSuccessWithCommand(() -\u003e parser.parse(\" -st 2023-11-02 -et 2023-11-03\"),","lastModifiedDate":"2023-11-01"},{"lineNumber":33,"author":{"gitId":"larrywang0701"},"content":"                ListEventCommand.class.getName());","lastModifiedDate":"2023-11-01"},{"lineNumber":34,"author":{"gitId":"larrywang0701"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":35,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":36,"author":{"gitId":"larrywang0701"},"content":"    @Test","lastModifiedDate":"2023-11-01"},{"lineNumber":37,"author":{"gitId":"larrywang0701"},"content":"    public void execute_correctCommandUseFilterDescending_success() {","lastModifiedDate":"2023-11-01"},{"lineNumber":38,"author":{"gitId":"larrywang0701"},"content":"        assertParseSuccessWithCommand(() -\u003e parser.parse(\" -st 2023-11-02 -et 2023-11-03 -descending\"),","lastModifiedDate":"2023-11-01"},{"lineNumber":39,"author":{"gitId":"larrywang0701"},"content":"                ListEventCommand.class.getName());","lastModifiedDate":"2023-11-01"},{"lineNumber":40,"author":{"gitId":"larrywang0701"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":41,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":42,"author":{"gitId":"larrywang0701"},"content":"    @Test","lastModifiedDate":"2023-11-01"},{"lineNumber":43,"author":{"gitId":"larrywang0701"},"content":"    public void execute_wrongCommandUseFilterFail_startTimeAfterEndTime() {","lastModifiedDate":"2023-11-01"},{"lineNumber":44,"author":{"gitId":"larrywang0701"},"content":"        assertParseFailedWithError(() -\u003e parser.parse(\" -st 2023-11-03 -et 2023-11-02\"),","lastModifiedDate":"2023-11-01"},{"lineNumber":45,"author":{"gitId":"larrywang0701"},"content":"                String.format(MESSAGE_START_TIME_AFTER_END_TIME, \"2023-11-03 00:00:00\", \"2023-11-02 00:00:00\"));","lastModifiedDate":"2023-11-01"},{"lineNumber":46,"author":{"gitId":"larrywang0701"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":47,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":48,"author":{"gitId":"larrywang0701"},"content":"    @Test","lastModifiedDate":"2023-11-01"},{"lineNumber":49,"author":{"gitId":"larrywang0701"},"content":"    public void execute_wrongCommandUseFilterFail_onlyHasStartTime() {","lastModifiedDate":"2023-11-01"},{"lineNumber":50,"author":{"gitId":"larrywang0701"},"content":"        assertParseFailedWithError(() -\u003e parser.parse(\" -st 2023-11-03\"),","lastModifiedDate":"2023-11-01"},{"lineNumber":51,"author":{"gitId":"larrywang0701"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, ListEventCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-11-01"},{"lineNumber":52,"author":{"gitId":"larrywang0701"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":53,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":54,"author":{"gitId":"larrywang0701"},"content":"    @Test","lastModifiedDate":"2023-11-01"},{"lineNumber":55,"author":{"gitId":"larrywang0701"},"content":"    public void execute_wrongCommandUseFilterFail_onlyHasEndTime() {","lastModifiedDate":"2023-11-01"},{"lineNumber":56,"author":{"gitId":"larrywang0701"},"content":"        assertParseFailedWithError(() -\u003e parser.parse(\" -et 2023-11-03\"),","lastModifiedDate":"2023-11-01"},{"lineNumber":57,"author":{"gitId":"larrywang0701"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, ListEventCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-11-01"},{"lineNumber":58,"author":{"gitId":"larrywang0701"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":59,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":60,"author":{"gitId":"larrywang0701"},"content":"    @Test","lastModifiedDate":"2023-11-01"},{"lineNumber":61,"author":{"gitId":"larrywang0701"},"content":"    public void execute_wrongCommandUseFilterFail_emptyArguments() {","lastModifiedDate":"2023-11-01"},{"lineNumber":62,"author":{"gitId":"larrywang0701"},"content":"        assertParseFailedWithError(() -\u003e parser.parse(\" -st -et\"),","lastModifiedDate":"2023-11-01"},{"lineNumber":63,"author":{"gitId":"larrywang0701"},"content":"                EventTime.MESSAGE_NON_EMPTY);","lastModifiedDate":"2023-11-01"},{"lineNumber":64,"author":{"gitId":"larrywang0701"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":65,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":66,"author":{"gitId":"larrywang0701"},"content":"    @Test","lastModifiedDate":"2023-11-01"},{"lineNumber":67,"author":{"gitId":"larrywang0701"},"content":"    public void execute_wrongCommandUseFilterDescendingFail_extraContentAfterDescendingPrefix() {","lastModifiedDate":"2023-11-01"},{"lineNumber":68,"author":{"gitId":"larrywang0701"},"content":"        assertParseFailedWithError(() -\u003e parser.parse(\"  -descending xxx -st 2023-11-02 -et 2023-11-03\"),","lastModifiedDate":"2023-11-01"},{"lineNumber":69,"author":{"gitId":"larrywang0701"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, ListEventCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-11-01"},{"lineNumber":70,"author":{"gitId":"larrywang0701"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":71,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":72,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":73,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":74,"author":{"gitId":"larrywang0701"},"content":"    private void assertParseSuccessWithCommand(ThrowingSupplier\u003cCommand\u003e function, String commandClassName) {","lastModifiedDate":"2023-11-01"},{"lineNumber":75,"author":{"gitId":"larrywang0701"},"content":"        try {","lastModifiedDate":"2023-11-01"},{"lineNumber":76,"author":{"gitId":"larrywang0701"},"content":"            Command command \u003d function.get();","lastModifiedDate":"2023-11-01"},{"lineNumber":77,"author":{"gitId":"larrywang0701"},"content":"            assertEquals(command.getClass().getName(), commandClassName);","lastModifiedDate":"2023-11-01"},{"lineNumber":78,"author":{"gitId":"larrywang0701"},"content":"        } catch (Throwable e) {","lastModifiedDate":"2023-11-01"},{"lineNumber":79,"author":{"gitId":"larrywang0701"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", e);","lastModifiedDate":"2023-11-01"},{"lineNumber":80,"author":{"gitId":"larrywang0701"},"content":"        }","lastModifiedDate":"2023-11-01"},{"lineNumber":81,"author":{"gitId":"larrywang0701"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":82,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":83,"author":{"gitId":"larrywang0701"},"content":"    private void assertParseFailedWithError(ThrowingSupplier\u003cCommand\u003e function, String errResult) {","lastModifiedDate":"2023-11-01"},{"lineNumber":84,"author":{"gitId":"larrywang0701"},"content":"        try {","lastModifiedDate":"2023-11-01"},{"lineNumber":85,"author":{"gitId":"larrywang0701"},"content":"            function.get();","lastModifiedDate":"2023-11-01"},{"lineNumber":86,"author":{"gitId":"larrywang0701"},"content":"        } catch (Throwable e) {","lastModifiedDate":"2023-11-01"},{"lineNumber":87,"author":{"gitId":"larrywang0701"},"content":"            if (!(e instanceof ParseException)) {","lastModifiedDate":"2023-11-01"},{"lineNumber":88,"author":{"gitId":"larrywang0701"},"content":"                throw new AssertionError(\"Execution of parser failed but not due to ParseException.\");","lastModifiedDate":"2023-11-01"},{"lineNumber":89,"author":{"gitId":"larrywang0701"},"content":"            }","lastModifiedDate":"2023-11-01"},{"lineNumber":90,"author":{"gitId":"larrywang0701"},"content":"            assertEquals(e.getMessage(), errResult);","lastModifiedDate":"2023-11-01"},{"lineNumber":91,"author":{"gitId":"larrywang0701"},"content":"            return;","lastModifiedDate":"2023-11-01"},{"lineNumber":92,"author":{"gitId":"larrywang0701"},"content":"        }","lastModifiedDate":"2023-11-01"},{"lineNumber":93,"author":{"gitId":"larrywang0701"},"content":"        throw new AssertionError(\"Execution of command should fail.\");","lastModifiedDate":"2023-11-01"},{"lineNumber":94,"author":{"gitId":"larrywang0701"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":95,"author":{"gitId":"larrywang0701"},"content":"}","lastModifiedDate":"2023-11-01"}],"authorContributionMap":{"larrywang0701":95}},{"path":"src/test/java/seedu/address/logic/parser/ParserUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.ParserUtil.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2017-06-02"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":9,"author":{"gitId":"larrywang0701"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-10-25"},{"lineNumber":10,"author":{"gitId":"larrywang0701"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-10-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-05-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-05-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-05-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":18,"author":{"gitId":"larrywang0701"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":20,"author":{"gitId":"larrywang0701"},"content":"import seedu.address.model.event.EventID;","lastModifiedDate":"2023-10-25"},{"lineNumber":21,"author":{"gitId":"larrywang0701"},"content":"import seedu.address.model.event.EventInformation;","lastModifiedDate":"2023-10-25"},{"lineNumber":22,"author":{"gitId":"larrywang0701"},"content":"import seedu.address.model.event.EventLocation;","lastModifiedDate":"2023-10-25"},{"lineNumber":23,"author":{"gitId":"larrywang0701"},"content":"import seedu.address.model.event.EventName;","lastModifiedDate":"2023-10-25"},{"lineNumber":24,"author":{"gitId":"larrywang0701"},"content":"import seedu.address.model.event.EventTime;","lastModifiedDate":"2023-10-25"},{"lineNumber":25,"author":{"gitId":"josepholim"},"content":"import seedu.address.model.note.NoteContent;","lastModifiedDate":"2023-10-27"},{"lineNumber":26,"author":{"gitId":"josepholim"},"content":"import seedu.address.model.note.NoteID;","lastModifiedDate":"2023-10-27"},{"lineNumber":27,"author":{"gitId":"josepholim"},"content":"import seedu.address.model.note.NoteTitle;","lastModifiedDate":"2023-10-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-05-22"},{"lineNumber":29,"author":{"gitId":"larrywang0701"},"content":"import seedu.address.model.person.ContactID;","lastModifiedDate":"2023-10-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-05-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-05-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-05-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-05-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"public class ParserUtilTest {","lastModifiedDate":"2017-05-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2017-05-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2017-05-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2017-05-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":41,"author":{"gitId":"josepholim"},"content":"    private static final String INVALID_CONTACT_ID_1 \u003d \"abc\";","lastModifiedDate":"2023-10-27"},{"lineNumber":42,"author":{"gitId":"josepholim"},"content":"    private static final String INVALID_CONTACT_ID_2 \u003d \"1.23\";","lastModifiedDate":"2023-10-27"},{"lineNumber":43,"author":{"gitId":"josepholim"},"content":"    private static final String INVALID_NOTE_ID_1 \u003d \"abc\";","lastModifiedDate":"2023-10-27"},{"lineNumber":44,"author":{"gitId":"josepholim"},"content":"    private static final String INVALID_NOTE_ID_2 \u003d \"1.23\";","lastModifiedDate":"2023-10-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d \"Rachel Walker\";","lastModifiedDate":"2017-05-22"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d \"123456\";","lastModifiedDate":"2017-05-22"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d \"123 Main Street #0505\";","lastModifiedDate":"2017-05-22"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d \"rachel@example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_1 \u003d \"friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_2 \u003d \"neighbour\";","lastModifiedDate":"2017-05-22"},{"lineNumber":52,"author":{"gitId":"josepholim"},"content":"    private static final String VALID_CONTACT_ID \u003d \"1\";","lastModifiedDate":"2023-10-27"},{"lineNumber":53,"author":{"gitId":"josepholim"},"content":"    private static final String VALID_NOTE_ID \u003d \"1\";","lastModifiedDate":"2023-10-27"},{"lineNumber":54,"author":{"gitId":"josepholim"},"content":"    private static final String VALID_NOTE_CONTENT \u003d \"Content 1\";","lastModifiedDate":"2023-10-27"},{"lineNumber":55,"author":{"gitId":"josepholim"},"content":"    private static final String VALID_NOTE_TITLE \u003d \"Title 1\";","lastModifiedDate":"2023-10-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    private static final String WHITESPACE \u003d \" \\t\\r\\n\";","lastModifiedDate":"2017-05-29"},{"lineNumber":58,"author":{"gitId":"josepholim"},"content":"    private static final String EMPTY_STRING \u003d \"\";","lastModifiedDate":"2023-10-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void parseIndex_invalidInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseIndex(\"10 a\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void parseIndex_outOfRangeInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_INVALID_INDEX, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            -\u003e ParserUtil.parseIndex(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2019-03-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void parseIndex_validInput_success() throws Exception {","lastModifiedDate":"2017-05-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // No whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"1\"));","lastModifiedDate":"2017-05-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // Leading and trailing whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"  1  \"));","lastModifiedDate":"2017-05-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void parseName_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseName((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void parseName_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseName(INVALID_NAME));","lastModifiedDate":"2019-03-14"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithoutWhitespace_returnsName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(VALID_NAME));","lastModifiedDate":"2017-05-29"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithWhitespace_returnsTrimmedName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        String nameWithWhitespace \u003d WHITESPACE + VALID_NAME + WHITESPACE;","lastModifiedDate":"2017-05-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(nameWithWhitespace));","lastModifiedDate":"2017-05-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public void parsePhone_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parsePhone((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void parsePhone_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parsePhone(INVALID_PHONE));","lastModifiedDate":"2019-03-14"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithoutWhitespace_returnsPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-22"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(VALID_PHONE));","lastModifiedDate":"2017-05-30"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithWhitespace_returnsTrimmedPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        String phoneWithWhitespace \u003d WHITESPACE + VALID_PHONE + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-30"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(phoneWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    public void parseAddress_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseAddress((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    public void parseAddress_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseAddress(INVALID_ADDRESS));","lastModifiedDate":"2019-03-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithoutWhitespace_returnsAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-22"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(VALID_ADDRESS));","lastModifiedDate":"2017-05-30"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithWhitespace_returnsTrimmedAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        String addressWithWhitespace \u003d WHITESPACE + VALID_ADDRESS + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-30"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(addressWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    public void parseEmail_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseEmail((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    public void parseEmail_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseEmail(INVALID_EMAIL));","lastModifiedDate":"2019-03-14"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithoutWhitespace_returnsEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-22"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(VALID_EMAIL));","lastModifiedDate":"2017-05-30"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithWhitespace_returnsTrimmedEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        String emailWithWhitespace \u003d WHITESPACE + VALID_EMAIL + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-30"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(emailWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    public void parseTag_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTag(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    public void parseTag_invalidValue_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTag(INVALID_TAG));","lastModifiedDate":"2019-03-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithoutWhitespace_returnsTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(VALID_TAG_1));","lastModifiedDate":"2017-05-30"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithWhitespace_returnsTrimmedTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        String tagWithWhitespace \u003d WHITESPACE + VALID_TAG_1 + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(tagWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    public void parseTags_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTags(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithInvalidTags_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, INVALID_TAG)));","lastModifiedDate":"2019-03-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    public void parseTags_emptyCollection_returnsEmptySet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        assertTrue(ParserUtil.parseTags(Collections.emptyList()).isEmpty());","lastModifiedDate":"2017-05-22"},{"lineNumber":208,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithValidTags_returnsTagSet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e actualTagSet \u003d ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, VALID_TAG_2));","lastModifiedDate":"2017-05-22"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e expectedTagSet \u003d new HashSet\u003cTag\u003e(Arrays.asList(new Tag(VALID_TAG_1), new Tag(VALID_TAG_2)));","lastModifiedDate":"2017-05-22"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        assertEquals(expectedTagSet, actualTagSet);","lastModifiedDate":"2017-05-22"},{"lineNumber":216,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":217,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":218,"author":{"gitId":"larrywang0701"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":219,"author":{"gitId":"josepholim"},"content":"    public void parseContactID_validValue_returnsContactID() throws Exception {","lastModifiedDate":"2023-10-27"},{"lineNumber":220,"author":{"gitId":"josepholim"},"content":"        assertEquals(VALID_CONTACT_ID, ParserUtil.parseContactID(VALID_CONTACT_ID).toString());","lastModifiedDate":"2023-10-27"},{"lineNumber":221,"author":{"gitId":"larrywang0701"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":222,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":223,"author":{"gitId":"larrywang0701"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":224,"author":{"gitId":"josepholim"},"content":"    public void parseContactID_invalidValueEmptyString_throwsParseException() {","lastModifiedDate":"2023-10-27"},{"lineNumber":225,"author":{"gitId":"larrywang0701"},"content":"        assertThrows(ParseException.class, ContactID.MESSAGE_NON_EMPTY, () -\u003e ParserUtil.parseContactID(\"\").toString());","lastModifiedDate":"2023-10-25"},{"lineNumber":226,"author":{"gitId":"larrywang0701"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":227,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":228,"author":{"gitId":"larrywang0701"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":229,"author":{"gitId":"josepholim"},"content":"    public void parseContactID_invalidInteger_throwsParseException() {","lastModifiedDate":"2023-10-27"},{"lineNumber":230,"author":{"gitId":"josepholim"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseContactID(INVALID_CONTACT_ID_1));","lastModifiedDate":"2023-10-27"},{"lineNumber":231,"author":{"gitId":"josepholim"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseContactID(INVALID_CONTACT_ID_2));","lastModifiedDate":"2023-10-27"},{"lineNumber":232,"author":{"gitId":"josepholim"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":233,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":234,"author":{"gitId":"josepholim"},"content":"    @Test","lastModifiedDate":"2023-10-27"},{"lineNumber":235,"author":{"gitId":"josepholim"},"content":"    public void parseNoteID_validValue_returnsNoteID() throws Exception {","lastModifiedDate":"2023-10-27"},{"lineNumber":236,"author":{"gitId":"josepholim"},"content":"        assertEquals(VALID_NOTE_ID, ParserUtil.parseNoteID(VALID_NOTE_ID).toString());","lastModifiedDate":"2023-10-27"},{"lineNumber":237,"author":{"gitId":"josepholim"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":238,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":239,"author":{"gitId":"josepholim"},"content":"    @Test","lastModifiedDate":"2023-10-27"},{"lineNumber":240,"author":{"gitId":"josepholim"},"content":"    public void parseNoteID_invalidValueEmptyString_throwsParseException() {","lastModifiedDate":"2023-10-27"},{"lineNumber":241,"author":{"gitId":"josepholim"},"content":"        assertThrows(ParseException.class,","lastModifiedDate":"2023-10-27"},{"lineNumber":242,"author":{"gitId":"josepholim"},"content":"                NoteID.MESSAGE_NON_EMPTY, () -\u003e ParserUtil.parseNoteID(EMPTY_STRING).toString());","lastModifiedDate":"2023-10-27"},{"lineNumber":243,"author":{"gitId":"josepholim"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":244,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":245,"author":{"gitId":"josepholim"},"content":"    @Test","lastModifiedDate":"2023-10-27"},{"lineNumber":246,"author":{"gitId":"josepholim"},"content":"    public void parseNoteID_invalidValueWhitespace_throwsParseException() {","lastModifiedDate":"2023-10-27"},{"lineNumber":247,"author":{"gitId":"josepholim"},"content":"        assertThrows(ParseException.class,","lastModifiedDate":"2023-10-27"},{"lineNumber":248,"author":{"gitId":"josepholim"},"content":"                NoteID.MESSAGE_NON_EMPTY, () -\u003e ParserUtil.parseNoteID(WHITESPACE).toString());","lastModifiedDate":"2023-10-27"},{"lineNumber":249,"author":{"gitId":"josepholim"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":250,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":251,"author":{"gitId":"josepholim"},"content":"    @Test","lastModifiedDate":"2023-10-27"},{"lineNumber":252,"author":{"gitId":"josepholim"},"content":"    public void parseNoteID_invalidValueNotInteger_throwsParseException() {","lastModifiedDate":"2023-10-27"},{"lineNumber":253,"author":{"gitId":"josepholim"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseNoteID(INVALID_NOTE_ID_1).toString());","lastModifiedDate":"2023-10-27"},{"lineNumber":254,"author":{"gitId":"josepholim"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseNoteID(INVALID_NOTE_ID_2).toString());","lastModifiedDate":"2023-10-27"},{"lineNumber":255,"author":{"gitId":"josepholim"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":256,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":257,"author":{"gitId":"josepholim"},"content":"    @Test","lastModifiedDate":"2023-10-27"},{"lineNumber":258,"author":{"gitId":"josepholim"},"content":"    public void parseNoteContent_validValueWithoutWhitespace_returnsNoteContent() throws Exception {","lastModifiedDate":"2023-10-27"},{"lineNumber":259,"author":{"gitId":"josepholim"},"content":"        assertEquals(VALID_NOTE_CONTENT, ParserUtil.parseNoteContent(VALID_NOTE_CONTENT).toString());","lastModifiedDate":"2023-10-27"},{"lineNumber":260,"author":{"gitId":"josepholim"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":261,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":262,"author":{"gitId":"josepholim"},"content":"    @Test","lastModifiedDate":"2023-10-27"},{"lineNumber":263,"author":{"gitId":"josepholim"},"content":"    public void parseNoteContent_validValueWithWhitespace_returnsTrimmedNoteContent() throws Exception {","lastModifiedDate":"2023-10-27"},{"lineNumber":264,"author":{"gitId":"josepholim"},"content":"        String noteContentWithWhitespace \u003d WHITESPACE + VALID_NOTE_CONTENT + WHITESPACE;","lastModifiedDate":"2023-10-27"},{"lineNumber":265,"author":{"gitId":"josepholim"},"content":"        assertEquals(VALID_NOTE_CONTENT, ParserUtil.parseNoteContent(noteContentWithWhitespace).toString());","lastModifiedDate":"2023-10-27"},{"lineNumber":266,"author":{"gitId":"josepholim"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":267,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":268,"author":{"gitId":"josepholim"},"content":"    @Test","lastModifiedDate":"2023-10-27"},{"lineNumber":269,"author":{"gitId":"josepholim"},"content":"    public void parseNoteContent_invalidValueEmptyString_throwsParseException() throws Exception {","lastModifiedDate":"2023-10-27"},{"lineNumber":270,"author":{"gitId":"josepholim"},"content":"        assertThrows(ParseException.class, NoteContent.MESSAGE_CONSTRAINTS, () -\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":271,"author":{"gitId":"josepholim"},"content":"                ParserUtil.parseNoteContent(EMPTY_STRING).toString());","lastModifiedDate":"2023-10-27"},{"lineNumber":272,"author":{"gitId":"josepholim"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":273,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":274,"author":{"gitId":"josepholim"},"content":"    @Test","lastModifiedDate":"2023-10-27"},{"lineNumber":275,"author":{"gitId":"josepholim"},"content":"    public void parseNoteContent_invalidValueWhitespace_throwsParseException() throws Exception {","lastModifiedDate":"2023-10-27"},{"lineNumber":276,"author":{"gitId":"josepholim"},"content":"        assertThrows(ParseException.class, NoteContent.MESSAGE_CONSTRAINTS, () -\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":277,"author":{"gitId":"josepholim"},"content":"                ParserUtil.parseNoteContent(WHITESPACE).toString());","lastModifiedDate":"2023-10-27"},{"lineNumber":278,"author":{"gitId":"josepholim"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":279,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":280,"author":{"gitId":"josepholim"},"content":"    @Test","lastModifiedDate":"2023-10-27"},{"lineNumber":281,"author":{"gitId":"josepholim"},"content":"    public void parseNoteTitle_validValueWithoutWhitespace_returnsNoteTitle() throws Exception {","lastModifiedDate":"2023-10-27"},{"lineNumber":282,"author":{"gitId":"josepholim"},"content":"        assertEquals(VALID_NOTE_TITLE, ParserUtil.parseNoteContent(VALID_NOTE_TITLE).toString());","lastModifiedDate":"2023-10-27"},{"lineNumber":283,"author":{"gitId":"josepholim"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":284,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":285,"author":{"gitId":"josepholim"},"content":"    @Test","lastModifiedDate":"2023-10-27"},{"lineNumber":286,"author":{"gitId":"josepholim"},"content":"    public void parseNoteTitle_validValueWithWhitespace_returnsTrimmedNoteTitle() throws Exception {","lastModifiedDate":"2023-10-27"},{"lineNumber":287,"author":{"gitId":"josepholim"},"content":"        String noteTitleWithWhitespace \u003d WHITESPACE + VALID_NOTE_TITLE + WHITESPACE;","lastModifiedDate":"2023-10-27"},{"lineNumber":288,"author":{"gitId":"josepholim"},"content":"        assertEquals(VALID_NOTE_TITLE, ParserUtil.parseNoteTitle(noteTitleWithWhitespace).toString());","lastModifiedDate":"2023-10-27"},{"lineNumber":289,"author":{"gitId":"josepholim"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":290,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":291,"author":{"gitId":"josepholim"},"content":"    @Test","lastModifiedDate":"2023-10-27"},{"lineNumber":292,"author":{"gitId":"josepholim"},"content":"    public void parseNoteTitle_invalidValueEmptyString_throwsParseException() throws Exception {","lastModifiedDate":"2023-10-27"},{"lineNumber":293,"author":{"gitId":"josepholim"},"content":"        assertThrows(ParseException.class, NoteTitle.MESSAGE_CONSTRAINTS, () -\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":294,"author":{"gitId":"josepholim"},"content":"                ParserUtil.parseNoteTitle(EMPTY_STRING).toString());","lastModifiedDate":"2023-10-27"},{"lineNumber":295,"author":{"gitId":"josepholim"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":296,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":297,"author":{"gitId":"josepholim"},"content":"    @Test","lastModifiedDate":"2023-10-27"},{"lineNumber":298,"author":{"gitId":"josepholim"},"content":"    public void parseNoteTitle_invalidValueWhitespace_throwsParseException() throws Exception {","lastModifiedDate":"2023-10-27"},{"lineNumber":299,"author":{"gitId":"josepholim"},"content":"        assertThrows(ParseException.class, NoteTitle.MESSAGE_CONSTRAINTS, () -\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":300,"author":{"gitId":"josepholim"},"content":"                ParserUtil.parseNoteTitle(WHITESPACE).toString());","lastModifiedDate":"2023-10-27"},{"lineNumber":301,"author":{"gitId":"larrywang0701"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":302,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":303,"author":{"gitId":"larrywang0701"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":304,"author":{"gitId":"larrywang0701"},"content":"    public void parseEventID_success() throws Exception {","lastModifiedDate":"2023-10-25"},{"lineNumber":305,"author":{"gitId":"larrywang0701"},"content":"        assertEquals(\"1\", ParserUtil.parseEventID(\"1\").toString());","lastModifiedDate":"2023-10-25"},{"lineNumber":306,"author":{"gitId":"larrywang0701"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":307,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":308,"author":{"gitId":"larrywang0701"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":309,"author":{"gitId":"larrywang0701"},"content":"    public void parseEventID_fail_emptyString() {","lastModifiedDate":"2023-10-25"},{"lineNumber":310,"author":{"gitId":"larrywang0701"},"content":"        assertThrows(ParseException.class, EventID.MESSAGE_NON_EMPTY, () -\u003e ParserUtil.parseEventID(\"\").toString());","lastModifiedDate":"2023-10-25"},{"lineNumber":311,"author":{"gitId":"larrywang0701"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":312,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":313,"author":{"gitId":"larrywang0701"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":314,"author":{"gitId":"larrywang0701"},"content":"    public void parseEventID_fail_invalidInteger() {","lastModifiedDate":"2023-10-25"},{"lineNumber":315,"author":{"gitId":"larrywang0701"},"content":"        assertThrows(ParseException.class, String.format(Messages.MESSAGE_INVALID_INTEGER_ARGUMENT,","lastModifiedDate":"2023-10-25"},{"lineNumber":316,"author":{"gitId":"larrywang0701"},"content":"                \"For input string: \\\"abc\\\"\"), () -\u003e ParserUtil.parseEventID(\"abc\").toString());","lastModifiedDate":"2023-10-25"},{"lineNumber":317,"author":{"gitId":"larrywang0701"},"content":"        assertThrows(ParseException.class, String.format(Messages.MESSAGE_INVALID_INTEGER_ARGUMENT,","lastModifiedDate":"2023-10-25"},{"lineNumber":318,"author":{"gitId":"larrywang0701"},"content":"                \"For input string: \\\"1.23\\\"\"), () -\u003e ParserUtil.parseEventID(\"1.23\").toString());","lastModifiedDate":"2023-10-25"},{"lineNumber":319,"author":{"gitId":"larrywang0701"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":320,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":321,"author":{"gitId":"larrywang0701"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":322,"author":{"gitId":"larrywang0701"},"content":"    public void parseEventName_success() throws Exception {","lastModifiedDate":"2023-10-25"},{"lineNumber":323,"author":{"gitId":"larrywang0701"},"content":"        assertEquals(\"SomeName\", ParserUtil.parseEventName(\"SomeName\").toString());","lastModifiedDate":"2023-10-25"},{"lineNumber":324,"author":{"gitId":"larrywang0701"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":325,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":326,"author":{"gitId":"larrywang0701"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":327,"author":{"gitId":"larrywang0701"},"content":"    public void parseEventName_fail_emptyString() throws Exception {","lastModifiedDate":"2023-10-25"},{"lineNumber":328,"author":{"gitId":"larrywang0701"},"content":"        assertThrows(ParseException.class, EventName.MESSAGE_CONSTRAINTS, () -\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":329,"author":{"gitId":"larrywang0701"},"content":"                ParserUtil.parseEventName(\"\").toString());","lastModifiedDate":"2023-10-25"},{"lineNumber":330,"author":{"gitId":"larrywang0701"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":331,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":332,"author":{"gitId":"larrywang0701"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":333,"author":{"gitId":"larrywang0701"},"content":"    public void parseEventTime_success() throws Exception {","lastModifiedDate":"2023-10-25"},{"lineNumber":334,"author":{"gitId":"larrywang0701"},"content":"        assertEquals(LocalDateTime.now().format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd\")) + \" 12:00:00\",","lastModifiedDate":"2023-10-25"},{"lineNumber":335,"author":{"gitId":"larrywang0701"},"content":"                ParserUtil.parseEventTime(\"12:00\").toString());","lastModifiedDate":"2023-10-25"},{"lineNumber":336,"author":{"gitId":"larrywang0701"},"content":"        assertEquals(\"2023-12-01 00:00:00\",","lastModifiedDate":"2023-10-25"},{"lineNumber":337,"author":{"gitId":"larrywang0701"},"content":"                ParserUtil.parseEventTime(\"2023-12-01\").toString());","lastModifiedDate":"2023-10-25"},{"lineNumber":338,"author":{"gitId":"larrywang0701"},"content":"        assertEquals(\"2023-12-01 10:02:03\",","lastModifiedDate":"2023-10-25"},{"lineNumber":339,"author":{"gitId":"larrywang0701"},"content":"                ParserUtil.parseEventTime(\"2023-12-01 10:02:03\").toString());","lastModifiedDate":"2023-10-25"},{"lineNumber":340,"author":{"gitId":"larrywang0701"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":341,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":342,"author":{"gitId":"larrywang0701"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":343,"author":{"gitId":"larrywang0701"},"content":"    public void parseEventTime_fail_emptyString() {","lastModifiedDate":"2023-10-25"},{"lineNumber":344,"author":{"gitId":"larrywang0701"},"content":"        assertThrows(ParseException.class, EventTime.MESSAGE_NON_EMPTY, () -\u003e ParserUtil.parseEventTime(\"\"));","lastModifiedDate":"2023-10-25"},{"lineNumber":345,"author":{"gitId":"larrywang0701"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":346,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":347,"author":{"gitId":"larrywang0701"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":348,"author":{"gitId":"larrywang0701"},"content":"    public void parseEventTime_fail_wrongFormat() {","lastModifiedDate":"2023-10-25"},{"lineNumber":349,"author":{"gitId":"larrywang0701"},"content":"        assertThrows(ParseException.class, EventTime.MESSAGE_NON_EMPTY, () -\u003e ParserUtil.parseEventTime(\"\"));","lastModifiedDate":"2023-10-25"},{"lineNumber":350,"author":{"gitId":"larrywang0701"},"content":"        String dateNow \u003d LocalDateTime.now().format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"));","lastModifiedDate":"2023-10-25"},{"lineNumber":351,"author":{"gitId":"larrywang0701"},"content":"        assertThrows(ParseException.class,","lastModifiedDate":"2023-10-25"},{"lineNumber":352,"author":{"gitId":"AndrewJanong"},"content":"                EventTime.MESSAGE_INVALID_DATETIME_FORMAT","lastModifiedDate":"2023-11-09"},{"lineNumber":353,"author":{"gitId":"AndrewJanong"},"content":"                        + \"Text \u00271\u0027 could not be parsed at index 0\", () -\u003e","lastModifiedDate":"2023-11-09"},{"lineNumber":354,"author":{"gitId":"larrywang0701"},"content":"                        ParserUtil.parseEventTime(\"1\"));","lastModifiedDate":"2023-10-25"},{"lineNumber":355,"author":{"gitId":"larrywang0701"},"content":"        assertThrows(ParseException.class,","lastModifiedDate":"2023-10-25"},{"lineNumber":356,"author":{"gitId":"AndrewJanong"},"content":"                EventTime.MESSAGE_INVALID_DATETIME_FORMAT","lastModifiedDate":"2023-11-09"},{"lineNumber":357,"author":{"gitId":"AndrewJanong"},"content":"                        + \"Text \u00271,2,3,4\u0027 could not be parsed at index 0\", () -\u003e","lastModifiedDate":"2023-11-09"},{"lineNumber":358,"author":{"gitId":"larrywang0701"},"content":"                        ParserUtil.parseEventTime(\"1,2,3,4\"));","lastModifiedDate":"2023-10-25"},{"lineNumber":359,"author":{"gitId":"larrywang0701"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":360,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":361,"author":{"gitId":"larrywang0701"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":362,"author":{"gitId":"larrywang0701"},"content":"    public void parseEventLocation_success() throws Exception {","lastModifiedDate":"2023-10-25"},{"lineNumber":363,"author":{"gitId":"larrywang0701"},"content":"        assertEquals(\"SomeLocation\", ParserUtil.parseEventLocation(\"SomeLocation\").toString());","lastModifiedDate":"2023-10-25"},{"lineNumber":364,"author":{"gitId":"larrywang0701"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":365,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":366,"author":{"gitId":"larrywang0701"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":367,"author":{"gitId":"larrywang0701"},"content":"    public void parseEventLocation_fail_emptyString() throws Exception {","lastModifiedDate":"2023-10-25"},{"lineNumber":368,"author":{"gitId":"larrywang0701"},"content":"        assertThrows(ParseException.class, EventLocation.MESSAGE_CONSTRAINTS, () -\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":369,"author":{"gitId":"larrywang0701"},"content":"                ParserUtil.parseEventLocation(\"\").toString());","lastModifiedDate":"2023-10-25"},{"lineNumber":370,"author":{"gitId":"larrywang0701"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":371,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":372,"author":{"gitId":"larrywang0701"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":373,"author":{"gitId":"larrywang0701"},"content":"    public void parseEventInformation_success() throws Exception {","lastModifiedDate":"2023-10-25"},{"lineNumber":374,"author":{"gitId":"larrywang0701"},"content":"        assertEquals(\"SomeInformation\", ParserUtil.parseEventInformation(\"SomeInformation\").toString());","lastModifiedDate":"2023-10-25"},{"lineNumber":375,"author":{"gitId":"larrywang0701"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":376,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":377,"author":{"gitId":"larrywang0701"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":378,"author":{"gitId":"larrywang0701"},"content":"    public void parseEventInformation_fail_emptyString() throws Exception {","lastModifiedDate":"2023-10-25"},{"lineNumber":379,"author":{"gitId":"larrywang0701"},"content":"        assertThrows(ParseException.class, EventInformation.MESSAGE_CONSTRAINTS, () -\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":380,"author":{"gitId":"larrywang0701"},"content":"                ParserUtil.parseEventInformation(\"\").toString());","lastModifiedDate":"2023-10-25"},{"lineNumber":381,"author":{"gitId":"larrywang0701"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":382,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-22"}],"authorContributionMap":{"larrywang0701":95,"AndrewJanong":4,"-":196,"josepholim":87}},{"path":"src/test/java/seedu/address/model/AddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-12-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2018-04-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-12-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"larrywang0701"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2023-11-01"},{"lineNumber":22,"author":{"gitId":"larrywang0701"},"content":"import seedu.address.model.note.Note;","lastModifiedDate":"2023-11-10"},{"lineNumber":23,"author":{"gitId":"larrywang0701"},"content":"import seedu.address.model.note.NoteContent;","lastModifiedDate":"2023-11-10"},{"lineNumber":24,"author":{"gitId":"larrywang0701"},"content":"import seedu.address.model.note.NoteTitle;","lastModifiedDate":"2023-11-10"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2018-08-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-04-19"},{"lineNumber":28,"author":{"gitId":"larrywang0701"},"content":"import seedu.address.testutil.TypicalPersons;","lastModifiedDate":"2023-11-10"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"public class AddressBookTest {","lastModifiedDate":"2016-12-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2016-12-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2016-12-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), addressBook.getPersonList());","lastModifiedDate":"2016-12-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.resetData(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void resetData_withValidReadOnlyAddressBook_replacesData() {","lastModifiedDate":"2016-12-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        AddressBook newData \u003d getTypicalAddressBook();","lastModifiedDate":"2017-07-19"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        addressBook.resetData(newData);","lastModifiedDate":"2016-12-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertEquals(newData, addressBook);","lastModifiedDate":"2016-12-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void resetData_withDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // Two persons with the same identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":54,"author":{"gitId":"josepholim"},"content":"        List\u003cPerson\u003e newPersons \u003d Arrays.asList(ALICE, ALICE);","lastModifiedDate":"2023-11-02"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        AddressBookStub newData \u003d new AddressBookStub(newPersons);","lastModifiedDate":"2018-03-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e addressBook.resetData(newData));","lastModifiedDate":"2019-03-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.hasPerson(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertFalse(addressBook.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":77,"author":{"gitId":"josepholim"},"content":"    public void hasPerson_personWithDifferentIdentityFieldsInAddressBook_returnsFalse() {","lastModifiedDate":"2023-11-02"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"josepholim"},"content":"        assertFalse(addressBook.hasPerson(editedAlice));","lastModifiedDate":"2023-11-02"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void getPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e addressBook.getPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        String expected \u003d AddressBook.class.getCanonicalName() + \"{persons\u003d\" + addressBook.getPersonList() + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertEquals(expected, addressBook.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":95,"author":{"gitId":"larrywang0701"},"content":"    @Test","lastModifiedDate":"2023-11-10"},{"lineNumber":96,"author":{"gitId":"larrywang0701"},"content":"    public void eventListToStringTest() {","lastModifiedDate":"2023-11-10"},{"lineNumber":97,"author":{"gitId":"larrywang0701"},"content":"        Event event1 \u003d new Event(\"n\", \"2023-11-10 00:00\", \"2023-11-10 00:00\", \"loc1\",","lastModifiedDate":"2023-11-10"},{"lineNumber":98,"author":{"gitId":"larrywang0701"},"content":"                \"info1\");","lastModifiedDate":"2023-11-10"},{"lineNumber":99,"author":{"gitId":"larrywang0701"},"content":"        Event event2 \u003d new Event(\"n2\", \"2023-11-10 00:10\", \"2023-11-10 00:20\", \"loc2\",","lastModifiedDate":"2023-11-10"},{"lineNumber":100,"author":{"gitId":"larrywang0701"},"content":"                \"info2\");","lastModifiedDate":"2023-11-10"},{"lineNumber":101,"author":{"gitId":"larrywang0701"},"content":"        Event event3 \u003d new Event(\"n3\", \"2023-11-10 00:25\", \"2023-11-10 00:45\", \"loc3\",","lastModifiedDate":"2023-11-10"},{"lineNumber":102,"author":{"gitId":"larrywang0701"},"content":"                \"info3\");","lastModifiedDate":"2023-11-10"},{"lineNumber":103,"author":{"gitId":"larrywang0701"},"content":"        Event event4 \u003d new Event(\"n4\", \"2023-11-10 00:50\", \"2023-11-10 00:55\", \"loc4\",","lastModifiedDate":"2023-11-10"},{"lineNumber":104,"author":{"gitId":"larrywang0701"},"content":"                \"info4\");","lastModifiedDate":"2023-11-10"},{"lineNumber":105,"author":{"gitId":"larrywang0701"},"content":"        Event event5 \u003d new Event(\"n5\", \"2023-11-10 01:00\", \"2023-11-10 01:05\", \"loc5\",","lastModifiedDate":"2023-11-10"},{"lineNumber":106,"author":{"gitId":"larrywang0701"},"content":"                \"info5\");","lastModifiedDate":"2023-11-10"},{"lineNumber":107,"author":{"gitId":"larrywang0701"},"content":"        Person owner \u003d TypicalPersons.copyTypicalPerson(ALICE);","lastModifiedDate":"2023-11-10"},{"lineNumber":108,"author":{"gitId":"larrywang0701"},"content":"        addressBook.addPerson(owner);","lastModifiedDate":"2023-11-10"},{"lineNumber":109,"author":{"gitId":"larrywang0701"},"content":"        addressBook.addEvent(event1, owner);","lastModifiedDate":"2023-11-10"},{"lineNumber":110,"author":{"gitId":"larrywang0701"},"content":"        addressBook.addEvent(event2, owner);","lastModifiedDate":"2023-11-10"},{"lineNumber":111,"author":{"gitId":"larrywang0701"},"content":"        addressBook.addEvent(event3, owner);","lastModifiedDate":"2023-11-10"},{"lineNumber":112,"author":{"gitId":"larrywang0701"},"content":"        addressBook.addEvent(event4, owner);","lastModifiedDate":"2023-11-10"},{"lineNumber":113,"author":{"gitId":"larrywang0701"},"content":"        addressBook.addEvent(event5, owner);","lastModifiedDate":"2023-11-10"},{"lineNumber":114,"author":{"gitId":"larrywang0701"},"content":"        assertEquals(addressBook.eventListToString(),","lastModifiedDate":"2023-11-10"},{"lineNumber":115,"author":{"gitId":"larrywang0701"},"content":"                \"[Alice Pauline] n\\nStarts at: 2023-11-10 00:00:00\\nLocation: loc1\\nInformation: info1\\n\"","lastModifiedDate":"2023-11-10"},{"lineNumber":116,"author":{"gitId":"larrywang0701"},"content":"                        + \"[Alice Pauline] n2\\nStarts at: 2023-11-10 00:10:00\\nEnds at: 2023-11-10 00:20:00\\n\"","lastModifiedDate":"2023-11-10"},{"lineNumber":117,"author":{"gitId":"larrywang0701"},"content":"                        + \"Location: loc2\\nInformation: info2\\n[Alice Pauline] n3\\nStarts at: 2023-11-10 00:25:00\\n\"","lastModifiedDate":"2023-11-10"},{"lineNumber":118,"author":{"gitId":"larrywang0701"},"content":"                        + \"Ends at: 2023-11-10 00:45:00\\nLocation: loc3\\nInformation: info3\\n[Alice Pauline] n4\\n\"","lastModifiedDate":"2023-11-10"},{"lineNumber":119,"author":{"gitId":"larrywang0701"},"content":"                        + \"Starts at: 2023-11-10 00:50:00\\nEnds at: 2023-11-10 00:55:00\\nLocation: loc4\\n\"","lastModifiedDate":"2023-11-10"},{"lineNumber":120,"author":{"gitId":"larrywang0701"},"content":"                        + \"Information: info4\\n[Alice Pauline] n5\\n\"","lastModifiedDate":"2023-11-10"},{"lineNumber":121,"author":{"gitId":"larrywang0701"},"content":"                        + \"Starts at: 2023-11-10 01:00:00\\nEnds at: 2023-11-10 01:05:00\\nLocation: loc5\\n\"","lastModifiedDate":"2023-11-10"},{"lineNumber":122,"author":{"gitId":"larrywang0701"},"content":"                        + \"Information: info5\\n\");","lastModifiedDate":"2023-11-10"},{"lineNumber":123,"author":{"gitId":"larrywang0701"},"content":"    }","lastModifiedDate":"2023-11-10"},{"lineNumber":124,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":125,"author":{"gitId":"larrywang0701"},"content":"    @Test","lastModifiedDate":"2023-11-10"},{"lineNumber":126,"author":{"gitId":"larrywang0701"},"content":"    public void noteListToStringTest() {","lastModifiedDate":"2023-11-10"},{"lineNumber":127,"author":{"gitId":"larrywang0701"},"content":"        Note note1 \u003d new Note(NoteTitle.fromString(\"title1\"), NoteContent.fromString(\"content1\"));","lastModifiedDate":"2023-11-10"},{"lineNumber":128,"author":{"gitId":"larrywang0701"},"content":"        Note note2 \u003d new Note(NoteTitle.fromString(\"title2\"), NoteContent.fromString(\"content2\"));","lastModifiedDate":"2023-11-10"},{"lineNumber":129,"author":{"gitId":"larrywang0701"},"content":"        Note note3 \u003d new Note(NoteTitle.fromString(\"title3\"), NoteContent.fromString(\"content3\"));","lastModifiedDate":"2023-11-10"},{"lineNumber":130,"author":{"gitId":"larrywang0701"},"content":"        Note note4 \u003d new Note(NoteTitle.fromString(\"title4\"), NoteContent.fromString(\"content4\"));","lastModifiedDate":"2023-11-10"},{"lineNumber":131,"author":{"gitId":"larrywang0701"},"content":"        Note note5 \u003d new Note(NoteTitle.fromString(\"title5\"), NoteContent.fromString(\"content5\"));","lastModifiedDate":"2023-11-10"},{"lineNumber":132,"author":{"gitId":"larrywang0701"},"content":"        Person owner \u003d TypicalPersons.copyTypicalPerson(ALICE);","lastModifiedDate":"2023-11-10"},{"lineNumber":133,"author":{"gitId":"larrywang0701"},"content":"        addressBook.addPerson(owner);","lastModifiedDate":"2023-11-10"},{"lineNumber":134,"author":{"gitId":"larrywang0701"},"content":"        owner.addNote(note1);","lastModifiedDate":"2023-11-10"},{"lineNumber":135,"author":{"gitId":"larrywang0701"},"content":"        owner.addNote(note2);","lastModifiedDate":"2023-11-10"},{"lineNumber":136,"author":{"gitId":"larrywang0701"},"content":"        owner.addNote(note3);","lastModifiedDate":"2023-11-10"},{"lineNumber":137,"author":{"gitId":"larrywang0701"},"content":"        owner.addNote(note4);","lastModifiedDate":"2023-11-10"},{"lineNumber":138,"author":{"gitId":"larrywang0701"},"content":"        owner.addNote(note5);","lastModifiedDate":"2023-11-10"},{"lineNumber":139,"author":{"gitId":"larrywang0701"},"content":"        assertEquals(addressBook.noteListToString(),","lastModifiedDate":"2023-11-10"},{"lineNumber":140,"author":{"gitId":"larrywang0701"},"content":"                \"[Alice Pauline]\\n1. title1\\ncontent1\\n2. title2\\ncontent2\\n3. title3\\ncontent3\\n4. title4\\n\"","lastModifiedDate":"2023-11-10"},{"lineNumber":141,"author":{"gitId":"larrywang0701"},"content":"                        + \"content4\\n5. title5\\ncontent5\\n\");","lastModifiedDate":"2023-11-10"},{"lineNumber":142,"author":{"gitId":"larrywang0701"},"content":"    }","lastModifiedDate":"2023-11-10"},{"lineNumber":143,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-24"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     * A stub ReadOnlyAddressBook whose persons list can violate interface constraints.","lastModifiedDate":"2018-03-29"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-24"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    private static class AddressBookStub implements ReadOnlyAddressBook {","lastModifiedDate":"2016-12-24"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        private final ObservableList\u003cPerson\u003e persons \u003d FXCollections.observableArrayList();","lastModifiedDate":"2018-01-10"},{"lineNumber":149,"author":{"gitId":"larrywang0701"},"content":"        private final ObservableList\u003cEvent\u003e events \u003d FXCollections.observableArrayList();","lastModifiedDate":"2023-11-01"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        AddressBookStub(Collection\u003cPerson\u003e persons) {","lastModifiedDate":"2018-03-29"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            this.persons.setAll(persons);","lastModifiedDate":"2016-12-24"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-12-24"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":157,"author":{"gitId":"-"},"content":"            return persons;","lastModifiedDate":"2016-12-24"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":159,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":160,"author":{"gitId":"larrywang0701"},"content":"        @Override","lastModifiedDate":"2023-11-01"},{"lineNumber":161,"author":{"gitId":"larrywang0701"},"content":"        public ObservableList\u003cEvent\u003e getEventList() {","lastModifiedDate":"2023-11-01"},{"lineNumber":162,"author":{"gitId":"larrywang0701"},"content":"            return events;","lastModifiedDate":"2023-11-01"},{"lineNumber":163,"author":{"gitId":"larrywang0701"},"content":"        }","lastModifiedDate":"2023-11-01"},{"lineNumber":164,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":165,"author":{"gitId":"larrywang0701"},"content":"        @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":166,"author":{"gitId":"larrywang0701"},"content":"        public String eventListToString() {","lastModifiedDate":"2023-10-13"},{"lineNumber":167,"author":{"gitId":"larrywang0701"},"content":"            return \"\";","lastModifiedDate":"2023-10-13"},{"lineNumber":168,"author":{"gitId":"larrywang0701"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":169,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":170,"author":{"gitId":"AndrewJanong"},"content":"        @Override","lastModifiedDate":"2023-10-16"},{"lineNumber":171,"author":{"gitId":"AndrewJanong"},"content":"        public String noteListToString() {","lastModifiedDate":"2023-10-16"},{"lineNumber":172,"author":{"gitId":"AndrewJanong"},"content":"            return \"\";","lastModifiedDate":"2023-10-16"},{"lineNumber":173,"author":{"gitId":"AndrewJanong"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":176,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-24"}],"authorContributionMap":{"larrywang0701":65,"AndrewJanong":5,"-":103,"josepholim":3}},{"path":"src/test/java/seedu/address/model/ModelManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2017-05-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":3,"author":{"gitId":"larrywang0701"},"content":"import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;","lastModifiedDate":"2023-11-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2017-07-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-31"},{"lineNumber":15,"author":{"gitId":"larrywang0701"},"content":"import java.util.Comparator;","lastModifiedDate":"2023-11-14"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":20,"author":{"gitId":"larrywang0701"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2023-11-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.testutil.AddressBookBuilder;","lastModifiedDate":"2017-05-31"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class ModelManagerTest {","lastModifiedDate":"2017-05-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2018-08-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertEquals(new GuiSettings(), modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertEquals(new AddressBook(), new AddressBook(modelManager.getAddressBook()));","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void setUserPrefs_nullUserPrefs_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void setUserPrefs_validUserPrefs_copiesUserPrefs() {","lastModifiedDate":"2018-12-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"address/book/file/path\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1, 2, 3, 4));","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        modelManager.setUserPrefs(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertEquals(userPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // Modifying userPrefs should not modify modelManager\u0027s userPrefs","lastModifiedDate":"2018-12-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        UserPrefs oldUserPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"new/address/book/file/path\"));","lastModifiedDate":"2018-12-06"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertEquals(oldUserPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setGuiSettings(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void setGuiSettings_validGuiSettings_setsGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(1, 2, 3, 4);","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        modelManager.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertEquals(guiSettings, modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setAddressBookFilePath(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_validPath_setsAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        Path path \u003d Paths.get(\"address/book/file/path\");","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        modelManager.setAddressBookFilePath(path);","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertEquals(path, modelManager.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasPerson(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        modelManager.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":99,"author":{"gitId":"larrywang0701"},"content":"    @Test","lastModifiedDate":"2023-11-14"},{"lineNumber":100,"author":{"gitId":"larrywang0701"},"content":"    public void getFilteredEventList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2023-11-14"},{"lineNumber":101,"author":{"gitId":"larrywang0701"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredEventList().remove(0));","lastModifiedDate":"2023-11-14"},{"lineNumber":102,"author":{"gitId":"larrywang0701"},"content":"    }","lastModifiedDate":"2023-11-14"},{"lineNumber":103,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":104,"author":{"gitId":"larrywang0701"},"content":"    @Test","lastModifiedDate":"2023-11-14"},{"lineNumber":105,"author":{"gitId":"larrywang0701"},"content":"    public void getSortedFilteredEventList_throwsNullPointerExceptionWhenListNotGenerated() {","lastModifiedDate":"2023-11-14"},{"lineNumber":106,"author":{"gitId":"larrywang0701"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.getSortedFilteredEventList());","lastModifiedDate":"2023-11-14"},{"lineNumber":107,"author":{"gitId":"larrywang0701"},"content":"    }","lastModifiedDate":"2023-11-14"},{"lineNumber":108,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":109,"author":{"gitId":"larrywang0701"},"content":"    @Test","lastModifiedDate":"2023-11-14"},{"lineNumber":110,"author":{"gitId":"larrywang0701"},"content":"    public void getSortedFilteredEventList_generateList_success() {","lastModifiedDate":"2023-11-14"},{"lineNumber":111,"author":{"gitId":"larrywang0701"},"content":"        Comparator\u003cEvent\u003e comparatorStub \u003d (e1, e2) -\u003e e1.hashCode() - e2.hashCode();","lastModifiedDate":"2023-11-14"},{"lineNumber":112,"author":{"gitId":"larrywang0701"},"content":"        assertDoesNotThrow(() -\u003e modelManager","lastModifiedDate":"2023-11-14"},{"lineNumber":113,"author":{"gitId":"larrywang0701"},"content":"                .generateSortedFilteredEventList(comparatorStub));","lastModifiedDate":"2023-11-14"},{"lineNumber":114,"author":{"gitId":"larrywang0701"},"content":"        assertTrue(modelManager.getSortedFilteredEventList().isEmpty());","lastModifiedDate":"2023-11-14"},{"lineNumber":115,"author":{"gitId":"larrywang0701"},"content":"    }","lastModifiedDate":"2023-11-14"},{"lineNumber":116,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-31"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        AddressBook addressBook \u003d new AddressBookBuilder().withPerson(ALICE).withPerson(BENSON).build();","lastModifiedDate":"2017-07-19"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        AddressBook differentAddressBook \u003d new AddressBook();","lastModifiedDate":"2017-05-31"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        modelManager \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2018-08-06"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        ModelManager modelManagerCopy \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2017-05-31"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManagerCopy));","lastModifiedDate":"2017-05-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManager));","lastModifiedDate":"2017-05-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(null));","lastModifiedDate":"2017-05-31"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(5));","lastModifiedDate":"2017-05-31"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        // different addressBook -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(differentAddressBook, userPrefs)));","lastModifiedDate":"2017-05-31"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        // different filteredList -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        String[] keywords \u003d ALICE.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-19"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        modelManager.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(keywords)));","lastModifiedDate":"2017-06-12"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, userPrefs)));","lastModifiedDate":"2017-05-31"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        // resets modelManager to initial state for upcoming tests","lastModifiedDate":"2017-08-05"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        modelManager.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        // different userPrefs -\u003e returns false","lastModifiedDate":"2018-11-27"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        UserPrefs differentUserPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        differentUserPrefs.setAddressBookFilePath(Paths.get(\"differentFilePath\"));","lastModifiedDate":"2018-08-09"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, differentUserPrefs)));","lastModifiedDate":"2018-11-27"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":153,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-31"}],"authorContributionMap":{"larrywang0701":21,"-":132}},{"path":"src/test/java/seedu/address/model/event/EventInformationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"larrywang0701"},"content":"package seedu.address.model.event;","lastModifiedDate":"2023-11-10"},{"lineNumber":2,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":3,"author":{"gitId":"larrywang0701"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-11-10"},{"lineNumber":4,"author":{"gitId":"larrywang0701"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-11-10"},{"lineNumber":5,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":6,"author":{"gitId":"larrywang0701"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-11-10"},{"lineNumber":7,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":8,"author":{"gitId":"larrywang0701"},"content":"public class EventInformationTest {","lastModifiedDate":"2023-11-10"},{"lineNumber":9,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":10,"author":{"gitId":"AndrewJanong"},"content":"    @Test","lastModifiedDate":"2023-11-13"},{"lineNumber":11,"author":{"gitId":"AndrewJanong"},"content":"    public void isValidEventInformation() {","lastModifiedDate":"2023-11-13"},{"lineNumber":12,"author":{"gitId":"AndrewJanong"},"content":"        // blank event information","lastModifiedDate":"2023-11-13"},{"lineNumber":13,"author":{"gitId":"AndrewJanong"},"content":"        assertFalse(EventInformation.isValidEventInformation(\"\"));","lastModifiedDate":"2023-11-13"},{"lineNumber":14,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":15,"author":{"gitId":"AndrewJanong"},"content":"        // valid event information","lastModifiedDate":"2023-11-13"},{"lineNumber":16,"author":{"gitId":"AndrewJanong"},"content":"        assertTrue(EventInformation.isValidEventInformation(\"Google Developer Intern interview\"));","lastModifiedDate":"2023-11-13"},{"lineNumber":17,"author":{"gitId":"AndrewJanong"},"content":"        assertTrue(EventInformation.isValidEventInformation(\"Catching up session\"));","lastModifiedDate":"2023-11-13"},{"lineNumber":18,"author":{"gitId":"AndrewJanong"},"content":"        assertTrue(EventInformation.isValidEventInformation(\"TikTok office visit\"));","lastModifiedDate":"2023-11-13"},{"lineNumber":19,"author":{"gitId":"AndrewJanong"},"content":"    }","lastModifiedDate":"2023-11-13"},{"lineNumber":20,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":21,"author":{"gitId":"larrywang0701"},"content":"    @Test","lastModifiedDate":"2023-11-10"},{"lineNumber":22,"author":{"gitId":"larrywang0701"},"content":"    public void test_eventInformationEquals_pass() {","lastModifiedDate":"2023-11-10"},{"lineNumber":23,"author":{"gitId":"larrywang0701"},"content":"        EventInformation info \u003d EventInformation.fromString(\"SampleInformation0\");","lastModifiedDate":"2023-11-10"},{"lineNumber":24,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":25,"author":{"gitId":"AndrewJanong"},"content":"        // same object --\u003e returns true","lastModifiedDate":"2023-11-13"},{"lineNumber":26,"author":{"gitId":"larrywang0701"},"content":"        assertTrue(info.equals(info));","lastModifiedDate":"2023-11-10"},{"lineNumber":27,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":28,"author":{"gitId":"AndrewJanong"},"content":"        // same values --\u003e returns true","lastModifiedDate":"2023-11-13"},{"lineNumber":29,"author":{"gitId":"larrywang0701"},"content":"        assertTrue(EventInformation.fromString(\"SampleInformation\")","lastModifiedDate":"2023-11-10"},{"lineNumber":30,"author":{"gitId":"larrywang0701"},"content":"                .equals(EventInformation.fromString(\"SampleInformation\")));","lastModifiedDate":"2023-11-10"},{"lineNumber":31,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":32,"author":{"gitId":"AndrewJanong"},"content":"        // different types --\u003e returns false","lastModifiedDate":"2023-11-13"},{"lineNumber":33,"author":{"gitId":"AndrewJanong"},"content":"        assertFalse(","lastModifiedDate":"2023-11-13"},{"lineNumber":34,"author":{"gitId":"AndrewJanong"},"content":"                EventInformation.fromString(\"SampleInformation1\").equals(50));","lastModifiedDate":"2023-11-13"},{"lineNumber":35,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":36,"author":{"gitId":"AndrewJanong"},"content":"        // different values --\u003e returns false","lastModifiedDate":"2023-11-13"},{"lineNumber":37,"author":{"gitId":"larrywang0701"},"content":"        assertFalse(","lastModifiedDate":"2023-11-10"},{"lineNumber":38,"author":{"gitId":"larrywang0701"},"content":"                EventInformation.fromString(\"SampleInformation1\")","lastModifiedDate":"2023-11-10"},{"lineNumber":39,"author":{"gitId":"larrywang0701"},"content":"                .equals(EventInformation.fromString(\"SampleInformation2\")));","lastModifiedDate":"2023-11-10"},{"lineNumber":40,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":41,"author":{"gitId":"AndrewJanong"},"content":"        // empty object --\u003e returns false","lastModifiedDate":"2023-11-13"},{"lineNumber":42,"author":{"gitId":"larrywang0701"},"content":"        assertFalse(","lastModifiedDate":"2023-11-10"},{"lineNumber":43,"author":{"gitId":"larrywang0701"},"content":"                EventInformation.fromString(\"SampleInformation1\").equals(new Object()));","lastModifiedDate":"2023-11-10"},{"lineNumber":44,"author":{"gitId":"larrywang0701"},"content":"    }","lastModifiedDate":"2023-11-10"},{"lineNumber":45,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":46,"author":{"gitId":"larrywang0701"},"content":"}","lastModifiedDate":"2023-11-10"}],"authorContributionMap":{"larrywang0701":22,"AndrewJanong":24}},{"path":"src/test/java/seedu/address/model/event/EventLocationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"larrywang0701"},"content":"package seedu.address.model.event;","lastModifiedDate":"2023-11-10"},{"lineNumber":2,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":3,"author":{"gitId":"larrywang0701"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-11-10"},{"lineNumber":4,"author":{"gitId":"larrywang0701"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-11-10"},{"lineNumber":5,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":6,"author":{"gitId":"larrywang0701"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-11-10"},{"lineNumber":7,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":8,"author":{"gitId":"larrywang0701"},"content":"public class EventLocationTest {","lastModifiedDate":"2023-11-10"},{"lineNumber":9,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":10,"author":{"gitId":"AndrewJanong"},"content":"    @Test","lastModifiedDate":"2023-11-13"},{"lineNumber":11,"author":{"gitId":"AndrewJanong"},"content":"    public void isValidEventLocation() {","lastModifiedDate":"2023-11-13"},{"lineNumber":12,"author":{"gitId":"AndrewJanong"},"content":"        // blank event location","lastModifiedDate":"2023-11-13"},{"lineNumber":13,"author":{"gitId":"AndrewJanong"},"content":"        assertFalse(EventLocation.isValidEventLocation(\"\"));","lastModifiedDate":"2023-11-13"},{"lineNumber":14,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":15,"author":{"gitId":"AndrewJanong"},"content":"        // valid event location","lastModifiedDate":"2023-11-13"},{"lineNumber":16,"author":{"gitId":"AndrewJanong"},"content":"        assertTrue(EventLocation.isValidEventLocation(\"Blk 456, Den Road, #01-355\"));","lastModifiedDate":"2023-11-13"},{"lineNumber":17,"author":{"gitId":"AndrewJanong"},"content":"        assertTrue(EventLocation.isValidEventLocation(\"-\"));","lastModifiedDate":"2023-11-13"},{"lineNumber":18,"author":{"gitId":"AndrewJanong"},"content":"        assertTrue(EventLocation.isValidEventLocation(\"Leng Inc; 1234 Market St; San Francisco CA 2349879; USA\"));","lastModifiedDate":"2023-11-13"},{"lineNumber":19,"author":{"gitId":"AndrewJanong"},"content":"    }","lastModifiedDate":"2023-11-13"},{"lineNumber":20,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":21,"author":{"gitId":"larrywang0701"},"content":"    @Test","lastModifiedDate":"2023-11-10"},{"lineNumber":22,"author":{"gitId":"larrywang0701"},"content":"    public void test_eventLocationEquals_pass() {","lastModifiedDate":"2023-11-10"},{"lineNumber":23,"author":{"gitId":"larrywang0701"},"content":"        EventLocation location \u003d EventLocation.fromString(\"SampleLocation0\");","lastModifiedDate":"2023-11-10"},{"lineNumber":24,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":25,"author":{"gitId":"AndrewJanong"},"content":"        // same object --\u003e returns true","lastModifiedDate":"2023-11-13"},{"lineNumber":26,"author":{"gitId":"larrywang0701"},"content":"        assertTrue(location.equals(location));","lastModifiedDate":"2023-11-10"},{"lineNumber":27,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":28,"author":{"gitId":"AndrewJanong"},"content":"        // same values --\u003e returns true","lastModifiedDate":"2023-11-13"},{"lineNumber":29,"author":{"gitId":"larrywang0701"},"content":"        assertTrue(EventLocation.fromString(\"SampleLocation\")","lastModifiedDate":"2023-11-10"},{"lineNumber":30,"author":{"gitId":"larrywang0701"},"content":"                .equals(EventLocation.fromString(\"SampleLocation\")));","lastModifiedDate":"2023-11-10"},{"lineNumber":31,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":32,"author":{"gitId":"AndrewJanong"},"content":"        // different types --\u003e returns false","lastModifiedDate":"2023-11-13"},{"lineNumber":33,"author":{"gitId":"AndrewJanong"},"content":"        assertFalse(EventLocation.fromString(\"SampleLocation\").equals(10));","lastModifiedDate":"2023-11-13"},{"lineNumber":34,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":35,"author":{"gitId":"AndrewJanong"},"content":"        // different values --\u003e returns false","lastModifiedDate":"2023-11-13"},{"lineNumber":36,"author":{"gitId":"larrywang0701"},"content":"        assertFalse(","lastModifiedDate":"2023-11-10"},{"lineNumber":37,"author":{"gitId":"larrywang0701"},"content":"                EventLocation.fromString(\"SampleLocation1\")","lastModifiedDate":"2023-11-10"},{"lineNumber":38,"author":{"gitId":"larrywang0701"},"content":"                        .equals(EventLocation.fromString(\"SampleLocation2\")));","lastModifiedDate":"2023-11-10"},{"lineNumber":39,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":40,"author":{"gitId":"AndrewJanong"},"content":"        // empty object -\u003e returns false","lastModifiedDate":"2023-11-13"},{"lineNumber":41,"author":{"gitId":"larrywang0701"},"content":"        assertFalse(","lastModifiedDate":"2023-11-10"},{"lineNumber":42,"author":{"gitId":"larrywang0701"},"content":"                EventLocation.fromString(\"SampleLocation1\").equals(new Object()));","lastModifiedDate":"2023-11-10"},{"lineNumber":43,"author":{"gitId":"larrywang0701"},"content":"    }","lastModifiedDate":"2023-11-10"},{"lineNumber":44,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":45,"author":{"gitId":"larrywang0701"},"content":"}","lastModifiedDate":"2023-11-10"}],"authorContributionMap":{"larrywang0701":22,"AndrewJanong":23}},{"path":"src/test/java/seedu/address/model/event/EventNameTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"larrywang0701"},"content":"package seedu.address.model.event;","lastModifiedDate":"2023-11-10"},{"lineNumber":2,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":3,"author":{"gitId":"larrywang0701"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-11-10"},{"lineNumber":4,"author":{"gitId":"larrywang0701"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-11-10"},{"lineNumber":5,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":6,"author":{"gitId":"larrywang0701"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-11-10"},{"lineNumber":7,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":8,"author":{"gitId":"larrywang0701"},"content":"public class EventNameTest {","lastModifiedDate":"2023-11-10"},{"lineNumber":9,"author":{"gitId":"AndrewJanong"},"content":"    @Test","lastModifiedDate":"2023-11-13"},{"lineNumber":10,"author":{"gitId":"AndrewJanong"},"content":"    public void isValidEventName() {","lastModifiedDate":"2023-11-13"},{"lineNumber":11,"author":{"gitId":"AndrewJanong"},"content":"        // blank event name","lastModifiedDate":"2023-11-13"},{"lineNumber":12,"author":{"gitId":"AndrewJanong"},"content":"        assertFalse(EventName.isValidEventName(\"\"));","lastModifiedDate":"2023-11-13"},{"lineNumber":13,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":14,"author":{"gitId":"AndrewJanong"},"content":"        // valid event name","lastModifiedDate":"2023-11-13"},{"lineNumber":15,"author":{"gitId":"AndrewJanong"},"content":"        assertTrue(EventName.isValidEventName(\"Interview\"));","lastModifiedDate":"2023-11-13"},{"lineNumber":16,"author":{"gitId":"AndrewJanong"},"content":"        assertTrue(EventInformation.isValidEventInformation(\"Chatting with Recruiter\"));","lastModifiedDate":"2023-11-13"},{"lineNumber":17,"author":{"gitId":"AndrewJanong"},"content":"        assertTrue(EventName.isValidEventName(\"Meetup with Friends\"));","lastModifiedDate":"2023-11-13"},{"lineNumber":18,"author":{"gitId":"AndrewJanong"},"content":"    }","lastModifiedDate":"2023-11-13"},{"lineNumber":19,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":20,"author":{"gitId":"larrywang0701"},"content":"    @Test","lastModifiedDate":"2023-11-10"},{"lineNumber":21,"author":{"gitId":"larrywang0701"},"content":"    public void test_eventLocationEquals_pass() {","lastModifiedDate":"2023-11-10"},{"lineNumber":22,"author":{"gitId":"larrywang0701"},"content":"        EventName name \u003d EventName.fromString(\"SampleName0\");","lastModifiedDate":"2023-11-10"},{"lineNumber":23,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":24,"author":{"gitId":"AndrewJanong"},"content":"        // same object --\u003e returns true","lastModifiedDate":"2023-11-13"},{"lineNumber":25,"author":{"gitId":"larrywang0701"},"content":"        assertTrue(name.equals(name));","lastModifiedDate":"2023-11-10"},{"lineNumber":26,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":27,"author":{"gitId":"AndrewJanong"},"content":"        // same values --\u003e returns true","lastModifiedDate":"2023-11-13"},{"lineNumber":28,"author":{"gitId":"AndrewJanong"},"content":"        assertTrue(EventName.fromString(\"SampleName\")","lastModifiedDate":"2023-11-13"},{"lineNumber":29,"author":{"gitId":"AndrewJanong"},"content":"                .equals(EventName.fromString(\"SampleName\")));","lastModifiedDate":"2023-11-13"},{"lineNumber":30,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":31,"author":{"gitId":"AndrewJanong"},"content":"        // different types --\u003e returns false","lastModifiedDate":"2023-11-13"},{"lineNumber":32,"author":{"gitId":"AndrewJanong"},"content":"        assertFalse(EventName.fromString(\"SampleName1\").equals(50));","lastModifiedDate":"2023-11-13"},{"lineNumber":33,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":34,"author":{"gitId":"AndrewJanong"},"content":"        // different values --\u003e returns false","lastModifiedDate":"2023-11-13"},{"lineNumber":35,"author":{"gitId":"larrywang0701"},"content":"        assertFalse(","lastModifiedDate":"2023-11-10"},{"lineNumber":36,"author":{"gitId":"AndrewJanong"},"content":"                EventName.fromString(\"SampleName1\")","lastModifiedDate":"2023-11-13"},{"lineNumber":37,"author":{"gitId":"AndrewJanong"},"content":"                        .equals(EventName.fromString(\"SampleName2\")));","lastModifiedDate":"2023-11-13"},{"lineNumber":38,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":39,"author":{"gitId":"AndrewJanong"},"content":"        // empty object --\u003e returns false","lastModifiedDate":"2023-11-13"},{"lineNumber":40,"author":{"gitId":"larrywang0701"},"content":"        assertFalse(","lastModifiedDate":"2023-11-10"},{"lineNumber":41,"author":{"gitId":"AndrewJanong"},"content":"                EventName.fromString(\"SampleName1\").equals(new Object()));","lastModifiedDate":"2023-11-13"},{"lineNumber":42,"author":{"gitId":"larrywang0701"},"content":"    }","lastModifiedDate":"2023-11-10"},{"lineNumber":43,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":44,"author":{"gitId":"larrywang0701"},"content":"}","lastModifiedDate":"2023-11-10"}],"authorContributionMap":{"larrywang0701":17,"AndrewJanong":27}},{"path":"src/test/java/seedu/address/model/event/EventTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"larrywang0701"},"content":"package seedu.address.model.event;","lastModifiedDate":"2023-11-02"},{"lineNumber":2,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":3,"author":{"gitId":"AndrewJanong"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-11-13"},{"lineNumber":4,"author":{"gitId":"AndrewJanong"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-11-13"},{"lineNumber":5,"author":{"gitId":"AndrewJanong"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2023-11-13"},{"lineNumber":6,"author":{"gitId":"AndrewJanong"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-11-13"},{"lineNumber":7,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":8,"author":{"gitId":"AndrewJanong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-11-13"},{"lineNumber":9,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":10,"author":{"gitId":"larrywang0701"},"content":"public class EventTest {","lastModifiedDate":"2023-11-02"},{"lineNumber":11,"author":{"gitId":"larrywang0701"},"content":"    @Test","lastModifiedDate":"2023-11-02"},{"lineNumber":12,"author":{"gitId":"larrywang0701"},"content":"    public void test_eventEquals_pass() {","lastModifiedDate":"2023-11-02"},{"lineNumber":13,"author":{"gitId":"AndrewJanong"},"content":"        // same values --\u003e returns true","lastModifiedDate":"2023-11-13"},{"lineNumber":14,"author":{"gitId":"larrywang0701"},"content":"        assertEquals(","lastModifiedDate":"2023-11-02"},{"lineNumber":15,"author":{"gitId":"larrywang0701"},"content":"                new Event(\"Sample\", \"00:01\", \"00:02\", \"Location\", \"Information\"),","lastModifiedDate":"2023-11-02"},{"lineNumber":16,"author":{"gitId":"larrywang0701"},"content":"                new Event(\"Sample\", \"00:01\", \"00:02\", \"Location\", \"Information\"));","lastModifiedDate":"2023-11-02"},{"lineNumber":17,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":18,"author":{"gitId":"AndrewJanong"},"content":"        // different name --\u003e returns false","lastModifiedDate":"2023-11-13"},{"lineNumber":19,"author":{"gitId":"larrywang0701"},"content":"        assertNotEquals(","lastModifiedDate":"2023-11-02"},{"lineNumber":20,"author":{"gitId":"larrywang0701"},"content":"                new Event(\"Sample\", \"00:01\", \"00:03\", \"Location\", \"Information\"),","lastModifiedDate":"2023-11-10"},{"lineNumber":21,"author":{"gitId":"larrywang0701"},"content":"                new Event(\"Sample1\", \"00:01\", \"00:03\", \"Location\", \"Information\"));","lastModifiedDate":"2023-11-10"},{"lineNumber":22,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":23,"author":{"gitId":"AndrewJanong"},"content":"        // different start time --\u003e returns false","lastModifiedDate":"2023-11-13"},{"lineNumber":24,"author":{"gitId":"larrywang0701"},"content":"        assertNotEquals(","lastModifiedDate":"2023-11-10"},{"lineNumber":25,"author":{"gitId":"larrywang0701"},"content":"                new Event(\"Sample\", \"00:01\", \"00:03\", \"Location\", \"Information\"),","lastModifiedDate":"2023-11-10"},{"lineNumber":26,"author":{"gitId":"larrywang0701"},"content":"                new Event(\"Sample\", \"00:02\", \"00:03\", \"Location\", \"Information\"));","lastModifiedDate":"2023-11-02"},{"lineNumber":27,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":28,"author":{"gitId":"AndrewJanong"},"content":"        // different end time --\u003e returns false","lastModifiedDate":"2023-11-13"},{"lineNumber":29,"author":{"gitId":"larrywang0701"},"content":"        assertNotEquals(","lastModifiedDate":"2023-11-10"},{"lineNumber":30,"author":{"gitId":"larrywang0701"},"content":"                new Event(\"Sample\", \"00:01\", \"00:02\", \"Location\", \"Information\"),","lastModifiedDate":"2023-11-10"},{"lineNumber":31,"author":{"gitId":"larrywang0701"},"content":"                new Event(\"Sample\", \"00:01\", \"00:03\", \"Location\", \"Information\"));","lastModifiedDate":"2023-11-10"},{"lineNumber":32,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":33,"author":{"gitId":"AndrewJanong"},"content":"        // different location --\u003e returns false","lastModifiedDate":"2023-11-13"},{"lineNumber":34,"author":{"gitId":"larrywang0701"},"content":"        assertNotEquals(","lastModifiedDate":"2023-11-10"},{"lineNumber":35,"author":{"gitId":"larrywang0701"},"content":"                new Event(\"Sample\", \"00:01\", \"00:03\", \"Location\", \"Information\"),","lastModifiedDate":"2023-11-10"},{"lineNumber":36,"author":{"gitId":"larrywang0701"},"content":"                new Event(\"Sample\", \"00:01\", \"00:03\", \"Location1\", \"Information\"));","lastModifiedDate":"2023-11-10"},{"lineNumber":37,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":38,"author":{"gitId":"AndrewJanong"},"content":"        // different information --\u003e returns false","lastModifiedDate":"2023-11-13"},{"lineNumber":39,"author":{"gitId":"larrywang0701"},"content":"        assertNotEquals(","lastModifiedDate":"2023-11-10"},{"lineNumber":40,"author":{"gitId":"larrywang0701"},"content":"                new Event(\"Sample\", \"00:01\", \"00:03\", \"Location\", \"Information\"),","lastModifiedDate":"2023-11-10"},{"lineNumber":41,"author":{"gitId":"larrywang0701"},"content":"                new Event(\"Sample\", \"00:01\", \"00:03\", \"Location\", \"Information1\"));","lastModifiedDate":"2023-11-10"},{"lineNumber":42,"author":{"gitId":"larrywang0701"},"content":"    }","lastModifiedDate":"2023-11-10"},{"lineNumber":43,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":44,"author":{"gitId":"AndrewJanong"},"content":"    @Test public void equals() {","lastModifiedDate":"2023-11-13"},{"lineNumber":45,"author":{"gitId":"AndrewJanong"},"content":"        Event sampleEvent \u003d new Event(\"Sample\", \"00:01\", \"00:02\", \"Location\", \"Information\");","lastModifiedDate":"2023-11-13"},{"lineNumber":46,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":47,"author":{"gitId":"AndrewJanong"},"content":"        // same values --\u003e returns true","lastModifiedDate":"2023-11-13"},{"lineNumber":48,"author":{"gitId":"AndrewJanong"},"content":"        assertTrue(sampleEvent.equals(","lastModifiedDate":"2023-11-13"},{"lineNumber":49,"author":{"gitId":"AndrewJanong"},"content":"                new Event(\"Sample\", \"00:01\", \"00:02\", \"Location\", \"Information\")","lastModifiedDate":"2023-11-13"},{"lineNumber":50,"author":{"gitId":"AndrewJanong"},"content":"        ));","lastModifiedDate":"2023-11-13"},{"lineNumber":51,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":52,"author":{"gitId":"AndrewJanong"},"content":"        // same object --\u003e returns true","lastModifiedDate":"2023-11-13"},{"lineNumber":53,"author":{"gitId":"AndrewJanong"},"content":"        assertTrue(sampleEvent.equals(sampleEvent));","lastModifiedDate":"2023-11-13"},{"lineNumber":54,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":55,"author":{"gitId":"AndrewJanong"},"content":"        // empty object --\u003e returns false","lastModifiedDate":"2023-11-13"},{"lineNumber":56,"author":{"gitId":"AndrewJanong"},"content":"        assertFalse(sampleEvent.equals(new Object()));","lastModifiedDate":"2023-11-13"},{"lineNumber":57,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":58,"author":{"gitId":"AndrewJanong"},"content":"        // different name --\u003e returns false","lastModifiedDate":"2023-11-13"},{"lineNumber":59,"author":{"gitId":"AndrewJanong"},"content":"        assertFalse(sampleEvent.equals(","lastModifiedDate":"2023-11-13"},{"lineNumber":60,"author":{"gitId":"AndrewJanong"},"content":"                new Event(\"Sample1\", \"00:01\", \"00:03\", \"Location\", \"Information\")","lastModifiedDate":"2023-11-13"},{"lineNumber":61,"author":{"gitId":"AndrewJanong"},"content":"        ));","lastModifiedDate":"2023-11-13"},{"lineNumber":62,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":63,"author":{"gitId":"AndrewJanong"},"content":"        // different start time --\u003e returns false","lastModifiedDate":"2023-11-13"},{"lineNumber":64,"author":{"gitId":"AndrewJanong"},"content":"        assertFalse(sampleEvent.equals(","lastModifiedDate":"2023-11-13"},{"lineNumber":65,"author":{"gitId":"AndrewJanong"},"content":"                new Event(\"Sample\", \"00:02\", \"00:03\", \"Location\", \"Information\")","lastModifiedDate":"2023-11-13"},{"lineNumber":66,"author":{"gitId":"AndrewJanong"},"content":"        ));","lastModifiedDate":"2023-11-13"},{"lineNumber":67,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":68,"author":{"gitId":"AndrewJanong"},"content":"        // different end time --\u003e returns false","lastModifiedDate":"2023-11-13"},{"lineNumber":69,"author":{"gitId":"AndrewJanong"},"content":"        assertFalse(sampleEvent.equals(","lastModifiedDate":"2023-11-13"},{"lineNumber":70,"author":{"gitId":"AndrewJanong"},"content":"                new Event(\"Sample\", \"00:01\", \"00:03\", \"Location\", \"Information\")","lastModifiedDate":"2023-11-13"},{"lineNumber":71,"author":{"gitId":"AndrewJanong"},"content":"        ));","lastModifiedDate":"2023-11-13"},{"lineNumber":72,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":73,"author":{"gitId":"AndrewJanong"},"content":"        // different location --\u003e returns false","lastModifiedDate":"2023-11-13"},{"lineNumber":74,"author":{"gitId":"AndrewJanong"},"content":"        assertFalse(sampleEvent.equals(","lastModifiedDate":"2023-11-13"},{"lineNumber":75,"author":{"gitId":"AndrewJanong"},"content":"                new Event(\"Sample\", \"00:01\", \"00:03\", \"Location1\", \"Information\")","lastModifiedDate":"2023-11-13"},{"lineNumber":76,"author":{"gitId":"AndrewJanong"},"content":"        ));","lastModifiedDate":"2023-11-13"},{"lineNumber":77,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":78,"author":{"gitId":"AndrewJanong"},"content":"        // different information --\u003e returns false","lastModifiedDate":"2023-11-13"},{"lineNumber":79,"author":{"gitId":"AndrewJanong"},"content":"        assertFalse(sampleEvent.equals(","lastModifiedDate":"2023-11-13"},{"lineNumber":80,"author":{"gitId":"AndrewJanong"},"content":"                new Event(\"Sample\", \"00:01\", \"00:03\", \"Location\", \"Information1\")","lastModifiedDate":"2023-11-13"},{"lineNumber":81,"author":{"gitId":"AndrewJanong"},"content":"        ));","lastModifiedDate":"2023-11-13"},{"lineNumber":82,"author":{"gitId":"AndrewJanong"},"content":"    }","lastModifiedDate":"2023-11-13"},{"lineNumber":83,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":84,"author":{"gitId":"larrywang0701"},"content":"    @Test","lastModifiedDate":"2023-11-10"},{"lineNumber":85,"author":{"gitId":"larrywang0701"},"content":"    public void test_getStringData_pass() {","lastModifiedDate":"2023-11-10"},{"lineNumber":86,"author":{"gitId":"larrywang0701"},"content":"        Event event \u003d new Event(\"Sample\", \"2023-11-10 00:01:00\", \"2023-11-10 00:02:00\",","lastModifiedDate":"2023-11-10"},{"lineNumber":87,"author":{"gitId":"larrywang0701"},"content":"                \"Location\", \"Information\");","lastModifiedDate":"2023-11-10"},{"lineNumber":88,"author":{"gitId":"larrywang0701"},"content":"        assertEquals(event.getName(), \"Sample\");","lastModifiedDate":"2023-11-10"},{"lineNumber":89,"author":{"gitId":"larrywang0701"},"content":"        assertEquals(event.getStartString(), \"2023-11-10 00:01:00\");","lastModifiedDate":"2023-11-10"},{"lineNumber":90,"author":{"gitId":"larrywang0701"},"content":"        assertEquals(event.getEndString(), \"2023-11-10 00:02:00\");","lastModifiedDate":"2023-11-10"},{"lineNumber":91,"author":{"gitId":"larrywang0701"},"content":"        assertEquals(event.getLocationStr(), \"Location\");","lastModifiedDate":"2023-11-10"},{"lineNumber":92,"author":{"gitId":"larrywang0701"},"content":"        assertEquals(event.getInformationStr(), \"Information\");","lastModifiedDate":"2023-11-10"},{"lineNumber":93,"author":{"gitId":"larrywang0701"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":94,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":95,"author":{"gitId":"larrywang0701"},"content":"}","lastModifiedDate":"2023-11-02"}],"authorContributionMap":{"larrywang0701":38,"AndrewJanong":57}},{"path":"src/test/java/seedu/address/model/event/EventTimeTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"larrywang0701"},"content":"package seedu.address.model.event;","lastModifiedDate":"2023-11-02"},{"lineNumber":2,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":3,"author":{"gitId":"larrywang0701"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-11-02"},{"lineNumber":4,"author":{"gitId":"larrywang0701"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-11-04"},{"lineNumber":5,"author":{"gitId":"larrywang0701"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2023-11-02"},{"lineNumber":6,"author":{"gitId":"larrywang0701"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-11-04"},{"lineNumber":7,"author":{"gitId":"AndrewJanong"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-11-13"},{"lineNumber":8,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":9,"author":{"gitId":"larrywang0701"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-11-02"},{"lineNumber":10,"author":{"gitId":"larrywang0701"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-11-02"},{"lineNumber":11,"author":{"gitId":"AndrewJanong"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-11-13"},{"lineNumber":12,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":13,"author":{"gitId":"larrywang0701"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-11-02"},{"lineNumber":14,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":15,"author":{"gitId":"larrywang0701"},"content":"public class EventTimeTest {","lastModifiedDate":"2023-11-02"},{"lineNumber":16,"author":{"gitId":"AndrewJanong"},"content":"    @Test","lastModifiedDate":"2023-11-13"},{"lineNumber":17,"author":{"gitId":"AndrewJanong"},"content":"    public void test_invalidEventTime_throwsDateTimeParseException() {","lastModifiedDate":"2023-11-13"},{"lineNumber":18,"author":{"gitId":"AndrewJanong"},"content":"        assertThrows(DateTimeParseException.class, () -\u003e EventTime.fromString(\"29/05/2024\"));","lastModifiedDate":"2023-11-13"},{"lineNumber":19,"author":{"gitId":"AndrewJanong"},"content":"    }","lastModifiedDate":"2023-11-13"},{"lineNumber":20,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":21,"author":{"gitId":"larrywang0701"},"content":"    @Test","lastModifiedDate":"2023-11-02"},{"lineNumber":22,"author":{"gitId":"larrywang0701"},"content":"    public void test_eventTimeEquals_pass() {","lastModifiedDate":"2023-11-02"},{"lineNumber":23,"author":{"gitId":"larrywang0701"},"content":"        EventTime instance \u003d EventTime.fromString(\"2023-11-03 00:30:00\");","lastModifiedDate":"2023-11-04"},{"lineNumber":24,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":25,"author":{"gitId":"AndrewJanong"},"content":"        // same object --\u003e returns true","lastModifiedDate":"2023-11-13"},{"lineNumber":26,"author":{"gitId":"larrywang0701"},"content":"        assertTrue(instance.equals(instance));","lastModifiedDate":"2023-11-04"},{"lineNumber":27,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":28,"author":{"gitId":"AndrewJanong"},"content":"        // empty object --\u003e returns false","lastModifiedDate":"2023-11-13"},{"lineNumber":29,"author":{"gitId":"larrywang0701"},"content":"        assertFalse(instance.equals(new Object()));","lastModifiedDate":"2023-11-04"},{"lineNumber":30,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":31,"author":{"gitId":"AndrewJanong"},"content":"        // same values --\u003e returns true","lastModifiedDate":"2023-11-13"},{"lineNumber":32,"author":{"gitId":"larrywang0701"},"content":"        assertEquals(EventTime.fromString(\"2023-11-02 00:30:00\"),","lastModifiedDate":"2023-11-02"},{"lineNumber":33,"author":{"gitId":"larrywang0701"},"content":"                EventTime.fromString(\"2023-11-02 00:30:00\"));","lastModifiedDate":"2023-11-02"},{"lineNumber":34,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":35,"author":{"gitId":"AndrewJanong"},"content":"        // only time provided --\u003e date will be current date","lastModifiedDate":"2023-11-13"},{"lineNumber":36,"author":{"gitId":"larrywang0701"},"content":"        assertEquals(EventTime.fromString(\"00:30:00\"),","lastModifiedDate":"2023-11-02"},{"lineNumber":37,"author":{"gitId":"larrywang0701"},"content":"                EventTime.fromString(","lastModifiedDate":"2023-11-02"},{"lineNumber":38,"author":{"gitId":"larrywang0701"},"content":"                        LocalDateTime.now().format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd\")) + \" 00:30:00\"));","lastModifiedDate":"2023-11-02"},{"lineNumber":39,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":40,"author":{"gitId":"AndrewJanong"},"content":"        // different values --\u003e returns false","lastModifiedDate":"2023-11-13"},{"lineNumber":41,"author":{"gitId":"larrywang0701"},"content":"        assertNotEquals(EventTime.fromString(\"2023-11-02 10:00:00\"),","lastModifiedDate":"2023-11-02"},{"lineNumber":42,"author":{"gitId":"larrywang0701"},"content":"                EventTime.fromString(\"2023-11-02 10:00:01\"));","lastModifiedDate":"2023-11-02"},{"lineNumber":43,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":44,"author":{"gitId":"AndrewJanong"},"content":"        // different time --\u003e returns false","lastModifiedDate":"2023-11-13"},{"lineNumber":45,"author":{"gitId":"larrywang0701"},"content":"        assertNotEquals(EventTime.fromString(\"10:00:00\"),","lastModifiedDate":"2023-11-02"},{"lineNumber":46,"author":{"gitId":"larrywang0701"},"content":"                EventTime.fromString(","lastModifiedDate":"2023-11-02"},{"lineNumber":47,"author":{"gitId":"larrywang0701"},"content":"                        LocalDateTime.now().format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd\")) + \" 10:00:01\"));","lastModifiedDate":"2023-11-02"},{"lineNumber":48,"author":{"gitId":"larrywang0701"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":49,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":50,"author":{"gitId":"larrywang0701"},"content":"    @Test","lastModifiedDate":"2023-11-02"},{"lineNumber":51,"author":{"gitId":"larrywang0701"},"content":"    public void test_getTime_pass() {","lastModifiedDate":"2023-11-02"},{"lineNumber":52,"author":{"gitId":"larrywang0701"},"content":"        assertEquals(EventTime.fromString(\"2023-11-02 00:30:00\").getTime(),","lastModifiedDate":"2023-11-02"},{"lineNumber":53,"author":{"gitId":"larrywang0701"},"content":"                LocalDateTime.of(2023, 11, 2, 0, 30, 0));","lastModifiedDate":"2023-11-02"},{"lineNumber":54,"author":{"gitId":"larrywang0701"},"content":"        assertEquals(EventTime.fromString(\"00:30:00\").getTime(),","lastModifiedDate":"2023-11-02"},{"lineNumber":55,"author":{"gitId":"larrywang0701"},"content":"                        LocalDateTime.now().withHour(0).withMinute(30).withSecond(0).withNano(0));","lastModifiedDate":"2023-11-02"},{"lineNumber":56,"author":{"gitId":"larrywang0701"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":57,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":58,"author":{"gitId":"larrywang0701"},"content":"}","lastModifiedDate":"2023-11-02"}],"authorContributionMap":{"larrywang0701":39,"AndrewJanong":19}},{"path":"src/test/java/seedu/address/model/event/UniqueEventListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"larrywang0701"},"content":"package seedu.address.model.event;","lastModifiedDate":"2023-11-10"},{"lineNumber":2,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":3,"author":{"gitId":"larrywang0701"},"content":"import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;","lastModifiedDate":"2023-11-10"},{"lineNumber":4,"author":{"gitId":"larrywang0701"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-11-10"},{"lineNumber":5,"author":{"gitId":"larrywang0701"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-11-10"},{"lineNumber":6,"author":{"gitId":"larrywang0701"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-11-10"},{"lineNumber":7,"author":{"gitId":"larrywang0701"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-11-10"},{"lineNumber":8,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":9,"author":{"gitId":"larrywang0701"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-11-10"},{"lineNumber":10,"author":{"gitId":"larrywang0701"},"content":"import java.util.List;","lastModifiedDate":"2023-11-10"},{"lineNumber":11,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":12,"author":{"gitId":"larrywang0701"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-11-10"},{"lineNumber":13,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":14,"author":{"gitId":"larrywang0701"},"content":"import seedu.address.model.event.exceptions.DuplicateEventException;","lastModifiedDate":"2023-11-10"},{"lineNumber":15,"author":{"gitId":"larrywang0701"},"content":"import seedu.address.model.event.exceptions.EventNotFoundException;","lastModifiedDate":"2023-11-10"},{"lineNumber":16,"author":{"gitId":"larrywang0701"},"content":"import seedu.address.model.event.exceptions.EventOverlapException;","lastModifiedDate":"2023-11-10"},{"lineNumber":17,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":18,"author":{"gitId":"larrywang0701"},"content":"public class UniqueEventListTest {","lastModifiedDate":"2023-11-10"},{"lineNumber":19,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":20,"author":{"gitId":"AndrewJanong"},"content":"    private final UniqueEventList uniqueEventList \u003d new UniqueEventList();","lastModifiedDate":"2023-11-13"},{"lineNumber":21,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":22,"author":{"gitId":"AndrewJanong"},"content":"    @Test","lastModifiedDate":"2023-11-13"},{"lineNumber":23,"author":{"gitId":"AndrewJanong"},"content":"    public void contains_nullEvent_throwsNullPointerException() {","lastModifiedDate":"2023-11-13"},{"lineNumber":24,"author":{"gitId":"AndrewJanong"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueEventList.contains(null));","lastModifiedDate":"2023-11-13"},{"lineNumber":25,"author":{"gitId":"AndrewJanong"},"content":"    }","lastModifiedDate":"2023-11-13"},{"lineNumber":26,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":27,"author":{"gitId":"larrywang0701"},"content":"    @Test","lastModifiedDate":"2023-11-10"},{"lineNumber":28,"author":{"gitId":"larrywang0701"},"content":"    public void test_removeEvent_pass() {","lastModifiedDate":"2023-11-10"},{"lineNumber":29,"author":{"gitId":"larrywang0701"},"content":"        UniqueEventList list \u003d new UniqueEventList();","lastModifiedDate":"2023-11-10"},{"lineNumber":30,"author":{"gitId":"larrywang0701"},"content":"        Event event \u003d new Event(\"n\", \"00:00\", \"00:00\", \"loc\", \"info\");","lastModifiedDate":"2023-11-10"},{"lineNumber":31,"author":{"gitId":"larrywang0701"},"content":"        list.add(event);","lastModifiedDate":"2023-11-10"},{"lineNumber":32,"author":{"gitId":"larrywang0701"},"content":"        assertDoesNotThrow(() -\u003e list.remove(event));","lastModifiedDate":"2023-11-10"},{"lineNumber":33,"author":{"gitId":"larrywang0701"},"content":"        assertEquals(list.asUnmodifiableObservableList().size(), 0);","lastModifiedDate":"2023-11-10"},{"lineNumber":34,"author":{"gitId":"larrywang0701"},"content":"        assertThrows(EventNotFoundException.class, () -\u003e","lastModifiedDate":"2023-11-10"},{"lineNumber":35,"author":{"gitId":"larrywang0701"},"content":"                list.remove(new Event(\"n2\", \"00:00\", \"00:00\", \"loc\", \"info\")));","lastModifiedDate":"2023-11-10"},{"lineNumber":36,"author":{"gitId":"larrywang0701"},"content":"    }","lastModifiedDate":"2023-11-10"},{"lineNumber":37,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":38,"author":{"gitId":"larrywang0701"},"content":"    @Test","lastModifiedDate":"2023-11-10"},{"lineNumber":39,"author":{"gitId":"larrywang0701"},"content":"    public void test_addEvent_pass() {","lastModifiedDate":"2023-11-10"},{"lineNumber":40,"author":{"gitId":"larrywang0701"},"content":"        UniqueEventList list \u003d new UniqueEventList();","lastModifiedDate":"2023-11-10"},{"lineNumber":41,"author":{"gitId":"larrywang0701"},"content":"        Event event1 \u003d new Event(\"n\", \"00:00\", \"00:00\", \"loc\", \"info\");","lastModifiedDate":"2023-11-10"},{"lineNumber":42,"author":{"gitId":"larrywang0701"},"content":"        Event event2 \u003d new Event(\"n2\", \"00:10\", \"00:20\", \"loc\", \"info\");","lastModifiedDate":"2023-11-10"},{"lineNumber":43,"author":{"gitId":"larrywang0701"},"content":"        Event event2Duplicate \u003d new Event(\"n2\", \"00:10\", \"00:20\", \"loc\", \"info\");","lastModifiedDate":"2023-11-10"},{"lineNumber":44,"author":{"gitId":"larrywang0701"},"content":"        Event event3 \u003d new Event(\"n3\", \"00:00\", \"00:00\", \"loc\", \"info\");","lastModifiedDate":"2023-11-10"},{"lineNumber":45,"author":{"gitId":"larrywang0701"},"content":"        Event event4 \u003d new Event(\"n4\", \"00:50\", \"00:55\", \"loc\", \"info\");","lastModifiedDate":"2023-11-10"},{"lineNumber":46,"author":{"gitId":"larrywang0701"},"content":"        assertDoesNotThrow(() -\u003e list.add(event1));","lastModifiedDate":"2023-11-10"},{"lineNumber":47,"author":{"gitId":"larrywang0701"},"content":"        assertDoesNotThrow(() -\u003e list.add(event2));","lastModifiedDate":"2023-11-10"},{"lineNumber":48,"author":{"gitId":"larrywang0701"},"content":"        assertEquals(list.asUnmodifiableObservableList().size(), 2);","lastModifiedDate":"2023-11-10"},{"lineNumber":49,"author":{"gitId":"larrywang0701"},"content":"        assertThrows(DuplicateEventException.class, () -\u003e","lastModifiedDate":"2023-11-10"},{"lineNumber":50,"author":{"gitId":"larrywang0701"},"content":"                list.add(event2Duplicate));","lastModifiedDate":"2023-11-10"},{"lineNumber":51,"author":{"gitId":"larrywang0701"},"content":"        assertThrows(EventOverlapException.class, () -\u003e","lastModifiedDate":"2023-11-10"},{"lineNumber":52,"author":{"gitId":"larrywang0701"},"content":"                list.add(event3));","lastModifiedDate":"2023-11-10"},{"lineNumber":53,"author":{"gitId":"larrywang0701"},"content":"        assertDoesNotThrow(() -\u003e list.add(event4));","lastModifiedDate":"2023-11-10"},{"lineNumber":54,"author":{"gitId":"larrywang0701"},"content":"        assertEquals(list.asUnmodifiableObservableList().size(), 3);","lastModifiedDate":"2023-11-10"},{"lineNumber":55,"author":{"gitId":"larrywang0701"},"content":"    }","lastModifiedDate":"2023-11-10"},{"lineNumber":56,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":57,"author":{"gitId":"larrywang0701"},"content":"    @Test","lastModifiedDate":"2023-11-10"},{"lineNumber":58,"author":{"gitId":"larrywang0701"},"content":"    public void test_setEvents_pass() {","lastModifiedDate":"2023-11-10"},{"lineNumber":59,"author":{"gitId":"larrywang0701"},"content":"        UniqueEventList list1 \u003d new UniqueEventList();","lastModifiedDate":"2023-11-10"},{"lineNumber":60,"author":{"gitId":"larrywang0701"},"content":"        Event event1 \u003d new Event(\"n\", \"00:00\", \"00:00\", \"loc\", \"info\");","lastModifiedDate":"2023-11-10"},{"lineNumber":61,"author":{"gitId":"larrywang0701"},"content":"        Event event1Duplicate \u003d new Event(\"n\", \"00:00\", \"00:00\", \"loc\", \"info\");","lastModifiedDate":"2023-11-10"},{"lineNumber":62,"author":{"gitId":"larrywang0701"},"content":"        Event event2 \u003d new Event(\"n2\", \"00:10\", \"00:15\", \"loc\", \"info\");","lastModifiedDate":"2023-11-10"},{"lineNumber":63,"author":{"gitId":"larrywang0701"},"content":"        list1.add(event1);","lastModifiedDate":"2023-11-10"},{"lineNumber":64,"author":{"gitId":"larrywang0701"},"content":"        list1.add(event2);","lastModifiedDate":"2023-11-10"},{"lineNumber":65,"author":{"gitId":"larrywang0701"},"content":"        UniqueEventList list2 \u003d new UniqueEventList();","lastModifiedDate":"2023-11-10"},{"lineNumber":66,"author":{"gitId":"larrywang0701"},"content":"        assertDoesNotThrow(() -\u003e list2.setEvents(list1));","lastModifiedDate":"2023-11-10"},{"lineNumber":67,"author":{"gitId":"larrywang0701"},"content":"        assertEquals(list2.asUnmodifiableObservableList().size(), 2);","lastModifiedDate":"2023-11-10"},{"lineNumber":68,"author":{"gitId":"larrywang0701"},"content":"        assertEquals(list2.asUnmodifiableObservableList().get(0), event1);","lastModifiedDate":"2023-11-10"},{"lineNumber":69,"author":{"gitId":"larrywang0701"},"content":"        assertEquals(list2.asUnmodifiableObservableList().get(1), event2);","lastModifiedDate":"2023-11-10"},{"lineNumber":70,"author":{"gitId":"larrywang0701"},"content":"        List\u003cEvent\u003e eventList \u003d Arrays.asList(new Event[]{event1, event2});","lastModifiedDate":"2023-11-10"},{"lineNumber":71,"author":{"gitId":"larrywang0701"},"content":"        List\u003cEvent\u003e eventListWithDuplicate \u003d Arrays.asList(new Event[]{event1, event1Duplicate});","lastModifiedDate":"2023-11-10"},{"lineNumber":72,"author":{"gitId":"larrywang0701"},"content":"        UniqueEventList list3 \u003d new UniqueEventList();","lastModifiedDate":"2023-11-10"},{"lineNumber":73,"author":{"gitId":"larrywang0701"},"content":"        assertDoesNotThrow(() -\u003e list3.setEvents(eventList));","lastModifiedDate":"2023-11-10"},{"lineNumber":74,"author":{"gitId":"larrywang0701"},"content":"        UniqueEventList list4 \u003d new UniqueEventList();","lastModifiedDate":"2023-11-10"},{"lineNumber":75,"author":{"gitId":"larrywang0701"},"content":"        assertThrows(DuplicateEventException.class, () -\u003e list4.setEvents(eventListWithDuplicate));","lastModifiedDate":"2023-11-10"},{"lineNumber":76,"author":{"gitId":"larrywang0701"},"content":"    }","lastModifiedDate":"2023-11-10"},{"lineNumber":77,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":78,"author":{"gitId":"larrywang0701"},"content":"    @Test","lastModifiedDate":"2023-11-10"},{"lineNumber":79,"author":{"gitId":"larrywang0701"},"content":"    public void test_equals_pass() {","lastModifiedDate":"2023-11-10"},{"lineNumber":80,"author":{"gitId":"larrywang0701"},"content":"        Event event1 \u003d new Event(\"n\", \"00:00\", \"00:00\", \"loc\", \"info\");","lastModifiedDate":"2023-11-10"},{"lineNumber":81,"author":{"gitId":"larrywang0701"},"content":"        Event event2 \u003d new Event(\"n2\", \"00:10\", \"00:15\", \"loc\", \"info\");","lastModifiedDate":"2023-11-10"},{"lineNumber":82,"author":{"gitId":"larrywang0701"},"content":"        Event event3 \u003d new Event(\"n3\", \"00:20\", \"00:25\", \"loc\", \"info\");","lastModifiedDate":"2023-11-10"},{"lineNumber":83,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":84,"author":{"gitId":"AndrewJanong"},"content":"        UniqueEventList list1 \u003d new UniqueEventList();","lastModifiedDate":"2023-11-13"},{"lineNumber":85,"author":{"gitId":"larrywang0701"},"content":"        list1.add(event1);","lastModifiedDate":"2023-11-10"},{"lineNumber":86,"author":{"gitId":"larrywang0701"},"content":"        list1.add(event2);","lastModifiedDate":"2023-11-10"},{"lineNumber":87,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":88,"author":{"gitId":"larrywang0701"},"content":"        UniqueEventList list2 \u003d new UniqueEventList();","lastModifiedDate":"2023-11-10"},{"lineNumber":89,"author":{"gitId":"larrywang0701"},"content":"        list2.add(event1);","lastModifiedDate":"2023-11-10"},{"lineNumber":90,"author":{"gitId":"larrywang0701"},"content":"        list2.add(event2);","lastModifiedDate":"2023-11-10"},{"lineNumber":91,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":92,"author":{"gitId":"AndrewJanong"},"content":"        // same object --\u003e returns true","lastModifiedDate":"2023-11-13"},{"lineNumber":93,"author":{"gitId":"larrywang0701"},"content":"        assertTrue(list1.equals(list1));","lastModifiedDate":"2023-11-10"},{"lineNumber":94,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":95,"author":{"gitId":"AndrewJanong"},"content":"        // same values --\u003e returns true","lastModifiedDate":"2023-11-13"},{"lineNumber":96,"author":{"gitId":"larrywang0701"},"content":"        assertTrue(list1.equals(list2));","lastModifiedDate":"2023-11-10"},{"lineNumber":97,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":98,"author":{"gitId":"larrywang0701"},"content":"        list2.add(event3);","lastModifiedDate":"2023-11-10"},{"lineNumber":99,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":100,"author":{"gitId":"AndrewJanong"},"content":"        // different values --\u003e returns false","lastModifiedDate":"2023-11-13"},{"lineNumber":101,"author":{"gitId":"larrywang0701"},"content":"        assertFalse(list1.equals(list2));","lastModifiedDate":"2023-11-10"},{"lineNumber":102,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":103,"author":{"gitId":"AndrewJanong"},"content":"        // empty object --\u003e returns false","lastModifiedDate":"2023-11-13"},{"lineNumber":104,"author":{"gitId":"larrywang0701"},"content":"        assertFalse(list1.equals(new Object()));","lastModifiedDate":"2023-11-10"},{"lineNumber":105,"author":{"gitId":"larrywang0701"},"content":"    }","lastModifiedDate":"2023-11-10"},{"lineNumber":106,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":107,"author":{"gitId":"AndrewJanong"},"content":"    @Test","lastModifiedDate":"2023-11-13"},{"lineNumber":108,"author":{"gitId":"AndrewJanong"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-11-13"},{"lineNumber":109,"author":{"gitId":"AndrewJanong"},"content":"        assertEquals(uniqueEventList.asUnmodifiableObservableList().toString(), uniqueEventList.toString());","lastModifiedDate":"2023-11-13"},{"lineNumber":110,"author":{"gitId":"AndrewJanong"},"content":"    }","lastModifiedDate":"2023-11-13"},{"lineNumber":111,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":112,"author":{"gitId":"AndrewJanong"},"content":"    @Test","lastModifiedDate":"2023-11-13"},{"lineNumber":113,"author":{"gitId":"AndrewJanong"},"content":"    public void hashCodeMethod() {","lastModifiedDate":"2023-11-13"},{"lineNumber":114,"author":{"gitId":"AndrewJanong"},"content":"        assertEquals(uniqueEventList.asUnmodifiableObservableList().hashCode(), uniqueEventList.hashCode());","lastModifiedDate":"2023-11-13"},{"lineNumber":115,"author":{"gitId":"AndrewJanong"},"content":"    }","lastModifiedDate":"2023-11-13"},{"lineNumber":116,"author":{"gitId":"AndrewJanong"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":117,"author":{"gitId":"larrywang0701"},"content":"}","lastModifiedDate":"2023-11-10"}],"authorContributionMap":{"larrywang0701":87,"AndrewJanong":30}},{"path":"src/test/java/seedu/address/model/event/exceptions/DuplicateEventExceptionTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"larrywang0701"},"content":"package seedu.address.model.event.exceptions;","lastModifiedDate":"2023-11-10"},{"lineNumber":2,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":3,"author":{"gitId":"larrywang0701"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-11-10"},{"lineNumber":4,"author":{"gitId":"larrywang0701"},"content":"import static seedu.address.logic.Messages.DUPLICATED_EVENTS;","lastModifiedDate":"2023-11-10"},{"lineNumber":5,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":6,"author":{"gitId":"larrywang0701"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-11-10"},{"lineNumber":7,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":8,"author":{"gitId":"larrywang0701"},"content":"public class DuplicateEventExceptionTest {","lastModifiedDate":"2023-11-10"},{"lineNumber":9,"author":{"gitId":"larrywang0701"},"content":"    @Test","lastModifiedDate":"2023-11-10"},{"lineNumber":10,"author":{"gitId":"larrywang0701"},"content":"    public void test_createException_pass() {","lastModifiedDate":"2023-11-10"},{"lineNumber":11,"author":{"gitId":"larrywang0701"},"content":"        assertEquals(new DuplicateEventException().getMessage(), DUPLICATED_EVENTS);","lastModifiedDate":"2023-11-10"},{"lineNumber":12,"author":{"gitId":"larrywang0701"},"content":"    }","lastModifiedDate":"2023-11-10"},{"lineNumber":13,"author":{"gitId":"larrywang0701"},"content":"}","lastModifiedDate":"2023-11-10"},{"lineNumber":14,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-11-10"}],"authorContributionMap":{"larrywang0701":14}},{"path":"src/test/java/seedu/address/model/event/exceptions/EventOverlapExceptionTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"larrywang0701"},"content":"package seedu.address.model.event.exceptions;","lastModifiedDate":"2023-11-10"},{"lineNumber":2,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":3,"author":{"gitId":"larrywang0701"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-11-10"},{"lineNumber":4,"author":{"gitId":"larrywang0701"},"content":"import static seedu.address.logic.Messages.EVENT_OVERLAP;","lastModifiedDate":"2023-11-10"},{"lineNumber":5,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":6,"author":{"gitId":"larrywang0701"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-11-10"},{"lineNumber":7,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":8,"author":{"gitId":"larrywang0701"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2023-11-10"},{"lineNumber":9,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":10,"author":{"gitId":"larrywang0701"},"content":"public class EventOverlapExceptionTest {","lastModifiedDate":"2023-11-10"},{"lineNumber":11,"author":{"gitId":"larrywang0701"},"content":"    @Test","lastModifiedDate":"2023-11-10"},{"lineNumber":12,"author":{"gitId":"larrywang0701"},"content":"    public void test_createException_pass() {","lastModifiedDate":"2023-11-10"},{"lineNumber":13,"author":{"gitId":"larrywang0701"},"content":"        Event event1 \u003d new Event(\"name1\", \"00:01:00\", \"00:02:00\", \"location1\",","lastModifiedDate":"2023-11-10"},{"lineNumber":14,"author":{"gitId":"larrywang0701"},"content":"                \"information1\");","lastModifiedDate":"2023-11-10"},{"lineNumber":15,"author":{"gitId":"larrywang0701"},"content":"        Event event2 \u003d new Event(\"name2\", \"00:00:00\", \"00:03:00\", \"location2\",","lastModifiedDate":"2023-11-10"},{"lineNumber":16,"author":{"gitId":"larrywang0701"},"content":"                \"information2\");","lastModifiedDate":"2023-11-10"},{"lineNumber":17,"author":{"gitId":"larrywang0701"},"content":"        assertEquals(new EventOverlapException(event1, event2).getMessage(),","lastModifiedDate":"2023-11-10"},{"lineNumber":18,"author":{"gitId":"larrywang0701"},"content":"                String.format(EVENT_OVERLAP, event1.getUiText(), event2.getUiText()));","lastModifiedDate":"2023-11-10"},{"lineNumber":19,"author":{"gitId":"larrywang0701"},"content":"    }","lastModifiedDate":"2023-11-10"},{"lineNumber":20,"author":{"gitId":"larrywang0701"},"content":"}","lastModifiedDate":"2023-11-10"}],"authorContributionMap":{"larrywang0701":20}},{"path":"src/test/java/seedu/address/model/note/NoteContentTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"josepholim"},"content":"package seedu.address.model.note;","lastModifiedDate":"2023-10-16"},{"lineNumber":2,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":3,"author":{"gitId":"josepholim"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-16"},{"lineNumber":4,"author":{"gitId":"josepholim"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-16"},{"lineNumber":5,"author":{"gitId":"josepholim"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-27"},{"lineNumber":6,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":7,"author":{"gitId":"josepholim"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-16"},{"lineNumber":8,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":9,"author":{"gitId":"josepholim"},"content":"public class NoteContentTest {","lastModifiedDate":"2023-10-16"},{"lineNumber":10,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":11,"author":{"gitId":"josepholim"},"content":"    @Test","lastModifiedDate":"2023-10-27"},{"lineNumber":12,"author":{"gitId":"josepholim"},"content":"    public void fromString_null_throwsNullPointerException() {","lastModifiedDate":"2023-10-27"},{"lineNumber":13,"author":{"gitId":"josepholim"},"content":"        assertThrows(NullPointerException.class, () -\u003e NoteContent.fromString(null));","lastModifiedDate":"2023-10-27"},{"lineNumber":14,"author":{"gitId":"josepholim"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":15,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":16,"author":{"gitId":"josepholim"},"content":"    @Test","lastModifiedDate":"2023-10-27"},{"lineNumber":17,"author":{"gitId":"josepholim"},"content":"    public void fromString_invalidNoteContent_throwsIllegalArgumentException() {","lastModifiedDate":"2023-10-27"},{"lineNumber":18,"author":{"gitId":"josepholim"},"content":"        String invalidNoteContent \u003d \"\";","lastModifiedDate":"2023-10-27"},{"lineNumber":19,"author":{"gitId":"josepholim"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e NoteContent.fromString(invalidNoteContent));","lastModifiedDate":"2023-10-27"},{"lineNumber":20,"author":{"gitId":"josepholim"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":21,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":22,"author":{"gitId":"josepholim"},"content":"    @Test","lastModifiedDate":"2023-10-27"},{"lineNumber":23,"author":{"gitId":"josepholim"},"content":"    public void isValidNoteContent() {","lastModifiedDate":"2023-10-27"},{"lineNumber":24,"author":{"gitId":"josepholim"},"content":"        // null note content","lastModifiedDate":"2023-10-27"},{"lineNumber":25,"author":{"gitId":"josepholim"},"content":"        assertThrows(NullPointerException.class, () -\u003e NoteContent.isValidNoteContent(null));","lastModifiedDate":"2023-10-27"},{"lineNumber":26,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":27,"author":{"gitId":"josepholim"},"content":"        // invalid note contents","lastModifiedDate":"2023-10-27"},{"lineNumber":28,"author":{"gitId":"josepholim"},"content":"        assertFalse(NoteContent.isValidNoteContent(\"\")); // empty string","lastModifiedDate":"2023-10-27"},{"lineNumber":29,"author":{"gitId":"josepholim"},"content":"        assertFalse(NoteContent.isValidNoteContent(\" \")); // spaces only","lastModifiedDate":"2023-10-27"},{"lineNumber":30,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":31,"author":{"gitId":"josepholim"},"content":"        // valid note contents","lastModifiedDate":"2023-10-27"},{"lineNumber":32,"author":{"gitId":"josepholim"},"content":"        assertTrue(NoteContent.isValidNoteContent(\"note content\"));","lastModifiedDate":"2023-10-27"},{"lineNumber":33,"author":{"gitId":"josepholim"},"content":"        assertTrue(NoteContent.isValidNoteContent(\"-\")); // one character","lastModifiedDate":"2023-10-27"},{"lineNumber":34,"author":{"gitId":"josepholim"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":35,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":36,"author":{"gitId":"josepholim"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":37,"author":{"gitId":"josepholim"},"content":"    public void equals() {","lastModifiedDate":"2023-10-16"},{"lineNumber":38,"author":{"gitId":"josepholim"},"content":"        NoteContent content \u003d NoteContent.fromString(\"Valid Note Content\");","lastModifiedDate":"2023-10-16"},{"lineNumber":39,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":40,"author":{"gitId":"josepholim"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-16"},{"lineNumber":41,"author":{"gitId":"josepholim"},"content":"        assertTrue(content.equals(NoteContent.fromString(\"Valid Note Content\")));","lastModifiedDate":"2023-10-16"},{"lineNumber":42,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":43,"author":{"gitId":"josepholim"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-16"},{"lineNumber":44,"author":{"gitId":"josepholim"},"content":"        assertTrue(content.equals(content));","lastModifiedDate":"2023-10-16"},{"lineNumber":45,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":46,"author":{"gitId":"josepholim"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-16"},{"lineNumber":47,"author":{"gitId":"josepholim"},"content":"        assertFalse(content.equals(null));","lastModifiedDate":"2023-10-16"},{"lineNumber":48,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":49,"author":{"gitId":"josepholim"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-16"},{"lineNumber":50,"author":{"gitId":"josepholim"},"content":"        assertFalse(content.equals(5.0f));","lastModifiedDate":"2023-10-16"},{"lineNumber":51,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":52,"author":{"gitId":"josepholim"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2023-10-16"},{"lineNumber":53,"author":{"gitId":"josepholim"},"content":"        assertFalse(content.equals(NoteContent.fromString(\"Other Valid Note Content\")));","lastModifiedDate":"2023-10-16"},{"lineNumber":54,"author":{"gitId":"josepholim"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":55,"author":{"gitId":"josepholim"},"content":"}","lastModifiedDate":"2023-10-16"}],"authorContributionMap":{"josepholim":55}},{"path":"src/test/java/seedu/address/model/note/NoteIdTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"josepholim"},"content":"package seedu.address.model.note;","lastModifiedDate":"2023-10-27"},{"lineNumber":2,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":3,"author":{"gitId":"josepholim"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-27"},{"lineNumber":4,"author":{"gitId":"josepholim"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-27"},{"lineNumber":5,"author":{"gitId":"josepholim"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-27"},{"lineNumber":6,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":7,"author":{"gitId":"josepholim"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-27"},{"lineNumber":8,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":9,"author":{"gitId":"josepholim"},"content":"public class NoteIdTest {","lastModifiedDate":"2023-10-27"},{"lineNumber":10,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":11,"author":{"gitId":"josepholim"},"content":"    @Test","lastModifiedDate":"2023-10-27"},{"lineNumber":12,"author":{"gitId":"josepholim"},"content":"    public void fromString_null_throwsNullPointerException() {","lastModifiedDate":"2023-10-27"},{"lineNumber":13,"author":{"gitId":"josepholim"},"content":"        assertThrows(NullPointerException.class, () -\u003e NoteID.fromString(null));","lastModifiedDate":"2023-10-27"},{"lineNumber":14,"author":{"gitId":"josepholim"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":15,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":16,"author":{"gitId":"josepholim"},"content":"    @Test","lastModifiedDate":"2023-10-27"},{"lineNumber":17,"author":{"gitId":"josepholim"},"content":"    public void equals() {","lastModifiedDate":"2023-10-27"},{"lineNumber":18,"author":{"gitId":"josepholim"},"content":"        NoteID id \u003d NoteID.fromString(\"1\");","lastModifiedDate":"2023-10-27"},{"lineNumber":19,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":20,"author":{"gitId":"josepholim"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-27"},{"lineNumber":21,"author":{"gitId":"josepholim"},"content":"        assertTrue(id.equals(NoteID.fromString(\"1\")));","lastModifiedDate":"2023-10-27"},{"lineNumber":22,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":23,"author":{"gitId":"josepholim"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-27"},{"lineNumber":24,"author":{"gitId":"josepholim"},"content":"        assertTrue(id.equals(id));","lastModifiedDate":"2023-10-27"},{"lineNumber":25,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":26,"author":{"gitId":"josepholim"},"content":"        // same values but using fromInt method -\u003e returns true","lastModifiedDate":"2023-10-27"},{"lineNumber":27,"author":{"gitId":"josepholim"},"content":"        assertTrue(id.equals(NoteID.fromInt(1)));","lastModifiedDate":"2023-10-27"},{"lineNumber":28,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":29,"author":{"gitId":"josepholim"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-27"},{"lineNumber":30,"author":{"gitId":"josepholim"},"content":"        assertFalse(id.equals(null));","lastModifiedDate":"2023-10-27"},{"lineNumber":31,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":32,"author":{"gitId":"josepholim"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-27"},{"lineNumber":33,"author":{"gitId":"josepholim"},"content":"        assertFalse(id.equals(5.0f));","lastModifiedDate":"2023-10-27"},{"lineNumber":34,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":35,"author":{"gitId":"josepholim"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2023-10-27"},{"lineNumber":36,"author":{"gitId":"josepholim"},"content":"        assertFalse(id.equals(NoteID.fromString(\"2\")));","lastModifiedDate":"2023-10-27"},{"lineNumber":37,"author":{"gitId":"josepholim"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":38,"author":{"gitId":"josepholim"},"content":"}","lastModifiedDate":"2023-10-27"}],"authorContributionMap":{"josepholim":38}},{"path":"src/test/java/seedu/address/model/note/NoteTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"josepholim"},"content":"package seedu.address.model.note;","lastModifiedDate":"2023-10-16"},{"lineNumber":2,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":3,"author":{"gitId":"josepholim"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-16"},{"lineNumber":4,"author":{"gitId":"josepholim"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-16"},{"lineNumber":5,"author":{"gitId":"josepholim"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NOTE_B_CONTENT;","lastModifiedDate":"2023-10-16"},{"lineNumber":6,"author":{"gitId":"josepholim"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NOTE_B_TITLE;","lastModifiedDate":"2023-10-16"},{"lineNumber":7,"author":{"gitId":"josepholim"},"content":"import static seedu.address.testutil.TypicalNotes.NOTE_A;","lastModifiedDate":"2023-10-16"},{"lineNumber":8,"author":{"gitId":"josepholim"},"content":"import static seedu.address.testutil.TypicalNotes.NOTE_B;","lastModifiedDate":"2023-10-16"},{"lineNumber":9,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":10,"author":{"gitId":"josepholim"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-16"},{"lineNumber":11,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":12,"author":{"gitId":"josepholim"},"content":"import seedu.address.testutil.NoteBuilder;","lastModifiedDate":"2023-10-16"},{"lineNumber":13,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":14,"author":{"gitId":"josepholim"},"content":"public class NoteTest {","lastModifiedDate":"2023-10-16"},{"lineNumber":15,"author":{"gitId":"josepholim"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":16,"author":{"gitId":"josepholim"},"content":"    public void equals() {","lastModifiedDate":"2023-10-16"},{"lineNumber":17,"author":{"gitId":"josepholim"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-16"},{"lineNumber":18,"author":{"gitId":"josepholim"},"content":"        Note noteACopy \u003d new NoteBuilder(NOTE_A).build();","lastModifiedDate":"2023-10-16"},{"lineNumber":19,"author":{"gitId":"josepholim"},"content":"        assertTrue(NOTE_A.equals(noteACopy));","lastModifiedDate":"2023-10-16"},{"lineNumber":20,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":21,"author":{"gitId":"josepholim"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-16"},{"lineNumber":22,"author":{"gitId":"josepholim"},"content":"        assertTrue(NOTE_A.equals(NOTE_A));","lastModifiedDate":"2023-10-16"},{"lineNumber":23,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":24,"author":{"gitId":"josepholim"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-16"},{"lineNumber":25,"author":{"gitId":"josepholim"},"content":"        assertFalse(NOTE_A.equals(null));","lastModifiedDate":"2023-10-16"},{"lineNumber":26,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":27,"author":{"gitId":"josepholim"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2023-10-16"},{"lineNumber":28,"author":{"gitId":"josepholim"},"content":"        assertFalse(NOTE_A.equals(5));","lastModifiedDate":"2023-10-16"},{"lineNumber":29,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":30,"author":{"gitId":"josepholim"},"content":"        // different note -\u003e returns false","lastModifiedDate":"2023-10-16"},{"lineNumber":31,"author":{"gitId":"josepholim"},"content":"        assertFalse(NOTE_A.equals(NOTE_B));","lastModifiedDate":"2023-10-16"},{"lineNumber":32,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":33,"author":{"gitId":"josepholim"},"content":"        // different title -\u003e returns false","lastModifiedDate":"2023-10-16"},{"lineNumber":34,"author":{"gitId":"josepholim"},"content":"        Note editedNoteA \u003d new NoteBuilder(NOTE_A).withTitle(VALID_NOTE_B_TITLE).build();","lastModifiedDate":"2023-10-16"},{"lineNumber":35,"author":{"gitId":"josepholim"},"content":"        assertFalse(NOTE_A.equals(editedNoteA));","lastModifiedDate":"2023-10-16"},{"lineNumber":36,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":37,"author":{"gitId":"josepholim"},"content":"        // different content -\u003e returns false","lastModifiedDate":"2023-10-16"},{"lineNumber":38,"author":{"gitId":"josepholim"},"content":"        editedNoteA \u003d new NoteBuilder(NOTE_A).withContent(VALID_NOTE_B_CONTENT).build();","lastModifiedDate":"2023-10-16"},{"lineNumber":39,"author":{"gitId":"josepholim"},"content":"        assertFalse(NOTE_A.equals(editedNoteA));","lastModifiedDate":"2023-10-16"},{"lineNumber":40,"author":{"gitId":"josepholim"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":41,"author":{"gitId":"josepholim"},"content":"}","lastModifiedDate":"2023-10-16"}],"authorContributionMap":{"josepholim":41}},{"path":"src/test/java/seedu/address/model/note/NoteTitleTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"josepholim"},"content":"package seedu.address.model.note;","lastModifiedDate":"2023-10-16"},{"lineNumber":2,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":3,"author":{"gitId":"josepholim"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-16"},{"lineNumber":4,"author":{"gitId":"josepholim"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-16"},{"lineNumber":5,"author":{"gitId":"josepholim"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-27"},{"lineNumber":6,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":7,"author":{"gitId":"josepholim"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-16"},{"lineNumber":8,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":9,"author":{"gitId":"josepholim"},"content":"public class NoteTitleTest {","lastModifiedDate":"2023-10-16"},{"lineNumber":10,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":11,"author":{"gitId":"josepholim"},"content":"    @Test","lastModifiedDate":"2023-10-27"},{"lineNumber":12,"author":{"gitId":"josepholim"},"content":"    public void fromString_null_throwsNullPointerException() {","lastModifiedDate":"2023-10-27"},{"lineNumber":13,"author":{"gitId":"josepholim"},"content":"        assertThrows(NullPointerException.class, () -\u003e NoteTitle.fromString(null));","lastModifiedDate":"2023-10-27"},{"lineNumber":14,"author":{"gitId":"josepholim"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":15,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":16,"author":{"gitId":"josepholim"},"content":"    @Test","lastModifiedDate":"2023-10-27"},{"lineNumber":17,"author":{"gitId":"josepholim"},"content":"    public void fromString_invalidNoteTitle_throwsIllegalArgumentException() {","lastModifiedDate":"2023-10-27"},{"lineNumber":18,"author":{"gitId":"josepholim"},"content":"        String invalidNoteTitle \u003d \"\";","lastModifiedDate":"2023-10-27"},{"lineNumber":19,"author":{"gitId":"josepholim"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e NoteTitle.fromString(invalidNoteTitle));","lastModifiedDate":"2023-10-27"},{"lineNumber":20,"author":{"gitId":"josepholim"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":21,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":22,"author":{"gitId":"josepholim"},"content":"    @Test","lastModifiedDate":"2023-10-27"},{"lineNumber":23,"author":{"gitId":"josepholim"},"content":"    public void isValidNoteTitle() {","lastModifiedDate":"2023-10-27"},{"lineNumber":24,"author":{"gitId":"josepholim"},"content":"        // null note title","lastModifiedDate":"2023-10-27"},{"lineNumber":25,"author":{"gitId":"josepholim"},"content":"        assertThrows(NullPointerException.class, () -\u003e NoteTitle.isValidNoteTitle(null));","lastModifiedDate":"2023-10-27"},{"lineNumber":26,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":27,"author":{"gitId":"josepholim"},"content":"        // invalid note title","lastModifiedDate":"2023-10-27"},{"lineNumber":28,"author":{"gitId":"josepholim"},"content":"        assertFalse(NoteTitle.isValidNoteTitle(\"\")); // empty string","lastModifiedDate":"2023-10-27"},{"lineNumber":29,"author":{"gitId":"josepholim"},"content":"        assertFalse(NoteTitle.isValidNoteTitle(\" \")); // spaces only","lastModifiedDate":"2023-10-27"},{"lineNumber":30,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":31,"author":{"gitId":"josepholim"},"content":"        // valid note title","lastModifiedDate":"2023-10-27"},{"lineNumber":32,"author":{"gitId":"josepholim"},"content":"        assertTrue(NoteTitle.isValidNoteTitle(\"note title\"));","lastModifiedDate":"2023-10-27"},{"lineNumber":33,"author":{"gitId":"josepholim"},"content":"        assertTrue(NoteTitle.isValidNoteTitle(\"-\")); // one character","lastModifiedDate":"2023-10-27"},{"lineNumber":34,"author":{"gitId":"josepholim"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":35,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":36,"author":{"gitId":"josepholim"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":37,"author":{"gitId":"josepholim"},"content":"    public void equals() {","lastModifiedDate":"2023-10-16"},{"lineNumber":38,"author":{"gitId":"josepholim"},"content":"        NoteTitle title \u003d NoteTitle.fromString(\"Valid Note Title\");","lastModifiedDate":"2023-10-16"},{"lineNumber":39,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":40,"author":{"gitId":"josepholim"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-16"},{"lineNumber":41,"author":{"gitId":"josepholim"},"content":"        assertTrue(title.equals(NoteTitle.fromString(\"Valid Note Title\")));","lastModifiedDate":"2023-10-16"},{"lineNumber":42,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":43,"author":{"gitId":"josepholim"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-16"},{"lineNumber":44,"author":{"gitId":"josepholim"},"content":"        assertTrue(title.equals(title));","lastModifiedDate":"2023-10-16"},{"lineNumber":45,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":46,"author":{"gitId":"josepholim"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-16"},{"lineNumber":47,"author":{"gitId":"josepholim"},"content":"        assertFalse(title.equals(null));","lastModifiedDate":"2023-10-16"},{"lineNumber":48,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":49,"author":{"gitId":"josepholim"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-16"},{"lineNumber":50,"author":{"gitId":"josepholim"},"content":"        assertFalse(title.equals(5.0f));","lastModifiedDate":"2023-10-16"},{"lineNumber":51,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":52,"author":{"gitId":"josepholim"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2023-10-16"},{"lineNumber":53,"author":{"gitId":"josepholim"},"content":"        assertFalse(title.equals(NoteTitle.fromString(\"Other Valid Note Title\")));","lastModifiedDate":"2023-10-16"},{"lineNumber":54,"author":{"gitId":"josepholim"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":55,"author":{"gitId":"josepholim"},"content":"}","lastModifiedDate":"2023-10-16"}],"authorContributionMap":{"josepholim":55}},{"path":"src/test/java/seedu/address/model/person/AddressTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2017-01-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class AddressTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Address(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidAddress_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidAddress \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Address(invalidAddress));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidAddress() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null address","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Address.isValidAddress(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // invalid addresses","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Address.isValidAddress(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Address.isValidAddress(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // valid addresses","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertTrue(Address.isValidAddress(\"Blk 456, Den Road, #01-355\"));","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertTrue(Address.isValidAddress(\"-\")); // one character","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertTrue(Address.isValidAddress(\"Leng Inc; 1234 Market St; San Francisco CA 2349879; USA\")); // long address","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2019-02-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        Address address \u003d new Address(\"Valid Address\");","lastModifiedDate":"2019-02-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertTrue(address.equals(new Address(\"Valid Address\")));","lastModifiedDate":"2019-02-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(address.equals(address));","lastModifiedDate":"2019-02-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(address.equals(null));","lastModifiedDate":"2019-02-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertFalse(address.equals(5.0f));","lastModifiedDate":"2019-02-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertFalse(address.equals(new Address(\"Other Valid Address\")));","lastModifiedDate":"2019-02-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":56,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":57,"author":{"gitId":"josepholim"},"content":"    @Test","lastModifiedDate":"2023-11-13"},{"lineNumber":58,"author":{"gitId":"josepholim"},"content":"    public void hashCodeMethod() {","lastModifiedDate":"2023-11-13"},{"lineNumber":59,"author":{"gitId":"josepholim"},"content":"        Address address \u003d new Address(\"Valid Address\");","lastModifiedDate":"2023-11-13"},{"lineNumber":60,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":61,"author":{"gitId":"josepholim"},"content":"        // same values","lastModifiedDate":"2023-11-13"},{"lineNumber":62,"author":{"gitId":"josepholim"},"content":"        Address addressCopy \u003d new Address(\"Valid Address\");","lastModifiedDate":"2023-11-13"},{"lineNumber":63,"author":{"gitId":"josepholim"},"content":"        assertTrue(address.hashCode() \u003d\u003d addressCopy.hashCode());","lastModifiedDate":"2023-11-13"},{"lineNumber":64,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":65,"author":{"gitId":"josepholim"},"content":"        // different values","lastModifiedDate":"2023-11-13"},{"lineNumber":66,"author":{"gitId":"josepholim"},"content":"        Address otherAddress \u003d new Address(\"Other Valid Address\");","lastModifiedDate":"2023-11-13"},{"lineNumber":67,"author":{"gitId":"josepholim"},"content":"        assertFalse(address.hashCode() \u003d\u003d otherAddress.hashCode());","lastModifiedDate":"2023-11-13"},{"lineNumber":68,"author":{"gitId":"josepholim"},"content":"    }","lastModifiedDate":"2023-11-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"-":56,"josepholim":13}},{"path":"src/test/java/seedu/address/model/person/ContactIdTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"josepholim"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-11-13"},{"lineNumber":2,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":3,"author":{"gitId":"josepholim"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-11-13"},{"lineNumber":4,"author":{"gitId":"josepholim"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-11-13"},{"lineNumber":5,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":6,"author":{"gitId":"josepholim"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-11-13"},{"lineNumber":7,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":8,"author":{"gitId":"josepholim"},"content":"public class ContactIdTest {","lastModifiedDate":"2023-11-13"},{"lineNumber":9,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":10,"author":{"gitId":"josepholim"},"content":"    @Test","lastModifiedDate":"2023-11-13"},{"lineNumber":11,"author":{"gitId":"josepholim"},"content":"    public void equals() {","lastModifiedDate":"2023-11-13"},{"lineNumber":12,"author":{"gitId":"josepholim"},"content":"        ContactID id \u003d ContactID.fromString(\"1\");","lastModifiedDate":"2023-11-13"},{"lineNumber":13,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":14,"author":{"gitId":"josepholim"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-11-13"},{"lineNumber":15,"author":{"gitId":"josepholim"},"content":"        assertTrue(id.equals(ContactID.fromString(\"1\")));","lastModifiedDate":"2023-11-13"},{"lineNumber":16,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":17,"author":{"gitId":"josepholim"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-11-13"},{"lineNumber":18,"author":{"gitId":"josepholim"},"content":"        assertTrue(id.equals(id));","lastModifiedDate":"2023-11-13"},{"lineNumber":19,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":20,"author":{"gitId":"josepholim"},"content":"        // same values but using fromInt method -\u003e returns true","lastModifiedDate":"2023-11-13"},{"lineNumber":21,"author":{"gitId":"josepholim"},"content":"        assertTrue(id.equals(ContactID.fromInt(1)));","lastModifiedDate":"2023-11-13"},{"lineNumber":22,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":23,"author":{"gitId":"josepholim"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-11-13"},{"lineNumber":24,"author":{"gitId":"josepholim"},"content":"        assertFalse(id.equals(null));","lastModifiedDate":"2023-11-13"},{"lineNumber":25,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":26,"author":{"gitId":"josepholim"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-11-13"},{"lineNumber":27,"author":{"gitId":"josepholim"},"content":"        assertFalse(id.equals(5.0f));","lastModifiedDate":"2023-11-13"},{"lineNumber":28,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":29,"author":{"gitId":"josepholim"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2023-11-13"},{"lineNumber":30,"author":{"gitId":"josepholim"},"content":"        assertFalse(id.equals(ContactID.fromString(\"2\")));","lastModifiedDate":"2023-11-13"},{"lineNumber":31,"author":{"gitId":"josepholim"},"content":"    }","lastModifiedDate":"2023-11-13"},{"lineNumber":32,"author":{"gitId":"josepholim"},"content":"}","lastModifiedDate":"2023-11-13"}],"authorContributionMap":{"josepholim":32}},{"path":"src/test/java/seedu/address/model/person/EmailTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2017-01-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class EmailTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Email(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidEmail_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidEmail \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Email(invalidEmail));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidEmail() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null email","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Email.isValidEmail(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // blank email","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // missing parts","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"@example.com\")); // missing local part","lastModifiedDate":"2017-04-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjackexample.com\")); // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-04-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@\")); // missing domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // invalid parts","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@-\")); // invalid domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@exam_ple.com\")); // underscore in domain name","lastModifiedDate":"2018-02-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter jack@example.com\")); // spaces in local part","lastModifiedDate":"2017-04-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@exam ple.com\")); // spaces in domain name","lastModifiedDate":"2017-04-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\" peterjack@example.com\")); // leading space","lastModifiedDate":"2018-02-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com \")); // trailing space","lastModifiedDate":"2018-02-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@@example.com\")); // double \u0027@\u0027 symbol","lastModifiedDate":"2017-04-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter@jack@example.com\")); // \u0027@\u0027 symbol in local part","lastModifiedDate":"2017-04-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"-peterjack@example.com\")); // local part starts with a hyphen","lastModifiedDate":"2021-07-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack-@example.com\")); // local part ends with a hyphen","lastModifiedDate":"2021-07-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter..jack@example.com\")); // local part has two consecutive periods","lastModifiedDate":"2021-07-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example@com\")); // \u0027@\u0027 symbol in domain name","lastModifiedDate":"2017-04-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@.example.com\")); // domain name starts with a period","lastModifiedDate":"2018-02-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com.\")); // domain name ends with a period","lastModifiedDate":"2018-02-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@-example.com\")); // domain name starts with a hyphen","lastModifiedDate":"2018-02-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com-\")); // domain name ends with a hyphen","lastModifiedDate":"2018-02-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.c\")); // top level domain has less than two chars","lastModifiedDate":"2021-07-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // valid email","lastModifiedDate":"2017-01-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack_1190@example.com\")); // underscore in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack.1190@example.com\")); // period in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack+1190@example.com\")); // \u0027+\u0027 symbol in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack-1190@example.com\")); // hyphen in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"a@bc\")); // minimal","lastModifiedDate":"2018-02-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"test@localhost\")); // alphabets only","lastModifiedDate":"2017-01-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"123@145\")); // numeric local part and domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"a1+be.d@example1.com\")); // mixture of alphanumeric and special characters","lastModifiedDate":"2021-07-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"peter_jack@very-very-very-long-example.com\")); // long domain name","lastModifiedDate":"2018-02-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"if.you.dream.it_you.can.do.it@example.com\")); // long local part","lastModifiedDate":"2017-04-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"e1234567@u.nus.edu\")); // more than one period in domain","lastModifiedDate":"2021-07-20"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2019-02-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        Email email \u003d new Email(\"valid@email\");","lastModifiedDate":"2019-02-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertTrue(email.equals(new Email(\"valid@email\")));","lastModifiedDate":"2019-02-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertTrue(email.equals(email));","lastModifiedDate":"2019-02-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertFalse(email.equals(null));","lastModifiedDate":"2019-02-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertFalse(email.equals(5.0f));","lastModifiedDate":"2019-02-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertFalse(email.equals(new Email(\"other.valid@email\")));","lastModifiedDate":"2019-02-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":88,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":89,"author":{"gitId":"josepholim"},"content":"    @Test","lastModifiedDate":"2023-11-13"},{"lineNumber":90,"author":{"gitId":"josepholim"},"content":"    public void hashCodeMethod() {","lastModifiedDate":"2023-11-13"},{"lineNumber":91,"author":{"gitId":"josepholim"},"content":"        Email email \u003d new Email(\"valid.valid@email\");","lastModifiedDate":"2023-11-13"},{"lineNumber":92,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":93,"author":{"gitId":"josepholim"},"content":"        // same values","lastModifiedDate":"2023-11-13"},{"lineNumber":94,"author":{"gitId":"josepholim"},"content":"        Email emailCopy \u003d new Email(\"valid.valid@email\");","lastModifiedDate":"2023-11-13"},{"lineNumber":95,"author":{"gitId":"josepholim"},"content":"        assertTrue(email.hashCode() \u003d\u003d emailCopy.hashCode());","lastModifiedDate":"2023-11-13"},{"lineNumber":96,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":97,"author":{"gitId":"josepholim"},"content":"        // different values","lastModifiedDate":"2023-11-13"},{"lineNumber":98,"author":{"gitId":"josepholim"},"content":"        Email otherEmail \u003d new Email(\"other.valid@email\");","lastModifiedDate":"2023-11-13"},{"lineNumber":99,"author":{"gitId":"josepholim"},"content":"        assertFalse(email.hashCode() \u003d\u003d otherEmail.hashCode());","lastModifiedDate":"2023-11-13"},{"lineNumber":100,"author":{"gitId":"josepholim"},"content":"    }","lastModifiedDate":"2023-11-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"-":88,"josepholim":13}},{"path":"src/test/java/seedu/address/model/person/NameTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2017-01-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class NameTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Name(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidName_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidName \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Name(invalidName));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidName() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null name","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Name.isValidName(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"peter*\")); // contains non-alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // valid name","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"peter jack\")); // alphabets only","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"12345\")); // numbers only","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"peter the 2nd\")); // alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"Capital Tan\")); // with capital letters","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"David Roger Jackson Ray Jr 2nd\")); // long names","lastModifiedDate":"2017-01-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2019-02-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        Name name \u003d new Name(\"Valid Name\");","lastModifiedDate":"2019-02-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(name.equals(new Name(\"Valid Name\")));","lastModifiedDate":"2019-02-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertTrue(name.equals(name));","lastModifiedDate":"2019-02-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(name.equals(null));","lastModifiedDate":"2019-02-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertFalse(name.equals(5.0f));","lastModifiedDate":"2019-02-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertFalse(name.equals(new Name(\"Other Valid Name\")));","lastModifiedDate":"2019-02-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":60,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":61,"author":{"gitId":"josepholim"},"content":"    @Test","lastModifiedDate":"2023-11-13"},{"lineNumber":62,"author":{"gitId":"josepholim"},"content":"    public void hashCodeMethod() {","lastModifiedDate":"2023-11-13"},{"lineNumber":63,"author":{"gitId":"josepholim"},"content":"        Name name \u003d new Name(\"Valid Name\");","lastModifiedDate":"2023-11-13"},{"lineNumber":64,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":65,"author":{"gitId":"josepholim"},"content":"        // same values","lastModifiedDate":"2023-11-13"},{"lineNumber":66,"author":{"gitId":"josepholim"},"content":"        Name nameCopy \u003d new Name(\"Valid Name\");","lastModifiedDate":"2023-11-13"},{"lineNumber":67,"author":{"gitId":"josepholim"},"content":"        assertTrue(name.hashCode() \u003d\u003d nameCopy.hashCode());","lastModifiedDate":"2023-11-13"},{"lineNumber":68,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":69,"author":{"gitId":"josepholim"},"content":"        // different values","lastModifiedDate":"2023-11-13"},{"lineNumber":70,"author":{"gitId":"josepholim"},"content":"        Name otherName \u003d new Name(\"Valid Other Name\");","lastModifiedDate":"2023-11-13"},{"lineNumber":71,"author":{"gitId":"josepholim"},"content":"        assertFalse(name.hashCode() \u003d\u003d otherName.hashCode());","lastModifiedDate":"2023-11-13"},{"lineNumber":72,"author":{"gitId":"josepholim"},"content":"    }","lastModifiedDate":"2023-11-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"-":60,"josepholim":13}},{"path":"src/test/java/seedu/address/model/person/PersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2018-03-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2018-04-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2018-04-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-03-26"},{"lineNumber":18,"author":{"gitId":"zekone"},"content":"import seedu.address.testutil.TagBuilder;","lastModifiedDate":"2023-10-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class PersonTest {","lastModifiedDate":"2018-03-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2018-03-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e person.getTags().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void isSamePerson() {","lastModifiedDate":"2018-04-19"},{"lineNumber":30,"author":{"gitId":"josepholim"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-11-02"},{"lineNumber":31,"author":{"gitId":"josepholim"},"content":"        Person aliceCopy \u003d new PersonBuilder(ALICE).build();","lastModifiedDate":"2023-11-02"},{"lineNumber":32,"author":{"gitId":"josepholim"},"content":"        assertTrue(ALICE.equals(aliceCopy));","lastModifiedDate":"2023-11-02"},{"lineNumber":33,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":40,"author":{"gitId":"josepholim"},"content":"        // same name, all other attributes different -\u003e returns false","lastModifiedDate":"2023-11-02"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2020-12-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                .withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2020-12-18"},{"lineNumber":43,"author":{"gitId":"josepholim"},"content":"        assertFalse(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2023-11-02"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // different name, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // name differs in case, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        Person editedBob \u003d new PersonBuilder(BOB).withName(VALID_NAME_BOB.toLowerCase()).build();","lastModifiedDate":"2020-12-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertFalse(BOB.isSamePerson(editedBob));","lastModifiedDate":"2020-12-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // name has trailing spaces, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        String nameWithTrailingSpaces \u003d VALID_NAME_BOB + \" \";","lastModifiedDate":"2020-12-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        editedBob \u003d new PersonBuilder(BOB).withName(nameWithTrailingSpaces).build();","lastModifiedDate":"2020-12-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertFalse(BOB.isSamePerson(editedBob));","lastModifiedDate":"2020-12-18"},{"lineNumber":57,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":58,"author":{"gitId":"josepholim"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2023-11-02"},{"lineNumber":59,"author":{"gitId":"josepholim"},"content":"        assertFalse(ALICE.equals(BOB));","lastModifiedDate":"2023-11-02"},{"lineNumber":60,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":61,"author":{"gitId":"josepholim"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2023-11-02"},{"lineNumber":62,"author":{"gitId":"josepholim"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2023-11-02"},{"lineNumber":63,"author":{"gitId":"josepholim"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2023-11-02"},{"lineNumber":64,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":65,"author":{"gitId":"josepholim"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2023-11-02"},{"lineNumber":66,"author":{"gitId":"josepholim"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2023-11-02"},{"lineNumber":67,"author":{"gitId":"josepholim"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2023-11-02"},{"lineNumber":68,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":69,"author":{"gitId":"josepholim"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2023-11-02"},{"lineNumber":70,"author":{"gitId":"josepholim"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2023-11-02"},{"lineNumber":71,"author":{"gitId":"josepholim"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2023-11-02"},{"lineNumber":72,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":73,"author":{"gitId":"AndrewJanong"},"content":"        // different tags -\u003e returns true","lastModifiedDate":"2023-11-09"},{"lineNumber":74,"author":{"gitId":"josepholim"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2023-11-02"},{"lineNumber":75,"author":{"gitId":"AndrewJanong"},"content":"        assertTrue(ALICE.equals(editedAlice));","lastModifiedDate":"2023-11-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        Person aliceCopy \u003d new PersonBuilder(ALICE).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(aliceCopy));","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(5));","lastModifiedDate":"2018-04-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(BOB));","lastModifiedDate":"2018-04-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-18"},{"lineNumber":112,"author":{"gitId":"AndrewJanong"},"content":"        // different tags -\u003e returns true","lastModifiedDate":"2023-11-09"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2018-04-18"},{"lineNumber":114,"author":{"gitId":"AndrewJanong"},"content":"        assertTrue(ALICE.equals(editedAlice));","lastModifiedDate":"2023-11-09"},{"lineNumber":115,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":116,"author":{"gitId":"josepholim"},"content":"        // different name and tags -\u003e returns true","lastModifiedDate":"2023-11-13"},{"lineNumber":117,"author":{"gitId":"josepholim"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2023-11-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2023-11-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":121,"author":{"gitId":"zekone"},"content":"    @Test","lastModifiedDate":"2023-10-27"},{"lineNumber":122,"author":{"gitId":"zekone"},"content":"    public void addTag_validSet_success() {","lastModifiedDate":"2023-10-27"},{"lineNumber":123,"author":{"gitId":"zekone"},"content":"        ALICE.addTags(new TagBuilder().inSet());","lastModifiedDate":"2023-10-27"},{"lineNumber":124,"author":{"gitId":"zekone"},"content":"        assertTrue(ALICE.getTags().contains(new TagBuilder().build()));","lastModifiedDate":"2023-10-27"},{"lineNumber":125,"author":{"gitId":"zekone"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":126,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":127,"author":{"gitId":"zekone"},"content":"    @Test","lastModifiedDate":"2023-10-27"},{"lineNumber":128,"author":{"gitId":"zekone"},"content":"    public void deleteTag_validSet_success() {","lastModifiedDate":"2023-10-27"},{"lineNumber":129,"author":{"gitId":"zekone"},"content":"        ALICE.addTags(new TagBuilder().inSet());","lastModifiedDate":"2023-10-27"},{"lineNumber":130,"author":{"gitId":"zekone"},"content":"        ALICE.removeTags(new TagBuilder().inSet());","lastModifiedDate":"2023-10-27"},{"lineNumber":131,"author":{"gitId":"zekone"},"content":"        assertFalse(ALICE.getTags().contains(new TagBuilder().build()));","lastModifiedDate":"2023-10-27"},{"lineNumber":132,"author":{"gitId":"zekone"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":133,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":134,"author":{"gitId":"josepholim"},"content":"    @Test","lastModifiedDate":"2023-11-13"},{"lineNumber":135,"author":{"gitId":"josepholim"},"content":"    public void hashCodeMethod() {","lastModifiedDate":"2023-11-13"},{"lineNumber":136,"author":{"gitId":"josepholim"},"content":"        // same values","lastModifiedDate":"2023-11-13"},{"lineNumber":137,"author":{"gitId":"josepholim"},"content":"        Person aliceCopy \u003d new PersonBuilder(ALICE).build();","lastModifiedDate":"2023-11-13"},{"lineNumber":138,"author":{"gitId":"josepholim"},"content":"        assertTrue(ALICE.hashCode() \u003d\u003d aliceCopy.hashCode());","lastModifiedDate":"2023-11-13"},{"lineNumber":139,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":140,"author":{"gitId":"josepholim"},"content":"        // different values","lastModifiedDate":"2023-11-13"},{"lineNumber":141,"author":{"gitId":"josepholim"},"content":"        assertFalse(ALICE.hashCode() \u003d\u003d BOB.hashCode());","lastModifiedDate":"2023-11-13"},{"lineNumber":142,"author":{"gitId":"josepholim"},"content":"    }","lastModifiedDate":"2023-11-13"},{"lineNumber":143,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        String expected \u003d Person.class.getCanonicalName() + \"{name\u003d\" + ALICE.getName() + \", phone\u003d\" + ALICE.getPhone()","lastModifiedDate":"2019-02-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"                + \", email\u003d\" + ALICE.getEmail() + \", address\u003d\" + ALICE.getAddress() + \", tags\u003d\" + ALICE.getTags() + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        assertEquals(expected, ALICE.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"zekone":14,"AndrewJanong":4,"-":96,"josepholim":36}},{"path":"src/test/java/seedu/address/model/person/PhoneTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2017-01-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class PhoneTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Phone(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidPhone_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidPhone \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Phone(invalidPhone));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidPhone() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null phone number","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Phone.isValidPhone(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // invalid phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"91\")); // less than 3 numbers","lastModifiedDate":"2017-05-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"phone\")); // non-numeric","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"9011p041\")); // alphabets within digits","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"9312 1534\")); // spaces within digits","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // valid phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"911\")); // exactly 3 numbers","lastModifiedDate":"2017-05-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"93121534\"));","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"124293842033123\")); // long phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2019-02-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        Phone phone \u003d new Phone(\"999\");","lastModifiedDate":"2019-02-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(phone.equals(new Phone(\"999\")));","lastModifiedDate":"2019-02-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertTrue(phone.equals(phone));","lastModifiedDate":"2019-02-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(phone.equals(null));","lastModifiedDate":"2019-02-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertFalse(phone.equals(5.0f));","lastModifiedDate":"2019-02-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertFalse(phone.equals(new Phone(\"995\")));","lastModifiedDate":"2019-02-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":60,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":61,"author":{"gitId":"josepholim"},"content":"    @Test","lastModifiedDate":"2023-11-13"},{"lineNumber":62,"author":{"gitId":"josepholim"},"content":"    public void hashCodeMethod() {","lastModifiedDate":"2023-11-13"},{"lineNumber":63,"author":{"gitId":"josepholim"},"content":"        Phone phone \u003d new Phone(\"999\");","lastModifiedDate":"2023-11-13"},{"lineNumber":64,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":65,"author":{"gitId":"josepholim"},"content":"        // same values","lastModifiedDate":"2023-11-13"},{"lineNumber":66,"author":{"gitId":"josepholim"},"content":"        Phone phoneCopy \u003d new Phone(\"999\");","lastModifiedDate":"2023-11-13"},{"lineNumber":67,"author":{"gitId":"josepholim"},"content":"        assertTrue(phone.hashCode() \u003d\u003d phoneCopy.hashCode());","lastModifiedDate":"2023-11-13"},{"lineNumber":68,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":69,"author":{"gitId":"josepholim"},"content":"        // different values","lastModifiedDate":"2023-11-13"},{"lineNumber":70,"author":{"gitId":"josepholim"},"content":"        Phone otherPhone \u003d new Phone(\"995\");","lastModifiedDate":"2023-11-13"},{"lineNumber":71,"author":{"gitId":"josepholim"},"content":"        assertFalse(phone.hashCode() \u003d\u003d otherPhone.hashCode());","lastModifiedDate":"2023-11-13"},{"lineNumber":72,"author":{"gitId":"josepholim"},"content":"    }","lastModifiedDate":"2023-11-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"-":60,"josepholim":13}},{"path":"src/test/java/seedu/address/model/person/UniquePersonListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2018-08-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2018-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2018-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class UniquePersonListTest {","lastModifiedDate":"2017-09-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final UniquePersonList uniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void contains_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.contains(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void contains_personNotInList_returnsFalse() {","lastModifiedDate":"2018-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(uniquePersonList.contains(ALICE));","lastModifiedDate":"2018-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void contains_personInList_returnsTrue() {","lastModifiedDate":"2018-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertTrue(uniquePersonList.contains(ALICE));","lastModifiedDate":"2018-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void add_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.add(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void add_duplicatePerson_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.add(ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void setPerson_nullTargetPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPerson(null, ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void setPerson_nullEditedPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPerson(ALICE, null));","lastModifiedDate":"2019-03-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void setPerson_targetPersonNotInList_throwsPersonNotFoundException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e uniquePersonList.setPerson(ALICE, ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonIsSamePerson_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasDifferentIdentity_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasNonUniqueIdentity_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        uniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.setPerson(ALICE, BOB));","lastModifiedDate":"2019-03-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public void remove_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.remove(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public void remove_personDoesNotExist_throwsPersonNotFoundException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e uniquePersonList.remove(ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public void remove_existingPerson_removesPerson() {","lastModifiedDate":"2018-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        uniquePersonList.remove(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void setPersons_nullUniquePersonList_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPersons((UniquePersonList) null));","lastModifiedDate":"2019-03-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public void setPersons_uniquePersonList_replacesOwnListWithProvidedUniquePersonList() {","lastModifiedDate":"2018-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        uniquePersonList.setPersons(expectedUniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public void setPersons_nullList_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPersons((List\u003cPerson\u003e) null));","lastModifiedDate":"2019-03-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    public void setPersons_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2018-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e personList \u003d Collections.singletonList(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        uniquePersonList.setPersons(personList);","lastModifiedDate":"2018-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    public void setPersons_listWithDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e listWithDuplicatePersons \u003d Arrays.asList(ALICE, ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.setPersons(listWithDuplicatePersons));","lastModifiedDate":"2019-03-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2018-04-05"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            -\u003e uniquePersonList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-24"},{"lineNumber":149,"author":{"gitId":"josepholim"},"content":"    @Test","lastModifiedDate":"2023-11-13"},{"lineNumber":150,"author":{"gitId":"josepholim"},"content":"    public void equals() {","lastModifiedDate":"2023-11-13"},{"lineNumber":151,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":152,"author":{"gitId":"josepholim"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-11-13"},{"lineNumber":153,"author":{"gitId":"josepholim"},"content":"        assertTrue(uniquePersonList.equals(new UniquePersonList()));","lastModifiedDate":"2023-11-13"},{"lineNumber":154,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":155,"author":{"gitId":"josepholim"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-11-13"},{"lineNumber":156,"author":{"gitId":"josepholim"},"content":"        assertTrue(uniquePersonList.equals(uniquePersonList));","lastModifiedDate":"2023-11-13"},{"lineNumber":157,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":158,"author":{"gitId":"josepholim"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-11-13"},{"lineNumber":159,"author":{"gitId":"josepholim"},"content":"        assertFalse(uniquePersonList.equals(null));","lastModifiedDate":"2023-11-13"},{"lineNumber":160,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":161,"author":{"gitId":"josepholim"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-11-13"},{"lineNumber":162,"author":{"gitId":"josepholim"},"content":"        assertFalse(uniquePersonList.equals(5.0f));","lastModifiedDate":"2023-11-13"},{"lineNumber":163,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":164,"author":{"gitId":"josepholim"},"content":"        UniquePersonList uniquePersonListAlice \u003d new UniquePersonList();","lastModifiedDate":"2023-11-13"},{"lineNumber":165,"author":{"gitId":"josepholim"},"content":"        uniquePersonListAlice.add(ALICE);","lastModifiedDate":"2023-11-13"},{"lineNumber":166,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":167,"author":{"gitId":"josepholim"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2023-11-13"},{"lineNumber":168,"author":{"gitId":"josepholim"},"content":"        assertFalse(uniquePersonList.equals(uniquePersonListAlice));","lastModifiedDate":"2023-11-13"},{"lineNumber":169,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":170,"author":{"gitId":"josepholim"},"content":"        UniquePersonList uniquePersonListBob \u003d new UniquePersonList();","lastModifiedDate":"2023-11-13"},{"lineNumber":171,"author":{"gitId":"josepholim"},"content":"        uniquePersonListBob.add(BOB);","lastModifiedDate":"2023-11-13"},{"lineNumber":172,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":173,"author":{"gitId":"josepholim"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2023-11-13"},{"lineNumber":174,"author":{"gitId":"josepholim"},"content":"        assertFalse(uniquePersonListAlice.equals(uniquePersonListBob));","lastModifiedDate":"2023-11-13"},{"lineNumber":175,"author":{"gitId":"josepholim"},"content":"    }","lastModifiedDate":"2023-11-13"},{"lineNumber":176,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-24"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-24"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        assertEquals(uniquePersonList.asUnmodifiableObservableList().toString(), uniquePersonList.toString());","lastModifiedDate":"2019-02-24"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-24"},{"lineNumber":181,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":182,"author":{"gitId":"josepholim"},"content":"    @Test","lastModifiedDate":"2023-11-13"},{"lineNumber":183,"author":{"gitId":"josepholim"},"content":"    public void hashCodeMethod() {","lastModifiedDate":"2023-11-13"},{"lineNumber":184,"author":{"gitId":"josepholim"},"content":"        assertEquals(uniquePersonList.asUnmodifiableObservableList().hashCode(), uniquePersonList.hashCode());","lastModifiedDate":"2023-11-13"},{"lineNumber":185,"author":{"gitId":"josepholim"},"content":"    }","lastModifiedDate":"2023-11-13"},{"lineNumber":186,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"-":153,"josepholim":33}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedEventTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"zekone"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-10-20"},{"lineNumber":2,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":3,"author":{"gitId":"zekone"},"content":"import static seedu.address.storage.JsonAdaptedEvent.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2023-10-20"},{"lineNumber":4,"author":{"gitId":"zekone"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-20"},{"lineNumber":5,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":6,"author":{"gitId":"zekone"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-20"},{"lineNumber":7,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":8,"author":{"gitId":"zekone"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-10-20"},{"lineNumber":9,"author":{"gitId":"zekone"},"content":"import seedu.address.model.event.EventInformation;","lastModifiedDate":"2023-10-20"},{"lineNumber":10,"author":{"gitId":"zekone"},"content":"import seedu.address.model.event.EventLocation;","lastModifiedDate":"2023-10-20"},{"lineNumber":11,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":12,"author":{"gitId":"zekone"},"content":"public class JsonAdaptedEventTest {","lastModifiedDate":"2023-10-20"},{"lineNumber":13,"author":{"gitId":"zekone"},"content":"    private static final String VALID_NAME \u003d \"Meeting with professor\";","lastModifiedDate":"2023-10-20"},{"lineNumber":14,"author":{"gitId":"zekone"},"content":"    private static final String VALID_START_TIME \u003d \"12:00\";","lastModifiedDate":"2023-10-20"},{"lineNumber":15,"author":{"gitId":"zekone"},"content":"    private static final String VALID_END_TIME \u003d \"01:00\";","lastModifiedDate":"2023-10-20"},{"lineNumber":16,"author":{"gitId":"zekone"},"content":"    private static final String VALID_LOCATION \u003d \"COM 1 Basement\";","lastModifiedDate":"2023-10-20"},{"lineNumber":17,"author":{"gitId":"zekone"},"content":"    private static final String VALID_INFORMATION \u003d \"Discuss the project implementation with the professor\";","lastModifiedDate":"2023-10-20"},{"lineNumber":18,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":19,"author":{"gitId":"zekone"},"content":"    @Test","lastModifiedDate":"2023-10-20"},{"lineNumber":20,"author":{"gitId":"zekone"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2023-10-20"},{"lineNumber":21,"author":{"gitId":"zekone"},"content":"        JsonAdaptedEvent event \u003d new JsonAdaptedEvent(null, VALID_START_TIME, VALID_END_TIME, VALID_LOCATION,","lastModifiedDate":"2023-10-20"},{"lineNumber":22,"author":{"gitId":"zekone"},"content":"                VALID_INFORMATION);","lastModifiedDate":"2023-10-20"},{"lineNumber":23,"author":{"gitId":"zekone"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, \"name\");","lastModifiedDate":"2023-10-20"},{"lineNumber":24,"author":{"gitId":"zekone"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, event::toModelType);","lastModifiedDate":"2023-10-20"},{"lineNumber":25,"author":{"gitId":"zekone"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":26,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":27,"author":{"gitId":"zekone"},"content":"    @Test","lastModifiedDate":"2023-10-20"},{"lineNumber":28,"author":{"gitId":"zekone"},"content":"    public void toModelType_nullStartTime_throwsIllegalValueException() {","lastModifiedDate":"2023-10-20"},{"lineNumber":29,"author":{"gitId":"zekone"},"content":"        JsonAdaptedEvent event \u003d new JsonAdaptedEvent(VALID_NAME, null, VALID_END_TIME, VALID_LOCATION,","lastModifiedDate":"2023-10-20"},{"lineNumber":30,"author":{"gitId":"zekone"},"content":"                VALID_INFORMATION);","lastModifiedDate":"2023-10-20"},{"lineNumber":31,"author":{"gitId":"zekone"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, \"start\");","lastModifiedDate":"2023-10-20"},{"lineNumber":32,"author":{"gitId":"zekone"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, event::toModelType);","lastModifiedDate":"2023-10-20"},{"lineNumber":33,"author":{"gitId":"zekone"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":34,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":35,"author":{"gitId":"zekone"},"content":"    @Test","lastModifiedDate":"2023-10-20"},{"lineNumber":36,"author":{"gitId":"zekone"},"content":"    public void toModelType_nullEndTime_throwsIllegalValueException() {","lastModifiedDate":"2023-10-20"},{"lineNumber":37,"author":{"gitId":"zekone"},"content":"        JsonAdaptedEvent event \u003d new JsonAdaptedEvent(VALID_NAME, VALID_START_TIME, null, VALID_LOCATION,","lastModifiedDate":"2023-10-20"},{"lineNumber":38,"author":{"gitId":"zekone"},"content":"                VALID_INFORMATION);","lastModifiedDate":"2023-10-20"},{"lineNumber":39,"author":{"gitId":"zekone"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, \"end\");","lastModifiedDate":"2023-10-20"},{"lineNumber":40,"author":{"gitId":"zekone"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, event::toModelType);","lastModifiedDate":"2023-10-20"},{"lineNumber":41,"author":{"gitId":"zekone"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":42,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":43,"author":{"gitId":"zekone"},"content":"    @Test","lastModifiedDate":"2023-10-20"},{"lineNumber":44,"author":{"gitId":"zekone"},"content":"    public void toModelType_nullLocation_throwsIllegalValueException() {","lastModifiedDate":"2023-10-20"},{"lineNumber":45,"author":{"gitId":"zekone"},"content":"        JsonAdaptedEvent event \u003d new JsonAdaptedEvent(VALID_NAME, VALID_START_TIME, VALID_END_TIME, null,","lastModifiedDate":"2023-10-20"},{"lineNumber":46,"author":{"gitId":"zekone"},"content":"                VALID_INFORMATION);","lastModifiedDate":"2023-10-20"},{"lineNumber":47,"author":{"gitId":"zekone"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, EventLocation.class.getSimpleName());","lastModifiedDate":"2023-10-20"},{"lineNumber":48,"author":{"gitId":"zekone"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, event::toModelType);","lastModifiedDate":"2023-10-20"},{"lineNumber":49,"author":{"gitId":"zekone"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":50,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":51,"author":{"gitId":"zekone"},"content":"    @Test","lastModifiedDate":"2023-10-20"},{"lineNumber":52,"author":{"gitId":"zekone"},"content":"    public void toModelType_nullInformation_throwsIllegalValueException() {","lastModifiedDate":"2023-10-20"},{"lineNumber":53,"author":{"gitId":"zekone"},"content":"        JsonAdaptedEvent event \u003d new JsonAdaptedEvent(VALID_NAME, VALID_START_TIME, VALID_END_TIME, VALID_LOCATION,","lastModifiedDate":"2023-10-20"},{"lineNumber":54,"author":{"gitId":"zekone"},"content":"                null);","lastModifiedDate":"2023-10-20"},{"lineNumber":55,"author":{"gitId":"zekone"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, EventInformation.class.getSimpleName());","lastModifiedDate":"2023-10-20"},{"lineNumber":56,"author":{"gitId":"zekone"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, event::toModelType);","lastModifiedDate":"2023-10-20"},{"lineNumber":57,"author":{"gitId":"zekone"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":58,"author":{"gitId":"zekone"},"content":"}","lastModifiedDate":"2023-10-20"}],"authorContributionMap":{"zekone":58}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedNoteTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"zekone"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-10-20"},{"lineNumber":2,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":3,"author":{"gitId":"zekone"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-20"},{"lineNumber":4,"author":{"gitId":"zekone"},"content":"import static seedu.address.storage.JsonAdaptedNote.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2023-10-20"},{"lineNumber":5,"author":{"gitId":"zekone"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-20"},{"lineNumber":6,"author":{"gitId":"zekone"},"content":"import static seedu.address.testutil.TypicalNotes.NOTE_A;","lastModifiedDate":"2023-10-20"},{"lineNumber":7,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":8,"author":{"gitId":"zekone"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-20"},{"lineNumber":9,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":10,"author":{"gitId":"zekone"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-10-20"},{"lineNumber":11,"author":{"gitId":"zekone"},"content":"import seedu.address.model.note.NoteContent;","lastModifiedDate":"2023-10-20"},{"lineNumber":12,"author":{"gitId":"zekone"},"content":"import seedu.address.model.note.NoteTitle;","lastModifiedDate":"2023-10-20"},{"lineNumber":13,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":14,"author":{"gitId":"zekone"},"content":"public class JsonAdaptedNoteTest {","lastModifiedDate":"2023-10-20"},{"lineNumber":15,"author":{"gitId":"zekone"},"content":"    private static final String VALID_TITLE \u003d \"Hello World!\";","lastModifiedDate":"2023-10-20"},{"lineNumber":16,"author":{"gitId":"zekone"},"content":"    private static final String VALID_CONTENT \u003d \"CS2103T is the best module I\u0027ve taken.\";","lastModifiedDate":"2023-10-20"},{"lineNumber":17,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":18,"author":{"gitId":"zekone"},"content":"    @Test","lastModifiedDate":"2023-10-20"},{"lineNumber":19,"author":{"gitId":"zekone"},"content":"    public void toModelType_validNoteDetails_returnsNote() throws Exception {","lastModifiedDate":"2023-10-20"},{"lineNumber":20,"author":{"gitId":"zekone"},"content":"        JsonAdaptedNote note \u003d new JsonAdaptedNote(NOTE_A);","lastModifiedDate":"2023-10-20"},{"lineNumber":21,"author":{"gitId":"zekone"},"content":"        assertEquals(NOTE_A, note.toModelType());","lastModifiedDate":"2023-10-20"},{"lineNumber":22,"author":{"gitId":"zekone"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":23,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":24,"author":{"gitId":"zekone"},"content":"    @Test","lastModifiedDate":"2023-10-20"},{"lineNumber":25,"author":{"gitId":"zekone"},"content":"    public void toModelType_nullTitle_throwsIllegalValueException() {","lastModifiedDate":"2023-10-20"},{"lineNumber":26,"author":{"gitId":"zekone"},"content":"        JsonAdaptedNote note \u003d new JsonAdaptedNote(null, VALID_CONTENT);","lastModifiedDate":"2023-10-20"},{"lineNumber":27,"author":{"gitId":"zekone"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, NoteTitle.class.getSimpleName());","lastModifiedDate":"2023-10-20"},{"lineNumber":28,"author":{"gitId":"zekone"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, note::toModelType);","lastModifiedDate":"2023-10-20"},{"lineNumber":29,"author":{"gitId":"zekone"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":30,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":31,"author":{"gitId":"zekone"},"content":"    @Test","lastModifiedDate":"2023-10-20"},{"lineNumber":32,"author":{"gitId":"zekone"},"content":"    public void toModelType_nullContent_throwsIllegalValueException() {","lastModifiedDate":"2023-10-20"},{"lineNumber":33,"author":{"gitId":"zekone"},"content":"        JsonAdaptedNote note \u003d new JsonAdaptedNote(VALID_TITLE, null);","lastModifiedDate":"2023-10-20"},{"lineNumber":34,"author":{"gitId":"zekone"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, NoteContent.class.getSimpleName());","lastModifiedDate":"2023-10-20"},{"lineNumber":35,"author":{"gitId":"zekone"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, note::toModelType);","lastModifiedDate":"2023-10-20"},{"lineNumber":36,"author":{"gitId":"zekone"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":37,"author":{"gitId":"zekone"},"content":"}","lastModifiedDate":"2023-10-20"}],"authorContributionMap":{"zekone":37}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedPersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.storage.JsonAdaptedPerson.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class JsonAdaptedPersonTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d BENSON.getName().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d BENSON.getPhone().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d BENSON.getEmail().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d BENSON.getAddress().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final List\u003cJsonAdaptedTag\u003e VALID_TAGS \u003d BENSON.getTags().stream()","lastModifiedDate":"2023-10-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            .map(JsonAdaptedTag::new)","lastModifiedDate":"2023-10-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2023-10-12"},{"lineNumber":34,"author":{"gitId":"larrywang0701"},"content":"    private static final List\u003cJsonAdaptedNote\u003e VALID_NOTES \u003d BENSON.getNotes().stream()","lastModifiedDate":"2023-10-12"},{"lineNumber":35,"author":{"gitId":"larrywang0701"},"content":"            .map(JsonAdaptedNote::new)","lastModifiedDate":"2023-10-12"},{"lineNumber":36,"author":{"gitId":"larrywang0701"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2023-10-12"},{"lineNumber":37,"author":{"gitId":"larrywang0701"},"content":"    private static final List\u003cJsonAdaptedEvent\u003e VALID_EVENTS \u003d BENSON.getEvents().stream()","lastModifiedDate":"2023-10-12"},{"lineNumber":38,"author":{"gitId":"larrywang0701"},"content":"            .map(JsonAdaptedEvent::new)","lastModifiedDate":"2023-10-12"},{"lineNumber":39,"author":{"gitId":"larrywang0701"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2023-10-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void toModelType_validPersonDetails_returnsPerson() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(BENSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertEquals(BENSON, person.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"larrywang0701"},"content":"                new JsonAdaptedPerson(INVALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_TAGS,","lastModifiedDate":"2023-10-12"},{"lineNumber":51,"author":{"gitId":"larrywang0701"},"content":"                        VALID_NOTES, VALID_EVENTS);","lastModifiedDate":"2023-10-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"larrywang0701"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(null, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_TAGS,","lastModifiedDate":"2023-10-12"},{"lineNumber":59,"author":{"gitId":"larrywang0701"},"content":"                VALID_NOTES, VALID_EVENTS);","lastModifiedDate":"2023-10-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"larrywang0701"},"content":"                new JsonAdaptedPerson(VALID_NAME, INVALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_TAGS,","lastModifiedDate":"2023-10-12"},{"lineNumber":68,"author":{"gitId":"larrywang0701"},"content":"                        VALID_NOTES, VALID_EVENTS);","lastModifiedDate":"2023-10-12"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Phone.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void toModelType_nullPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"larrywang0701"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, null, VALID_EMAIL, VALID_ADDRESS, VALID_TAGS,","lastModifiedDate":"2023-10-12"},{"lineNumber":76,"author":{"gitId":"larrywang0701"},"content":"                VALID_NOTES, VALID_EVENTS);","lastModifiedDate":"2023-10-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void toModelType_invalidEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"larrywang0701"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, INVALID_EMAIL, VALID_ADDRESS, VALID_TAGS,","lastModifiedDate":"2023-10-12"},{"lineNumber":85,"author":{"gitId":"larrywang0701"},"content":"                        VALID_NOTES, VALID_EVENTS);","lastModifiedDate":"2023-10-12"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Email.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public void toModelType_nullEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"larrywang0701"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, null, VALID_ADDRESS, VALID_TAGS,","lastModifiedDate":"2023-10-12"},{"lineNumber":93,"author":{"gitId":"larrywang0701"},"content":"                VALID_NOTES, VALID_EVENTS);","lastModifiedDate":"2023-10-12"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public void toModelType_invalidAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"larrywang0701"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, INVALID_ADDRESS, VALID_TAGS,","lastModifiedDate":"2023-10-12"},{"lineNumber":102,"author":{"gitId":"larrywang0701"},"content":"                        VALID_NOTES, VALID_EVENTS);","lastModifiedDate":"2023-10-12"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Address.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public void toModelType_nullAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"larrywang0701"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, null, VALID_TAGS,","lastModifiedDate":"2023-10-12"},{"lineNumber":110,"author":{"gitId":"larrywang0701"},"content":"                VALID_NOTES, VALID_EVENTS);","lastModifiedDate":"2023-10-12"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public void toModelType_invalidTags_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        List\u003cJsonAdaptedTag\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        invalidTags.add(new JsonAdaptedTag(INVALID_TAG));","lastModifiedDate":"2018-08-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":120,"author":{"gitId":"larrywang0701"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, invalidTags,","lastModifiedDate":"2023-10-12"},{"lineNumber":121,"author":{"gitId":"larrywang0701"},"content":"                        VALID_NOTES, VALID_EVENTS);","lastModifiedDate":"2023-10-12"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"larrywang0701":24,"-":101}},{"path":"src/test/java/seedu/address/testutil/NoteBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"josepholim"},"content":"package seedu.address.testutil;","lastModifiedDate":"2023-10-16"},{"lineNumber":2,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":3,"author":{"gitId":"josepholim"},"content":"import seedu.address.model.note.Note;","lastModifiedDate":"2023-10-16"},{"lineNumber":4,"author":{"gitId":"josepholim"},"content":"import seedu.address.model.note.NoteContent;","lastModifiedDate":"2023-10-16"},{"lineNumber":5,"author":{"gitId":"josepholim"},"content":"import seedu.address.model.note.NoteTitle;","lastModifiedDate":"2023-10-16"},{"lineNumber":6,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":7,"author":{"gitId":"josepholim"},"content":"/**","lastModifiedDate":"2023-10-16"},{"lineNumber":8,"author":{"gitId":"josepholim"},"content":" * A utility class to help with building Note objects.","lastModifiedDate":"2023-10-16"},{"lineNumber":9,"author":{"gitId":"josepholim"},"content":" */","lastModifiedDate":"2023-10-16"},{"lineNumber":10,"author":{"gitId":"josepholim"},"content":"public class NoteBuilder {","lastModifiedDate":"2023-10-16"},{"lineNumber":11,"author":{"gitId":"josepholim"},"content":"    public static final String DEFAULT_TITLE \u003d \"Labrador Park\";","lastModifiedDate":"2023-10-16"},{"lineNumber":12,"author":{"gitId":"josepholim"},"content":"    public static final String DEFAULT_CONTENT \u003d \"Forgot to take picture\";","lastModifiedDate":"2023-10-16"},{"lineNumber":13,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":14,"author":{"gitId":"josepholim"},"content":"    private NoteTitle title;","lastModifiedDate":"2023-10-16"},{"lineNumber":15,"author":{"gitId":"josepholim"},"content":"    private NoteContent content;","lastModifiedDate":"2023-10-16"},{"lineNumber":16,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":17,"author":{"gitId":"josepholim"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":18,"author":{"gitId":"josepholim"},"content":"     * Creates a {@code NoteBuilder} with the default details.","lastModifiedDate":"2023-10-16"},{"lineNumber":19,"author":{"gitId":"josepholim"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":20,"author":{"gitId":"josepholim"},"content":"    public NoteBuilder() {","lastModifiedDate":"2023-10-16"},{"lineNumber":21,"author":{"gitId":"josepholim"},"content":"        title \u003d NoteTitle.fromString(DEFAULT_TITLE);","lastModifiedDate":"2023-10-16"},{"lineNumber":22,"author":{"gitId":"josepholim"},"content":"        content \u003d NoteContent.fromString(DEFAULT_CONTENT);","lastModifiedDate":"2023-10-16"},{"lineNumber":23,"author":{"gitId":"josepholim"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":24,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":25,"author":{"gitId":"josepholim"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":26,"author":{"gitId":"josepholim"},"content":"     * Initializes the NoteBuilder with the data of {@code noteToCopy}.","lastModifiedDate":"2023-10-16"},{"lineNumber":27,"author":{"gitId":"josepholim"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":28,"author":{"gitId":"josepholim"},"content":"    public NoteBuilder(Note noteToCopy) {","lastModifiedDate":"2023-10-16"},{"lineNumber":29,"author":{"gitId":"josepholim"},"content":"        title \u003d NoteTitle.fromString(noteToCopy.getTitle());","lastModifiedDate":"2023-10-16"},{"lineNumber":30,"author":{"gitId":"josepholim"},"content":"        content \u003d NoteContent.fromString(noteToCopy.getContent());","lastModifiedDate":"2023-10-16"},{"lineNumber":31,"author":{"gitId":"josepholim"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":32,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":33,"author":{"gitId":"josepholim"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":34,"author":{"gitId":"josepholim"},"content":"     * Sets the {@code Title} of the {@code Note} that we are building.","lastModifiedDate":"2023-10-16"},{"lineNumber":35,"author":{"gitId":"josepholim"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":36,"author":{"gitId":"josepholim"},"content":"    public NoteBuilder withTitle(String title) {","lastModifiedDate":"2023-10-16"},{"lineNumber":37,"author":{"gitId":"josepholim"},"content":"        this.title \u003d NoteTitle.fromString(title);","lastModifiedDate":"2023-10-16"},{"lineNumber":38,"author":{"gitId":"josepholim"},"content":"        return this;","lastModifiedDate":"2023-10-16"},{"lineNumber":39,"author":{"gitId":"josepholim"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":40,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":41,"author":{"gitId":"josepholim"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":42,"author":{"gitId":"josepholim"},"content":"     * Sets the {@code Content} of the {@code Note} that we are building.","lastModifiedDate":"2023-10-16"},{"lineNumber":43,"author":{"gitId":"josepholim"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":44,"author":{"gitId":"josepholim"},"content":"    public NoteBuilder withContent(String content) {","lastModifiedDate":"2023-10-16"},{"lineNumber":45,"author":{"gitId":"josepholim"},"content":"        this.content \u003d NoteContent.fromString(content);","lastModifiedDate":"2023-10-16"},{"lineNumber":46,"author":{"gitId":"josepholim"},"content":"        return this;","lastModifiedDate":"2023-10-16"},{"lineNumber":47,"author":{"gitId":"josepholim"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":48,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":49,"author":{"gitId":"josepholim"},"content":"    public Note build() {","lastModifiedDate":"2023-10-16"},{"lineNumber":50,"author":{"gitId":"josepholim"},"content":"        return new Note(title.toString(), content.toString());","lastModifiedDate":"2023-10-16"},{"lineNumber":51,"author":{"gitId":"josepholim"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":52,"author":{"gitId":"josepholim"},"content":"}","lastModifiedDate":"2023-10-16"}],"authorContributionMap":{"josepholim":52}},{"path":"src/test/java/seedu/address/testutil/PersonBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":3,"author":{"gitId":"larrywang0701"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-12-20"},{"lineNumber":5,"author":{"gitId":"larrywang0701"},"content":"import java.util.List;","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-04-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":8,"author":{"gitId":"larrywang0701"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"larrywang0701"},"content":"import seedu.address.model.note.Note;","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-01-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-01-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-01-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-04-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-01-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-04-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2017-04-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * A utility class to help with building Person objects.","lastModifiedDate":"2017-04-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class PersonBuilder {","lastModifiedDate":"2016-09-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2020-12-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_PHONE \u003d \"85355255\";","lastModifiedDate":"2017-04-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_EMAIL \u003d \"amy@gmail.com\";","lastModifiedDate":"2020-12-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_ADDRESS \u003d \"123, Jurong West Ave 6, #08-111\";","lastModifiedDate":"2017-04-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Address address;","lastModifiedDate":"2017-12-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-12-20"},{"lineNumber":33,"author":{"gitId":"larrywang0701"},"content":"    private List\u003cNote\u003e notes;","lastModifiedDate":"2023-10-12"},{"lineNumber":34,"author":{"gitId":"larrywang0701"},"content":"    private List\u003cEvent\u003e events;","lastModifiedDate":"2023-10-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonBuilder} with the default details.","lastModifiedDate":"2020-05-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public PersonBuilder() {","lastModifiedDate":"2017-08-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2017-12-20"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2017-12-20"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        email \u003d new Email(DEFAULT_EMAIL);","lastModifiedDate":"2017-12-20"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        address \u003d new Address(DEFAULT_ADDRESS);","lastModifiedDate":"2017-12-20"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":45,"author":{"gitId":"larrywang0701"},"content":"        notes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-12"},{"lineNumber":46,"author":{"gitId":"larrywang0701"},"content":"        events \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-11"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Initializes the PersonBuilder with the data of {@code personToCopy}.","lastModifiedDate":"2016-12-11"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-11"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public PersonBuilder(Person personToCopy) {","lastModifiedDate":"2018-01-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        name \u003d personToCopy.getName();","lastModifiedDate":"2017-12-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        phone \u003d personToCopy.getPhone();","lastModifiedDate":"2017-12-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        email \u003d personToCopy.getEmail();","lastModifiedDate":"2017-12-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        address \u003d personToCopy.getAddress();","lastModifiedDate":"2017-12-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e(personToCopy.getTags());","lastModifiedDate":"2017-12-20"},{"lineNumber":58,"author":{"gitId":"larrywang0701"},"content":"        notes \u003d new ArrayList\u003c\u003e(personToCopy.getNotes());","lastModifiedDate":"2023-10-12"},{"lineNumber":59,"author":{"gitId":"larrywang0701"},"content":"        events \u003d new ArrayList\u003c\u003e(personToCopy.getEvents());","lastModifiedDate":"2023-10-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-11"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-11"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public PersonBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2017-12-20"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public PersonBuilder withTags(String ... tags) {","lastModifiedDate":"2017-08-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2017-12-20"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Sets the {@code Address} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public PersonBuilder withAddress(String address) {","lastModifiedDate":"2017-08-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        this.address \u003d new Address(address);","lastModifiedDate":"2017-12-20"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public PersonBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        this.phone \u003d new Phone(phone);","lastModifiedDate":"2017-12-20"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public PersonBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        this.email \u003d new Email(email);","lastModifiedDate":"2017-12-20"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public Person build() {","lastModifiedDate":"2017-04-05"},{"lineNumber":103,"author":{"gitId":"larrywang0701"},"content":"        return new Person(name, phone, email, address, tags, notes, events);","lastModifiedDate":"2023-10-12"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":106,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-03"}],"authorContributionMap":{"larrywang0701":11,"-":95}},{"path":"src/test/java/seedu/address/testutil/PersonUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"larrywang0701"},"content":"import seedu.address.logic.commands.AddPersonCommand;","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-04-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * A utility class for Person.","lastModifiedDate":"2017-04-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-04-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class PersonUtil {","lastModifiedDate":"2017-04-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Returns an add command string for adding the {@code person}.","lastModifiedDate":"2017-04-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static String getAddCommand(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":22,"author":{"gitId":"larrywang0701"},"content":"        return AddCommand.COMMAND_WORD + \" \" + AddPersonCommand.SECONDARY_COMMAND_WORD + \" \" + getPersonDetails(person);","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code person}\u0027s details.","lastModifiedDate":"2017-04-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static String getPersonDetails(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-04-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_NAME + person.getName().fullName + \" \");","lastModifiedDate":"2017-06-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_PHONE + person.getPhone().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_EMAIL + person.getEmail().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_ADDRESS + person.getAddress().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        person.getTags().stream().forEach(","lastModifiedDate":"2017-05-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            s -\u003e sb.append(PREFIX_TAG + s.tagName + \" \")","lastModifiedDate":"2017-05-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        );","lastModifiedDate":"2017-05-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-04-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-04-05"}],"authorContributionMap":{"larrywang0701":2,"-":37}},{"path":"src/test/java/seedu/address/testutil/TagBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"zekone"},"content":"package seedu.address.testutil;","lastModifiedDate":"2023-10-27"},{"lineNumber":2,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":3,"author":{"gitId":"zekone"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-10-27"},{"lineNumber":4,"author":{"gitId":"zekone"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-27"},{"lineNumber":5,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":6,"author":{"gitId":"zekone"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-10-27"},{"lineNumber":7,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":8,"author":{"gitId":"zekone"},"content":"/**","lastModifiedDate":"2023-10-27"},{"lineNumber":9,"author":{"gitId":"zekone"},"content":" * A utility class to help with building Tag objects.","lastModifiedDate":"2023-10-27"},{"lineNumber":10,"author":{"gitId":"zekone"},"content":" */","lastModifiedDate":"2023-10-27"},{"lineNumber":11,"author":{"gitId":"zekone"},"content":"public class TagBuilder {","lastModifiedDate":"2023-10-27"},{"lineNumber":12,"author":{"gitId":"zekone"},"content":"    public static final String DEFAULT_TAG \u003d \"Frontend\";","lastModifiedDate":"2023-10-27"},{"lineNumber":13,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":14,"author":{"gitId":"zekone"},"content":"    private String tag;","lastModifiedDate":"2023-10-27"},{"lineNumber":15,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":16,"author":{"gitId":"zekone"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":17,"author":{"gitId":"zekone"},"content":"     * Creates a {@code TagBuilder} with the default details.","lastModifiedDate":"2023-10-27"},{"lineNumber":18,"author":{"gitId":"zekone"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":19,"author":{"gitId":"zekone"},"content":"    public TagBuilder() {","lastModifiedDate":"2023-10-27"},{"lineNumber":20,"author":{"gitId":"zekone"},"content":"        this.tag \u003d DEFAULT_TAG;","lastModifiedDate":"2023-10-27"},{"lineNumber":21,"author":{"gitId":"zekone"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":22,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":23,"author":{"gitId":"zekone"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":24,"author":{"gitId":"zekone"},"content":"     * Initializes the TagBuilder with the data of {@code tagToCopy}.","lastModifiedDate":"2023-10-27"},{"lineNumber":25,"author":{"gitId":"zekone"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":26,"author":{"gitId":"zekone"},"content":"    public TagBuilder(Tag tagToCopy) {","lastModifiedDate":"2023-10-27"},{"lineNumber":27,"author":{"gitId":"zekone"},"content":"        this.tag \u003d tagToCopy.tagName;","lastModifiedDate":"2023-10-27"},{"lineNumber":28,"author":{"gitId":"zekone"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":29,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":30,"author":{"gitId":"zekone"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":31,"author":{"gitId":"zekone"},"content":"     * Sets the tag that we are building.","lastModifiedDate":"2023-10-27"},{"lineNumber":32,"author":{"gitId":"zekone"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":33,"author":{"gitId":"zekone"},"content":"    public TagBuilder withTag(String tag) {","lastModifiedDate":"2023-10-27"},{"lineNumber":34,"author":{"gitId":"zekone"},"content":"        this.tag \u003d tag;","lastModifiedDate":"2023-10-27"},{"lineNumber":35,"author":{"gitId":"zekone"},"content":"        return this;","lastModifiedDate":"2023-10-27"},{"lineNumber":36,"author":{"gitId":"zekone"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":37,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":38,"author":{"gitId":"zekone"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":39,"author":{"gitId":"zekone"},"content":"     * Returns the built {@code Tag} in a {@code Set}.","lastModifiedDate":"2023-10-27"},{"lineNumber":40,"author":{"gitId":"zekone"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":41,"author":{"gitId":"zekone"},"content":"    public Set\u003cTag\u003e inSet() {","lastModifiedDate":"2023-10-27"},{"lineNumber":42,"author":{"gitId":"zekone"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-10-27"},{"lineNumber":43,"author":{"gitId":"zekone"},"content":"        tagSet.add(this.build());","lastModifiedDate":"2023-10-27"},{"lineNumber":44,"author":{"gitId":"zekone"},"content":"        return tagSet;","lastModifiedDate":"2023-10-27"},{"lineNumber":45,"author":{"gitId":"zekone"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":46,"author":{"gitId":"zekone"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":47,"author":{"gitId":"zekone"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":48,"author":{"gitId":"zekone"},"content":"     * Returns the built {@code Tag}.","lastModifiedDate":"2023-10-27"},{"lineNumber":49,"author":{"gitId":"zekone"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":50,"author":{"gitId":"zekone"},"content":"    public Tag build() {","lastModifiedDate":"2023-10-27"},{"lineNumber":51,"author":{"gitId":"zekone"},"content":"        return new Tag(this.tag);","lastModifiedDate":"2023-10-27"},{"lineNumber":52,"author":{"gitId":"zekone"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":53,"author":{"gitId":"zekone"},"content":"}","lastModifiedDate":"2023-10-27"}],"authorContributionMap":{"zekone":53}},{"path":"src/test/java/seedu/address/testutil/TypicalNotes.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"josepholim"},"content":"package seedu.address.testutil;","lastModifiedDate":"2023-10-16"},{"lineNumber":2,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":3,"author":{"gitId":"josepholim"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-16"},{"lineNumber":4,"author":{"gitId":"josepholim"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-10-16"},{"lineNumber":5,"author":{"gitId":"josepholim"},"content":"import java.util.List;","lastModifiedDate":"2023-10-16"},{"lineNumber":6,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":7,"author":{"gitId":"josepholim"},"content":"import seedu.address.model.note.Note;","lastModifiedDate":"2023-10-16"},{"lineNumber":8,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":9,"author":{"gitId":"josepholim"},"content":"/**","lastModifiedDate":"2023-10-16"},{"lineNumber":10,"author":{"gitId":"josepholim"},"content":" * A utility class containing a list of {@code Note} objects to be used in tests.","lastModifiedDate":"2023-10-16"},{"lineNumber":11,"author":{"gitId":"josepholim"},"content":" */","lastModifiedDate":"2023-10-16"},{"lineNumber":12,"author":{"gitId":"josepholim"},"content":"public class TypicalNotes {","lastModifiedDate":"2023-10-16"},{"lineNumber":13,"author":{"gitId":"josepholim"},"content":"    public static final Note NOTE_A \u003d new NoteBuilder().withTitle(\"Preferred Qualifications\")","lastModifiedDate":"2023-10-16"},{"lineNumber":14,"author":{"gitId":"josepholim"},"content":"            .withContent(\"Machine Learning Frameworks\").build();","lastModifiedDate":"2023-10-16"},{"lineNumber":15,"author":{"gitId":"josepholim"},"content":"    public static final Note NOTE_B \u003d new NoteBuilder().withTitle(\"Preferred Major\")","lastModifiedDate":"2023-10-16"},{"lineNumber":16,"author":{"gitId":"josepholim"},"content":"            .withContent(\"Computer Science\").build();","lastModifiedDate":"2023-10-16"},{"lineNumber":17,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":18,"author":{"gitId":"josepholim"},"content":"    private TypicalNotes() {} // prevents instantiation","lastModifiedDate":"2023-10-16"},{"lineNumber":19,"author":{"gitId":"josepholim"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":20,"author":{"gitId":"josepholim"},"content":"    public static List\u003cNote\u003e getTypicalNotes() {","lastModifiedDate":"2023-10-16"},{"lineNumber":21,"author":{"gitId":"josepholim"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(NOTE_A, NOTE_B));","lastModifiedDate":"2023-10-16"},{"lineNumber":22,"author":{"gitId":"josepholim"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":23,"author":{"gitId":"josepholim"},"content":"}","lastModifiedDate":"2023-10-16"}],"authorContributionMap":{"josepholim":23}},{"path":"src/test/java/seedu/address/testutil/TypicalPersons.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-08-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-08-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-08-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-08-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-08-07"},{"lineNumber":17,"author":{"gitId":"larrywang0701"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-11-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Person} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class TypicalPersons {","lastModifiedDate":"2017-04-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static final Person ALICE \u003d new PersonBuilder().withName(\"Alice Pauline\")","lastModifiedDate":"2018-01-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            .withAddress(\"123, Jurong West Ave 6, #08-111\").withEmail(\"alice@example.com\")","lastModifiedDate":"2017-04-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            .withPhone(\"94351253\")","lastModifiedDate":"2018-04-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            .withTags(\"friends\").build();","lastModifiedDate":"2016-09-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static final Person BENSON \u003d new PersonBuilder().withName(\"Benson Meier\")","lastModifiedDate":"2018-01-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            .withAddress(\"311, Clementi Ave 2, #02-25\")","lastModifiedDate":"2017-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            .withEmail(\"johnd@example.com\").withPhone(\"98765432\")","lastModifiedDate":"2017-04-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            .withTags(\"owesMoney\", \"friends\").build();","lastModifiedDate":"2016-09-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final Person CARL \u003d new PersonBuilder().withName(\"Carl Kurz\").withPhone(\"95352563\")","lastModifiedDate":"2018-01-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            .withEmail(\"heinz@example.com\").withAddress(\"wall street\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final Person DANIEL \u003d new PersonBuilder().withName(\"Daniel Meier\").withPhone(\"87652533\")","lastModifiedDate":"2018-01-10"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            .withEmail(\"cornelia@example.com\").withAddress(\"10th street\").withTags(\"friends\").build();","lastModifiedDate":"2018-03-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final Person ELLE \u003d new PersonBuilder().withName(\"Elle Meyer\").withPhone(\"9482224\")","lastModifiedDate":"2018-01-10"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            .withEmail(\"werner@example.com\").withAddress(\"michegan ave\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static final Person FIONA \u003d new PersonBuilder().withName(\"Fiona Kunz\").withPhone(\"9482427\")","lastModifiedDate":"2018-01-10"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            .withEmail(\"lydia@example.com\").withAddress(\"little tokyo\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static final Person GEORGE \u003d new PersonBuilder().withName(\"George Best\").withPhone(\"9482442\")","lastModifiedDate":"2018-01-10"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            .withEmail(\"anna@example.com\").withAddress(\"4th street\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    // Manually added","lastModifiedDate":"2016-09-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static final Person HOON \u003d new PersonBuilder().withName(\"Hoon Meier\").withPhone(\"8482424\")","lastModifiedDate":"2018-01-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            .withEmail(\"stefan@example.com\").withAddress(\"little india\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static final Person IDA \u003d new PersonBuilder().withName(\"Ida Mueller\").withPhone(\"8482131\")","lastModifiedDate":"2018-01-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            .withEmail(\"hans@example.com\").withAddress(\"chicago ave\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    // Manually added - Person\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2017-08-22"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static final Person AMY \u003d new PersonBuilder().withName(VALID_NAME_AMY).withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2018-01-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            .withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static final Person BOB \u003d new PersonBuilder().withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2018-01-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            .withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND)","lastModifiedDate":"2017-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            .build();","lastModifiedDate":"2017-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2017-09-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    private TypicalPersons() {} // prevents instantiation","lastModifiedDate":"2017-07-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Returns an {@code AddressBook} with all the typical persons.","lastModifiedDate":"2017-08-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public static AddressBook getTypicalAddressBook() {","lastModifiedDate":"2017-08-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2017-08-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        for (Person person : getTypicalPersons()) {","lastModifiedDate":"2018-01-10"},{"lineNumber":69,"author":{"gitId":"larrywang0701"},"content":"            ab.addPerson(copyTypicalPerson(person));","lastModifiedDate":"2023-11-01"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return ab;","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-04"},{"lineNumber":74,"author":{"gitId":"larrywang0701"},"content":"    /**","lastModifiedDate":"2023-11-10"},{"lineNumber":75,"author":{"gitId":"larrywang0701"},"content":"     * Use this function to make sure that for every test cases, we use complete new Person instances.","lastModifiedDate":"2023-11-10"},{"lineNumber":76,"author":{"gitId":"larrywang0701"},"content":"     * This can prevent unintentionally sharing and reusing of the typical person instances between","lastModifiedDate":"2023-11-10"},{"lineNumber":77,"author":{"gitId":"larrywang0701"},"content":"     * different test cases.","lastModifiedDate":"2023-11-10"},{"lineNumber":78,"author":{"gitId":"larrywang0701"},"content":"     * @param typicalPerson The typical person instance you want to copy","lastModifiedDate":"2023-11-10"},{"lineNumber":79,"author":{"gitId":"larrywang0701"},"content":"     * @return The copied typical person instance","lastModifiedDate":"2023-11-10"},{"lineNumber":80,"author":{"gitId":"larrywang0701"},"content":"     */","lastModifiedDate":"2023-11-10"},{"lineNumber":81,"author":{"gitId":"larrywang0701"},"content":"    public static Person copyTypicalPerson(Person typicalPerson) {","lastModifiedDate":"2023-11-10"},{"lineNumber":82,"author":{"gitId":"larrywang0701"},"content":"        List\u003cString\u003e tagList \u003d typicalPerson.getTags().stream().map(tag -\u003e tag.tagName).collect(Collectors.toList());","lastModifiedDate":"2023-11-01"},{"lineNumber":83,"author":{"gitId":"larrywang0701"},"content":"        return new PersonBuilder()","lastModifiedDate":"2023-11-01"},{"lineNumber":84,"author":{"gitId":"larrywang0701"},"content":"                .withName(typicalPerson.getName().toString())","lastModifiedDate":"2023-11-01"},{"lineNumber":85,"author":{"gitId":"larrywang0701"},"content":"                .withEmail(typicalPerson.getEmail().toString())","lastModifiedDate":"2023-11-01"},{"lineNumber":86,"author":{"gitId":"larrywang0701"},"content":"                .withAddress(typicalPerson.getAddress().toString())","lastModifiedDate":"2023-11-01"},{"lineNumber":87,"author":{"gitId":"larrywang0701"},"content":"                .withPhone(typicalPerson.getPhone().toString())","lastModifiedDate":"2023-11-01"},{"lineNumber":88,"author":{"gitId":"larrywang0701"},"content":"                .withTags(tagList.toArray(new String[tagList.size()]))","lastModifiedDate":"2023-11-01"},{"lineNumber":89,"author":{"gitId":"larrywang0701"},"content":"                .build();","lastModifiedDate":"2023-11-01"},{"lineNumber":90,"author":{"gitId":"larrywang0701"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":91,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public static List\u003cPerson\u003e getTypicalPersons() {","lastModifiedDate":"2018-01-10"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));","lastModifiedDate":"2017-08-07"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-08-04"},{"lineNumber":95,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-13"}],"authorContributionMap":{"larrywang0701":20,"-":75}}]
